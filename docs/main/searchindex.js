Search.setIndex({"docnames": ["_dynamo", "amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "compile/custom-backends", "compile/deep-dive", "compile/faq", "compile/generated/torch.compile", "compile/get-started", "compile/guards-overview", "compile/index", "compile/nn-module", "compile/performance-dashboard", "compile/technical-overview", "compile/transformations", "compile/troubleshooting", "complex_numbers", "config_mod", "cpp_extension", "cpp_index", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx", "generated/onnx_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.set_multithreading_enabled", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.ExportOptions", "generated/torch.onnx.ExportOutput", "generated/torch.onnx.ExportOutputSerializer", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "ir", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_diagnostics", "onnx_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "type_info"], "filenames": ["_dynamo.rst", "amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "compile/custom-backends.rst", "compile/deep-dive.rst", "compile/faq.rst", "compile/generated/torch.compile.rst", "compile/get-started.rst", "compile/guards-overview.rst", "compile/index.rst", "compile/nn-module.rst", "compile/performance-dashboard.rst", "compile/technical-overview.rst", "compile/transformations.rst", "compile/troubleshooting.rst", "complex_numbers.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose.md", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success.md", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure.md", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd.md", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid.md", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node.md", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx.md", "generated/onnx_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference.md", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.set_multithreading_enabled.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.ExportOptions.rst", "generated/torch.onnx.ExportOutput.rst", "generated/torch.onnx.ExportOutputSerializer.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "ir.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_diagnostics.rst", "onnx_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.overrides.rst", "type_info.rst"], "titles": ["torch._dynamo", "Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Custom Backends", "TorchDynamo Deeper Dive", "Frequently Asked Questions", "torch.compile", "Getting Started", "Guards Overview", "torch.compile", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Technical Overview", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "Complex Numbers", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "DIAGSYS0001:arg-format-too-verbose", "FXE0001:fx-tracer-success", "FXE0002:fx-tracer-failure", "FXE0003:fx-frontend-aotautograd", "FXE0004:fx-pass-convert-neg-to-sigmoid", "FXE0005:fx-ir-add-node", "FXE0006:atenlib-symbolic-function", "FXE0007:atenlib-fx-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0009:fx-frontend-dynamo-make-fx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "POE0001:node-missing-onnx-shape-inference", "POE0002:missing-custom-symbolic-function", "POE0003:missing-standard-symbolic-function", "POE0004:operator-supported-in-newer-opset-version", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "set_multithreading_enabled", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "ExportOptions", "ExportOutput", "ExportOutputSerializer", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "IRs", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "torch.onnx diagnostics", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "Type Info"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 64, 65, 77, 78, 79, 114, 145, 149, 190, 191, 201, 204, 216, 217, 218, 249, 254, 283, 284, 307, 315, 317, 329, 331, 334, 346, 438, 439, 440, 441, 442, 451, 479, 480, 485, 487, 488, 489, 490, 491, 492, 495, 496, 505, 507, 509, 515, 547, 557, 574, 575, 576, 578, 579, 580, 594, 595, 605, 608, 609, 671, 675, 677, 680, 684, 685, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 726, 727, 728, 735, 739, 740, 741, 742, 743, 744, 745, 746, 748, 750, 751, 766, 767, 768, 769, 770, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 790, 791, 793, 801, 802, 803, 804, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 845, 850, 852, 853, 865, 866, 867, 868, 869, 876, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 904, 905, 908, 911, 912, 915, 917, 920, 924, 925, 932, 934, 935, 938, 939, 941, 949, 950, 952, 957, 958, 959, 960, 961, 963, 964, 965, 968, 979, 981, 984, 985, 986, 988, 989, 992, 993, 994, 995, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1015, 1021, 1022, 1024, 1025, 1026, 1030, 1031, 1032, 1038, 1039, 1040, 1045, 1047, 1048, 1052, 1055, 1056, 1057, 1061, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1108, 1110, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1129, 1130, 1131, 1137, 1141, 1147, 1149, 1159, 1171, 1181, 1182, 1184, 1185, 1187, 1189, 1190, 1191, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1259, 1261, 1264, 1273, 1274, 1278, 1281, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1297, 1298, 1308, 1311, 1312, 1313, 1314, 1316, 1324, 1328, 1332, 1333, 1334, 1335, 1336, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1365, 1368, 1369, 1371, 1376, 1377, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1401, 1403, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1419, 1422, 1423, 1426, 1428, 1431, 1432, 1444, 1447, 1449, 1452, 1455, 1461, 1462, 1463, 1464, 1467, 1468, 1469, 1470, 1480, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1510, 1511, 1515, 1517, 1519, 1526, 1532, 1534, 1539, 1540, 1541, 1551, 1553, 1555, 1565, 1571, 1572, 1580, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1636, 1637, 1638, 1640, 1641, 1643, 1644, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1680, 1681, 1683, 1685, 1687, 1689, 1690, 1691, 1695, 1699, 1701, 1708, 1712, 1717, 1721, 1723, 1730, 1737, 1739, 1740, 1741, 1743, 1744, 1745, 1747, 1750, 1752, 1753, 1771, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1794, 1796, 1797, 1798, 1801, 1802, 1804, 1805, 1811, 1813, 1817, 1819, 1823, 1825, 1833, 1834, 1835, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923], "modul": [0, 1, 2, 4, 6, 7, 9, 12, 14, 15, 18, 22, 23, 24, 26, 29, 33, 35, 37, 39, 40, 44, 46, 49, 52, 53, 57, 58, 60, 480, 671, 677, 680, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 729, 730, 731, 736, 737, 738, 747, 752, 753, 754, 755, 756, 779, 780, 781, 782, 783, 784, 788, 790, 791, 793, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 829, 830, 831, 845, 848, 849, 850, 851, 852, 853, 855, 904, 905, 912, 924, 944, 1003, 1113, 1122, 1123, 1125, 1159, 1182, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1199, 1200, 1201, 1255, 1278, 1288, 1324, 1328, 1334, 1335, 1336, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1369, 1371, 1379, 1380, 1381, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1417, 1418, 1426, 1427, 1432, 1444, 1449, 1455, 1459, 1506, 1507, 1580, 1587, 1596, 1597, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1632, 1636, 1637, 1638, 1640, 1672, 1733, 1777, 1844, 1851, 1852, 1858, 1863, 1865, 1867, 1869, 1871, 1872, 1875, 1879, 1880, 1881, 1884, 1887, 1889, 1890, 1892, 1894, 1895, 1898, 1900, 1901, 1904, 1905, 1907, 1910, 1911, 1912, 1916, 1919, 1920, 1921, 1922], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 77, 78, 79, 82, 83, 92, 145, 148, 149, 150, 165, 167, 170, 173, 174, 175, 185, 186, 190, 191, 201, 203, 204, 213, 218, 234, 248, 249, 261, 284, 291, 305, 307, 309, 313, 315, 317, 319, 322, 323, 324, 325, 326, 327, 329, 330, 332, 334, 335, 336, 337, 346, 387, 394, 396, 400, 441, 451, 464, 465, 474, 476, 479, 480, 485, 487, 488, 489, 490, 491, 492, 495, 496, 505, 507, 509, 512, 515, 516, 528, 534, 535, 536, 548, 551, 571, 572, 574, 575, 576, 578, 579, 580, 594, 595, 598, 605, 608, 609, 611, 615, 671, 672, 674, 675, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 718, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 759, 760, 763, 764, 765, 766, 767, 768, 769, 770, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 790, 792, 793, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 815, 817, 818, 824, 829, 830, 831, 848, 849, 850, 852, 853, 856, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 904, 905, 908, 911, 912, 913, 914, 915, 917, 920, 922, 924, 925, 928, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 972, 974, 977, 978, 979, 981, 985, 986, 989, 992, 993, 994, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1067, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1137, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1154, 1158, 1159, 1161, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1185, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1203, 1204, 1205, 1207, 1208, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1266, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1304, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1447, 1448, 1449, 1451, 1452, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1480, 1483, 1484, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1526, 1527, 1532, 1534, 1536, 1537, 1539, 1540, 1541, 1550, 1551, 1553, 1555, 1556, 1557, 1558, 1559, 1565, 1568, 1571, 1572, 1580, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1629, 1630, 1631, 1632, 1633, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1691, 1694, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1708, 1710, 1711, 1712, 1714, 1715, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1732, 1733, 1737, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1770, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1796, 1797, 1798, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1863, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923], "an": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 17, 18, 20, 21, 22, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 78, 83, 145, 149, 185, 216, 236, 248, 307, 309, 315, 317, 322, 329, 505, 507, 509, 528, 536, 551, 598, 605, 608, 671, 678, 679, 726, 732, 733, 734, 747, 751, 756, 770, 776, 778, 780, 783, 787, 806, 808, 814, 817, 845, 852, 853, 855, 869, 870, 871, 880, 882, 883, 884, 886, 888, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 906, 907, 908, 915, 931, 941, 944, 949, 950, 952, 958, 960, 961, 963, 970, 971, 972, 973, 974, 992, 993, 1000, 1001, 1003, 1015, 1017, 1027, 1031, 1032, 1042, 1055, 1057, 1059, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1097, 1100, 1108, 1110, 1113, 1114, 1117, 1118, 1119, 1121, 1123, 1125, 1126, 1129, 1137, 1145, 1146, 1147, 1181, 1182, 1184, 1187, 1188, 1191, 1194, 1195, 1197, 1199, 1200, 1201, 1202, 1213, 1214, 1219, 1220, 1225, 1227, 1229, 1232, 1233, 1237, 1240, 1242, 1245, 1246, 1253, 1255, 1256, 1273, 1275, 1278, 1284, 1301, 1306, 1315, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1365, 1368, 1376, 1380, 1381, 1384, 1385, 1386, 1388, 1398, 1399, 1400, 1401, 1403, 1404, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1433, 1435, 1444, 1447, 1449, 1450, 1451, 1455, 1460, 1462, 1463, 1464, 1467, 1469, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1490, 1491, 1492, 1493, 1494, 1495, 1500, 1506, 1507, 1509, 1510, 1511, 1515, 1526, 1533, 1534, 1536, 1537, 1539, 1540, 1541, 1565, 1569, 1584, 1586, 1587, 1590, 1596, 1600, 1601, 1602, 1603, 1606, 1607, 1608, 1615, 1632, 1639, 1641, 1643, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1701, 1706, 1707, 1708, 1727, 1729, 1733, 1741, 1744, 1753, 1759, 1779, 1782, 1783, 1787, 1790, 1798, 1802, 1816, 1817, 1833, 1834, 1835, 1837, 1842, 1843, 1844, 1845, 1850, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923], "earli": [0, 17, 29, 33, 43, 64, 1355, 1356, 1357, 1361, 1852, 1902, 1903, 1920, 1921], "prototyp": [0, 29, 35, 671, 892, 894, 898, 899, 900, 1193, 1852, 1863, 1864, 1867, 1871, 1872, 1888, 1893, 1905, 1907, 1914, 1920, 1921], "subject": [0, 3, 4, 18, 20, 24, 29, 35, 39, 40, 57, 64, 65, 856, 1565, 1596, 1857, 1870, 1871, 1877, 1882, 1895, 1896, 1900, 1901, 1902, 1903, 1907, 1914, 1919, 1920, 1921], "chang": [0, 1, 2, 3, 4, 8, 16, 17, 18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 40, 41, 43, 51, 57, 58, 61, 62, 64, 65, 134, 216, 248, 315, 451, 488, 491, 509, 512, 547, 608, 671, 810, 868, 899, 900, 949, 950, 957, 958, 959, 968, 979, 981, 992, 993, 1000, 1001, 1003, 1045, 1093, 1113, 1131, 1137, 1158, 1181, 1184, 1194, 1195, 1214, 1225, 1227, 1228, 1229, 1232, 1245, 1285, 1356, 1359, 1377, 1386, 1416, 1447, 1468, 1480, 1515, 1539, 1540, 1541, 1565, 1587, 1588, 1596, 1598, 1599, 1605, 1608, 1609, 1638, 1642, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1677, 1680, 1681, 1683, 1685, 1687, 1701, 1741, 1745, 1782, 1793, 1796, 1797, 1798, 1822, 1839, 1840, 1851, 1852, 1854, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1879, 1880, 1882, 1883, 1885, 1886, 1888, 1891, 1893, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1907, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921], "allow_in_graph": [0, 1852], "fn": [0, 2, 12, 16, 17, 18, 22, 23, 43, 44, 45, 49, 54, 57, 65, 904, 905, 1115, 1121, 1125, 1184, 1185, 1196, 1201, 1416, 1844, 1854, 1856, 1857, 1861, 1869, 1877, 1887, 1907], "sourc": [0, 1, 2, 3, 4, 5, 6, 10, 14, 15, 17, 23, 25, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 54, 57, 64, 65, 145, 191, 204, 306, 307, 315, 334, 345, 390, 395, 396, 409, 410, 446, 464, 480, 505, 507, 509, 512, 515, 538, 547, 548, 550, 577, 594, 597, 600, 601, 615, 671, 686, 687, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 827, 828, 829, 830, 831, 832, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 864, 877, 878, 879, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 910, 911, 923, 925, 926, 930, 932, 934, 944, 945, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1057, 1061, 1108, 1110, 1126, 1132, 1133, 1136, 1155, 1156, 1157, 1159, 1160, 1165, 1170, 1171, 1172, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1255, 1256, 1276, 1285, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1476, 1480, 1481, 1485, 1487, 1488, 1489, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1512, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1533, 1534, 1536, 1537, 1538, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1558, 1560, 1561, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1576, 1577, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1691, 1708, 1733, 1738, 1741, 1742, 1743, 1744, 1745, 1747, 1750, 1751, 1752, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1777, 1783, 1790, 1798, 1803, 1806, 1807, 1808, 1809, 1810, 1818, 1837, 1851, 1854, 1855, 1856, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1875, 1884, 1886, 1887, 1891, 1895, 1896, 1898, 1900, 1901, 1902, 1906, 1907, 1908, 1913, 1916, 1918, 1919, 1920, 1921, 1922], "custom": [0, 1, 2, 4, 6, 15, 17, 21, 26, 27, 32, 35, 36, 37, 38, 39, 40, 45, 48, 49, 51, 57, 77, 78, 491, 784, 788, 805, 806, 807, 808, 829, 831, 850, 851, 852, 853, 890, 944, 959, 968, 1032, 1184, 1416, 1459, 1464, 1465, 1610, 1619, 1636, 1677, 1852, 1858, 1861, 1863, 1869, 1870, 1877, 1887, 1892, 1893, 1894, 1896, 1905, 1906, 1920], "which": [0, 1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 36, 37, 39, 40, 41, 42, 43, 45, 50, 51, 52, 53, 54, 57, 61, 62, 64, 65, 83, 145, 283, 307, 309, 311, 313, 315, 329, 465, 479, 480, 491, 505, 507, 509, 528, 551, 595, 598, 608, 615, 675, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 751, 755, 772, 781, 782, 788, 790, 810, 814, 817, 829, 845, 848, 849, 850, 852, 867, 871, 876, 883, 884, 885, 886, 892, 893, 894, 895, 896, 897, 898, 904, 905, 908, 915, 928, 931, 934, 938, 944, 954, 955, 956, 957, 958, 963, 970, 971, 972, 973, 974, 985, 986, 987, 1014, 1016, 1021, 1022, 1033, 1035, 1040, 1044, 1045, 1046, 1047, 1048, 1057, 1073, 1078, 1081, 1085, 1088, 1091, 1096, 1097, 1098, 1099, 1100, 1105, 1108, 1113, 1114, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1129, 1146, 1158, 1169, 1175, 1181, 1182, 1184, 1185, 1187, 1193, 1194, 1195, 1199, 1216, 1219, 1220, 1229, 1233, 1235, 1236, 1239, 1240, 1244, 1246, 1247, 1249, 1252, 1253, 1255, 1261, 1277, 1284, 1289, 1306, 1312, 1315, 1316, 1322, 1323, 1324, 1326, 1327, 1328, 1330, 1331, 1334, 1335, 1336, 1339, 1345, 1346, 1348, 1349, 1352, 1353, 1360, 1367, 1368, 1377, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1388, 1402, 1406, 1410, 1411, 1412, 1413, 1414, 1416, 1419, 1421, 1422, 1444, 1447, 1449, 1451, 1455, 1464, 1465, 1497, 1514, 1515, 1517, 1527, 1534, 1552, 1553, 1571, 1572, 1580, 1587, 1596, 1603, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1638, 1640, 1643, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1691, 1703, 1717, 1721, 1723, 1724, 1728, 1730, 1737, 1741, 1750, 1752, 1770, 1775, 1778, 1779, 1781, 1782, 1790, 1793, 1817, 1822, 1823, 1826, 1827, 1828, 1829, 1833, 1834, 1836, 1837, 1844, 1851, 1854, 1856, 1857, 1859, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1892, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923], "function": [0, 1, 3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 37, 39, 40, 42, 43, 45, 49, 50, 52, 53, 57, 60, 62, 64, 78, 83, 114, 145, 190, 254, 283, 292, 315, 480, 485, 488, 509, 532, 547, 671, 680, 684, 685, 689, 690, 739, 748, 749, 751, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 781, 782, 783, 784, 788, 789, 791, 805, 806, 807, 808, 815, 817, 829, 832, 845, 848, 850, 852, 853, 854, 868, 869, 884, 885, 886, 887, 898, 899, 900, 904, 905, 908, 911, 913, 922, 924, 932, 934, 938, 941, 944, 949, 950, 957, 958, 959, 961, 963, 965, 968, 985, 986, 989, 994, 995, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1013, 1014, 1021, 1022, 1024, 1025, 1026, 1030, 1040, 1045, 1047, 1048, 1055, 1057, 1061, 1073, 1074, 1076, 1096, 1100, 1103, 1104, 1105, 1108, 1110, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1130, 1137, 1141, 1142, 1143, 1145, 1147, 1155, 1156, 1157, 1159, 1171, 1181, 1182, 1183, 1184, 1185, 1187, 1189, 1190, 1194, 1195, 1196, 1197, 1199, 1201, 1203, 1204, 1205, 1207, 1212, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1235, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1259, 1261, 1270, 1273, 1274, 1278, 1281, 1284, 1286, 1288, 1289, 1290, 1308, 1311, 1312, 1328, 1332, 1338, 1339, 1341, 1342, 1343, 1350, 1354, 1358, 1361, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1382, 1384, 1385, 1386, 1387, 1402, 1405, 1406, 1408, 1415, 1416, 1421, 1422, 1424, 1431, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1461, 1463, 1464, 1465, 1467, 1469, 1471, 1472, 1473, 1588, 1592, 1593, 1596, 1603, 1604, 1608, 1619, 1629, 1630, 1631, 1633, 1636, 1637, 1638, 1641, 1643, 1644, 1648, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1666, 1668, 1669, 1670, 1671, 1673, 1676, 1677, 1679, 1682, 1683, 1684, 1689, 1690, 1691, 1695, 1701, 1708, 1712, 1717, 1730, 1739, 1740, 1741, 1744, 1747, 1753, 1761, 1765, 1766, 1771, 1774, 1776, 1777, 1778, 1779, 1781, 1787, 1794, 1798, 1804, 1805, 1813, 1817, 1819, 1823, 1833, 1834, 1835, 1837, 1841, 1842, 1843, 1844, 1845, 1850, 1851, 1852, 1853, 1858, 1861, 1863, 1866, 1867, 1869, 1871, 1875, 1878, 1880, 1881, 1882, 1884, 1887, 1888, 1891, 1893, 1896, 1898, 1899, 1900, 1901, 1902, 1904, 1906, 1907, 1908, 1909, 1914, 1916, 1918, 1919, 1920, 1921], "torchdynamo": [0, 9, 12, 15, 16, 17, 21, 671, 944, 1649, 1852, 1863], "includ": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 16, 19, 20, 23, 26, 27, 32, 33, 35, 37, 49, 52, 53, 57, 65, 78, 315, 509, 574, 759, 760, 850, 852, 1085, 1087, 1145, 1182, 1184, 1185, 1213, 1292, 1293, 1329, 1330, 1331, 1337, 1339, 1353, 1362, 1370, 1403, 1412, 1413, 1414, 1416, 1422, 1460, 1461, 1462, 1463, 1466, 1482, 1483, 1484, 1499, 1512, 1532, 1596, 1630, 1631, 1633, 1766, 1826, 1827, 1828, 1829, 1851, 1854, 1856, 1857, 1864, 1865, 1867, 1869, 1877, 1879, 1880, 1884, 1887, 1888, 1893, 1895, 1901, 1902, 1907, 1909, 1916, 1919, 1922], "gener": [0, 2, 3, 4, 8, 9, 12, 13, 14, 16, 17, 19, 22, 23, 26, 32, 33, 35, 41, 45, 46, 53, 57, 58, 59, 148, 149, 168, 252, 280, 371, 414, 447, 474, 599, 671, 900, 914, 989, 992, 1000, 1001, 1004, 1005, 1024, 1025, 1027, 1028, 1029, 1057, 1079, 1080, 1114, 1125, 1136, 1141, 1160, 1188, 1193, 1204, 1215, 1220, 1229, 1246, 1247, 1251, 1256, 1276, 1284, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1306, 1352, 1363, 1377, 1459, 1467, 1468, 1480, 1587, 1604, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1637, 1644, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1689, 1691, 1694, 1708, 1710, 1712, 1713, 1714, 1716, 1738, 1751, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1803, 1818, 1822, 1838, 1844, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1863, 1865, 1870, 1875, 1877, 1880, 1882, 1884, 1885, 1887, 1888, 1894, 1895, 1898, 1899, 1901, 1906, 1907, 1908, 1911, 1914, 1916, 1918, 1920, 1922], "graph": [0, 6, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 35, 37, 41, 57, 77, 78, 134, 145, 216, 217, 671, 738, 783, 784, 806, 807, 808, 814, 817, 884, 890, 898, 944, 958, 993, 998, 1003, 1114, 1184, 1187, 1188, 1193, 1195, 1199, 1596, 1651, 1653, 1658, 1659, 1852, 1857, 1863, 1865, 1873, 1876, 1881, 1882, 1885, 1888, 1889, 1895, 1899, 1903, 1904, 1905, 1907, 1908, 1909, 1911, 1916, 1921], "similar": [0, 8, 10, 14, 17, 19, 23, 32, 35, 41, 49, 57, 62, 64, 65, 485, 507, 703, 704, 705, 706, 707, 708, 711, 721, 722, 723, 724, 736, 737, 747, 755, 793, 868, 883, 925, 930, 943, 1103, 1104, 1184, 1350, 1351, 1363, 1376, 1379, 1380, 1381, 1416, 1464, 1497, 1629, 1643, 1644, 1672, 1695, 1723, 1730, 1779, 1813, 1819, 1835, 1856, 1857, 1869, 1870, 1872, 1877, 1879, 1880, 1882, 1883, 1885, 1891, 1895, 1899, 1900, 1902, 1907, 1908, 1911, 1912, 1917, 1923], "fx": [0, 9, 12, 13, 14, 16, 17, 21, 22, 23, 77, 738, 806, 807, 808, 809, 851, 1114, 1852, 1896, 1903, 1904], "wrap": [0, 1, 2, 12, 14, 17, 21, 23, 27, 32, 33, 35, 39, 45, 54, 57, 61, 62, 65, 254, 781, 782, 961, 1114, 1184, 1199, 1353, 1416, 1455, 1591, 1596, 1606, 1632, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1854, 1855, 1857, 1864, 1876, 1877, 1880, 1881, 1882, 1883, 1888, 1894, 1895, 1900, 1901, 1902, 1907, 1908, 1919, 1921, 1922], "my_custom_funct": [0, 65], "optim": [0, 1, 2, 3, 8, 9, 12, 14, 15, 17, 21, 23, 24, 26, 27, 33, 35, 36, 37, 41, 57, 65, 810, 899, 908, 944, 1057, 1123, 1184, 1188, 1193, 1195, 1199, 1200, 1239, 1256, 1334, 1335, 1336, 1352, 1359, 1379, 1380, 1381, 1416, 1419, 1420, 1421, 1422, 1448, 1455, 1463, 1565, 1587, 1596, 1603, 1608, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1691, 1852, 1854, 1856, 1865, 1871, 1875, 1879, 1880, 1881, 1882, 1884, 1885, 1888, 1890, 1895, 1901, 1902, 1911], "def": [0, 1, 2, 12, 14, 15, 16, 17, 18, 22, 23, 32, 33, 35, 36, 37, 41, 43, 44, 45, 49, 50, 53, 54, 55, 57, 59, 61, 62, 63, 64, 65, 392, 783, 784, 852, 853, 881, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 944, 1061, 1113, 1114, 1115, 1117, 1118, 1119, 1121, 1123, 1124, 1125, 1159, 1182, 1184, 1185, 1187, 1188, 1189, 1190, 1194, 1195, 1198, 1199, 1200, 1201, 1416, 1417, 1418, 1426, 1427, 1465, 1587, 1596, 1608, 1641, 1650, 1651, 1777, 1844, 1851, 1854, 1856, 1857, 1861, 1871, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1888, 1890, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1907, 1908, 1909, 1922], "x": [0, 1, 2, 4, 12, 13, 14, 15, 16, 17, 18, 23, 24, 26, 32, 33, 35, 41, 43, 49, 57, 59, 60, 62, 63, 64, 65, 168, 248, 252, 280, 283, 305, 307, 309, 311, 315, 346, 371, 441, 476, 485, 491, 549, 551, 574, 598, 599, 608, 683, 749, 751, 761, 770, 771, 775, 776, 787, 790, 793, 811, 812, 852, 853, 869, 875, 877, 878, 879, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 926, 927, 928, 931, 932, 944, 949, 952, 955, 956, 1000, 1001, 1040, 1047, 1051, 1052, 1057, 1061, 1071, 1072, 1073, 1074, 1076, 1077, 1082, 1083, 1085, 1087, 1091, 1092, 1094, 1097, 1098, 1099, 1107, 1113, 1115, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1137, 1154, 1158, 1159, 1171, 1189, 1190, 1194, 1195, 1198, 1199, 1200, 1201, 1205, 1215, 1228, 1229, 1233, 1236, 1240, 1244, 1246, 1249, 1250, 1251, 1252, 1253, 1256, 1261, 1262, 1263, 1271, 1274, 1277, 1278, 1285, 1310, 1311, 1315, 1316, 1322, 1323, 1332, 1333, 1334, 1335, 1336, 1338, 1350, 1352, 1358, 1364, 1365, 1366, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1402, 1405, 1406, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1431, 1433, 1434, 1435, 1436, 1443, 1445, 1446, 1447, 1448, 1450, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1464, 1465, 1468, 1489, 1513, 1515, 1519, 1520, 1526, 1530, 1534, 1545, 1550, 1555, 1559, 1561, 1566, 1567, 1568, 1572, 1573, 1575, 1576, 1577, 1584, 1587, 1604, 1606, 1608, 1629, 1630, 1631, 1632, 1633, 1638, 1641, 1642, 1643, 1650, 1653, 1656, 1677, 1691, 1692, 1703, 1705, 1719, 1722, 1723, 1725, 1726, 1728, 1729, 1733, 1737, 1747, 1775, 1779, 1793, 1796, 1797, 1798, 1804, 1805, 1811, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1835, 1836, 1838, 1839, 1840, 1842, 1843, 1844, 1847, 1851, 1854, 1855, 1856, 1857, 1858, 1869, 1870, 1871, 1875, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1894, 1895, 1899, 1902, 1907, 1911, 1912, 1914, 1916, 1917, 1919, 1920, 1921], "add": [0, 1, 2, 4, 8, 12, 13, 22, 23, 27, 28, 32, 35, 37, 39, 49, 52, 57, 63, 64, 65, 77, 93, 284, 307, 505, 507, 677, 678, 679, 682, 738, 739, 748, 781, 784, 829, 850, 852, 853, 973, 1003, 1014, 1057, 1114, 1184, 1195, 1324, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1392, 1393, 1394, 1395, 1396, 1397, 1416, 1418, 1422, 1423, 1427, 1430, 1517, 1558, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1794, 1851, 1853, 1854, 1855, 1856, 1857, 1861, 1865, 1867, 1870, 1872, 1876, 1878, 1879, 1882, 1883, 1886, 1887, 1888, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1911, 1914, 1915, 1916, 1920, 1921, 1922], "1": [0, 1, 2, 4, 12, 13, 14, 16, 17, 22, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 50, 52, 55, 57, 61, 62, 63, 64, 65, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 131, 146, 147, 168, 186, 200, 203, 220, 222, 223, 224, 236, 248, 252, 257, 280, 283, 305, 306, 307, 309, 311, 315, 346, 371, 395, 396, 438, 440, 441, 447, 464, 474, 476, 480, 485, 488, 491, 505, 507, 509, 528, 529, 533, 535, 545, 546, 547, 549, 551, 552, 553, 554, 555, 572, 574, 575, 576, 578, 579, 598, 599, 606, 608, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 703, 704, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 718, 721, 722, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 742, 743, 744, 747, 748, 749, 751, 761, 763, 764, 765, 766, 769, 773, 774, 776, 787, 799, 800, 810, 811, 812, 813, 816, 818, 846, 852, 853, 856, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 881, 885, 888, 890, 891, 892, 893, 894, 895, 896, 897, 904, 905, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 942, 943, 945, 946, 949, 950, 951, 952, 953, 954, 955, 956, 957, 963, 969, 1000, 1001, 1016, 1020, 1027, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1154, 1155, 1158, 1159, 1161, 1169, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1188, 1194, 1195, 1199, 1200, 1203, 1204, 1205, 1207, 1208, 1209, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1229, 1230, 1231, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1301, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1458, 1459, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1480, 1482, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1514, 1515, 1517, 1519, 1521, 1522, 1523, 1524, 1525, 1533, 1535, 1539, 1540, 1541, 1547, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1559, 1563, 1564, 1565, 1566, 1567, 1569, 1571, 1572, 1573, 1575, 1580, 1581, 1582, 1583, 1584, 1587, 1596, 1603, 1604, 1608, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1691, 1692, 1694, 1695, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1737, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1770, 1771, 1775, 1776, 1777, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1853, 1855, 1856, 1857, 1858, 1861, 1864, 1865, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1882, 1884, 1885, 1886, 1888, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1904, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923], "return": [0, 1, 2, 3, 4, 6, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 52, 54, 57, 58, 59, 61, 62, 63, 64, 65, 83, 114, 148, 150, 165, 167, 170, 173, 174, 175, 185, 186, 190, 191, 201, 203, 204, 211, 213, 214, 216, 227, 234, 236, 248, 254, 261, 283, 291, 305, 313, 317, 319, 320, 322, 323, 324, 325, 327, 331, 333, 335, 346, 371, 387, 428, 438, 439, 440, 441, 442, 451, 465, 466, 467, 468, 469, 471, 476, 480, 488, 489, 490, 505, 507, 516, 528, 534, 535, 547, 548, 549, 550, 551, 571, 572, 573, 574, 580, 594, 595, 598, 600, 604, 605, 608, 675, 683, 684, 686, 687, 688, 689, 690, 726, 757, 758, 761, 762, 766, 767, 768, 769, 772, 775, 782, 783, 784, 785, 805, 806, 807, 808, 827, 831, 832, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 856, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 908, 909, 910, 913, 914, 915, 922, 923, 925, 928, 930, 932, 933, 934, 935, 936, 937, 938, 939, 941, 943, 944, 945, 949, 950, 952, 953, 954, 956, 957, 958, 960, 961, 963, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1051, 1057, 1058, 1059, 1060, 1061, 1062, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1150, 1154, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1180, 1181, 1182, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1208, 1209, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1292, 1293, 1295, 1301, 1306, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1320, 1324, 1325, 1326, 1327, 1332, 1333, 1350, 1351, 1352, 1353, 1360, 1364, 1365, 1376, 1382, 1383, 1406, 1407, 1408, 1409, 1410, 1411, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1430, 1444, 1447, 1448, 1449, 1450, 1451, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1485, 1487, 1488, 1489, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1558, 1560, 1561, 1563, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1578, 1580, 1581, 1582, 1583, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1600, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1650, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1691, 1692, 1694, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1732, 1737, 1738, 1739, 1740, 1746, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1775, 1777, 1778, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1797, 1798, 1801, 1802, 1803, 1811, 1812, 1813, 1814, 1815, 1816, 1818, 1820, 1821, 1822, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1838, 1840, 1842, 1843, 1844, 1847, 1849, 1850, 1851, 1854, 1858, 1861, 1865, 1866, 1867, 1869, 1871, 1872, 1875, 1876, 1877, 1879, 1880, 1882, 1883, 1885, 1886, 1887, 1888, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1906, 1907, 1908, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923], "Will": [0, 11, 19, 35, 57, 65, 1787, 1856, 1871, 1895], "captur": [0, 2, 13, 14, 17, 23, 27, 65, 671, 958, 960, 992, 998, 1003, 1187, 1658, 1659, 1854, 1858, 1863, 1882, 1883, 1886, 1895, 1899, 1902, 1921], "singl": [0, 3, 4, 6, 14, 16, 17, 18, 21, 22, 23, 26, 33, 35, 37, 39, 40, 41, 43, 45, 51, 52, 57, 58, 60, 61, 62, 63, 64, 65, 248, 671, 686, 687, 757, 758, 759, 760, 763, 764, 765, 805, 885, 892, 893, 894, 895, 896, 897, 898, 913, 922, 926, 952, 956, 1000, 1003, 1113, 1115, 1116, 1119, 1121, 1125, 1141, 1142, 1146, 1169, 1183, 1184, 1199, 1200, 1203, 1261, 1285, 1297, 1298, 1322, 1323, 1326, 1327, 1330, 1331, 1333, 1344, 1345, 1346, 1348, 1349, 1352, 1353, 1364, 1365, 1371, 1384, 1385, 1388, 1410, 1411, 1416, 1424, 1428, 1429, 1444, 1455, 1474, 1475, 1476, 1477, 1478, 1479, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1510, 1511, 1512, 1539, 1540, 1541, 1583, 1589, 1591, 1594, 1595, 1596, 1600, 1601, 1602, 1638, 1639, 1658, 1659, 1661, 1666, 1672, 1677, 1698, 1724, 1790, 1796, 1797, 1834, 1835, 1837, 1839, 1840, 1844, 1852, 1854, 1856, 1857, 1864, 1865, 1869, 1871, 1872, 1877, 1879, 1880, 1882, 1883, 1885, 1888, 1890, 1891, 1892, 1893, 1895, 1898, 1899, 1900, 1901, 1902, 1908, 1909, 1911, 1914, 1917, 1918, 1921], "contain": [0, 1, 2, 3, 4, 6, 12, 17, 20, 22, 23, 24, 26, 27, 32, 35, 36, 39, 40, 41, 43, 45, 46, 50, 53, 57, 64, 65, 78, 83, 145, 149, 186, 190, 203, 284, 305, 307, 309, 313, 315, 464, 476, 535, 594, 598, 677, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 751, 805, 828, 832, 868, 883, 884, 892, 893, 894, 895, 896, 897, 898, 908, 912, 913, 914, 922, 924, 928, 951, 952, 956, 959, 970, 971, 972, 973, 974, 1003, 1057, 1091, 1092, 1094, 1100, 1120, 1121, 1124, 1125, 1141, 1142, 1145, 1146, 1154, 1158, 1175, 1182, 1184, 1185, 1190, 1191, 1194, 1199, 1200, 1203, 1214, 1220, 1221, 1222, 1223, 1225, 1227, 1229, 1230, 1246, 1255, 1273, 1277, 1284, 1306, 1312, 1324, 1333, 1352, 1353, 1359, 1360, 1363, 1368, 1369, 1371, 1376, 1386, 1387, 1408, 1416, 1417, 1418, 1423, 1426, 1431, 1433, 1444, 1448, 1455, 1467, 1498, 1506, 1507, 1509, 1580, 1587, 1590, 1591, 1596, 1604, 1605, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1636, 1637, 1640, 1642, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1691, 1694, 1719, 1733, 1737, 1797, 1798, 1802, 1818, 1825, 1827, 1829, 1834, 1835, 1840, 1844, 1852, 1854, 1856, 1857, 1858, 1864, 1867, 1871, 1872, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1891, 1893, 1895, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1909, 1911, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922], "disallow_in_graph": [0, 1852], "exclud": [0, 6, 10, 13, 33, 52, 65, 1146, 1360, 1507, 1555, 1653, 1826, 1827, 1828, 1829, 1886, 1899, 1908], "forc": [0, 1, 2, 13, 26, 29, 57, 451, 871, 996, 1187, 1198, 1202, 1752, 1851, 1854, 1857, 1876, 1880, 1916, 1919], "break": [0, 8, 13, 15, 17, 19, 41, 60, 65, 671, 884, 944, 1184, 1229, 1416, 1730, 1750, 1852, 1858, 1863, 1881, 1898], "sub": [0, 22, 45, 57, 64, 553, 805, 852, 853, 1195, 1199, 1200, 1281, 1284, 1286, 1428, 1429, 1459, 1460, 1462, 1722, 1800, 1817, 1851, 1853, 1854, 1855, 1870, 1872, 1877, 1895, 1897, 1911, 1914], "give": [0, 1, 4, 5, 8, 10, 16, 18, 20, 23, 29, 32, 33, 37, 39, 51, 57, 65, 899, 900, 956, 1075, 1077, 1078, 1080, 1084, 1093, 1117, 1118, 1119, 1197, 1213, 1220, 1344, 1345, 1346, 1421, 1467, 1468, 1603, 1642, 1658, 1659, 1798, 1837, 1851, 1854, 1869, 1871, 1875, 1877, 1880, 1882, 1883, 1885, 1886, 1888, 1892, 1895, 1898, 1900, 1911, 1922], "two": [0, 1, 2, 4, 5, 6, 7, 9, 12, 16, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 41, 43, 49, 50, 52, 53, 57, 61, 62, 65, 574, 575, 576, 578, 579, 598, 608, 671, 683, 685, 751, 784, 878, 881, 894, 899, 932, 934, 963, 967, 1006, 1008, 1036, 1037, 1045, 1054, 1057, 1063, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1103, 1104, 1113, 1123, 1145, 1147, 1173, 1182, 1184, 1194, 1197, 1204, 1207, 1209, 1214, 1216, 1219, 1220, 1225, 1226, 1231, 1236, 1239, 1240, 1242, 1243, 1245, 1247, 1252, 1255, 1278, 1281, 1284, 1286, 1289, 1313, 1330, 1332, 1333, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1363, 1368, 1376, 1377, 1383, 1385, 1386, 1407, 1408, 1410, 1416, 1419, 1420, 1421, 1423, 1424, 1430, 1431, 1447, 1448, 1463, 1464, 1465, 1467, 1487, 1488, 1498, 1517, 1527, 1534, 1550, 1558, 1565, 1603, 1608, 1630, 1640, 1642, 1643, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1676, 1677, 1679, 1683, 1702, 1717, 1730, 1782, 1787, 1802, 1818, 1822, 1823, 1825, 1841, 1845, 1851, 1853, 1854, 1856, 1857, 1861, 1863, 1864, 1870, 1871, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1888, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1907, 1908, 1909, 1911, 1912, 1916, 1917, 1918, 1920, 1921], "each": [0, 1, 2, 3, 6, 10, 13, 14, 15, 16, 17, 19, 20, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 50, 53, 54, 55, 57, 58, 60, 62, 63, 65, 78, 92, 114, 148, 149, 392, 396, 485, 505, 507, 509, 536, 598, 608, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 677, 684, 686, 687, 690, 726, 751, 783, 831, 832, 850, 852, 853, 856, 868, 877, 878, 879, 880, 882, 883, 884, 889, 898, 912, 915, 924, 928, 932, 933, 935, 938, 942, 944, 956, 969, 970, 974, 1003, 1006, 1008, 1014, 1016, 1020, 1023, 1029, 1034, 1035, 1036, 1037, 1040, 1041, 1052, 1055, 1057, 1074, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1098, 1099, 1101, 1106, 1110, 1115, 1116, 1120, 1124, 1125, 1126, 1137, 1143, 1145, 1146, 1147, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1184, 1199, 1200, 1205, 1237, 1255, 1256, 1271, 1273, 1281, 1283, 1284, 1285, 1286, 1289, 1291, 1297, 1298, 1306, 1312, 1314, 1324, 1329, 1332, 1333, 1337, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1368, 1369, 1371, 1376, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1396, 1397, 1401, 1403, 1407, 1408, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1430, 1431, 1433, 1444, 1447, 1448, 1450, 1455, 1458, 1464, 1465, 1467, 1485, 1487, 1488, 1493, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1506, 1507, 1508, 1512, 1515, 1525, 1527, 1550, 1551, 1553, 1555, 1558, 1565, 1578, 1587, 1592, 1593, 1596, 1629, 1630, 1632, 1642, 1643, 1644, 1650, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1694, 1698, 1699, 1702, 1709, 1717, 1722, 1723, 1728, 1732, 1737, 1750, 1761, 1767, 1783, 1784, 1785, 1786, 1788, 1789, 1790, 1801, 1802, 1817, 1819, 1820, 1823, 1834, 1835, 1838, 1844, 1845, 1851, 1856, 1857, 1863, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1898, 1900, 1901, 1902, 1907, 1908, 1909, 1911, 1912, 1914, 1916, 1917, 1918, 1920, 1921], "op": [0, 2, 5, 12, 14, 15, 16, 17, 22, 23, 35, 65, 77, 145, 495, 515, 595, 748, 783, 784, 785, 814, 817, 845, 852, 853, 884, 890, 898, 934, 944, 964, 979, 981, 985, 986, 1000, 1001, 1026, 1030, 1032, 1114, 1134, 1185, 1197, 1199, 1200, 1261, 1432, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1689, 1748, 1825, 1852, 1853, 1857, 1861, 1863, 1864, 1865, 1867, 1870, 1871, 1879, 1880, 1881, 1882, 1890, 1899, 1901, 1902, 1903, 1904, 1905, 1913, 1915, 1917, 1921], "forbid_in_graph": [0, 1852], "assert": [0, 22, 23, 32, 33, 41, 59, 61, 62, 63, 65, 615, 902, 904, 905, 1115, 1117, 1118, 1119, 1120, 1123, 1124, 1125, 1182, 1187, 1188, 1193, 1652, 1844, 1856, 1858, 1882, 1883, 1888, 1899, 1902, 1918], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 77, 83, 92, 145, 248, 313, 315, 329, 330, 333, 371, 396, 441, 464, 474, 479, 491, 505, 509, 535, 571, 580, 608, 671, 680, 681, 682, 688, 726, 747, 751, 752, 754, 755, 756, 770, 773, 774, 776, 777, 778, 783, 784, 785, 786, 787, 790, 805, 806, 807, 808, 810, 811, 812, 813, 816, 831, 845, 849, 850, 851, 852, 853, 856, 865, 866, 877, 878, 879, 881, 884, 890, 892, 893, 894, 895, 896, 897, 899, 900, 913, 922, 923, 925, 926, 928, 931, 937, 944, 946, 951, 952, 955, 956, 959, 960, 961, 963, 964, 966, 971, 983, 994, 1000, 1003, 1004, 1014, 1024, 1031, 1040, 1045, 1049, 1052, 1057, 1073, 1074, 1075, 1076, 1078, 1080, 1085, 1087, 1093, 1096, 1098, 1099, 1103, 1104, 1105, 1113, 1114, 1119, 1121, 1123, 1124, 1125, 1129, 1137, 1141, 1142, 1144, 1146, 1159, 1161, 1173, 1174, 1176, 1177, 1180, 1181, 1182, 1184, 1185, 1188, 1190, 1191, 1194, 1197, 1199, 1200, 1205, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1236, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1250, 1253, 1254, 1255, 1256, 1265, 1266, 1267, 1268, 1270, 1271, 1273, 1275, 1276, 1278, 1281, 1284, 1285, 1286, 1289, 1291, 1306, 1310, 1311, 1312, 1313, 1314, 1324, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1360, 1361, 1363, 1368, 1369, 1370, 1371, 1376, 1379, 1380, 1381, 1382, 1383, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1433, 1444, 1447, 1448, 1449, 1455, 1459, 1461, 1463, 1464, 1465, 1467, 1468, 1480, 1486, 1487, 1488, 1498, 1499, 1506, 1507, 1508, 1509, 1515, 1526, 1527, 1550, 1553, 1555, 1558, 1565, 1583, 1584, 1585, 1586, 1587, 1592, 1593, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1606, 1608, 1615, 1629, 1633, 1636, 1637, 1638, 1639, 1641, 1643, 1644, 1650, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1679, 1682, 1683, 1695, 1701, 1702, 1708, 1717, 1720, 1721, 1728, 1730, 1741, 1742, 1745, 1775, 1776, 1777, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1794, 1797, 1798, 1801, 1802, 1811, 1813, 1817, 1819, 1820, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1837, 1838, 1839, 1840, 1844, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1923], "present": [0, 4, 10, 19, 32, 35, 52, 57, 1182, 1273, 1324, 1386, 1426, 1629, 1652, 1798, 1851, 1866, 1869, 1870, 1871, 1876, 1877, 1880, 1882, 1885, 1888, 1895, 1899, 1908, 1911, 1914], "while": [0, 1, 3, 4, 6, 8, 9, 14, 16, 17, 23, 24, 26, 32, 33, 35, 36, 37, 41, 54, 57, 62, 64, 65, 686, 687, 726, 845, 875, 883, 961, 1032, 1114, 1146, 1184, 1187, 1199, 1200, 1256, 1312, 1324, 1340, 1377, 1379, 1380, 1381, 1386, 1416, 1422, 1434, 1447, 1455, 1459, 1534, 1596, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1643, 1737, 1858, 1863, 1864, 1871, 1872, 1876, 1877, 1880, 1883, 1884, 1885, 1888, 1890, 1892, 1895, 1898, 1900, 1902, 1905, 1907, 1909, 1911, 1912, 1915, 1916, 1917], "trace": [0, 1, 2, 12, 14, 15, 16, 17, 19, 23, 27, 29, 32, 33, 35, 45, 67, 68, 69, 906, 907, 908, 944, 1057, 1187, 1195, 1196, 1200, 1256, 1297, 1298, 1299, 1654, 1852, 1855, 1856, 1857, 1859, 1877, 1880, 1881, 1893, 1897, 1899, 1916], "If": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 26, 27, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 64, 65, 77, 78, 92, 145, 149, 190, 201, 204, 248, 309, 313, 315, 438, 439, 440, 441, 442, 451, 464, 474, 488, 491, 509, 512, 528, 536, 571, 572, 574, 575, 576, 578, 579, 594, 598, 608, 671, 677, 680, 681, 682, 684, 686, 687, 688, 690, 726, 747, 751, 755, 770, 772, 776, 785, 786, 808, 811, 812, 813, 816, 845, 849, 852, 856, 865, 866, 867, 868, 869, 870, 871, 880, 882, 883, 884, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 912, 913, 915, 922, 924, 925, 926, 928, 932, 934, 935, 936, 937, 938, 939, 946, 949, 950, 951, 955, 956, 957, 960, 961, 963, 965, 968, 970, 972, 974, 981, 992, 998, 1003, 1004, 1024, 1027, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1057, 1058, 1059, 1060, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1100, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1124, 1125, 1126, 1137, 1141, 1142, 1144, 1145, 1146, 1147, 1158, 1161, 1175, 1181, 1184, 1187, 1188, 1189, 1191, 1193, 1195, 1196, 1199, 1200, 1203, 1204, 1205, 1209, 1213, 1214, 1219, 1220, 1222, 1223, 1225, 1226, 1227, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1246, 1247, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1266, 1270, 1271, 1273, 1275, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1301, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1324, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1365, 1368, 1369, 1370, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1394, 1395, 1396, 1397, 1401, 1403, 1407, 1408, 1409, 1410, 1411, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1430, 1431, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1447, 1448, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1471, 1472, 1473, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1510, 1511, 1515, 1517, 1519, 1526, 1527, 1532, 1534, 1536, 1537, 1539, 1540, 1541, 1550, 1551, 1552, 1555, 1558, 1559, 1565, 1571, 1572, 1583, 1584, 1596, 1597, 1600, 1601, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1624, 1625, 1629, 1630, 1631, 1632, 1636, 1637, 1638, 1641, 1642, 1643, 1647, 1648, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1689, 1690, 1695, 1699, 1701, 1702, 1706, 1707, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1722, 1723, 1728, 1730, 1733, 1737, 1739, 1741, 1744, 1745, 1750, 1752, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1775, 1778, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1793, 1796, 1797, 1798, 1801, 1802, 1816, 1817, 1819, 1820, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1834, 1835, 1837, 1838, 1839, 1840, 1844, 1849, 1850, 1851, 1854, 1857, 1859, 1861, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1922], "you": [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 35, 39, 40, 41, 43, 44, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 77, 78, 145, 248, 329, 441, 491, 671, 680, 725, 726, 739, 748, 772, 880, 881, 882, 883, 884, 889, 890, 892, 893, 894, 898, 926, 944, 958, 981, 992, 994, 1003, 1004, 1024, 1057, 1113, 1114, 1117, 1118, 1119, 1120, 1125, 1159, 1184, 1188, 1189, 1196, 1199, 1200, 1201, 1229, 1247, 1255, 1278, 1285, 1288, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1386, 1412, 1413, 1414, 1416, 1421, 1422, 1423, 1431, 1450, 1459, 1461, 1463, 1468, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1526, 1532, 1565, 1583, 1584, 1587, 1596, 1604, 1630, 1638, 1641, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1672, 1683, 1701, 1724, 1733, 1741, 1784, 1785, 1786, 1788, 1789, 1793, 1844, 1851, 1854, 1856, 1857, 1859, 1861, 1864, 1865, 1867, 1869, 1870, 1872, 1875, 1876, 1877, 1878, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1922], "want": [0, 1, 2, 8, 9, 10, 12, 13, 14, 16, 18, 19, 22, 26, 32, 35, 40, 41, 49, 57, 59, 60, 61, 62, 64, 65, 441, 488, 491, 772, 782, 829, 996, 1113, 1114, 1196, 1199, 1200, 1285, 1364, 1365, 1468, 1510, 1511, 1526, 1584, 1596, 1597, 1638, 1641, 1658, 1659, 1672, 1733, 1851, 1861, 1864, 1876, 1877, 1879, 1880, 1882, 1883, 1885, 1888, 1895, 1898, 1899, 1902, 1911, 1916, 1917, 1920], "instead": [0, 1, 2, 4, 6, 9, 10, 12, 14, 17, 19, 22, 23, 26, 32, 33, 35, 37, 40, 41, 43, 49, 52, 53, 57, 60, 61, 62, 65, 216, 400, 451, 491, 505, 739, 748, 759, 760, 784, 808, 817, 871, 881, 892, 893, 894, 895, 898, 899, 928, 934, 1092, 1094, 1118, 1119, 1120, 1121, 1124, 1125, 1130, 1171, 1182, 1184, 1185, 1189, 1213, 1214, 1220, 1222, 1238, 1241, 1247, 1253, 1284, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1350, 1352, 1353, 1355, 1356, 1357, 1361, 1368, 1376, 1382, 1383, 1384, 1385, 1386, 1407, 1408, 1409, 1410, 1411, 1416, 1419, 1420, 1421, 1423, 1430, 1431, 1443, 1447, 1448, 1449, 1455, 1464, 1482, 1483, 1484, 1487, 1488, 1498, 1508, 1515, 1527, 1539, 1540, 1541, 1550, 1558, 1571, 1596, 1638, 1652, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1677, 1683, 1706, 1707, 1717, 1737, 1741, 1783, 1798, 1802, 1837, 1844, 1854, 1856, 1857, 1864, 1871, 1875, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1892, 1893, 1894, 1895, 1898, 1899, 1901, 1902, 1905, 1908, 1911, 1918, 1919, 1921, 1922], "us": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 30, 32, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 77, 78, 83, 92, 114, 145, 149, 186, 203, 313, 315, 329, 336, 337, 400, 428, 441, 451, 479, 480, 488, 491, 505, 509, 512, 535, 548, 574, 575, 576, 578, 579, 608, 671, 677, 680, 703, 704, 705, 706, 707, 708, 711, 720, 721, 722, 723, 724, 726, 739, 748, 751, 759, 760, 763, 764, 765, 770, 772, 776, 777, 778, 781, 784, 785, 786, 787, 790, 793, 798, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 822, 823, 824, 825, 828, 845, 849, 850, 852, 853, 856, 869, 870, 871, 880, 881, 882, 884, 885, 886, 887, 889, 890, 892, 893, 894, 895, 898, 899, 900, 904, 905, 908, 911, 912, 913, 914, 922, 924, 925, 932, 934, 936, 944, 949, 952, 954, 957, 958, 959, 960, 961, 963, 965, 966, 968, 971, 981, 982, 985, 986, 992, 996, 1000, 1002, 1003, 1004, 1006, 1008, 1009, 1014, 1015, 1024, 1026, 1027, 1033, 1038, 1039, 1040, 1049, 1057, 1058, 1060, 1070, 1071, 1072, 1075, 1077, 1085, 1087, 1091, 1093, 1100, 1102, 1105, 1111, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1130, 1134, 1135, 1137, 1141, 1142, 1143, 1144, 1158, 1159, 1171, 1181, 1182, 1184, 1185, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1203, 1205, 1207, 1215, 1219, 1220, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1236, 1237, 1238, 1240, 1241, 1247, 1248, 1249, 1253, 1254, 1255, 1256, 1261, 1264, 1270, 1273, 1274, 1277, 1278, 1283, 1284, 1285, 1288, 1294, 1306, 1311, 1313, 1314, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1376, 1377, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1402, 1403, 1404, 1409, 1410, 1411, 1412, 1413, 1416, 1418, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1449, 1452, 1455, 1463, 1464, 1465, 1466, 1468, 1471, 1472, 1473, 1480, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1510, 1511, 1515, 1517, 1524, 1526, 1527, 1534, 1539, 1540, 1541, 1551, 1553, 1559, 1565, 1569, 1571, 1572, 1580, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1606, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1630, 1631, 1632, 1636, 1637, 1638, 1640, 1641, 1643, 1644, 1647, 1650, 1652, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1681, 1683, 1684, 1686, 1687, 1689, 1699, 1701, 1702, 1703, 1706, 1707, 1708, 1710, 1712, 1714, 1716, 1717, 1723, 1730, 1733, 1738, 1739, 1741, 1742, 1743, 1745, 1747, 1748, 1749, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1770, 1775, 1777, 1778, 1780, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1798, 1801, 1802, 1803, 1816, 1820, 1823, 1827, 1829, 1834, 1836, 1837, 1841, 1844, 1849, 1851, 1852, 1853, 1854, 1855, 1857, 1858, 1859, 1861, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1879, 1881, 1883, 1884, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1896, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922], "todo": [0, 19, 66, 71, 72, 73, 74, 75, 76, 77, 78, 817, 850, 852, 853, 1921], "voz": 0, "we": [0, 1, 2, 3, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 32, 33, 35, 37, 39, 40, 41, 42, 43, 52, 53, 55, 57, 58, 59, 60, 61, 62, 64, 65, 488, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 736, 737, 747, 752, 753, 754, 755, 756, 770, 776, 779, 780, 782, 784, 785, 829, 848, 850, 852, 853, 856, 884, 885, 888, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 913, 922, 957, 963, 1014, 1057, 1075, 1077, 1078, 1079, 1080, 1087, 1092, 1093, 1094, 1108, 1117, 1118, 1120, 1125, 1137, 1141, 1142, 1158, 1182, 1184, 1187, 1188, 1195, 1197, 1199, 1239, 1242, 1247, 1255, 1256, 1275, 1306, 1324, 1332, 1333, 1382, 1416, 1468, 1515, 1517, 1526, 1584, 1591, 1596, 1603, 1605, 1614, 1616, 1619, 1623, 1624, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1685, 1702, 1844, 1851, 1852, 1854, 1856, 1857, 1859, 1861, 1864, 1865, 1869, 1870, 1871, 1872, 1877, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1905, 1907, 1908, 1909, 1911, 1914, 1916, 1919, 1920, 1921], "now": [0, 1, 2, 16, 17, 22, 23, 35, 40, 42, 49, 53, 54, 57, 62, 65, 216, 488, 891, 898, 972, 1000, 1021, 1022, 1108, 1131, 1181, 1182, 1188, 1199, 1233, 1413, 1432, 1468, 1587, 1608, 1619, 1661, 1742, 1793, 1798, 1854, 1864, 1870, 1871, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1888, 1889, 1895, 1899, 1902, 1908, 1909, 1911, 1919, 1922], "have": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 32, 35, 36, 37, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 65, 83, 148, 149, 216, 217, 307, 309, 315, 329, 392, 396, 441, 451, 464, 479, 480, 495, 505, 507, 509, 512, 535, 608, 671, 680, 684, 686, 687, 688, 690, 806, 808, 832, 871, 880, 884, 892, 894, 904, 905, 913, 914, 922, 931, 932, 956, 963, 972, 973, 1003, 1014, 1048, 1056, 1063, 1077, 1087, 1092, 1094, 1108, 1113, 1114, 1125, 1126, 1127, 1141, 1142, 1145, 1146, 1158, 1159, 1181, 1183, 1184, 1187, 1188, 1191, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1205, 1206, 1215, 1219, 1220, 1236, 1243, 1244, 1247, 1249, 1255, 1264, 1266, 1271, 1278, 1281, 1283, 1284, 1285, 1286, 1288, 1289, 1306, 1311, 1312, 1314, 1316, 1324, 1328, 1332, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1353, 1359, 1360, 1364, 1365, 1370, 1375, 1379, 1380, 1381, 1408, 1416, 1419, 1420, 1421, 1422, 1423, 1463, 1465, 1497, 1506, 1507, 1510, 1511, 1515, 1532, 1550, 1552, 1555, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1600, 1601, 1603, 1605, 1608, 1632, 1636, 1641, 1643, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1699, 1725, 1726, 1740, 1753, 1776, 1779, 1783, 1784, 1785, 1786, 1788, 1789, 1796, 1797, 1798, 1801, 1802, 1813, 1817, 1823, 1825, 1837, 1839, 1840, 1842, 1844, 1846, 1851, 1854, 1855, 1856, 1857, 1859, 1861, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1922], "some": [0, 1, 2, 4, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26, 31, 32, 33, 35, 37, 40, 41, 43, 45, 53, 54, 57, 60, 62, 63, 64, 65, 470, 488, 558, 680, 739, 944, 1010, 1014, 1017, 1057, 1078, 1080, 1088, 1089, 1090, 1105, 1114, 1125, 1159, 1181, 1182, 1184, 1185, 1194, 1197, 1199, 1229, 1247, 1253, 1278, 1285, 1288, 1324, 1328, 1332, 1333, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1376, 1379, 1380, 1381, 1382, 1383, 1386, 1407, 1408, 1416, 1419, 1420, 1421, 1423, 1430, 1431, 1447, 1448, 1464, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1500, 1527, 1532, 1550, 1553, 1558, 1565, 1587, 1596, 1597, 1598, 1599, 1603, 1636, 1671, 1677, 1683, 1701, 1721, 1745, 1752, 1766, 1802, 1844, 1851, 1854, 1855, 1856, 1857, 1858, 1861, 1862, 1863, 1864, 1865, 1869, 1870, 1871, 1876, 1877, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1901, 1902, 1903, 1905, 1907, 1908, 1909, 1911, 1916], "more": [0, 1, 2, 3, 4, 5, 9, 10, 12, 14, 16, 17, 21, 23, 24, 26, 27, 28, 31, 32, 33, 35, 36, 41, 42, 43, 44, 48, 51, 52, 53, 54, 57, 60, 61, 62, 63, 65, 78, 145, 248, 249, 307, 315, 480, 485, 487, 490, 505, 507, 509, 536, 609, 671, 726, 762, 771, 775, 784, 845, 850, 851, 852, 864, 877, 878, 879, 881, 883, 884, 890, 892, 894, 898, 899, 900, 904, 905, 915, 923, 926, 928, 934, 935, 936, 937, 960, 961, 963, 965, 966, 982, 1001, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1021, 1022, 1023, 1027, 1035, 1040, 1046, 1055, 1057, 1061, 1073, 1074, 1076, 1078, 1097, 1098, 1099, 1100, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1132, 1133, 1137, 1146, 1147, 1159, 1165, 1169, 1171, 1172, 1184, 1197, 1200, 1213, 1214, 1215, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1253, 1256, 1259, 1262, 1264, 1274, 1275, 1297, 1298, 1301, 1312, 1324, 1328, 1333, 1338, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1359, 1360, 1361, 1377, 1386, 1412, 1413, 1414, 1416, 1422, 1428, 1429, 1430, 1431, 1443, 1455, 1463, 1480, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1504, 1506, 1507, 1515, 1518, 1519, 1520, 1521, 1526, 1530, 1534, 1535, 1545, 1552, 1559, 1560, 1561, 1563, 1565, 1566, 1567, 1568, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1583, 1584, 1585, 1586, 1587, 1596, 1597, 1603, 1605, 1606, 1641, 1642, 1643, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1672, 1689, 1700, 1701, 1727, 1733, 1737, 1747, 1777, 1778, 1802, 1823, 1825, 1837, 1844, 1845, 1851, 1852, 1853, 1854, 1856, 1857, 1863, 1864, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1875, 1877, 1879, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1891, 1893, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1908, 1909, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1922, 1923], "robust": [0, 4, 1256, 1869, 1888], "document": [0, 9, 10, 11, 12, 14, 17, 19, 22, 28, 32, 35, 57, 58, 65, 671, 721, 722, 723, 724, 736, 737, 747, 752, 753, 754, 755, 756, 864, 865, 866, 867, 929, 960, 961, 963, 1014, 1057, 1129, 1132, 1133, 1165, 1172, 1184, 1297, 1298, 1313, 1324, 1359, 1360, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1416, 1605, 1614, 1623, 1643, 1700, 1727, 1744, 1837, 1851, 1854, 1856, 1857, 1869, 1870, 1871, 1873, 1876, 1882, 1884, 1888, 1892, 1893, 1895, 1898, 1899, 1902, 1903, 1904, 1907, 1911, 1915, 1919], "would": [0, 3, 4, 6, 9, 10, 12, 14, 16, 19, 22, 23, 24, 26, 32, 35, 41, 43, 45, 52, 53, 57, 59, 62, 65, 145, 438, 439, 440, 441, 442, 689, 751, 785, 845, 884, 888, 898, 934, 1058, 1060, 1078, 1118, 1119, 1182, 1184, 1185, 1189, 1191, 1199, 1200, 1297, 1298, 1329, 1330, 1331, 1332, 1333, 1368, 1382, 1386, 1409, 1410, 1411, 1416, 1426, 1431, 1515, 1526, 1587, 1596, 1597, 1629, 1641, 1672, 1710, 1714, 1716, 1727, 1737, 1816, 1817, 1822, 1854, 1856, 1857, 1870, 1871, 1872, 1873, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1893, 1895, 1898, 1899, 1900, 1902, 1907, 1908, 1909, 1911], "amiss": 0, "graph_break": [0, 1852], "mark_dynam": [0, 1852], "t": [0, 1, 2, 3, 4, 5, 8, 9, 10, 16, 17, 18, 23, 24, 32, 33, 35, 37, 41, 42, 45, 49, 51, 52, 58, 60, 62, 63, 64, 65, 145, 307, 309, 315, 451, 528, 562, 678, 679, 688, 751, 772, 776, 786, 814, 817, 868, 869, 870, 871, 880, 882, 884, 885, 888, 890, 893, 898, 935, 936, 937, 942, 956, 958, 961, 982, 1000, 1001, 1031, 1055, 1073, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1096, 1108, 1109, 1110, 1113, 1114, 1115, 1125, 1126, 1137, 1147, 1181, 1182, 1184, 1185, 1187, 1190, 1191, 1195, 1197, 1199, 1202, 1204, 1213, 1214, 1220, 1222, 1223, 1226, 1233, 1241, 1242, 1247, 1255, 1256, 1264, 1277, 1290, 1291, 1304, 1313, 1333, 1337, 1339, 1344, 1345, 1346, 1353, 1359, 1360, 1368, 1377, 1379, 1380, 1381, 1382, 1386, 1403, 1416, 1431, 1447, 1449, 1459, 1467, 1468, 1486, 1490, 1491, 1492, 1499, 1506, 1507, 1527, 1532, 1551, 1571, 1584, 1587, 1590, 1591, 1596, 1597, 1603, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1630, 1632, 1633, 1644, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1675, 1685, 1691, 1697, 1701, 1718, 1743, 1744, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1776, 1779, 1798, 1802, 1803, 1813, 1816, 1822, 1825, 1844, 1845, 1851, 1853, 1854, 1855, 1856, 1858, 1867, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1879, 1880, 1882, 1883, 1885, 1887, 1888, 1890, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1922], "index": [0, 4, 23, 27, 32, 33, 37, 41, 50, 65, 186, 203, 275, 306, 307, 308, 309, 310, 311, 313, 315, 316, 464, 465, 504, 505, 506, 507, 508, 509, 510, 511, 686, 687, 808, 845, 868, 883, 928, 976, 979, 1036, 1037, 1077, 1117, 1118, 1119, 1123, 1125, 1126, 1155, 1156, 1157, 1158, 1182, 1200, 1205, 1213, 1231, 1249, 1263, 1271, 1273, 1277, 1281, 1284, 1285, 1286, 1289, 1306, 1312, 1315, 1316, 1324, 1339, 1352, 1359, 1360, 1417, 1418, 1423, 1426, 1427, 1465, 1467, 1506, 1507, 1552, 1614, 1616, 1623, 1624, 1629, 1642, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1687, 1702, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1771, 1781, 1782, 1784, 1785, 1786, 1788, 1789, 1798, 1812, 1833, 1836, 1837, 1844, 1852, 1853, 1854, 1855, 1857, 1864, 1869, 1870, 1871, 1872, 1877, 1880, 1881, 1883, 1886, 1892, 1897, 1909, 1911, 1914, 1915, 1916, 1917, 1918], "mark": [0, 14, 37, 52, 64, 65, 817, 888, 889, 1297, 1298, 1596, 1653, 1854, 1856, 1877, 1881, 1882, 1888, 1899, 1901, 1908, 1917], "tensor": [0, 1, 3, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 22, 23, 26, 28, 29, 32, 33, 35, 36, 37, 39, 41, 42, 57, 60, 61, 62, 63, 64, 65, 83, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 711, 723, 725, 726, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 741, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 775, 776, 777, 778, 779, 780, 781, 785, 789, 790, 791, 792, 793, 810, 811, 812, 813, 815, 816, 818, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 904, 905, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 970, 971, 972, 973, 974, 981, 989, 990, 996, 1000, 1003, 1006, 1010, 1021, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1169, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1185, 1187, 1188, 1190, 1191, 1194, 1195, 1197, 1199, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1295, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1324, 1328, 1329, 1332, 1333, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1368, 1369, 1370, 1376, 1382, 1383, 1386, 1387, 1403, 1406, 1407, 1408, 1409, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1450, 1451, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1592, 1593, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1746, 1747, 1750, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1813, 1814, 1815, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1854, 1856, 1857, 1861, 1864, 1873, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1886, 1888, 1889, 1890, 1891, 1892, 1894, 1897, 1898, 1899, 1900, 1901, 1903, 1906, 1907, 1908, 1912, 1913, 1916, 1918, 1920, 1921, 1922], "dynam": [0, 1, 13, 14, 15, 18, 20, 21, 23, 26, 27, 32, 671, 720, 724, 751, 752, 753, 754, 755, 756, 785, 806, 817, 820, 835, 841, 842, 843, 844, 849, 850, 944, 959, 1191, 1197, 1199, 1255, 1603, 1856, 1857, 1858, 1875, 1880, 1888, 1891, 1895, 1898, 1899, 1903], "dim": [0, 35, 40, 41, 62, 63, 65, 107, 109, 110, 111, 113, 129, 130, 131, 179, 199, 202, 205, 206, 207, 208, 209, 210, 224, 254, 258, 275, 306, 307, 308, 309, 310, 311, 315, 316, 348, 374, 386, 401, 403, 404, 405, 408, 422, 423, 424, 425, 429, 430, 446, 455, 463, 472, 483, 484, 486, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 528, 529, 532, 533, 535, 538, 543, 544, 546, 551, 556, 564, 569, 574, 575, 576, 578, 579, 581, 596, 597, 600, 601, 602, 603, 606, 608, 684, 686, 687, 688, 690, 865, 866, 867, 894, 895, 897, 931, 938, 947, 955, 957, 972, 974, 1036, 1037, 1038, 1039, 1040, 1049, 1055, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1096, 1097, 1115, 1125, 1126, 1137, 1147, 1155, 1156, 1157, 1158, 1161, 1205, 1215, 1216, 1236, 1240, 1250, 1252, 1253, 1263, 1271, 1281, 1283, 1284, 1286, 1289, 1291, 1304, 1311, 1312, 1313, 1314, 1315, 1316, 1324, 1351, 1352, 1353, 1356, 1360, 1362, 1367, 1382, 1387, 1406, 1422, 1423, 1424, 1449, 1451, 1463, 1465, 1466, 1497, 1498, 1514, 1517, 1526, 1534, 1539, 1540, 1541, 1550, 1551, 1553, 1555, 1559, 1565, 1571, 1572, 1580, 1596, 1604, 1610, 1614, 1616, 1623, 1624, 1637, 1640, 1643, 1692, 1699, 1702, 1722, 1723, 1728, 1729, 1734, 1735, 1736, 1739, 1740, 1771, 1774, 1775, 1778, 1781, 1783, 1790, 1793, 1795, 1796, 1797, 1798, 1801, 1813, 1817, 1818, 1819, 1820, 1823, 1824, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1844, 1845, 1852, 1853, 1854, 1855, 1871, 1872, 1883, 1884, 1893, 1895, 1897, 1911, 1912, 1914, 1920], "note": [0, 2, 3, 4, 6, 9, 14, 16, 22, 23, 24, 26, 27, 29, 31, 32, 33, 35, 37, 39, 40, 41, 42, 43, 50, 52, 54, 57, 61, 63, 64, 65, 145, 216, 371, 491, 492, 505, 507, 509, 726, 732, 733, 734, 782, 784, 785, 786, 790, 832, 852, 856, 875, 884, 890, 892, 893, 894, 895, 896, 897, 898, 900, 934, 957, 1032, 1040, 1045, 1057, 1078, 1108, 1110, 1125, 1126, 1137, 1159, 1171, 1181, 1182, 1184, 1185, 1190, 1256, 1278, 1297, 1298, 1332, 1333, 1339, 1347, 1348, 1349, 1350, 1352, 1359, 1360, 1368, 1370, 1376, 1382, 1383, 1386, 1407, 1408, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1430, 1431, 1447, 1448, 1455, 1459, 1464, 1468, 1487, 1488, 1498, 1506, 1507, 1515, 1526, 1527, 1550, 1553, 1558, 1559, 1572, 1587, 1596, 1597, 1643, 1651, 1652, 1669, 1675, 1677, 1683, 1685, 1701, 1708, 1783, 1784, 1785, 1786, 1788, 1789, 1794, 1798, 1802, 1823, 1837, 1844, 1851, 1854, 1855, 1858, 1864, 1869, 1872, 1873, 1877, 1878, 1879, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1898, 1899, 1901, 1903, 1905, 1906, 1908, 1909, 1911, 1915, 1916, 1923], "state": [0, 1, 2, 3, 6, 10, 13, 14, 19, 32, 35, 37, 39, 41, 43, 45, 52, 55, 57, 65, 83, 739, 751, 827, 989, 990, 994, 999, 1003, 1013, 1028, 1029, 1114, 1123, 1136, 1184, 1187, 1199, 1256, 1295, 1302, 1368, 1369, 1386, 1387, 1416, 1431, 1433, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1708, 1751, 1777, 1865, 1876, 1877, 1880, 1881, 1882, 1886, 1890, 1893, 1895, 1898, 1906, 1920], "The": [0, 1, 2, 3, 4, 6, 8, 9, 12, 13, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 61, 62, 63, 64, 67, 68, 69, 77, 78, 83, 145, 186, 191, 203, 204, 216, 249, 284, 305, 307, 309, 313, 315, 392, 394, 395, 396, 441, 451, 476, 479, 480, 485, 487, 490, 491, 505, 507, 509, 528, 535, 574, 594, 608, 609, 671, 675, 678, 679, 680, 681, 685, 686, 687, 688, 726, 739, 748, 751, 757, 758, 759, 760, 763, 764, 765, 770, 771, 773, 774, 776, 777, 778, 783, 784, 785, 786, 790, 793, 806, 808, 810, 811, 812, 813, 816, 818, 828, 829, 845, 850, 855, 868, 869, 871, 875, 876, 880, 881, 883, 884, 885, 886, 887, 892, 893, 895, 896, 897, 898, 899, 900, 904, 905, 907, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 929, 930, 936, 943, 946, 952, 956, 959, 960, 966, 973, 989, 1000, 1001, 1003, 1004, 1005, 1014, 1027, 1028, 1029, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1057, 1058, 1062, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1105, 1107, 1108, 1109, 1110, 1111, 1114, 1117, 1120, 1123, 1124, 1125, 1128, 1129, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1150, 1154, 1158, 1161, 1181, 1184, 1187, 1189, 1191, 1194, 1195, 1197, 1199, 1200, 1203, 1204, 1208, 1209, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1233, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1250, 1253, 1255, 1256, 1271, 1272, 1273, 1274, 1276, 1277, 1278, 1284, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1306, 1312, 1315, 1317, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1359, 1360, 1361, 1363, 1364, 1365, 1368, 1369, 1370, 1371, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 1416, 1419, 1421, 1423, 1430, 1431, 1433, 1434, 1444, 1445, 1447, 1455, 1458, 1459, 1464, 1465, 1467, 1468, 1480, 1483, 1484, 1498, 1499, 1506, 1507, 1508, 1510, 1511, 1514, 1515, 1517, 1526, 1527, 1539, 1540, 1541, 1550, 1553, 1565, 1568, 1584, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1606, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1622, 1623, 1626, 1632, 1636, 1637, 1640, 1642, 1643, 1644, 1650, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1691, 1692, 1695, 1698, 1701, 1706, 1707, 1708, 1710, 1712, 1714, 1719, 1721, 1723, 1725, 1726, 1728, 1733, 1740, 1741, 1742, 1743, 1750, 1751, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1771, 1777, 1779, 1780, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1793, 1796, 1797, 1798, 1802, 1803, 1812, 1818, 1819, 1820, 1822, 1823, 1826, 1827, 1828, 1829, 1836, 1837, 1838, 1839, 1840, 1842, 1844, 1847, 1851, 1854, 1855, 1856, 1858, 1859, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1923], "behavior": [0, 2, 3, 8, 17, 23, 26, 31, 33, 35, 36, 37, 39, 41, 42, 45, 50, 53, 57, 61, 62, 64, 65, 248, 313, 464, 505, 535, 608, 678, 776, 784, 817, 869, 883, 926, 930, 943, 1052, 1057, 1060, 1102, 1109, 1110, 1114, 1184, 1194, 1197, 1199, 1229, 1236, 1240, 1253, 1254, 1255, 1270, 1278, 1285, 1353, 1356, 1377, 1386, 1416, 1431, 1455, 1468, 1480, 1515, 1583, 1584, 1587, 1588, 1596, 1597, 1642, 1643, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1695, 1701, 1717, 1724, 1766, 1802, 1823, 1837, 1851, 1854, 1858, 1859, 1861, 1863, 1870, 1872, 1878, 1880, 1882, 1883, 1891, 1892, 1893, 1895, 1898, 1899, 1900, 1903, 1904, 1907, 1912, 1915], "dimens": [0, 2, 24, 32, 35, 40, 41, 57, 62, 63, 65, 213, 227, 248, 254, 307, 309, 311, 315, 426, 427, 465, 466, 467, 485, 505, 507, 509, 528, 534, 536, 537, 551, 574, 575, 576, 578, 579, 598, 608, 677, 683, 684, 686, 687, 688, 690, 726, 749, 770, 772, 776, 865, 866, 867, 868, 877, 878, 879, 883, 898, 923, 931, 934, 935, 936, 937, 938, 957, 972, 974, 1036, 1037, 1038, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1055, 1057, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1096, 1125, 1126, 1137, 1146, 1147, 1158, 1161, 1181, 1204, 1205, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1263, 1264, 1271, 1274, 1278, 1281, 1283, 1284, 1285, 1286, 1289, 1291, 1304, 1311, 1312, 1313, 1314, 1315, 1316, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1356, 1358, 1359, 1360, 1362, 1363, 1366, 1367, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1386, 1388, 1396, 1397, 1402, 1403, 1404, 1405, 1406, 1407, 1410, 1411, 1415, 1422, 1423, 1424, 1425, 1428, 1429, 1430, 1434, 1435, 1436, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1463, 1464, 1465, 1466, 1467, 1480, 1486, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1514, 1515, 1516, 1517, 1526, 1529, 1532, 1533, 1534, 1551, 1552, 1553, 1565, 1571, 1572, 1584, 1603, 1604, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1630, 1631, 1633, 1635, 1637, 1640, 1642, 1643, 1689, 1692, 1699, 1701, 1702, 1703, 1708, 1722, 1723, 1724, 1728, 1737, 1739, 1740, 1750, 1771, 1775, 1778, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1793, 1795, 1796, 1797, 1798, 1801, 1802, 1811, 1813, 1817, 1818, 1819, 1820, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1852, 1853, 1855, 1856, 1857, 1872, 1875, 1878, 1880, 1883, 1884, 1885, 1891, 1900, 1902, 1911, 1912, 1914, 1916, 1917], "govern": [0, 8, 9, 1852, 1902], "few": [0, 2, 8, 9, 14, 16, 17, 18, 23, 33, 37, 43, 1057, 1114, 1360, 1596, 1851, 1857, 1877, 1880, 1882, 1884, 1886, 1891, 1894, 1895, 1898, 1900, 1902, 1905, 1915, 1917, 1919], "factor": [0, 1, 4, 14, 33, 41, 65, 680, 681, 682, 790, 810, 912, 935, 936, 937, 1226, 1227, 1228, 1231, 1233, 1273, 1274, 1275, 1354, 1377, 1404, 1428, 1429, 1556, 1557, 1565, 1669, 1670, 1671, 1673, 1674, 1676, 1678, 1679, 1680, 1681, 1682, 1685, 1686, 1687, 1701, 1759, 1780, 1802, 1875, 1876, 1902], "config": [0, 13, 14, 15, 16, 17, 19, 23, 33, 57, 65, 783, 784, 785, 786, 850, 852, 944, 1881, 1894, 1905], "dynamic_shap": [0, 13, 20, 1649], "true": [0, 1, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 54, 57, 62, 63, 64, 65, 145, 191, 204, 254, 313, 315, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 345, 390, 394, 396, 441, 451, 453, 464, 470, 480, 487, 488, 496, 508, 509, 547, 558, 571, 572, 581, 585, 594, 600, 608, 671, 678, 683, 684, 685, 686, 687, 688, 690, 709, 710, 711, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 734, 737, 740, 745, 747, 751, 752, 755, 756, 759, 760, 770, 776, 777, 788, 805, 817, 850, 864, 866, 867, 871, 880, 883, 884, 885, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 904, 905, 911, 913, 916, 919, 921, 922, 928, 929, 935, 936, 937, 943, 944, 949, 960, 998, 1052, 1061, 1062, 1063, 1079, 1080, 1086, 1087, 1110, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1124, 1125, 1126, 1128, 1140, 1141, 1142, 1145, 1146, 1157, 1159, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1184, 1188, 1189, 1190, 1193, 1199, 1200, 1201, 1203, 1205, 1208, 1213, 1214, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1236, 1238, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1250, 1253, 1255, 1256, 1265, 1266, 1267, 1268, 1271, 1272, 1273, 1275, 1277, 1281, 1283, 1284, 1285, 1286, 1289, 1306, 1311, 1314, 1317, 1320, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1364, 1365, 1368, 1369, 1370, 1371, 1376, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1425, 1430, 1431, 1432, 1433, 1447, 1448, 1455, 1459, 1461, 1462, 1463, 1464, 1465, 1468, 1469, 1480, 1482, 1483, 1484, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1510, 1511, 1515, 1517, 1519, 1525, 1526, 1527, 1539, 1540, 1541, 1550, 1558, 1565, 1584, 1585, 1587, 1596, 1597, 1599, 1600, 1603, 1604, 1607, 1608, 1609, 1621, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1689, 1691, 1699, 1701, 1702, 1706, 1707, 1708, 1725, 1726, 1733, 1736, 1737, 1745, 1746, 1747, 1750, 1752, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1775, 1777, 1779, 1796, 1797, 1798, 1801, 1802, 1816, 1820, 1825, 1834, 1835, 1837, 1838, 1839, 1840, 1844, 1847, 1851, 1853, 1855, 1856, 1857, 1864, 1866, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1895, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1922], "fals": [0, 1, 2, 4, 6, 14, 15, 17, 19, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 57, 60, 65, 107, 108, 109, 110, 111, 113, 129, 130, 131, 145, 176, 177, 178, 191, 204, 254, 295, 312, 313, 315, 322, 326, 329, 330, 332, 336, 337, 338, 345, 348, 386, 390, 401, 403, 404, 405, 408, 414, 422, 423, 424, 425, 438, 439, 440, 441, 442, 446, 451, 453, 463, 464, 472, 487, 488, 496, 509, 533, 546, 547, 556, 571, 585, 594, 600, 601, 606, 608, 671, 684, 685, 686, 687, 688, 690, 703, 704, 705, 706, 707, 708, 725, 726, 736, 737, 742, 743, 744, 746, 749, 751, 759, 760, 767, 769, 770, 771, 773, 774, 776, 788, 805, 810, 811, 812, 813, 815, 816, 817, 829, 830, 848, 849, 854, 856, 865, 866, 867, 871, 884, 885, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 908, 911, 913, 916, 919, 921, 922, 928, 929, 935, 936, 937, 943, 944, 949, 960, 998, 1003, 1015, 1057, 1058, 1059, 1060, 1062, 1063, 1070, 1074, 1075, 1076, 1077, 1082, 1083, 1088, 1089, 1090, 1092, 1093, 1094, 1110, 1111, 1112, 1113, 1115, 1116, 1118, 1119, 1120, 1122, 1124, 1126, 1128, 1140, 1141, 1142, 1145, 1146, 1159, 1169, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1184, 1189, 1190, 1191, 1199, 1200, 1201, 1203, 1205, 1208, 1213, 1214, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1236, 1238, 1240, 1241, 1244, 1245, 1246, 1247, 1248, 1253, 1254, 1255, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1275, 1277, 1281, 1283, 1284, 1286, 1289, 1297, 1298, 1306, 1311, 1312, 1313, 1314, 1317, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1350, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1401, 1402, 1403, 1407, 1408, 1409, 1410, 1411, 1415, 1416, 1419, 1420, 1421, 1422, 1423, 1425, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1443, 1445, 1447, 1448, 1455, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1468, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1510, 1511, 1512, 1515, 1517, 1519, 1520, 1521, 1526, 1527, 1530, 1536, 1537, 1539, 1540, 1541, 1545, 1550, 1554, 1558, 1560, 1561, 1563, 1564, 1565, 1566, 1568, 1578, 1581, 1582, 1584, 1596, 1598, 1600, 1603, 1605, 1608, 1609, 1621, 1630, 1631, 1632, 1633, 1635, 1638, 1641, 1642, 1643, 1647, 1648, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1699, 1701, 1702, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1725, 1726, 1733, 1737, 1745, 1746, 1747, 1750, 1752, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1775, 1784, 1785, 1786, 1787, 1788, 1789, 1796, 1797, 1798, 1801, 1802, 1816, 1820, 1825, 1834, 1837, 1838, 1839, 1840, 1847, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1863, 1864, 1865, 1866, 1869, 1871, 1872, 1876, 1877, 1880, 1881, 1882, 1884, 1888, 1891, 1892, 1895, 1896, 1899, 1900, 1901, 1903, 1906, 1907, 1911, 1912, 1913, 1915, 1916, 1918, 1919, 1921, 1922], "must": [0, 1, 4, 6, 7, 10, 12, 17, 22, 23, 26, 32, 35, 37, 39, 41, 42, 43, 50, 53, 54, 57, 60, 62, 64, 65, 83, 92, 134, 148, 149, 191, 254, 307, 309, 315, 392, 394, 396, 505, 535, 536, 557, 574, 575, 576, 578, 579, 608, 677, 678, 679, 680, 681, 682, 688, 739, 748, 763, 764, 765, 784, 806, 808, 850, 851, 869, 875, 880, 881, 882, 883, 885, 891, 893, 895, 896, 897, 899, 900, 912, 914, 916, 917, 918, 919, 920, 921, 924, 928, 931, 946, 956, 959, 960, 970, 971, 972, 974, 1000, 1001, 1003, 1045, 1047, 1048, 1049, 1051, 1054, 1055, 1057, 1078, 1079, 1080, 1085, 1087, 1088, 1089, 1090, 1091, 1098, 1099, 1108, 1110, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1137, 1146, 1147, 1150, 1161, 1181, 1184, 1194, 1199, 1206, 1209, 1238, 1239, 1240, 1241, 1247, 1249, 1250, 1253, 1256, 1274, 1276, 1277, 1278, 1284, 1291, 1306, 1312, 1315, 1316, 1320, 1333, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1359, 1360, 1363, 1370, 1371, 1377, 1409, 1416, 1419, 1422, 1447, 1453, 1468, 1488, 1497, 1499, 1507, 1526, 1539, 1540, 1541, 1559, 1596, 1619, 1629, 1630, 1636, 1638, 1643, 1651, 1681, 1683, 1690, 1691, 1694, 1695, 1698, 1706, 1707, 1728, 1737, 1740, 1749, 1765, 1776, 1779, 1780, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1798, 1803, 1813, 1817, 1818, 1822, 1827, 1829, 1833, 1837, 1841, 1842, 1844, 1845, 1847, 1854, 1855, 1856, 1857, 1864, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1886, 1890, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1918, 1922], "work": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 23, 24, 26, 27, 28, 35, 36, 37, 39, 40, 41, 42, 43, 52, 53, 54, 55, 57, 58, 62, 65, 114, 145, 346, 438, 439, 440, 441, 442, 479, 578, 579, 812, 852, 853, 884, 898, 958, 960, 961, 963, 992, 1003, 1004, 1024, 1058, 1060, 1077, 1097, 1098, 1099, 1114, 1184, 1188, 1195, 1196, 1219, 1220, 1247, 1248, 1256, 1353, 1413, 1416, 1432, 1449, 1553, 1571, 1596, 1653, 1683, 1710, 1714, 1716, 1742, 1748, 1813, 1816, 1851, 1854, 1857, 1858, 1869, 1870, 1871, 1872, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1888, 1890, 1893, 1894, 1895, 1899, 1900, 1902, 1905, 1907, 1908, 1917, 1919, 1922], "rais": [0, 1, 2, 6, 8, 17, 22, 23, 26, 35, 39, 41, 43, 45, 52, 57, 62, 64, 65, 83, 307, 309, 315, 688, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 925, 934, 962, 1027, 1100, 1105, 1182, 1184, 1189, 1191, 1199, 1201, 1213, 1215, 1223, 1224, 1227, 1231, 1232, 1237, 1244, 1245, 1249, 1250, 1255, 1276, 1301, 1416, 1565, 1608, 1609, 1614, 1616, 1619, 1629, 1652, 1653, 1739, 1837, 1851, 1858, 1864, 1869, 1877, 1880, 1882, 1884, 1891, 1895, 1899, 1900, 1906, 1907, 1918, 1922], "except": [0, 4, 6, 8, 10, 12, 22, 26, 35, 36, 40, 41, 43, 44, 45, 49, 53, 57, 64, 65, 574, 578, 579, 608, 675, 684, 686, 687, 690, 751, 876, 899, 900, 931, 938, 942, 962, 972, 974, 1002, 1015, 1049, 1055, 1057, 1103, 1104, 1123, 1125, 1147, 1191, 1199, 1201, 1205, 1239, 1255, 1271, 1281, 1283, 1284, 1286, 1289, 1311, 1314, 1316, 1368, 1386, 1431, 1468, 1552, 1596, 1604, 1629, 1636, 1637, 1641, 1643, 1699, 1723, 1739, 1776, 1794, 1796, 1797, 1801, 1823, 1839, 1840, 1844, 1845, 1852, 1854, 1856, 1857, 1858, 1859, 1864, 1869, 1872, 1880, 1882, 1888, 1891, 1894, 1899, 1900, 1907, 1909, 1911, 1913, 1914, 1918], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 19, 22, 23, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 77, 79, 92, 145, 186, 203, 254, 307, 315, 441, 480, 489, 490, 505, 507, 509, 535, 551, 571, 608, 677, 680, 726, 759, 760, 770, 776, 782, 784, 815, 831, 849, 856, 868, 871, 884, 892, 893, 894, 895, 896, 897, 898, 899, 900, 904, 905, 912, 915, 924, 932, 935, 943, 944, 949, 950, 954, 960, 962, 972, 974, 996, 1002, 1003, 1015, 1040, 1057, 1096, 1100, 1105, 1110, 1114, 1115, 1120, 1123, 1124, 1125, 1137, 1159, 1173, 1174, 1176, 1177, 1180, 1184, 1185, 1187, 1195, 1196, 1197, 1199, 1200, 1204, 1205, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1253, 1254, 1255, 1256, 1264, 1270, 1273, 1278, 1284, 1285, 1288, 1306, 1311, 1312, 1313, 1324, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1359, 1360, 1363, 1366, 1368, 1369, 1371, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1403, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1430, 1431, 1443, 1444, 1447, 1448, 1449, 1450, 1452, 1455, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1480, 1482, 1483, 1484, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1507, 1513, 1515, 1526, 1527, 1550, 1553, 1555, 1558, 1559, 1565, 1573, 1584, 1585, 1586, 1587, 1592, 1593, 1596, 1597, 1598, 1599, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1632, 1637, 1641, 1642, 1643, 1644, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1689, 1691, 1698, 1701, 1702, 1724, 1730, 1737, 1742, 1745, 1752, 1770, 1776, 1779, 1781, 1782, 1783, 1793, 1798, 1802, 1811, 1816, 1818, 1823, 1827, 1829, 1834, 1837, 1844, 1847, 1851, 1852, 1854, 1856, 1863, 1865, 1867, 1869, 1870, 1871, 1875, 1878, 1879, 1880, 1881, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1898, 1899, 1900, 1901, 1906, 1907, 1908, 1909, 1912, 1914, 1915, 1916, 1917, 1918], "conjunct": [0, 4, 32, 35, 39, 57, 815, 1480, 1515, 1596, 1905, 1907], "mark_dyam": 0, "eventu": [0, 2, 8, 52, 57, 1851, 1900], "support": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33, 35, 37, 39, 40, 41, 42, 44, 45, 52, 53, 57, 60, 61, 62, 64, 65, 77, 78, 305, 315, 451, 574, 608, 676, 677, 678, 680, 684, 686, 687, 690, 720, 729, 730, 731, 763, 764, 765, 770, 776, 777, 778, 783, 784, 785, 786, 792, 808, 824, 850, 852, 853, 883, 885, 890, 899, 900, 912, 913, 917, 920, 922, 924, 936, 937, 944, 951, 957, 959, 963, 1000, 1001, 1003, 1020, 1052, 1054, 1057, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1120, 1124, 1141, 1142, 1154, 1181, 1188, 1195, 1199, 1203, 1204, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1274, 1278, 1282, 1287, 1288, 1305, 1344, 1345, 1346, 1347, 1348, 1349, 1356, 1359, 1360, 1363, 1383, 1403, 1421, 1422, 1455, 1465, 1467, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1507, 1509, 1515, 1526, 1532, 1565, 1583, 1584, 1586, 1596, 1643, 1648, 1650, 1658, 1659, 1661, 1689, 1701, 1720, 1721, 1742, 1745, 1746, 1776, 1779, 1782, 1799, 1802, 1825, 1827, 1829, 1841, 1842, 1843, 1850, 1851, 1852, 1854, 1856, 1858, 1859, 1861, 1865, 1867, 1869, 1873, 1877, 1878, 1879, 1880, 1881, 1882, 1886, 1888, 1890, 1891, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1905, 1906, 1907, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1922], "2": [0, 1, 2, 4, 12, 13, 14, 16, 17, 18, 22, 24, 26, 29, 30, 31, 32, 33, 35, 36, 39, 41, 42, 43, 45, 50, 52, 57, 61, 62, 63, 64, 65, 168, 186, 203, 220, 228, 248, 254, 307, 309, 311, 315, 329, 371, 395, 396, 438, 439, 440, 441, 442, 474, 480, 485, 488, 491, 505, 507, 509, 535, 549, 551, 571, 572, 574, 575, 576, 578, 579, 580, 598, 608, 671, 672, 674, 675, 676, 677, 680, 681, 682, 683, 684, 686, 688, 689, 690, 725, 729, 730, 731, 732, 733, 734, 736, 737, 746, 749, 751, 753, 784, 787, 811, 856, 865, 866, 867, 868, 869, 870, 871, 875, 877, 878, 879, 881, 890, 892, 893, 894, 895, 896, 897, 904, 905, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 927, 928, 930, 931, 932, 934, 935, 936, 937, 938, 942, 943, 946, 949, 950, 951, 952, 955, 956, 957, 1031, 1036, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1067, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1118, 1119, 1120, 1124, 1125, 1126, 1127, 1128, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1158, 1159, 1161, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1187, 1188, 1193, 1195, 1197, 1199, 1203, 1204, 1205, 1207, 1208, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1260, 1261, 1262, 1263, 1270, 1272, 1273, 1274, 1275, 1277, 1278, 1281, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1301, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1320, 1323, 1328, 1329, 1330, 1331, 1332, 1333, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1377, 1384, 1385, 1386, 1387, 1388, 1402, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1418, 1419, 1421, 1422, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1480, 1482, 1487, 1488, 1499, 1506, 1507, 1513, 1515, 1517, 1519, 1526, 1532, 1539, 1540, 1541, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1565, 1581, 1587, 1596, 1600, 1603, 1604, 1608, 1620, 1621, 1622, 1623, 1625, 1626, 1629, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1650, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1684, 1685, 1686, 1690, 1691, 1692, 1694, 1695, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1712, 1714, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1733, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1747, 1750, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1771, 1775, 1776, 1777, 1779, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1849, 1850, 1852, 1853, 1855, 1856, 1857, 1858, 1864, 1865, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1885, 1886, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1921], "fulli": [0, 17, 24, 26, 32, 35, 39, 40, 61, 65, 671, 1020, 1184, 1412, 1413, 1414, 1416, 1853, 1857, 1863, 1882, 1899, 1902], "constrain": [0, 41, 1452, 1857, 1888], "doe": [0, 1, 2, 4, 5, 6, 8, 9, 10, 16, 17, 23, 26, 35, 39, 41, 43, 45, 49, 51, 52, 54, 57, 60, 61, 62, 64, 65, 145, 248, 329, 428, 451, 574, 608, 671, 686, 687, 739, 748, 751, 781, 785, 852, 871, 911, 924, 994, 998, 1048, 1057, 1061, 1110, 1113, 1125, 1158, 1183, 1185, 1188, 1194, 1199, 1209, 1214, 1226, 1227, 1231, 1232, 1239, 1245, 1247, 1253, 1256, 1273, 1277, 1278, 1284, 1288, 1292, 1308, 1334, 1335, 1336, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1356, 1359, 1360, 1363, 1368, 1369, 1379, 1380, 1381, 1386, 1387, 1389, 1390, 1391, 1398, 1399, 1400, 1410, 1411, 1417, 1423, 1426, 1431, 1433, 1455, 1467, 1498, 1550, 1596, 1597, 1605, 1608, 1612, 1638, 1641, 1643, 1648, 1652, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1686, 1690, 1695, 1737, 1740, 1741, 1745, 1747, 1771, 1776, 1802, 1822, 1825, 1837, 1844, 1850, 1851, 1852, 1854, 1856, 1857, 1859, 1865, 1869, 1870, 1871, 1872, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1888, 1890, 1891, 1892, 1895, 1899, 1900, 1902, 1907, 1909, 1911, 1914, 1918], "allow": [0, 1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 16, 17, 19, 22, 23, 24, 26, 27, 32, 33, 35, 36, 41, 43, 44, 52, 53, 57, 58, 60, 61, 62, 63, 65, 145, 505, 671, 726, 784, 788, 790, 815, 884, 886, 898, 899, 929, 943, 1000, 1003, 1027, 1057, 1118, 1184, 1189, 1201, 1239, 1261, 1301, 1315, 1329, 1330, 1331, 1352, 1353, 1370, 1409, 1410, 1411, 1416, 1419, 1422, 1444, 1459, 1596, 1601, 1642, 1650, 1654, 1670, 1779, 1837, 1851, 1856, 1857, 1864, 1870, 1871, 1872, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1893, 1895, 1898, 1899, 1900, 1901, 1902, 1904, 1907, 1911, 1914, 1915, 1916, 1918], "than": [0, 1, 4, 5, 6, 7, 9, 10, 12, 14, 16, 19, 23, 24, 26, 32, 33, 35, 36, 37, 41, 42, 43, 45, 49, 52, 53, 54, 57, 62, 65, 145, 248, 491, 536, 608, 671, 684, 690, 770, 776, 884, 893, 894, 908, 915, 926, 933, 934, 938, 939, 963, 972, 1010, 1014, 1027, 1045, 1046, 1097, 1098, 1099, 1101, 1105, 1110, 1121, 1128, 1140, 1144, 1158, 1169, 1181, 1182, 1185, 1195, 1204, 1205, 1208, 1213, 1214, 1220, 1224, 1229, 1237, 1238, 1240, 1241, 1244, 1249, 1259, 1272, 1275, 1281, 1284, 1286, 1289, 1301, 1306, 1316, 1332, 1333, 1344, 1345, 1346, 1353, 1359, 1360, 1377, 1408, 1422, 1430, 1447, 1453, 1463, 1464, 1465, 1480, 1490, 1491, 1492, 1506, 1507, 1515, 1526, 1552, 1565, 1583, 1584, 1587, 1596, 1603, 1604, 1605, 1606, 1632, 1637, 1643, 1658, 1659, 1683, 1685, 1699, 1700, 1721, 1722, 1750, 1783, 1784, 1785, 1786, 1788, 1789, 1819, 1827, 1829, 1837, 1851, 1853, 1854, 1856, 1857, 1859, 1871, 1872, 1873, 1875, 1877, 1878, 1880, 1882, 1883, 1884, 1885, 1888, 1890, 1891, 1892, 1893, 1895, 1898, 1899, 1900, 1902, 1903, 1907, 1911, 1912, 1914, 1916, 1917, 1918], "valu": [0, 1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 17, 22, 23, 24, 26, 29, 32, 33, 36, 37, 39, 41, 43, 44, 46, 49, 50, 52, 53, 57, 59, 62, 64, 65, 83, 96, 97, 98, 99, 114, 145, 149, 216, 229, 230, 231, 232, 248, 253, 254, 266, 267, 293, 305, 307, 309, 310, 311, 312, 313, 315, 317, 320, 346, 393, 394, 412, 413, 415, 416, 464, 474, 476, 505, 507, 509, 528, 535, 551, 574, 575, 576, 578, 579, 590, 591, 671, 672, 675, 678, 679, 682, 686, 687, 688, 726, 747, 755, 761, 762, 770, 775, 776, 778, 784, 786, 787, 790, 793, 810, 811, 812, 813, 816, 817, 818, 845, 850, 856, 865, 866, 867, 871, 876, 880, 882, 884, 886, 887, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 913, 914, 915, 922, 928, 932, 937, 939, 951, 952, 955, 961, 991, 1000, 1001, 1014, 1027, 1036, 1037, 1040, 1048, 1049, 1062, 1071, 1072, 1074, 1076, 1078, 1079, 1080, 1085, 1087, 1088, 1089, 1090, 1091, 1100, 1105, 1111, 1113, 1114, 1115, 1116, 1120, 1121, 1123, 1124, 1126, 1128, 1132, 1133, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1154, 1169, 1174, 1175, 1176, 1177, 1180, 1181, 1182, 1184, 1185, 1187, 1190, 1191, 1199, 1202, 1204, 1205, 1208, 1212, 1213, 1215, 1217, 1219, 1220, 1221, 1222, 1223, 1226, 1227, 1228, 1229, 1233, 1236, 1238, 1240, 1241, 1243, 1247, 1248, 1253, 1254, 1255, 1256, 1259, 1264, 1270, 1272, 1273, 1276, 1281, 1283, 1284, 1286, 1289, 1301, 1304, 1306, 1310, 1311, 1312, 1313, 1316, 1317, 1320, 1324, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1358, 1359, 1360, 1361, 1363, 1370, 1371, 1372, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1444, 1447, 1449, 1450, 1451, 1452, 1453, 1455, 1458, 1459, 1461, 1463, 1464, 1465, 1467, 1468, 1487, 1488, 1490, 1491, 1492, 1497, 1498, 1507, 1508, 1512, 1515, 1517, 1526, 1527, 1528, 1539, 1540, 1541, 1550, 1551, 1552, 1553, 1555, 1558, 1565, 1578, 1579, 1584, 1586, 1587, 1589, 1591, 1594, 1595, 1596, 1601, 1603, 1604, 1605, 1606, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1622, 1623, 1629, 1632, 1633, 1636, 1638, 1642, 1643, 1647, 1648, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1677, 1683, 1691, 1695, 1698, 1702, 1704, 1705, 1717, 1719, 1721, 1722, 1723, 1728, 1729, 1730, 1737, 1740, 1750, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1771, 1775, 1779, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1798, 1802, 1803, 1813, 1817, 1820, 1823, 1826, 1827, 1828, 1829, 1831, 1834, 1835, 1836, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1858, 1864, 1866, 1867, 1869, 1872, 1875, 1876, 1877, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1892, 1893, 1895, 1897, 1898, 1899, 1901, 1902, 1905, 1906, 1907, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921], "both": [0, 2, 3, 4, 13, 14, 16, 17, 18, 20, 21, 23, 26, 32, 33, 35, 36, 37, 40, 41, 45, 50, 51, 52, 53, 57, 64, 65, 92, 333, 720, 759, 760, 763, 764, 765, 784, 842, 883, 887, 893, 894, 895, 896, 897, 912, 956, 981, 1052, 1073, 1103, 1104, 1105, 1113, 1127, 1129, 1137, 1144, 1161, 1174, 1175, 1181, 1184, 1197, 1205, 1206, 1254, 1270, 1278, 1284, 1297, 1298, 1329, 1330, 1334, 1335, 1336, 1341, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1371, 1377, 1379, 1380, 1381, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1409, 1410, 1411, 1416, 1422, 1455, 1467, 1468, 1471, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1539, 1540, 1541, 1565, 1596, 1608, 1638, 1658, 1659, 1683, 1706, 1707, 1776, 1777, 1779, 1798, 1802, 1822, 1823, 1854, 1856, 1857, 1864, 1870, 1871, 1873, 1876, 1877, 1878, 1882, 1883, 1885, 1888, 1891, 1892, 1893, 1895, 1899, 1900, 1902, 1905, 1907, 1909, 1911, 1912, 1918, 1920, 1921], "eager": [0, 2, 9, 14, 16, 20, 23, 1032, 1182, 1185, 1195, 1749, 1857, 1880, 1901, 1903, 1905], "compil": [0, 12, 13, 16, 19, 20, 21, 26, 27, 57, 58, 65, 671, 959, 984, 988, 1000, 1001, 1114, 1182, 1184, 1185, 1188, 1189, 1195, 1196, 1197, 1199, 1200, 1201, 1416, 1853, 1854, 1856, 1857, 1858, 1859, 1863, 1876, 1879, 1881, 1887, 1894, 1895, 1919], "mode": [0, 5, 9, 13, 14, 15, 16, 18, 23, 32, 33, 35, 37, 41, 52, 54, 62, 63, 65, 216, 217, 737, 738, 763, 764, 765, 770, 776, 777, 778, 806, 808, 814, 817, 850, 851, 880, 882, 885, 886, 887, 892, 893, 894, 895, 899, 911, 944, 958, 991, 1031, 1032, 1061, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1114, 1117, 1118, 1119, 1120, 1123, 1124, 1132, 1159, 1167, 1168, 1182, 1184, 1185, 1188, 1199, 1201, 1242, 1255, 1285, 1297, 1298, 1334, 1335, 1336, 1344, 1345, 1346, 1360, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1416, 1432, 1455, 1468, 1469, 1490, 1491, 1492, 1507, 1515, 1526, 1553, 1584, 1585, 1586, 1597, 1604, 1608, 1641, 1677, 1685, 1701, 1744, 1746, 1747, 1837, 1852, 1855, 1865, 1870, 1875, 1880, 1881, 1883, 1884, 1888, 1897, 1901, 1903, 1904, 1905, 1907, 1919, 1922], "export": [0, 18, 22, 27, 29, 35, 42, 55, 82, 907, 960, 1187, 1189, 1195, 1201, 1630, 1631, 1649, 1650, 1651, 1653, 1654, 1852, 1854, 1856, 1857, 1882, 1896, 1897, 1901, 1902, 1907], "error": [0, 1, 2, 6, 9, 16, 26, 28, 29, 32, 33, 35, 36, 38, 41, 50, 52, 53, 57, 60, 62, 64, 65, 77, 78, 185, 216, 307, 309, 315, 317, 322, 536, 547, 605, 608, 671, 810, 856, 869, 871, 890, 892, 893, 894, 895, 896, 897, 898, 968, 1003, 1014, 1027, 1031, 1055, 1113, 1117, 1118, 1120, 1125, 1147, 1184, 1189, 1198, 1213, 1214, 1223, 1225, 1227, 1230, 1231, 1232, 1242, 1245, 1255, 1273, 1301, 1306, 1332, 1333, 1366, 1377, 1383, 1407, 1416, 1445, 1447, 1513, 1524, 1546, 1565, 1568, 1569, 1596, 1598, 1599, 1600, 1638, 1643, 1653, 1654, 1697, 1737, 1744, 1793, 1798, 1837, 1844, 1845, 1851, 1852, 1854, 1856, 1857, 1863, 1864, 1869, 1870, 1871, 1872, 1876, 1877, 1880, 1882, 1883, 1885, 1886, 1892, 1895, 1899, 1905, 1907, 1912, 1917, 1918, 1920, 1921], "3": [0, 1, 2, 4, 5, 7, 10, 13, 14, 16, 17, 20, 22, 23, 24, 29, 30, 32, 33, 35, 37, 39, 41, 42, 43, 45, 50, 52, 57, 59, 61, 62, 63, 64, 65, 186, 203, 248, 254, 283, 307, 309, 311, 315, 395, 396, 438, 439, 440, 441, 442, 464, 480, 485, 488, 491, 505, 507, 509, 528, 535, 549, 551, 572, 574, 575, 576, 578, 579, 598, 608, 671, 672, 676, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 690, 725, 729, 730, 731, 732, 733, 734, 737, 739, 748, 751, 752, 753, 754, 756, 763, 764, 765, 776, 784, 815, 852, 853, 856, 866, 867, 869, 870, 871, 878, 879, 892, 893, 894, 895, 896, 897, 912, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 928, 930, 931, 932, 934, 935, 936, 937, 938, 942, 943, 946, 949, 950, 955, 956, 957, 1000, 1001, 1003, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1070, 1073, 1078, 1081, 1085, 1091, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1115, 1120, 1121, 1123, 1125, 1126, 1127, 1128, 1137, 1140, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1158, 1159, 1161, 1169, 1171, 1173, 1175, 1184, 1188, 1190, 1193, 1195, 1199, 1200, 1204, 1205, 1206, 1207, 1208, 1209, 1213, 1215, 1216, 1217, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1261, 1264, 1266, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1290, 1291, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1329, 1330, 1331, 1332, 1333, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1352, 1359, 1360, 1363, 1364, 1365, 1366, 1368, 1369, 1371, 1373, 1374, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1419, 1421, 1423, 1428, 1429, 1431, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1449, 1450, 1451, 1455, 1463, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1480, 1482, 1487, 1488, 1491, 1492, 1494, 1495, 1498, 1506, 1507, 1510, 1511, 1513, 1515, 1519, 1520, 1526, 1534, 1550, 1552, 1553, 1556, 1557, 1563, 1564, 1571, 1572, 1584, 1596, 1604, 1618, 1620, 1622, 1623, 1624, 1625, 1629, 1631, 1632, 1633, 1634, 1637, 1642, 1643, 1644, 1646, 1647, 1648, 1650, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1683, 1684, 1686, 1690, 1692, 1694, 1698, 1699, 1701, 1702, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1714, 1716, 1717, 1718, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1733, 1737, 1741, 1742, 1743, 1750, 1753, 1755, 1757, 1759, 1760, 1761, 1765, 1766, 1767, 1775, 1777, 1779, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1793, 1801, 1802, 1804, 1805, 1811, 1812, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1841, 1844, 1845, 1846, 1847, 1849, 1850, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1888, 1889, 1893, 1894, 1895, 1898, 1899, 1902, 1904, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919], "partial": [0, 16, 19, 41, 43, 52, 57, 60, 65, 832, 1003, 1047, 1124, 1137, 1230, 1231, 1232, 1274, 1412, 1413, 1414, 1542, 1543, 1544, 1596, 1615, 1782, 1857, 1858, 1871, 1877, 1882, 1885, 1895, 1909, 1918], "least": [0, 2, 6, 7, 9, 14, 23, 33, 37, 41, 51, 52, 57, 254, 396, 688, 915, 1045, 1047, 1048, 1057, 1098, 1099, 1137, 1145, 1146, 1181, 1206, 1229, 1256, 1278, 1310, 1324, 1596, 1630, 1851, 1857, 1871, 1875, 1877, 1878, 1880, 1884, 1900, 1903, 1909, 1911, 1912, 1913, 1918], "full": [0, 4, 8, 9, 13, 14, 15, 17, 18, 23, 27, 32, 33, 35, 39, 41, 52, 55, 57, 58, 62, 65, 505, 891, 913, 922, 944, 1085, 1086, 1087, 1091, 1092, 1094, 1112, 1124, 1125, 1141, 1142, 1188, 1221, 1222, 1229, 1230, 1231, 1242, 1247, 1248, 1256, 1273, 1333, 1339, 1370, 1430, 1459, 1490, 1491, 1492, 1499, 1512, 1558, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1750, 1802, 1803, 1844, 1851, 1853, 1854, 1855, 1856, 1857, 1859, 1871, 1876, 1880, 1881, 1882, 1885, 1888, 1891, 1892, 1897, 1899, 1902, 1905, 1908, 1915, 1918], "unbound": 0, "rang": [0, 1, 2, 4, 12, 17, 23, 32, 35, 36, 39, 41, 52, 53, 55, 61, 65, 83, 295, 474, 675, 752, 754, 756, 786, 810, 811, 812, 813, 814, 816, 817, 818, 876, 914, 939, 1018, 1019, 1027, 1057, 1107, 1123, 1144, 1145, 1146, 1250, 1261, 1276, 1285, 1301, 1313, 1324, 1352, 1362, 1364, 1365, 1369, 1375, 1387, 1406, 1418, 1423, 1427, 1433, 1449, 1450, 1451, 1455, 1510, 1511, 1515, 1571, 1596, 1601, 1673, 1674, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1702, 1781, 1836, 1854, 1855, 1857, 1877, 1879, 1880, 1884, 1888, 1890, 1891, 1895, 1897, 1898, 1901, 1902, 1905, 1906, 1912, 1914, 1916, 1917, 1918, 1919], "shape": [0, 2, 9, 13, 14, 15, 18, 22, 23, 24, 33, 35, 41, 57, 59, 61, 63, 65, 92, 166, 186, 203, 213, 394, 396, 438, 440, 442, 464, 489, 490, 505, 507, 509, 535, 557, 608, 671, 676, 678, 679, 688, 726, 736, 737, 747, 749, 751, 755, 757, 758, 759, 760, 763, 764, 765, 772, 787, 869, 875, 889, 893, 895, 896, 897, 908, 914, 915, 917, 920, 925, 927, 931, 932, 944, 951, 973, 1047, 1048, 1049, 1051, 1052, 1057, 1058, 1060, 1062, 1077, 1078, 1079, 1080, 1088, 1089, 1090, 1096, 1102, 1103, 1104, 1105, 1111, 1118, 1119, 1123, 1124, 1125, 1126, 1128, 1140, 1145, 1146, 1150, 1158, 1161, 1175, 1181, 1197, 1199, 1200, 1203, 1208, 1209, 1213, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1272, 1273, 1277, 1285, 1290, 1291, 1305, 1306, 1317, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1506, 1507, 1511, 1515, 1517, 1526, 1527, 1532, 1539, 1540, 1541, 1551, 1552, 1555, 1556, 1557, 1559, 1565, 1584, 1587, 1596, 1598, 1599, 1603, 1605, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1644, 1647, 1652, 1654, 1689, 1698, 1702, 1706, 1707, 1710, 1712, 1713, 1714, 1721, 1723, 1724, 1728, 1737, 1740, 1765, 1779, 1780, 1782, 1785, 1787, 1793, 1798, 1799, 1802, 1812, 1819, 1823, 1833, 1834, 1835, 1844, 1847, 1849, 1853, 1854, 1855, 1857, 1870, 1871, 1872, 1877, 1878, 1880, 1882, 1883, 1884, 1896, 1897, 1901, 1904, 1907, 1911, 1912, 1916, 1917, 1918, 1919], "pass": [0, 1, 2, 4, 6, 7, 8, 12, 14, 15, 17, 18, 20, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 64, 65, 145, 248, 441, 505, 507, 509, 535, 551, 784, 785, 814, 817, 850, 852, 871, 880, 881, 882, 883, 884, 890, 898, 928, 944, 958, 992, 1003, 1047, 1078, 1079, 1080, 1088, 1089, 1090, 1096, 1110, 1113, 1114, 1118, 1119, 1120, 1123, 1124, 1146, 1182, 1184, 1185, 1188, 1193, 1195, 1199, 1200, 1228, 1244, 1246, 1255, 1301, 1324, 1325, 1326, 1327, 1335, 1353, 1359, 1360, 1364, 1365, 1416, 1421, 1422, 1444, 1460, 1461, 1462, 1463, 1468, 1480, 1510, 1511, 1515, 1526, 1527, 1553, 1565, 1587, 1590, 1591, 1592, 1593, 1596, 1606, 1608, 1610, 1615, 1629, 1632, 1636, 1638, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1733, 1737, 1741, 1802, 1851, 1854, 1858, 1861, 1865, 1867, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1885, 1887, 1888, 1891, 1895, 1896, 1898, 1899, 1900, 1907, 1909, 1911, 1912, 1914, 1916, 1917, 1918, 1921, 1922], "through": [0, 1, 6, 8, 10, 12, 14, 17, 21, 22, 23, 27, 32, 35, 37, 41, 45, 57, 62, 64, 65, 488, 783, 831, 845, 852, 853, 890, 899, 900, 965, 1003, 1084, 1117, 1125, 1182, 1185, 1187, 1199, 1200, 1202, 1219, 1220, 1241, 1247, 1264, 1423, 1460, 1461, 1462, 1463, 1517, 1587, 1596, 1608, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1701, 1844, 1851, 1852, 1856, 1857, 1861, 1863, 1867, 1869, 1870, 1871, 1877, 1880, 1882, 1884, 1885, 1887, 1888, 1894, 1895, 1899, 1900, 1902, 1905, 1907, 1908, 1909, 1911, 1915, 1919, 1921, 1923], "4": [0, 2, 4, 13, 14, 17, 23, 24, 29, 30, 32, 33, 35, 37, 39, 41, 42, 43, 50, 52, 62, 65, 186, 203, 236, 248, 283, 305, 307, 309, 311, 315, 395, 396, 438, 439, 464, 476, 480, 485, 488, 491, 505, 509, 528, 535, 547, 549, 551, 575, 576, 598, 608, 674, 675, 676, 677, 680, 682, 683, 684, 686, 687, 688, 690, 730, 732, 733, 734, 737, 739, 748, 751, 764, 765, 815, 856, 865, 866, 867, 871, 872, 873, 874, 875, 876, 878, 879, 890, 892, 895, 896, 897, 912, 915, 918, 922, 923, 924, 928, 930, 933, 934, 937, 938, 939, 942, 946, 951, 952, 953, 954, 957, 1037, 1040, 1047, 1049, 1051, 1052, 1055, 1056, 1057, 1060, 1062, 1072, 1073, 1075, 1077, 1085, 1091, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1105, 1107, 1108, 1110, 1113, 1115, 1123, 1124, 1125, 1126, 1127, 1128, 1137, 1140, 1144, 1145, 1146, 1147, 1149, 1150, 1154, 1158, 1161, 1173, 1175, 1181, 1190, 1195, 1197, 1204, 1205, 1206, 1207, 1208, 1209, 1213, 1215, 1216, 1222, 1224, 1226, 1227, 1228, 1231, 1233, 1236, 1238, 1240, 1242, 1244, 1246, 1249, 1250, 1251, 1253, 1254, 1257, 1259, 1260, 1265, 1267, 1268, 1270, 1272, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1304, 1305, 1306, 1314, 1315, 1316, 1317, 1324, 1329, 1340, 1341, 1342, 1345, 1346, 1348, 1349, 1357, 1359, 1360, 1361, 1363, 1367, 1368, 1386, 1387, 1412, 1413, 1419, 1421, 1423, 1428, 1429, 1431, 1437, 1438, 1439, 1440, 1441, 1455, 1467, 1468, 1469, 1470, 1471, 1472, 1480, 1482, 1491, 1494, 1506, 1507, 1515, 1526, 1550, 1553, 1556, 1557, 1583, 1584, 1585, 1586, 1587, 1596, 1603, 1608, 1619, 1631, 1632, 1634, 1636, 1642, 1643, 1644, 1646, 1648, 1650, 1655, 1668, 1673, 1674, 1680, 1684, 1685, 1686, 1690, 1694, 1695, 1698, 1699, 1701, 1702, 1704, 1708, 1710, 1712, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1728, 1729, 1730, 1732, 1733, 1737, 1750, 1757, 1759, 1760, 1765, 1766, 1768, 1770, 1775, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1798, 1801, 1804, 1805, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1841, 1842, 1843, 1844, 1845, 1846, 1850, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1869, 1871, 1872, 1875, 1877, 1878, 1880, 1881, 1882, 1888, 1890, 1893, 1894, 1895, 1899, 1900, 1902, 1904, 1907, 1911, 1912, 1914, 1915, 1916, 1917, 1918], "attempt": [0, 1, 2, 9, 14, 23, 26, 35, 52, 53, 62, 938, 952, 1188, 1194, 1273, 1565, 1598, 1599, 1658, 1659, 1837, 1854, 1857, 1870, 1871, 1876, 1880, 1882, 1894, 1898, 1899, 1907], "explicitli": [0, 1, 9, 26, 35, 40, 45, 57, 994, 1045, 1047, 1057, 1146, 1224, 1237, 1241, 1249, 1291, 1526, 1584, 1683, 1798, 1854, 1856, 1857, 1858, 1863, 1880, 1882, 1885, 1887, 1893, 1895, 1899, 1900, 1906, 1907, 1911], "As": [0, 1, 2, 9, 12, 17, 23, 33, 35, 37, 41, 57, 60, 61, 65, 248, 926, 1057, 1188, 1215, 1219, 1220, 1230, 1231, 1242, 1247, 1355, 1356, 1357, 1361, 1382, 1416, 1447, 1583, 1642, 1648, 1850, 1854, 1856, 1857, 1864, 1872, 1877, 1880, 1882, 1884, 1888, 1891, 1894, 1895, 1899, 1900, 1906, 1907, 1908, 1909, 1911, 1919], "all": [0, 1, 2, 3, 4, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 41, 43, 45, 49, 50, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 70, 83, 145, 254, 307, 309, 315, 329, 479, 505, 507, 509, 537, 551, 598, 601, 608, 671, 677, 678, 683, 685, 689, 690, 726, 751, 782, 784, 785, 805, 831, 845, 849, 852, 865, 868, 880, 881, 882, 884, 885, 888, 889, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 908, 909, 910, 914, 923, 925, 930, 931, 935, 938, 939, 943, 955, 960, 961, 963, 964, 972, 973, 982, 990, 994, 1000, 1004, 1005, 1013, 1014, 1021, 1022, 1024, 1025, 1029, 1031, 1033, 1074, 1075, 1076, 1077, 1080, 1083, 1084, 1087, 1090, 1092, 1094, 1110, 1113, 1114, 1120, 1121, 1123, 1124, 1126, 1146, 1149, 1180, 1181, 1184, 1191, 1194, 1195, 1198, 1199, 1219, 1246, 1255, 1271, 1273, 1281, 1283, 1286, 1294, 1303, 1311, 1312, 1313, 1314, 1324, 1331, 1333, 1337, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1359, 1360, 1363, 1368, 1369, 1370, 1371, 1376, 1382, 1383, 1386, 1387, 1403, 1407, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1427, 1431, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1455, 1459, 1461, 1463, 1464, 1467, 1472, 1473, 1480, 1486, 1506, 1507, 1512, 1517, 1536, 1537, 1565, 1571, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1600, 1603, 1608, 1615, 1619, 1629, 1633, 1641, 1642, 1643, 1644, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1684, 1685, 1686, 1687, 1699, 1777, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1793, 1795, 1796, 1797, 1798, 1801, 1817, 1819, 1826, 1827, 1828, 1829, 1832, 1835, 1839, 1840, 1842, 1846, 1851, 1854, 1855, 1856, 1857, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1922], "call": [0, 1, 2, 3, 4, 9, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 52, 54, 57, 58, 59, 61, 62, 63, 64, 65, 70, 145, 284, 317, 329, 451, 479, 480, 547, 571, 605, 608, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 772, 781, 788, 815, 848, 852, 853, 884, 888, 889, 890, 891, 892, 894, 895, 898, 904, 905, 927, 944, 958, 961, 963, 992, 994, 1004, 1005, 1014, 1021, 1022, 1024, 1025, 1055, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1113, 1114, 1125, 1129, 1147, 1159, 1169, 1184, 1187, 1189, 1194, 1195, 1196, 1203, 1239, 1247, 1251, 1253, 1255, 1256, 1285, 1328, 1334, 1335, 1336, 1353, 1354, 1355, 1356, 1357, 1359, 1361, 1363, 1401, 1412, 1413, 1414, 1416, 1423, 1424, 1444, 1455, 1467, 1493, 1494, 1495, 1501, 1502, 1503, 1508, 1526, 1565, 1584, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1605, 1608, 1615, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1631, 1637, 1638, 1640, 1641, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1714, 1741, 1748, 1749, 1777, 1796, 1797, 1798, 1818, 1837, 1839, 1840, 1844, 1845, 1851, 1854, 1858, 1861, 1867, 1869, 1871, 1872, 1873, 1876, 1877, 1879, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 1922, 1923], "made": [0, 10, 17, 23, 37, 39, 40, 53, 65, 890, 900, 1184, 1416, 1461, 1463, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1718, 1856, 1864, 1877, 1894, 1899, 1916, 1918, 1922], "befor": [0, 1, 2, 4, 7, 8, 12, 17, 19, 21, 23, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 44, 49, 51, 52, 53, 54, 57, 65, 92, 145, 738, 751, 779, 780, 781, 884, 888, 890, 942, 960, 1038, 1039, 1040, 1049, 1057, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1098, 1099, 1102, 1110, 1113, 1184, 1195, 1197, 1236, 1240, 1253, 1283, 1311, 1314, 1353, 1359, 1360, 1363, 1368, 1416, 1417, 1418, 1455, 1459, 1467, 1515, 1534, 1571, 1572, 1587, 1590, 1591, 1592, 1593, 1596, 1604, 1637, 1640, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1685, 1699, 1702, 1728, 1737, 1748, 1749, 1778, 1781, 1784, 1785, 1786, 1788, 1789, 1798, 1801, 1823, 1834, 1854, 1856, 1857, 1869, 1876, 1877, 1880, 1881, 1882, 1885, 1887, 1888, 1891, 1893, 1894, 1898, 1899, 1900, 1902, 1907, 1908, 1909, 1911, 1912, 1916, 1918], "mark_stat": [0, 1852], "none": [0, 1, 2, 3, 4, 6, 12, 15, 17, 23, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 49, 50, 52, 54, 57, 61, 62, 63, 64, 65, 107, 109, 110, 111, 113, 129, 130, 133, 145, 148, 149, 151, 168, 180, 181, 182, 183, 199, 200, 202, 204, 207, 208, 209, 210, 224, 229, 230, 231, 232, 252, 280, 284, 295, 329, 345, 348, 371, 401, 403, 404, 405, 408, 414, 420, 421, 422, 423, 424, 425, 438, 439, 440, 441, 442, 446, 447, 463, 472, 474, 480, 486, 495, 505, 512, 528, 529, 543, 544, 546, 547, 556, 571, 572, 574, 579, 581, 594, 599, 600, 601, 606, 617, 619, 621, 623, 625, 627, 629, 631, 633, 635, 637, 639, 641, 643, 646, 648, 650, 651, 653, 655, 657, 659, 661, 663, 665, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 686, 687, 688, 689, 690, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 740, 741, 742, 743, 744, 745, 746, 757, 758, 759, 760, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 784, 785, 786, 788, 790, 805, 808, 810, 811, 812, 813, 816, 817, 829, 830, 831, 848, 849, 850, 851, 852, 853, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 869, 870, 871, 872, 873, 874, 875, 876, 880, 881, 882, 883, 884, 885, 886, 887, 890, 891, 893, 895, 896, 897, 898, 899, 900, 904, 905, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 928, 931, 933, 934, 935, 936, 937, 939, 940, 942, 944, 946, 947, 948, 950, 951, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 965, 969, 970, 972, 973, 974, 977, 978, 979, 985, 986, 992, 1002, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1044, 1049, 1050, 1052, 1053, 1054, 1056, 1058, 1059, 1060, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1111, 1112, 1113, 1114, 1115, 1119, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1161, 1162, 1178, 1179, 1181, 1183, 1184, 1188, 1191, 1193, 1194, 1195, 1197, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1359, 1360, 1362, 1364, 1365, 1366, 1369, 1370, 1371, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1427, 1430, 1432, 1433, 1447, 1448, 1449, 1450, 1451, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1475, 1476, 1480, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1506, 1507, 1510, 1511, 1512, 1513, 1515, 1516, 1523, 1525, 1526, 1527, 1528, 1529, 1532, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1555, 1558, 1565, 1569, 1570, 1571, 1572, 1580, 1581, 1582, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1603, 1604, 1607, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1629, 1631, 1632, 1633, 1634, 1637, 1638, 1640, 1642, 1643, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1689, 1690, 1691, 1694, 1695, 1696, 1698, 1699, 1701, 1702, 1705, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1721, 1722, 1723, 1728, 1730, 1731, 1732, 1737, 1750, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1775, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1813, 1814, 1815, 1816, 1818, 1820, 1823, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1834, 1835, 1838, 1839, 1840, 1841, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1875, 1877, 1880, 1882, 1883, 1888, 1890, 1893, 1895, 1899, 1900, 1901, 1902, 1904, 1906, 1907, 1912, 1913, 1914, 1916, 1918, 1920, 1921, 1922], "static": [0, 2, 4, 9, 13, 17, 26, 36, 41, 43, 57, 785, 806, 808, 817, 823, 848, 850, 852, 880, 881, 882, 883, 1197, 1459, 1596, 1777, 1854, 1855, 1856, 1857, 1880, 1887, 1896, 1900, 1903, 1907, 1913], "prevent": [0, 1, 8, 9, 17, 32, 33, 35, 36, 43, 57, 65, 726, 890, 960, 1038, 1039, 1181, 1283, 1311, 1314, 1354, 1422, 1447, 1534, 1571, 1572, 1587, 1596, 1699, 1778, 1781, 1801, 1827, 1829, 1837, 1869, 1876, 1877, 1880, 1881, 1884, 1888, 1899, 1901, 1909, 1911, 1912], "u": [0, 8, 9, 14, 17, 23, 58, 63, 65, 751, 892, 935, 936, 937, 1220, 1222, 1226, 1230, 1231, 1247, 1273, 1275, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1368, 1369, 1386, 1387, 1401, 1403, 1431, 1433, 1434, 1455, 1466, 1608, 1691, 1802, 1803, 1853, 1854, 1855, 1864, 1871, 1875, 1877, 1880, 1881, 1882, 1883, 1888, 1899, 1901, 1911, 1915, 1916], "from": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 49, 50, 52, 54, 55, 57, 58, 60, 62, 63, 64, 83, 148, 149, 168, 191, 216, 217, 252, 280, 307, 309, 313, 315, 371, 396, 441, 447, 464, 466, 467, 474, 479, 480, 485, 505, 507, 509, 535, 537, 551, 571, 598, 599, 601, 608, 671, 703, 704, 705, 706, 707, 708, 711, 719, 720, 723, 726, 729, 730, 731, 732, 733, 734, 736, 737, 747, 751, 755, 763, 764, 765, 772, 779, 780, 783, 784, 785, 788, 791, 806, 807, 808, 815, 817, 831, 845, 849, 851, 852, 853, 855, 856, 870, 871, 882, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 904, 905, 913, 914, 922, 923, 928, 929, 941, 959, 960, 963, 972, 973, 974, 992, 996, 1014, 1041, 1057, 1077, 1079, 1080, 1085, 1086, 1087, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1141, 1142, 1146, 1161, 1181, 1182, 1184, 1185, 1187, 1189, 1190, 1191, 1194, 1195, 1207, 1223, 1227, 1236, 1239, 1240, 1253, 1254, 1255, 1256, 1270, 1274, 1275, 1288, 1293, 1297, 1298, 1299, 1301, 1306, 1315, 1316, 1324, 1328, 1334, 1335, 1336, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1368, 1369, 1370, 1371, 1377, 1379, 1380, 1381, 1382, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1416, 1417, 1418, 1422, 1426, 1427, 1431, 1433, 1434, 1455, 1460, 1461, 1465, 1467, 1468, 1480, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1512, 1515, 1517, 1526, 1539, 1540, 1541, 1553, 1583, 1587, 1596, 1600, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1640, 1644, 1650, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1691, 1694, 1702, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1723, 1724, 1727, 1729, 1730, 1737, 1750, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1798, 1799, 1803, 1813, 1816, 1825, 1827, 1829, 1834, 1835, 1837, 1838, 1847, 1852, 1854, 1855, 1856, 1857, 1859, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1875, 1877, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1898, 1900, 1901, 1902, 1903, 1907, 1908, 1909, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922], "can": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 145, 149, 248, 317, 329, 451, 480, 505, 507, 536, 605, 608, 671, 678, 720, 732, 733, 734, 739, 748, 749, 751, 759, 760, 763, 764, 765, 776, 782, 783, 784, 785, 788, 790, 805, 811, 814, 815, 817, 828, 832, 845, 849, 850, 852, 853, 854, 870, 871, 880, 881, 882, 884, 885, 886, 887, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 904, 905, 907, 911, 914, 931, 937, 944, 949, 958, 960, 963, 970, 972, 974, 981, 982, 1000, 1002, 1006, 1008, 1010, 1014, 1015, 1040, 1057, 1058, 1061, 1062, 1075, 1077, 1078, 1079, 1080, 1093, 1096, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1123, 1124, 1125, 1128, 1129, 1137, 1140, 1145, 1146, 1159, 1175, 1181, 1182, 1184, 1185, 1187, 1188, 1190, 1194, 1195, 1197, 1199, 1200, 1205, 1208, 1215, 1223, 1226, 1230, 1231, 1236, 1239, 1242, 1243, 1247, 1253, 1255, 1272, 1273, 1275, 1285, 1294, 1313, 1315, 1316, 1317, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1353, 1354, 1358, 1359, 1360, 1361, 1364, 1365, 1368, 1373, 1374, 1375, 1377, 1383, 1385, 1386, 1389, 1390, 1391, 1402, 1406, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1421, 1422, 1423, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1443, 1444, 1447, 1452, 1455, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1468, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1510, 1511, 1526, 1539, 1540, 1541, 1559, 1565, 1584, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1598, 1599, 1600, 1608, 1629, 1630, 1636, 1641, 1643, 1647, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1680, 1681, 1683, 1687, 1689, 1698, 1702, 1710, 1714, 1724, 1730, 1733, 1745, 1747, 1748, 1750, 1775, 1777, 1784, 1785, 1786, 1787, 1788, 1789, 1793, 1796, 1797, 1798, 1802, 1816, 1820, 1823, 1825, 1833, 1836, 1839, 1840, 1844, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1861, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1872, 1873, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923], "improv": [0, 1, 2, 4, 10, 19, 23, 26, 30, 33, 35, 57, 65, 751, 795, 796, 797, 892, 894, 898, 952, 1137, 1354, 1368, 1386, 1431, 1462, 1565, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1685, 1852, 1854, 1876, 1881, 1882, 1883, 1891, 1892, 1896, 1902, 1903, 1907], "time": [0, 2, 4, 5, 8, 9, 10, 12, 13, 14, 17, 19, 20, 21, 22, 23, 26, 32, 33, 35, 36, 37, 39, 41, 42, 43, 49, 52, 53, 54, 62, 64, 65, 83, 284, 307, 480, 485, 608, 671, 676, 677, 678, 679, 680, 681, 682, 685, 736, 737, 747, 751, 755, 759, 760, 790, 792, 815, 832, 868, 898, 904, 905, 909, 912, 924, 932, 934, 949, 956, 960, 961, 963, 1003, 1016, 1035, 1038, 1049, 1078, 1079, 1080, 1086, 1097, 1098, 1099, 1107, 1110, 1119, 1120, 1121, 1124, 1125, 1173, 1181, 1184, 1191, 1196, 1199, 1200, 1204, 1209, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1228, 1229, 1230, 1233, 1235, 1239, 1242, 1244, 1246, 1247, 1255, 1256, 1278, 1288, 1305, 1306, 1308, 1318, 1326, 1327, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1360, 1363, 1364, 1365, 1368, 1379, 1380, 1381, 1386, 1388, 1402, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1428, 1429, 1431, 1452, 1455, 1467, 1468, 1469, 1470, 1480, 1483, 1484, 1510, 1511, 1555, 1556, 1557, 1573, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1603, 1604, 1606, 1608, 1642, 1658, 1659, 1679, 1689, 1690, 1701, 1723, 1729, 1779, 1793, 1798, 1799, 1818, 1844, 1852, 1856, 1857, 1858, 1863, 1865, 1869, 1875, 1877, 1879, 1881, 1882, 1884, 1885, 1887, 1888, 1890, 1892, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1907, 1908, 1909, 1911, 1916, 1921], "perform": [0, 1, 2, 3, 4, 5, 6, 12, 14, 15, 16, 17, 18, 19, 21, 24, 26, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 52, 53, 57, 61, 64, 65, 114, 201, 204, 451, 571, 594, 608, 677, 678, 679, 680, 681, 682, 751, 772, 795, 796, 797, 838, 849, 852, 885, 890, 892, 894, 895, 898, 899, 912, 924, 944, 949, 950, 959, 965, 1014, 1038, 1039, 1052, 1077, 1100, 1102, 1113, 1114, 1117, 1148, 1159, 1184, 1193, 1194, 1199, 1227, 1229, 1232, 1236, 1239, 1240, 1244, 1245, 1253, 1254, 1256, 1261, 1270, 1283, 1288, 1297, 1298, 1308, 1311, 1314, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1356, 1359, 1360, 1368, 1386, 1416, 1422, 1424, 1431, 1444, 1459, 1462, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1534, 1551, 1565, 1571, 1572, 1587, 1596, 1598, 1599, 1604, 1608, 1629, 1636, 1638, 1643, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1691, 1699, 1727, 1741, 1745, 1773, 1778, 1779, 1780, 1781, 1801, 1803, 1837, 1852, 1854, 1857, 1867, 1869, 1870, 1871, 1873, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1889, 1891, 1892, 1895, 1898, 1899, 1901, 1902, 1903, 1905, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1922], "ha": [0, 1, 2, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 23, 24, 26, 27, 28, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 49, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 83, 145, 191, 204, 249, 254, 329, 438, 439, 440, 441, 442, 466, 467, 488, 490, 535, 571, 572, 594, 595, 609, 671, 680, 684, 686, 687, 688, 690, 726, 751, 770, 772, 776, 778, 782, 788, 829, 831, 838, 849, 855, 865, 866, 868, 880, 883, 884, 886, 888, 894, 899, 900, 914, 932, 935, 936, 949, 950, 951, 957, 960, 961, 963, 968, 996, 999, 1000, 1045, 1047, 1061, 1093, 1105, 1113, 1114, 1117, 1118, 1121, 1125, 1137, 1146, 1147, 1158, 1181, 1184, 1188, 1191, 1194, 1195, 1196, 1199, 1204, 1205, 1213, 1214, 1215, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1235, 1237, 1238, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1250, 1251, 1255, 1264, 1271, 1273, 1278, 1281, 1283, 1284, 1285, 1286, 1288, 1289, 1311, 1312, 1313, 1314, 1332, 1333, 1334, 1335, 1336, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1353, 1354, 1360, 1363, 1364, 1365, 1368, 1371, 1376, 1379, 1380, 1381, 1386, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1420, 1421, 1422, 1423, 1424, 1431, 1447, 1449, 1455, 1463, 1467, 1468, 1480, 1490, 1491, 1492, 1498, 1507, 1510, 1511, 1515, 1526, 1550, 1552, 1553, 1555, 1559, 1565, 1571, 1584, 1586, 1587, 1590, 1591, 1596, 1603, 1605, 1607, 1610, 1614, 1616, 1619, 1629, 1630, 1637, 1638, 1642, 1644, 1650, 1653, 1655, 1658, 1659, 1675, 1676, 1677, 1679, 1683, 1685, 1689, 1699, 1701, 1702, 1703, 1704, 1721, 1723, 1733, 1745, 1767, 1780, 1781, 1782, 1793, 1795, 1796, 1797, 1798, 1801, 1802, 1819, 1825, 1839, 1840, 1844, 1854, 1856, 1857, 1863, 1864, 1867, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1887, 1888, 1890, 1891, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1916, 1917, 1918, 1919], "lower": [0, 1, 2, 9, 14, 23, 33, 35, 41, 57, 784, 786, 850, 923, 928, 935, 936, 937, 939, 1071, 1072, 1144, 1145, 1213, 1220, 1222, 1230, 1231, 1238, 1241, 1246, 1284, 1306, 1313, 1324, 1434, 1490, 1491, 1492, 1563, 1564, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1683, 1685, 1700, 1702, 1722, 1737, 1745, 1782, 1825, 1826, 1827, 1853, 1854, 1855, 1857, 1873, 1875, 1877, 1888, 1897, 1902, 1912, 1918], "preced": [0, 39, 43, 57, 671, 1591, 1683, 1822, 1858, 1879, 1898, 1902], "backend": [0, 2, 13, 14, 15, 17, 18, 20, 21, 26, 51, 55, 57, 732, 733, 734, 783, 784, 824, 846, 847, 850, 852, 853, 892, 898, 944, 983, 1014, 1057, 1114, 1197, 1227, 1229, 1247, 1297, 1298, 1299, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1515, 1553, 1565, 1596, 1653, 1654, 1745, 1852, 1853, 1855, 1856, 1861, 1865, 1868, 1879, 1880, 1891, 1892, 1895, 1903, 1905, 1911, 1913], "inductor": [0, 12, 15, 16, 18, 20, 23, 671, 944, 1863], "nopython": [0, 14, 16, 17, 23], "guard_export_fn": 0, "guard_fail_fn": 0, "disabl": [0, 1, 3, 6, 13, 14, 15, 20, 23, 36, 41, 57, 65, 801, 802, 911, 944, 1003, 1057, 1061, 1113, 1159, 1184, 1186, 1199, 1200, 1416, 1422, 1455, 1463, 1565, 1596, 1597, 1638, 1641, 1746, 1747, 1750, 1777, 1852, 1856, 1863, 1876, 1879, 1880, 1881, 1882, 1886, 1891, 1892, 1895, 1900, 1906, 1911, 1918], "main": [0, 4, 8, 12, 14, 17, 22, 32, 33, 35, 36, 41, 43, 44, 45, 50, 52, 53, 54, 55, 65, 254, 488, 1044, 1045, 1046, 1047, 1048, 1246, 1517, 1782, 1826, 1827, 1828, 1829, 1851, 1854, 1867, 1869, 1871, 1872, 1876, 1877, 1880, 1881, 1882, 1883, 1888, 1894, 1907, 1908, 1916, 1917], "entrypoint": [0, 37, 40, 43, 45, 50, 53, 1869], "do": [0, 1, 2, 5, 8, 9, 10, 17, 18, 19, 20, 22, 23, 24, 26, 27, 32, 33, 35, 39, 40, 42, 43, 45, 52, 53, 54, 57, 58, 59, 62, 63, 64, 65, 487, 505, 507, 509, 749, 814, 817, 854, 883, 885, 890, 899, 930, 943, 1003, 1036, 1037, 1038, 1039, 1108, 1110, 1119, 1126, 1146, 1159, 1171, 1181, 1187, 1195, 1199, 1229, 1247, 1256, 1263, 1273, 1275, 1284, 1306, 1316, 1328, 1338, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1373, 1374, 1375, 1402, 1434, 1435, 1436, 1443, 1458, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1517, 1519, 1534, 1587, 1596, 1644, 1652, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1672, 1689, 1695, 1837, 1851, 1852, 1854, 1855, 1857, 1859, 1861, 1869, 1870, 1871, 1876, 1877, 1878, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1901, 1902, 1903, 1907, 1909, 1912, 1913, 1914, 1915, 1916, 1918], "extract": [0, 12, 21, 29, 65, 827, 1359, 1363, 1467, 1506, 1583, 1901, 1907, 1921], "paramet": [0, 1, 2, 3, 4, 6, 13, 14, 15, 18, 22, 24, 26, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 46, 50, 52, 54, 57, 59, 61, 64, 65, 83, 145, 150, 165, 167, 170, 173, 174, 175, 190, 191, 201, 204, 234, 248, 249, 254, 261, 291, 307, 309, 311, 313, 315, 319, 325, 387, 394, 396, 438, 439, 440, 441, 442, 451, 464, 485, 488, 489, 490, 491, 492, 505, 507, 509, 512, 516, 528, 535, 536, 537, 551, 557, 574, 575, 576, 578, 579, 594, 595, 598, 608, 609, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 726, 729, 730, 731, 732, 733, 734, 735, 736, 737, 741, 746, 747, 749, 750, 751, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 784, 786, 788, 790, 791, 792, 805, 810, 811, 812, 813, 814, 815, 816, 817, 818, 829, 830, 831, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 884, 892, 893, 894, 895, 896, 897, 898, 899, 900, 906, 907, 908, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 946, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 968, 969, 970, 971, 972, 973, 974, 977, 978, 979, 981, 985, 986, 987, 989, 992, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1154, 1158, 1159, 1161, 1163, 1164, 1166, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1194, 1195, 1196, 1197, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1296, 1297, 1298, 1301, 1302, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1451, 1452, 1453, 1455, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1510, 1511, 1512, 1514, 1515, 1517, 1519, 1526, 1527, 1534, 1539, 1540, 1541, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1565, 1571, 1572, 1580, 1584, 1585, 1586, 1587, 1595, 1596, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1691, 1692, 1694, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1806, 1807, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1849, 1850, 1851, 1852, 1854, 1857, 1859, 1861, 1865, 1866, 1869, 1871, 1872, 1873, 1875, 1876, 1877, 1880, 1881, 1882, 1886, 1887, 1888, 1890, 1892, 1893, 1895, 1899, 1900, 1901, 1902, 1906, 1907, 1908, 1911, 1912, 1913, 1916, 1918, 1920, 1921, 1922], "One": [0, 4, 9, 12, 26, 35, 37, 57, 60, 62, 65, 574, 923, 1114, 1125, 1175, 1468, 1552, 1603, 1606, 1672, 1677, 1685, 1712, 1713, 1833, 1844, 1854, 1856, 1857, 1871, 1872, 1878, 1879, 1880, 1882, 1887, 1900, 1909, 1916], "thing": [0, 2, 4, 8, 9, 14, 17, 23, 35, 62, 65, 1114, 1193, 1285, 1332, 1517, 1776, 1856, 1877, 1880, 1882, 1883, 1884, 1885, 1890, 1895, 1899, 1902, 1903, 1909], "either": [0, 2, 9, 10, 14, 15, 16, 18, 26, 29, 32, 33, 35, 39, 40, 41, 43, 45, 50, 52, 53, 54, 57, 62, 64, 65, 149, 216, 307, 315, 505, 507, 608, 671, 723, 729, 730, 731, 736, 737, 747, 755, 770, 776, 782, 849, 881, 883, 890, 899, 900, 931, 944, 963, 971, 1057, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1110, 1114, 1137, 1161, 1177, 1184, 1199, 1239, 1254, 1255, 1270, 1285, 1322, 1323, 1326, 1327, 1330, 1331, 1332, 1333, 1344, 1345, 1346, 1348, 1349, 1350, 1352, 1360, 1370, 1376, 1383, 1385, 1407, 1408, 1410, 1411, 1416, 1419, 1420, 1421, 1422, 1423, 1430, 1431, 1433, 1447, 1448, 1463, 1464, 1466, 1468, 1469, 1470, 1487, 1488, 1498, 1526, 1527, 1550, 1558, 1584, 1591, 1596, 1621, 1643, 1658, 1659, 1661, 1683, 1698, 1700, 1742, 1798, 1802, 1847, 1851, 1854, 1856, 1857, 1859, 1863, 1871, 1875, 1877, 1878, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1892, 1895, 1898, 1899, 1900, 1902, 1908, 1909, 1911, 1912, 1915, 1918, 1923], "callabl": [0, 4, 6, 12, 15, 17, 22, 32, 33, 35, 39, 41, 43, 45, 50, 52, 54, 57, 64, 65, 67, 68, 69, 114, 392, 832, 944, 1000, 1001, 1003, 1114, 1115, 1116, 1121, 1124, 1125, 1184, 1187, 1195, 1199, 1255, 1256, 1416, 1459, 1461, 1463, 1465, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1666, 1668, 1669, 1670, 1671, 1672, 1679, 1682, 1844, 1851, 1854, 1856, 1857, 1858, 1867, 1880, 1888, 1895, 1899, 1900, 1901, 1907, 1918, 1920, 1921, 1922], "take": [0, 1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 17, 22, 26, 32, 33, 35, 37, 39, 41, 43, 51, 52, 53, 54, 57, 59, 60, 62, 63, 64, 65, 751, 784, 789, 805, 811, 817, 853, 892, 893, 894, 895, 896, 897, 899, 900, 937, 957, 994, 1045, 1047, 1048, 1073, 1075, 1078, 1081, 1085, 1086, 1088, 1091, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1216, 1238, 1241, 1324, 1333, 1360, 1364, 1365, 1368, 1386, 1410, 1411, 1412, 1413, 1414, 1416, 1424, 1431, 1459, 1469, 1470, 1510, 1511, 1528, 1552, 1565, 1596, 1641, 1669, 1673, 1698, 1825, 1844, 1851, 1854, 1855, 1857, 1864, 1865, 1869, 1870, 1871, 1872, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1886, 1888, 1892, 1894, 1895, 1897, 1899, 1901, 1902, 1907, 1908, 1909, 1911, 1914, 1915, 1916, 1920], "graphmodul": [0, 12, 17, 22, 23, 67, 68, 69, 70, 850, 851, 852, 853, 1921], "example_input": [0, 12, 17, 808, 809, 852, 853, 1195, 1199, 1902, 1921], "python": [0, 1, 2, 4, 5, 10, 12, 13, 14, 15, 16, 19, 20, 21, 23, 26, 27, 29, 32, 35, 39, 41, 42, 43, 45, 46, 49, 50, 52, 53, 57, 65, 346, 580, 615, 671, 772, 871, 892, 893, 894, 895, 896, 897, 899, 900, 930, 931, 943, 944, 994, 1000, 1001, 1003, 1052, 1057, 1075, 1077, 1105, 1110, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1160, 1182, 1184, 1185, 1187, 1188, 1189, 1194, 1195, 1199, 1255, 1417, 1418, 1426, 1427, 1565, 1596, 1695, 1717, 1721, 1741, 1742, 1777, 1844, 1851, 1861, 1863, 1868, 1869, 1871, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1890, 1893, 1894, 1899, 1902, 1906, 1907, 1908, 1909, 1914, 1917, 1918], "run": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 16, 17, 18, 19, 22, 23, 26, 27, 29, 32, 33, 35, 36, 39, 41, 43, 44, 45, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 145, 783, 789, 808, 810, 811, 812, 813, 816, 848, 852, 853, 854, 884, 898, 899, 900, 1002, 1003, 1114, 1119, 1125, 1159, 1184, 1185, 1187, 1188, 1191, 1193, 1195, 1197, 1199, 1200, 1229, 1255, 1256, 1284, 1334, 1335, 1336, 1353, 1379, 1380, 1381, 1389, 1390, 1391, 1398, 1399, 1400, 1416, 1444, 1455, 1565, 1587, 1596, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1672, 1745, 1749, 1781, 1827, 1829, 1837, 1844, 1852, 1854, 1857, 1865, 1867, 1869, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1905, 1906, 1907, 1908, 1909, 1911, 1916, 1919, 1920, 1921], "faster": [0, 1, 3, 9, 14, 16, 19, 21, 24, 32, 33, 35, 57, 893, 899, 900, 1113, 1213, 1214, 1219, 1220, 1224, 1229, 1237, 1239, 1241, 1244, 1247, 1249, 1253, 1256, 1432, 1449, 1555, 1571, 1596, 1600, 1601, 1603, 1658, 1659, 1670, 1784, 1785, 1786, 1788, 1789, 1865, 1877, 1880, 1885, 1898, 1902, 1911, 1916], "also": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 19, 20, 22, 23, 24, 26, 27, 29, 32, 33, 35, 39, 40, 41, 42, 49, 52, 57, 61, 62, 63, 64, 65, 149, 213, 216, 217, 248, 317, 505, 507, 509, 534, 605, 732, 733, 734, 751, 791, 805, 852, 871, 880, 881, 890, 913, 922, 936, 944, 957, 1000, 1003, 1014, 1038, 1039, 1057, 1061, 1077, 1108, 1114, 1120, 1124, 1125, 1126, 1129, 1131, 1141, 1142, 1146, 1159, 1184, 1187, 1188, 1190, 1193, 1197, 1199, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1251, 1252, 1285, 1291, 1304, 1312, 1324, 1332, 1334, 1335, 1336, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1360, 1363, 1368, 1382, 1386, 1416, 1423, 1431, 1445, 1447, 1455, 1464, 1465, 1467, 1493, 1494, 1495, 1515, 1552, 1568, 1587, 1596, 1606, 1608, 1618, 1620, 1622, 1623, 1624, 1625, 1641, 1673, 1679, 1683, 1686, 1689, 1714, 1721, 1733, 1743, 1758, 1759, 1776, 1779, 1793, 1802, 1811, 1813, 1816, 1822, 1823, 1834, 1835, 1844, 1847, 1851, 1852, 1854, 1856, 1857, 1861, 1863, 1864, 1865, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1907, 1908, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922], "provid": [0, 1, 2, 4, 8, 9, 10, 12, 14, 17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 50, 52, 53, 54, 55, 57, 61, 64, 65, 145, 594, 671, 680, 726, 729, 730, 731, 736, 737, 739, 747, 748, 751, 755, 779, 780, 790, 791, 805, 815, 832, 849, 884, 893, 895, 896, 897, 923, 928, 931, 936, 937, 956, 968, 1014, 1057, 1077, 1113, 1125, 1137, 1145, 1146, 1181, 1184, 1190, 1191, 1195, 1197, 1199, 1214, 1231, 1256, 1288, 1347, 1348, 1349, 1352, 1368, 1369, 1377, 1382, 1386, 1387, 1412, 1413, 1414, 1416, 1422, 1423, 1426, 1431, 1433, 1444, 1459, 1460, 1461, 1462, 1463, 1487, 1488, 1565, 1596, 1610, 1630, 1638, 1653, 1654, 1683, 1686, 1691, 1727, 1737, 1784, 1785, 1786, 1787, 1788, 1789, 1827, 1829, 1844, 1851, 1854, 1856, 1857, 1861, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1880, 1881, 1882, 1883, 1885, 1888, 1889, 1891, 1895, 1898, 1899, 1900, 1902, 1903, 1905, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1923], "addit": [0, 1, 2, 4, 6, 8, 10, 14, 19, 20, 23, 26, 27, 32, 35, 36, 37, 41, 46, 52, 53, 57, 64, 65, 329, 505, 598, 740, 742, 743, 744, 745, 749, 751, 772, 786, 805, 850, 1014, 1181, 1184, 1188, 1193, 1198, 1324, 1335, 1336, 1337, 1347, 1348, 1349, 1360, 1367, 1368, 1370, 1377, 1380, 1381, 1395, 1396, 1397, 1401, 1402, 1403, 1404, 1406, 1412, 1413, 1414, 1416, 1422, 1424, 1449, 1451, 1455, 1459, 1463, 1465, 1486, 1493, 1494, 1495, 1532, 1596, 1661, 1834, 1835, 1842, 1854, 1856, 1857, 1863, 1867, 1870, 1871, 1872, 1877, 1879, 1880, 1882, 1883, 1887, 1890, 1891, 1894, 1895, 1896, 1901, 1902, 1903, 1905, 1907, 1908, 1909, 1911, 1915, 1918], "context": [0, 1, 3, 6, 17, 32, 39, 43, 52, 53, 57, 65, 145, 783, 880, 881, 882, 884, 885, 898, 899, 911, 964, 979, 981, 992, 998, 1003, 1010, 1030, 1032, 1061, 1115, 1119, 1124, 1159, 1184, 1297, 1416, 1565, 1587, 1596, 1597, 1606, 1608, 1641, 1650, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1747, 1777, 1852, 1857, 1858, 1869, 1876, 1877, 1880, 1882, 1886, 1887, 1890, 1895, 1899, 1901, 1906, 1907, 1909, 1911, 1914, 1919], "like": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 32, 33, 35, 40, 41, 50, 52, 53, 57, 58, 59, 60, 61, 62, 63, 65, 330, 580, 608, 751, 784, 832, 851, 869, 890, 899, 900, 913, 922, 1000, 1001, 1010, 1052, 1057, 1058, 1078, 1100, 1103, 1104, 1110, 1114, 1117, 1118, 1119, 1125, 1141, 1142, 1182, 1184, 1185, 1191, 1194, 1199, 1203, 1230, 1231, 1242, 1255, 1324, 1332, 1360, 1363, 1379, 1380, 1381, 1416, 1417, 1418, 1426, 1427, 1444, 1467, 1509, 1527, 1583, 1587, 1596, 1597, 1598, 1599, 1604, 1629, 1647, 1672, 1695, 1710, 1714, 1733, 1742, 1745, 1802, 1813, 1844, 1849, 1851, 1852, 1854, 1856, 1857, 1864, 1869, 1870, 1871, 1876, 1877, 1880, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1898, 1900, 1901, 1902, 1905, 1907, 1908, 1911, 1913, 1914, 1918, 1919, 1921, 1922], "jit": [0, 1, 12, 16, 21, 24, 26, 1000, 1001, 1032, 1134, 1182, 1183, 1184, 1198, 1652, 1653, 1748, 1749, 1852, 1856, 1859, 1865, 1871, 1879, 1887, 1893, 1895, 1902, 1907, 1916], "fuser": [0, 784, 1197, 1854], "fuser2": 0, "set": [0, 1, 2, 3, 4, 6, 9, 10, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 31, 32, 33, 35, 36, 37, 39, 41, 43, 45, 50, 52, 53, 54, 55, 57, 60, 61, 64, 65, 83, 145, 149, 248, 324, 438, 439, 440, 441, 442, 451, 488, 512, 571, 572, 671, 726, 732, 734, 751, 770, 776, 783, 784, 785, 788, 806, 807, 808, 811, 812, 813, 816, 817, 832, 845, 849, 850, 852, 853, 856, 869, 881, 883, 884, 891, 892, 893, 894, 895, 896, 897, 898, 911, 923, 928, 939, 943, 944, 950, 968, 983, 992, 1004, 1005, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1058, 1060, 1113, 1122, 1131, 1146, 1164, 1165, 1184, 1188, 1191, 1193, 1195, 1197, 1199, 1200, 1219, 1220, 1223, 1229, 1236, 1238, 1240, 1241, 1253, 1254, 1255, 1256, 1270, 1273, 1276, 1296, 1300, 1301, 1302, 1324, 1328, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1361, 1368, 1371, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1401, 1403, 1407, 1408, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1426, 1430, 1431, 1447, 1448, 1455, 1464, 1465, 1480, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1508, 1515, 1519, 1526, 1527, 1536, 1537, 1550, 1552, 1558, 1565, 1584, 1596, 1598, 1599, 1604, 1609, 1638, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1701, 1708, 1710, 1714, 1716, 1717, 1725, 1726, 1737, 1738, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1767, 1782, 1796, 1797, 1816, 1826, 1827, 1828, 1829, 1837, 1839, 1840, 1851, 1853, 1854, 1856, 1857, 1858, 1861, 1863, 1865, 1866, 1867, 1869, 1872, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1894, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1913, 1916, 1918, 1920, 1921, 1922], "backend_ctx_ctor": 0, "attribut": [0, 1, 2, 17, 22, 24, 32, 33, 35, 36, 42, 65, 145, 284, 487, 488, 718, 729, 730, 731, 732, 733, 734, 736, 737, 747, 755, 782, 793, 806, 807, 808, 829, 830, 831, 849, 850, 880, 884, 886, 890, 1108, 1183, 1184, 1185, 1187, 1188, 1194, 1195, 1256, 1353, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1416, 1459, 1596, 1597, 1607, 1608, 1609, 1630, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1852, 1855, 1858, 1872, 1876, 1877, 1880, 1882, 1883, 1888, 1893, 1895, 1899, 1902, 1907, 1917, 1918, 1922, 1923], "see": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 22, 23, 26, 27, 28, 31, 32, 35, 36, 41, 44, 52, 53, 55, 57, 62, 63, 64, 65, 84, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 123, 124, 127, 129, 130, 131, 132, 133, 135, 137, 139, 140, 143, 145, 146, 148, 149, 150, 151, 152, 154, 156, 158, 160, 162, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 184, 187, 188, 192, 194, 195, 197, 199, 200, 202, 205, 206, 207, 209, 212, 213, 215, 219, 220, 221, 222, 223, 224, 225, 228, 229, 231, 233, 234, 235, 237, 239, 240, 242, 244, 246, 249, 250, 255, 257, 258, 259, 260, 261, 262, 264, 266, 268, 269, 270, 272, 274, 275, 276, 278, 281, 282, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 299, 301, 303, 307, 315, 316, 317, 318, 319, 321, 322, 328, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 353, 355, 357, 359, 361, 363, 364, 366, 368, 372, 373, 374, 375, 376, 378, 380, 382, 384, 386, 387, 388, 390, 391, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 420, 422, 423, 424, 425, 426, 427, 431, 433, 435, 443, 445, 446, 448, 450, 452, 453, 454, 455, 457, 458, 460, 461, 463, 470, 472, 473, 475, 477, 480, 481, 483, 485, 486, 487, 489, 490, 491, 493, 494, 497, 498, 499, 502, 507, 509, 510, 511, 513, 516, 517, 519, 521, 522, 524, 526, 529, 530, 531, 533, 534, 538, 539, 541, 543, 545, 546, 547, 552, 554, 556, 558, 559, 560, 561, 563, 564, 565, 567, 569, 570, 581, 582, 583, 585, 586, 588, 590, 592, 596, 597, 600, 601, 602, 605, 606, 607, 609, 610, 611, 612, 671, 684, 686, 687, 690, 721, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 734, 736, 737, 739, 747, 748, 751, 752, 753, 754, 755, 756, 757, 758, 759, 762, 763, 764, 765, 770, 771, 772, 773, 774, 775, 776, 784, 831, 850, 851, 852, 853, 856, 865, 866, 867, 870, 881, 883, 884, 885, 886, 887, 889, 890, 894, 898, 899, 904, 905, 908, 913, 915, 922, 924, 927, 941, 944, 954, 958, 959, 960, 961, 963, 965, 966, 968, 982, 983, 992, 993, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1021, 1022, 1023, 1052, 1055, 1057, 1058, 1060, 1061, 1070, 1075, 1093, 1096, 1111, 1116, 1117, 1118, 1120, 1129, 1137, 1141, 1142, 1146, 1147, 1155, 1156, 1157, 1159, 1184, 1188, 1195, 1199, 1200, 1202, 1203, 1205, 1215, 1223, 1226, 1229, 1231, 1238, 1240, 1241, 1249, 1253, 1254, 1256, 1262, 1264, 1270, 1271, 1273, 1281, 1283, 1284, 1285, 1286, 1288, 1289, 1297, 1298, 1304, 1311, 1313, 1314, 1324, 1332, 1333, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1359, 1360, 1362, 1368, 1370, 1376, 1377, 1382, 1383, 1386, 1407, 1408, 1412, 1413, 1414, 1415, 1416, 1419, 1420, 1421, 1422, 1423, 1428, 1429, 1430, 1431, 1434, 1443, 1445, 1447, 1448, 1460, 1461, 1462, 1463, 1464, 1465, 1468, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1552, 1553, 1554, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1584, 1585, 1586, 1596, 1597, 1603, 1604, 1605, 1608, 1614, 1623, 1632, 1637, 1640, 1641, 1642, 1643, 1647, 1689, 1699, 1700, 1710, 1712, 1714, 1716, 1717, 1721, 1724, 1727, 1733, 1742, 1745, 1747, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1770, 1777, 1778, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1796, 1797, 1798, 1801, 1811, 1813, 1816, 1822, 1823, 1827, 1829, 1837, 1839, 1840, 1845, 1847, 1849, 1851, 1852, 1854, 1855, 1856, 1857, 1858, 1862, 1863, 1864, 1866, 1869, 1870, 1871, 1872, 1873, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1900, 1901, 1902, 1903, 1906, 1907, 1908, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1922, 1923], "aotautogradmemoryefficientfusionwithcontext": 0, "usag": [0, 1, 2, 5, 8, 10, 14, 23, 27, 32, 35, 39, 41, 42, 43, 46, 49, 50, 52, 54, 57, 65, 739, 748, 783, 784, 785, 801, 802, 803, 804, 806, 807, 808, 845, 849, 881, 1006, 1026, 1030, 1057, 1108, 1113, 1117, 1118, 1119, 1197, 1256, 1596, 1651, 1854, 1857, 1867, 1871, 1876, 1877, 1882, 1884, 1895, 1901, 1909, 1916, 1917, 1919, 1920, 1921], "Or": [0, 8, 17, 43, 65, 939, 1886, 1889, 1895, 1911], "string": [0, 3, 4, 12, 14, 17, 23, 25, 26, 32, 35, 43, 49, 50, 52, 65, 594, 805, 845, 983, 1000, 1001, 1057, 1114, 1184, 1191, 1194, 1255, 1344, 1345, 1346, 1416, 1417, 1426, 1459, 1461, 1463, 1490, 1491, 1492, 1619, 1701, 1733, 1741, 1743, 1851, 1855, 1856, 1857, 1858, 1871, 1877, 1882, 1887, 1888, 1895, 1899, 1901, 1907, 1913, 1914, 1916, 1921, 1922], "name": [0, 2, 3, 4, 12, 13, 14, 17, 20, 22, 23, 26, 33, 35, 40, 41, 43, 45, 46, 49, 50, 52, 54, 57, 65, 671, 688, 738, 739, 748, 783, 805, 806, 807, 808, 815, 831, 845, 849, 908, 959, 986, 1113, 1123, 1182, 1184, 1185, 1191, 1194, 1199, 1200, 1214, 1219, 1220, 1226, 1227, 1229, 1230, 1231, 1232, 1242, 1243, 1245, 1247, 1248, 1255, 1416, 1466, 1589, 1594, 1595, 1596, 1603, 1604, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1638, 1640, 1652, 1653, 1733, 1743, 1838, 1851, 1852, 1854, 1855, 1857, 1858, 1861, 1863, 1866, 1867, 1869, 1875, 1877, 1880, 1881, 1882, 1885, 1887, 1888, 1895, 1897, 1899, 1900, 1901, 1907, 1908, 1913, 1916, 1918, 1919, 1920, 1921, 1922, 1923], "list_backend": [0, 12, 15, 16, 18, 944, 1852], "whole": [0, 17, 19, 20, 32, 35, 37, 1125, 1184, 1416, 1444, 1455, 1596, 1844, 1877, 1881, 1890, 1891, 1899], "program": [0, 2, 4, 5, 9, 14, 16, 18, 19, 21, 23, 29, 32, 35, 44, 53, 55, 57, 65, 608, 949, 950, 1006, 1008, 1114, 1745, 1854, 1856, 1858, 1877, 1880, 1884, 1887, 1889, 1890, 1893, 1894, 1916], "turn": [0, 15, 16, 17, 26, 32, 62, 65, 671, 864, 944, 1172, 1199, 1460, 1462, 1784, 1785, 1786, 1787, 1788, 1789, 1864, 1877, 1880, 1891, 1892, 1895, 1901, 1902, 1908, 1911], "decor": [0, 1, 2, 12, 21, 41, 45, 49, 53, 65, 890, 1061, 1159, 1189, 1195, 1201, 1641, 1777, 1854, 1856, 1857, 1861, 1876, 1877, 1882, 1900, 1907, 1922], "exampl": [0, 1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 26, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 82, 83, 186, 203, 236, 248, 254, 283, 305, 307, 309, 311, 315, 329, 346, 395, 396, 438, 439, 440, 441, 442, 464, 474, 476, 480, 485, 488, 491, 505, 507, 509, 528, 535, 549, 551, 571, 572, 574, 575, 576, 577, 578, 579, 580, 598, 608, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 711, 719, 720, 725, 729, 730, 731, 732, 733, 734, 736, 737, 739, 747, 748, 749, 751, 752, 753, 754, 755, 756, 763, 764, 765, 776, 783, 784, 785, 787, 788, 801, 802, 803, 804, 805, 806, 807, 808, 815, 829, 845, 850, 851, 852, 853, 856, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 902, 904, 905, 912, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 942, 943, 944, 946, 949, 950, 951, 952, 953, 954, 955, 956, 957, 1000, 1001, 1006, 1008, 1036, 1037, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1121, 1123, 1125, 1126, 1127, 1128, 1131, 1137, 1140, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1154, 1158, 1159, 1161, 1169, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1480, 1482, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1506, 1507, 1510, 1511, 1515, 1517, 1550, 1552, 1553, 1556, 1557, 1565, 1584, 1587, 1596, 1603, 1604, 1606, 1608, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1690, 1692, 1694, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1737, 1739, 1740, 1741, 1742, 1743, 1746, 1747, 1750, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1775, 1777, 1779, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1796, 1797, 1799, 1801, 1802, 1804, 1805, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1849, 1850, 1851, 1852, 1854, 1856, 1857, 1858, 1861, 1863, 1864, 1866, 1867, 1870, 1871, 1872, 1875, 1877, 1878, 1879, 1880, 1884, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1898, 1899, 1900, 1901, 1902, 1903, 1907, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922], "toy_exampl": [0, 12, 13, 14, 17, 23], "b": [0, 1, 2, 4, 12, 13, 14, 16, 17, 22, 23, 24, 32, 35, 37, 41, 50, 65, 254, 329, 392, 608, 676, 677, 739, 748, 772, 815, 871, 888, 890, 891, 902, 904, 905, 912, 923, 924, 926, 930, 932, 934, 937, 942, 951, 957, 1000, 1001, 1049, 1052, 1056, 1057, 1102, 1103, 1104, 1105, 1110, 1114, 1127, 1149, 1161, 1181, 1187, 1194, 1195, 1203, 1204, 1206, 1215, 1216, 1224, 1228, 1229, 1233, 1236, 1237, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1249, 1250, 1253, 1256, 1265, 1267, 1268, 1274, 1282, 1287, 1289, 1305, 1337, 1359, 1360, 1367, 1403, 1486, 1507, 1514, 1532, 1603, 1630, 1631, 1632, 1633, 1634, 1635, 1643, 1650, 1669, 1671, 1702, 1708, 1721, 1724, 1740, 1752, 1771, 1779, 1784, 1785, 1786, 1788, 1789, 1793, 1798, 1799, 1801, 1808, 1809, 1818, 1825, 1826, 1828, 1841, 1846, 1853, 1854, 1855, 1856, 1857, 1870, 1871, 1872, 1875, 1876, 1878, 1880, 1884, 1885, 1886, 1891, 1893, 1901, 1902, 1908, 1909, 1911, 1912, 1915, 1916, 1921], "optimize_assert": [0, 1852], "hook": [0, 2, 14, 17, 21, 36, 39, 57, 480, 739, 748, 890, 904, 905, 1003, 1184, 1353, 1416, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1626, 1637, 1640, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1852, 1873, 1881, 1882, 1887, 1899, 1902], "export_constraint": 0, "same": [0, 1, 2, 4, 8, 12, 14, 17, 19, 22, 23, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 41, 43, 49, 50, 52, 53, 54, 55, 57, 60, 62, 64, 65, 134, 148, 190, 216, 249, 305, 307, 309, 313, 315, 333, 438, 439, 440, 441, 442, 464, 476, 489, 490, 492, 505, 507, 509, 512, 535, 571, 608, 609, 677, 680, 684, 686, 687, 688, 690, 711, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 736, 737, 747, 749, 752, 753, 754, 755, 756, 770, 776, 779, 780, 784, 785, 787, 791, 793, 805, 810, 813, 815, 816, 850, 852, 869, 870, 871, 883, 886, 889, 892, 893, 894, 895, 896, 897, 899, 900, 912, 914, 915, 924, 926, 928, 931, 936, 938, 946, 957, 958, 960, 971, 973, 992, 1003, 1040, 1045, 1047, 1048, 1054, 1057, 1059, 1060, 1063, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1105, 1109, 1110, 1112, 1113, 1114, 1117, 1118, 1119, 1120, 1123, 1124, 1125, 1126, 1129, 1137, 1145, 1146, 1154, 1158, 1175, 1181, 1184, 1194, 1195, 1199, 1200, 1204, 1205, 1213, 1214, 1215, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1251, 1271, 1275, 1277, 1278, 1281, 1283, 1284, 1285, 1286, 1289, 1311, 1314, 1315, 1316, 1322, 1323, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363, 1366, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1388, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1420, 1421, 1422, 1424, 1425, 1430, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1467, 1468, 1471, 1472, 1473, 1480, 1486, 1487, 1488, 1490, 1491, 1492, 1498, 1507, 1515, 1517, 1526, 1527, 1565, 1584, 1596, 1603, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1629, 1633, 1638, 1643, 1644, 1648, 1650, 1654, 1668, 1689, 1694, 1695, 1698, 1699, 1711, 1713, 1715, 1719, 1721, 1723, 1724, 1728, 1737, 1740, 1753, 1776, 1784, 1785, 1786, 1788, 1789, 1795, 1796, 1797, 1801, 1802, 1812, 1823, 1834, 1835, 1836, 1837, 1839, 1840, 1841, 1844, 1850, 1851, 1854, 1856, 1857, 1867, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1890, 1891, 1892, 1893, 1895, 1898, 1899, 1900, 1902, 1905, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 1921, 1922], "f": [0, 2, 11, 12, 17, 22, 33, 35, 41, 43, 44, 49, 50, 58, 59, 62, 63, 64, 65, 168, 252, 280, 329, 371, 886, 887, 1075, 1077, 1084, 1093, 1114, 1115, 1117, 1118, 1119, 1120, 1124, 1125, 1137, 1184, 1191, 1194, 1195, 1255, 1382, 1384, 1385, 1387, 1416, 1465, 1482, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1506, 1507, 1510, 1511, 1517, 1550, 1552, 1553, 1565, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1733, 1844, 1854, 1856, 1857, 1870, 1871, 1877, 1880, 1882, 1884, 1885, 1886, 1888, 1894, 1895, 1899, 1900, 1911, 1916, 1918, 1922], "arg": [0, 1, 2, 4, 5, 6, 12, 13, 17, 22, 23, 26, 32, 33, 35, 39, 40, 41, 43, 44, 50, 51, 53, 54, 55, 57, 64, 65, 82, 571, 594, 671, 723, 738, 740, 742, 743, 744, 745, 751, 753, 754, 815, 852, 881, 883, 888, 889, 1003, 1113, 1117, 1118, 1119, 1125, 1184, 1187, 1273, 1332, 1333, 1350, 1352, 1368, 1376, 1378, 1383, 1386, 1405, 1407, 1408, 1416, 1419, 1420, 1421, 1423, 1430, 1431, 1444, 1446, 1447, 1448, 1450, 1454, 1455, 1456, 1457, 1464, 1487, 1488, 1498, 1527, 1550, 1558, 1587, 1596, 1610, 1615, 1629, 1636, 1638, 1651, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1803, 1835, 1841, 1844, 1851, 1855, 1857, 1858, 1869, 1871, 1877, 1880, 1881, 1882, 1883, 1890, 1895, 1896, 1899, 1900, 1907, 1908, 1909, 1913, 1921, 1922], "aten_graph": 0, "pre_autograd": 0, "decomposition_t": 0, "tracing_mod": 0, "symbol": [0, 26, 31, 78, 615, 808, 1198, 1252, 1386, 1431, 1825, 1841, 1852, 1857, 1896], "constraint": [0, 35, 40, 785, 786, 893, 992, 1003, 1119, 1596, 1604, 1629, 1672, 1852, 1857, 1872, 1883, 1885, 1888, 1911], "assume_static_by_default": 0, "kwarg": [0, 1, 2, 6, 12, 13, 22, 23, 26, 35, 36, 39, 52, 57, 65, 571, 594, 738, 751, 753, 754, 812, 813, 815, 818, 881, 961, 963, 1000, 1001, 1113, 1124, 1125, 1184, 1187, 1189, 1247, 1273, 1368, 1378, 1386, 1405, 1416, 1431, 1446, 1450, 1454, 1456, 1457, 1587, 1592, 1596, 1610, 1615, 1619, 1629, 1636, 1638, 1641, 1651, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1733, 1835, 1844, 1851, 1857, 1858, 1882, 1883, 1888, 1896, 1898, 1907, 1913, 1921, 1922], "input": [0, 2, 3, 4, 6, 10, 22, 23, 24, 27, 30, 32, 33, 35, 36, 39, 40, 41, 42, 45, 57, 58, 59, 60, 61, 62, 63, 65, 77, 83, 145, 254, 274, 295, 395, 476, 509, 600, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 711, 719, 720, 725, 726, 729, 730, 731, 732, 733, 734, 736, 737, 747, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 793, 805, 808, 810, 828, 829, 830, 831, 848, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 888, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 908, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 930, 932, 933, 935, 936, 937, 938, 939, 940, 941, 943, 946, 949, 950, 951, 952, 953, 954, 955, 956, 957, 973, 1000, 1001, 1003, 1036, 1037, 1038, 1039, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1163, 1164, 1166, 1169, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1184, 1187, 1188, 1190, 1191, 1195, 1197, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1272, 1274, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1606, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1622, 1623, 1624, 1625, 1629, 1630, 1631, 1633, 1638, 1641, 1642, 1643, 1645, 1646, 1648, 1650, 1653, 1654, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1676, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1711, 1713, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1734, 1735, 1736, 1739, 1740, 1742, 1753, 1754, 1755, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1779, 1780, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1813, 1814, 1815, 1817, 1819, 1820, 1821, 1822, 1825, 1826, 1828, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1847, 1848, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1864, 1865, 1871, 1872, 1873, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1888, 1891, 1892, 1893, 1895, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1911, 1912, 1914, 1915, 1918, 1920, 1921, 1922], "format": [0, 2, 23, 30, 33, 35, 37, 45, 54, 65, 150, 165, 167, 170, 173, 174, 175, 190, 201, 204, 234, 261, 291, 319, 325, 387, 491, 492, 516, 571, 574, 575, 576, 577, 578, 579, 671, 726, 751, 783, 784, 941, 1003, 1057, 1058, 1059, 1112, 1181, 1184, 1197, 1226, 1339, 1360, 1368, 1386, 1416, 1431, 1596, 1630, 1632, 1648, 1650, 1651, 1653, 1711, 1713, 1715, 1733, 1776, 1779, 1784, 1785, 1786, 1787, 1788, 1789, 1798, 1850, 1851, 1854, 1857, 1858, 1863, 1880, 1882, 1888, 1893, 1895, 1896, 1897, 1901, 1902, 1907, 1908, 1911, 1914, 1916, 1918], "execut": [0, 1, 2, 3, 4, 5, 6, 8, 13, 14, 17, 19, 21, 22, 23, 26, 27, 32, 35, 37, 39, 43, 44, 46, 53, 57, 62, 64, 65, 480, 904, 905, 963, 974, 1035, 1114, 1184, 1185, 1187, 1199, 1200, 1255, 1297, 1298, 1353, 1416, 1422, 1460, 1461, 1462, 1463, 1590, 1592, 1596, 1748, 1852, 1854, 1856, 1858, 1865, 1876, 1878, 1879, 1884, 1887, 1888, 1890, 1892, 1894, 1895, 1901, 1902, 1907, 1908, 1911], "outsid": [0, 1, 6, 10, 19, 32, 45, 57, 62, 675, 786, 876, 1113, 1115, 1119, 1124, 1185, 1515, 1596, 1674, 1675, 1680, 1681, 1687, 1856, 1857, 1875, 1877, 1880, 1883, 1884, 1918], "pytorch": [0, 1, 2, 3, 4, 5, 6, 12, 14, 15, 17, 18, 21, 22, 24, 25, 26, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 57, 58, 61, 63, 65, 77, 78, 80, 81, 145, 505, 574, 671, 689, 721, 722, 723, 724, 736, 737, 747, 751, 752, 753, 754, 755, 756, 783, 784, 801, 802, 803, 804, 871, 884, 929, 934, 935, 944, 945, 957, 963, 982, 983, 994, 999, 1057, 1102, 1108, 1114, 1115, 1119, 1124, 1125, 1130, 1170, 1171, 1194, 1214, 1225, 1227, 1228, 1229, 1232, 1245, 1254, 1270, 1273, 1274, 1285, 1332, 1339, 1368, 1382, 1412, 1413, 1414, 1459, 1565, 1596, 1629, 1637, 1638, 1643, 1650, 1654, 1701, 1733, 1741, 1742, 1752, 1798, 1802, 1825, 1837, 1844, 1851, 1853, 1856, 1857, 1861, 1863, 1864, 1866, 1867, 1871, 1872, 1873, 1878, 1879, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1894, 1898, 1899, 1901, 1902, 1903, 1904, 1907, 1908, 1911, 1912, 1914, 1915, 1916, 1922, 1923], "A": [0, 2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 22, 23, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 49, 52, 53, 54, 57, 58, 63, 64, 70, 83, 551, 571, 574, 575, 576, 585, 615, 671, 683, 688, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 736, 737, 747, 752, 753, 754, 755, 756, 781, 783, 805, 849, 850, 852, 853, 910, 913, 922, 923, 925, 930, 935, 936, 943, 944, 952, 956, 960, 961, 963, 971, 973, 974, 1042, 1057, 1062, 1070, 1071, 1072, 1084, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1137, 1140, 1141, 1142, 1146, 1174, 1175, 1176, 1177, 1180, 1182, 1184, 1187, 1191, 1194, 1196, 1199, 1200, 1204, 1208, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1253, 1256, 1264, 1272, 1273, 1274, 1275, 1279, 1317, 1333, 1337, 1339, 1352, 1359, 1360, 1369, 1370, 1378, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1406, 1415, 1416, 1422, 1444, 1449, 1451, 1459, 1464, 1465, 1480, 1486, 1498, 1506, 1517, 1527, 1534, 1545, 1565, 1571, 1572, 1587, 1596, 1597, 1598, 1599, 1603, 1605, 1608, 1630, 1631, 1634, 1650, 1651, 1652, 1653, 1658, 1660, 1661, 1666, 1670, 1672, 1676, 1677, 1679, 1682, 1683, 1685, 1691, 1701, 1703, 1704, 1705, 1706, 1707, 1718, 1724, 1730, 1733, 1766, 1775, 1777, 1778, 1781, 1793, 1797, 1798, 1802, 1803, 1820, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1836, 1837, 1840, 1844, 1847, 1851, 1853, 1854, 1855, 1856, 1857, 1861, 1864, 1865, 1870, 1871, 1875, 1876, 1879, 1880, 1882, 1883, 1884, 1890, 1891, 1893, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1917, 1921, 1922, 1923], "variabl": [0, 3, 4, 6, 14, 16, 23, 26, 29, 31, 33, 41, 43, 45, 50, 55, 57, 62, 65, 441, 671, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717, 719, 720, 721, 722, 723, 725, 729, 730, 731, 732, 733, 734, 736, 737, 747, 751, 755, 790, 888, 952, 956, 1026, 1058, 1125, 1197, 1199, 1256, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1359, 1360, 1368, 1369, 1386, 1387, 1388, 1401, 1403, 1416, 1419, 1424, 1431, 1433, 1596, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1647, 1654, 1656, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1710, 1712, 1714, 1837, 1844, 1849, 1851, 1852, 1863, 1864, 1871, 1872, 1877, 1879, 1881, 1884, 1885, 1891, 1892, 1894, 1895, 1898, 1902, 1907, 1916], "length": [0, 14, 23, 32, 33, 35, 37, 41, 254, 307, 309, 315, 345, 426, 427, 574, 575, 576, 726, 751, 805, 884, 898, 943, 974, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1110, 1125, 1158, 1181, 1199, 1203, 1315, 1316, 1333, 1334, 1339, 1344, 1353, 1360, 1363, 1368, 1384, 1386, 1422, 1431, 1459, 1467, 1488, 1490, 1491, 1492, 1499, 1507, 1526, 1565, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1708, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1782, 1784, 1785, 1786, 1788, 1789, 1798, 1823, 1844, 1853, 1855, 1857, 1864, 1871, 1872, 1878, 1884, 1911, 1918], "argument": [0, 1, 2, 4, 5, 6, 9, 10, 22, 26, 29, 32, 35, 36, 37, 39, 41, 43, 50, 53, 55, 57, 61, 62, 64, 65, 83, 145, 191, 204, 307, 315, 438, 439, 440, 441, 442, 480, 505, 509, 551, 571, 572, 574, 575, 576, 578, 579, 594, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 686, 687, 688, 689, 690, 725, 729, 730, 731, 732, 733, 734, 784, 785, 790, 810, 811, 812, 815, 816, 817, 832, 848, 849, 852, 854, 856, 871, 872, 873, 874, 875, 876, 880, 881, 882, 883, 884, 888, 889, 890, 893, 895, 896, 897, 898, 899, 904, 905, 911, 912, 913, 914, 916, 917, 918, 919, 920, 921, 922, 924, 928, 931, 933, 934, 935, 936, 937, 939, 941, 942, 946, 950, 951, 953, 954, 956, 957, 979, 981, 985, 986, 992, 1000, 1001, 1003, 1026, 1030, 1036, 1037, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1054, 1055, 1056, 1058, 1059, 1060, 1062, 1067, 1070, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1158, 1161, 1178, 1179, 1181, 1184, 1187, 1195, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1274, 1275, 1277, 1278, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1320, 1334, 1335, 1336, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1360, 1363, 1366, 1368, 1375, 1378, 1379, 1380, 1381, 1382, 1386, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1412, 1413, 1414, 1416, 1417, 1422, 1423, 1424, 1431, 1455, 1463, 1467, 1469, 1470, 1513, 1515, 1551, 1587, 1590, 1591, 1592, 1593, 1596, 1607, 1608, 1610, 1614, 1615, 1619, 1623, 1629, 1638, 1642, 1644, 1647, 1648, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1677, 1689, 1690, 1694, 1695, 1698, 1699, 1701, 1702, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1721, 1722, 1723, 1730, 1732, 1737, 1741, 1747, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1775, 1777, 1779, 1780, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1813, 1814, 1815, 1816, 1818, 1819, 1820, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1831, 1834, 1837, 1839, 1840, 1844, 1845, 1846, 1847, 1849, 1850, 1851, 1855, 1856, 1857, 1859, 1861, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1892, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1911, 1912, 1913, 1914, 1916, 1918, 1922, 1923], "list": [0, 1, 2, 4, 6, 7, 8, 10, 12, 15, 16, 17, 18, 22, 23, 26, 27, 29, 32, 33, 35, 36, 37, 39, 41, 43, 52, 54, 57, 62, 64, 65, 78, 179, 235, 296, 438, 440, 442, 569, 574, 575, 576, 580, 610, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 783, 784, 789, 805, 806, 807, 808, 829, 845, 852, 870, 877, 878, 879, 926, 927, 930, 934, 938, 943, 944, 984, 990, 1042, 1055, 1057, 1058, 1097, 1111, 1123, 1137, 1147, 1184, 1188, 1190, 1195, 1197, 1199, 1200, 1283, 1285, 1314, 1353, 1359, 1388, 1416, 1418, 1427, 1444, 1455, 1466, 1506, 1580, 1596, 1597, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1626, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1643, 1647, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1677, 1679, 1681, 1682, 1683, 1685, 1686, 1704, 1706, 1707, 1710, 1714, 1729, 1766, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1796, 1797, 1801, 1816, 1817, 1818, 1834, 1835, 1837, 1839, 1840, 1845, 1849, 1851, 1854, 1855, 1858, 1859, 1863, 1865, 1867, 1870, 1871, 1872, 1882, 1886, 1888, 1891, 1892, 1893, 1897, 1898, 1899, 1900, 1901, 1902, 1907, 1908, 1911, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922], "bool": [0, 1, 2, 3, 4, 6, 15, 22, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 46, 52, 54, 57, 64, 65, 145, 191, 204, 239, 254, 313, 315, 322, 323, 324, 325, 327, 328, 333, 335, 438, 439, 440, 441, 442, 451, 464, 488, 509, 572, 594, 671, 684, 685, 686, 687, 688, 690, 726, 749, 770, 771, 776, 785, 805, 856, 865, 866, 867, 871, 884, 892, 893, 894, 895, 896, 897, 898, 899, 900, 911, 913, 916, 918, 919, 921, 922, 928, 929, 935, 936, 937, 943, 944, 960, 967, 997, 1003, 1015, 1058, 1059, 1060, 1063, 1070, 1075, 1093, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1118, 1119, 1120, 1124, 1126, 1141, 1142, 1145, 1146, 1159, 1169, 1173, 1175, 1181, 1184, 1188, 1190, 1191, 1199, 1200, 1203, 1205, 1213, 1214, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1236, 1238, 1240, 1241, 1244, 1245, 1246, 1247, 1253, 1254, 1255, 1256, 1265, 1266, 1267, 1268, 1270, 1271, 1273, 1275, 1281, 1283, 1284, 1286, 1289, 1297, 1298, 1306, 1311, 1312, 1313, 1314, 1315, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1403, 1407, 1408, 1409, 1410, 1411, 1416, 1419, 1420, 1421, 1422, 1423, 1425, 1430, 1433, 1434, 1435, 1436, 1443, 1447, 1448, 1455, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1468, 1480, 1487, 1488, 1498, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1512, 1515, 1517, 1519, 1526, 1527, 1550, 1558, 1565, 1584, 1596, 1597, 1600, 1601, 1603, 1605, 1607, 1608, 1609, 1630, 1631, 1632, 1633, 1635, 1638, 1643, 1647, 1648, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1691, 1697, 1699, 1701, 1702, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1737, 1742, 1746, 1747, 1752, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1775, 1784, 1785, 1786, 1787, 1788, 1789, 1796, 1797, 1798, 1801, 1802, 1810, 1816, 1820, 1825, 1834, 1835, 1837, 1838, 1839, 1840, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1866, 1867, 1869, 1870, 1871, 1872, 1886, 1893, 1895, 1897, 1899, 1900, 1901, 1906, 1907, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922], "aten": [0, 2, 3, 4, 12, 18, 23, 26, 29, 77, 1000, 1114, 1306, 1652, 1653, 1777, 1854, 1855, 1861, 1879, 1894, 1897, 1901, 1902], "oper": [0, 1, 3, 5, 6, 8, 9, 13, 14, 16, 17, 21, 22, 23, 24, 27, 29, 32, 37, 41, 42, 49, 50, 52, 53, 58, 63, 64, 65, 77, 78, 79, 80, 81, 248, 307, 315, 329, 346, 396, 438, 439, 440, 441, 442, 485, 488, 505, 507, 509, 580, 677, 680, 732, 733, 734, 738, 739, 748, 749, 759, 760, 770, 776, 783, 784, 786, 787, 790, 814, 817, 850, 852, 853, 856, 880, 882, 888, 890, 912, 913, 915, 917, 920, 922, 924, 926, 931, 934, 937, 941, 950, 961, 963, 991, 1000, 1031, 1036, 1037, 1038, 1039, 1052, 1057, 1058, 1059, 1060, 1070, 1075, 1093, 1105, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1125, 1132, 1135, 1141, 1142, 1159, 1184, 1194, 1195, 1199, 1200, 1203, 1213, 1226, 1236, 1239, 1240, 1253, 1254, 1263, 1270, 1278, 1283, 1288, 1297, 1298, 1311, 1314, 1328, 1333, 1338, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1373, 1374, 1375, 1376, 1378, 1383, 1402, 1407, 1412, 1413, 1414, 1416, 1429, 1434, 1435, 1436, 1443, 1458, 1459, 1461, 1463, 1467, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1500, 1501, 1502, 1503, 1507, 1508, 1510, 1511, 1515, 1519, 1526, 1532, 1534, 1540, 1541, 1551, 1553, 1557, 1565, 1571, 1572, 1583, 1584, 1585, 1586, 1596, 1598, 1599, 1632, 1638, 1643, 1647, 1648, 1669, 1675, 1685, 1689, 1698, 1699, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1721, 1727, 1744, 1745, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1778, 1779, 1780, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1793, 1801, 1816, 1837, 1844, 1847, 1849, 1850, 1852, 1853, 1854, 1858, 1861, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1896, 1898, 1901, 1903, 1905, 1906, 1907, 1908, 1912, 1914, 1915, 1918], "default": [0, 1, 3, 4, 6, 10, 12, 14, 15, 18, 19, 20, 22, 23, 24, 26, 29, 35, 36, 37, 39, 40, 41, 43, 44, 49, 50, 51, 52, 53, 55, 57, 60, 61, 62, 63, 65, 145, 150, 165, 167, 170, 173, 174, 175, 190, 201, 204, 234, 261, 284, 291, 319, 325, 387, 438, 439, 440, 441, 442, 451, 488, 491, 492, 512, 516, 571, 572, 574, 671, 685, 688, 703, 704, 705, 706, 707, 708, 711, 721, 722, 723, 724, 726, 746, 749, 751, 759, 760, 761, 763, 764, 765, 770, 776, 784, 789, 794, 799, 800, 805, 808, 810, 811, 812, 813, 816, 819, 820, 821, 822, 823, 824, 825, 826, 832, 833, 834, 835, 836, 837, 839, 840, 845, 846, 847, 849, 856, 870, 871, 884, 885, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 913, 922, 928, 932, 935, 936, 937, 941, 944, 956, 957, 960, 963, 965, 969, 972, 973, 974, 977, 978, 985, 986, 989, 1000, 1002, 1003, 1006, 1008, 1009, 1010, 1012, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1027, 1028, 1031, 1033, 1034, 1035, 1038, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1052, 1057, 1058, 1059, 1060, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1124, 1125, 1129, 1131, 1137, 1141, 1142, 1145, 1146, 1173, 1175, 1181, 1184, 1185, 1188, 1195, 1199, 1200, 1203, 1204, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1270, 1273, 1275, 1281, 1283, 1284, 1285, 1289, 1310, 1311, 1313, 1314, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1430, 1431, 1433, 1434, 1435, 1436, 1443, 1447, 1448, 1452, 1453, 1455, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1512, 1514, 1515, 1517, 1519, 1526, 1527, 1534, 1539, 1540, 1541, 1550, 1551, 1553, 1558, 1565, 1571, 1572, 1580, 1584, 1596, 1597, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1630, 1631, 1633, 1635, 1636, 1637, 1638, 1640, 1642, 1643, 1647, 1648, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1691, 1699, 1701, 1702, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1723, 1729, 1730, 1733, 1737, 1741, 1742, 1743, 1744, 1745, 1750, 1752, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1796, 1797, 1798, 1801, 1802, 1803, 1816, 1817, 1823, 1825, 1827, 1829, 1834, 1835, 1837, 1838, 1839, 1840, 1844, 1849, 1850, 1851, 1852, 1854, 1857, 1861, 1863, 1865, 1866, 1869, 1872, 1875, 1876, 1879, 1881, 1882, 1883, 1884, 1886, 1888, 1891, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1906, 1907, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1923], "tranform": 0, "autograd": [0, 1, 5, 6, 8, 9, 14, 19, 23, 35, 39, 41, 57, 58, 61, 134, 329, 438, 439, 440, 441, 442, 488, 680, 856, 870, 871, 885, 911, 913, 922, 941, 1003, 1058, 1059, 1060, 1070, 1075, 1093, 1110, 1111, 1112, 1113, 1114, 1123, 1125, 1141, 1142, 1159, 1184, 1203, 1223, 1254, 1270, 1278, 1288, 1370, 1416, 1422, 1463, 1517, 1532, 1596, 1647, 1648, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1749, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1784, 1785, 1786, 1787, 1788, 1789, 1816, 1844, 1849, 1850, 1852, 1855, 1859, 1864, 1872, 1875, 1880, 1881, 1884, 1885, 1887, 1888, 1901, 1917, 1918, 1919, 1922], "appli": [0, 1, 2, 4, 6, 9, 13, 22, 33, 37, 39, 40, 41, 43, 45, 52, 57, 61, 62, 63, 65, 77, 78, 114, 315, 392, 465, 505, 509, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 726, 729, 730, 731, 732, 733, 734, 749, 751, 757, 758, 759, 760, 761, 762, 763, 764, 765, 771, 772, 773, 774, 775, 801, 802, 803, 804, 831, 849, 888, 890, 891, 899, 911, 917, 920, 951, 1045, 1047, 1052, 1061, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1105, 1113, 1114, 1121, 1124, 1125, 1184, 1188, 1233, 1256, 1273, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1358, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1415, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1430, 1431, 1434, 1435, 1436, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1510, 1511, 1512, 1513, 1516, 1518, 1519, 1520, 1521, 1525, 1526, 1527, 1529, 1530, 1532, 1533, 1534, 1535, 1536, 1537, 1539, 1540, 1541, 1545, 1550, 1558, 1559, 1560, 1561, 1565, 1566, 1567, 1568, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1587, 1592, 1593, 1596, 1603, 1604, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1629, 1630, 1637, 1638, 1640, 1641, 1643, 1656, 1668, 1672, 1685, 1698, 1703, 1704, 1705, 1706, 1707, 1747, 1778, 1779, 1781, 1798, 1834, 1835, 1836, 1844, 1854, 1857, 1864, 1869, 1871, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1888, 1891, 1895, 1898, 1899, 1900, 1902, 1905, 1908, 1911, 1912], "further": [0, 1, 2, 5, 10, 23, 26, 33, 35, 57, 64, 1129, 1188, 1223, 1324, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1596, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1689, 1853, 1857, 1864, 1888, 1890, 1899, 1901, 1909, 1916, 1921], "flag": [0, 2, 3, 14, 15, 22, 23, 26, 35, 36, 42, 53, 55, 57, 60, 62, 65, 726, 864, 892, 894, 911, 913, 922, 935, 936, 944, 988, 1108, 1113, 1115, 1116, 1118, 1119, 1120, 1124, 1125, 1141, 1142, 1159, 1165, 1172, 1275, 1422, 1526, 1527, 1596, 1605, 1608, 1638, 1658, 1659, 1745, 1747, 1752, 1777, 1825, 1837, 1844, 1852, 1854, 1857, 1869, 1877, 1880, 1882, 1891, 1892, 1895, 1899, 1902, 1916, 1917], "onli": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 16, 17, 19, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 50, 52, 53, 57, 61, 62, 64, 65, 77, 78, 114, 248, 305, 315, 317, 329, 346, 438, 439, 440, 441, 442, 451, 474, 479, 505, 507, 509, 548, 574, 575, 576, 578, 579, 605, 608, 686, 687, 726, 729, 730, 731, 732, 734, 763, 764, 765, 770, 776, 777, 778, 782, 784, 792, 805, 808, 811, 812, 815, 819, 833, 840, 849, 869, 885, 888, 889, 890, 891, 892, 894, 899, 913, 914, 922, 959, 960, 961, 963, 970, 972, 974, 1000, 1001, 1003, 1024, 1054, 1058, 1060, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1103, 1104, 1108, 1109, 1114, 1125, 1137, 1141, 1142, 1146, 1154, 1165, 1173, 1182, 1184, 1187, 1188, 1195, 1199, 1200, 1203, 1214, 1219, 1220, 1222, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1242, 1244, 1245, 1247, 1248, 1255, 1256, 1273, 1278, 1324, 1347, 1348, 1349, 1352, 1353, 1359, 1360, 1363, 1386, 1416, 1419, 1421, 1422, 1424, 1432, 1455, 1467, 1468, 1498, 1507, 1509, 1515, 1526, 1553, 1583, 1584, 1587, 1590, 1591, 1592, 1593, 1596, 1598, 1599, 1609, 1629, 1630, 1631, 1643, 1650, 1654, 1658, 1659, 1661, 1672, 1675, 1679, 1682, 1683, 1685, 1689, 1701, 1710, 1714, 1716, 1718, 1741, 1745, 1746, 1748, 1752, 1779, 1783, 1793, 1798, 1802, 1816, 1827, 1829, 1834, 1835, 1837, 1841, 1842, 1843, 1844, 1851, 1855, 1856, 1857, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1905, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919], "valid": [0, 2, 17, 19, 23, 35, 41, 50, 52, 65, 79, 738, 739, 748, 782, 935, 1000, 1057, 1182, 1184, 1185, 1205, 1219, 1220, 1229, 1230, 1231, 1242, 1247, 1278, 1344, 1345, 1346, 1490, 1491, 1492, 1515, 1587, 1614, 1619, 1623, 1652, 1653, 1673, 1674, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1701, 1854, 1855, 1856, 1857, 1871, 1872, 1877, 1880, 1882, 1886, 1895, 1898, 1901, 1907, 1908], "dict": [0, 1, 4, 6, 15, 19, 22, 32, 33, 35, 36, 37, 39, 40, 41, 43, 46, 50, 54, 57, 59, 61, 65, 671, 783, 784, 785, 806, 807, 808, 827, 845, 901, 944, 1000, 1001, 1014, 1023, 1113, 1123, 1125, 1182, 1183, 1184, 1185, 1190, 1195, 1199, 1200, 1255, 1256, 1353, 1363, 1416, 1417, 1426, 1467, 1587, 1596, 1619, 1638, 1650, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1844, 1851, 1854, 1855, 1857, 1858, 1866, 1867, 1882, 1888, 1893, 1895, 1897, 1898, 1907, 1908, 1916, 1920, 1921, 1922], "dictionari": [0, 4, 15, 19, 26, 32, 33, 41, 61, 65, 671, 783, 784, 785, 788, 806, 807, 808, 829, 830, 831, 845, 849, 855, 944, 1014, 1113, 1123, 1184, 1185, 1191, 1195, 1199, 1200, 1255, 1256, 1359, 1360, 1416, 1417, 1426, 1506, 1619, 1856, 1858, 1882, 1888, 1895, 1898, 1907, 1916, 1920, 1922], "map": [0, 4, 17, 22, 26, 35, 41, 43, 49, 50, 52, 53, 57, 62, 63, 65, 675, 726, 783, 784, 788, 790, 805, 806, 808, 830, 831, 845, 846, 847, 848, 849, 855, 876, 925, 1114, 1125, 1137, 1146, 1191, 1194, 1255, 1256, 1347, 1348, 1349, 1355, 1356, 1357, 1361, 1363, 1412, 1413, 1414, 1417, 1426, 1501, 1502, 1503, 1508, 1603, 1619, 1702, 1704, 1834, 1835, 1844, 1858, 1871, 1873, 1877, 1881, 1882, 1883, 1889, 1894, 1899, 1902, 1905, 1907, 1908, 1909, 1913, 1918, 1922], "decomposit": [0, 22, 41, 65, 935, 1129, 1213, 1214, 1219, 1220, 1221, 1222, 1223, 1225, 1230, 1231, 1232, 1233, 1238, 1242, 1243, 1247, 1248, 1273, 1275, 1603, 1689, 1691, 1695, 1701, 1802, 1803, 1852, 1891], "requir": [0, 1, 2, 6, 9, 10, 12, 13, 14, 15, 16, 19, 26, 27, 32, 33, 35, 36, 37, 39, 41, 43, 51, 52, 57, 60, 62, 64, 65, 114, 145, 216, 329, 451, 488, 505, 507, 509, 551, 784, 786, 814, 817, 871, 880, 884, 889, 892, 893, 894, 895, 896, 897, 898, 944, 957, 958, 1013, 1057, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1098, 1099, 1125, 1126, 1197, 1223, 1254, 1256, 1270, 1352, 1359, 1360, 1459, 1460, 1461, 1462, 1463, 1465, 1507, 1565, 1587, 1596, 1597, 1606, 1608, 1610, 1650, 1661, 1671, 1689, 1786, 1798, 1837, 1844, 1851, 1854, 1857, 1859, 1864, 1865, 1869, 1871, 1872, 1876, 1877, 1879, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1890, 1893, 1895, 1899, 1900, 1902, 1903, 1907, 1908, 1909, 1911, 1916, 1918, 1919, 1921, 1922], "specifi": [0, 2, 3, 4, 6, 9, 12, 15, 22, 26, 32, 33, 35, 39, 40, 41, 43, 45, 50, 51, 52, 53, 57, 65, 92, 145, 190, 253, 313, 325, 464, 474, 485, 489, 491, 492, 505, 507, 509, 528, 536, 537, 551, 571, 574, 575, 576, 578, 579, 594, 671, 726, 732, 733, 734, 759, 760, 784, 785, 786, 790, 805, 814, 817, 831, 845, 849, 850, 852, 869, 871, 883, 884, 898, 915, 938, 944, 955, 956, 957, 960, 961, 970, 971, 972, 974, 989, 992, 1003, 1028, 1038, 1039, 1040, 1044, 1045, 1047, 1057, 1060, 1071, 1074, 1076, 1077, 1079, 1080, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1115, 1116, 1119, 1125, 1126, 1137, 1145, 1146, 1184, 1188, 1199, 1200, 1226, 1236, 1238, 1240, 1241, 1250, 1253, 1255, 1256, 1266, 1283, 1285, 1291, 1310, 1311, 1314, 1330, 1331, 1332, 1333, 1339, 1348, 1350, 1352, 1353, 1359, 1360, 1363, 1370, 1376, 1377, 1382, 1383, 1386, 1407, 1408, 1413, 1416, 1419, 1420, 1421, 1422, 1423, 1430, 1447, 1448, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1483, 1484, 1487, 1488, 1498, 1499, 1506, 1507, 1512, 1515, 1527, 1534, 1550, 1551, 1558, 1565, 1571, 1572, 1596, 1601, 1603, 1604, 1607, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1624, 1625, 1640, 1643, 1650, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1666, 1668, 1669, 1670, 1671, 1672, 1677, 1682, 1683, 1691, 1699, 1708, 1724, 1729, 1730, 1733, 1750, 1778, 1780, 1781, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1793, 1796, 1797, 1801, 1817, 1819, 1823, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1844, 1851, 1854, 1856, 1857, 1861, 1863, 1864, 1866, 1867, 1870, 1871, 1877, 1880, 1882, 1886, 1888, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1906, 1907, 1911, 1912, 1913, 1914, 1916, 1918], "str": [0, 1, 2, 3, 4, 14, 15, 17, 22, 23, 26, 32, 33, 35, 37, 39, 40, 41, 43, 46, 50, 52, 54, 57, 65, 315, 505, 509, 594, 770, 776, 783, 784, 785, 806, 807, 808, 845, 892, 894, 902, 906, 907, 932, 944, 959, 970, 971, 972, 974, 983, 984, 986, 987, 988, 1000, 1001, 1002, 1014, 1015, 1017, 1019, 1031, 1052, 1057, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1113, 1114, 1118, 1123, 1125, 1133, 1182, 1183, 1184, 1185, 1187, 1188, 1190, 1193, 1229, 1242, 1247, 1248, 1255, 1256, 1285, 1297, 1298, 1313, 1332, 1333, 1339, 1344, 1345, 1346, 1350, 1352, 1360, 1366, 1370, 1376, 1377, 1382, 1383, 1392, 1393, 1394, 1407, 1408, 1416, 1417, 1419, 1420, 1421, 1423, 1426, 1430, 1433, 1444, 1447, 1448, 1459, 1461, 1463, 1464, 1465, 1466, 1468, 1487, 1488, 1498, 1499, 1507, 1512, 1515, 1526, 1527, 1550, 1558, 1584, 1596, 1603, 1604, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1638, 1640, 1650, 1653, 1661, 1677, 1683, 1685, 1702, 1733, 1737, 1744, 1745, 1779, 1798, 1844, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1865, 1866, 1867, 1869, 1871, 1875, 1877, 1895, 1897, 1899, 1900, 1901, 1906, 1907, 1913, 1916, 1918, 1920, 1921, 1922], "result": [0, 2, 4, 5, 6, 8, 9, 10, 12, 17, 18, 20, 22, 23, 26, 29, 32, 33, 35, 37, 41, 43, 45, 50, 53, 57, 62, 63, 64, 65, 148, 216, 217, 248, 249, 309, 329, 392, 488, 490, 547, 574, 575, 576, 578, 579, 609, 677, 678, 679, 680, 681, 684, 686, 687, 688, 690, 751, 784, 868, 870, 886, 887, 892, 893, 894, 895, 896, 897, 899, 900, 912, 915, 926, 930, 935, 941, 943, 952, 954, 970, 972, 974, 1000, 1001, 1014, 1036, 1037, 1038, 1039, 1040, 1052, 1057, 1075, 1078, 1084, 1093, 1100, 1102, 1105, 1109, 1110, 1113, 1114, 1115, 1118, 1119, 1124, 1125, 1129, 1145, 1146, 1148, 1161, 1175, 1184, 1187, 1188, 1195, 1199, 1200, 1202, 1204, 1205, 1209, 1223, 1225, 1227, 1228, 1236, 1240, 1242, 1244, 1245, 1246, 1253, 1263, 1264, 1271, 1281, 1283, 1284, 1285, 1286, 1288, 1289, 1311, 1314, 1353, 1355, 1356, 1357, 1361, 1363, 1368, 1382, 1386, 1416, 1422, 1431, 1460, 1461, 1462, 1463, 1467, 1497, 1515, 1526, 1580, 1583, 1584, 1596, 1603, 1605, 1638, 1641, 1642, 1643, 1644, 1653, 1683, 1689, 1691, 1698, 1699, 1702, 1708, 1721, 1727, 1742, 1770, 1780, 1782, 1783, 1794, 1796, 1797, 1798, 1801, 1802, 1803, 1812, 1816, 1817, 1822, 1823, 1825, 1826, 1828, 1839, 1840, 1844, 1854, 1855, 1856, 1857, 1864, 1865, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1891, 1892, 1895, 1896, 1898, 1900, 1901, 1903, 1904, 1907, 1908, 1911, 1914, 1916, 1917, 1918, 1921, 1922], "need": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 17, 19, 23, 26, 27, 32, 33, 35, 36, 37, 39, 40, 41, 44, 45, 50, 52, 53, 55, 57, 59, 60, 62, 65, 145, 248, 464, 487, 491, 574, 671, 725, 726, 810, 811, 812, 815, 816, 817, 832, 849, 880, 884, 888, 889, 898, 925, 926, 934, 994, 1003, 1010, 1045, 1047, 1057, 1078, 1080, 1100, 1113, 1184, 1277, 1306, 1352, 1359, 1412, 1413, 1414, 1416, 1422, 1459, 1461, 1463, 1490, 1491, 1492, 1583, 1596, 1608, 1610, 1614, 1616, 1644, 1672, 1718, 1723, 1737, 1795, 1823, 1852, 1854, 1856, 1857, 1864, 1865, 1869, 1871, 1872, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1905, 1907, 1908, 1909, 1911, 1913, 1914, 1918, 1919, 1921, 1922], "effect": [0, 1, 4, 8, 26, 32, 33, 35, 41, 54, 62, 65, 191, 204, 594, 726, 770, 776, 992, 1040, 1125, 1184, 1226, 1227, 1228, 1229, 1285, 1324, 1339, 1347, 1348, 1349, 1354, 1355, 1356, 1357, 1361, 1416, 1422, 1468, 1526, 1553, 1584, 1590, 1596, 1597, 1615, 1669, 1677, 1777, 1782, 1802, 1823, 1844, 1851, 1854, 1865, 1875, 1876, 1877, 1880, 1882, 1902, 1905, 1913, 1914, 1916], "By": [0, 2, 3, 4, 6, 13, 14, 19, 23, 26, 32, 35, 44, 49, 65, 438, 439, 440, 441, 442, 871, 956, 963, 1006, 1008, 1040, 1052, 1075, 1077, 1078, 1079, 1080, 1088, 1089, 1090, 1115, 1116, 1118, 1119, 1125, 1137, 1145, 1146, 1188, 1236, 1247, 1255, 1284, 1289, 1310, 1332, 1333, 1334, 1335, 1336, 1350, 1352, 1370, 1376, 1379, 1380, 1381, 1382, 1383, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1455, 1464, 1487, 1488, 1498, 1527, 1550, 1558, 1640, 1691, 1702, 1723, 1777, 1823, 1844, 1851, 1856, 1861, 1864, 1877, 1880, 1882, 1884, 1888, 1891, 1893, 1895, 1898, 1906, 1907, 1911, 1918], "arbitrari": [0, 2, 4, 14, 19, 23, 35, 39, 248, 881, 1040, 1247, 1255, 1353, 1359, 1383, 1407, 1467, 1487, 1488, 1506, 1527, 1553, 1629, 1802, 1823, 1857, 1863, 1877, 1883, 1887, 1888, 1898, 1900, 1902, 1911, 1919, 1922], "keyword": [0, 1, 2, 6, 32, 35, 36, 39, 57, 62, 65, 83, 307, 315, 438, 439, 440, 441, 442, 572, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 686, 687, 688, 689, 690, 852, 856, 871, 872, 873, 874, 875, 876, 912, 913, 914, 916, 917, 918, 919, 920, 921, 922, 924, 928, 931, 933, 935, 936, 937, 939, 941, 942, 946, 950, 951, 953, 954, 956, 957, 970, 972, 974, 1000, 1001, 1036, 1037, 1038, 1039, 1040, 1041, 1044, 1049, 1052, 1054, 1056, 1058, 1059, 1060, 1062, 1067, 1070, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1110, 1111, 1112, 1113, 1126, 1127, 1128, 1129, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1158, 1161, 1178, 1179, 1184, 1187, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1274, 1275, 1277, 1278, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1320, 1353, 1375, 1378, 1416, 1590, 1591, 1596, 1608, 1610, 1615, 1619, 1638, 1642, 1644, 1647, 1648, 1650, 1689, 1690, 1694, 1695, 1698, 1699, 1701, 1702, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1721, 1722, 1723, 1730, 1732, 1737, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1775, 1777, 1780, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1794, 1795, 1796, 1797, 1799, 1801, 1802, 1813, 1814, 1815, 1816, 1820, 1823, 1825, 1826, 1827, 1828, 1829, 1831, 1837, 1839, 1840, 1841, 1846, 1847, 1849, 1850, 1851, 1857, 1858, 1871, 1872, 1882, 1891, 1895, 1898, 1907, 1911, 1912, 1916, 1919, 1922], "tupl": [0, 4, 6, 17, 22, 26, 32, 37, 43, 49, 50, 52, 57, 65, 313, 438, 440, 442, 489, 512, 528, 551, 574, 575, 576, 686, 687, 688, 726, 757, 758, 759, 760, 763, 764, 765, 770, 776, 777, 778, 784, 808, 809, 845, 852, 853, 869, 870, 877, 878, 879, 880, 881, 883, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 905, 927, 955, 970, 971, 974, 985, 1003, 1009, 1036, 1037, 1055, 1058, 1060, 1074, 1076, 1077, 1079, 1080, 1082, 1083, 1084, 1086, 1087, 1089, 1090, 1092, 1094, 1097, 1107, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1129, 1145, 1147, 1184, 1190, 1195, 1199, 1200, 1205, 1214, 1219, 1220, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1236, 1240, 1242, 1243, 1245, 1247, 1250, 1253, 1271, 1273, 1275, 1281, 1283, 1285, 1286, 1289, 1291, 1311, 1314, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1330, 1331, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1363, 1364, 1365, 1384, 1385, 1392, 1393, 1394, 1395, 1396, 1397, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1422, 1426, 1437, 1438, 1439, 1440, 1441, 1442, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1476, 1478, 1479, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1510, 1511, 1526, 1539, 1540, 1541, 1551, 1553, 1584, 1585, 1586, 1591, 1592, 1593, 1596, 1608, 1619, 1632, 1638, 1642, 1643, 1647, 1650, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1691, 1692, 1701, 1710, 1712, 1714, 1724, 1728, 1729, 1775, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1793, 1796, 1797, 1801, 1802, 1803, 1816, 1817, 1818, 1819, 1820, 1825, 1832, 1833, 1834, 1835, 1839, 1840, 1844, 1845, 1847, 1849, 1854, 1855, 1858, 1869, 1872, 1877, 1880, 1882, 1883, 1888, 1893, 1895, 1898, 1899, 1902, 1907, 1911, 1916, 1918, 1921, 1922], "guard": [0, 14, 19, 21, 23, 43, 671, 1852, 1863, 1890, 1897, 1899, 1919, 1922], "repres": [0, 2, 9, 17, 24, 32, 33, 41, 42, 43, 45, 46, 52, 54, 57, 65, 77, 751, 783, 784, 787, 880, 952, 956, 958, 990, 993, 1057, 1078, 1080, 1085, 1087, 1088, 1089, 1090, 1114, 1137, 1144, 1173, 1174, 1177, 1180, 1183, 1199, 1200, 1231, 1273, 1324, 1339, 1416, 1422, 1463, 1465, 1467, 1596, 1602, 1605, 1610, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1624, 1625, 1629, 1639, 1651, 1653, 1677, 1683, 1689, 1691, 1702, 1784, 1785, 1786, 1788, 1789, 1798, 1802, 1834, 1835, 1842, 1843, 1854, 1856, 1857, 1864, 1867, 1872, 1877, 1882, 1883, 1885, 1887, 1888, 1891, 1895, 1896, 1900, 1902, 1903, 1905, 1907, 1911, 1914, 1923], "option": [0, 1, 2, 4, 6, 13, 14, 15, 16, 17, 18, 20, 22, 23, 26, 32, 35, 39, 40, 41, 43, 46, 50, 51, 52, 54, 55, 57, 65, 78, 83, 145, 150, 165, 167, 170, 173, 174, 175, 190, 201, 204, 234, 261, 291, 319, 325, 387, 438, 439, 440, 441, 442, 480, 491, 492, 505, 512, 516, 528, 551, 571, 572, 574, 575, 576, 578, 579, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 726, 749, 770, 771, 776, 783, 785, 790, 809, 845, 850, 853, 856, 867, 869, 870, 871, 872, 873, 874, 875, 876, 883, 884, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 905, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 928, 931, 933, 934, 935, 936, 937, 939, 941, 942, 943, 944, 950, 951, 953, 954, 955, 956, 957, 958, 960, 961, 963, 965, 969, 970, 972, 973, 974, 977, 978, 985, 986, 989, 992, 1000, 1001, 1002, 1006, 1008, 1009, 1010, 1012, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1027, 1028, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1054, 1056, 1057, 1058, 1059, 1060, 1062, 1067, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1110, 1111, 1112, 1113, 1114, 1117, 1118, 1119, 1126, 1127, 1128, 1129, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1158, 1161, 1173, 1175, 1178, 1179, 1181, 1182, 1184, 1185, 1188, 1190, 1197, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1297, 1298, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1338, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1370, 1373, 1374, 1375, 1376, 1377, 1382, 1383, 1388, 1392, 1393, 1394, 1395, 1396, 1397, 1402, 1407, 1408, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1430, 1434, 1435, 1436, 1443, 1447, 1448, 1455, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1480, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1506, 1507, 1510, 1511, 1512, 1515, 1517, 1526, 1527, 1534, 1539, 1540, 1541, 1550, 1551, 1558, 1565, 1571, 1572, 1584, 1592, 1593, 1596, 1597, 1603, 1604, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1637, 1638, 1640, 1642, 1643, 1644, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1666, 1668, 1669, 1670, 1671, 1672, 1676, 1689, 1690, 1691, 1694, 1698, 1699, 1701, 1702, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1721, 1722, 1723, 1730, 1732, 1737, 1750, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1813, 1814, 1815, 1816, 1817, 1820, 1822, 1825, 1826, 1827, 1828, 1829, 1831, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1846, 1847, 1849, 1850, 1851, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1866, 1867, 1872, 1875, 1880, 1882, 1883, 1884, 1887, 1888, 1892, 1895, 1899, 1901, 1902, 1907, 1911, 1912, 1914, 1916, 1918, 1921], "accumul": [0, 1, 2, 3, 14, 23, 57, 145, 284, 307, 312, 313, 315, 464, 677, 884, 898, 1253, 1596, 1656, 1657, 1837, 1854, 1855, 1867, 1877, 1880, 1881, 1884, 1891, 1898, 1903, 1907, 1908, 1911], "dure": [0, 1, 2, 6, 12, 14, 16, 17, 20, 22, 23, 26, 29, 33, 35, 37, 43, 44, 46, 52, 57, 64, 65, 78, 329, 495, 496, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 784, 818, 880, 881, 890, 1002, 1003, 1015, 1016, 1035, 1194, 1196, 1197, 1199, 1255, 1328, 1334, 1335, 1336, 1353, 1354, 1359, 1360, 1379, 1380, 1381, 1434, 1455, 1461, 1463, 1500, 1506, 1507, 1587, 1596, 1598, 1599, 1636, 1650, 1653, 1686, 1783, 1827, 1829, 1856, 1864, 1865, 1867, 1870, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1891, 1892, 1895, 1899, 1901, 1902, 1905, 1907, 1909, 1918], "abov": [0, 1, 2, 4, 12, 13, 14, 16, 17, 18, 23, 27, 35, 41, 45, 52, 54, 57, 58, 63, 65, 77, 608, 671, 783, 784, 871, 913, 922, 937, 1014, 1040, 1044, 1045, 1046, 1047, 1048, 1057, 1129, 1141, 1142, 1184, 1185, 1204, 1215, 1219, 1220, 1238, 1240, 1241, 1244, 1247, 1250, 1253, 1256, 1332, 1363, 1416, 1444, 1452, 1467, 1565, 1587, 1644, 1677, 1701, 1712, 1713, 1745, 1750, 1763, 1782, 1823, 1826, 1827, 1828, 1829, 1851, 1854, 1856, 1857, 1864, 1877, 1878, 1879, 1880, 1882, 1883, 1885, 1888, 1892, 1893, 1895, 1899, 1902, 1907, 1908, 1909, 1911, 1912, 1918], "assertionerror": [0, 23, 65, 725, 1653, 1918], "without": [0, 1, 2, 4, 6, 8, 9, 10, 14, 16, 23, 26, 29, 32, 33, 35, 36, 37, 39, 41, 45, 52, 57, 58, 63, 64, 65, 248, 608, 941, 961, 963, 998, 1078, 1079, 1080, 1088, 1089, 1090, 1181, 1182, 1184, 1185, 1230, 1231, 1246, 1253, 1306, 1334, 1335, 1336, 1356, 1360, 1379, 1380, 1381, 1413, 1416, 1424, 1455, 1463, 1507, 1587, 1596, 1620, 1636, 1677, 1708, 1724, 1741, 1742, 1832, 1851, 1856, 1857, 1864, 1865, 1867, 1869, 1871, 1876, 1877, 1878, 1880, 1881, 1882, 1885, 1886, 1888, 1890, 1892, 1893, 1895, 1899, 1900, 1902, 1906, 1907, 1911, 1916, 1921, 1923], "dynamo": [0, 12, 15, 16, 17, 19, 20, 23, 65, 671, 944, 1863, 1896], "output": [0, 1, 2, 5, 6, 8, 12, 13, 14, 16, 17, 22, 23, 29, 32, 33, 35, 39, 40, 41, 43, 49, 50, 61, 62, 63, 65, 134, 307, 315, 438, 439, 440, 442, 505, 509, 557, 608, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 686, 687, 688, 689, 690, 711, 719, 720, 725, 726, 729, 730, 731, 732, 733, 734, 735, 736, 737, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763, 764, 765, 766, 768, 770, 771, 772, 773, 774, 776, 777, 778, 783, 784, 785, 787, 790, 793, 805, 808, 849, 852, 853, 854, 856, 865, 866, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 912, 914, 915, 916, 917, 918, 919, 920, 921, 924, 928, 931, 932, 933, 934, 935, 936, 937, 939, 942, 950, 951, 953, 954, 957, 970, 972, 973, 974, 1000, 1001, 1003, 1013, 1014, 1036, 1037, 1038, 1039, 1041, 1044, 1045, 1047, 1049, 1052, 1054, 1056, 1057, 1058, 1059, 1060, 1062, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1111, 1112, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1137, 1140, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1158, 1161, 1178, 1179, 1181, 1184, 1188, 1195, 1199, 1200, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1506, 1507, 1509, 1510, 1511, 1512, 1515, 1517, 1526, 1527, 1532, 1534, 1539, 1540, 1541, 1550, 1551, 1555, 1556, 1557, 1558, 1565, 1580, 1584, 1585, 1586, 1590, 1592, 1593, 1596, 1604, 1605, 1606, 1609, 1630, 1632, 1633, 1637, 1640, 1642, 1643, 1644, 1647, 1648, 1650, 1653, 1654, 1672, 1676, 1689, 1690, 1698, 1699, 1702, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1721, 1722, 1723, 1725, 1726, 1730, 1732, 1737, 1745, 1750, 1753, 1755, 1767, 1768, 1770, 1775, 1779, 1780, 1782, 1783, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1813, 1814, 1815, 1820, 1823, 1825, 1826, 1828, 1831, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1844, 1846, 1847, 1849, 1850, 1851, 1854, 1855, 1857, 1863, 1865, 1870, 1871, 1872, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1888, 1891, 1895, 1898, 1899, 1900, 1901, 1902, 1904, 1908, 1911, 1912, 1914, 1915, 1916, 1918, 1920, 1921], "consist": [0, 12, 14, 23, 32, 35, 37, 40, 41, 52, 53, 65, 899, 935, 936, 1184, 1213, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1251, 1253, 1416, 1463, 1605, 1608, 1654, 1701, 1802, 1854, 1857, 1864, 1871, 1872, 1883, 1888, 1892, 1895, 1898, 1901, 1911], "type": [0, 2, 3, 4, 6, 12, 13, 15, 16, 17, 22, 26, 27, 28, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 52, 53, 54, 57, 62, 64, 65, 83, 145, 186, 191, 203, 320, 323, 327, 335, 438, 439, 440, 441, 442, 474, 550, 595, 671, 676, 677, 678, 679, 680, 681, 725, 726, 729, 730, 731, 740, 742, 743, 744, 745, 747, 755, 757, 758, 761, 762, 763, 764, 765, 766, 767, 768, 769, 772, 775, 783, 784, 785, 788, 806, 807, 808, 810, 811, 812, 813, 814, 816, 818, 831, 845, 846, 847, 848, 849, 850, 851, 852, 853, 856, 870, 880, 881, 882, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 912, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 930, 931, 932, 934, 943, 944, 967, 969, 976, 977, 978, 980, 983, 984, 985, 986, 987, 988, 989, 990, 991, 995, 997, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1020, 1032, 1034, 1035, 1038, 1039, 1052, 1057, 1058, 1059, 1060, 1070, 1071, 1072, 1075, 1093, 1100, 1102, 1103, 1104, 1105, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1121, 1122, 1123, 1125, 1127, 1131, 1132, 1133, 1136, 1141, 1142, 1144, 1145, 1146, 1160, 1163, 1166, 1169, 1180, 1181, 1182, 1184, 1185, 1187, 1190, 1193, 1195, 1197, 1199, 1200, 1202, 1203, 1206, 1215, 1219, 1236, 1240, 1247, 1253, 1254, 1255, 1256, 1270, 1273, 1276, 1283, 1285, 1292, 1293, 1295, 1305, 1311, 1314, 1324, 1328, 1344, 1345, 1346, 1353, 1360, 1406, 1416, 1417, 1418, 1422, 1426, 1427, 1444, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1463, 1475, 1476, 1480, 1481, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1512, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1533, 1534, 1536, 1537, 1538, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1558, 1560, 1561, 1563, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1578, 1581, 1582, 1583, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1627, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1638, 1640, 1642, 1643, 1647, 1648, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1691, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1721, 1723, 1726, 1727, 1737, 1738, 1741, 1742, 1743, 1745, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1778, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1798, 1799, 1801, 1802, 1803, 1816, 1825, 1827, 1829, 1834, 1835, 1837, 1838, 1844, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1858, 1865, 1866, 1867, 1870, 1872, 1875, 1876, 1877, 1879, 1880, 1885, 1886, 1887, 1888, 1891, 1894, 1896, 1897, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1922], "headerdoc": 0, "wa": [0, 1, 2, 4, 8, 17, 18, 22, 29, 33, 35, 40, 50, 51, 52, 53, 57, 64, 65, 329, 479, 488, 671, 776, 783, 845, 934, 945, 960, 961, 984, 988, 1003, 1016, 1035, 1077, 1125, 1181, 1190, 1199, 1214, 1225, 1227, 1231, 1255, 1273, 1306, 1386, 1412, 1413, 1414, 1445, 1468, 1480, 1515, 1568, 1584, 1596, 1597, 1632, 1677, 1683, 1796, 1797, 1834, 1835, 1839, 1840, 1844, 1851, 1854, 1856, 1857, 1858, 1861, 1863, 1864, 1867, 1869, 1876, 1877, 1878, 1880, 1882, 1883, 1884, 1887, 1889, 1895, 1898, 1900, 1902, 1906, 1907, 1918], "author": [0, 13, 14, 16, 19, 20, 23, 33, 52, 53, 57, 1125, 1668, 1708, 1844, 1876], "chatgpt": 0, "slight": [0, 1741, 1911, 1914], "modif": [0, 14, 16, 27, 57, 65, 216, 771, 888, 1109, 1110, 1184, 1416, 1596, 1877, 1882, 1888, 1899, 1902], "don": [0, 1, 2, 5, 8, 10, 14, 17, 18, 24, 35, 51, 58, 60, 62, 65, 145, 776, 786, 884, 885, 898, 1031, 1113, 1199, 1277, 1379, 1380, 1381, 1468, 1584, 1587, 1596, 1644, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1744, 1851, 1854, 1858, 1869, 1870, 1871, 1877, 1880, 1882, 1884, 1888, 1890, 1894, 1895, 1898, 1899, 1900, 1902, 1907, 1908, 1911, 1922], "ani": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 16, 17, 19, 22, 23, 24, 26, 29, 32, 33, 35, 36, 37, 39, 41, 43, 45, 46, 50, 51, 52, 53, 55, 57, 62, 64, 65, 145, 248, 491, 536, 608, 688, 749, 772, 783, 784, 785, 791, 801, 802, 803, 804, 806, 807, 808, 809, 814, 815, 817, 845, 856, 880, 881, 882, 884, 890, 892, 898, 899, 900, 926, 930, 931, 949, 960, 996, 1003, 1014, 1073, 1074, 1076, 1077, 1078, 1080, 1084, 1088, 1089, 1090, 1105, 1113, 1114, 1121, 1122, 1123, 1125, 1146, 1183, 1184, 1188, 1190, 1194, 1195, 1197, 1199, 1205, 1213, 1215, 1219, 1220, 1224, 1229, 1230, 1231, 1236, 1237, 1240, 1244, 1247, 1253, 1255, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1332, 1333, 1337, 1338, 1344, 1345, 1346, 1353, 1354, 1358, 1362, 1363, 1366, 1367, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1382, 1383, 1402, 1403, 1405, 1406, 1407, 1415, 1416, 1424, 1426, 1427, 1430, 1434, 1435, 1436, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1465, 1466, 1467, 1486, 1490, 1491, 1492, 1532, 1551, 1552, 1565, 1587, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1620, 1630, 1631, 1633, 1636, 1638, 1643, 1650, 1653, 1672, 1677, 1717, 1733, 1748, 1750, 1802, 1844, 1851, 1854, 1855, 1856, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1876, 1877, 1879, 1880, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1895, 1897, 1898, 1899, 1900, 1902, 1907, 1908, 1909, 1911, 1913, 1916, 1918, 1920, 1921, 1922], "just": [0, 2, 3, 8, 12, 13, 14, 17, 21, 22, 26, 33, 35, 40, 41, 43, 50, 65, 580, 678, 688, 781, 814, 817, 880, 882, 908, 949, 950, 1199, 1200, 1238, 1241, 1246, 1247, 1273, 1355, 1356, 1357, 1361, 1596, 1608, 1609, 1673, 1741, 1826, 1827, 1828, 1829, 1851, 1854, 1869, 1876, 1877, 1882, 1883, 1885, 1887, 1888, 1889, 1893, 1899, 1900, 1907, 1908, 1914, 1915, 1917, 1921], "prior": [0, 10, 14, 33, 35, 37, 43, 891, 1256, 1461, 1463, 1565, 1619, 1878, 1880, 1882, 1898, 1902], "recurs": [0, 2, 13, 17, 41, 57, 65, 1049, 1184, 1195, 1197, 1416, 1675, 1856, 1882, 1888, 1899, 1907], "manag": [0, 1, 2, 3, 6, 8, 14, 17, 35, 39, 41, 43, 50, 52, 53, 54, 57, 65, 83, 479, 885, 911, 958, 959, 961, 964, 965, 966, 968, 979, 981, 982, 983, 992, 993, 1003, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1021, 1022, 1023, 1030, 1032, 1061, 1115, 1119, 1124, 1159, 1297, 1565, 1596, 1605, 1606, 1608, 1641, 1747, 1777, 1852, 1857, 1858, 1877, 1884, 1887, 1895, 1900, 1901, 1906, 1907, 1908, 1911, 1914, 1919], "complet": [0, 8, 17, 20, 26, 32, 35, 37, 43, 44, 50, 52, 54, 62, 64, 479, 671, 852, 960, 961, 963, 1033, 1113, 1114, 1187, 1195, 1197, 1202, 1214, 1242, 1297, 1298, 1303, 1480, 1596, 1605, 1638, 1701, 1852, 1856, 1857, 1858, 1863, 1869, 1876, 1877, 1880, 1883, 1886, 1892, 1899, 1900, 1907, 1908], "skip": [0, 1, 17, 52, 850, 1057, 1110, 1213, 1214, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1771, 1854, 1876, 1877, 1880, 1881, 1882, 1888, 1898, 1901], "frame": [0, 9, 13, 14, 21, 23, 65, 1181, 1798, 1884, 1916], "well": [0, 2, 4, 8, 10, 12, 18, 19, 26, 33, 35, 52, 57, 62, 63, 65, 608, 782, 813, 816, 852, 1000, 1118, 1119, 1184, 1188, 1194, 1199, 1219, 1220, 1221, 1223, 1229, 1242, 1247, 1293, 1334, 1335, 1336, 1352, 1386, 1416, 1455, 1536, 1537, 1596, 1653, 1701, 1854, 1857, 1864, 1870, 1872, 1876, 1877, 1880, 1882, 1883, 1885, 1888, 1890, 1892, 1895, 1899, 1902, 1905, 1907, 1909, 1911, 1915, 1916, 1919], "invok": [0, 1, 3, 9, 17, 27, 29, 32, 35, 50, 52, 53, 64, 65, 892, 894, 1000, 1001, 1184, 1187, 1193, 1353, 1416, 1589, 1591, 1594, 1595, 1677, 1683, 1854, 1857, 1858, 1865, 1876, 1879, 1880, 1881, 1882, 1883, 1887, 1888, 1899, 1907, 1908], "associ": [0, 2, 9, 10, 14, 17, 23, 35, 37, 46, 886, 966, 1017, 1019, 1145, 1146, 1184, 1233, 1244, 1246, 1255, 1339, 1416, 1426, 1499, 1596, 1604, 1650, 1759, 1761, 1854, 1857, 1863, 1870, 1871, 1877, 1885, 1888, 1891, 1899, 1900, 1901, 1907, 1908, 1914, 1917], "code": [0, 2, 4, 5, 9, 10, 12, 13, 17, 18, 19, 21, 22, 23, 24, 26, 27, 32, 33, 35, 41, 43, 53, 54, 62, 63, 64, 114, 671, 1000, 1001, 1014, 1114, 1159, 1184, 1188, 1189, 1194, 1195, 1196, 1199, 1200, 1201, 1214, 1225, 1227, 1255, 1432, 1444, 1596, 1749, 1851, 1852, 1856, 1857, 1863, 1871, 1877, 1878, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1893, 1894, 1895, 1898, 1906, 1907, 1908, 1909, 1914, 1915, 1919, 1922], "still": [0, 1, 2, 3, 8, 9, 16, 17, 18, 19, 23, 32, 35, 40, 41, 43, 52, 64, 65, 785, 790, 889, 894, 1188, 1193, 1201, 1383, 1407, 1596, 1597, 1598, 1599, 1685, 1733, 1853, 1854, 1857, 1869, 1870, 1871, 1872, 1876, 1877, 1880, 1881, 1882, 1884, 1886, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1907, 1908, 1909, 1911], "process": [0, 1, 2, 4, 14, 17, 23, 24, 26, 33, 35, 36, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 65, 960, 996, 1002, 1027, 1184, 1194, 1256, 1293, 1301, 1332, 1333, 1350, 1352, 1359, 1360, 1376, 1383, 1407, 1408, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1455, 1459, 1461, 1463, 1464, 1487, 1488, 1498, 1527, 1550, 1558, 1596, 1680, 1686, 1752, 1766, 1851, 1852, 1854, 1867, 1869, 1870, 1871, 1877, 1879, 1880, 1881, 1882, 1887, 1888, 1890, 1892, 1894, 1895, 1899, 1900, 1901, 1902, 1905, 1907, 1909, 1911, 1913, 1920], "reset": [0, 2, 751, 811, 816, 884, 958, 1006, 1008, 1021, 1022, 1023, 1184, 1368, 1416, 1432, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1691, 1708, 1803, 1852, 1867, 1895, 1906], "clear": [0, 2, 3, 9, 10, 54, 65, 1184, 1416, 1417, 1426, 1653, 1851, 1877, 1880, 1888, 1893, 1897, 1898], "cach": [0, 1, 3, 4, 14, 23, 41, 65, 479, 982, 983, 1000, 1003, 1008, 1010, 1012, 1014, 1022, 1027, 1292, 1293, 1294, 1597, 1608, 1869, 1884], "restor": [0, 3, 6, 13, 39, 65, 83, 1102, 1254, 1270, 1728, 1750, 1888, 1893], "initi": [0, 2, 4, 5, 9, 17, 22, 28, 29, 32, 33, 37, 39, 43, 45, 52, 53, 55, 57, 83, 488, 571, 703, 704, 705, 706, 707, 708, 711, 721, 722, 723, 724, 736, 737, 747, 751, 755, 852, 853, 870, 960, 968, 989, 994, 995, 998, 999, 1024, 1131, 1160, 1182, 1184, 1196, 1197, 1255, 1256, 1273, 1334, 1335, 1336, 1337, 1339, 1347, 1348, 1349, 1353, 1359, 1360, 1368, 1369, 1371, 1379, 1380, 1381, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1416, 1424, 1431, 1433, 1455, 1465, 1506, 1587, 1596, 1598, 1599, 1603, 1605, 1608, 1636, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1741, 1742, 1743, 1784, 1785, 1786, 1787, 1788, 1789, 1816, 1852, 1855, 1856, 1857, 1867, 1872, 1875, 1877, 1880, 1881, 1882, 1887, 1894, 1895, 1898, 1899, 1900, 1906, 1907, 1908], "class": [0, 1, 2, 3, 4, 12, 13, 17, 19, 22, 23, 27, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 46, 49, 50, 52, 54, 57, 62, 64, 83, 548, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 827, 828, 829, 830, 831, 832, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 885, 888, 889, 890, 891, 911, 958, 959, 960, 961, 963, 964, 979, 981, 992, 1032, 1061, 1123, 1159, 1182, 1183, 1184, 1187, 1189, 1190, 1194, 1195, 1198, 1199, 1200, 1201, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1488, 1498, 1506, 1550, 1552, 1587, 1596, 1597, 1598, 1599, 1605, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1629, 1636, 1641, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1708, 1747, 1777, 1852, 1855, 1858, 1861, 1864, 1867, 1869, 1871, 1876, 1877, 1880, 1882, 1883, 1884, 1888, 1890, 1893, 1896, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1911, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1923], "optimizedmodul": [0, 1852], "mod": [0, 12, 23, 65, 712, 713, 723, 729, 730, 731, 736, 737, 747, 755, 801, 802, 803, 804, 827, 828, 855, 1113, 1187, 1188, 1193, 1200, 1638, 1856, 1857, 1899, 1920], "dynamo_ctx": 0, "origin": [0, 2, 12, 13, 14, 17, 22, 23, 24, 29, 32, 33, 35, 37, 45, 57, 60, 64, 65, 201, 204, 216, 479, 536, 594, 598, 608, 671, 751, 788, 829, 830, 845, 848, 849, 929, 934, 961, 1077, 1078, 1080, 1084, 1088, 1089, 1090, 1096, 1113, 1123, 1158, 1181, 1191, 1195, 1196, 1199, 1200, 1277, 1291, 1324, 1328, 1340, 1352, 1353, 1368, 1445, 1455, 1498, 1568, 1603, 1604, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1629, 1632, 1635, 1637, 1638, 1640, 1653, 1683, 1692, 1728, 1739, 1775, 1790, 1823, 1834, 1835, 1854, 1857, 1863, 1869, 1871, 1877, 1880, 1882, 1884, 1887, 1890, 1891, 1893, 1895, 1899, 1900, 1902, 1903, 1913, 1920, 1921, 1922], "nn": [0, 1, 4, 6, 12, 17, 22, 23, 27, 32, 33, 35, 36, 39, 40, 53, 57, 58, 65, 292, 532, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 783, 784, 805, 845, 850, 851, 852, 853, 855, 1000, 1003, 1057, 1113, 1122, 1123, 1182, 1184, 1185, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1199, 1200, 1201, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1587, 1596, 1597, 1598, 1599, 1605, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1629, 1641, 1672, 1774, 1798, 1837, 1851, 1852, 1854, 1855, 1859, 1871, 1872, 1876, 1881, 1884, 1888, 1890, 1891, 1892, 1895, 1898, 1899, 1900, 1902, 1904, 1907, 1916, 1918, 1921], "object": [0, 1, 2, 4, 6, 7, 9, 12, 13, 17, 19, 22, 26, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 52, 54, 57, 64, 65, 70, 83, 201, 204, 594, 784, 785, 845, 852, 871, 881, 882, 883, 908, 910, 981, 992, 1032, 1057, 1096, 1108, 1110, 1115, 1116, 1118, 1119, 1120, 1124, 1170, 1171, 1184, 1190, 1191, 1194, 1195, 1199, 1200, 1215, 1236, 1240, 1253, 1255, 1256, 1276, 1353, 1355, 1356, 1357, 1361, 1379, 1380, 1381, 1416, 1426, 1455, 1596, 1606, 1621, 1630, 1631, 1634, 1635, 1636, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1733, 1806, 1807, 1810, 1851, 1856, 1857, 1858, 1861, 1865, 1866, 1869, 1873, 1877, 1879, 1880, 1882, 1883, 1884, 1885, 1887, 1890, 1892, 1893, 1894, 1895, 1898, 1902, 1904, 1905, 1906, 1907, 1909, 1913, 1914, 1916, 1918, 1922, 1923], "later": [0, 1, 2, 4, 8, 17, 19, 31, 33, 35, 57, 64, 65, 736, 737, 747, 755, 907, 992, 1255, 1386, 1409, 1410, 1411, 1431, 1445, 1539, 1540, 1541, 1568, 1596, 1802, 1854, 1877, 1879, 1880, 1881, 1888, 1893, 1908, 1909], "patch": [0, 8, 59, 1363, 1467], "its": [0, 1, 2, 5, 6, 8, 9, 10, 13, 14, 16, 17, 19, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 52, 53, 54, 57, 64, 65, 77, 78, 145, 451, 480, 496, 505, 507, 509, 574, 575, 576, 608, 671, 814, 817, 865, 866, 867, 869, 870, 871, 884, 887, 899, 904, 905, 911, 936, 937, 946, 952, 956, 964, 992, 994, 1003, 1040, 1044, 1047, 1057, 1060, 1105, 1110, 1114, 1115, 1116, 1119, 1124, 1145, 1146, 1150, 1164, 1184, 1194, 1219, 1220, 1224, 1229, 1236, 1238, 1241, 1242, 1247, 1253, 1278, 1304, 1332, 1334, 1335, 1336, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1379, 1380, 1381, 1416, 1417, 1426, 1447, 1455, 1515, 1526, 1553, 1559, 1587, 1592, 1593, 1597, 1598, 1599, 1604, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1630, 1636, 1640, 1644, 1653, 1658, 1659, 1660, 1662, 1668, 1669, 1672, 1692, 1717, 1721, 1725, 1726, 1742, 1743, 1747, 1767, 1803, 1822, 1823, 1825, 1833, 1842, 1854, 1856, 1857, 1861, 1865, 1867, 1869, 1876, 1877, 1878, 1880, 1881, 1882, 1884, 1885, 1888, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1907, 1908, 1909, 1911, 1914, 1915, 1917, 1920, 1921], "forward": [0, 1, 6, 8, 9, 12, 14, 17, 19, 22, 23, 26, 33, 35, 36, 39, 41, 57, 58, 59, 61, 63, 65, 145, 216, 217, 671, 726, 739, 748, 751, 791, 806, 807, 808, 811, 815, 852, 853, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 898, 899, 911, 1003, 1049, 1061, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1114, 1116, 1117, 1118, 1120, 1123, 1159, 1184, 1187, 1188, 1189, 1190, 1194, 1195, 1199, 1200, 1201, 1328, 1332, 1335, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1368, 1386, 1401, 1412, 1413, 1414, 1416, 1417, 1418, 1422, 1423, 1426, 1427, 1431, 1444, 1459, 1460, 1461, 1462, 1463, 1501, 1502, 1503, 1508, 1553, 1587, 1590, 1591, 1592, 1593, 1596, 1606, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1626, 1637, 1640, 1641, 1708, 1747, 1776, 1837, 1852, 1853, 1854, 1856, 1857, 1863, 1865, 1869, 1871, 1875, 1876, 1877, 1879, 1880, 1881, 1883, 1884, 1885, 1887, 1888, 1891, 1893, 1895, 1898, 1899, 1900, 1901, 1902, 1907, 1919, 1920, 1921], "method": [0, 1, 4, 8, 10, 12, 13, 16, 17, 23, 26, 27, 29, 32, 35, 36, 37, 39, 41, 42, 43, 44, 50, 52, 57, 64, 65, 216, 217, 317, 479, 480, 489, 490, 491, 512, 605, 784, 788, 790, 806, 807, 808, 829, 832, 845, 865, 866, 867, 884, 888, 889, 890, 891, 904, 905, 994, 1108, 1137, 1182, 1184, 1185, 1187, 1188, 1189, 1194, 1195, 1199, 1200, 1201, 1229, 1247, 1248, 1255, 1256, 1313, 1316, 1324, 1332, 1359, 1416, 1417, 1418, 1426, 1427, 1444, 1515, 1587, 1596, 1604, 1605, 1608, 1610, 1612, 1615, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1632, 1637, 1650, 1651, 1656, 1657, 1658, 1660, 1670, 1702, 1783, 1798, 1802, 1851, 1852, 1854, 1857, 1858, 1865, 1867, 1869, 1870, 1871, 1875, 1876, 1877, 1880, 1882, 1883, 1884, 1885, 1888, 1890, 1893, 1896, 1898, 1899, 1902, 1904, 1907, 1909, 1913, 1914, 1916, 1917, 1919, 1922], "self": [0, 1, 2, 10, 12, 17, 22, 23, 29, 32, 33, 35, 37, 40, 43, 44, 49, 54, 57, 62, 65, 92, 134, 145, 148, 149, 150, 165, 167, 170, 173, 174, 175, 185, 186, 190, 191, 203, 211, 213, 227, 234, 248, 249, 252, 253, 261, 280, 284, 291, 305, 307, 309, 311, 313, 315, 317, 319, 320, 322, 323, 324, 325, 327, 335, 371, 387, 392, 394, 395, 396, 447, 464, 474, 476, 489, 490, 491, 492, 505, 507, 509, 512, 516, 528, 534, 535, 536, 537, 549, 551, 571, 572, 574, 575, 576, 578, 579, 595, 598, 599, 605, 608, 609, 611, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 852, 853, 909, 1113, 1114, 1123, 1154, 1182, 1183, 1184, 1187, 1188, 1189, 1190, 1194, 1195, 1199, 1200, 1201, 1324, 1328, 1361, 1415, 1416, 1417, 1418, 1422, 1426, 1427, 1443, 1445, 1455, 1461, 1463, 1545, 1568, 1587, 1605, 1606, 1608, 1614, 1616, 1629, 1638, 1651, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1698, 1719, 1853, 1854, 1855, 1856, 1857, 1861, 1867, 1870, 1871, 1875, 1877, 1878, 1879, 1882, 1884, 1888, 1893, 1895, 1899, 1900, 1902, 1907, 1913], "register_backend": [0, 12, 35, 1852, 1907], "compiler_fn": [0, 17], "tag": [0, 2, 4, 8, 35, 1255, 1851, 1852, 1887, 1899, 1916], "given": [0, 1, 2, 3, 4, 8, 10, 14, 15, 17, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 50, 52, 54, 57, 63, 64, 65, 70, 145, 214, 307, 309, 311, 315, 320, 371, 392, 396, 465, 466, 467, 468, 469, 471, 505, 507, 509, 575, 576, 595, 598, 671, 684, 686, 687, 689, 690, 726, 751, 770, 776, 783, 784, 785, 786, 790, 791, 793, 811, 815, 828, 831, 845, 849, 856, 867, 880, 882, 884, 886, 888, 890, 892, 893, 894, 895, 896, 897, 900, 914, 915, 918, 926, 930, 931, 937, 938, 943, 944, 950, 952, 955, 956, 957, 960, 961, 963, 964, 965, 969, 977, 978, 981, 985, 986, 1002, 1006, 1008, 1009, 1010, 1012, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1032, 1033, 1034, 1035, 1042, 1044, 1049, 1057, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1097, 1113, 1123, 1124, 1150, 1181, 1184, 1191, 1199, 1200, 1205, 1209, 1219, 1221, 1222, 1231, 1233, 1239, 1247, 1256, 1263, 1265, 1266, 1267, 1268, 1271, 1281, 1283, 1285, 1286, 1289, 1314, 1324, 1332, 1333, 1339, 1344, 1345, 1346, 1348, 1349, 1350, 1352, 1353, 1359, 1360, 1364, 1365, 1368, 1376, 1386, 1408, 1412, 1413, 1414, 1416, 1418, 1420, 1421, 1423, 1425, 1427, 1431, 1444, 1450, 1464, 1465, 1468, 1469, 1470, 1480, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1506, 1507, 1510, 1511, 1515, 1526, 1550, 1565, 1580, 1584, 1585, 1586, 1590, 1591, 1592, 1604, 1629, 1636, 1637, 1640, 1643, 1644, 1653, 1679, 1682, 1684, 1686, 1689, 1694, 1699, 1702, 1703, 1704, 1717, 1723, 1728, 1739, 1740, 1771, 1775, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1793, 1798, 1801, 1803, 1812, 1813, 1818, 1820, 1822, 1832, 1837, 1851, 1852, 1854, 1857, 1861, 1863, 1864, 1866, 1869, 1872, 1873, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1892, 1893, 1895, 1898, 1901, 1902, 1907, 1908, 1911, 1912, 1913, 1916, 1918, 1921, 1922], "registri": [0, 32, 1852, 1895], "shorthand": [0, 451, 1203], "project": [0, 8, 22, 37, 1285, 1386, 1422, 1608, 1691, 1851, 1886], "import": [0, 2, 3, 4, 6, 8, 10, 12, 13, 14, 16, 17, 18, 22, 23, 26, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 44, 46, 49, 50, 54, 57, 60, 61, 62, 63, 64, 65, 216, 671, 725, 732, 733, 734, 763, 764, 765, 783, 851, 852, 853, 902, 904, 923, 930, 956, 1108, 1110, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1123, 1159, 1181, 1182, 1185, 1187, 1189, 1190, 1191, 1193, 1194, 1195, 1199, 1200, 1201, 1235, 1236, 1239, 1240, 1253, 1285, 1382, 1416, 1596, 1606, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1631, 1632, 1633, 1634, 1635, 1636, 1643, 1650, 1671, 1672, 1695, 1854, 1856, 1857, 1858, 1867, 1869, 1872, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1902, 1905, 1907, 1908, 1909, 1911, 1914, 1916, 1917, 1918, 1921, 1922], "might": [0, 2, 4, 5, 10, 14, 16, 17, 22, 23, 26, 27, 29, 35, 37, 39, 41, 52, 62, 64, 65, 145, 479, 535, 884, 957, 1199, 1200, 1515, 1596, 1597, 1851, 1854, 1867, 1872, 1877, 1879, 1880, 1881, 1882, 1885, 1887, 1892, 1895, 1899, 1900, 1902, 1907, 1908, 1909, 1911, 1915, 1917, 1918], "easier": [0, 3, 8, 14, 23, 32, 65, 1854, 1856, 1872, 1877, 1878, 1882, 1883], "directli": [0, 1, 2, 4, 8, 10, 14, 16, 22, 23, 26, 27, 32, 33, 35, 37, 41, 42, 43, 51, 57, 61, 65, 548, 723, 738, 881, 890, 1040, 1108, 1114, 1121, 1123, 1129, 1214, 1422, 1449, 1468, 1526, 1571, 1630, 1823, 1854, 1856, 1857, 1867, 1877, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1890, 1893, 1899, 1901, 1902, 1907, 1911, 1916, 1918], "compiledfn": 0, "fake": [0, 65, 703, 704, 705, 706, 707, 708, 709, 710, 711, 721, 722, 723, 784, 790, 791, 801, 803, 829, 852, 853, 1071, 1072, 1899, 1902, 1905], "__name__": [0, 32, 33, 35, 44, 45, 53, 1881, 1882, 1890, 1894, 1899, 1908], "sequenc": [0, 2, 14, 21, 22, 23, 32, 37, 39, 40, 41, 145, 557, 726, 751, 805, 871, 884, 898, 928, 930, 931, 934, 942, 963, 970, 971, 974, 1042, 1056, 1058, 1125, 1145, 1146, 1149, 1199, 1239, 1285, 1324, 1334, 1339, 1344, 1353, 1360, 1368, 1386, 1422, 1431, 1444, 1459, 1460, 1461, 1462, 1463, 1507, 1565, 1605, 1608, 1615, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644, 1647, 1650, 1654, 1669, 1708, 1710, 1714, 1737, 1795, 1798, 1844, 1846, 1849, 1854, 1855, 1856, 1872, 1880, 1884, 1895, 1899, 1900, 1907, 1917, 1918], "categor": [0, 8, 22, 45, 1517, 1852, 1858, 1903, 1907], "exclude_tag": 0, "debug": [0, 2, 3, 5, 9, 14, 15, 19, 32, 49, 671, 818, 819, 823, 834, 899, 900, 944, 958, 991, 1031, 1132, 1213, 1590, 1591, 1592, 1593, 1744, 1752, 1852, 1856, 1863, 1877, 1879, 1880, 1881, 1886, 1887, 1888, 1892, 1894, 1895, 1896, 1899, 1920], "experiment": [0, 2, 3, 15, 18, 23, 33, 35, 39, 40, 57, 65, 892, 894, 898, 944, 1031, 1114, 1214, 1225, 1227, 1228, 1232, 1245, 1596, 1650, 1672, 1852, 1854, 1856, 1870, 1871, 1881, 1892, 1894, 1895, 1899, 1900, 1901], "conveni": [1, 4, 8, 17, 21, 26, 49, 52, 53, 63, 1125, 1241, 1587, 1844, 1851, 1856, 1861, 1876, 1877, 1880, 1882, 1887, 1888, 1899, 1906], "where": [1, 2, 3, 4, 5, 8, 9, 10, 14, 16, 17, 23, 24, 26, 27, 32, 33, 35, 39, 40, 41, 43, 45, 52, 53, 54, 55, 57, 59, 60, 62, 65, 148, 218, 248, 394, 396, 479, 671, 684, 686, 687, 690, 726, 749, 751, 772, 811, 812, 824, 868, 887, 892, 894, 907, 913, 922, 928, 935, 936, 937, 952, 956, 961, 972, 974, 1036, 1037, 1040, 1044, 1062, 1073, 1074, 1076, 1079, 1080, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1092, 1094, 1118, 1119, 1120, 1124, 1125, 1128, 1140, 1141, 1142, 1143, 1173, 1174, 1176, 1177, 1180, 1181, 1182, 1185, 1197, 1203, 1204, 1205, 1208, 1213, 1214, 1215, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1251, 1252, 1253, 1255, 1256, 1261, 1264, 1271, 1272, 1273, 1274, 1278, 1281, 1283, 1284, 1285, 1286, 1289, 1306, 1311, 1312, 1314, 1317, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1486, 1498, 1499, 1506, 1511, 1513, 1514, 1532, 1533, 1550, 1552, 1553, 1556, 1557, 1559, 1565, 1568, 1596, 1598, 1599, 1603, 1630, 1631, 1632, 1633, 1642, 1652, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1675, 1676, 1677, 1689, 1699, 1701, 1702, 1722, 1723, 1759, 1765, 1766, 1771, 1775, 1779, 1780, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1796, 1797, 1798, 1801, 1802, 1816, 1825, 1826, 1827, 1828, 1829, 1834, 1835, 1839, 1840, 1841, 1842, 1843, 1844, 1853, 1854, 1855, 1857, 1858, 1863, 1864, 1866, 1869, 1872, 1875, 1876, 1877, 1878, 1880, 1882, 1883, 1884, 1885, 1888, 1891, 1892, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1905, 1907, 1909, 1911, 1912, 1914, 1916, 1921, 1922], "float": [1, 2, 4, 16, 22, 24, 32, 33, 35, 39, 41, 43, 46, 54, 57, 65, 148, 149, 214, 307, 309, 311, 315, 327, 394, 468, 474, 505, 676, 678, 683, 685, 689, 723, 726, 729, 730, 731, 735, 736, 737, 739, 746, 747, 752, 753, 754, 755, 756, 761, 762, 763, 764, 765, 766, 768, 770, 771, 772, 776, 783, 784, 785, 790, 808, 810, 821, 829, 830, 843, 848, 849, 852, 853, 856, 871, 899, 900, 913, 914, 922, 929, 932, 936, 946, 951, 952, 956, 957, 1027, 1040, 1051, 1052, 1062, 1075, 1093, 1102, 1103, 1104, 1105, 1107, 1128, 1131, 1140, 1141, 1142, 1145, 1146, 1166, 1173, 1174, 1176, 1177, 1178, 1179, 1182, 1184, 1199, 1200, 1203, 1207, 1209, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1261, 1270, 1272, 1274, 1301, 1305, 1306, 1310, 1312, 1313, 1314, 1317, 1320, 1324, 1328, 1334, 1335, 1336, 1338, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1370, 1371, 1372, 1375, 1376, 1377, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1402, 1404, 1408, 1416, 1421, 1422, 1424, 1425, 1430, 1434, 1437, 1438, 1439, 1440, 1441, 1447, 1453, 1455, 1458, 1459, 1461, 1463, 1464, 1465, 1468, 1469, 1470, 1497, 1498, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1512, 1517, 1526, 1551, 1558, 1565, 1584, 1596, 1600, 1601, 1604, 1613, 1614, 1616, 1617, 1619, 1622, 1623, 1624, 1625, 1632, 1633, 1637, 1643, 1644, 1650, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1680, 1681, 1683, 1685, 1687, 1689, 1695, 1698, 1702, 1703, 1704, 1705, 1717, 1721, 1722, 1742, 1743, 1746, 1750, 1759, 1760, 1762, 1763, 1765, 1799, 1802, 1806, 1823, 1825, 1837, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1867, 1869, 1870, 1872, 1873, 1875, 1876, 1880, 1882, 1884, 1888, 1891, 1895, 1897, 1899, 1901, 1902, 1903, 1907, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1923], "datatyp": [1, 65, 871, 1181, 1184, 1416, 1598, 1599, 1745, 1891, 1895], "other": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 16, 17, 18, 22, 23, 26, 27, 29, 32, 33, 36, 39, 41, 42, 43, 45, 49, 50, 52, 53, 57, 58, 60, 62, 63, 64, 65, 92, 93, 108, 124, 125, 128, 140, 141, 144, 145, 154, 155, 160, 161, 191, 192, 193, 202, 228, 233, 237, 238, 239, 249, 268, 269, 276, 277, 278, 279, 285, 286, 287, 288, 289, 290, 297, 298, 301, 302, 303, 304, 307, 309, 315, 318, 338, 346, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 372, 373, 388, 389, 402, 406, 431, 432, 443, 444, 448, 449, 480, 490, 512, 552, 553, 554, 555, 571, 574, 607, 608, 609, 612, 613, 676, 685, 729, 730, 731, 732, 733, 734, 751, 805, 817, 852, 856, 862, 869, 870, 875, 881, 884, 885, 898, 899, 900, 904, 905, 911, 916, 917, 919, 920, 921, 923, 928, 951, 957, 958, 961, 963, 965, 972, 982, 1003, 1045, 1051, 1052, 1053, 1054, 1061, 1062, 1063, 1077, 1084, 1102, 1103, 1104, 1105, 1108, 1114, 1115, 1116, 1117, 1120, 1124, 1126, 1127, 1128, 1138, 1139, 1140, 1149, 1150, 1152, 1153, 1158, 1159, 1161, 1173, 1182, 1184, 1188, 1195, 1204, 1206, 1207, 1208, 1210, 1211, 1216, 1234, 1236, 1239, 1240, 1253, 1261, 1262, 1263, 1265, 1267, 1268, 1271, 1272, 1278, 1281, 1282, 1286, 1287, 1291, 1294, 1305, 1307, 1317, 1320, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1353, 1363, 1368, 1370, 1382, 1416, 1417, 1426, 1444, 1459, 1463, 1467, 1490, 1491, 1492, 1517, 1526, 1565, 1584, 1587, 1596, 1600, 1601, 1619, 1641, 1645, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1680, 1681, 1687, 1689, 1717, 1721, 1737, 1742, 1745, 1747, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1784, 1785, 1786, 1787, 1788, 1789, 1793, 1799, 1800, 1816, 1822, 1826, 1828, 1841, 1842, 1847, 1848, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1865, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1895, 1898, 1902, 1903, 1907, 1908, 1909, 1912, 1913, 1916, 1917, 1918, 1922], "point": [1, 2, 8, 9, 10, 12, 13, 14, 16, 17, 19, 22, 24, 32, 33, 36, 39, 43, 49, 52, 53, 57, 65, 83, 148, 149, 315, 327, 333, 474, 689, 729, 730, 731, 732, 733, 734, 735, 740, 741, 742, 743, 744, 745, 746, 747, 750, 752, 753, 754, 755, 756, 766, 768, 770, 771, 772, 776, 786, 790, 810, 811, 812, 813, 816, 821, 843, 852, 853, 856, 871, 893, 895, 896, 897, 899, 900, 913, 914, 922, 951, 952, 956, 1006, 1008, 1017, 1021, 1022, 1103, 1104, 1105, 1131, 1137, 1141, 1142, 1146, 1166, 1181, 1184, 1199, 1200, 1207, 1209, 1230, 1231, 1254, 1256, 1261, 1270, 1313, 1320, 1329, 1330, 1331, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1409, 1410, 1411, 1416, 1467, 1468, 1480, 1506, 1515, 1526, 1565, 1584, 1596, 1643, 1655, 1686, 1702, 1703, 1704, 1708, 1717, 1730, 1742, 1743, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1837, 1852, 1854, 1856, 1857, 1858, 1861, 1867, 1873, 1875, 1876, 1877, 1881, 1885, 1888, 1891, 1900, 1901, 1902, 1903, 1905, 1907, 1908, 1911, 1914, 1916, 1917, 1918, 1919, 1920, 1923], "lower_precision_fp": 1, "half": [1, 2, 11, 33, 41, 608, 946, 1071, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1184, 1246, 1252, 1344, 1345, 1346, 1347, 1348, 1349, 1364, 1365, 1367, 1416, 1510, 1511, 1514, 1652, 1677, 1730, 1798, 1870, 1888, 1891, 1913, 1914, 1917, 1919], "linear": [1, 3, 10, 23, 33, 35, 36, 39, 41, 57, 59, 61, 63, 65, 424, 465, 466, 467, 468, 469, 472, 702, 711, 719, 720, 756, 783, 784, 785, 787, 805, 845, 849, 850, 852, 853, 894, 937, 963, 1057, 1113, 1115, 1123, 1125, 1137, 1184, 1188, 1195, 1209, 1215, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1244, 1246, 1274, 1313, 1332, 1338, 1358, 1366, 1367, 1375, 1401, 1416, 1418, 1431, 1433, 1435, 1443, 1445, 1452, 1455, 1466, 1468, 1504, 1513, 1514, 1526, 1560, 1568, 1573, 1584, 1587, 1596, 1603, 1604, 1608, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1628, 1636, 1637, 1640, 1680, 1683, 1691, 1702, 1837, 1844, 1852, 1855, 1856, 1862, 1865, 1872, 1875, 1880, 1881, 1882, 1884, 1888, 1893, 1895, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1907], "layer": [1, 9, 14, 33, 35, 37, 39, 40, 57, 60, 725, 726, 751, 832, 849, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1355, 1356, 1357, 1361, 1368, 1369, 1371, 1379, 1380, 1381, 1386, 1387, 1388, 1401, 1403, 1409, 1410, 1411, 1422, 1423, 1431, 1433, 1444, 1455, 1459, 1460, 1461, 1462, 1463, 1529, 1596, 1603, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1852, 1875, 1880, 1882, 1884, 1887, 1888, 1893, 1895, 1898, 1900, 1902, 1903, 1905, 1921], "convolut": [1, 2, 3, 15, 729, 730, 731, 732, 733, 734, 763, 764, 765, 944, 1193, 1344, 1345, 1346, 1347, 1348, 1349, 1355, 1356, 1357, 1361, 1392, 1393, 1394, 1395, 1396, 1397, 1428, 1429, 1434, 1464, 1465, 1467, 1490, 1491, 1492, 1493, 1494, 1495, 1514, 1515, 1745, 1852, 1853, 1855, 1865, 1875, 1879, 1880, 1885, 1888, 1897, 1901, 1902, 1905], "much": [1, 5, 8, 10, 14, 17, 18, 27, 32, 33, 145, 884, 893, 898, 1014, 1219, 1220, 1247, 1256, 1360, 1596, 1619, 1683, 1854, 1877, 1880, 1885, 1888, 1893, 1899, 1900, 1907, 1908, 1911], "reduct": [1, 3, 23, 35, 57, 315, 505, 509, 1229, 1261, 1313, 1332, 1333, 1339, 1350, 1352, 1360, 1370, 1376, 1377, 1382, 1383, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1465, 1487, 1488, 1496, 1498, 1499, 1507, 1512, 1523, 1524, 1527, 1528, 1538, 1546, 1547, 1548, 1549, 1550, 1558, 1569, 1570, 1581, 1582, 1596, 1702, 1779, 1855, 1870, 1881, 1885, 1899, 1902], "often": [1, 3, 5, 8, 9, 14, 18, 23, 26, 32, 35, 41, 53, 60, 65, 145, 884, 898, 1199, 1230, 1231, 1240, 1289, 1359, 1379, 1380, 1381, 1480, 1488, 1506, 1515, 1587, 1603, 1650, 1685, 1857, 1877, 1880, 1884, 1887, 1888, 1891, 1892, 1899, 1907, 1916], "tri": [1, 3, 4, 8, 14, 32, 41, 45, 65, 571, 1184, 1416, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1856, 1857, 1869, 1884, 1895, 1899], "match": [1, 2, 4, 14, 17, 22, 35, 37, 39, 41, 52, 65, 145, 307, 309, 315, 466, 467, 491, 492, 571, 574, 684, 690, 770, 784, 785, 786, 845, 869, 884, 898, 899, 900, 957, 960, 972, 973, 974, 1003, 1049, 1057, 1113, 1125, 1161, 1184, 1197, 1199, 1216, 1255, 1277, 1351, 1360, 1416, 1422, 1468, 1487, 1488, 1526, 1552, 1559, 1565, 1584, 1596, 1608, 1638, 1644, 1703, 1737, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1818, 1844, 1854, 1857, 1864, 1870, 1872, 1877, 1878, 1880, 1882, 1888, 1893, 1895, 1898, 1899, 1900, 1902, 1903, 1904, 1907, 1914, 1918, 1920], "appropri": [1, 8, 9, 10, 14, 17, 19, 35, 36, 41, 57, 64, 65, 885, 1003, 1199, 1857, 1858, 1861, 1871, 1885, 1900, 1902, 1905, 1907, 1908, 1909, 1913, 1922], "ordinarili": [1, 1876], "train": [1, 2, 12, 14, 16, 18, 20, 21, 23, 27, 32, 33, 35, 36, 38, 39, 43, 50, 51, 52, 53, 57, 60, 61, 65, 703, 704, 705, 706, 707, 708, 709, 710, 711, 721, 722, 723, 724, 790, 792, 829, 830, 846, 847, 848, 850, 852, 853, 854, 1002, 1003, 1006, 1008, 1015, 1123, 1159, 1184, 1189, 1195, 1198, 1199, 1324, 1328, 1334, 1335, 1336, 1352, 1353, 1354, 1359, 1360, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1416, 1422, 1423, 1434, 1455, 1463, 1481, 1485, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1563, 1564, 1596, 1604, 1606, 1608, 1637, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1851, 1853, 1854, 1855, 1865, 1867, 1875, 1877, 1880, 1881, 1884, 1889, 1891, 1893, 1895, 1898, 1899, 1900, 1901, 1905, 1907, 1909, 1916], "gradscal": [1, 1876, 1880], "togeth": [1, 4, 10, 12, 14, 19, 32, 35, 40, 41, 58, 63, 65, 751, 1000, 1057, 1113, 1115, 1119, 1123, 1124, 1129, 1223, 1368, 1386, 1431, 1526, 1596, 1600, 1823, 1865, 1876, 1882, 1883, 1884, 1887, 1888, 1902, 1907, 1908, 1909, 1916], "shown": [1, 12, 33, 44, 53, 1000, 1010, 1388, 1608, 1653, 1683, 1750, 1854, 1857, 1876, 1880, 1882, 1884, 1888, 1900, 1902, 1911], "recip": [1, 4, 39, 1416, 1596, 1610, 1876, 1888], "howev": [1, 3, 4, 5, 6, 8, 10, 14, 26, 27, 32, 33, 35, 39, 41, 43, 49, 57, 58, 59, 61, 62, 64, 65, 474, 536, 885, 892, 960, 982, 1003, 1045, 1047, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1113, 1114, 1118, 1119, 1121, 1124, 1125, 1184, 1187, 1188, 1194, 1196, 1223, 1238, 1239, 1241, 1255, 1256, 1273, 1332, 1335, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1360, 1416, 1490, 1491, 1492, 1515, 1587, 1596, 1629, 1643, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1784, 1785, 1786, 1787, 1788, 1789, 1844, 1852, 1857, 1872, 1876, 1877, 1880, 1882, 1886, 1888, 1890, 1892, 1893, 1894, 1895, 1899, 1900, 1907, 1909, 1911], "modular": [1, 1876], "mai": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 17, 23, 26, 31, 32, 33, 35, 39, 41, 42, 43, 45, 49, 51, 52, 57, 58, 62, 64, 65, 191, 216, 248, 307, 315, 451, 507, 509, 547, 594, 608, 671, 680, 806, 807, 808, 852, 883, 890, 892, 894, 898, 899, 908, 915, 926, 938, 949, 950, 952, 954, 957, 958, 960, 961, 969, 982, 992, 993, 994, 1000, 1001, 1003, 1014, 1016, 1020, 1034, 1035, 1057, 1096, 1100, 1105, 1108, 1110, 1117, 1118, 1120, 1146, 1181, 1184, 1187, 1188, 1193, 1194, 1196, 1197, 1199, 1205, 1214, 1215, 1219, 1220, 1221, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1239, 1241, 1242, 1245, 1246, 1247, 1253, 1255, 1256, 1261, 1278, 1288, 1301, 1324, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1382, 1386, 1412, 1413, 1414, 1416, 1423, 1431, 1461, 1463, 1468, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1507, 1515, 1517, 1526, 1532, 1553, 1565, 1583, 1584, 1585, 1586, 1587, 1596, 1603, 1605, 1606, 1608, 1643, 1672, 1677, 1701, 1721, 1724, 1742, 1745, 1752, 1770, 1782, 1798, 1802, 1825, 1837, 1851, 1852, 1854, 1856, 1857, 1861, 1863, 1864, 1865, 1867, 1871, 1876, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1888, 1891, 1892, 1893, 1894, 1895, 1899, 1901, 1902, 1903, 1905, 1907, 1909, 1911, 1913, 1919, 1922], "separ": [1, 2, 4, 10, 23, 26, 32, 35, 39, 52, 53, 57, 58, 60, 63, 64, 65, 726, 751, 881, 1057, 1074, 1076, 1082, 1083, 1086, 1087, 1092, 1094, 1113, 1194, 1229, 1244, 1371, 1379, 1380, 1381, 1422, 1424, 1534, 1644, 1851, 1855, 1857, 1863, 1876, 1877, 1879, 1880, 1883, 1893, 1898, 1899, 1908, 1911, 1912, 1916], "desir": [1, 2, 4, 23, 32, 35, 41, 57, 65, 83, 150, 165, 167, 170, 173, 174, 175, 190, 201, 204, 234, 248, 261, 291, 319, 387, 438, 439, 440, 441, 442, 489, 491, 492, 512, 516, 535, 536, 537, 551, 571, 574, 594, 595, 608, 784, 856, 870, 913, 922, 941, 1004, 1005, 1028, 1029, 1038, 1039, 1058, 1059, 1060, 1070, 1075, 1093, 1110, 1111, 1112, 1141, 1142, 1184, 1203, 1254, 1270, 1276, 1283, 1296, 1302, 1311, 1313, 1314, 1332, 1416, 1466, 1534, 1571, 1572, 1587, 1629, 1643, 1647, 1648, 1692, 1699, 1702, 1703, 1704, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1751, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1778, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1801, 1816, 1827, 1829, 1849, 1850, 1870, 1871, 1872, 1876, 1877, 1880, 1883, 1886, 1888, 1893, 1900, 1906, 1907, 1912, 1913, 1914], "section": [1, 2, 8, 12, 17, 23, 32, 41, 43, 44, 61, 65, 114, 1014, 1057, 1137, 1353, 1368, 1386, 1414, 1431, 1498, 1632, 1817, 1854, 1855, 1856, 1857, 1858, 1869, 1871, 1872, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1886, 1888, 1890, 1908, 1916], "infer": [1, 2, 3, 4, 6, 14, 16, 18, 20, 24, 27, 41, 52, 571, 608, 852, 853, 856, 870, 871, 974, 1110, 1111, 1146, 1159, 1168, 1182, 1185, 1193, 1198, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1422, 1468, 1526, 1552, 1587, 1641, 1672, 1683, 1717, 1724, 1742, 1743, 1784, 1785, 1786, 1787, 1788, 1789, 1816, 1833, 1852, 1854, 1856, 1857, 1861, 1870, 1872, 1888, 1895, 1896, 1901, 1902, 1903, 1905, 1911], "For": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19, 20, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 41, 43, 49, 50, 52, 53, 55, 57, 58, 59, 61, 62, 63, 64, 65, 191, 216, 248, 283, 307, 309, 315, 329, 346, 464, 474, 485, 491, 505, 507, 509, 574, 580, 594, 608, 677, 678, 679, 680, 681, 684, 690, 725, 729, 730, 731, 732, 733, 734, 751, 783, 784, 785, 805, 849, 850, 883, 899, 912, 916, 918, 919, 921, 924, 933, 937, 944, 992, 1006, 1008, 1014, 1038, 1039, 1040, 1057, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1101, 1123, 1125, 1126, 1137, 1146, 1161, 1184, 1194, 1195, 1197, 1199, 1200, 1215, 1219, 1220, 1223, 1226, 1227, 1228, 1229, 1231, 1240, 1241, 1243, 1247, 1256, 1263, 1271, 1278, 1284, 1288, 1324, 1328, 1332, 1333, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1359, 1360, 1362, 1363, 1368, 1370, 1377, 1382, 1386, 1388, 1416, 1419, 1420, 1421, 1422, 1430, 1431, 1437, 1438, 1439, 1440, 1441, 1442, 1447, 1452, 1466, 1467, 1471, 1472, 1473, 1490, 1491, 1492, 1515, 1551, 1553, 1565, 1573, 1587, 1592, 1593, 1596, 1606, 1629, 1630, 1631, 1633, 1643, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1685, 1730, 1739, 1777, 1787, 1793, 1802, 1817, 1819, 1823, 1831, 1842, 1843, 1844, 1851, 1852, 1854, 1857, 1859, 1861, 1863, 1864, 1865, 1867, 1870, 1871, 1872, 1873, 1876, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1922], "api": [1, 3, 4, 6, 9, 10, 18, 21, 33, 35, 36, 40, 43, 44, 45, 49, 50, 51, 52, 53, 57, 58, 61, 64, 791, 815, 852, 885, 886, 887, 895, 911, 933, 958, 992, 993, 994, 1000, 1001, 1003, 1030, 1061, 1101, 1114, 1117, 1118, 1120, 1125, 1194, 1195, 1197, 1301, 1596, 1638, 1641, 1650, 1652, 1730, 1741, 1747, 1831, 1844, 1851, 1861, 1863, 1864, 1865, 1869, 1870, 1872, 1877, 1881, 1893, 1895, 1903, 1907, 1908, 1911, 1914, 1916, 1919, 1922], "equival": [1, 4, 6, 12, 17, 32, 33, 39, 40, 41, 45, 52, 53, 61, 62, 65, 77, 150, 165, 167, 170, 173, 174, 175, 234, 249, 261, 291, 313, 319, 387, 441, 451, 490, 492, 516, 595, 601, 608, 609, 611, 683, 735, 739, 746, 748, 750, 776, 777, 778, 867, 881, 925, 927, 930, 932, 935, 942, 943, 1045, 1049, 1052, 1055, 1056, 1057, 1059, 1074, 1076, 1079, 1082, 1083, 1086, 1087, 1089, 1092, 1094, 1112, 1114, 1117, 1119, 1125, 1147, 1149, 1161, 1183, 1184, 1194, 1199, 1200, 1203, 1215, 1236, 1240, 1248, 1253, 1285, 1290, 1304, 1311, 1324, 1334, 1335, 1336, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1359, 1360, 1371, 1377, 1379, 1380, 1381, 1382, 1386, 1388, 1416, 1447, 1455, 1467, 1469, 1534, 1555, 1565, 1584, 1585, 1586, 1596, 1648, 1672, 1708, 1711, 1715, 1739, 1745, 1753, 1775, 1781, 1794, 1804, 1805, 1811, 1816, 1835, 1844, 1845, 1846, 1850, 1854, 1856, 1857, 1877, 1895, 1899, 1903, 1911, 1912, 1914, 1917, 1918, 1922, 1923], "device_typ": [1, 35, 1876, 1906], "dtype": [1, 2, 13, 23, 24, 29, 30, 32, 35, 37, 40, 57, 65, 148, 149, 186, 203, 207, 208, 209, 210, 236, 305, 307, 309, 311, 313, 315, 403, 422, 425, 438, 439, 440, 441, 442, 446, 451, 463, 474, 476, 505, 507, 556, 571, 572, 594, 608, 678, 680, 683, 684, 688, 690, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 740, 741, 742, 743, 744, 745, 746, 747, 749, 751, 752, 755, 756, 763, 764, 765, 785, 786, 790, 810, 811, 812, 813, 814, 815, 816, 817, 818, 832, 849, 850, 852, 853, 856, 870, 871, 888, 890, 892, 894, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 929, 936, 946, 949, 950, 956, 957, 973, 1038, 1039, 1058, 1059, 1060, 1070, 1074, 1075, 1076, 1082, 1083, 1093, 1100, 1105, 1107, 1109, 1110, 1111, 1112, 1131, 1141, 1142, 1154, 1184, 1188, 1197, 1203, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1265, 1266, 1267, 1268, 1270, 1273, 1274, 1278, 1282, 1283, 1284, 1287, 1288, 1306, 1310, 1311, 1312, 1314, 1324, 1333, 1334, 1335, 1336, 1337, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1359, 1360, 1363, 1368, 1369, 1371, 1379, 1380, 1381, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1416, 1422, 1423, 1424, 1431, 1432, 1433, 1437, 1438, 1439, 1440, 1441, 1455, 1459, 1461, 1463, 1467, 1468, 1469, 1470, 1482, 1498, 1499, 1532, 1534, 1565, 1571, 1572, 1587, 1598, 1599, 1605, 1608, 1609, 1629, 1643, 1647, 1648, 1652, 1654, 1689, 1695, 1699, 1700, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1727, 1730, 1742, 1743, 1745, 1746, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1774, 1778, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1801, 1802, 1813, 1816, 1827, 1829, 1834, 1837, 1842, 1843, 1847, 1849, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1864, 1871, 1872, 1880, 1882, 1888, 1891, 1895, 1897, 1902, 1903, 1904, 1911, 1912, 1913, 1916, 1917, 1918, 1923], "enabl": [1, 2, 3, 6, 9, 12, 14, 15, 17, 18, 23, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 43, 53, 57, 495, 496, 671, 751, 803, 804, 885, 890, 911, 944, 958, 1003, 1057, 1061, 1159, 1167, 1168, 1186, 1192, 1297, 1298, 1368, 1386, 1431, 1432, 1462, 1565, 1596, 1605, 1606, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1641, 1671, 1746, 1747, 1750, 1777, 1837, 1857, 1863, 1864, 1865, 1868, 1872, 1876, 1877, 1878, 1879, 1880, 1887, 1889, 1891, 1892, 1895, 1900, 1901, 1906, 1907, 1908, 1911, 1919, 1921, 1922], "cache_en": [1, 1003], "instanc": [1, 4, 17, 22, 32, 35, 36, 37, 39, 41, 42, 43, 49, 52, 53, 54, 57, 62, 65, 134, 608, 671, 725, 739, 748, 784, 787, 815, 817, 832, 849, 958, 1057, 1108, 1182, 1184, 1195, 1199, 1256, 1359, 1360, 1363, 1379, 1380, 1381, 1388, 1416, 1426, 1460, 1462, 1463, 1467, 1525, 1596, 1604, 1615, 1629, 1637, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1787, 1817, 1854, 1856, 1858, 1863, 1865, 1869, 1871, 1876, 1877, 1880, 1881, 1882, 1884, 1888, 1892, 1899, 1902, 1907, 1908, 1909, 1911, 1913, 1918, 1922], "serv": [1, 8, 9, 12, 14, 27, 35, 1853, 1864, 1896, 1898, 1907, 1908], "region": [1, 4, 6, 14, 41, 49, 759, 760, 1329, 1330, 1331, 1364, 1365, 1375, 1377, 1409, 1410, 1411, 1483, 1484, 1510, 1511, 1540, 1541, 1854, 1869, 1876, 1880], "your": [1, 2, 3, 5, 8, 9, 10, 12, 14, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 35, 39, 40, 41, 44, 45, 49, 51, 52, 53, 54, 55, 57, 61, 62, 64, 65, 884, 890, 892, 893, 898, 944, 1159, 1184, 1188, 1189, 1193, 1196, 1199, 1200, 1201, 1416, 1423, 1596, 1605, 1608, 1641, 1672, 1746, 1834, 1854, 1856, 1857, 1861, 1863, 1869, 1870, 1871, 1873, 1876, 1877, 1878, 1880, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1891, 1892, 1894, 1895, 1898, 1900, 1903, 1906, 1908, 1911, 1916, 1917, 1919, 1922], "script": [1, 5, 12, 16, 20, 23, 29, 32, 35, 38, 43, 45, 51, 53, 54, 1185, 1187, 1188, 1189, 1190, 1193, 1194, 1196, 1198, 1199, 1201, 1851, 1852, 1856, 1857, 1865, 1879, 1887, 1889, 1893, 1899, 1902, 1907], "In": [1, 3, 4, 5, 8, 10, 12, 13, 14, 17, 20, 22, 23, 27, 29, 32, 35, 37, 39, 41, 45, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 116, 118, 120, 122, 125, 126, 128, 136, 138, 141, 142, 144, 147, 149, 153, 155, 157, 159, 161, 163, 172, 181, 189, 193, 196, 198, 208, 210, 216, 226, 230, 232, 238, 241, 243, 245, 247, 251, 256, 263, 265, 267, 271, 273, 277, 279, 286, 288, 290, 298, 300, 302, 304, 350, 352, 354, 356, 358, 360, 362, 365, 367, 369, 370, 377, 379, 381, 383, 385, 389, 413, 416, 419, 421, 432, 434, 436, 444, 449, 459, 462, 478, 482, 484, 500, 503, 514, 518, 520, 523, 525, 527, 540, 542, 544, 553, 555, 562, 566, 568, 584, 587, 589, 591, 593, 603, 613, 671, 751, 791, 815, 845, 890, 928, 949, 950, 957, 1003, 1014, 1026, 1027, 1031, 1032, 1057, 1078, 1080, 1088, 1089, 1090, 1105, 1115, 1119, 1122, 1124, 1182, 1184, 1193, 1196, 1197, 1199, 1215, 1224, 1229, 1230, 1231, 1239, 1242, 1247, 1252, 1256, 1261, 1264, 1273, 1278, 1284, 1285, 1311, 1329, 1330, 1331, 1333, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1355, 1356, 1357, 1361, 1363, 1368, 1377, 1386, 1401, 1409, 1410, 1411, 1416, 1422, 1459, 1461, 1463, 1467, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1505, 1515, 1522, 1531, 1559, 1562, 1564, 1565, 1579, 1596, 1603, 1608, 1609, 1641, 1672, 1683, 1685, 1721, 1737, 1739, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1802, 1803, 1825, 1837, 1841, 1842, 1851, 1852, 1853, 1854, 1856, 1857, 1863, 1864, 1869, 1870, 1871, 1872, 1875, 1876, 1879, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1898, 1899, 1901, 1902, 1903, 1904, 1907, 1908, 1909, 1911, 1916, 1918], "chosen": [1, 14, 23, 62, 1045, 1205, 1565, 1750, 1775, 1820, 1872, 1876, 1880, 1882, 1895, 1902], "maintain": [1, 8, 9, 17, 18, 32, 33, 35, 41, 57, 61, 65, 1328, 1356, 1361, 1508, 1596, 1629, 1643, 1852, 1872, 1876, 1877, 1880, 1882, 1888, 1902], "accuraci": [1, 14, 15, 33, 944, 1247, 1565, 1852, 1867, 1876, 1888, 1916, 1920], "detail": [1, 2, 3, 4, 8, 9, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 32, 35, 36, 37, 41, 43, 53, 57, 63, 65, 145, 317, 487, 605, 726, 729, 730, 731, 732, 733, 734, 751, 757, 758, 759, 762, 763, 764, 765, 770, 771, 773, 774, 775, 776, 784, 850, 851, 852, 853, 864, 881, 883, 884, 885, 886, 887, 890, 899, 927, 954, 959, 963, 965, 966, 968, 982, 983, 992, 1003, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1021, 1022, 1023, 1040, 1057, 1096, 1118, 1129, 1132, 1133, 1137, 1165, 1172, 1184, 1188, 1199, 1223, 1241, 1248, 1256, 1262, 1264, 1284, 1324, 1328, 1338, 1347, 1348, 1349, 1353, 1359, 1360, 1361, 1362, 1364, 1365, 1368, 1386, 1416, 1422, 1428, 1429, 1431, 1443, 1464, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1516, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1554, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1587, 1596, 1597, 1632, 1642, 1653, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1672, 1677, 1689, 1701, 1733, 1744, 1770, 1778, 1823, 1837, 1851, 1854, 1855, 1856, 1857, 1864, 1866, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1891, 1892, 1893, 1895, 1899, 1900, 1902, 1904, 1906, 1907, 1908, 1909, 1911, 1915, 1916, 1918, 1919, 1922], "enter": [1, 35, 885, 1159], "should": [1, 2, 4, 5, 6, 10, 12, 14, 16, 17, 19, 22, 23, 26, 27, 29, 32, 33, 35, 36, 37, 39, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 57, 61, 62, 64, 65, 114, 145, 149, 307, 315, 392, 396, 438, 439, 440, 441, 442, 480, 488, 505, 507, 509, 574, 575, 576, 578, 579, 677, 680, 681, 726, 751, 763, 764, 765, 784, 787, 791, 808, 815, 829, 830, 845, 846, 847, 850, 856, 880, 881, 882, 883, 884, 888, 889, 890, 891, 892, 893, 894, 898, 904, 905, 912, 913, 914, 915, 922, 935, 956, 960, 973, 974, 992, 994, 1003, 1048, 1058, 1059, 1060, 1070, 1075, 1078, 1079, 1080, 1088, 1089, 1090, 1093, 1108, 1110, 1111, 1112, 1114, 1115, 1119, 1123, 1124, 1125, 1141, 1142, 1145, 1146, 1181, 1182, 1184, 1185, 1189, 1193, 1195, 1196, 1199, 1200, 1201, 1203, 1228, 1253, 1254, 1255, 1261, 1270, 1273, 1274, 1275, 1324, 1332, 1333, 1337, 1350, 1352, 1353, 1355, 1356, 1357, 1360, 1361, 1382, 1408, 1416, 1422, 1423, 1424, 1443, 1464, 1468, 1480, 1486, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1507, 1515, 1565, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1624, 1625, 1629, 1630, 1631, 1634, 1636, 1647, 1648, 1651, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1701, 1703, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1724, 1740, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1784, 1785, 1786, 1787, 1788, 1789, 1802, 1816, 1825, 1844, 1849, 1850, 1851, 1852, 1854, 1856, 1857, 1861, 1863, 1864, 1866, 1867, 1869, 1871, 1872, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1888, 1890, 1891, 1892, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1907, 1909, 1911, 1915, 1916, 1918, 1919, 1922], "model": [1, 2, 3, 4, 5, 6, 9, 10, 12, 14, 15, 16, 17, 18, 19, 23, 33, 35, 36, 37, 39, 40, 41, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 65, 77, 78, 82, 783, 784, 785, 788, 789, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 815, 816, 817, 827, 828, 829, 830, 845, 848, 849, 850, 851, 852, 853, 854, 944, 1004, 1024, 1113, 1114, 1115, 1123, 1125, 1159, 1184, 1188, 1189, 1193, 1195, 1199, 1201, 1255, 1324, 1353, 1370, 1381, 1382, 1416, 1422, 1444, 1455, 1459, 1461, 1462, 1463, 1514, 1596, 1597, 1602, 1604, 1606, 1619, 1638, 1639, 1650, 1651, 1653, 1654, 1661, 1666, 1671, 1672, 1677, 1683, 1685, 1798, 1844, 1852, 1854, 1856, 1857, 1858, 1865, 1866, 1872, 1877, 1879, 1880, 1881, 1882, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1901, 1903, 1907, 1908, 1910, 1911, 1912, 1916, 1920, 1921], "": [1, 2, 3, 4, 5, 8, 9, 10, 12, 14, 16, 17, 18, 19, 22, 23, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 57, 59, 61, 62, 64, 65, 456, 474, 485, 488, 505, 535, 549, 572, 615, 671, 680, 685, 686, 687, 726, 751, 784, 785, 786, 806, 807, 808, 811, 814, 817, 845, 852, 853, 866, 868, 869, 870, 871, 887, 888, 889, 893, 894, 896, 900, 928, 930, 943, 949, 950, 951, 956, 958, 960, 964, 979, 983, 992, 994, 999, 1000, 1003, 1004, 1005, 1024, 1025, 1026, 1032, 1049, 1052, 1054, 1055, 1057, 1071, 1072, 1074, 1075, 1076, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1091, 1092, 1094, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1125, 1129, 1137, 1145, 1146, 1147, 1171, 1173, 1181, 1182, 1184, 1188, 1194, 1195, 1199, 1214, 1215, 1225, 1226, 1227, 1229, 1232, 1236, 1238, 1240, 1241, 1245, 1246, 1247, 1248, 1253, 1255, 1256, 1271, 1278, 1283, 1285, 1288, 1290, 1291, 1297, 1298, 1301, 1310, 1311, 1314, 1316, 1322, 1323, 1324, 1332, 1333, 1334, 1335, 1336, 1339, 1353, 1359, 1370, 1416, 1417, 1422, 1426, 1432, 1444, 1447, 1449, 1455, 1459, 1461, 1463, 1469, 1470, 1487, 1488, 1499, 1512, 1515, 1526, 1527, 1532, 1565, 1571, 1584, 1587, 1592, 1593, 1596, 1597, 1608, 1619, 1632, 1636, 1643, 1644, 1652, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1689, 1691, 1695, 1702, 1717, 1720, 1721, 1724, 1725, 1726, 1728, 1730, 1737, 1744, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1793, 1796, 1797, 1798, 1801, 1802, 1803, 1804, 1805, 1813, 1817, 1819, 1825, 1839, 1840, 1841, 1844, 1845, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1861, 1863, 1864, 1866, 1867, 1869, 1870, 1871, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1893, 1894, 1895, 1897, 1898, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922], "e": [1, 2, 3, 4, 6, 8, 17, 23, 24, 26, 27, 32, 33, 35, 36, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 55, 57, 60, 62, 64, 65, 83, 145, 252, 329, 371, 571, 608, 726, 739, 748, 751, 784, 785, 806, 808, 845, 849, 850, 852, 853, 871, 880, 884, 889, 899, 900, 923, 925, 928, 989, 1003, 1028, 1057, 1067, 1108, 1114, 1119, 1123, 1134, 1159, 1163, 1164, 1166, 1169, 1181, 1184, 1190, 1191, 1199, 1219, 1220, 1235, 1247, 1255, 1256, 1257, 1259, 1261, 1278, 1289, 1332, 1333, 1334, 1335, 1336, 1339, 1344, 1345, 1346, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1368, 1371, 1376, 1379, 1380, 1381, 1382, 1383, 1386, 1388, 1389, 1390, 1391, 1407, 1416, 1417, 1422, 1423, 1425, 1426, 1430, 1431, 1447, 1455, 1459, 1463, 1464, 1465, 1467, 1490, 1491, 1492, 1499, 1501, 1502, 1503, 1506, 1507, 1508, 1515, 1526, 1558, 1565, 1584, 1586, 1587, 1592, 1596, 1597, 1598, 1599, 1604, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1629, 1630, 1636, 1640, 1643, 1650, 1651, 1658, 1659, 1694, 1705, 1723, 1730, 1737, 1741, 1748, 1753, 1798, 1802, 1851, 1854, 1856, 1857, 1858, 1861, 1864, 1865, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1886, 1887, 1888, 1891, 1893, 1895, 1898, 1899, 1901, 1902, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1916, 1918, 1922, 1923], "network": [1, 2, 8, 9, 27, 39, 41, 52, 832, 1003, 1184, 1199, 1200, 1328, 1334, 1335, 1336, 1339, 1347, 1348, 1349, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1370, 1382, 1386, 1416, 1423, 1428, 1429, 1434, 1443, 1445, 1455, 1459, 1461, 1463, 1480, 1514, 1515, 1568, 1587, 1604, 1606, 1632, 1637, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1677, 1683, 1854, 1856, 1857, 1875, 1876, 1891, 1892, 1895, 1898, 1902, 1907, 1908, 1909], "loss": [1, 2, 33, 35, 36, 39, 41, 57, 1115, 1181, 1219, 1220, 1229, 1247, 1324, 1332, 1333, 1339, 1350, 1352, 1359, 1370, 1376, 1377, 1382, 1383, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1465, 1487, 1488, 1498, 1499, 1512, 1527, 1550, 1558, 1596, 1630, 1661, 1666, 1672, 1676, 1685, 1745, 1851, 1852, 1867, 1871, 1877, 1880, 1881, 1884, 1885, 1888, 1898, 1902, 1903, 1907, 1908, 1916], "comput": [1, 4, 6, 8, 9, 14, 16, 22, 24, 26, 28, 32, 33, 35, 37, 41, 43, 45, 57, 58, 59, 61, 145, 284, 480, 487, 672, 674, 688, 689, 751, 759, 760, 791, 793, 810, 811, 812, 813, 815, 816, 880, 884, 885, 886, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 900, 904, 905, 911, 916, 917, 918, 919, 920, 921, 932, 934, 935, 936, 943, 950, 952, 957, 1000, 1003, 1040, 1049, 1051, 1054, 1057, 1061, 1062, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1100, 1102, 1103, 1104, 1106, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1127, 1128, 1129, 1137, 1140, 1143, 1144, 1145, 1146, 1159, 1161, 1184, 1187, 1195, 1203, 1204, 1206, 1208, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1256, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1282, 1283, 1284, 1287, 1311, 1313, 1317, 1324, 1328, 1329, 1330, 1331, 1334, 1335, 1336, 1347, 1348, 1349, 1351, 1352, 1354, 1359, 1360, 1368, 1371, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1422, 1423, 1425, 1430, 1431, 1449, 1451, 1455, 1464, 1465, 1468, 1482, 1483, 1484, 1497, 1498, 1506, 1507, 1514, 1515, 1517, 1526, 1534, 1539, 1540, 1541, 1542, 1543, 1544, 1555, 1558, 1565, 1571, 1572, 1587, 1590, 1592, 1593, 1596, 1597, 1600, 1603, 1606, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1622, 1623, 1630, 1636, 1640, 1641, 1643, 1656, 1658, 1659, 1660, 1662, 1668, 1669, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1689, 1695, 1701, 1702, 1706, 1707, 1721, 1722, 1745, 1747, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1776, 1778, 1779, 1780, 1781, 1798, 1802, 1803, 1818, 1823, 1841, 1844, 1852, 1854, 1857, 1864, 1867, 1870, 1871, 1873, 1876, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1895, 1898, 1902, 1905, 1907, 1911, 1912, 1917, 1920], "backward": [1, 2, 6, 10, 12, 14, 19, 22, 23, 35, 36, 37, 39, 41, 57, 61, 62, 65, 284, 329, 480, 488, 495, 496, 505, 507, 509, 572, 671, 677, 680, 751, 806, 807, 808, 881, 886, 887, 888, 889, 890, 891, 893, 895, 898, 899, 904, 905, 911, 912, 924, 1003, 1061, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1113, 1114, 1184, 1256, 1264, 1278, 1288, 1332, 1333, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1353, 1359, 1368, 1369, 1370, 1383, 1386, 1387, 1403, 1407, 1408, 1416, 1422, 1423, 1430, 1431, 1460, 1461, 1462, 1463, 1464, 1465, 1487, 1488, 1498, 1499, 1515, 1526, 1550, 1553, 1588, 1592, 1593, 1596, 1608, 1641, 1650, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1689, 1701, 1776, 1779, 1783, 1802, 1837, 1851, 1852, 1855, 1857, 1863, 1871, 1872, 1875, 1876, 1881, 1882, 1883, 1884, 1887, 1888, 1890, 1891, 1898, 1899, 1901, 1902, 1907, 1911, 1912, 1917], "under": [1, 2, 4, 5, 6, 10, 14, 17, 23, 32, 35, 52, 57, 58, 60, 62, 64, 79, 899, 907, 929, 1159, 1184, 1339, 1416, 1480, 1506, 1507, 1603, 1605, 1608, 1653, 1722, 1853, 1869, 1876, 1877, 1880, 1881, 1883, 1885, 1890, 1895, 1899, 1900, 1902, 1905, 1906, 1909, 1912, 1916, 1919, 1921], "recommend": [1, 2, 6, 14, 32, 33, 35, 37, 41, 43, 52, 53, 57, 61, 64, 65, 83, 441, 884, 949, 950, 957, 1078, 1079, 1080, 1088, 1089, 1090, 1171, 1187, 1229, 1256, 1301, 1324, 1353, 1527, 1596, 1708, 1834, 1851, 1854, 1866, 1869, 1871, 1875, 1876, 1877, 1879, 1880, 1882, 1883, 1888, 1890, 1891, 1893, 1895, 1899, 1902], "correspond": [1, 2, 8, 20, 23, 29, 32, 33, 35, 39, 40, 41, 52, 57, 65, 77, 466, 467, 505, 507, 509, 535, 536, 671, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 726, 784, 788, 827, 829, 848, 849, 850, 855, 871, 880, 882, 883, 884, 889, 892, 894, 899, 936, 951, 1003, 1023, 1052, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1137, 1146, 1173, 1184, 1200, 1214, 1219, 1220, 1225, 1228, 1247, 1254, 1256, 1270, 1285, 1306, 1353, 1359, 1386, 1416, 1422, 1462, 1506, 1515, 1552, 1592, 1596, 1604, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1637, 1643, 1672, 1677, 1694, 1695, 1705, 1728, 1737, 1753, 1796, 1797, 1802, 1833, 1836, 1839, 1840, 1851, 1854, 1855, 1857, 1861, 1867, 1870, 1871, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1892, 1895, 1899, 1901, 1902, 1907, 1908, 1911, 1912, 1913, 1916, 1918, 1920, 1921], "devic": [1, 2, 3, 6, 9, 13, 16, 20, 23, 26, 29, 32, 33, 35, 36, 37, 40, 53, 54, 57, 61, 64, 65, 83, 191, 201, 204, 283, 307, 315, 329, 438, 439, 440, 441, 442, 507, 509, 571, 677, 680, 714, 715, 716, 717, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 740, 741, 742, 743, 744, 745, 746, 856, 868, 870, 871, 892, 894, 912, 913, 915, 922, 924, 959, 960, 961, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 974, 976, 977, 978, 981, 985, 986, 987, 989, 990, 998, 1000, 1001, 1002, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1029, 1033, 1034, 1035, 1058, 1059, 1060, 1070, 1075, 1093, 1111, 1112, 1141, 1142, 1184, 1188, 1191, 1194, 1197, 1203, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1238, 1241, 1242, 1244, 1245, 1247, 1248, 1254, 1255, 1270, 1273, 1278, 1284, 1288, 1301, 1303, 1324, 1334, 1335, 1336, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1359, 1360, 1369, 1371, 1379, 1380, 1381, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1416, 1422, 1424, 1432, 1433, 1455, 1459, 1461, 1463, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1507, 1526, 1532, 1565, 1580, 1584, 1585, 1586, 1587, 1596, 1598, 1599, 1600, 1601, 1629, 1636, 1642, 1644, 1647, 1648, 1661, 1701, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1741, 1745, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1779, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1802, 1816, 1818, 1827, 1829, 1837, 1849, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1865, 1870, 1872, 1876, 1881, 1883, 1884, 1886, 1888, 1889, 1892, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1906, 1907, 1911, 1913, 1917, 1918], "creat": [1, 2, 4, 6, 7, 8, 10, 12, 14, 17, 21, 22, 23, 26, 32, 33, 35, 37, 39, 41, 43, 44, 50, 52, 53, 54, 55, 57, 64, 65, 83, 145, 217, 248, 329, 571, 572, 574, 575, 576, 578, 579, 723, 729, 730, 731, 736, 737, 747, 755, 783, 784, 785, 805, 806, 807, 808, 810, 815, 845, 869, 870, 871, 884, 886, 898, 923, 925, 941, 942, 951, 959, 968, 1000, 1001, 1010, 1045, 1060, 1109, 1110, 1111, 1181, 1184, 1187, 1196, 1202, 1207, 1213, 1214, 1220, 1222, 1241, 1254, 1270, 1285, 1306, 1332, 1350, 1359, 1360, 1363, 1377, 1383, 1407, 1408, 1416, 1419, 1420, 1421, 1444, 1447, 1448, 1455, 1464, 1465, 1467, 1596, 1608, 1629, 1636, 1641, 1652, 1653, 1672, 1740, 1771, 1782, 1787, 1816, 1823, 1852, 1857, 1858, 1861, 1865, 1869, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1888, 1889, 1890, 1893, 1895, 1898, 1899, 1901, 1902, 1907, 1908, 1909, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923], "net": [1, 7, 27, 43, 60, 65, 1184, 1199, 1200, 1353, 1416, 1596, 1619, 1676, 1856, 1857, 1876, 1877, 1880, 1888, 1916], "sgd": [1, 32, 33, 39, 1359, 1587, 1596, 1677, 1683, 1685, 1876, 1880, 1881, 1888, 1898, 1907, 1908], "target": [1, 12, 13, 17, 22, 23, 26, 39, 57, 61, 63, 64, 65, 491, 726, 757, 758, 783, 788, 850, 852, 853, 929, 1115, 1184, 1193, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1332, 1333, 1339, 1350, 1352, 1364, 1365, 1370, 1376, 1377, 1382, 1383, 1407, 1408, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1430, 1447, 1448, 1459, 1468, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1487, 1488, 1496, 1498, 1499, 1510, 1511, 1512, 1523, 1524, 1527, 1528, 1538, 1546, 1547, 1548, 1549, 1550, 1558, 1565, 1569, 1570, 1596, 1671, 1837, 1855, 1857, 1876, 1877, 1880, 1890, 1895, 1898, 1899, 1902, 1903, 1907, 1916, 1920], "data": [1, 2, 3, 4, 8, 14, 16, 17, 24, 29, 30, 33, 35, 37, 39, 41, 42, 43, 46, 49, 52, 54, 57, 61, 65, 134, 145, 190, 191, 320, 323, 327, 330, 335, 438, 441, 474, 485, 489, 491, 608, 729, 730, 731, 751, 763, 764, 765, 772, 783, 784, 785, 789, 810, 811, 812, 813, 814, 816, 818, 856, 870, 871, 881, 884, 913, 922, 928, 961, 1038, 1039, 1058, 1059, 1060, 1070, 1071, 1072, 1075, 1077, 1078, 1080, 1088, 1089, 1090, 1093, 1096, 1097, 1098, 1099, 1108, 1110, 1111, 1112, 1114, 1123, 1141, 1142, 1144, 1163, 1166, 1191, 1195, 1199, 1203, 1254, 1255, 1256, 1270, 1275, 1283, 1285, 1297, 1298, 1311, 1313, 1314, 1337, 1339, 1344, 1345, 1346, 1353, 1368, 1371, 1379, 1380, 1381, 1386, 1388, 1403, 1423, 1431, 1432, 1468, 1480, 1485, 1486, 1490, 1491, 1492, 1525, 1532, 1534, 1571, 1572, 1596, 1597, 1598, 1599, 1629, 1630, 1631, 1632, 1634, 1643, 1647, 1648, 1652, 1653, 1677, 1683, 1691, 1699, 1702, 1703, 1704, 1708, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1724, 1737, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1778, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1801, 1802, 1816, 1825, 1827, 1829, 1836, 1837, 1849, 1850, 1852, 1854, 1855, 1858, 1864, 1865, 1867, 1869, 1872, 1876, 1877, 1878, 1880, 1882, 1883, 1887, 1890, 1892, 1893, 1894, 1897, 1898, 1899, 1900, 1902, 1905, 1907, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "zero_grad": [1, 2, 39, 1184, 1416, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1676, 1876, 1880, 1884, 1888, 1890, 1898], "loss_fn": [1, 39, 1671, 1876, 1880, 1881, 1890, 1898], "exit": [1, 2, 3, 5, 17, 29, 35, 43, 52, 57, 64, 65, 885, 1596, 1857, 1869, 1877, 1890, 1895, 1909], "step": [1, 2, 3, 5, 10, 14, 17, 23, 26, 32, 33, 35, 36, 37, 39, 41, 53, 57, 61, 65, 529, 598, 677, 759, 760, 848, 856, 885, 886, 887, 915, 939, 1143, 1231, 1254, 1256, 1270, 1273, 1285, 1364, 1365, 1386, 1483, 1484, 1510, 1511, 1596, 1629, 1650, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1708, 1717, 1771, 1853, 1854, 1855, 1871, 1876, 1877, 1880, 1881, 1882, 1884, 1888, 1890, 1892, 1894, 1895, 1899, 1901, 1902, 1907, 1908, 1911, 1916], "along": [1, 26, 29, 32, 35, 41, 45, 52, 307, 309, 311, 315, 485, 505, 507, 509, 677, 688, 810, 866, 867, 938, 955, 957, 972, 974, 1040, 1048, 1049, 1056, 1057, 1073, 1078, 1081, 1085, 1088, 1091, 1097, 1125, 1126, 1149, 1158, 1161, 1205, 1216, 1252, 1304, 1311, 1315, 1316, 1325, 1326, 1327, 1351, 1364, 1365, 1406, 1409, 1410, 1411, 1449, 1451, 1480, 1497, 1510, 1511, 1514, 1517, 1534, 1539, 1540, 1541, 1551, 1571, 1572, 1614, 1616, 1623, 1624, 1633, 1642, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1683, 1702, 1722, 1723, 1728, 1739, 1775, 1778, 1781, 1782, 1790, 1795, 1813, 1817, 1820, 1823, 1832, 1841, 1844, 1846, 1851, 1856, 1861, 1872, 1878, 1882, 1884, 1887, 1888, 1899, 1902, 1912], "complex": [1, 2, 4, 8, 9, 16, 33, 35, 65, 305, 323, 476, 676, 683, 899, 900, 937, 949, 950, 1052, 1078, 1100, 1105, 1137, 1154, 1163, 1174, 1176, 1177, 1180, 1181, 1184, 1204, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1233, 1236, 1238, 1240, 1241, 1242, 1243, 1247, 1248, 1252, 1253, 1254, 1256, 1264, 1270, 1282, 1287, 1305, 1344, 1345, 1346, 1383, 1416, 1490, 1491, 1492, 1603, 1643, 1695, 1708, 1721, 1742, 1753, 1798, 1799, 1802, 1837, 1841, 1842, 1843, 1851, 1852, 1855, 1857, 1858, 1866, 1890, 1897, 1913, 1914, 1917, 1918, 1919], "scenario": [1, 14, 32, 35, 52, 1651, 1652, 1880, 1885, 1895, 1901, 1907], "g": [1, 2, 3, 4, 6, 8, 12, 23, 24, 26, 27, 32, 33, 35, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 55, 57, 60, 62, 64, 65, 571, 608, 739, 748, 751, 784, 785, 806, 808, 845, 850, 852, 853, 880, 889, 899, 900, 925, 1003, 1057, 1108, 1114, 1118, 1119, 1134, 1137, 1159, 1181, 1184, 1190, 1191, 1199, 1255, 1339, 1340, 1353, 1355, 1356, 1357, 1361, 1363, 1368, 1376, 1382, 1386, 1387, 1416, 1417, 1426, 1431, 1447, 1499, 1501, 1502, 1503, 1508, 1515, 1596, 1597, 1598, 1599, 1640, 1643, 1650, 1651, 1656, 1657, 1658, 1659, 1662, 1668, 1669, 1670, 1671, 1723, 1730, 1741, 1748, 1766, 1798, 1851, 1854, 1856, 1857, 1858, 1861, 1864, 1869, 1876, 1877, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1891, 1892, 1895, 1898, 1899, 1901, 1902, 1907, 1911, 1914, 1915, 1916, 1922], "penalti": [1, 19, 772, 1014, 1655, 1656, 1657, 1658, 1660, 1662, 1668, 1669, 1671, 1903], "multipl": [1, 2, 3, 4, 6, 14, 15, 22, 32, 33, 35, 36, 37, 41, 42, 45, 52, 53, 54, 57, 62, 64, 65, 186, 203, 309, 505, 677, 679, 680, 686, 687, 751, 832, 865, 866, 869, 898, 932, 934, 944, 952, 956, 972, 973, 974, 1000, 1055, 1057, 1060, 1110, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1133, 1147, 1148, 1197, 1200, 1205, 1206, 1221, 1222, 1223, 1239, 1244, 1249, 1250, 1278, 1281, 1286, 1288, 1332, 1333, 1347, 1348, 1349, 1350, 1352, 1360, 1363, 1368, 1376, 1382, 1383, 1404, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1467, 1487, 1488, 1498, 1507, 1527, 1550, 1558, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1670, 1678, 1679, 1680, 1681, 1682, 1687, 1689, 1745, 1773, 1779, 1780, 1784, 1785, 1786, 1788, 1789, 1817, 1818, 1825, 1833, 1837, 1844, 1845, 1851, 1852, 1856, 1857, 1869, 1870, 1871, 1872, 1877, 1879, 1881, 1883, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1901, 1902, 1903, 1907, 1908, 1909, 1911, 1921], "autocastmodel": 1, "produc": [1, 8, 12, 14, 16, 17, 19, 23, 26, 32, 35, 37, 42, 44, 46, 49, 54, 62, 63, 64, 65, 83, 723, 729, 730, 731, 736, 737, 747, 755, 783, 784, 915, 935, 996, 1088, 1089, 1090, 1108, 1118, 1119, 1125, 1137, 1195, 1199, 1200, 1203, 1219, 1220, 1223, 1230, 1231, 1242, 1247, 1281, 1284, 1285, 1286, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1392, 1393, 1394, 1395, 1396, 1397, 1422, 1499, 1507, 1515, 1526, 1584, 1585, 1586, 1643, 1672, 1701, 1708, 1717, 1802, 1837, 1844, 1854, 1856, 1857, 1869, 1870, 1876, 1877, 1878, 1880, 1882, 1886, 1887, 1888, 1891, 1892, 1893, 1894, 1895, 1911, 1915], "after": [1, 2, 8, 10, 13, 14, 15, 17, 19, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 52, 54, 57, 64, 65, 254, 751, 781, 848, 850, 852, 853, 884, 885, 888, 944, 958, 960, 996, 1003, 1056, 1114, 1169, 1184, 1188, 1239, 1278, 1320, 1353, 1368, 1401, 1416, 1419, 1459, 1461, 1463, 1480, 1515, 1587, 1590, 1596, 1608, 1610, 1614, 1616, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1676, 1677, 1683, 1685, 1741, 1798, 1823, 1846, 1851, 1856, 1857, 1867, 1869, 1875, 1876, 1877, 1880, 1881, 1882, 1884, 1885, 1887, 1888, 1890, 1891, 1895, 1898, 1899, 1901, 1902, 1907, 1908, 1909, 1910, 1912, 1914, 1916], "them": [1, 2, 4, 6, 8, 9, 10, 14, 16, 17, 19, 20, 22, 23, 24, 26, 27, 32, 35, 37, 43, 44, 49, 52, 54, 57, 61, 62, 64, 65, 145, 216, 248, 725, 884, 890, 894, 926, 1003, 1042, 1045, 1057, 1205, 1214, 1225, 1239, 1251, 1255, 1283, 1314, 1340, 1359, 1416, 1449, 1451, 1571, 1615, 1630, 1633, 1673, 1781, 1783, 1801, 1851, 1856, 1857, 1864, 1865, 1867, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1880, 1882, 1883, 1884, 1886, 1887, 1888, 1892, 1894, 1898, 1900, 1901, 1902, 1903, 1907, 1908, 1909, 1911, 1912, 1916, 1917, 1920], "differ": [1, 2, 4, 6, 9, 14, 16, 17, 19, 20, 21, 23, 26, 29, 32, 35, 37, 39, 40, 41, 43, 44, 45, 49, 50, 52, 53, 55, 57, 58, 61, 62, 63, 65, 191, 479, 485, 608, 671, 677, 680, 686, 687, 726, 751, 784, 787, 788, 813, 815, 816, 852, 853, 856, 870, 871, 899, 900, 912, 924, 925, 956, 1040, 1045, 1047, 1049, 1057, 1097, 1098, 1099, 1103, 1104, 1110, 1113, 1118, 1119, 1125, 1137, 1158, 1184, 1194, 1199, 1213, 1219, 1220, 1230, 1231, 1239, 1242, 1247, 1251, 1278, 1288, 1324, 1334, 1335, 1336, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1368, 1369, 1377, 1379, 1380, 1381, 1382, 1386, 1387, 1403, 1416, 1419, 1422, 1437, 1438, 1440, 1441, 1442, 1444, 1447, 1455, 1461, 1463, 1465, 1468, 1471, 1472, 1473, 1480, 1506, 1515, 1526, 1528, 1539, 1540, 1541, 1565, 1587, 1596, 1598, 1599, 1603, 1638, 1643, 1650, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1685, 1691, 1701, 1723, 1796, 1797, 1802, 1823, 1834, 1835, 1837, 1839, 1840, 1844, 1851, 1854, 1856, 1857, 1859, 1863, 1864, 1869, 1870, 1872, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1888, 1890, 1891, 1892, 1894, 1898, 1899, 1900, 1901, 1902, 1903, 1907, 1909, 1911, 1914, 1916, 1917, 1918, 1921], "caus": [1, 2, 3, 4, 6, 26, 29, 32, 35, 39, 45, 51, 52, 53, 62, 65, 547, 608, 868, 871, 884, 1110, 1195, 1199, 1219, 1220, 1247, 1301, 1526, 1527, 1584, 1587, 1596, 1642, 1654, 1741, 1752, 1798, 1837, 1854, 1857, 1869, 1878, 1880, 1882, 1884, 1890, 1892, 1894, 1895, 1899, 1902, 1903, 1909, 1911, 1914], "mismatch": [1, 35, 65, 871, 1185, 1653, 1654, 1856, 1876, 1881, 1882, 1884, 1895, 1918], "so": [1, 2, 3, 4, 8, 10, 14, 16, 17, 18, 19, 22, 23, 26, 28, 32, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 52, 53, 55, 57, 60, 61, 62, 64, 65, 329, 451, 488, 671, 850, 885, 890, 892, 893, 898, 941, 959, 982, 1045, 1047, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1108, 1110, 1113, 1117, 1118, 1120, 1121, 1171, 1181, 1184, 1187, 1188, 1193, 1195, 1197, 1239, 1241, 1251, 1256, 1261, 1273, 1294, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1360, 1363, 1370, 1416, 1432, 1449, 1451, 1467, 1480, 1490, 1491, 1492, 1515, 1571, 1572, 1587, 1596, 1642, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1672, 1767, 1781, 1793, 1798, 1802, 1822, 1834, 1838, 1854, 1856, 1857, 1863, 1865, 1867, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1902, 1906, 1907, 1911, 1912, 1914, 1916, 1917, 1919], "cast": [1, 7, 33, 50, 57, 329, 594, 595, 929, 1038, 1039, 1184, 1236, 1240, 1253, 1283, 1311, 1314, 1416, 1534, 1571, 1572, 1643, 1699, 1778, 1781, 1787, 1801, 1806, 1807, 1854, 1876, 1891, 1895, 1912, 1913, 1914], "back": [1, 2, 3, 16, 17, 26, 32, 33, 35, 37, 41, 52, 57, 62, 65, 726, 828, 899, 941, 1077, 1114, 1185, 1197, 1249, 1255, 1462, 1600, 1601, 1783, 1851, 1854, 1857, 1877, 1882, 1883, 1890, 1891, 1892, 1895, 1898, 1899, 1902, 1907, 1911, 1922], "alreadi": [1, 2, 24, 32, 33, 35, 36, 52, 53, 57, 64, 65, 190, 201, 204, 456, 479, 515, 571, 594, 595, 783, 831, 845, 849, 870, 968, 994, 1184, 1193, 1255, 1416, 1591, 1596, 1629, 1672, 1832, 1834, 1851, 1854, 1864, 1866, 1870, 1871, 1876, 1877, 1880, 1882, 1885, 1890, 1895, 1898, 1899, 1902, 1908, 1909, 1913, 1915], "incur": [1, 6, 33, 35, 57, 934, 1890, 1907], "overhead": [1, 2, 4, 5, 9, 14, 15, 16, 17, 33, 35, 57, 772, 944, 1014, 1195, 1596, 1879, 1880, 1881, 1886, 1887, 1900, 1901, 1908, 1911, 1917], "here": [1, 2, 8, 9, 10, 14, 16, 17, 18, 20, 23, 27, 29, 32, 33, 35, 36, 41, 51, 53, 59, 60, 61, 62, 64, 65, 571, 784, 785, 954, 966, 1057, 1074, 1076, 1077, 1082, 1083, 1084, 1086, 1087, 1092, 1094, 1113, 1123, 1182, 1195, 1334, 1335, 1336, 1347, 1348, 1349, 1379, 1380, 1381, 1424, 1455, 1515, 1517, 1605, 1669, 1672, 1683, 1770, 1851, 1854, 1856, 1857, 1859, 1870, 1871, 1872, 1876, 1877, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1894, 1895, 1898, 1899, 1900, 1902, 1905, 1911, 1915, 1916, 1918], "assum": [1, 13, 19, 24, 32, 35, 40, 41, 43, 45, 52, 53, 57, 60, 63, 65, 808, 1040, 1075, 1078, 1080, 1088, 1089, 1090, 1093, 1175, 1181, 1182, 1185, 1199, 1219, 1220, 1222, 1229, 1238, 1241, 1244, 1246, 1256, 1339, 1408, 1468, 1499, 1565, 1596, 1605, 1608, 1633, 1673, 1674, 1679, 1680, 1681, 1684, 1686, 1687, 1691, 1803, 1823, 1825, 1851, 1854, 1856, 1857, 1870, 1877, 1880, 1882, 1883, 1885, 1887, 1891, 1895, 1898, 1899, 1900, 1907, 1908, 1909, 1911], "a_float32": 1, "rand": [1, 2, 29, 41, 65, 329, 684, 690, 892, 893, 894, 895, 896, 897, 956, 1000, 1001, 1074, 1076, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1092, 1094, 1115, 1190, 1195, 1199, 1200, 1201, 1257, 1258, 1260, 1332, 1382, 1459, 1460, 1461, 1462, 1463, 1487, 1506, 1507, 1565, 1596, 1608, 1641, 1694, 1705, 1706, 1707, 1711, 1853, 1854, 1855, 1856, 1857, 1859, 1870, 1871, 1895, 1897, 1900, 1902, 1907, 1908, 1912, 1915, 1916, 1919], "8": [1, 2, 13, 17, 23, 26, 31, 32, 33, 35, 41, 43, 307, 309, 311, 315, 395, 396, 464, 505, 509, 551, 598, 608, 676, 677, 688, 689, 736, 737, 752, 754, 756, 764, 765, 811, 812, 813, 816, 895, 915, 923, 934, 937, 938, 942, 1000, 1001, 1036, 1040, 1055, 1060, 1073, 1089, 1090, 1096, 1097, 1100, 1107, 1137, 1146, 1147, 1207, 1236, 1239, 1240, 1241, 1249, 1251, 1254, 1255, 1315, 1316, 1321, 1322, 1323, 1325, 1326, 1327, 1340, 1351, 1386, 1412, 1413, 1419, 1421, 1423, 1430, 1431, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1455, 1459, 1460, 1461, 1462, 1463, 1467, 1491, 1494, 1497, 1553, 1558, 1563, 1564, 1565, 1643, 1644, 1650, 1658, 1659, 1660, 1662, 1668, 1669, 1672, 1677, 1685, 1690, 1694, 1698, 1718, 1728, 1729, 1730, 1737, 1750, 1757, 1760, 1765, 1771, 1775, 1782, 1784, 1785, 1790, 1798, 1802, 1812, 1817, 1818, 1819, 1821, 1823, 1832, 1837, 1838, 1845, 1854, 1858, 1864, 1880, 1882, 1893, 1895, 1897, 1899, 1900, 1901, 1902, 1905, 1907, 1911, 1912, 1914, 1915, 1917], "b_float32": 1, "c_float32": 1, "d_float32": 1, "mm": [1, 936, 937, 1188, 1239, 1278, 1426, 1427, 1701, 1802, 1837, 1853, 1855, 1856, 1870, 1876, 1879, 1882, 1891, 1897, 1911], "No": [1, 10, 55, 64, 891, 1596, 1641, 1856, 1880, 1895, 1905, 1915, 1918], "manual": [1, 20, 32, 35, 50, 52, 53, 55, 57, 65, 788, 829, 869, 898, 1146, 1188, 1332, 1333, 1352, 1420, 1421, 1423, 1444, 1463, 1487, 1488, 1498, 1550, 1608, 1629, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1854, 1857, 1869, 1876, 1880, 1882, 1883, 1884, 1885, 1888, 1894, 1895, 1902, 1903, 1916], "e_float16": 1, "handl": [1, 2, 6, 10, 14, 16, 17, 19, 24, 26, 32, 33, 35, 36, 37, 39, 43, 44, 45, 52, 53, 57, 64, 65, 480, 831, 881, 891, 904, 905, 951, 960, 975, 1002, 1015, 1057, 1103, 1104, 1125, 1184, 1214, 1353, 1416, 1465, 1515, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1721, 1767, 1803, 1844, 1851, 1867, 1869, 1871, 1880, 1882, 1883, 1884, 1885, 1890, 1895, 1899, 1902, 1907, 1909, 1918, 1919], "f_float16": 1, "g_float32": 1, "epoch": [1, 32, 45, 55, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1867, 1876, 1898, 1916], "eval": [1, 65, 805, 851, 852, 1123, 1184, 1188, 1193, 1199, 1334, 1335, 1336, 1379, 1380, 1381, 1389, 1390, 1391, 1398, 1399, 1400, 1416, 1422, 1455, 1463, 1604, 1857, 1865, 1888, 1895, 1902, 1921, 1922], "testmodel": 1, "__init__": [1, 2, 12, 22, 23, 32, 33, 35, 41, 57, 65, 852, 853, 1123, 1182, 1185, 1187, 1190, 1195, 1199, 1200, 1201, 1416, 1417, 1418, 1426, 1427, 1587, 1854, 1856, 1857, 1867, 1877, 1882, 1884, 1888, 1893, 1895, 1899, 1902, 1916], "input_s": [1, 725, 751, 752, 756, 1368, 1369, 1386, 1387, 1431, 1432, 1433, 1855], "num_class": [1, 16, 1552, 1855], "super": [1, 10, 12, 22, 23, 32, 33, 35, 37, 65, 852, 853, 1123, 1182, 1187, 1190, 1195, 1199, 1200, 1201, 1416, 1417, 1418, 1426, 1427, 1428, 1429, 1587, 1683, 1854, 1856, 1857, 1858, 1877, 1882, 1888, 1893, 1895, 1899, 1902], "fc1": [1, 33, 1587, 1900], "suggest": [1, 10, 23, 33, 58, 77, 78, 1350, 1851, 1859, 1876, 1877, 1884, 1911], "issu": [1, 3, 4, 6, 10, 11, 14, 15, 18, 24, 26, 31, 32, 35, 42, 57, 58, 60, 62, 65, 892, 898, 944, 1108, 1119, 1121, 1125, 1229, 1273, 1285, 1382, 1386, 1412, 1413, 1414, 1431, 1468, 1526, 1527, 1741, 1844, 1851, 1852, 1857, 1859, 1864, 1869, 1870, 1871, 1872, 1876, 1877, 1880, 1882, 1890, 1891, 1892, 1894, 1895, 1899, 1902, 1903, 1907, 1911, 1912, 1914], "http": [1, 3, 4, 5, 8, 10, 15, 16, 22, 26, 27, 33, 34, 35, 40, 41, 52, 53, 57, 145, 671, 721, 722, 723, 724, 736, 737, 747, 752, 753, 754, 755, 756, 783, 784, 884, 944, 1057, 1114, 1256, 1285, 1339, 1386, 1412, 1413, 1414, 1434, 1435, 1459, 1462, 1465, 1640, 1691, 1708, 1741, 1766, 1837, 1851, 1858, 1866, 1877, 1878, 1885, 1886, 1888, 1892, 1894, 1895, 1899, 1901, 1914, 1916, 1923], "github": [1, 8, 10, 14, 22, 23, 26, 34, 35, 48, 57, 58, 62, 145, 783, 784, 884, 898, 1114, 1285, 1412, 1413, 1414, 1459, 1677, 1741, 1851, 1859, 1864, 1882, 1885, 1892, 1895, 1901, 1902, 1911, 1912, 1914], "com": [1, 8, 22, 26, 34, 35, 51, 53, 57, 145, 783, 784, 884, 1114, 1285, 1412, 1413, 1414, 1459, 1741, 1837, 1851, 1866, 1885, 1886, 1892, 1894, 1895, 1901, 1914], "75956": 1, "_c": [1, 32, 33, 35, 64, 892, 898, 1183, 1195, 1652, 1855, 1857, 1867, 1880, 1887, 1891, 1894, 1895], "_jit_set_autocast_mod": 1, "randn": [1, 2, 12, 14, 16, 17, 18, 23, 24, 35, 41, 59, 61, 62, 63, 65, 283, 305, 476, 535, 571, 575, 576, 577, 578, 579, 580, 608, 674, 675, 676, 677, 678, 679, 680, 681, 686, 687, 690, 711, 719, 720, 725, 729, 730, 731, 732, 733, 734, 747, 749, 751, 752, 753, 754, 755, 756, 763, 764, 765, 852, 853, 865, 866, 867, 869, 872, 873, 874, 875, 876, 912, 924, 931, 933, 934, 935, 936, 937, 939, 951, 952, 953, 954, 955, 957, 1036, 1037, 1038, 1039, 1044, 1045, 1046, 1047, 1051, 1057, 1071, 1072, 1101, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1123, 1124, 1125, 1154, 1158, 1161, 1195, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1237, 1238, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1259, 1263, 1264, 1271, 1273, 1274, 1275, 1277, 1278, 1281, 1283, 1284, 1286, 1288, 1289, 1290, 1291, 1304, 1305, 1308, 1318, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1414, 1415, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1442, 1443, 1445, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1464, 1466, 1467, 1471, 1472, 1473, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1510, 1511, 1517, 1550, 1556, 1557, 1646, 1650, 1692, 1697, 1698, 1699, 1701, 1702, 1715, 1719, 1720, 1732, 1768, 1770, 1775, 1780, 1783, 1791, 1792, 1801, 1802, 1811, 1814, 1815, 1818, 1822, 1825, 1826, 1828, 1831, 1833, 1837, 1842, 1843, 1844, 1847, 1853, 1855, 1856, 1857, 1859, 1870, 1871, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1888, 1892, 1893, 1895, 1897, 1899, 1902, 1907, 1911, 1912, 1914, 1916, 1919, 1921], "freez": [1, 1184, 1193, 1359, 1360, 1416, 1877], "_": [1, 2, 4, 12, 17, 23, 32, 33, 35, 36, 39, 45, 63, 65, 672, 674, 675, 689, 856, 872, 873, 874, 875, 876, 885, 891, 914, 933, 950, 951, 953, 954, 956, 1101, 1106, 1120, 1124, 1150, 1204, 1212, 1263, 1271, 1334, 1335, 1336, 1379, 1380, 1381, 1455, 1596, 1604, 1637, 1669, 1671, 1691, 1714, 1717, 1720, 1732, 1747, 1753, 1755, 1761, 1768, 1770, 1791, 1802, 1814, 1815, 1877, 1880, 1883, 1884, 1888, 1894, 1898, 1899, 1901, 1912], "bug": [1, 14, 23, 26, 29, 35, 65, 1117, 1118, 1120, 1273, 1876, 1890, 1911], "what": [1, 2, 4, 6, 8, 9, 10, 12, 14, 17, 18, 23, 35, 40, 41, 45, 49, 50, 57, 59, 61, 62, 65, 883, 1118, 1199, 1200, 1273, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1410, 1411, 1444, 1467, 1539, 1540, 1541, 1565, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1702, 1851, 1852, 1854, 1856, 1857, 1870, 1882, 1883, 1885, 1888, 1895, 1898, 1901, 1902, 1907, 1908, 1911], "observ": [1, 14, 23, 33, 43, 52, 747, 780, 781, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 799, 800, 802, 804, 806, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 832, 850, 852, 853, 855, 952, 956, 1197, 1285, 1332, 1333, 1334, 1335, 1336, 1350, 1352, 1376, 1379, 1380, 1381, 1382, 1383, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1455, 1464, 1487, 1488, 1498, 1527, 1550, 1558, 1876, 1877, 1880, 1881, 1887, 1903, 1921], "pleas": [1, 2, 5, 6, 7, 8, 9, 10, 12, 18, 20, 23, 24, 27, 33, 35, 41, 44, 47, 48, 52, 53, 57, 58, 59, 60, 61, 62, 63, 65, 248, 249, 490, 505, 609, 680, 721, 722, 723, 724, 725, 726, 732, 733, 734, 736, 737, 747, 752, 753, 754, 755, 756, 852, 853, 883, 885, 886, 887, 892, 894, 895, 898, 926, 1040, 1113, 1117, 1118, 1119, 1120, 1121, 1125, 1184, 1247, 1278, 1288, 1339, 1347, 1382, 1416, 1515, 1527, 1532, 1553, 1565, 1583, 1596, 1637, 1638, 1679, 1741, 1844, 1859, 1864, 1870, 1871, 1872, 1873, 1876, 1877, 1882, 1883, 1886, 1891, 1892, 1894, 1895, 1898, 1899, 1902, 1905, 1907, 1908, 1911, 1912, 1914, 1915, 1916, 1918], "file": [1, 2, 4, 7, 8, 10, 12, 14, 20, 24, 26, 29, 32, 37, 43, 45, 50, 52, 54, 60, 62, 65, 892, 898, 906, 907, 959, 996, 1117, 1118, 1120, 1121, 1159, 1191, 1194, 1255, 1653, 1733, 1777, 1851, 1854, 1857, 1858, 1859, 1866, 1870, 1871, 1872, 1877, 1880, 1882, 1887, 1892, 1893, 1894, 1895, 1901, 1905, 1908, 1911, 1913, 1916], "subregion": 1, "nest": [1, 2, 6, 26, 37, 57, 65, 580, 784, 806, 808, 885, 894, 1018, 1019, 1115, 1125, 1184, 1187, 1199, 1416, 1422, 1462, 1650, 1654, 1844, 1852, 1883, 1895, 1901, 1907], "local": [1, 13, 14, 17, 23, 35, 37, 39, 40, 43, 50, 52, 53, 54, 55, 57, 65, 911, 1000, 1061, 1114, 1159, 1184, 1256, 1355, 1356, 1357, 1361, 1363, 1404, 1416, 1467, 1509, 1533, 1583, 1596, 1597, 1641, 1747, 1777, 1851, 1852, 1856, 1869, 1876, 1880, 1881, 1884, 1895, 1899, 1900, 1904, 1907, 1908, 1909, 1916], "particular": [1, 4, 8, 14, 23, 32, 37, 43, 49, 52, 53, 57, 65, 551, 671, 852, 853, 1031, 1125, 1184, 1278, 1353, 1416, 1650, 1844, 1854, 1856, 1864, 1872, 1880, 1882, 1884, 1887, 1888, 1891, 1895, 1898, 1911, 1913, 1919, 1922], "explicit": [1, 9, 35, 57, 61, 65, 992, 1137, 1171, 1527, 1741, 1818, 1851, 1852, 1853, 1857, 1858, 1870, 1876, 1880, 1882, 1899, 1914, 1915], "control": [1, 2, 3, 12, 16, 17, 26, 32, 33, 35, 36, 37, 41, 43, 48, 51, 52, 746, 790, 849, 852, 867, 871, 885, 913, 922, 1044, 1045, 1046, 1047, 1048, 1141, 1142, 1195, 1196, 1197, 1199, 1214, 1220, 1222, 1225, 1227, 1230, 1232, 1236, 1242, 1245, 1247, 1253, 1273, 1324, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1402, 1410, 1411, 1467, 1565, 1596, 1689, 1745, 1746, 1760, 1775, 1777, 1782, 1798, 1802, 1820, 1826, 1827, 1828, 1829, 1854, 1863, 1877, 1879, 1880, 1881, 1888, 1890, 1891, 1893, 1895, 1898, 1902, 1909, 1911], "surround": [1, 65, 781, 1856, 1876, 1880], "ensur": [1, 2, 5, 7, 8, 10, 14, 23, 32, 35, 36, 37, 39, 43, 52, 53, 55, 57, 64, 65, 474, 479, 726, 810, 888, 890, 1114, 1184, 1328, 1409, 1416, 1419, 1420, 1459, 1515, 1539, 1540, 1541, 1565, 1596, 1749, 1851, 1854, 1856, 1864, 1866, 1869, 1876, 1877, 1880, 1882, 1883, 1885, 1890, 1892, 1899, 1902, 1903, 1907, 1908], "necessari": [1, 2, 4, 10, 14, 23, 26, 32, 37, 43, 52, 53, 57, 64, 83, 186, 203, 551, 580, 891, 1114, 1158, 1195, 1422, 1630, 1631, 1854, 1857, 1871, 1875, 1877, 1878, 1880, 1881, 1886, 1888, 1891, 1894, 1899, 1902, 1907, 1908, 1909, 1914], "becaus": [1, 2, 4, 5, 6, 8, 9, 14, 16, 17, 23, 26, 32, 33, 35, 39, 41, 45, 57, 61, 62, 64, 65, 488, 894, 899, 900, 1078, 1079, 1080, 1088, 1089, 1090, 1115, 1119, 1124, 1125, 1181, 1185, 1188, 1191, 1230, 1231, 1255, 1273, 1334, 1335, 1336, 1353, 1455, 1587, 1596, 1597, 1675, 1717, 1798, 1844, 1852, 1854, 1857, 1859, 1869, 1870, 1871, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1895, 1899, 1902, 1903, 1907, 1909, 1911, 1916, 1918, 1921, 1922], "f_float32": 1, "re": [1, 2, 5, 6, 8, 14, 16, 18, 22, 23, 26, 32, 35, 39, 42, 49, 52, 57, 58, 59, 60, 61, 62, 64, 65, 924, 1108, 1184, 1188, 1416, 1571, 1597, 1632, 1728, 1781, 1854, 1857, 1864, 1869, 1876, 1877, 1880, 1882, 1883, 1885, 1890, 1902, 1908, 1909, 1912, 1922], "again": [1, 17, 29, 32, 35, 39, 43, 60, 1306, 1877, 1883, 1888], "regardless": [1, 14, 32, 51, 57, 950, 1188, 1193, 1834, 1876, 1880, 1893, 1907, 1918], "g_float16": 1, "thread": [1, 2, 4, 13, 32, 35, 37, 43, 54, 57, 64, 911, 960, 1061, 1134, 1135, 1159, 1353, 1641, 1747, 1748, 1749, 1852, 1854, 1867, 1876, 1880, 1887, 1890, 1907, 1909, 1919], "new": [1, 2, 6, 9, 13, 14, 17, 22, 23, 26, 29, 32, 34, 35, 37, 41, 43, 52, 53, 57, 58, 61, 62, 63, 64, 65, 216, 248, 305, 441, 476, 480, 488, 491, 535, 571, 574, 608, 671, 675, 751, 782, 805, 810, 845, 870, 872, 873, 874, 875, 876, 886, 904, 905, 927, 928, 933, 942, 951, 953, 954, 961, 963, 1041, 1045, 1067, 1071, 1072, 1098, 1099, 1101, 1114, 1123, 1125, 1154, 1158, 1159, 1173, 1174, 1177, 1180, 1184, 1190, 1195, 1197, 1257, 1258, 1259, 1260, 1277, 1315, 1318, 1334, 1335, 1336, 1368, 1379, 1380, 1381, 1416, 1417, 1422, 1426, 1455, 1466, 1468, 1526, 1589, 1592, 1593, 1594, 1595, 1596, 1604, 1608, 1610, 1614, 1615, 1616, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1633, 1637, 1641, 1658, 1659, 1685, 1709, 1719, 1720, 1724, 1725, 1726, 1732, 1733, 1737, 1742, 1743, 1753, 1755, 1766, 1768, 1770, 1791, 1792, 1795, 1812, 1814, 1815, 1831, 1833, 1836, 1842, 1843, 1844, 1851, 1854, 1856, 1857, 1861, 1864, 1865, 1869, 1870, 1871, 1872, 1873, 1877, 1880, 1882, 1883, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1901, 1902, 1905, 1909, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1921], "affect": [1, 2, 3, 8, 10, 19, 29, 31, 42, 57, 216, 217, 776, 911, 961, 963, 1061, 1108, 1131, 1159, 1184, 1297, 1298, 1386, 1416, 1431, 1468, 1584, 1597, 1641, 1741, 1744, 1745, 1747, 1876, 1877, 1880, 1885, 1888, 1891, 1892, 1913], "dataparallel": [1, 35, 1580, 1596, 1632, 1852, 1877, 1884, 1890, 1907], "parallel": [1, 14, 25, 26, 32, 33, 35, 36, 37, 39, 52, 53, 57, 1134, 1135, 1187, 1353, 1422, 1455, 1515, 1596, 1748, 1749, 1852, 1857, 1876, 1877, 1879, 1890, 1894, 1907, 1909], "distributeddataparallel": [1, 32, 33, 35, 36, 39, 53, 57, 1353, 1455, 1890, 1900, 1907], "one": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 16, 17, 20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 49, 52, 54, 55, 57, 61, 62, 63, 64, 65, 67, 69, 77, 78, 145, 216, 248, 346, 396, 479, 505, 512, 536, 551, 688, 739, 748, 784, 845, 846, 847, 871, 877, 883, 884, 885, 886, 888, 894, 915, 926, 928, 938, 942, 961, 963, 968, 970, 974, 1001, 1024, 1035, 1046, 1057, 1061, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1093, 1096, 1100, 1103, 1104, 1105, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1137, 1146, 1147, 1159, 1163, 1166, 1169, 1188, 1193, 1197, 1203, 1204, 1214, 1215, 1225, 1226, 1227, 1228, 1229, 1231, 1236, 1240, 1242, 1244, 1247, 1253, 1254, 1270, 1278, 1282, 1287, 1306, 1312, 1324, 1329, 1332, 1333, 1334, 1335, 1336, 1339, 1344, 1347, 1348, 1349, 1360, 1364, 1365, 1370, 1379, 1380, 1381, 1383, 1384, 1385, 1395, 1396, 1397, 1407, 1416, 1420, 1422, 1455, 1463, 1468, 1480, 1490, 1493, 1494, 1495, 1510, 1511, 1512, 1517, 1552, 1565, 1583, 1587, 1596, 1597, 1602, 1604, 1605, 1609, 1619, 1630, 1639, 1640, 1641, 1642, 1643, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1679, 1681, 1682, 1683, 1703, 1704, 1721, 1737, 1745, 1747, 1750, 1753, 1793, 1802, 1817, 1822, 1823, 1825, 1833, 1836, 1837, 1844, 1852, 1854, 1857, 1861, 1863, 1865, 1867, 1869, 1870, 1871, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1890, 1892, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1907, 1909, 1911, 1912, 1913, 1914, 1916, 1917, 1918], "gpu": [1, 2, 3, 4, 5, 8, 14, 15, 16, 18, 20, 21, 23, 26, 28, 30, 32, 33, 37, 43, 53, 54, 57, 64, 191, 204, 283, 326, 594, 751, 944, 965, 966, 969, 970, 971, 972, 973, 974, 980, 981, 982, 989, 995, 996, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1034, 1035, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1105, 1184, 1193, 1230, 1255, 1284, 1292, 1293, 1294, 1297, 1298, 1324, 1353, 1368, 1386, 1416, 1431, 1432, 1455, 1580, 1596, 1629, 1802, 1852, 1854, 1865, 1880, 1886, 1888, 1889, 1891, 1892, 1894, 1902, 1907, 1911, 1913, 1917, 1919], "per": [1, 26, 32, 33, 35, 36, 37, 39, 40, 42, 43, 45, 51, 53, 54, 57, 58, 63, 465, 466, 467, 725, 726, 792, 799, 810, 813, 816, 824, 836, 844, 883, 892, 894, 964, 1040, 1071, 1115, 1125, 1256, 1332, 1333, 1334, 1335, 1336, 1350, 1352, 1353, 1360, 1371, 1376, 1379, 1380, 1381, 1382, 1383, 1388, 1407, 1408, 1416, 1419, 1420, 1421, 1422, 1423, 1430, 1447, 1448, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1487, 1488, 1498, 1527, 1550, 1558, 1596, 1640, 1644, 1661, 1677, 1683, 1691, 1703, 1750, 1752, 1803, 1819, 1823, 1844, 1867, 1871, 1873, 1879, 1880, 1881, 1883, 1887, 1900, 1902, 1903, 1905, 1908, 1911, 1916], "whether": [1, 2, 3, 8, 14, 15, 17, 23, 26, 32, 33, 35, 36, 37, 40, 41, 43, 51, 52, 57, 65, 313, 315, 464, 509, 608, 671, 684, 686, 687, 690, 865, 866, 871, 880, 888, 891, 892, 894, 899, 900, 911, 913, 922, 935, 936, 937, 943, 944, 945, 999, 1015, 1113, 1125, 1141, 1142, 1159, 1181, 1184, 1191, 1192, 1200, 1205, 1213, 1214, 1220, 1222, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1238, 1240, 1241, 1244, 1245, 1246, 1247, 1255, 1271, 1273, 1281, 1283, 1284, 1286, 1289, 1306, 1311, 1312, 1313, 1314, 1339, 1350, 1376, 1382, 1416, 1425, 1430, 1465, 1477, 1478, 1479, 1499, 1527, 1558, 1596, 1603, 1605, 1608, 1621, 1635, 1638, 1643, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1677, 1689, 1699, 1702, 1746, 1747, 1796, 1797, 1798, 1801, 1802, 1820, 1825, 1834, 1835, 1837, 1839, 1840, 1844, 1851, 1857, 1863, 1864, 1866, 1872, 1876, 1880, 1882, 1886, 1895, 1900, 1902, 1907, 1911, 1913, 1915, 1916, 1921], "torch_dtyp": 1, "weight": [1, 14, 32, 35, 41, 57, 63, 65, 151, 295, 355, 356, 488, 703, 704, 705, 706, 707, 708, 709, 710, 711, 721, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 734, 736, 737, 740, 742, 743, 744, 745, 747, 751, 752, 754, 755, 756, 763, 764, 765, 772, 783, 784, 785, 799, 800, 824, 826, 832, 836, 840, 841, 842, 843, 844, 849, 850, 852, 853, 915, 956, 1113, 1115, 1123, 1125, 1145, 1146, 1184, 1188, 1193, 1195, 1200, 1209, 1306, 1332, 1333, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1359, 1360, 1368, 1369, 1371, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1416, 1420, 1421, 1422, 1423, 1424, 1431, 1433, 1445, 1459, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1506, 1507, 1516, 1525, 1529, 1532, 1547, 1549, 1550, 1559, 1568, 1587, 1596, 1603, 1604, 1606, 1608, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1636, 1637, 1638, 1640, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1671, 1705, 1844, 1851, 1852, 1853, 1855, 1856, 1857, 1865, 1866, 1871, 1872, 1875, 1882, 1884, 1888, 1893, 1902, 1903, 1904, 1905, 1911, 1916, 1920, 1921], "insid": [1, 2, 8, 17, 23, 32, 52, 57, 62, 64, 65, 888, 889, 890, 891, 966, 1003, 1115, 1119, 1124, 1195, 1596, 1854, 1856, 1857, 1865, 1876, 1880, 1882, 1883, 1887, 1895, 1920], "custom_fwd": [1, 1876], "fwd": 1, "cast_input": [1, 1876], "helper": [1, 4, 6, 22, 35, 61, 65, 1455, 1851, 1852, 1856, 1880, 1881, 1895, 1899, 1907, 1922], "subclass": [1, 2, 13, 17, 26, 32, 37, 41, 45, 62, 65, 134, 528, 880, 881, 882, 1182, 1185, 1194, 1416, 1597, 1610, 1615, 1636, 1854, 1857, 1858, 1864, 1876, 1888, 1895, 1896, 1907, 1922], "page": [1, 7, 8, 10, 20, 32, 36, 53, 55, 1256, 1459, 1461, 1463, 1880, 1881, 1888, 1897, 1907], "incom": [1, 35, 54, 772, 810, 811, 812, 813, 816, 1337, 1403, 1486, 1532, 1869, 1877], "non": [1, 2, 4, 6, 14, 15, 16, 22, 26, 31, 33, 35, 36, 37, 40, 41, 43, 45, 52, 54, 55, 57, 64, 83, 145, 329, 496, 505, 509, 536, 689, 725, 730, 731, 732, 733, 734, 736, 737, 747, 751, 755, 756, 763, 764, 765, 829, 856, 868, 880, 882, 884, 889, 891, 899, 900, 915, 928, 931, 944, 949, 950, 955, 1014, 1103, 1104, 1110, 1114, 1119, 1125, 1161, 1184, 1187, 1196, 1199, 1200, 1219, 1220, 1227, 1231, 1232, 1245, 1247, 1256, 1266, 1273, 1278, 1283, 1306, 1311, 1312, 1316, 1329, 1330, 1331, 1345, 1346, 1348, 1349, 1352, 1362, 1368, 1385, 1386, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1421, 1423, 1431, 1433, 1447, 1498, 1517, 1545, 1550, 1592, 1593, 1596, 1642, 1672, 1694, 1737, 1738, 1753, 1765, 1779, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1818, 1834, 1844, 1851, 1852, 1854, 1856, 1857, 1859, 1869, 1872, 1875, 1878, 1882, 1883, 1884, 1888, 1892, 1895, 1900, 1901, 1906, 1907, 1909, 1911, 1912, 1914, 1915, 1916, 1918, 1922], "intern": [1, 4, 9, 10, 14, 17, 18, 23, 26, 32, 33, 35, 37, 41, 43, 49, 57, 62, 65, 958, 992, 1013, 1114, 1184, 1220, 1222, 1238, 1241, 1264, 1334, 1335, 1336, 1370, 1455, 1490, 1491, 1492, 1515, 1605, 1652, 1745, 1787, 1837, 1858, 1876, 1877, 1879, 1880, 1885, 1891, 1892, 1908, 1909, 1913, 1915], "current": [1, 2, 3, 4, 6, 7, 8, 10, 14, 17, 19, 20, 23, 24, 26, 32, 35, 37, 39, 40, 41, 43, 45, 52, 53, 57, 58, 64, 65, 83, 145, 204, 216, 479, 489, 490, 491, 732, 734, 772, 784, 786, 808, 850, 852, 853, 856, 870, 881, 884, 885, 892, 893, 894, 899, 913, 922, 958, 959, 960, 961, 963, 968, 969, 972, 973, 975, 976, 977, 978, 981, 982, 983, 985, 986, 989, 991, 992, 995, 997, 998, 1002, 1003, 1004, 1006, 1008, 1009, 1010, 1012, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1024, 1026, 1028, 1030, 1033, 1034, 1035, 1058, 1060, 1070, 1075, 1093, 1109, 1111, 1131, 1132, 1133, 1141, 1142, 1167, 1168, 1184, 1188, 1199, 1203, 1254, 1256, 1270, 1285, 1292, 1294, 1356, 1359, 1363, 1416, 1455, 1467, 1509, 1515, 1526, 1565, 1583, 1584, 1586, 1596, 1609, 1613, 1614, 1615, 1616, 1617, 1622, 1623, 1624, 1625, 1647, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1701, 1710, 1712, 1714, 1716, 1717, 1741, 1745, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1777, 1784, 1785, 1786, 1787, 1788, 1789, 1816, 1827, 1829, 1834, 1849, 1852, 1854, 1856, 1857, 1858, 1859, 1861, 1864, 1867, 1869, 1872, 1876, 1877, 1880, 1881, 1886, 1887, 1888, 1889, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1902, 1905, 1907, 1908, 1911, 1913, 1914, 1916, 1917, 1920, 1922], "custom_bwd": [1, 1876], "bwd": 1, "small": [1, 4, 8, 10, 15, 23, 32, 33, 35, 41, 52, 856, 899, 900, 944, 971, 1014, 1246, 1247, 1259, 1261, 1324, 1351, 1425, 1430, 1444, 1468, 1497, 1551, 1558, 1596, 1674, 1680, 1689, 1802, 1854, 1856, 1857, 1880, 1882, 1884, 1888, 1891, 1893, 1895, 1899, 1902, 1903, 1912, 1918], "magnitud": [1, 951, 1640, 1753, 1875, 1876, 1880], "represent": [1, 4, 14, 23, 26, 32, 35, 37, 50, 65, 474, 749, 817, 961, 1073, 1074, 1076, 1100, 1129, 1184, 1223, 1226, 1228, 1231, 1310, 1416, 1422, 1650, 1689, 1852, 1854, 1857, 1872, 1882, 1891, 1895, 1899, 1902, 1911, 1918, 1923], "These": [1, 2, 3, 4, 9, 14, 17, 19, 23, 26, 27, 32, 35, 36, 41, 58, 60, 63, 65, 785, 871, 956, 1057, 1121, 1181, 1184, 1226, 1291, 1324, 1416, 1587, 1604, 1852, 1854, 1855, 1856, 1857, 1867, 1870, 1871, 1873, 1876, 1877, 1880, 1881, 1882, 1888, 1891, 1893, 1895, 1899, 1905, 1907, 1908, 1914, 1919, 1922], "flush": [1, 2, 37, 1014, 1194, 1733, 1746, 1891, 1916], "zero": [1, 2, 3, 16, 33, 35, 36, 39, 41, 54, 57, 62, 65, 145, 254, 309, 505, 507, 535, 536, 575, 576, 578, 579, 614, 670, 682, 689, 703, 704, 705, 706, 707, 708, 709, 710, 716, 717, 718, 721, 722, 729, 730, 731, 732, 733, 734, 735, 740, 741, 742, 743, 744, 745, 746, 747, 750, 751, 755, 759, 760, 763, 764, 765, 766, 768, 771, 772, 786, 790, 810, 811, 812, 813, 816, 821, 868, 877, 878, 879, 884, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 914, 915, 935, 936, 937, 942, 951, 955, 1003, 1014, 1018, 1019, 1048, 1052, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1096, 1105, 1110, 1113, 1121, 1143, 1144, 1147, 1169, 1181, 1184, 1195, 1213, 1214, 1215, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1251, 1256, 1264, 1265, 1266, 1267, 1268, 1273, 1274, 1306, 1310, 1314, 1328, 1329, 1330, 1331, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1368, 1369, 1371, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1394, 1395, 1396, 1397, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1422, 1425, 1428, 1429, 1430, 1431, 1433, 1453, 1467, 1468, 1471, 1472, 1473, 1482, 1483, 1484, 1493, 1494, 1495, 1497, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1515, 1536, 1537, 1551, 1552, 1553, 1613, 1614, 1615, 1616, 1631, 1638, 1642, 1646, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1689, 1701, 1703, 1704, 1705, 1721, 1730, 1740, 1767, 1771, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1793, 1802, 1816, 1817, 1819, 1825, 1850, 1854, 1855, 1857, 1859, 1867, 1869, 1870, 1871, 1872, 1875, 1877, 1880, 1882, 1888, 1891, 1894, 1895, 1897, 1899, 1901, 1902, 1905, 1911, 1912, 1914, 1916, 1917, 1918, 1919], "underflow": [1, 1382, 1876], "updat": [1, 10, 22, 24, 32, 33, 37, 39, 43, 52, 57, 60, 61, 65, 216, 505, 507, 751, 790, 791, 815, 1113, 1122, 1184, 1334, 1335, 1336, 1353, 1359, 1360, 1368, 1379, 1380, 1381, 1416, 1417, 1426, 1455, 1506, 1507, 1604, 1608, 1638, 1655, 1661, 1666, 1668, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1851, 1854, 1865, 1876, 1877, 1880, 1881, 1882, 1888, 1890, 1893, 1894, 1895, 1897, 1898, 1900, 1902, 1907, 1908, 1909, 1916], "lost": [1, 43, 53, 55, 1353, 1412, 1413, 1414], "To": [1, 2, 3, 4, 5, 6, 7, 10, 12, 14, 15, 17, 18, 22, 23, 26, 27, 32, 33, 35, 36, 39, 40, 41, 43, 44, 50, 51, 53, 54, 57, 62, 65, 77, 78, 329, 491, 548, 725, 885, 898, 941, 944, 959, 1004, 1024, 1045, 1047, 1057, 1085, 1087, 1091, 1102, 1184, 1185, 1187, 1188, 1194, 1195, 1229, 1251, 1256, 1284, 1324, 1356, 1382, 1412, 1413, 1414, 1416, 1469, 1470, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1640, 1683, 1691, 1702, 1741, 1749, 1803, 1851, 1854, 1856, 1857, 1861, 1869, 1870, 1871, 1873, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1893, 1895, 1898, 1899, 1900, 1901, 1902, 1907, 1908, 1909, 1911, 1914, 1915, 1916, 1917], "multipli": [1, 14, 35, 307, 315, 416, 505, 676, 677, 678, 679, 680, 681, 682, 751, 770, 776, 777, 778, 912, 924, 1027, 1040, 1057, 1137, 1148, 1207, 1219, 1220, 1224, 1237, 1239, 1241, 1247, 1249, 1278, 1288, 1301, 1305, 1308, 1332, 1344, 1345, 1346, 1349, 1368, 1386, 1468, 1469, 1470, 1526, 1584, 1585, 1586, 1608, 1674, 1680, 1682, 1689, 1773, 1776, 1779, 1780, 1794, 1798, 1799, 1802, 1823, 1855, 1870, 1880, 1885, 1888, 1891, 1897, 1911, 1912], "flow": [1, 12, 16, 17, 941, 1196, 1199, 1480, 1515, 1596, 1854, 1875, 1877, 1880, 1882, 1893, 1895, 1909], "word": [1, 2, 9, 35, 52, 53, 60, 64, 65, 928, 1324, 1344, 1345, 1346, 1359, 1360, 1459, 1506, 1507, 1526, 1584, 1596, 1603, 1737, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1856, 1877, 1884, 1899, 1908], "larger": [1, 10, 17, 20, 22, 35, 41, 65, 248, 491, 900, 915, 1014, 1114, 1238, 1241, 1324, 1353, 1359, 1360, 1408, 1465, 1468, 1506, 1507, 1877, 1880, 1884, 1885, 1887, 1891, 1893, 1911, 1916], "thei": [1, 2, 4, 6, 8, 10, 14, 16, 19, 23, 24, 28, 29, 32, 35, 37, 41, 42, 52, 57, 60, 61, 64, 65, 315, 329, 330, 677, 680, 681, 688, 791, 806, 807, 808, 815, 832, 845, 850, 881, 890, 900, 912, 1003, 1061, 1108, 1113, 1123, 1159, 1173, 1174, 1181, 1184, 1191, 1196, 1205, 1219, 1220, 1226, 1247, 1255, 1277, 1281, 1284, 1286, 1289, 1306, 1329, 1330, 1331, 1347, 1348, 1349, 1363, 1401, 1409, 1410, 1411, 1416, 1422, 1432, 1444, 1467, 1515, 1517, 1587, 1596, 1597, 1600, 1603, 1605, 1606, 1629, 1632, 1641, 1679, 1682, 1741, 1747, 1798, 1802, 1837, 1838, 1851, 1854, 1856, 1857, 1859, 1861, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1886, 1888, 1890, 1891, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1907, 1911, 1916, 1918, 1919, 1920, 1922], "grad": [1, 2, 6, 19, 35, 41, 58, 61, 62, 65, 145, 329, 451, 480, 487, 488, 495, 496, 572, 871, 880, 884, 885, 891, 892, 894, 899, 900, 904, 905, 1003, 1061, 1113, 1114, 1116, 1120, 1124, 1125, 1159, 1167, 1184, 1256, 1416, 1596, 1641, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1747, 1779, 1837, 1844, 1852, 1854, 1855, 1870, 1871, 1872, 1876, 1881, 1882, 1883, 1885, 1888, 1890, 1897, 1907, 1908, 1911, 1917], "unscal": 1, "interfer": [1, 14, 1867, 1880, 1895], "learn": [1, 8, 9, 12, 17, 27, 41, 51, 65, 1337, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1376, 1401, 1403, 1424, 1445, 1464, 1465, 1568, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1852, 1861, 1873, 1875, 1886, 1888, 1889, 1895, 1899, 1902, 1907, 1909], "rate": [1, 9, 20, 33, 41, 1355, 1356, 1357, 1361, 1462, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1694, 1852, 1887, 1916], "fp16": [1, 3, 720, 1596, 1902, 1903], "everi": [1, 2, 3, 9, 10, 14, 17, 20, 22, 23, 32, 33, 35, 37, 39, 41, 43, 57, 62, 65, 474, 480, 601, 671, 772, 810, 888, 904, 905, 1040, 1057, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1114, 1137, 1146, 1184, 1215, 1229, 1239, 1242, 1273, 1328, 1354, 1355, 1356, 1357, 1361, 1409, 1416, 1449, 1451, 1455, 1501, 1502, 1503, 1508, 1539, 1540, 1541, 1555, 1572, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1604, 1637, 1640, 1641, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1741, 1802, 1835, 1857, 1863, 1867, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1889, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1907, 1908, 1909, 1913, 1914, 1916, 1918], "most": [1, 2, 4, 5, 8, 9, 13, 14, 15, 16, 17, 18, 22, 23, 27, 32, 35, 37, 39, 41, 42, 43, 44, 51, 52, 54, 55, 62, 63, 64, 65, 491, 784, 888, 889, 890, 895, 899, 908, 944, 1026, 1040, 1057, 1114, 1159, 1169, 1182, 1185, 1289, 1324, 1463, 1515, 1565, 1596, 1608, 1666, 1777, 1823, 1851, 1854, 1856, 1857, 1859, 1864, 1869, 1871, 1872, 1877, 1880, 1882, 1890, 1891, 1892, 1898, 1901, 1902, 1908, 1909, 1911, 1914, 1916, 1918], "bf16": [1, 3], "pretrain": [1, 16, 853, 1359, 1360, 1851, 1877, 1895], "cannot": [1, 4, 9, 10, 16, 32, 33, 35, 41, 42, 45, 52, 57, 58, 62, 63, 64, 65, 80, 81, 217, 248, 515, 536, 871, 1078, 1080, 1088, 1089, 1090, 1096, 1113, 1181, 1189, 1306, 1339, 1359, 1468, 1499, 1565, 1596, 1652, 1803, 1851, 1854, 1855, 1856, 1857, 1858, 1859, 1867, 1871, 1872, 1877, 1881, 1882, 1893, 1894, 1895, 1902, 1907, 1909, 1911, 1913, 1914, 1922], "numer": [1, 14, 23, 32, 41, 58, 63, 678, 784, 899, 900, 928, 1188, 1199, 1200, 1215, 1219, 1220, 1224, 1229, 1237, 1238, 1241, 1244, 1247, 1249, 1271, 1273, 1333, 1334, 1335, 1336, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1449, 1452, 1455, 1506, 1527, 1534, 1565, 1571, 1573, 1604, 1637, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1672, 1705, 1737, 1802, 1852, 1857, 1858, 1862, 1865, 1880, 1882, 1883, 1895, 1902, 1912, 1917, 1923], "max": [1, 15, 18, 32, 35, 43, 45, 51, 52, 54, 57, 65, 111, 180, 181, 182, 183, 294, 686, 687, 688, 749, 761, 762, 771, 773, 774, 793, 810, 811, 812, 813, 816, 865, 915, 932, 939, 940, 944, 1036, 1071, 1072, 1144, 1195, 1215, 1229, 1236, 1238, 1240, 1241, 1253, 1325, 1326, 1327, 1338, 1339, 1350, 1351, 1360, 1364, 1365, 1370, 1375, 1376, 1384, 1385, 1402, 1404, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1419, 1420, 1421, 1424, 1435, 1436, 1443, 1464, 1465, 1467, 1477, 1478, 1479, 1489, 1497, 1507, 1510, 1511, 1526, 1530, 1539, 1540, 1541, 1551, 1555, 1559, 1561, 1566, 1584, 1600, 1632, 1658, 1659, 1660, 1670, 1675, 1676, 1685, 1706, 1707, 1779, 1808, 1809, 1837, 1853, 1854, 1855, 1864, 1867, 1872, 1878, 1880, 1884, 1897, 1902, 1905, 1923], "65504": 1, "overflow": [1, 1038, 1039, 1283, 1311, 1314, 1534, 1571, 1572, 1699, 1730, 1778, 1781, 1801, 1827, 1829, 1880, 1891, 1912], "case": [1, 2, 4, 5, 9, 10, 14, 17, 19, 22, 23, 24, 26, 27, 32, 33, 35, 37, 39, 40, 41, 43, 44, 45, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 145, 149, 191, 346, 488, 491, 671, 751, 775, 782, 785, 811, 812, 814, 817, 849, 856, 884, 892, 894, 898, 913, 915, 951, 957, 982, 1004, 1005, 1024, 1025, 1026, 1057, 1078, 1080, 1088, 1089, 1090, 1105, 1115, 1119, 1124, 1143, 1169, 1182, 1185, 1193, 1196, 1197, 1199, 1213, 1215, 1219, 1220, 1224, 1229, 1230, 1231, 1233, 1239, 1242, 1247, 1249, 1253, 1255, 1256, 1261, 1264, 1273, 1284, 1306, 1324, 1329, 1330, 1331, 1332, 1333, 1344, 1345, 1346, 1348, 1349, 1350, 1352, 1355, 1356, 1357, 1358, 1360, 1361, 1363, 1372, 1373, 1374, 1375, 1376, 1377, 1383, 1384, 1385, 1402, 1407, 1409, 1410, 1411, 1422, 1423, 1424, 1434, 1447, 1453, 1458, 1463, 1465, 1467, 1480, 1498, 1507, 1515, 1519, 1520, 1550, 1552, 1559, 1596, 1598, 1599, 1603, 1605, 1608, 1609, 1642, 1643, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1683, 1721, 1724, 1737, 1739, 1753, 1756, 1802, 1803, 1833, 1837, 1847, 1851, 1857, 1862, 1869, 1870, 1871, 1875, 1876, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1888, 1890, 1891, 1893, 1895, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1922, 1923], "decreas": [1, 41, 1014, 1229, 1355, 1356, 1357, 1361, 1429, 1630, 1631, 1670, 1677, 1685, 1863, 1865, 1892, 1911, 1914], "bring": [1, 20, 58, 65, 1078, 1480, 1515, 1900], "number": [1, 2, 3, 4, 5, 6, 8, 14, 16, 20, 23, 26, 32, 33, 35, 39, 40, 41, 43, 50, 51, 52, 55, 57, 58, 60, 63, 65, 83, 149, 168, 213, 227, 248, 307, 346, 371, 392, 396, 428, 439, 464, 466, 467, 474, 485, 489, 491, 505, 507, 509, 534, 536, 537, 549, 574, 575, 576, 578, 579, 580, 599, 608, 676, 677, 678, 679, 680, 681, 682, 689, 749, 751, 759, 760, 763, 764, 765, 772, 810, 856, 868, 881, 899, 912, 914, 915, 924, 926, 930, 938, 939, 943, 951, 955, 956, 965, 971, 980, 989, 990, 1001, 1003, 1004, 1005, 1014, 1024, 1025, 1028, 1029, 1049, 1052, 1054, 1057, 1058, 1062, 1070, 1100, 1102, 1105, 1110, 1112, 1126, 1128, 1134, 1135, 1136, 1140, 1144, 1145, 1146, 1158, 1160, 1181, 1182, 1184, 1197, 1204, 1207, 1208, 1215, 1229, 1238, 1247, 1251, 1256, 1261, 1272, 1276, 1284, 1295, 1296, 1300, 1302, 1305, 1306, 1310, 1314, 1317, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1337, 1338, 1339, 1340, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1358, 1359, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1382, 1383, 1386, 1387, 1392, 1393, 1394, 1395, 1396, 1397, 1402, 1403, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1415, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1430, 1431, 1433, 1434, 1435, 1436, 1443, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1482, 1483, 1484, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1506, 1507, 1510, 1511, 1516, 1526, 1527, 1529, 1532, 1539, 1540, 1541, 1550, 1552, 1558, 1559, 1565, 1587, 1596, 1604, 1608, 1613, 1614, 1616, 1617, 1619, 1622, 1623, 1624, 1625, 1629, 1630, 1631, 1633, 1637, 1642, 1643, 1644, 1646, 1647, 1653, 1661, 1674, 1675, 1676, 1677, 1680, 1681, 1683, 1684, 1685, 1691, 1694, 1698, 1708, 1710, 1711, 1712, 1714, 1715, 1716, 1721, 1723, 1724, 1727, 1728, 1729, 1730, 1738, 1742, 1746, 1748, 1749, 1750, 1751, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1776, 1780, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1794, 1795, 1796, 1797, 1798, 1799, 1803, 1817, 1818, 1819, 1827, 1829, 1834, 1835, 1838, 1839, 1840, 1841, 1842, 1843, 1849, 1852, 1855, 1856, 1857, 1858, 1859, 1864, 1867, 1869, 1872, 1875, 1878, 1880, 1882, 1885, 1888, 1891, 1893, 1895, 1898, 1899, 1900, 1901, 1903, 1906, 1907, 1908, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1923], "expect": [1, 2, 4, 6, 8, 10, 12, 14, 19, 23, 32, 33, 35, 37, 39, 43, 50, 52, 54, 57, 62, 63, 65, 671, 688, 751, 845, 892, 893, 894, 895, 896, 897, 1003, 1078, 1080, 1097, 1098, 1099, 1118, 1119, 1158, 1181, 1184, 1199, 1200, 1228, 1249, 1250, 1284, 1335, 1336, 1352, 1368, 1369, 1370, 1371, 1380, 1381, 1382, 1386, 1387, 1388, 1398, 1399, 1400, 1416, 1422, 1423, 1431, 1433, 1449, 1455, 1459, 1461, 1463, 1468, 1506, 1512, 1526, 1550, 1558, 1559, 1571, 1584, 1585, 1586, 1587, 1596, 1630, 1686, 1742, 1811, 1842, 1851, 1852, 1859, 1877, 1880, 1881, 1884, 1885, 1888, 1895, 1898, 1899, 1902, 1903, 1904, 1911, 1916, 1918], "alwai": [1, 6, 8, 26, 28, 32, 33, 35, 50, 54, 57, 61, 65, 334, 441, 451, 785, 871, 889, 892, 898, 913, 922, 932, 938, 1003, 1014, 1044, 1052, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1088, 1089, 1090, 1091, 1093, 1096, 1100, 1141, 1142, 1184, 1194, 1199, 1214, 1219, 1220, 1221, 1222, 1224, 1225, 1237, 1240, 1241, 1242, 1243, 1247, 1249, 1312, 1332, 1334, 1335, 1336, 1353, 1379, 1380, 1381, 1389, 1390, 1391, 1398, 1399, 1400, 1416, 1452, 1455, 1587, 1596, 1629, 1725, 1726, 1752, 1798, 1802, 1834, 1837, 1857, 1858, 1869, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1885, 1887, 1888, 1899, 1900, 1906, 1907, 1909, 1911, 1914, 1917, 1918], "our": [1, 4, 8, 9, 14, 16, 17, 18, 22, 23, 35, 48, 51, 52, 53, 55, 61, 62, 63, 65, 888, 1077, 1114, 1332, 1877, 1882, 1885, 1890, 1895, 1898, 1902, 1908, 1911], "NOT": [1, 32, 35, 43, 52, 53, 54, 65, 918, 1266, 1356, 1596, 1597, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1626, 1641, 1650, 1652, 1658, 1659, 1672, 1877, 1909, 1911], "make": [1, 2, 3, 4, 5, 6, 9, 14, 16, 18, 19, 21, 22, 23, 26, 27, 32, 33, 35, 37, 38, 40, 41, 43, 44, 49, 52, 53, 54, 55, 61, 62, 65, 134, 217, 488, 770, 776, 852, 853, 884, 935, 936, 937, 960, 961, 963, 1045, 1061, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1097, 1098, 1099, 1159, 1184, 1188, 1193, 1194, 1213, 1214, 1226, 1227, 1228, 1256, 1332, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1377, 1416, 1426, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1515, 1517, 1526, 1565, 1584, 1596, 1603, 1619, 1636, 1641, 1679, 1742, 1775, 1784, 1785, 1786, 1788, 1789, 1820, 1837, 1851, 1854, 1856, 1857, 1861, 1867, 1869, 1870, 1872, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1888, 1890, 1892, 1894, 1895, 1896, 1898, 1899, 1901, 1902, 1903, 1907, 1908, 1909, 1911, 1914, 1916, 1920, 1922], "guarante": [1, 2, 6, 10, 32, 35, 37, 39, 41, 52, 54, 62, 64, 65, 867, 1184, 1193, 1353, 1416, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1775, 1837, 1877, 1879, 1880, 1891, 1892, 1899, 1901, 1903, 1907, 1909], "encount": [1, 6, 12, 14, 17, 19, 23, 35, 62, 64, 65, 1596, 1854, 1857, 1859, 1879, 1891, 1899, 1902], "nan": [1, 2, 41, 420, 421, 675, 677, 680, 681, 682, 685, 688, 689, 872, 876, 912, 928, 1103, 1104, 1105, 1144, 1173, 1174, 1176, 1177, 1223, 1230, 1243, 1246, 1259, 1264, 1282, 1283, 1287, 1310, 1311, 1312, 1313, 1314, 1515, 1600, 1695, 1732, 1737, 1791, 1825, 1855, 1864, 1876, 1877, 1883, 1891, 1912, 1918], "verifi": [1, 16, 35, 65, 899, 1040, 1653, 1654, 1672, 1823, 1851, 1854, 1866, 1882, 1885, 1895, 1900], "compat": [1, 2, 26, 32, 37, 41, 43, 57, 61, 62, 65, 489, 490, 594, 608, 671, 806, 807, 808, 881, 925, 949, 950, 1184, 1189, 1201, 1214, 1225, 1238, 1241, 1416, 1422, 1460, 1461, 1462, 1463, 1526, 1650, 1652, 1724, 1851, 1852, 1856, 1857, 1863, 1869, 1870, 1876, 1882, 1893, 1899, 1901, 1902, 1905, 1907, 1913], "init_scal": 1, "65536": 1, "0": [1, 2, 4, 12, 13, 14, 16, 17, 18, 22, 24, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 52, 53, 54, 57, 60, 61, 62, 63, 64, 65, 83, 149, 151, 168, 179, 186, 203, 219, 220, 221, 222, 223, 248, 254, 257, 283, 292, 294, 305, 307, 309, 311, 315, 346, 395, 396, 420, 421, 438, 441, 442, 447, 474, 476, 480, 488, 499, 500, 505, 507, 509, 512, 529, 534, 535, 538, 547, 549, 551, 569, 571, 572, 574, 575, 576, 578, 579, 580, 586, 587, 588, 589, 596, 598, 599, 608, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 703, 704, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 718, 721, 722, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 742, 743, 744, 746, 747, 748, 749, 751, 759, 760, 761, 763, 764, 765, 766, 769, 771, 773, 774, 776, 785, 787, 790, 793, 808, 811, 812, 813, 816, 845, 847, 856, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 892, 893, 894, 896, 899, 900, 902, 904, 905, 908, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 931, 932, 933, 934, 935, 936, 937, 938, 939, 942, 947, 948, 951, 952, 953, 954, 955, 956, 957, 963, 972, 974, 1000, 1001, 1027, 1031, 1036, 1037, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1055, 1057, 1059, 1060, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1137, 1141, 1143, 1144, 1145, 1146, 1147, 1150, 1154, 1158, 1161, 1169, 1180, 1181, 1182, 1184, 1188, 1190, 1191, 1195, 1203, 1204, 1205, 1206, 1207, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1273, 1277, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1301, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1323, 1324, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1404, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1447, 1449, 1450, 1451, 1453, 1455, 1458, 1459, 1461, 1463, 1464, 1465, 1467, 1468, 1471, 1472, 1473, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1513, 1515, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1530, 1531, 1533, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1550, 1551, 1552, 1553, 1554, 1555, 1558, 1559, 1561, 1565, 1566, 1569, 1571, 1574, 1580, 1581, 1582, 1583, 1584, 1587, 1596, 1600, 1603, 1604, 1608, 1613, 1614, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1629, 1630, 1632, 1633, 1635, 1636, 1637, 1638, 1640, 1642, 1643, 1644, 1648, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1692, 1694, 1695, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1727, 1728, 1729, 1730, 1732, 1733, 1737, 1739, 1740, 1741, 1744, 1746, 1750, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1775, 1777, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1804, 1805, 1811, 1812, 1814, 1815, 1816, 1817, 1818, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1844, 1845, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1864, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1923], "growth_factor": 1, "backoff_factor": 1, "5": [1, 2, 11, 13, 14, 22, 23, 24, 26, 29, 30, 32, 33, 35, 41, 50, 61, 62, 63, 64, 65, 149, 186, 203, 254, 283, 292, 307, 309, 311, 315, 395, 396, 438, 464, 491, 505, 507, 509, 528, 535, 549, 551, 575, 576, 577, 578, 579, 598, 676, 677, 681, 688, 725, 730, 731, 732, 733, 734, 736, 737, 751, 753, 764, 765, 852, 853, 856, 871, 877, 878, 879, 892, 895, 897, 912, 915, 922, 923, 924, 928, 930, 934, 937, 938, 939, 942, 951, 955, 1036, 1038, 1040, 1047, 1049, 1051, 1052, 1055, 1056, 1057, 1060, 1073, 1075, 1077, 1078, 1084, 1085, 1088, 1093, 1096, 1097, 1100, 1103, 1105, 1106, 1107, 1115, 1117, 1118, 1119, 1120, 1123, 1124, 1125, 1127, 1137, 1143, 1145, 1147, 1149, 1150, 1161, 1169, 1173, 1190, 1194, 1195, 1204, 1205, 1206, 1209, 1212, 1213, 1230, 1233, 1236, 1239, 1240, 1241, 1242, 1247, 1248, 1251, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1266, 1270, 1277, 1278, 1284, 1285, 1289, 1313, 1315, 1316, 1318, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1333, 1334, 1335, 1336, 1340, 1341, 1342, 1343, 1345, 1346, 1348, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1370, 1371, 1372, 1377, 1379, 1380, 1381, 1382, 1383, 1386, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1404, 1407, 1412, 1413, 1416, 1423, 1426, 1430, 1431, 1437, 1438, 1439, 1440, 1441, 1444, 1447, 1453, 1455, 1459, 1461, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1481, 1482, 1490, 1491, 1493, 1494, 1498, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1510, 1511, 1513, 1515, 1518, 1526, 1550, 1552, 1558, 1574, 1584, 1585, 1586, 1596, 1608, 1618, 1621, 1623, 1624, 1626, 1631, 1632, 1634, 1636, 1642, 1643, 1644, 1646, 1647, 1650, 1653, 1668, 1670, 1672, 1674, 1680, 1684, 1690, 1692, 1694, 1695, 1697, 1698, 1701, 1702, 1705, 1706, 1707, 1708, 1712, 1717, 1718, 1721, 1722, 1728, 1729, 1730, 1737, 1750, 1757, 1759, 1760, 1761, 1762, 1765, 1766, 1775, 1780, 1782, 1783, 1784, 1785, 1787, 1790, 1798, 1801, 1802, 1803, 1804, 1805, 1812, 1814, 1816, 1817, 1818, 1820, 1821, 1823, 1832, 1833, 1837, 1838, 1844, 1845, 1846, 1849, 1854, 1855, 1856, 1857, 1858, 1864, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1882, 1884, 1885, 1888, 1889, 1893, 1894, 1895, 1898, 1900, 1902, 1907, 1911, 1912, 1914, 1916, 1917, 1918], "growth_interv": 1, "2000": [1, 35, 39, 1075, 1077, 1084, 1093, 1106, 1261, 1468, 1677, 1705, 1755, 1756, 1816], "get_backoff_factor": 1, "backoff": [1, 1907], "get_growth_factor": 1, "growth": [1, 9], "get_growth_interv": 1, "int": [1, 3, 4, 17, 22, 29, 32, 33, 35, 37, 39, 40, 41, 43, 46, 49, 50, 52, 53, 55, 57, 65, 83, 211, 213, 227, 236, 248, 307, 309, 311, 315, 430, 437, 438, 440, 442, 450, 465, 469, 485, 489, 491, 505, 507, 509, 512, 528, 534, 536, 537, 549, 551, 557, 574, 575, 576, 578, 579, 598, 608, 671, 684, 686, 687, 688, 690, 746, 747, 766, 768, 770, 771, 776, 777, 778, 810, 865, 866, 867, 869, 883, 890, 903, 913, 915, 922, 929, 931, 938, 943, 955, 956, 957, 959, 961, 963, 965, 966, 969, 970, 971, 972, 973, 974, 976, 977, 978, 979, 980, 985, 986, 987, 989, 991, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1055, 1058, 1060, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1125, 1126, 1132, 1134, 1135, 1137, 1141, 1142, 1144, 1145, 1146, 1147, 1158, 1160, 1181, 1182, 1184, 1185, 1187, 1190, 1195, 1203, 1205, 1215, 1216, 1236, 1237, 1240, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1263, 1270, 1271, 1276, 1281, 1283, 1284, 1286, 1289, 1291, 1292, 1293, 1296, 1306, 1311, 1312, 1313, 1314, 1315, 1316, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1359, 1360, 1362, 1363, 1364, 1365, 1367, 1369, 1371, 1379, 1380, 1381, 1384, 1385, 1387, 1388, 1392, 1393, 1394, 1395, 1396, 1397, 1401, 1403, 1404, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1418, 1421, 1423, 1424, 1427, 1428, 1429, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1449, 1451, 1452, 1455, 1459, 1461, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1497, 1498, 1499, 1506, 1507, 1514, 1517, 1526, 1534, 1550, 1551, 1552, 1556, 1557, 1571, 1572, 1580, 1584, 1585, 1586, 1596, 1604, 1613, 1614, 1616, 1617, 1619, 1622, 1623, 1624, 1625, 1630, 1632, 1637, 1640, 1643, 1644, 1646, 1647, 1650, 1652, 1653, 1654, 1661, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1691, 1692, 1699, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1722, 1723, 1724, 1727, 1728, 1729, 1730, 1733, 1738, 1739, 1740, 1744, 1748, 1749, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1771, 1775, 1778, 1781, 1782, 1783, 1790, 1793, 1795, 1796, 1797, 1798, 1801, 1803, 1807, 1813, 1817, 1818, 1820, 1822, 1823, 1826, 1827, 1828, 1829, 1832, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1844, 1845, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1867, 1869, 1870, 1872, 1875, 1880, 1883, 1895, 1897, 1900, 1901, 1902, 1906, 1907, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1923], "interv": [1, 41, 54, 856, 952, 1107, 1297, 1298, 1686, 1710, 1711, 1759, 1867, 1880, 1901], "get_scal": [1, 1876], "sync": [1, 35, 39, 57, 64, 65, 1596, 1880, 1881, 1900], "is_en": [1, 1777, 1784, 1785, 1786, 1787, 1788, 1789], "indic": [1, 2, 3, 4, 17, 23, 32, 33, 35, 36, 40, 41, 52, 78, 186, 203, 216, 307, 309, 311, 312, 313, 315, 464, 505, 507, 509, 535, 563, 564, 574, 605, 686, 687, 726, 736, 737, 865, 866, 867, 868, 869, 889, 899, 900, 928, 935, 936, 958, 960, 961, 963, 997, 1036, 1037, 1060, 1115, 1116, 1118, 1119, 1120, 1124, 1125, 1126, 1137, 1158, 1182, 1184, 1189, 1197, 1200, 1201, 1205, 1214, 1225, 1227, 1238, 1241, 1255, 1263, 1271, 1273, 1275, 1281, 1284, 1286, 1289, 1306, 1312, 1316, 1324, 1325, 1326, 1327, 1352, 1359, 1360, 1364, 1365, 1410, 1411, 1412, 1413, 1414, 1419, 1421, 1422, 1477, 1478, 1479, 1498, 1506, 1507, 1510, 1511, 1527, 1542, 1543, 1544, 1552, 1565, 1580, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1622, 1623, 1642, 1643, 1681, 1683, 1702, 1737, 1775, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1812, 1813, 1817, 1820, 1826, 1827, 1828, 1829, 1834, 1835, 1837, 1844, 1847, 1853, 1854, 1855, 1857, 1861, 1870, 1871, 1882, 1895, 1897, 1907, 1911, 1915, 1916, 1918], "load_state_dict": [1, 33, 37, 39, 57, 1184, 1255, 1416, 1587, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1851, 1852, 1888, 1893, 1902], "state_dict": [1, 33, 37, 39, 57, 827, 828, 1184, 1416, 1587, 1622, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1851, 1866, 1881, 1888, 1890, 1893, 1895, 1902, 1920], "load": [1, 2, 15, 16, 23, 24, 26, 27, 33, 37, 39, 57, 828, 853, 907, 944, 959, 1188, 1194, 1199, 1360, 1587, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1733, 1852, 1854, 1865, 1866, 1871, 1877, 1880, 1887, 1888, 1892, 1894, 1895, 1916], "scaler": [1, 1876, 1880], "unmodifi": [1, 21, 35], "iter": [1, 2, 3, 4, 8, 14, 17, 22, 23, 33, 35, 36, 37, 39, 41, 53, 55, 57, 65, 970, 971, 972, 973, 974, 1003, 1006, 1008, 1029, 1184, 1256, 1416, 1417, 1418, 1426, 1427, 1596, 1597, 1600, 1601, 1602, 1604, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1637, 1639, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1675, 1676, 1677, 1680, 1691, 1761, 1803, 1855, 1857, 1858, 1869, 1871, 1876, 1877, 1878, 1880, 1881, 1882, 1885, 1888, 1898, 1901, 1906, 1916, 1922], "set_backoff_factor": 1, "new_factor": 1, "new_scal": 1, "set_growth_factor": 1, "set_growth_interv": 1, "new_interv": 1, "It": [1, 2, 4, 5, 6, 8, 9, 12, 14, 16, 17, 21, 22, 23, 28, 29, 32, 33, 35, 36, 37, 40, 41, 43, 45, 49, 50, 51, 52, 53, 54, 57, 59, 61, 62, 63, 64, 65, 83, 145, 191, 466, 467, 505, 507, 509, 535, 548, 880, 881, 882, 883, 884, 888, 911, 949, 950, 974, 979, 985, 986, 1004, 1005, 1024, 1025, 1033, 1080, 1109, 1114, 1117, 1125, 1126, 1145, 1181, 1184, 1185, 1190, 1194, 1216, 1220, 1224, 1227, 1229, 1231, 1232, 1237, 1241, 1242, 1244, 1245, 1247, 1249, 1252, 1253, 1255, 1256, 1264, 1324, 1333, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1353, 1363, 1410, 1411, 1412, 1413, 1414, 1416, 1423, 1444, 1447, 1467, 1469, 1517, 1527, 1571, 1589, 1590, 1591, 1594, 1595, 1596, 1604, 1605, 1608, 1629, 1632, 1633, 1641, 1650, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1689, 1708, 1721, 1737, 1747, 1753, 1760, 1781, 1833, 1844, 1851, 1856, 1857, 1867, 1869, 1871, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1898, 1899, 1900, 1902, 1907, 1908, 1909, 1912, 1913, 1915, 1919], "five": [1, 1857, 1893], "entri": [1, 4, 12, 17, 35, 36, 39, 41, 50, 52, 53, 309, 726, 849, 850, 908, 1000, 1001, 1047, 1098, 1099, 1158, 1184, 1204, 1359, 1360, 1416, 1422, 1506, 1507, 1592, 1593, 1614, 1615, 1623, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1781, 1854, 1857, 1858, 1864, 1872, 1877, 1881, 1882, 1885, 1888, 1905, 1911, 1916, 1920], "_growth_track": 1, "recent": [1, 2, 8, 9, 20, 23, 55, 64, 1159, 1169, 1777, 1856, 1857, 1872, 1882, 1891, 1892, 1911, 1918], "consecut": [1, 35, 601, 1631, 1673, 1823, 1834, 1835, 1871, 1895], "unskip": 1, "empti": [1, 4, 35, 37, 43, 50, 57, 62, 65, 315, 505, 507, 528, 536, 808, 914, 915, 925, 931, 1057, 1059, 1182, 1185, 1209, 1229, 1230, 1235, 1242, 1265, 1266, 1267, 1268, 1275, 1333, 1352, 1360, 1423, 1488, 1507, 1553, 1636, 1648, 1652, 1787, 1802, 1816, 1850, 1853, 1854, 1855, 1856, 1857, 1859, 1865, 1870, 1871, 1872, 1875, 1878, 1880, 1882, 1895, 1897, 1899, 1911, 1912, 1919], "wish": [1, 1120, 1793, 1876, 1880, 1882, 1883], "checkpoint": [1, 39, 53, 55, 57, 907, 1255, 1596, 1851, 1852, 1866, 1884, 1900, 1909], "carri": [1, 61, 330, 788, 829, 830, 848, 849, 1878, 1902], "out": [1, 2, 3, 4, 8, 9, 10, 14, 15, 16, 17, 18, 22, 24, 27, 29, 32, 35, 37, 40, 41, 49, 50, 53, 58, 61, 65, 306, 308, 310, 312, 393, 395, 441, 488, 504, 506, 508, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 686, 687, 688, 689, 690, 747, 751, 755, 763, 764, 765, 770, 772, 776, 788, 827, 829, 830, 848, 849, 856, 857, 858, 859, 860, 861, 862, 863, 868, 872, 873, 874, 875, 876, 885, 886, 887, 890, 899, 912, 914, 915, 916, 917, 918, 919, 920, 921, 924, 928, 931, 933, 934, 935, 936, 937, 939, 940, 942, 944, 946, 947, 948, 950, 951, 953, 954, 957, 962, 970, 972, 974, 1001, 1002, 1014, 1015, 1027, 1031, 1036, 1037, 1038, 1039, 1041, 1044, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1110, 1111, 1114, 1115, 1117, 1118, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1138, 1139, 1140, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1178, 1179, 1184, 1195, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1301, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1316, 1317, 1318, 1319, 1320, 1321, 1325, 1326, 1327, 1329, 1330, 1331, 1337, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1354, 1355, 1356, 1357, 1359, 1361, 1364, 1365, 1368, 1369, 1384, 1385, 1386, 1401, 1403, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1428, 1429, 1431, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1459, 1460, 1461, 1462, 1463, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1486, 1490, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1503, 1508, 1511, 1515, 1526, 1532, 1551, 1553, 1584, 1596, 1613, 1614, 1615, 1616, 1642, 1643, 1644, 1645, 1647, 1648, 1672, 1689, 1690, 1694, 1695, 1696, 1698, 1701, 1702, 1708, 1709, 1710, 1712, 1714, 1716, 1717, 1720, 1721, 1722, 1726, 1730, 1731, 1732, 1734, 1735, 1736, 1737, 1753, 1754, 1755, 1767, 1768, 1769, 1770, 1775, 1779, 1780, 1791, 1792, 1794, 1795, 1796, 1797, 1799, 1800, 1802, 1813, 1814, 1815, 1818, 1820, 1822, 1825, 1826, 1828, 1830, 1831, 1837, 1839, 1840, 1841, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1857, 1864, 1867, 1869, 1871, 1872, 1877, 1878, 1880, 1881, 1882, 1883, 1888, 1890, 1895, 1898, 1899, 1902, 1903, 1905, 1907, 1908, 1909, 1912, 1914, 1916, 1917, 1921, 1922], "follow": [1, 2, 3, 4, 6, 8, 10, 12, 13, 14, 17, 18, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 37, 39, 40, 41, 43, 49, 50, 51, 52, 53, 57, 59, 61, 62, 65, 77, 78, 480, 608, 671, 751, 770, 776, 783, 784, 785, 791, 805, 806, 807, 808, 810, 811, 812, 813, 815, 816, 845, 852, 853, 880, 881, 882, 886, 904, 905, 928, 933, 1000, 1014, 1057, 1075, 1077, 1101, 1110, 1123, 1137, 1184, 1185, 1193, 1197, 1204, 1215, 1226, 1236, 1239, 1240, 1253, 1256, 1275, 1278, 1324, 1333, 1339, 1352, 1360, 1363, 1368, 1386, 1416, 1431, 1447, 1463, 1467, 1534, 1565, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1603, 1643, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1680, 1683, 1691, 1702, 1730, 1737, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1777, 1778, 1779, 1780, 1787, 1798, 1823, 1831, 1837, 1851, 1854, 1855, 1856, 1857, 1858, 1859, 1863, 1864, 1865, 1866, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1905, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1917, 1918, 1922, 1923], "unscale_": [1, 1876], "unless": [1, 2, 5, 8, 33, 35, 54, 57, 58, 65, 145, 491, 831, 849, 888, 915, 1113, 1184, 1227, 1232, 1245, 1255, 1284, 1370, 1416, 1463, 1591, 1619, 1638, 1666, 1672, 1737, 1837, 1857, 1863, 1877, 1880, 1892, 1895, 1899, 1903], "earlier": [1, 2, 7, 1802, 1877, 1880, 1884, 1887, 1893, 1895, 1901], "part": [1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 22, 23, 26, 27, 29, 33, 35, 37, 41, 52, 53, 57, 61, 62, 65, 77, 78, 832, 898, 946, 1057, 1174, 1176, 1177, 1180, 1184, 1194, 1196, 1199, 1200, 1214, 1220, 1222, 1231, 1238, 1241, 1416, 1455, 1565, 1596, 1606, 1675, 1702, 1783, 1823, 1826, 1827, 1828, 1829, 1851, 1852, 1854, 1856, 1857, 1865, 1866, 1876, 1877, 1880, 1882, 1884, 1885, 1888, 1893, 1895, 1899, 1900, 1902, 1907, 1908, 1909, 1911, 1916, 1918], "check": [1, 5, 13, 14, 17, 18, 22, 23, 24, 26, 32, 35, 36, 41, 43, 52, 57, 216, 334, 491, 685, 852, 888, 890, 891, 899, 900, 960, 961, 963, 967, 996, 1014, 1171, 1181, 1184, 1199, 1200, 1213, 1214, 1219, 1220, 1222, 1225, 1227, 1232, 1238, 1241, 1245, 1247, 1248, 1273, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1416, 1587, 1596, 1605, 1608, 1621, 1631, 1653, 1654, 1777, 1784, 1785, 1786, 1787, 1788, 1789, 1851, 1852, 1856, 1857, 1858, 1870, 1871, 1876, 1880, 1882, 1883, 1884, 1887, 1888, 1889, 1892, 1895, 1898, 1899, 1900, 1901, 1907, 1911, 1916, 1918, 1922], "inf": [1, 23, 41, 57, 675, 677, 680, 681, 682, 876, 912, 928, 1173, 1174, 1176, 1178, 1179, 1215, 1230, 1236, 1240, 1243, 1253, 1264, 1310, 1406, 1449, 1459, 1565, 1600, 1614, 1623, 1643, 1730, 1737, 1876, 1877, 1883, 1891, 1912, 1918], "found": [1, 8, 12, 16, 20, 22, 27, 29, 52, 65, 78, 928, 957, 1036, 1037, 1184, 1188, 1205, 1281, 1284, 1286, 1289, 1312, 1328, 1338, 1361, 1416, 1443, 1737, 1851, 1854, 1857, 1872, 1876, 1882, 1885, 1888, 1890, 1895, 1899, 1901, 1902, 1907, 1916, 1922], "otherwis": [1, 2, 4, 6, 8, 10, 24, 26, 32, 35, 36, 42, 45, 57, 58, 62, 65, 83, 204, 315, 322, 326, 330, 332, 336, 337, 487, 496, 551, 571, 572, 574, 594, 608, 671, 677, 678, 679, 680, 681, 684, 686, 687, 688, 690, 726, 751, 759, 760, 775, 785, 808, 811, 812, 852, 853, 856, 883, 886, 894, 899, 912, 928, 998, 1057, 1063, 1096, 1108, 1175, 1181, 1184, 1187, 1190, 1196, 1205, 1229, 1244, 1253, 1255, 1256, 1271, 1276, 1281, 1283, 1284, 1286, 1288, 1289, 1311, 1314, 1330, 1331, 1350, 1352, 1355, 1356, 1357, 1361, 1368, 1372, 1373, 1374, 1375, 1377, 1386, 1402, 1416, 1420, 1421, 1422, 1423, 1424, 1426, 1431, 1432, 1434, 1447, 1453, 1455, 1458, 1459, 1461, 1463, 1464, 1465, 1483, 1484, 1517, 1519, 1520, 1524, 1559, 1569, 1596, 1603, 1608, 1629, 1633, 1641, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1666, 1668, 1669, 1670, 1671, 1689, 1691, 1699, 1701, 1708, 1717, 1724, 1737, 1745, 1753, 1796, 1797, 1798, 1801, 1833, 1834, 1835, 1839, 1840, 1847, 1851, 1854, 1856, 1857, 1864, 1865, 1870, 1876, 1882, 1883, 1890, 1895, 1903, 1905, 1906, 1907, 1909, 1912, 1913, 1914, 1915, 1916, 1918, 1922], "avoid": [1, 6, 9, 10, 14, 17, 32, 35, 41, 50, 53, 57, 65, 83, 186, 203, 441, 772, 856, 884, 925, 1014, 1184, 1229, 1255, 1351, 1382, 1383, 1407, 1416, 1425, 1430, 1467, 1497, 1527, 1551, 1558, 1596, 1604, 1672, 1723, 1752, 1798, 1816, 1834, 1852, 1867, 1871, 1877, 1879, 1880, 1884, 1885, 1888, 1900, 1907, 1908, 1915, 1916, 1917], "corrupt": [1, 35, 52, 1353, 1880, 1890], "param": [1, 2, 39, 41, 44, 52, 57, 59, 61, 65, 755, 786, 1113, 1123, 1184, 1202, 1416, 1422, 1426, 1427, 1595, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1685, 1726, 1855, 1865, 1875, 1876, 1880, 1881, 1898, 1922], "closur": [1, 39, 1661, 1666, 1672], "divid": [1, 6, 33, 35, 39, 232, 574, 575, 576, 974, 1052, 1055, 1075, 1093, 1102, 1146, 1147, 1194, 1332, 1333, 1339, 1340, 1350, 1376, 1377, 1383, 1407, 1408, 1419, 1420, 1421, 1430, 1447, 1448, 1464, 1465, 1487, 1488, 1498, 1499, 1527, 1550, 1558, 1596, 1802, 1845, 1855, 1897], "modifi": [1, 2, 13, 14, 19, 21, 23, 29, 32, 33, 35, 36, 37, 39, 57, 65, 254, 480, 782, 829, 830, 831, 888, 890, 891, 904, 905, 949, 950, 1137, 1181, 1184, 1187, 1188, 1203, 1359, 1416, 1459, 1461, 1463, 1506, 1507, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1600, 1601, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1666, 1668, 1669, 1670, 1671, 1672, 1675, 1683, 1765, 1854, 1857, 1870, 1876, 1880, 1882, 1883, 1888, 1893, 1899, 1900, 1902, 1907, 1912, 1915, 1917, 1921], "inspect": [1, 2, 14, 16, 35, 57, 65, 907, 1184, 1195, 1876, 1882, 1887, 1899, 1903, 1914, 1922], "between": [1, 2, 3, 4, 8, 14, 15, 17, 23, 28, 29, 33, 35, 41, 42, 52, 53, 54, 57, 64, 65, 191, 505, 574, 575, 576, 578, 579, 598, 608, 680, 681, 682, 686, 687, 751, 763, 764, 765, 793, 848, 856, 875, 884, 886, 893, 895, 896, 897, 899, 900, 932, 944, 956, 960, 967, 969, 1016, 1020, 1034, 1035, 1040, 1057, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1108, 1137, 1144, 1181, 1184, 1195, 1219, 1220, 1242, 1247, 1313, 1332, 1333, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1355, 1356, 1357, 1361, 1363, 1368, 1377, 1383, 1392, 1393, 1394, 1395, 1396, 1397, 1407, 1409, 1410, 1411, 1416, 1419, 1420, 1421, 1425, 1444, 1447, 1448, 1449, 1464, 1465, 1467, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1514, 1539, 1540, 1541, 1555, 1571, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1624, 1625, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1676, 1677, 1683, 1685, 1694, 1702, 1706, 1707, 1712, 1713, 1717, 1742, 1795, 1796, 1797, 1798, 1802, 1822, 1823, 1839, 1840, 1854, 1856, 1857, 1858, 1864, 1869, 1872, 1876, 1877, 1879, 1880, 1881, 1885, 1886, 1888, 1890, 1892, 1893, 1895, 1898, 1900, 1902, 1903, 1907, 1909, 1911, 1913, 1916, 1920], "simpl": [1, 16, 17, 27, 29, 33, 45, 52, 61, 63, 65, 956, 1014, 1115, 1123, 1124, 1125, 1184, 1188, 1195, 1334, 1335, 1336, 1359, 1389, 1390, 1391, 1416, 1455, 1506, 1651, 1758, 1844, 1851, 1854, 1858, 1872, 1879, 1880, 1881, 1882, 1884, 1885, 1887, 1895, 1899, 1907, 1911], "clip": [1, 57, 952, 1600, 1601, 1855, 1883, 1895, 1897], "util": [1, 8, 14, 18, 23, 28, 53, 57, 58, 64, 65, 723, 726, 729, 730, 731, 736, 737, 747, 751, 755, 781, 789, 974, 1108, 1184, 1368, 1386, 1416, 1431, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1605, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1629, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1677, 1683, 1806, 1807, 1808, 1809, 1810, 1852, 1857, 1867, 1876, 1878, 1879, 1880, 1882, 1884, 1885, 1887, 1888, 1895, 1898, 1899, 1900], "clip_grad_norm_": [1, 57, 1876], "max_norm": [1, 57, 736, 737, 1359, 1360, 1506, 1507, 1600, 1855, 1876], "own": [1, 8, 10, 16, 35, 36, 39, 41, 44, 52, 54, 57, 65, 671, 992, 1091, 1110, 1146, 1184, 1255, 1344, 1345, 1346, 1347, 1348, 1349, 1416, 1605, 1608, 1857, 1873, 1876, 1880, 1899, 1902, 1903, 1907, 1909, 1911], "onc": [1, 2, 8, 10, 13, 14, 17, 20, 27, 32, 33, 35, 36, 37, 39, 41, 42, 44, 45, 52, 57, 60, 62, 64, 65, 77, 888, 889, 890, 892, 894, 1057, 1184, 1188, 1255, 1353, 1416, 1596, 1606, 1608, 1681, 1685, 1701, 1748, 1752, 1854, 1857, 1865, 1867, 1869, 1876, 1877, 1879, 1880, 1882, 1885, 1887, 1888, 1898, 1899, 1916], "assign": [1, 2, 8, 10, 11, 32, 35, 43, 52, 53, 62, 65, 671, 829, 830, 831, 1182, 1185, 1324, 1352, 1416, 1423, 1426, 1427, 1597, 1608, 1854, 1858, 1876, 1882, 1883, 1884, 1895, 1902, 1908, 1909, 1915, 1916], "been": [1, 2, 6, 10, 12, 14, 19, 23, 24, 32, 33, 35, 36, 39, 40, 41, 43, 45, 52, 55, 57, 60, 61, 65, 671, 751, 888, 961, 963, 968, 996, 999, 1056, 1061, 1114, 1187, 1188, 1193, 1198, 1255, 1368, 1375, 1386, 1431, 1480, 1515, 1596, 1605, 1610, 1614, 1616, 1636, 1637, 1650, 1655, 1675, 1676, 1677, 1683, 1685, 1701, 1798, 1846, 1863, 1867, 1869, 1870, 1871, 1876, 1877, 1879, 1880, 1885, 1886, 1888, 1890, 1892, 1894, 1895, 1898, 1899, 1907, 1909, 1911, 1916], "twice": [1, 64, 608, 893, 1121, 1876, 1877, 1884, 1885], "trigger": [1, 8, 10, 13, 14, 19, 20, 23, 35, 52, 57, 64, 216, 1031, 1750, 1876, 1880, 1881, 1887, 1893, 1907], "runtimeerror": [1, 2, 26, 35, 39, 62, 65, 83, 574, 688, 888, 925, 1105, 1159, 1169, 1184, 1213, 1214, 1215, 1223, 1224, 1225, 1227, 1231, 1237, 1244, 1249, 1250, 1276, 1306, 1416, 1652, 1739, 1777, 1837, 1854, 1856, 1857, 1870, 1872, 1876, 1878, 1884, 1892, 1894, 1895, 1902, 1906, 1911, 1914], "spars": [1, 2, 24, 185, 186, 203, 213, 216, 317, 322, 336, 337, 428, 534, 535, 536, 537, 572, 574, 575, 576, 577, 578, 579, 605, 680, 736, 737, 899, 900, 1031, 1126, 1148, 1169, 1256, 1278, 1288, 1316, 1359, 1360, 1449, 1506, 1507, 1532, 1672, 1691, 1739, 1773, 1777, 1784, 1785, 1786, 1787, 1788, 1789, 1794, 1803, 1822, 1837, 1852, 1855, 1859, 1864, 1875, 1891, 1892, 1897, 1904, 1914, 1915, 1918], "place": [1, 4, 8, 17, 20, 22, 24, 32, 33, 35, 37, 42, 43, 57, 60, 61, 65, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 116, 118, 120, 122, 125, 126, 128, 136, 138, 141, 142, 144, 147, 153, 155, 157, 159, 161, 163, 172, 181, 189, 193, 196, 198, 208, 210, 216, 217, 226, 230, 232, 238, 241, 243, 245, 247, 248, 251, 254, 256, 263, 265, 267, 271, 273, 277, 279, 286, 288, 290, 298, 300, 302, 304, 306, 308, 310, 312, 350, 352, 354, 356, 358, 360, 362, 365, 367, 369, 370, 377, 379, 381, 383, 385, 389, 393, 395, 413, 416, 419, 421, 432, 434, 436, 444, 449, 459, 462, 478, 480, 482, 484, 488, 491, 500, 503, 504, 506, 508, 514, 518, 520, 523, 525, 527, 540, 542, 544, 553, 555, 562, 566, 568, 584, 587, 589, 591, 593, 594, 603, 613, 749, 784, 788, 805, 829, 830, 848, 849, 888, 890, 904, 905, 926, 970, 971, 973, 974, 994, 1057, 1108, 1113, 1114, 1122, 1184, 1228, 1246, 1306, 1328, 1338, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1373, 1374, 1375, 1402, 1416, 1433, 1434, 1435, 1436, 1443, 1458, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1519, 1522, 1531, 1562, 1564, 1579, 1583, 1587, 1592, 1593, 1596, 1600, 1601, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1638, 1672, 1728, 1730, 1734, 1735, 1736, 1782, 1818, 1852, 1854, 1856, 1857, 1864, 1871, 1876, 1880, 1882, 1887, 1898, 1899, 1900, 1907, 1908, 1913, 1915, 1917], "replac": [1, 2, 12, 16, 22, 26, 32, 33, 35, 37, 51, 53, 57, 59, 60, 61, 62, 63, 65, 77, 114, 414, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 738, 805, 830, 849, 935, 1003, 1057, 1113, 1114, 1189, 1191, 1201, 1273, 1274, 1306, 1310, 1447, 1458, 1587, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1638, 1640, 1701, 1798, 1802, 1825, 1854, 1855, 1857, 1865, 1880, 1883, 1885, 1887, 1890, 1894, 1895, 1897, 1899, 1902, 1918], "were": [1, 2, 3, 4, 14, 19, 22, 23, 29, 35, 43, 52, 55, 57, 62, 64, 65, 145, 315, 329, 464, 845, 880, 882, 884, 898, 1003, 1114, 1125, 1191, 1255, 1480, 1596, 1600, 1605, 1615, 1632, 1668, 1737, 1741, 1812, 1819, 1844, 1856, 1864, 1876, 1880, 1882, 1893, 1895, 1899], "reduc": [1, 3, 4, 14, 15, 19, 23, 26, 33, 35, 36, 37, 39, 57, 315, 505, 508, 509, 677, 684, 686, 687, 688, 690, 810, 811, 812, 813, 816, 818, 865, 866, 944, 971, 982, 1014, 1157, 1236, 1240, 1242, 1247, 1253, 1271, 1281, 1283, 1284, 1286, 1289, 1311, 1312, 1313, 1314, 1332, 1333, 1334, 1335, 1336, 1350, 1352, 1360, 1376, 1382, 1383, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1455, 1464, 1487, 1488, 1496, 1498, 1507, 1523, 1526, 1527, 1528, 1538, 1546, 1547, 1548, 1549, 1550, 1551, 1558, 1569, 1570, 1581, 1584, 1596, 1604, 1641, 1661, 1685, 1699, 1701, 1702, 1736, 1779, 1783, 1796, 1797, 1801, 1802, 1823, 1837, 1839, 1840, 1853, 1855, 1869, 1870, 1877, 1879, 1881, 1882, 1888, 1892, 1893, 1894, 1897, 1898, 1899, 1900, 1902, 1911, 1922], "occur": [1, 14, 16, 19, 23, 24, 32, 35, 45, 46, 52, 57, 62, 77, 191, 309, 1017, 1057, 1181, 1187, 1197, 1227, 1339, 1455, 1499, 1643, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1672, 1856, 1867, 1871, 1876, 1877, 1880, 1884, 1891, 1895, 1901, 1907, 1909, 1915, 1918, 1922], "increas": [1, 2, 4, 8, 14, 33, 35, 41, 49, 57, 671, 845, 889, 928, 982, 1014, 1057, 1145, 1146, 1324, 1333, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1428, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1556, 1557, 1565, 1670, 1676, 1677, 1681, 1683, 1685, 1737, 1745, 1823, 1838, 1855, 1863, 1879, 1880, 1886, 1903, 1911], "fill": [1, 17, 35, 149, 168, 252, 253, 254, 280, 311, 315, 371, 394, 438, 439, 440, 442, 447, 474, 599, 614, 915, 1045, 1058, 1060, 1111, 1112, 1214, 1225, 1227, 1360, 1459, 1507, 1553, 1647, 1648, 1710, 1711, 1712, 1713, 1714, 1715, 1802, 1849, 1850, 1853, 1855, 1861, 1871, 1872, 1875, 1880, 1882, 1893, 1897, 1911, 1918], "floattensor": [1, 35, 315, 480, 677, 678, 679, 680, 681, 726, 899, 900, 912, 1131, 1359, 1360, 1419, 1459, 1743, 1914, 1917], "end": [1, 8, 9, 10, 23, 32, 33, 35, 41, 45, 49, 60, 65, 355, 356, 529, 751, 775, 788, 811, 812, 856, 913, 951, 958, 1018, 1047, 1057, 1096, 1110, 1137, 1143, 1144, 1181, 1184, 1204, 1209, 1239, 1249, 1251, 1254, 1256, 1270, 1315, 1316, 1331, 1332, 1333, 1350, 1352, 1358, 1362, 1368, 1369, 1372, 1373, 1374, 1375, 1376, 1377, 1383, 1386, 1387, 1402, 1407, 1410, 1411, 1416, 1418, 1423, 1424, 1427, 1431, 1434, 1444, 1447, 1453, 1458, 1465, 1498, 1507, 1519, 1520, 1596, 1603, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1675, 1680, 1717, 1750, 1753, 1756, 1771, 1823, 1834, 1835, 1847, 1853, 1854, 1855, 1856, 1857, 1869, 1876, 1877, 1880, 1881, 1882, 1884, 1885, 1891, 1894, 1895, 1898, 1901, 1902, 1905, 1907, 1912], "reason": [1, 4, 9, 10, 12, 14, 17, 23, 32, 35, 37, 57, 62, 671, 832, 1078, 1080, 1184, 1199, 1200, 1219, 1220, 1247, 1284, 1332, 1356, 1416, 1517, 1565, 1592, 1593, 1608, 1733, 1854, 1856, 1857, 1863, 1877, 1881, 1883, 1891, 1893, 1895, 1907, 1914, 1922], "synchron": [1, 4, 5, 14, 28, 29, 33, 37, 39, 43, 52, 57, 64, 868, 960, 961, 963, 971, 991, 1031, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1231, 1232, 1238, 1241, 1244, 1245, 1247, 1248, 1256, 1455, 1596, 1642, 1644, 1723, 1852, 1879, 1880, 1881, 1886, 1890, 1900, 1907], "fall": [1, 3, 8, 26, 32, 786, 899, 1146, 1197, 1255, 1377, 1447, 1524, 1569, 1600, 1601, 1851, 1895, 1902], "below": [1, 2, 6, 10, 12, 14, 16, 17, 18, 19, 23, 26, 32, 33, 35, 41, 43, 44, 49, 52, 53, 54, 55, 65, 671, 725, 739, 748, 786, 805, 1000, 1044, 1045, 1046, 1047, 1048, 1057, 1085, 1087, 1091, 1129, 1137, 1184, 1200, 1240, 1241, 1246, 1253, 1285, 1347, 1348, 1349, 1368, 1370, 1377, 1386, 1388, 1412, 1413, 1414, 1416, 1431, 1447, 1468, 1498, 1524, 1569, 1596, 1608, 1642, 1672, 1742, 1782, 1813, 1823, 1826, 1827, 1828, 1829, 1854, 1856, 1857, 1859, 1863, 1864, 1869, 1870, 1876, 1877, 1880, 1881, 1882, 1885, 1886, 1888, 1890, 1892, 1893, 1895, 1898, 1899, 1900, 1902, 1904, 1907, 1908, 1909, 1912, 1915, 1918], "someth": [1, 4, 8, 12, 14, 16, 17, 22, 23, 59, 65, 892, 894, 1057, 1184, 1199, 1416, 1859, 1867, 1869, 1870, 1877, 1886, 1894, 1895, 1907, 1922], "wrong": [1, 16, 35, 65, 888, 1182, 1185, 1881, 1890, 1894, 1895, 1898], "incompat": [1, 10, 26, 62, 925, 1181, 1878, 1899], "due": [1, 4, 5, 6, 8, 14, 17, 19, 23, 33, 35, 41, 51, 57, 62, 65, 479, 871, 892, 893, 898, 952, 1196, 1219, 1220, 1247, 1273, 1356, 1370, 1459, 1468, 1526, 1565, 1636, 1650, 1672, 1803, 1854, 1872, 1880, 1881, 1885, 1886, 1892, 1895, 1902, 1903, 1907, 1909], "float64": [1, 24, 234, 439, 442, 571, 871, 946, 1100, 1109, 1131, 1166, 1184, 1213, 1219, 1220, 1222, 1224, 1240, 1416, 1565, 1658, 1659, 1695, 1703, 1742, 1743, 1746, 1784, 1785, 1786, 1787, 1788, 1789, 1816, 1842, 1847, 1888, 1891, 1911, 1913, 1914, 1917, 1918, 1923], "variant": [1, 6, 19, 22, 33, 849, 1214, 1225, 1238, 1241, 1313, 1316, 1658, 1659, 1660, 1672, 1825, 1852, 1853, 1887, 1905, 1917], "suppli": [1, 6, 8, 14, 23, 26, 27, 35, 992, 1422, 1654, 1857, 1880, 1911], "won": [1, 9, 14, 17, 23, 33, 37, 52, 60, 451, 1184, 1195, 1416, 1551, 1590, 1591, 1851, 1877, 1882, 1907, 1919], "go": [1, 2, 8, 12, 14, 17, 18, 27, 32, 35, 49, 54, 61, 65, 491, 492, 551, 889, 904, 1256, 1329, 1330, 1331, 1409, 1410, 1411, 1856, 1857, 1864, 1869, 1870, 1871, 1877, 1879, 1880, 1882, 1883, 1887, 1888, 1890, 1894, 1895, 1899, 1914, 1916], "addmm": [1, 22, 101, 1794, 1853, 1855, 1870, 1891, 1897, 1911], "c": [1, 2, 4, 9, 10, 14, 16, 17, 21, 22, 23, 26, 32, 35, 41, 50, 60, 65, 254, 329, 491, 512, 608, 676, 812, 868, 871, 890, 923, 934, 937, 952, 994, 1000, 1034, 1049, 1052, 1057, 1103, 1104, 1105, 1114, 1115, 1119, 1124, 1127, 1137, 1184, 1194, 1206, 1213, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1229, 1230, 1233, 1235, 1239, 1240, 1242, 1244, 1246, 1247, 1305, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1352, 1355, 1356, 1357, 1361, 1363, 1364, 1365, 1371, 1379, 1380, 1381, 1384, 1385, 1387, 1388, 1398, 1399, 1400, 1404, 1409, 1410, 1411, 1412, 1413, 1414, 1419, 1420, 1421, 1423, 1428, 1429, 1437, 1438, 1439, 1440, 1441, 1442, 1450, 1455, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1480, 1498, 1499, 1511, 1515, 1550, 1556, 1557, 1565, 1603, 1631, 1633, 1634, 1635, 1642, 1643, 1689, 1705, 1721, 1759, 1779, 1793, 1798, 1818, 1835, 1852, 1853, 1854, 1855, 1856, 1857, 1861, 1870, 1871, 1879, 1880, 1881, 1883, 1885, 1887, 1894, 1896, 1899, 1908, 1909, 1911, 1912, 1915, 1916, 1922], "addmm_": [1, 1855, 1870, 1911], "d": [1, 2, 14, 16, 23, 24, 32, 33, 35, 40, 41, 58, 65, 307, 315, 329, 464, 505, 507, 509, 535, 574, 608, 677, 681, 856, 871, 890, 912, 913, 915, 922, 923, 924, 928, 934, 1044, 1046, 1056, 1057, 1070, 1074, 1075, 1076, 1077, 1082, 1083, 1086, 1087, 1092, 1093, 1094, 1097, 1098, 1099, 1125, 1126, 1141, 1142, 1149, 1158, 1181, 1185, 1189, 1226, 1227, 1277, 1288, 1308, 1323, 1331, 1332, 1336, 1346, 1350, 1351, 1355, 1356, 1357, 1359, 1361, 1363, 1368, 1370, 1381, 1386, 1388, 1400, 1411, 1425, 1431, 1455, 1464, 1465, 1467, 1480, 1515, 1526, 1532, 1559, 1583, 1584, 1604, 1637, 1642, 1643, 1670, 1690, 1708, 1717, 1729, 1737, 1742, 1793, 1798, 1811, 1812, 1818, 1821, 1826, 1827, 1828, 1829, 1838, 1844, 1846, 1851, 1855, 1864, 1870, 1871, 1872, 1875, 1877, 1880, 1882, 1883, 1885, 1886, 1893, 1895, 1907, 1908, 1911, 1912, 1916, 1917], "best": [1, 2, 8, 14, 15, 21, 27, 29, 32, 35, 41, 53, 57, 60, 852, 853, 908, 931, 944, 1199, 1200, 1229, 1422, 1672, 1685, 1852, 1854, 1856, 1869, 1875, 1876, 1877, 1882, 1884, 1899, 1907, 1911], "stabil": [1, 14, 23, 1215, 1271, 1333, 1334, 1335, 1336, 1370, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1452, 1455, 1512, 1573, 1604, 1637, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1672, 1705, 1883], "respect": [1, 2, 6, 9, 35, 36, 39, 41, 50, 52, 57, 63, 64, 65, 191, 204, 480, 571, 594, 680, 681, 682, 751, 786, 810, 832, 876, 882, 884, 898, 900, 904, 905, 939, 956, 1045, 1047, 1048, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1124, 1137, 1184, 1215, 1219, 1220, 1229, 1239, 1242, 1244, 1247, 1256, 1288, 1310, 1332, 1339, 1347, 1348, 1349, 1353, 1368, 1370, 1386, 1416, 1417, 1431, 1461, 1463, 1464, 1465, 1466, 1468, 1506, 1515, 1592, 1593, 1610, 1614, 1616, 1638, 1671, 1685, 1776, 1779, 1802, 1818, 1871, 1876, 1877, 1880, 1882, 1885, 1888, 1889, 1900, 1905, 1911, 1912, 1913, 1918], "describ": [1, 6, 8, 9, 10, 19, 32, 33, 37, 39, 40, 43, 44, 50, 52, 57, 65, 505, 783, 784, 785, 806, 807, 808, 832, 850, 929, 983, 1000, 1017, 1057, 1137, 1204, 1244, 1324, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1354, 1355, 1356, 1357, 1358, 1361, 1363, 1364, 1365, 1371, 1374, 1377, 1379, 1380, 1381, 1383, 1388, 1407, 1409, 1410, 1411, 1422, 1423, 1430, 1434, 1447, 1455, 1463, 1464, 1465, 1467, 1498, 1510, 1511, 1520, 1553, 1683, 1823, 1852, 1854, 1856, 1857, 1875, 1876, 1877, 1880, 1881, 1884, 1885, 1887, 1888, 1893, 1895, 1899, 1901, 1902, 1905, 1908, 1909, 1918], "expos": [1, 2, 9, 18, 35, 39, 57, 64, 65, 786, 1110, 1877, 1880, 1887, 1899, 1902, 1922], "namespac": [1, 65, 1031, 1854, 1858, 1861, 1882, 1888, 1895, 1900, 1905, 1922], "defin": [1, 2, 3, 4, 6, 10, 12, 17, 20, 26, 27, 32, 33, 35, 36, 37, 40, 41, 43, 44, 50, 52, 53, 57, 62, 65, 428, 438, 440, 442, 509, 557, 783, 788, 790, 829, 850, 851, 852, 853, 880, 881, 882, 883, 1014, 1040, 1057, 1058, 1077, 1105, 1111, 1127, 1129, 1143, 1145, 1146, 1173, 1184, 1206, 1213, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1229, 1230, 1233, 1235, 1236, 1240, 1241, 1242, 1244, 1246, 1247, 1253, 1289, 1353, 1358, 1372, 1373, 1374, 1375, 1382, 1384, 1385, 1416, 1422, 1434, 1449, 1451, 1456, 1458, 1480, 1515, 1565, 1571, 1587, 1596, 1614, 1616, 1623, 1624, 1644, 1647, 1652, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1677, 1680, 1683, 1701, 1710, 1712, 1714, 1721, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1779, 1781, 1823, 1826, 1827, 1828, 1829, 1847, 1849, 1851, 1854, 1857, 1859, 1861, 1869, 1870, 1872, 1877, 1880, 1881, 1885, 1886, 1888, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1905, 1907, 1911, 1912, 1917, 1918, 1919, 1922], "unlist": 1, "downstream": [1, 4, 14, 17, 23, 1867], "stabl": [1, 2, 3, 35, 41, 52, 53, 721, 722, 723, 724, 736, 737, 747, 752, 753, 754, 755, 756, 867, 1057, 1219, 1220, 1224, 1229, 1237, 1241, 1244, 1247, 1249, 1256, 1333, 1775, 1852, 1855, 1875, 1878, 1892, 1907], "believ": [1, 9], "unstabl": [1, 41, 1219, 1220, 1247, 1264, 1273, 1534, 1802, 1912], "__matmul__": 1, "addbmm": [1, 95, 912, 1855, 1891, 1897], "addmv": [1, 103, 1855, 1870, 1897], "addr": [1, 35, 105, 1855, 1897], "baddbmm": [1, 147, 1855, 1891, 1897], "bmm": [1, 1837, 1853, 1855, 1870, 1872, 1891, 1892, 1897, 1911], "chain_matmul": [1, 1855, 1897], "multi_dot": [1, 934], "conv1d": [1, 699, 703, 706, 716, 732, 1347, 1355, 1392, 1837, 1855, 1897, 1902, 1904], "conv2d": [1, 700, 704, 707, 709, 717, 733, 783, 805, 1184, 1193, 1195, 1199, 1200, 1348, 1356, 1393, 1416, 1417, 1423, 1444, 1467, 1623, 1837, 1854, 1855, 1865, 1895, 1897, 1902, 1904, 1905, 1916, 1921], "conv3d": [1, 701, 705, 708, 710, 718, 734, 1349, 1357, 1394, 1837, 1855, 1897, 1902, 1904], "conv_transpose1d": [1, 1855, 1897, 1904], "conv_transpose2d": [1, 1855, 1897, 1904], "conv_transpose3d": [1, 1855, 1897, 1904], "grucel": [1, 1891, 1902, 1904, 1905], "lstmcell": [1, 1891, 1902, 1904, 1905], "matmul": [1, 3, 15, 24, 924, 944, 1124, 1288, 1467, 1691, 1701, 1745, 1802, 1855, 1870, 1872, 1880, 1891, 1897, 1904, 1911], "mv": [1, 24, 1195, 1837, 1855, 1870, 1897, 1911], "prelu": [1, 1417, 1855, 1897, 1904], "rnncell": [1, 1902, 1904, 1905], "__pow__": 1, "__rdiv__": 1, "__rpow__": 1, "__rtruediv__": 1, "aco": [1, 89, 618, 619, 857, 1853, 1855, 1870, 1897, 1918], "asin": [1, 136, 620, 621, 859, 1853, 1855, 1870, 1897, 1911], "cosh": [1, 198, 628, 629, 675, 1853, 1855, 1870, 1897], "cosine_embedding_loss": [1, 1855, 1897], "cdist": [1, 1880, 1897], "cosine_similar": [1, 1465, 1855, 1897], "cross_entropi": [1, 1855], "cumprod": [1, 208, 1855, 1870, 1897], "cumsum": [1, 210, 1040, 1837, 1855, 1870, 1897], "dist": [1, 33, 35, 36, 39, 41, 53, 57, 935, 936, 1213, 1219, 1220, 1221, 1223, 1224, 1225, 1229, 1230, 1241, 1242, 1245, 1247, 1248, 1271, 1274, 1425, 1455, 1596, 1603, 1802, 1855, 1881, 1897, 1907, 1909], "erfinv": [1, 245, 1855, 1870, 1897, 1911, 1912], "exp": [1, 2, 41, 247, 634, 635, 761, 894, 895, 897, 1100, 1243, 1263, 1271, 1333, 1338, 1352, 1358, 1382, 1405, 1406, 1420, 1430, 1443, 1446, 1448, 1449, 1451, 1452, 1456, 1489, 1535, 1558, 1566, 1567, 1571, 1573, 1576, 1603, 1698, 1759, 1760, 1781, 1798, 1853, 1855, 1870, 1877, 1895, 1897, 1912], "expm1": [1, 251, 636, 637, 1853, 1855, 1870, 1897, 1911, 1912], "group_norm": [1, 1855, 1897, 1904], "hinge_embedding_loss": [1, 1855, 1897], "kl_div": [1, 1855, 1897], "l1_loss": [1, 1855, 1897], "layer_norm": [1, 1388, 1855, 1897, 1904], "log": [1, 13, 14, 17, 20, 23, 26, 32, 33, 41, 43, 45, 46, 49, 50, 54, 370, 371, 644, 651, 671, 1067, 1259, 1261, 1263, 1264, 1271, 1298, 1324, 1332, 1333, 1352, 1370, 1382, 1405, 1406, 1420, 1423, 1430, 1448, 1449, 1452, 1512, 1517, 1527, 1534, 1535, 1550, 1558, 1571, 1573, 1596, 1852, 1853, 1855, 1863, 1867, 1870, 1877, 1880, 1882, 1895, 1897, 1901, 1912, 1916, 1919, 1920, 1921], "log_softmax": [1, 1339, 1382, 1499, 1550, 1571, 1855, 1871, 1897, 1912], "log10": [1, 365, 645, 646, 1853, 1855, 1870, 1897], "log1p": [1, 367, 647, 648, 1853, 1855, 1870, 1897, 1911, 1912], "log2": [1, 369, 649, 650, 1853, 1855, 1870, 1897, 1912], "margin_ranking_loss": [1, 1855, 1897], "mse_loss": [1, 61, 1113, 1855, 1897], "multilabel_margin_loss": [1, 1855, 1897], "multi_margin_loss": [1, 1855, 1897], "nll_loss": [1, 1855, 1897], "norm": [1, 41, 57, 59, 65, 693, 694, 695, 696, 697, 698, 932, 1051, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1215, 1219, 1228, 1229, 1236, 1241, 1253, 1359, 1360, 1407, 1425, 1460, 1461, 1462, 1463, 1464, 1506, 1507, 1551, 1555, 1600, 1604, 1613, 1614, 1619, 1622, 1623, 1637, 1640, 1660, 1722, 1855, 1859, 1876, 1877, 1885, 1888, 1891, 1897], "normal": [1, 2, 33, 39, 52, 57, 65, 77, 330, 345, 371, 447, 547, 956, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1145, 1181, 1184, 1189, 1219, 1261, 1328, 1334, 1335, 1336, 1355, 1356, 1357, 1361, 1371, 1379, 1380, 1381, 1388, 1398, 1399, 1400, 1404, 1443, 1455, 1459, 1460, 1461, 1462, 1463, 1485, 1515, 1516, 1525, 1529, 1533, 1559, 1600, 1601, 1604, 1619, 1627, 1628, 1637, 1640, 1669, 1685, 1705, 1714, 1715, 1722, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1798, 1837, 1851, 1852, 1853, 1854, 1855, 1859, 1870, 1872, 1875, 1877, 1880, 1883, 1895, 1897, 1899, 1904, 1907, 1912, 1916, 1918, 1919, 1923], "pdist": [1, 1425, 1855, 1897], "poisson_nll_loss": [1, 1855, 1897], "pow": [1, 2, 462, 488, 892, 893, 896, 1100, 1853, 1855, 1857, 1870, 1876, 1877, 1897, 1911, 1917], "prod": [1, 49, 315, 509, 1074, 1076, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1092, 1094, 1249, 1250, 1359, 1363, 1467, 1837, 1853, 1855, 1870, 1897, 1911], "reciproc": [1, 478, 654, 655, 1732, 1853, 1855, 1870, 1897], "rsqrt": [1, 503, 1853, 1855, 1870, 1897], "sinh": [1, 527, 662, 663, 873, 1853, 1855, 1870, 1897, 1911], "smooth_l1_loss": [1, 1855, 1897], "soft_margin_loss": [1, 1855, 1897], "softmax": [1, 41, 787, 1324, 1352, 1382, 1406, 1450, 1498, 1517, 1527, 1534, 1565, 1572, 1778, 1855, 1870, 1871, 1872, 1880, 1897, 1904, 1911, 1912], "softmin": [1, 1855], "softplu": [1, 41, 1415, 1545, 1855, 1897], "sum": [1, 2, 12, 13, 14, 17, 23, 32, 35, 36, 39, 41, 43, 57, 62, 63, 65, 488, 509, 557, 737, 884, 892, 893, 894, 895, 896, 897, 898, 904, 905, 909, 956, 972, 973, 974, 1039, 1040, 1057, 1117, 1118, 1119, 1124, 1161, 1215, 1236, 1240, 1253, 1261, 1262, 1263, 1271, 1306, 1314, 1332, 1333, 1339, 1349, 1350, 1352, 1353, 1360, 1363, 1370, 1376, 1377, 1382, 1383, 1384, 1385, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1449, 1451, 1464, 1465, 1467, 1487, 1488, 1498, 1499, 1507, 1512, 1517, 1527, 1536, 1537, 1550, 1558, 1571, 1572, 1596, 1619, 1624, 1625, 1643, 1677, 1723, 1761, 1779, 1781, 1821, 1823, 1837, 1852, 1853, 1855, 1857, 1861, 1867, 1870, 1876, 1877, 1880, 1881, 1882, 1883, 1888, 1891, 1895, 1897, 1907, 1908, 1911, 1912, 1917], "renorm": [1, 484, 1359, 1360, 1506, 1507, 1855, 1897], "tan": [1, 566, 666, 667, 874, 1853, 1855, 1870, 1897, 1911, 1916], "triplet_margin_loss": [1, 1855, 1897], "addcdiv": [1, 97, 1855, 1897], "addcmul": [1, 99, 1855, 1897], "atan2": [1, 141, 862, 1853, 1855, 1870, 1897], "bilinear": [1, 770, 776, 777, 1057, 1468, 1469, 1515, 1526, 1584, 1585, 1837, 1855, 1897], "cross": [1, 8, 9, 17, 37, 41, 43, 1332, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1487, 1488, 1498, 1855, 1880, 1894, 1897], "dot": [1, 3, 26, 62, 63, 608, 893, 895, 896, 897, 1036, 1037, 1038, 1039, 1115, 1125, 1161, 1204, 1251, 1252, 1278, 1332, 1333, 1352, 1363, 1376, 1383, 1407, 1422, 1423, 1465, 1565, 1798, 1841, 1842, 1843, 1844, 1855, 1870, 1885, 1897, 1899], "grid_sampl": [1, 1480, 1837, 1855, 1897], "index_put": [1, 1837, 1855, 1897], "scatter_add": [1, 1853, 1855, 1897], "tensordot": [1, 1161, 1249, 1250, 1859, 1880, 1897], "binari": [1, 3, 26, 27, 33, 41, 43, 45, 50, 52, 65, 149, 726, 914, 1277, 1332, 1333, 1422, 1487, 1488, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1651, 1653, 1852, 1858, 1870, 1871, 1887, 1895, 1899, 1916], "nativ": [1, 3, 24, 33, 40, 57, 65, 983, 1114, 1194, 1600, 1601, 1745, 1854, 1857, 1869, 1880, 1882, 1898, 1899, 1907], "intervent": [1, 9, 1907], "mixtur": [1, 41, 1352, 1498], "bceloss": [1, 1333, 1487], "aren": [1, 9, 62, 65, 1114, 1870, 1877, 1908, 1922], "mean": [1, 3, 4, 6, 8, 9, 14, 17, 19, 20, 27, 29, 32, 33, 35, 37, 39, 41, 52, 54, 57, 58, 60, 63, 64, 65, 248, 315, 329, 371, 447, 487, 509, 749, 751, 772, 785, 787, 852, 853, 912, 925, 956, 1113, 1115, 1194, 1284, 1301, 1306, 1311, 1315, 1316, 1322, 1323, 1324, 1326, 1327, 1328, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1350, 1352, 1354, 1358, 1360, 1361, 1362, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1386, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1402, 1403, 1405, 1406, 1407, 1408, 1415, 1419, 1420, 1421, 1423, 1424, 1430, 1431, 1434, 1435, 1436, 1443, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1464, 1465, 1466, 1486, 1487, 1488, 1496, 1498, 1499, 1507, 1508, 1512, 1523, 1524, 1527, 1528, 1532, 1538, 1546, 1547, 1548, 1549, 1550, 1558, 1569, 1570, 1581, 1582, 1596, 1644, 1672, 1705, 1714, 1715, 1759, 1779, 1796, 1797, 1803, 1837, 1839, 1840, 1851, 1853, 1854, 1855, 1856, 1867, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1880, 1881, 1882, 1884, 1885, 1888, 1894, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1907, 1908, 1909, 1911], "doesn": [1, 2, 3, 8, 9, 23, 24, 32, 35, 37, 60, 62, 64, 65, 814, 817, 871, 888, 898, 961, 982, 1114, 1125, 1191, 1197, 1223, 1247, 1255, 1264, 1344, 1345, 1346, 1353, 1382, 1449, 1490, 1491, 1492, 1527, 1571, 1596, 1597, 1619, 1661, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1776, 1779, 1844, 1853, 1854, 1857, 1858, 1870, 1872, 1877, 1878, 1880, 1882, 1883, 1887, 1890, 1894, 1898, 1900, 1908, 1911], "help": [1, 2, 5, 8, 9, 16, 17, 23, 24, 26, 32, 33, 35, 49, 52, 57, 62, 65, 899, 900, 908, 982, 1014, 1114, 1115, 1125, 1184, 1185, 1203, 1285, 1297, 1298, 1355, 1356, 1357, 1361, 1416, 1603, 1752, 1844, 1851, 1857, 1864, 1870, 1871, 1876, 1877, 1878, 1880, 1881, 1883, 1886, 1888, 1891, 1895, 1896, 1899, 1907, 1908, 1911, 1919], "revers": [1, 41, 63, 65, 505, 725, 784, 892, 894, 1075, 1077, 1097, 1117, 1119, 1124, 1251, 1386, 1429, 1557, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1626, 1825, 1838, 1855, 1856, 1857, 1877, 1881, 1883, 1897, 1917], "therefor": [1, 4, 6, 17, 32, 33, 35, 41, 42, 50, 57, 60, 441, 535, 898, 913, 922, 1003, 1091, 1108, 1110, 1113, 1141, 1142, 1196, 1199, 1229, 1242, 1359, 1360, 1467, 1506, 1507, 1515, 1638, 1677, 1857, 1876, 1877, 1880, 1882, 1884, 1887, 1895, 1909], "mani": [1, 4, 8, 12, 14, 16, 17, 19, 22, 23, 24, 26, 32, 33, 35, 41, 52, 57, 61, 62, 65, 83, 396, 671, 880, 882, 892, 894, 1057, 1196, 1339, 1672, 1771, 1819, 1826, 1827, 1828, 1829, 1854, 1856, 1870, 1875, 1877, 1878, 1879, 1880, 1882, 1883, 1887, 1888, 1891, 1895, 1898, 1902, 1909, 1911, 1914, 1916, 1917, 1919], "sigmoid": [1, 41, 65, 518, 658, 659, 751, 786, 1332, 1333, 1359, 1368, 1369, 1386, 1387, 1445, 1487, 1514, 1568, 1853, 1855, 1870, 1871, 1875, 1896, 1897, 1904, 1912], "right": [1, 3, 8, 10, 14, 18, 21, 35, 37, 41, 57, 65, 811, 856, 913, 920, 922, 923, 928, 933, 1051, 1057, 1098, 1101, 1102, 1106, 1137, 1141, 1142, 1146, 1150, 1181, 1203, 1228, 1233, 1244, 1246, 1247, 1255, 1261, 1262, 1306, 1324, 1329, 1330, 1331, 1332, 1333, 1344, 1345, 1346, 1363, 1370, 1383, 1384, 1385, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1419, 1420, 1421, 1425, 1426, 1432, 1464, 1467, 1468, 1469, 1470, 1515, 1535, 1553, 1601, 1608, 1661, 1675, 1676, 1717, 1737, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1798, 1818, 1823, 1825, 1838, 1851, 1855, 1857, 1869, 1870, 1871, 1877, 1882, 1885, 1895, 1898, 1905, 1909, 1912], "entropi": [1, 41, 1332, 1352, 1420, 1487, 1488, 1498, 1912], "combin": [1, 4, 12, 17, 32, 33, 35, 52, 63, 64, 608, 680, 703, 704, 705, 706, 707, 708, 709, 710, 784, 845, 881, 1014, 1086, 1087, 1092, 1094, 1146, 1278, 1288, 1333, 1363, 1377, 1422, 1467, 1509, 1532, 1615, 1854, 1855, 1856, 1876, 1880, 1883, 1895, 1897, 1898, 1900, 1902, 1905, 1907], "bcewithlogitsloss": [1, 1488], "bcewithlogit": 1, "safe": [1, 14, 17, 23, 35, 52, 64, 65, 1004, 1005, 1024, 1025, 1596, 1658, 1659, 1854, 1857, 1876, 1877, 1880, 1883, 1887, 1907], "_convolut": [1, 1897], "avg_pool3d": [1, 1855, 1897, 1904], "grid_sampler_2d": [1, 1853, 1855, 1897], "_grid_sampler_2d_cpu_fallback": [1, 1897], "grid_sampler_3d": [1, 1855, 1897], "polar": [1, 41, 1243, 1855, 1897], "quantil": [1, 1284, 1313, 1855, 1897, 1912], "nanquantil": [1, 1855, 1897], "stft": [1, 913, 922, 1141, 1142, 1181, 1203, 1855, 1897], "view_as_complex": [1, 24, 1855, 1897], "choleski": [1, 3, 41, 936, 937, 1214, 1220, 1256, 1855, 1897], "cholesky_invers": [1, 3, 1855, 1897], "cholesky_solv": [1, 3, 1855, 1897], "invers": [1, 41, 674, 675, 873, 876, 931, 936, 937, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1181, 1224, 1225, 1237, 1241, 1244, 1249, 1250, 1347, 1348, 1349, 1359, 1360, 1363, 1412, 1413, 1414, 1467, 1506, 1507, 1542, 1543, 1544, 1605, 1608, 1632, 1677, 1683, 1833, 1852, 1855, 1857, 1891, 1897, 1912], "lu_solv": [1, 3, 1231, 1855, 1897], "orgqr": [1, 1855, 1897], "ormqr": [1, 1129, 1223, 1855, 1897], "pinvers": [1, 1229, 1855, 1897], "max_pool3d": [1, 1855, 1897, 1904], "max_unpool2d": [1, 1510, 1540, 1855, 1897], "max_unpool3d": [1, 1511, 1541, 1855, 1897], "adaptive_avg_pool3d": [1, 1855, 1882, 1897, 1904], "reflection_pad1d": [1, 1855, 1897], "reflection_pad2d": [1, 1853, 1855, 1897], "replication_pad1d": [1, 1855, 1897], "replication_pad2d": [1, 1853, 1855, 1897], "replication_pad3d": [1, 1853, 1855, 1897], "ctc_loss": [1, 1339, 1855, 1897], "fft_fft": [1, 1855, 1897], "fft_ifft": [1, 1855, 1897], "fft_fft2": [1, 1855, 1897], "fft_ifft2": [1, 1855, 1897], "fft_fftn": [1, 1855, 1897], "fft_ifftn": [1, 1855, 1897], "fft_rfft": [1, 1855, 1897], "fft_irfft": [1, 1855, 1897], "fft_rfft2": [1, 1855, 1897], "fft_irfft2": [1, 1855, 1897], "fft_rfftn": [1, 1855, 1897], "fft_irfftn": [1, 1855, 1897], "fft_hfft": [1, 1855, 1897], "fft_ihfft": [1, 1855, 1897], "linalg_matrix_norm": [1, 1855, 1897], "linalg_cond": [1, 1855, 1897], "linalg_matrix_rank": [1, 1855, 1897], "linalg_solv": [1, 1855, 1897], "linalg_choleski": [1, 1855, 1897], "linalg_svdv": [1, 1855, 1897], "linalg_eigv": [1, 1855, 1897], "linalg_eigvalsh": [1, 1855, 1897], "linalg_inv": [1, 1855, 1897], "linalg_householder_product": [1, 1855, 1897], "linalg_tensorinv": [1, 1855, 1897], "linalg_tensorsolv": [1, 1855, 1897], "fake_quantize_per_tensor_affin": [1, 1855, 1897], "eig": [1, 1220, 1221, 1247, 1891], "geqrf": [1, 1223, 1689, 1855, 1897], "lstsq": [1, 1129, 1215, 1241], "_lu_with_info": [1, 1897], "qr": [1, 3, 1129, 1219, 1220, 1223, 1229, 1247, 1603, 1689, 1855, 1897], "solv": [1, 8, 14, 18, 24, 937, 1129, 1137, 1215, 1224, 1226, 1227, 1230, 1231, 1233, 1237, 1245, 1246, 1250, 1256, 1274, 1825, 1877, 1885, 1891, 1894], "svd": [1, 3, 24, 1219, 1220, 1229, 1241, 1248, 1264, 1608, 1691, 1803, 1853, 1855, 1891, 1897, 1911], "symeig": 1, "triangular_solv": [1, 1855, 1897], "fractional_max_pool2d": [1, 1855, 1897], "fractional_max_pool3d": [1, 1855, 1897], "adaptive_max_pool3d": [1, 1855, 1897], "multilabel_margin_loss_forward": [1, 1897], "linalg_qr": [1, 1855, 1897], "linalg_cholesky_ex": [1, 1855, 1897], "linalg_svd": [1, 1855, 1897], "linalg_eig": [1, 1855, 1897], "linalg_eigh": [1, 1855, 1897], "linalg_lstsq": [1, 1855, 1897], "linalg_inv_ex": [1, 1855, 1897], "cat": [1, 35, 41, 65, 535, 738, 739, 748, 784, 787, 947, 948, 1285, 1435, 1783, 1853, 1854, 1855, 1870, 1895, 1897, 1899, 1902, 1904, 1911, 1920], "stack": [1, 9, 13, 14, 17, 18, 23, 29, 32, 33, 35, 41, 45, 61, 62, 65, 751, 908, 942, 1018, 1019, 1056, 1123, 1125, 1149, 1285, 1339, 1368, 1386, 1387, 1431, 1460, 1462, 1633, 1844, 1846, 1852, 1855, 1872, 1880, 1881, 1884, 1896, 1897, 1899, 1901, 1904, 1911], "index_copi": [1, 1837, 1855, 1897], "implement": [2, 3, 6, 9, 17, 19, 28, 32, 33, 35, 36, 37, 39, 40, 41, 44, 49, 50, 53, 57, 62, 65, 145, 505, 507, 509, 678, 729, 730, 731, 732, 733, 734, 751, 770, 772, 776, 784, 791, 810, 811, 812, 815, 816, 817, 869, 871, 884, 893, 899, 900, 954, 1057, 1100, 1105, 1110, 1117, 1118, 1120, 1121, 1184, 1191, 1193, 1194, 1197, 1239, 1242, 1255, 1256, 1284, 1324, 1339, 1353, 1368, 1384, 1385, 1416, 1422, 1428, 1435, 1452, 1461, 1463, 1515, 1553, 1565, 1573, 1596, 1600, 1601, 1603, 1604, 1608, 1619, 1632, 1636, 1637, 1640, 1651, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1683, 1701, 1708, 1721, 1730, 1733, 1770, 1779, 1802, 1803, 1818, 1834, 1837, 1856, 1857, 1858, 1861, 1864, 1869, 1872, 1873, 1875, 1876, 1877, 1879, 1880, 1882, 1883, 1884, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1898, 1899, 1900, 1902, 1905, 1907, 1908, 1911, 1912, 1915, 1917, 1919, 1922], "scalar": [2, 22, 35, 41, 92, 145, 149, 254, 307, 439, 580, 678, 679, 729, 730, 731, 732, 733, 734, 870, 871, 884, 892, 893, 896, 898, 917, 920, 928, 952, 956, 1052, 1057, 1072, 1105, 1111, 1137, 1144, 1161, 1175, 1208, 1209, 1278, 1285, 1313, 1324, 1332, 1333, 1339, 1350, 1352, 1353, 1370, 1376, 1377, 1382, 1383, 1388, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1465, 1517, 1559, 1642, 1647, 1648, 1652, 1685, 1698, 1700, 1702, 1720, 1721, 1737, 1785, 1786, 1787, 1788, 1789, 1816, 1834, 1835, 1847, 1849, 1850, 1853, 1855, 1856, 1857, 1867, 1872, 1875, 1877, 1882, 1885, 1895, 1907, 1911, 1914, 1916, 1918, 1919], "minim": [2, 8, 9, 14, 23, 810, 866, 1286, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1669, 1670, 1671, 1672, 1685, 1851, 1867, 1876, 1880, 1888, 1890, 1893, 1895, 1900, 1902, 1919], "exist": [2, 8, 9, 10, 12, 24, 26, 32, 35, 36, 37, 41, 43, 45, 50, 52, 53, 57, 61, 65, 77, 78, 248, 491, 783, 845, 869, 892, 893, 894, 895, 896, 897, 898, 899, 998, 1184, 1188, 1199, 1219, 1224, 1230, 1231, 1256, 1313, 1416, 1417, 1426, 1777, 1851, 1853, 1854, 1861, 1864, 1869, 1870, 1872, 1873, 1877, 1878, 1880, 1882, 1883, 1886, 1887, 1888, 1889, 1891, 1895, 1899, 1900, 1901, 1902, 1907, 1909, 1911, 1915, 1917, 1919], "declar": [2, 10, 26, 32, 53, 1856, 1857, 1858, 1882, 1895, 1899, 1900, 1919], "requires_grad": [2, 6, 13, 41, 63, 329, 438, 439, 440, 441, 442, 480, 488, 856, 871, 888, 890, 891, 899, 900, 902, 904, 905, 913, 922, 1003, 1058, 1059, 1060, 1061, 1070, 1075, 1093, 1110, 1111, 1112, 1115, 1125, 1141, 1142, 1159, 1184, 1203, 1254, 1270, 1332, 1333, 1352, 1359, 1360, 1370, 1382, 1383, 1407, 1408, 1416, 1422, 1423, 1430, 1463, 1464, 1487, 1488, 1498, 1550, 1596, 1597, 1598, 1599, 1636, 1641, 1647, 1648, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1747, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1779, 1784, 1785, 1786, 1787, 1788, 1789, 1816, 1837, 1844, 1849, 1850, 1853, 1855, 1859, 1870, 1871, 1872, 1880, 1882, 1883, 1888, 1893, 1895, 1897, 1907, 1908, 1917, 1918, 1919], "doubl": [2, 4, 43, 474, 480, 608, 740, 742, 743, 744, 745, 747, 757, 758, 772, 888, 890, 895, 899, 900, 929, 936, 946, 957, 1003, 1072, 1100, 1137, 1184, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1264, 1265, 1266, 1267, 1268, 1274, 1360, 1416, 1475, 1478, 1507, 1587, 1652, 1689, 1695, 1784, 1785, 1786, 1788, 1789, 1802, 1816, 1825, 1847, 1857, 1870, 1880, 1882, 1883, 1891, 1895, 1899, 1913, 1914, 1917, 1919], "bfloat16": [2, 33, 57, 1166, 1184, 1235, 1252, 1416, 1652, 1658, 1659, 1745, 1870, 1880, 1913, 1914, 1917, 1918, 1919, 1923], "cfloat": [2, 24, 35, 305, 476, 608, 936, 957, 1154, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1274, 1689, 1719, 1802, 1825, 1843, 1914, 1917, 1919], "cdoubl": [2, 24, 936, 957, 1184, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1274, 1416, 1689, 1802, 1825, 1914, 1917, 1919], "beta": [2, 3, 24, 58, 64, 94, 95, 100, 101, 102, 103, 104, 105, 146, 147, 315, 509, 545, 677, 680, 681, 682, 912, 958, 992, 993, 1000, 1001, 1003, 1141, 1203, 1278, 1288, 1334, 1335, 1336, 1371, 1377, 1379, 1380, 1381, 1388, 1404, 1447, 1452, 1455, 1532, 1533, 1565, 1569, 1573, 1658, 1659, 1660, 1662, 1668, 1672, 1705, 1763, 1765, 1776, 1780, 1794, 1852, 1853, 1855, 1865, 1880, 1895, 1902, 1907, 1911, 1914, 1919], "even": [2, 9, 16, 17, 32, 33, 35, 40, 43, 57, 64, 65, 535, 571, 806, 807, 808, 884, 956, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1088, 1089, 1090, 1093, 1124, 1169, 1196, 1213, 1215, 1219, 1220, 1221, 1222, 1236, 1240, 1242, 1243, 1247, 1248, 1253, 1278, 1284, 1353, 1455, 1490, 1491, 1492, 1553, 1596, 1603, 1641, 1643, 1683, 1730, 1741, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1802, 1842, 1854, 1857, 1858, 1867, 1872, 1876, 1877, 1880, 1882, 1884, 1886, 1888, 1890, 1891, 1892, 1893, 1898, 1899, 1900, 1909, 1914], "though": [2, 35, 65, 145, 785, 881, 884, 894, 1073, 1074, 1076, 1182, 1185, 1278, 1643, 1854, 1858, 1871, 1872, 1877, 1883, 1890, 1891, 1898, 1902], "signatur": [2, 16, 17, 32, 45, 57, 65, 392, 480, 547, 904, 905, 959, 1184, 1416, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1608, 1629, 1643, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1798, 1880, 1882, 1883, 1895, 1899, 1900, 1907, 1911, 1922], "veri": [2, 5, 8, 9, 14, 16, 17, 18, 22, 23, 29, 32, 33, 35, 61, 63, 65, 954, 1115, 1123, 1125, 1246, 1379, 1380, 1381, 1596, 1597, 1603, 1661, 1683, 1689, 1766, 1770, 1825, 1844, 1856, 1869, 1877, 1882, 1884, 1885, 1886, 1888, 1890, 1891, 1894, 1898, 1899, 1906, 1907, 1908, 1911], "unlik": [2, 4, 8, 41, 57, 63, 485, 1054, 1093, 1096, 1100, 1159, 1219, 1220, 1239, 1242, 1247, 1251, 1281, 1284, 1286, 1388, 1598, 1599, 1720, 1742, 1841, 1856, 1857, 1869, 1872, 1880, 1890, 1892, 1914, 1919], "coverag": [2, 8, 16, 58, 65, 1117, 1118, 1852, 1854, 1859, 1871, 1902, 1911, 1922], "plan": [2, 3, 8, 10, 22, 23, 35, 37, 40, 885, 1596, 1701, 1872, 1877, 1882, 1899, 1911], "consid": [2, 6, 9, 22, 33, 35, 43, 52, 57, 62, 64, 65, 685, 770, 776, 785, 892, 894, 895, 899, 937, 956, 1044, 1045, 1046, 1047, 1048, 1078, 1113, 1173, 1177, 1180, 1184, 1224, 1226, 1227, 1228, 1229, 1237, 1238, 1241, 1246, 1249, 1352, 1363, 1416, 1419, 1467, 1480, 1515, 1526, 1584, 1597, 1603, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1638, 1671, 1739, 1759, 1793, 1826, 1827, 1828, 1829, 1851, 1854, 1857, 1861, 1864, 1876, 1877, 1878, 1882, 1884, 1885, 1888, 1891, 1899, 1901, 1903, 1908, 1909, 1911, 1914, 1917, 1918, 1922], "ad": [2, 4, 10, 12, 14, 16, 19, 22, 26, 32, 33, 35, 39, 41, 49, 57, 60, 62, 63, 64, 65, 216, 217, 307, 313, 464, 507, 671, 677, 678, 679, 680, 681, 682, 726, 885, 886, 887, 892, 893, 894, 895, 899, 911, 912, 1057, 1061, 1117, 1118, 1120, 1159, 1184, 1197, 1261, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1422, 1423, 1425, 1430, 1444, 1455, 1459, 1467, 1493, 1494, 1495, 1512, 1539, 1540, 1541, 1565, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1608, 1615, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1641, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1705, 1706, 1707, 1747, 1776, 1780, 1794, 1851, 1852, 1853, 1854, 1856, 1861, 1867, 1871, 1876, 1883, 1885, 1887, 1888, 1899, 1902, 1905, 1911, 1916, 1919], "tutori": [2, 4, 10, 16, 18, 27, 35, 36, 39, 65, 885, 886, 887, 890, 1852, 1854, 1861, 1864, 1873, 1882, 1887, 1888, 1893, 1895, 1902], "how": [2, 4, 6, 8, 9, 10, 16, 17, 18, 27, 28, 32, 35, 37, 40, 44, 52, 53, 54, 57, 58, 59, 61, 62, 65, 480, 776, 783, 784, 787, 832, 850, 852, 853, 885, 886, 887, 890, 904, 905, 1040, 1061, 1114, 1123, 1137, 1159, 1184, 1194, 1255, 1363, 1416, 1467, 1468, 1553, 1584, 1596, 1629, 1641, 1721, 1745, 1747, 1760, 1771, 1852, 1854, 1856, 1857, 1861, 1864, 1866, 1869, 1870, 1871, 1873, 1876, 1879, 1881, 1883, 1884, 1885, 1888, 1890, 1892, 1893, 1895, 1900, 1902, 1905, 1907, 1908, 1909, 1916], "major": [2, 7, 8, 9, 10, 14, 16, 985, 1802, 1852, 1857, 1898], "build": [2, 9, 10, 16, 23, 26, 27, 35, 41, 65, 1184, 1193, 1416, 1462, 1480, 1515, 1852, 1854, 1864, 1873, 1877, 1895, 1900, 1902, 1908, 1916, 1917], "basic": [2, 4, 8, 10, 14, 17, 37, 52, 65, 1117, 1118, 1119, 1190, 1256, 1596, 1677, 1852, 1858, 1873, 1878, 1880, 1881, 1885, 1899, 1908, 1915, 1916], "jacobian": [2, 41, 58, 59, 61, 62, 884, 886, 892, 895, 897, 898, 899, 900, 1118, 1119, 1120, 1124, 1125, 1844, 1877, 1882, 1885], "hessian": [2, 58, 61, 62, 893, 896, 1118, 1119, 1875, 1883], "etc": [2, 4, 6, 13, 17, 24, 32, 33, 35, 41, 43, 52, 53, 57, 850, 851, 852, 1181, 1184, 1352, 1416, 1596, 1650, 1723, 1851, 1856, 1857, 1864, 1882, 1883, 1884, 1888, 1890, 1895, 1898, 1899, 1902, 1907, 1911, 1913, 1916, 1919], "user": [2, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 23, 24, 27, 32, 33, 35, 36, 37, 40, 41, 42, 43, 45, 49, 52, 53, 55, 57, 58, 61, 62, 64, 65, 145, 329, 723, 729, 730, 731, 736, 737, 747, 755, 785, 788, 790, 829, 845, 852, 853, 884, 890, 898, 961, 994, 1108, 1113, 1114, 1184, 1255, 1416, 1459, 1461, 1462, 1463, 1565, 1591, 1596, 1605, 1619, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1851, 1852, 1854, 1856, 1857, 1861, 1864, 1869, 1871, 1872, 1876, 1877, 1878, 1880, 1882, 1885, 1886, 1887, 1888, 1890, 1895, 1896, 1898, 1900, 1901, 1902, 1904, 1907, 1908, 1911, 1915, 1916, 1918, 1922], "lambda": [2, 32, 37, 41, 60, 63, 64, 65, 252, 480, 904, 905, 932, 1115, 1120, 1124, 1125, 1219, 1220, 1221, 1222, 1255, 1372, 1453, 1465, 1555, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1671, 1677, 1679, 1682, 1844, 1858, 1877, 1882, 1883, 1898, 1899, 1907, 1918, 1922], "three": [2, 3, 7, 10, 20, 35, 39, 40, 57, 59, 62, 65, 879, 1055, 1057, 1137, 1146, 1227, 1230, 1231, 1232, 1247, 1275, 1331, 1346, 1349, 1388, 1411, 1565, 1603, 1643, 1677, 1745, 1857, 1877, 1880, 1881, 1882, 1895, 1899, 1900, 1902, 1907, 1909, 1911, 1916], "anoth": [2, 6, 8, 12, 14, 17, 19, 22, 32, 33, 35, 37, 41, 42, 43, 54, 57, 65, 479, 958, 960, 961, 963, 1108, 1193, 1219, 1220, 1223, 1247, 1359, 1360, 1417, 1426, 1587, 1604, 1741, 1854, 1856, 1857, 1863, 1876, 1877, 1879, 1880, 1882, 1888, 1890, 1894, 1899, 1900, 1908, 1909, 1911, 1917, 1919], "constant": [2, 16, 17, 32, 65, 735, 766, 812, 813, 1040, 1097, 1098, 1099, 1181, 1184, 1188, 1199, 1231, 1256, 1341, 1342, 1343, 1360, 1363, 1370, 1425, 1447, 1467, 1512, 1515, 1553, 1604, 1653, 1669, 1674, 1677, 1823, 1855, 1857, 1876, 1882, 1888, 1892, 1895, 1898, 1911], "boolean": [2, 26, 41, 52, 65, 394, 396, 880, 916, 918, 919, 921, 960, 961, 963, 1062, 1128, 1140, 1173, 1174, 1175, 1176, 1177, 1180, 1208, 1256, 1272, 1277, 1317, 1334, 1335, 1336, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1416, 1455, 1565, 1605, 1608, 1701, 1796, 1797, 1820, 1839, 1840, 1856, 1858, 1882, 1914, 1916, 1917, 1918, 1919], "inform": [2, 3, 4, 5, 8, 9, 10, 17, 23, 28, 29, 31, 32, 33, 35, 36, 39, 43, 44, 45, 48, 52, 53, 57, 59, 65, 186, 203, 249, 307, 315, 480, 490, 507, 509, 609, 671, 726, 894, 899, 900, 904, 905, 915, 1061, 1092, 1094, 1114, 1159, 1181, 1184, 1200, 1213, 1220, 1229, 1344, 1345, 1346, 1347, 1348, 1349, 1377, 1386, 1412, 1413, 1414, 1416, 1422, 1431, 1443, 1459, 1461, 1463, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1507, 1526, 1565, 1584, 1585, 1586, 1596, 1629, 1641, 1653, 1700, 1727, 1747, 1752, 1777, 1837, 1854, 1857, 1863, 1864, 1872, 1873, 1877, 1879, 1880, 1881, 1882, 1887, 1888, 1891, 1895, 1896, 1899, 1901, 1902, 1914, 1916, 1917, 1918, 1921, 1923], "relat": [2, 7, 8, 10, 32, 35, 43, 56, 57, 62, 671, 1137, 1223, 1363, 1447, 1467, 1596, 1691, 1872, 1877, 1899, 1907, 1911, 1912, 1918, 1922], "mechan": [2, 9, 35, 46, 50, 52, 65, 870, 1061, 1159, 1184, 1416, 1565, 1641, 1747, 1816, 1852, 1869, 1872, 1881, 1882, 1887, 1888, 1905, 1907, 1908], "confus": [2, 9, 17, 1184, 1416, 1877, 1880, 1899, 1911], "receiv": [2, 8, 10, 17, 23, 32, 35, 39, 41, 62, 64, 1014, 1184, 1416, 1592, 1593, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1686, 1857, 1867, 1869, 1876, 1877, 1890, 1900, 1907, 1908, 1909, 1911], "memori": [2, 3, 4, 6, 14, 16, 18, 20, 22, 24, 33, 37, 39, 41, 42, 57, 61, 65, 145, 150, 165, 167, 170, 173, 174, 175, 190, 201, 204, 234, 248, 261, 291, 319, 325, 331, 333, 334, 387, 438, 439, 440, 441, 442, 451, 456, 479, 491, 492, 515, 516, 571, 594, 608, 725, 754, 869, 871, 884, 890, 899, 900, 926, 941, 958, 959, 962, 965, 966, 968, 982, 983, 992, 993, 996, 1000, 1002, 1003, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1021, 1022, 1023, 1027, 1057, 1058, 1059, 1060, 1108, 1109, 1110, 1112, 1113, 1114, 1119, 1121, 1125, 1184, 1201, 1229, 1292, 1293, 1294, 1301, 1360, 1386, 1387, 1416, 1459, 1460, 1461, 1463, 1565, 1583, 1596, 1603, 1629, 1641, 1648, 1650, 1651, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1710, 1711, 1713, 1714, 1715, 1716, 1816, 1837, 1844, 1850, 1852, 1854, 1865, 1869, 1871, 1872, 1877, 1882, 1890, 1895, 1900, 1901, 1902, 1907, 1911, 1913, 1914, 1915, 1917, 1918], "overlap": [2, 14, 22, 32, 33, 35, 39, 57, 65, 869, 899, 900, 1060, 1114, 1181, 1363, 1467, 1596, 1798, 1837, 1880, 1881, 1914], "dens": [2, 39, 213, 536, 537, 574, 575, 576, 577, 578, 579, 913, 922, 1141, 1142, 1203, 1256, 1672, 1773, 1776, 1779, 1780, 1783, 1784, 1785, 1786, 1788, 1789, 1794, 1803, 1837, 1872, 1892, 1911, 1914], "stride": [2, 13, 23, 24, 133, 216, 248, 333, 438, 439, 440, 441, 442, 491, 512, 535, 572, 574, 575, 576, 578, 579, 608, 703, 704, 705, 706, 707, 708, 709, 710, 716, 717, 718, 721, 722, 729, 730, 731, 732, 733, 734, 759, 760, 763, 764, 765, 773, 774, 856, 869, 913, 922, 1058, 1060, 1070, 1075, 1093, 1111, 1112, 1141, 1142, 1148, 1184, 1193, 1197, 1203, 1254, 1270, 1288, 1329, 1330, 1331, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1384, 1385, 1392, 1393, 1394, 1395, 1396, 1397, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1428, 1467, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1509, 1536, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1583, 1596, 1647, 1706, 1707, 1710, 1712, 1713, 1714, 1716, 1717, 1724, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1779, 1822, 1827, 1829, 1842, 1849, 1853, 1855, 1858, 1870, 1895, 1897, 1907, 1911, 1913, 1914, 1916, 1917, 1918], "thu": [2, 24, 32, 35, 41, 53, 57, 65, 776, 813, 816, 845, 1057, 1078, 1247, 1278, 1356, 1468, 1584, 1596, 1658, 1659, 1669, 1787, 1854, 1857, 1864, 1865, 1877, 1879, 1884, 1885, 1887, 1888, 1895, 1902, 1907, 1911, 1915, 1917, 1918], "rowmajor": [2, 1596], "contigu": [2, 24, 33, 37, 325, 491, 512, 608, 1362, 1419, 1555, 1596, 1718, 1724, 1802, 1855, 1871, 1872, 1897, 1904, 1911, 1913, 1915], "create_graph": [2, 145, 884, 892, 893, 894, 895, 896, 897, 898, 1855, 1876], "preserv": [2, 32, 41, 57, 65, 491, 770, 776, 845, 867, 870, 1098, 1099, 1114, 1188, 1194, 1417, 1426, 1468, 1526, 1584, 1654, 1733, 1737, 1775, 1816, 1854, 1865, 1870, 1872, 1875, 1880, 1883, 1892, 1895, 1907, 1911, 1914], "preexist": 2, "let": [2, 8, 9, 12, 16, 17, 22, 23, 32, 33, 40, 41, 53, 62, 65, 479, 488, 939, 1137, 1184, 1203, 1213, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1229, 1230, 1233, 1235, 1242, 1244, 1246, 1247, 1416, 1596, 1603, 1816, 1861, 1870, 1871, 1877, 1880, 1881, 1882, 1883, 1888, 1890, 1891, 1892, 1893, 1894, 1899, 1908, 1909, 1911, 1916], "first": [2, 5, 6, 8, 10, 12, 13, 14, 17, 22, 23, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 49, 52, 53, 57, 63, 65, 211, 248, 284, 580, 601, 677, 680, 682, 685, 751, 784, 785, 805, 845, 848, 850, 865, 866, 875, 880, 881, 882, 883, 898, 899, 912, 916, 917, 919, 920, 921, 924, 926, 928, 942, 957, 960, 971, 1045, 1047, 1048, 1049, 1054, 1057, 1062, 1075, 1077, 1096, 1110, 1115, 1116, 1118, 1119, 1120, 1124, 1125, 1128, 1137, 1140, 1148, 1149, 1150, 1161, 1173, 1182, 1191, 1196, 1197, 1203, 1208, 1213, 1216, 1223, 1239, 1242, 1249, 1250, 1252, 1255, 1256, 1272, 1278, 1281, 1284, 1285, 1286, 1288, 1304, 1306, 1312, 1317, 1320, 1324, 1330, 1331, 1337, 1345, 1346, 1348, 1349, 1359, 1360, 1362, 1367, 1368, 1382, 1385, 1386, 1401, 1408, 1410, 1411, 1431, 1444, 1497, 1583, 1587, 1596, 1605, 1606, 1608, 1619, 1629, 1635, 1658, 1659, 1660, 1661, 1662, 1668, 1671, 1672, 1676, 1680, 1683, 1685, 1691, 1701, 1702, 1728, 1729, 1737, 1765, 1779, 1782, 1787, 1817, 1818, 1822, 1827, 1829, 1835, 1838, 1841, 1844, 1846, 1851, 1854, 1856, 1857, 1864, 1866, 1869, 1870, 1872, 1876, 1877, 1880, 1882, 1884, 1885, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1900, 1901, 1902, 1907, 1908, 1909, 1911, 1912, 1916, 1920, 1922], "accord": [2, 10, 23, 43, 788, 852, 853, 871, 914, 926, 1055, 1147, 1244, 1277, 1306, 1324, 1360, 1587, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1677, 1683, 1702, 1766, 1790, 1817, 1845, 1857, 1867, 1871, 1872, 1875, 1888, 1892, 1894, 1899, 1909, 1918], "retain": [2, 10, 35, 684, 686, 687, 690, 865, 866, 871, 1188, 1205, 1236, 1240, 1253, 1271, 1281, 1283, 1284, 1286, 1289, 1311, 1312, 1313, 1314, 1643, 1699, 1702, 1733, 1796, 1797, 1801, 1826, 1827, 1828, 1829, 1839, 1840, 1869, 1890], "over": [2, 10, 14, 17, 18, 23, 32, 33, 35, 36, 40, 41, 43, 50, 53, 57, 58, 59, 60, 61, 62, 63, 65, 474, 671, 688, 729, 730, 731, 732, 733, 734, 757, 758, 763, 764, 765, 773, 774, 883, 908, 931, 969, 1014, 1016, 1020, 1034, 1035, 1036, 1037, 1038, 1039, 1057, 1113, 1117, 1119, 1123, 1125, 1137, 1145, 1184, 1199, 1216, 1236, 1240, 1252, 1253, 1255, 1263, 1283, 1285, 1314, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1360, 1363, 1364, 1365, 1371, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1388, 1404, 1407, 1408, 1409, 1410, 1411, 1416, 1419, 1420, 1421, 1423, 1430, 1444, 1447, 1448, 1450, 1455, 1464, 1467, 1474, 1475, 1476, 1477, 1478, 1479, 1482, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1510, 1511, 1527, 1533, 1536, 1537, 1539, 1540, 1541, 1550, 1551, 1558, 1565, 1591, 1600, 1640, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1672, 1706, 1707, 1722, 1781, 1783, 1796, 1797, 1798, 1801, 1818, 1833, 1839, 1840, 1844, 1857, 1867, 1869, 1870, 1871, 1876, 1878, 1879, 1881, 1882, 1883, 1885, 1888, 1890, 1891, 1898, 1907, 1908, 1911, 1919], "fact": [2, 4, 9, 57, 487, 913, 922, 950, 1137, 1141, 1142, 1219, 1220, 1247, 1854, 1882, 1885, 1895, 1908, 1911], "phase": [2, 14, 23, 33, 784, 1219, 1220, 1683, 1802, 1855, 1894], "recreat": [2, 22, 1877], "altern": [2, 10, 14, 32, 35, 65, 671, 805, 1117, 1118, 1146, 1191, 1255, 1444, 1461, 1463, 1534, 1596, 1648, 1672, 1744, 1837, 1850, 1851, 1858, 1877, 1886, 1888, 1891, 1892, 1894], "never": [2, 6, 8, 33, 35, 52, 53, 216, 217, 787, 870, 932, 1181, 1230, 1231, 1242, 1255, 1596, 1629, 1877, 1880, 1882, 1899, 1900, 1907, 1918], "long": [2, 8, 10, 14, 23, 32, 52, 64, 725, 740, 742, 743, 744, 745, 747, 754, 772, 1114, 1160, 1284, 1289, 1312, 1339, 1352, 1360, 1386, 1387, 1423, 1499, 1652, 1700, 1813, 1817, 1827, 1829, 1834, 1852, 1857, 1864, 1869, 1870, 1871, 1877, 1878, 1880, 1882, 1884, 1890, 1892, 1895, 1899, 1901, 1906, 1913, 1914, 1916, 1917], "hard": [2, 8, 9, 14, 16, 35, 40, 53, 1057, 1256, 1372, 1517, 1518, 1854, 1855, 1856, 1877, 1895, 1899], "matter": [2, 5, 35, 57, 888, 1045, 1057, 1191, 1194, 1199, 1596, 1872, 1877, 1899], "discourag": [2, 1026, 1030, 1877, 1907], "aggress": [2, 14, 1181, 1877, 1907], "buffer": [2, 5, 14, 32, 33, 35, 57, 61, 871, 971, 1003, 1110, 1113, 1123, 1184, 1191, 1194, 1205, 1255, 1334, 1335, 1336, 1353, 1389, 1390, 1391, 1416, 1455, 1589, 1596, 1598, 1605, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1636, 1638, 1651, 1669, 1671, 1733, 1775, 1820, 1856, 1873, 1877, 1881, 1882, 1888, 1893, 1895, 1900], "free": [2, 8, 35, 37, 41, 43, 52, 53, 57, 65, 1009, 1027, 1187, 1199, 1256, 1865, 1875, 1877, 1880, 1882, 1884, 1890, 1894, 1895], "reus": [2, 14, 23, 35, 40, 65, 479, 1853, 1877, 1880, 1907], "effici": [2, 3, 4, 9, 24, 32, 41, 57, 58, 63, 145, 751, 884, 889, 898, 934, 1121, 1129, 1201, 1239, 1256, 1275, 1324, 1355, 1356, 1357, 1360, 1361, 1368, 1422, 1428, 1429, 1463, 1565, 1865, 1872, 1877, 1881, 1882, 1885, 1889, 1891, 1898, 1900, 1902, 1907, 1908, 1911, 1914, 1915, 1919], "occas": [2, 8, 1877], "actual": [2, 9, 14, 16, 17, 18, 37, 43, 45, 57, 62, 65, 781, 949, 1075, 1093, 1195, 1199, 1347, 1348, 1349, 1515, 1596, 1620, 1650, 1672, 1677, 1851, 1856, 1857, 1870, 1877, 1880, 1881, 1882, 1885, 1890, 1894, 1902, 1907, 1913, 1918], "signific": [2, 4, 16, 19, 37, 1685, 1877, 1880, 1911], "amount": [2, 3, 4, 5, 8, 23, 32, 35, 37, 43, 52, 65, 900, 982, 1008, 1010, 1014, 1181, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1363, 1404, 1419, 1467, 1498, 1613, 1614, 1616, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1871, 1877, 1879, 1880, 1883, 1884, 1886, 1907, 1911], "heavi": [2, 35, 1877, 1894], "pressur": [2, 1877], "keep": [2, 4, 8, 17, 32, 33, 37, 39, 43, 52, 57, 961, 1255, 1334, 1335, 1336, 1340, 1359, 1379, 1380, 1381, 1425, 1455, 1515, 1526, 1596, 1615, 1654, 1722, 1851, 1852, 1854, 1869, 1871, 1872, 1877, 1880, 1881, 1883, 1884, 1885, 1890, 1896, 1898, 1902, 1907, 1908, 1909], "track": [2, 14, 17, 20, 43, 329, 966, 1006, 1008, 1021, 1022, 1023, 1113, 1114, 1159, 1285, 1334, 1335, 1336, 1379, 1380, 1381, 1389, 1390, 1391, 1398, 1399, 1400, 1455, 1596, 1615, 1867, 1869, 1871, 1872, 1877, 1880, 1882, 1883, 1884, 1887, 1888, 1896, 1898, 1900, 1901, 1908, 1909, 1911], "save": [2, 6, 8, 14, 24, 27, 33, 35, 37, 39, 57, 488, 828, 880, 881, 890, 1121, 1183, 1184, 1189, 1191, 1199, 1201, 1255, 1416, 1596, 1650, 1651, 1673, 1679, 1682, 1686, 1854, 1855, 1866, 1871, 1882, 1883, 1888, 1890, 1892, 1895, 1897, 1898, 1899, 1901, 1911, 1916, 1920], "afterward": [2, 1416, 1587, 1596], "start": [2, 4, 5, 9, 10, 14, 18, 20, 32, 33, 35, 37, 43, 49, 51, 52, 53, 54, 57, 61, 64, 65, 396, 426, 427, 488, 529, 689, 856, 1006, 1008, 1019, 1021, 1022, 1079, 1080, 1096, 1110, 1182, 1196, 1209, 1254, 1270, 1315, 1316, 1324, 1329, 1330, 1331, 1360, 1362, 1409, 1410, 1411, 1417, 1419, 1507, 1553, 1596, 1610, 1614, 1616, 1629, 1655, 1677, 1683, 1717, 1748, 1771, 1784, 1785, 1786, 1788, 1789, 1851, 1852, 1853, 1855, 1856, 1861, 1864, 1869, 1871, 1877, 1878, 1880, 1881, 1884, 1888, 1889, 1890, 1894, 1895, 1898, 1901, 1907, 1908, 1909, 1911], "sure": [2, 8, 10, 14, 16, 23, 32, 35, 37, 42, 44, 53, 55, 60, 65, 852, 853, 884, 1061, 1108, 1159, 1188, 1199, 1200, 1256, 1596, 1641, 1679, 1820, 1857, 1870, 1877, 1881, 1884, 1885, 1894, 1895, 1901, 1902, 1907, 1908, 1909, 1911, 1916], "longer": [2, 23, 35, 54, 61, 62, 678, 881, 899, 900, 1181, 1188, 1596, 1643, 1867, 1877, 1880, 1907, 1909], "find": [2, 8, 14, 17, 18, 22, 23, 26, 35, 52, 62, 65, 77, 1057, 1137, 1205, 1256, 1347, 1348, 1349, 1386, 1653, 1691, 1702, 1737, 1803, 1851, 1865, 1869, 1871, 1877, 1879, 1880, 1881, 1882, 1884, 1885, 1890, 1892, 1895, 1897, 1902, 1907, 1911, 1914, 1916, 1918, 1920, 1922], "quick": [2, 8, 60, 1864, 1888], "guid": [2, 9, 10, 17, 18, 32, 77, 78, 1195, 1852, 1880, 1883, 1899, 1902], "var": [2, 17, 23, 45, 50, 52, 55, 1334, 1335, 1336, 1370, 1371, 1379, 1380, 1381, 1388, 1455, 1512, 1705, 1840, 1853, 1855, 1857, 1870, 1897], "detach": [2, 6, 22, 217, 441, 451, 941, 1113, 1184, 1339, 1416, 1499, 1517, 1779, 1816, 1854, 1855, 1870, 1872, 1884, 1895, 1897, 1904, 1911, 1915, 1917], "register_hook": [2, 1870, 1877], "factori": [2, 3, 24, 41, 43, 46, 50, 62, 815, 1057, 1641, 1653, 1741, 1852, 1855, 1871, 1880, 1897, 1914], "ones": [2, 14, 15, 22, 23, 32, 35, 39, 41, 57, 62, 63, 64, 65, 145, 248, 307, 396, 438, 439, 441, 507, 785, 850, 884, 893, 895, 896, 897, 898, 899, 914, 926, 944, 1040, 1048, 1070, 1113, 1120, 1121, 1124, 1159, 1181, 1184, 1195, 1204, 1230, 1246, 1255, 1333, 1359, 1363, 1370, 1371, 1388, 1416, 1420, 1421, 1423, 1425, 1467, 1506, 1565, 1583, 1587, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1633, 1635, 1638, 1648, 1652, 1705, 1722, 1740, 1771, 1819, 1823, 1847, 1855, 1857, 1859, 1870, 1871, 1877, 1878, 1880, 1882, 1889, 1891, 1892, 1895, 1897, 1898, 1899, 1902, 1907, 1909, 1912, 1914, 1917], "autograd_tensor": 2, "base": [2, 4, 8, 10, 13, 14, 15, 16, 17, 26, 27, 32, 35, 36, 37, 39, 40, 41, 43, 45, 50, 52, 53, 54, 57, 62, 65, 70, 782, 787, 791, 793, 811, 812, 813, 815, 816, 852, 853, 890, 911, 944, 956, 1018, 1019, 1055, 1057, 1100, 1137, 1147, 1186, 1197, 1209, 1247, 1258, 1260, 1262, 1270, 1353, 1416, 1419, 1420, 1421, 1425, 1459, 1461, 1463, 1532, 1565, 1596, 1600, 1601, 1603, 1610, 1614, 1616, 1655, 1656, 1657, 1658, 1659, 1660, 1669, 1670, 1671, 1672, 1698, 1708, 1733, 1747, 1802, 1803, 1817, 1827, 1829, 1845, 1852, 1855, 1857, 1879, 1880, 1881, 1882, 1888, 1896, 1900, 1901, 1902, 1907, 1908, 1911, 1912, 1915, 1916, 1918, 1920, 1921], "Then": [2, 35, 53, 65, 1363, 1467, 1605, 1653, 1877, 1878, 1881, 1882, 1883, 1891, 1892, 1895, 1898, 1899, 1907, 1908, 1920], "ctx": [2, 50, 880, 881, 882, 888, 889, 890, 891, 1876, 1882, 1883, 1895], "gradcheck": [2, 900, 1852, 1882], "extend": [2, 32, 35, 37, 41, 44, 54, 65, 852, 881, 883, 890, 1418, 1427, 1852, 1861, 1872, 1877, 1887, 1889, 1890, 1895, 1897, 1899, 1905, 1911, 1922], "staticmethod": [2, 881, 883, 888, 889, 890, 891, 1857, 1876, 1882, 1895, 1907], "save_for_backward": [2, 881, 889, 891, 1876, 1877, 1882, 1883, 1895], "grad_output": [2, 880, 888, 898, 900, 904, 905, 1184, 1416, 1592, 1593, 1853, 1855, 1877, 1880, 1882, 1883, 1888], "saved_tensor": [2, 889, 890, 891, 1876, 1877, 1882, 1883], "avail": [2, 3, 6, 9, 10, 14, 16, 18, 23, 26, 27, 32, 35, 43, 52, 53, 77, 78, 980, 982, 983, 994, 997, 1004, 1005, 1024, 1025, 1027, 1057, 1190, 1247, 1248, 1273, 1459, 1468, 1526, 1565, 1584, 1691, 1745, 1798, 1803, 1837, 1851, 1852, 1854, 1856, 1857, 1861, 1864, 1869, 1877, 1880, 1882, 1886, 1888, 1889, 1892, 1894, 1898, 1899, 1901, 1902, 1903, 1907, 1921, 1922], "cost": [2, 4, 5, 9, 10, 19, 23, 33, 57, 934, 1239, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1565, 1741, 1880, 1892, 1903, 1908, 1914], "cpu": [2, 5, 6, 16, 20, 21, 23, 26, 28, 32, 35, 37, 57, 83, 114, 191, 283, 320, 329, 438, 439, 440, 441, 442, 451, 571, 580, 856, 871, 909, 913, 922, 954, 960, 970, 971, 972, 974, 1058, 1060, 1070, 1075, 1093, 1105, 1110, 1111, 1134, 1135, 1141, 1142, 1184, 1191, 1193, 1194, 1203, 1213, 1215, 1219, 1220, 1221, 1222, 1224, 1226, 1229, 1231, 1232, 1238, 1241, 1244, 1247, 1248, 1254, 1255, 1270, 1273, 1284, 1353, 1359, 1416, 1459, 1580, 1596, 1600, 1601, 1629, 1630, 1644, 1647, 1701, 1710, 1712, 1714, 1716, 1717, 1741, 1746, 1748, 1749, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1770, 1779, 1784, 1785, 1786, 1787, 1788, 1789, 1802, 1816, 1817, 1818, 1827, 1829, 1834, 1837, 1849, 1852, 1854, 1855, 1857, 1861, 1865, 1869, 1870, 1872, 1880, 1883, 1886, 1888, 1890, 1891, 1892, 1894, 1895, 1897, 1900, 1901, 1903, 1906, 1907, 1911, 1913, 1914, 1917, 1918, 1919], "There": [2, 6, 7, 8, 10, 14, 17, 18, 22, 23, 26, 31, 35, 37, 52, 58, 62, 63, 65, 671, 725, 784, 881, 1114, 1353, 1386, 1431, 1565, 1596, 1636, 1641, 1851, 1854, 1856, 1857, 1863, 1864, 1871, 1877, 1880, 1882, 1883, 1884, 1887, 1890, 1894, 1895, 1899, 1902, 1903, 1907, 1909, 1917, 1919], "moment": [2, 17, 20, 763, 764, 765, 952, 1658, 1659, 1660, 1662, 1668, 1672, 1865, 1869, 1872, 1901, 1907], "nvprof": [2, 5, 906, 1880], "regist": [2, 15, 16, 19, 27, 33, 35, 39, 40, 41, 52, 54, 57, 65, 77, 78, 480, 671, 783, 784, 845, 904, 905, 944, 1003, 1184, 1255, 1416, 1417, 1418, 1426, 1427, 1444, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1603, 1604, 1605, 1606, 1608, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1861, 1867, 1869, 1881, 1882, 1887, 1888, 1895, 1899, 1907], "activ": [2, 6, 8, 10, 23, 54, 57, 63, 783, 785, 787, 794, 798, 832, 833, 842, 852, 853, 959, 968, 983, 996, 1014, 1113, 1115, 1125, 1256, 1328, 1355, 1356, 1357, 1361, 1371, 1388, 1415, 1417, 1434, 1445, 1459, 1461, 1463, 1508, 1545, 1568, 1596, 1606, 1607, 1608, 1638, 1643, 1844, 1852, 1853, 1865, 1869, 1880, 1882, 1883, 1888, 1895, 1898, 1900, 1901, 1902, 1903, 1904, 1907, 1911, 1920, 1921], "emit_nvtx": [2, 5], "vtune": [2, 5], "emit_itt": [2, 5], "use_cuda": [2, 1901], "record_shap": [2, 1901], "with_flop": [2, 1901], "profile_memori": [2, 1901], "with_stack": [2, 1901], "with_modul": [2, 1901], "use_kineto": 2, "use_cpu": 2, "experimental_config": [2, 1901], "hold": [2, 17, 35, 50, 52, 54, 55, 57, 61, 64, 65, 528, 1256, 1363, 1417, 1418, 1426, 1427, 1467, 1587, 1596, 1598, 1599, 1605, 1615, 1629, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1784, 1785, 1786, 1787, 1788, 1789, 1878, 1880, 1882, 1884, 1887, 1890, 1898, 1901, 1907, 1908, 1909, 1911, 1913, 1914, 1916, 1917], "summari": [2, 4, 23, 53, 1015, 1750, 1852, 1867, 1916, 1921], "hood": [2, 17, 64, 1869, 1877, 1880, 1881, 1890, 1899, 1909], "record": [2, 6, 14, 23, 39, 44, 45, 46, 50, 53, 64, 65, 438, 439, 440, 441, 442, 488, 810, 811, 812, 813, 816, 818, 856, 913, 922, 960, 961, 963, 1058, 1059, 1060, 1070, 1075, 1093, 1110, 1111, 1112, 1141, 1142, 1184, 1199, 1203, 1254, 1270, 1297, 1298, 1353, 1416, 1647, 1648, 1650, 1653, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1784, 1785, 1786, 1787, 1788, 1789, 1816, 1849, 1850, 1854, 1856, 1872, 1876, 1877, 1880, 1882, 1895, 1896, 1901, 1907, 1916, 1917, 1918, 1919, 1920, 1921], "event": [2, 38, 41, 43, 51, 54, 64, 908, 909, 910, 961, 963, 1014, 1017, 1199, 1200, 1261, 1297, 1298, 1565, 1852, 1867, 1869, 1880, 1901, 1916], "being": [2, 4, 6, 10, 14, 16, 17, 23, 32, 35, 37, 39, 41, 43, 45, 52, 53, 54, 57, 61, 62, 64, 65, 92, 396, 751, 784, 790, 883, 892, 898, 942, 961, 969, 1016, 1020, 1034, 1035, 1070, 1103, 1104, 1114, 1123, 1124, 1173, 1184, 1188, 1273, 1282, 1287, 1332, 1333, 1350, 1352, 1359, 1360, 1364, 1365, 1370, 1376, 1383, 1407, 1408, 1416, 1419, 1420, 1421, 1422, 1423, 1430, 1447, 1448, 1464, 1480, 1487, 1488, 1498, 1510, 1511, 1515, 1527, 1550, 1558, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1622, 1623, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1701, 1702, 1796, 1797, 1798, 1839, 1840, 1854, 1857, 1864, 1867, 1870, 1871, 1872, 1876, 1877, 1880, 1882, 1883, 1884, 1885, 1888, 1890, 1891, 1895, 1899, 1902, 1905, 1907, 1908, 1911, 1918, 1920, 1922], "those": [2, 3, 5, 13, 14, 16, 17, 20, 23, 26, 32, 33, 35, 37, 39, 41, 57, 62, 64, 65, 815, 899, 972, 982, 1045, 1047, 1125, 1199, 1241, 1247, 1255, 1294, 1324, 1332, 1333, 1350, 1352, 1360, 1376, 1383, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1468, 1487, 1488, 1498, 1507, 1527, 1550, 1558, 1653, 1672, 1745, 1802, 1823, 1844, 1856, 1870, 1871, 1876, 1877, 1880, 1882, 1883, 1886, 1888, 1892, 1893, 1895, 1898, 1905, 1907, 1909], "report": [2, 4, 5, 14, 20, 23, 29, 35, 45, 53, 64, 65, 1014, 1117, 1118, 1120, 1876, 1880, 1900, 1911], "runtim": [2, 4, 6, 14, 19, 26, 35, 65, 818, 869, 908, 1055, 1057, 1147, 1184, 1199, 1416, 1598, 1599, 1654, 1697, 1837, 1845, 1857, 1870, 1871, 1877, 1880, 1882, 1890, 1895], "propag": [2, 17, 22, 37, 38, 41, 43, 52, 65, 505, 677, 680, 681, 682, 686, 687, 688, 689, 757, 758, 759, 760, 770, 773, 774, 776, 777, 778, 829, 831, 912, 1103, 1104, 1311, 1783, 1852, 1869, 1870, 1876, 1880, 1882, 1885, 1887, 1907, 1920, 1921], "async": [2, 35, 36, 64, 594, 1596, 1858, 1880, 1887, 1913], "task": [2, 4, 8, 33, 58, 63, 1187, 1202, 1379, 1380, 1381, 1857, 1879, 1887, 1888, 1894], "cuda": [2, 4, 5, 6, 14, 15, 16, 18, 20, 23, 26, 31, 32, 33, 35, 37, 39, 57, 83, 145, 283, 307, 315, 329, 334, 507, 509, 515, 571, 856, 868, 870, 884, 898, 913, 915, 922, 944, 958, 959, 960, 961, 963, 964, 979, 981, 992, 1058, 1059, 1060, 1070, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1111, 1141, 1142, 1184, 1203, 1205, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1238, 1241, 1244, 1245, 1247, 1248, 1254, 1255, 1270, 1273, 1289, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1359, 1386, 1416, 1431, 1455, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1507, 1515, 1526, 1553, 1565, 1584, 1585, 1586, 1587, 1596, 1598, 1599, 1600, 1601, 1642, 1644, 1647, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1701, 1710, 1712, 1714, 1716, 1717, 1741, 1745, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1802, 1816, 1818, 1827, 1829, 1834, 1837, 1849, 1852, 1855, 1861, 1870, 1872, 1882, 1883, 1888, 1891, 1895, 1897, 1898, 1900, 1901, 1906, 1907, 1913, 1914, 1917, 1918, 1919], "cudaev": 2, "approxim": [2, 4, 33, 39, 52, 65, 1121, 1137, 1247, 1256, 1324, 1366, 1430, 1445, 1452, 1513, 1558, 1568, 1604, 1655, 1672, 1691, 1803, 1823, 1853, 1855, 1857, 1880, 1881, 1882, 1885, 1895, 1923], "4u": 2, "about": [2, 9, 10, 12, 14, 17, 18, 19, 23, 28, 32, 35, 36, 39, 43, 45, 49, 51, 53, 58, 62, 65, 249, 490, 609, 899, 900, 965, 966, 982, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1021, 1022, 1023, 1114, 1213, 1220, 1360, 1629, 1672, 1683, 1744, 1851, 1854, 1856, 1857, 1861, 1864, 1879, 1880, 1881, 1882, 1884, 1887, 1890, 1891, 1893, 1899, 1901, 1902, 1905, 1908, 1909, 1911, 1915, 1917], "collect": [2, 4, 8, 14, 17, 20, 22, 23, 32, 36, 37, 39, 43, 52, 57, 64, 65, 790, 791, 815, 852, 853, 932, 996, 1058, 1146, 1285, 1596, 1619, 1647, 1710, 1714, 1849, 1852, 1855, 1856, 1857, 1867, 1880, 1881, 1883, 1898, 1901, 1902, 1905, 1909, 1911, 1916, 1918], "group": [2, 4, 10, 12, 14, 23, 32, 33, 36, 37, 39, 43, 49, 52, 53, 54, 55, 57, 60, 65, 601, 671, 703, 704, 705, 706, 707, 708, 709, 710, 716, 717, 718, 721, 722, 729, 730, 731, 732, 733, 734, 763, 764, 765, 871, 908, 1340, 1344, 1345, 1346, 1347, 1348, 1349, 1371, 1392, 1393, 1394, 1395, 1396, 1397, 1455, 1490, 1491, 1492, 1493, 1494, 1495, 1516, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1835, 1851, 1852, 1853, 1855, 1857, 1869, 1875, 1880, 1881, 1895, 1898, 1899, 1901, 1907, 1916], "prof": [2, 14, 23, 49, 1901], "key_averag": [2, 1901], "group_by_input_shap": [2, 908, 1901], "skew": [2, 4, 5, 1235, 1603], "neglig": [2, 1196, 1745], "bottom": [2, 1515, 1864], "But": [2, 8, 17, 57, 64, 479, 1199, 1229, 1596, 1877, 1882, 1884, 1885, 1899, 1900, 1911, 1915, 1922], "total": [2, 4, 5, 8, 32, 33, 35, 49, 51, 52, 53, 57, 868, 909, 974, 1009, 1014, 1027, 1110, 1145, 1146, 1293, 1339, 1363, 1376, 1383, 1407, 1422, 1467, 1552, 1596, 1600, 1642, 1644, 1646, 1677, 1683, 1723, 1750, 1798, 1851, 1856, 1867, 1880, 1886, 1898], "artifici": [2, 1911], "estim": [2, 4, 32, 41, 952, 956, 1137, 1181, 1334, 1335, 1336, 1366, 1370, 1371, 1379, 1380, 1381, 1388, 1455, 1513, 1604, 1669, 1766, 1901], "flop": [2, 1901], "hardwar": [2, 9, 14, 23, 850, 852, 853, 1219, 1220, 1247, 1837, 1880, 1892, 1903], "matrix": [2, 3, 14, 15, 33, 35, 41, 186, 203, 677, 680, 681, 682, 751, 912, 914, 923, 924, 932, 934, 935, 936, 937, 944, 952, 956, 1040, 1044, 1045, 1047, 1057, 1125, 1129, 1133, 1148, 1204, 1213, 1214, 1215, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1251, 1253, 1256, 1264, 1273, 1275, 1278, 1288, 1306, 1308, 1359, 1360, 1368, 1386, 1467, 1506, 1507, 1603, 1608, 1637, 1643, 1689, 1690, 1691, 1701, 1745, 1773, 1776, 1779, 1780, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1794, 1802, 1803, 1818, 1821, 1823, 1825, 1826, 1827, 1828, 1829, 1838, 1844, 1852, 1857, 1870, 1871, 1872, 1875, 1879, 1880, 1882, 1885, 1888, 1891, 1901, 1911, 1916, 1917], "2d": [2, 37, 40, 41, 578, 579, 691, 694, 697, 726, 730, 733, 757, 759, 764, 770, 774, 776, 777, 778, 937, 952, 956, 1045, 1057, 1239, 1240, 1322, 1326, 1330, 1334, 1335, 1345, 1348, 1352, 1356, 1360, 1364, 1379, 1380, 1385, 1410, 1419, 1421, 1422, 1423, 1468, 1469, 1470, 1475, 1478, 1480, 1483, 1491, 1494, 1502, 1507, 1510, 1537, 1540, 1550, 1553, 1604, 1637, 1707, 1782, 1787, 1825, 1865, 1875, 1882, 1901, 1902, 1911], "alloc": [2, 5, 24, 29, 33, 37, 41, 43, 52, 248, 325, 438, 439, 440, 441, 442, 479, 959, 961, 963, 965, 966, 968, 981, 982, 983, 1006, 1008, 1010, 1012, 1013, 1014, 1015, 1022, 1023, 1027, 1058, 1060, 1292, 1293, 1294, 1301, 1651, 1710, 1714, 1716, 1741, 1816, 1869, 1872, 1877, 1881, 1886, 1901, 1914], "dealloc": [2, 65, 1110, 1869, 1880, 1884, 1886, 1901], "line": [2, 5, 14, 16, 17, 18, 20, 21, 23, 29, 35, 65, 908, 1057, 1114, 1159, 1184, 1194, 1416, 1480, 1515, 1750, 1777, 1854, 1857, 1858, 1872, 1878, 1882, 1885, 1886, 1892, 1894, 1895, 1901, 1911], "hierarchi": [2, 65, 831, 1188, 1658, 1659, 1858, 1882, 1901, 1902], "callstack": [2, 35, 1901], "torchscript": [2, 4, 9, 16, 39, 65, 608, 1182, 1185, 1187, 1188, 1189, 1190, 1195, 1199, 1201, 1653, 1852, 1858, 1893, 1895, 1901, 1907], "kineto": [2, 1901], "_experimentalconfig": [2, 1901], "librari": [2, 3, 4, 5, 9, 10, 14, 16, 18, 24, 26, 27, 32, 35, 42, 50, 54, 58, 61, 62, 63, 65, 671, 954, 961, 984, 988, 1000, 1108, 1196, 1227, 1273, 1770, 1867, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1888, 1890, 1891, 1894, 1895, 1899, 1901, 1902, 1907, 1922], "100": [2, 12, 17, 32, 35, 39, 41, 65, 294, 729, 730, 733, 734, 1144, 1184, 1195, 1201, 1239, 1254, 1261, 1270, 1285, 1305, 1324, 1332, 1333, 1334, 1335, 1336, 1345, 1346, 1348, 1349, 1351, 1352, 1379, 1380, 1381, 1416, 1423, 1425, 1455, 1464, 1497, 1498, 1550, 1661, 1673, 1674, 1679, 1680, 1681, 1682, 1684, 1686, 1687, 1703, 1759, 1855, 1857, 1869, 1879, 1880, 1895, 1898, 1903, 1909, 1911, 1916], "realli": [2, 8, 65, 1857, 1877, 1899], "y": [2, 12, 16, 17, 22, 23, 24, 26, 32, 41, 49, 57, 62, 63, 65, 608, 611, 772, 875, 877, 878, 879, 886, 887, 890, 892, 893, 894, 895, 896, 897, 926, 932, 949, 956, 1000, 1001, 1040, 1051, 1057, 1061, 1113, 1115, 1118, 1119, 1120, 1124, 1125, 1159, 1190, 1195, 1199, 1252, 1261, 1262, 1285, 1332, 1333, 1334, 1335, 1336, 1337, 1350, 1352, 1371, 1376, 1377, 1379, 1380, 1381, 1383, 1388, 1403, 1407, 1408, 1419, 1420, 1421, 1423, 1425, 1447, 1448, 1455, 1458, 1464, 1465, 1486, 1515, 1532, 1555, 1587, 1608, 1641, 1650, 1705, 1723, 1725, 1726, 1747, 1779, 1793, 1819, 1823, 1824, 1844, 1847, 1854, 1855, 1856, 1857, 1870, 1871, 1875, 1877, 1878, 1879, 1880, 1883, 1885, 1886, 1889, 1895, 1899, 1902, 1907, 1909, 1912, 1916, 1919, 1920, 1921], "column": [2, 4, 33, 40, 186, 254, 575, 578, 942, 952, 956, 1040, 1070, 1098, 1099, 1149, 1219, 1220, 1223, 1239, 1242, 1247, 1251, 1256, 1306, 1425, 1467, 1506, 1507, 1603, 1691, 1701, 1782, 1784, 1785, 1786, 1788, 1789, 1802, 1823, 1827, 1829, 1838, 1875, 1885, 1911], "remov": [2, 4, 14, 16, 19, 22, 32, 33, 35, 37, 41, 53, 55, 57, 65, 480, 505, 537, 548, 688, 788, 806, 807, 808, 850, 904, 905, 934, 935, 1003, 1114, 1130, 1181, 1184, 1188, 1273, 1274, 1278, 1416, 1417, 1426, 1517, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1604, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1622, 1623, 1624, 1625, 1627, 1628, 1638, 1643, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1701, 1717, 1739, 1793, 1802, 1825, 1832, 1851, 1852, 1865, 1877, 1888, 1893, 1895, 1897, 1899, 1909, 1913, 1918], "breviti": [2, 65, 1895], "print": [2, 4, 12, 14, 17, 23, 29, 32, 35, 43, 44, 49, 50, 53, 57, 62, 64, 711, 719, 720, 725, 736, 737, 747, 755, 902, 904, 905, 1113, 1114, 1123, 1184, 1188, 1190, 1191, 1195, 1273, 1337, 1340, 1378, 1403, 1416, 1428, 1429, 1497, 1553, 1556, 1557, 1608, 1618, 1619, 1620, 1621, 1624, 1634, 1638, 1650, 1653, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1750, 1851, 1854, 1855, 1877, 1879, 1880, 1882, 1888, 1889, 1895, 1897, 1899, 1901, 1907, 1916, 1917, 1920, 1921], "tabl": [2, 4, 20, 23, 35, 65, 1359, 1506, 1855, 1857, 1882, 1898, 1899, 1901, 1902, 1907, 1911, 1918], "sort_bi": [2, 1901], "self_cpu_time_tot": [2, 1901], "avg": [2, 35, 1656], "mul": [2, 12, 22, 29, 65, 413, 738, 739, 748, 1161, 1307, 1853, 1854, 1855, 1857, 1870, 1872, 1882, 1895, 1897, 1904, 1908, 1911, 1914, 1920], "32": [2, 3, 13, 17, 33, 35, 737, 1110, 1181, 1193, 1273, 1330, 1355, 1356, 1357, 1361, 1362, 1364, 1365, 1385, 1404, 1410, 1421, 1459, 1460, 1461, 1462, 1463, 1480, 1510, 1511, 1517, 1565, 1871, 1872, 1888, 1892, 1895, 1905, 1911, 1914, 1916, 1917], "048m": 2, "200": [2, 23, 39, 1184, 1261, 1416, 1703, 1857, 1911], "27": [2, 608, 1251, 1676, 1698, 1838, 1895], "041m": 2, "powbackward0": 2, "9": [2, 8, 13, 32, 33, 35, 42, 65, 82, 307, 309, 311, 315, 395, 396, 464, 505, 551, 572, 574, 688, 736, 737, 845, 928, 934, 938, 942, 956, 1040, 1055, 1058, 1079, 1080, 1089, 1090, 1100, 1103, 1104, 1107, 1108, 1137, 1147, 1213, 1215, 1236, 1238, 1240, 1251, 1253, 1315, 1316, 1322, 1323, 1326, 1327, 1340, 1359, 1360, 1412, 1413, 1428, 1429, 1438, 1441, 1506, 1507, 1553, 1556, 1557, 1643, 1644, 1656, 1658, 1659, 1660, 1661, 1662, 1668, 1671, 1672, 1673, 1677, 1683, 1685, 1686, 1690, 1694, 1730, 1737, 1746, 1750, 1760, 1765, 1775, 1782, 1790, 1816, 1817, 1821, 1823, 1832, 1838, 1845, 1854, 1858, 1864, 1884, 1888, 1893, 1894, 1895, 1897, 1898, 1899, 1907, 1911, 1912, 1914, 1918], "727m": 2, "55": [2, 1370, 1895], "483m": 2, "accumulategrad": [2, 1877], "148m": 2, "graphroot": 2, "691": 2, "816u": 2, "emit": [2, 26, 44, 49, 65, 671, 1199, 1752, 1857, 1863, 1896, 1906, 1911], "nvtx": [2, 5, 1852], "off": [2, 8, 9, 17, 20, 26, 35, 43, 57, 65, 911, 913, 922, 1018, 1114, 1141, 1142, 1181, 1199, 1247, 1329, 1330, 1331, 1333, 1409, 1410, 1411, 1515, 1553, 1747, 1879, 1880, 1881, 1884, 1887, 1891, 1901, 1902, 1903, 1907, 1908], "o": [2, 23, 33, 35, 36, 41, 53, 54, 55, 65, 1184, 1255, 1297, 1298, 1299, 1387, 1416, 1422, 1596, 1733, 1851, 1858, 1869, 1877, 1880, 1881, 1884, 1894, 1899, 1900, 1907], "trace_nam": 2, "regular": [2, 4, 5, 17, 35, 43, 53, 57, 60, 65, 1000, 1001, 1113, 1231, 1232, 1339, 1354, 1355, 1356, 1357, 1361, 1401, 1415, 1416, 1417, 1418, 1426, 1427, 1508, 1545, 1587, 1598, 1599, 1638, 1659, 1857, 1871, 1872, 1882, 1883, 1887, 1888, 1895, 1899, 1902, 1905, 1907, 1911, 1912, 1919, 1921], "command": [2, 5, 20, 35, 43, 50, 53, 65, 1880, 1886, 1894, 1900, 1901, 1908], "unfortun": [2, 10, 13, 32, 1596, 1877], "wai": [2, 4, 6, 8, 9, 10, 12, 14, 17, 22, 23, 26, 32, 33, 35, 37, 39, 41, 45, 49, 57, 59, 60, 64, 65, 145, 571, 671, 787, 810, 813, 816, 852, 853, 881, 884, 893, 895, 896, 897, 898, 899, 1078, 1080, 1114, 1137, 1184, 1213, 1214, 1229, 1244, 1332, 1360, 1379, 1380, 1381, 1386, 1398, 1399, 1400, 1416, 1444, 1461, 1463, 1507, 1559, 1596, 1606, 1636, 1672, 1676, 1683, 1854, 1856, 1857, 1861, 1863, 1864, 1867, 1869, 1870, 1871, 1877, 1879, 1882, 1883, 1884, 1885, 1888, 1890, 1891, 1894, 1895, 1896, 1898, 1899, 1902, 1907, 1908, 1911, 1915, 1917, 1921], "disk": [2, 32, 1733, 1877, 1888, 1899, 1916], "annot": [2, 16, 17, 45, 50, 65, 906, 1182, 1195, 1854, 1856, 1858, 1895, 1907], "wait": [2, 14, 18, 29, 35, 43, 50, 52, 64, 815, 960, 961, 963, 1033, 1187, 1297, 1298, 1303, 1685, 1855, 1857, 1869, 1879, 1880, 1881, 1897, 1901, 1907], "nvidia": [2, 20, 23, 26, 35, 969, 982, 1010, 1016, 1020, 1034, 1035, 1837, 1852, 1880, 1884, 1886, 1892, 1894, 1902, 1919], "visual": [2, 14, 23, 65, 1285, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1409, 1410, 1411, 1467, 1888, 1894, 1901, 1916], "nvvp": 2, "timelin": [2, 5, 1297, 1298, 1901], "load_nvprof": 2, "repl": [2, 16], "append": [2, 17, 22, 35, 64, 65, 224, 248, 598, 752, 754, 756, 1003, 1047, 1049, 1278, 1369, 1387, 1418, 1427, 1433, 1444, 1596, 1855, 1856, 1857, 1877, 1879, 1890, 1894, 1895, 1897, 1916], "size": [2, 3, 4, 8, 13, 14, 23, 29, 32, 33, 35, 37, 41, 43, 52, 57, 60, 65, 133, 203, 216, 236, 248, 249, 307, 309, 315, 333, 438, 439, 440, 442, 480, 485, 490, 491, 492, 505, 507, 509, 512, 535, 536, 537, 557, 572, 574, 575, 576, 578, 579, 597, 598, 608, 609, 681, 682, 684, 686, 687, 688, 690, 711, 719, 720, 726, 732, 733, 734, 736, 737, 747, 755, 757, 758, 759, 760, 770, 776, 777, 778, 787, 849, 856, 868, 869, 871, 883, 892, 893, 894, 895, 896, 897, 908, 912, 913, 915, 922, 924, 925, 926, 927, 928, 935, 936, 937, 938, 956, 957, 959, 965, 971, 972, 974, 1014, 1038, 1039, 1045, 1048, 1055, 1057, 1058, 1059, 1060, 1063, 1074, 1075, 1076, 1078, 1079, 1080, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1110, 1111, 1112, 1119, 1120, 1125, 1126, 1141, 1142, 1146, 1147, 1158, 1161, 1181, 1184, 1205, 1214, 1223, 1228, 1236, 1240, 1244, 1247, 1249, 1250, 1251, 1253, 1254, 1256, 1264, 1270, 1271, 1273, 1274, 1278, 1281, 1283, 1284, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1306, 1308, 1311, 1314, 1316, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1359, 1360, 1362, 1363, 1364, 1365, 1368, 1370, 1371, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1428, 1429, 1431, 1437, 1438, 1439, 1440, 1441, 1442, 1447, 1455, 1459, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1493, 1494, 1495, 1498, 1499, 1506, 1507, 1510, 1511, 1515, 1526, 1533, 1539, 1540, 1541, 1550, 1551, 1553, 1556, 1557, 1559, 1565, 1584, 1585, 1586, 1587, 1596, 1619, 1629, 1630, 1631, 1632, 1633, 1635, 1637, 1640, 1642, 1644, 1647, 1648, 1661, 1670, 1689, 1690, 1691, 1692, 1694, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1723, 1728, 1737, 1740, 1759, 1779, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1793, 1795, 1796, 1797, 1798, 1801, 1802, 1803, 1816, 1817, 1818, 1823, 1825, 1833, 1834, 1835, 1836, 1839, 1840, 1842, 1843, 1844, 1845, 1849, 1850, 1852, 1853, 1854, 1855, 1857, 1865, 1867, 1870, 1871, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1892, 1893, 1895, 1897, 1900, 1901, 1902, 1904, 1911, 1913, 1914, 1916, 1917], "arg0": [2, 35], "arg1": [2, 35, 50, 51, 53], "order": [2, 4, 6, 12, 14, 21, 23, 35, 36, 37, 39, 41, 53, 57, 58, 63, 64, 65, 145, 186, 203, 307, 309, 311, 315, 325, 396, 480, 671, 783, 784, 793, 845, 867, 884, 885, 898, 904, 905, 923, 934, 961, 1003, 1014, 1045, 1048, 1049, 1057, 1075, 1077, 1078, 1084, 1096, 1097, 1098, 1099, 1115, 1125, 1137, 1184, 1203, 1214, 1220, 1222, 1229, 1236, 1239, 1240, 1247, 1248, 1251, 1253, 1256, 1285, 1291, 1304, 1306, 1324, 1339, 1353, 1416, 1417, 1426, 1443, 1444, 1480, 1515, 1539, 1540, 1541, 1565, 1587, 1596, 1605, 1615, 1629, 1630, 1631, 1632, 1643, 1661, 1683, 1689, 1692, 1702, 1737, 1740, 1765, 1775, 1802, 1820, 1827, 1829, 1834, 1837, 1838, 1844, 1851, 1852, 1854, 1855, 1857, 1858, 1869, 1870, 1871, 1872, 1875, 1878, 1880, 1881, 1882, 1883, 1885, 1888, 1891, 1895, 1898, 1899, 1900, 1902, 1904, 1907, 1908, 1909, 1911, 1912, 1914, 1918, 1921], "side": [2, 17, 26, 35, 52, 54, 62, 65, 759, 760, 763, 764, 765, 992, 1051, 1073, 1074, 1076, 1079, 1080, 1085, 1087, 1088, 1089, 1090, 1093, 1181, 1182, 1228, 1233, 1244, 1246, 1329, 1330, 1331, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1392, 1393, 1394, 1395, 1396, 1397, 1409, 1410, 1411, 1437, 1438, 1440, 1441, 1442, 1467, 1471, 1472, 1473, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1539, 1540, 1541, 1553, 1677, 1706, 1707, 1737, 1798, 1825, 1851, 1854, 1855, 1857, 1876, 1877, 1880, 1882, 1885, 1907], "creation": [2, 3, 17, 32, 35, 37, 65, 736, 737, 747, 755, 815, 960, 1114, 1596, 1597, 1610, 1854, 1858, 1867, 1869, 1877, 1880, 1907, 1909, 1911, 1917], "warmup": [2, 4, 14, 1003, 1880, 1901], "correl": [2, 41, 53, 952, 1344, 1345, 1346, 1347, 1348, 1349, 1355, 1356, 1357, 1361], "view": [2, 8, 9, 20, 22, 23, 24, 29, 32, 33, 37, 39, 43, 57, 65, 217, 248, 428, 489, 490, 491, 598, 609, 683, 688, 751, 869, 877, 878, 879, 887, 926, 938, 949, 950, 1047, 1048, 1055, 1096, 1097, 1098, 1099, 1114, 1147, 1159, 1184, 1239, 1250, 1298, 1360, 1368, 1386, 1416, 1431, 1467, 1468, 1469, 1470, 1507, 1552, 1592, 1593, 1596, 1600, 1692, 1724, 1728, 1729, 1733, 1739, 1740, 1771, 1790, 1801, 1812, 1817, 1821, 1833, 1842, 1843, 1845, 1852, 1853, 1854, 1855, 1869, 1871, 1872, 1878, 1882, 1897, 1904, 1909, 1911, 1913, 1914, 1917], "difficult": [2, 8, 10, 14, 19, 23, 62, 1125, 1844], "eas": [2, 22, 65, 1879, 1882, 1886], "seq": [2, 596, 751, 931, 943, 1285, 1368, 1386, 1422, 1431, 1459, 1461, 1463, 1632, 1832], "n": [2, 4, 17, 35, 37, 40, 41, 43, 45, 50, 53, 65, 224, 254, 400, 458, 459, 677, 680, 681, 682, 726, 749, 751, 772, 868, 908, 912, 913, 915, 922, 924, 928, 934, 935, 936, 956, 1038, 1039, 1049, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1117, 1120, 1125, 1137, 1141, 1142, 1146, 1181, 1184, 1195, 1199, 1200, 1203, 1204, 1213, 1214, 1215, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1256, 1264, 1273, 1278, 1280, 1285, 1288, 1308, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1376, 1377, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1388, 1398, 1399, 1400, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1425, 1431, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1447, 1449, 1450, 1451, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1480, 1486, 1498, 1499, 1507, 1511, 1515, 1550, 1553, 1555, 1565, 1596, 1603, 1614, 1623, 1642, 1689, 1690, 1691, 1696, 1701, 1702, 1708, 1714, 1716, 1729, 1737, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1779, 1780, 1796, 1797, 1798, 1802, 1803, 1817, 1818, 1823, 1827, 1829, 1838, 1839, 1840, 1841, 1844, 1853, 1855, 1857, 1861, 1870, 1871, 1875, 1877, 1880, 1882, 1884, 1885, 1899, 1901, 1902, 1903, 1911, 1912, 1916, 1917, 1918], "counter": [2, 35, 996, 1014, 1159, 1353, 1867, 1869, 1877], "increment": [2, 35, 52, 1110, 1146, 1188, 1353, 1854, 1856, 1877, 1907], "stash": [2, 6, 1880, 1882, 1900], "tell": [2, 8, 65, 488, 1185, 1191, 1255, 1654, 1854, 1864, 1877, 1882, 1883, 1899], "top": [2, 4, 8, 9, 13, 20, 32, 37, 40, 41, 45, 57, 61, 65, 738, 908, 1332, 1333, 1352, 1376, 1383, 1407, 1423, 1465, 1468, 1515, 1610, 1614, 1616, 1766, 1820, 1858, 1864, 1869, 1882, 1898], "m": [2, 5, 9, 16, 33, 35, 40, 41, 49, 53, 65, 677, 680, 681, 682, 711, 719, 720, 729, 730, 731, 732, 733, 734, 736, 737, 747, 749, 755, 805, 851, 852, 853, 912, 924, 928, 932, 937, 1070, 1123, 1146, 1182, 1184, 1189, 1190, 1194, 1195, 1201, 1204, 1215, 1223, 1229, 1230, 1231, 1232, 1236, 1237, 1238, 1240, 1241, 1242, 1247, 1248, 1249, 1250, 1256, 1273, 1274, 1278, 1288, 1306, 1308, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1364, 1365, 1366, 1367, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1380, 1381, 1384, 1385, 1402, 1403, 1405, 1406, 1409, 1410, 1411, 1415, 1416, 1423, 1424, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1553, 1555, 1596, 1603, 1608, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1636, 1637, 1640, 1689, 1690, 1691, 1701, 1708, 1737, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1779, 1780, 1798, 1802, 1803, 1818, 1825, 1854, 1855, 1856, 1857, 1880, 1882, 1884, 1885, 1888, 1893, 1902, 1911, 1921], "compar": [2, 4, 6, 20, 26, 32, 57, 65, 685, 856, 867, 898, 1014, 1061, 1062, 1085, 1086, 1087, 1091, 1092, 1093, 1094, 1103, 1104, 1128, 1140, 1159, 1173, 1208, 1272, 1282, 1287, 1317, 1422, 1596, 1641, 1747, 1857, 1867, 1880, 1882, 1885, 1891, 1894, 1902, 1903, 1907, 1911, 1916, 1918, 1920, 1921], "down": [2, 8, 23, 26, 32, 41, 43, 50, 51, 53, 57, 65, 770, 1014, 1052, 1099, 1105, 1193, 1229, 1526, 1702, 1730, 1887, 1890, 1895, 1907, 1909, 1916], "irrelev": [2, 4, 1858], "simpli": [2, 4, 14, 19, 26, 32, 41, 45, 53, 64, 65, 854, 1114, 1171, 1182, 1328, 1354, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1854, 1856, 1877, 1883, 1885, 1888, 1889, 1901, 1911], "hand": [2, 5, 17, 35, 57, 62, 65, 1051, 1057, 1182, 1228, 1233, 1244, 1246, 1328, 1426, 1444, 1825, 1837, 1854, 1856, 1857, 1877, 1885, 1888, 1893, 1899, 1911], "underwai": [2, 998, 1880], "up": [2, 7, 8, 9, 10, 13, 16, 17, 18, 19, 23, 26, 32, 33, 35, 39, 41, 43, 45, 49, 51, 52, 54, 55, 60, 65, 770, 776, 881, 1000, 1001, 1003, 1040, 1057, 1086, 1087, 1092, 1094, 1099, 1114, 1175, 1188, 1193, 1196, 1197, 1242, 1324, 1339, 1363, 1422, 1461, 1463, 1467, 1468, 1480, 1506, 1515, 1526, 1584, 1596, 1672, 1708, 1730, 1834, 1835, 1851, 1854, 1856, 1861, 1864, 1867, 1869, 1870, 1871, 1877, 1878, 1879, 1880, 1884, 1885, 1886, 1888, 1891, 1895, 1899, 1901, 1902, 1907, 1908, 1918], "nonzero": [2, 57, 1181, 1265, 1267, 1268, 1273, 1847, 1853, 1855, 1897], "themselv": [2, 10, 41, 52, 57, 784, 832, 1820, 1880, 1899, 1922], "did": [2, 8, 9, 16, 17, 35, 52, 1313, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1856, 1857, 1885, 1893, 1899], "relationship": [2, 10, 17, 49, 65, 941, 1137, 1465, 1877, 1880, 1893, 1899], "conceptu": [2, 4, 1877, 1883, 1909], "itt": [2, 1901], "intel": [2, 5, 20, 1852, 1894], "r": [2, 17, 23, 41, 63, 145, 880, 882, 884, 898, 899, 932, 943, 952, 1057, 1115, 1117, 1120, 1125, 1126, 1129, 1137, 1195, 1213, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1229, 1230, 1233, 1235, 1242, 1244, 1246, 1247, 1256, 1359, 1360, 1369, 1428, 1429, 1447, 1506, 1507, 1556, 1557, 1603, 1670, 1701, 1844, 1854, 1855, 1856, 1877, 1879, 1882, 1885, 1894, 1914, 1916], "instrument": [2, 4, 33, 1298, 1852, 1887, 1921], "technologi": [2, 1852], "applic": [2, 3, 10, 14, 41, 52, 790, 801, 802, 803, 804, 890, 982, 1119, 1294, 1352, 1353, 1461, 1463, 1498, 1596, 1837, 1852, 1864, 1872, 1877, 1879, 1880, 1881, 1882, 1886, 1887, 1888, 1892, 1895, 1898, 1902, 1907, 1908, 1909, 1911, 1917], "across": [2, 9, 14, 17, 23, 26, 32, 33, 35, 37, 39, 43, 53, 57, 62, 65, 608, 726, 810, 865, 909, 974, 1013, 1014, 1057, 1071, 1125, 1194, 1199, 1285, 1353, 1363, 1404, 1422, 1424, 1455, 1467, 1485, 1517, 1533, 1580, 1596, 1615, 1619, 1643, 1733, 1844, 1852, 1854, 1867, 1870, 1872, 1877, 1881, 1884, 1887, 1888, 1890, 1891, 1892, 1898, 1900, 1903, 1907, 1908, 1913, 1916, 1921], "tool": [2, 5, 9, 10, 14, 16, 18, 23, 29, 35, 53, 65, 852, 907, 1298, 1777, 1851, 1852, 1854, 1856, 1879, 1880, 1894, 1895, 1899, 1901, 1921], "With": [2, 14, 17, 20, 23, 29, 32, 35, 41, 57, 64, 730, 731, 732, 733, 734, 776, 1014, 1078, 1079, 1080, 1088, 1089, 1090, 1200, 1334, 1335, 1336, 1345, 1346, 1348, 1349, 1362, 1379, 1380, 1381, 1455, 1466, 1468, 1491, 1494, 1526, 1551, 1584, 1669, 1712, 1858, 1877, 1880, 1882, 1907, 1911, 1916], "abl": [2, 3, 8, 9, 12, 14, 19, 23, 29, 35, 37, 52, 62, 1114, 1182, 1194, 1459, 1596, 1854, 1861, 1870, 1877, 1882, 1883, 1893, 1895, 1899, 1902, 1907, 1911, 1918], "labl": 2, "gui": 2, "detect_anomali": 2, "check_nan": 2, "engin": [2, 9, 10, 14, 24, 27, 329, 732, 733, 734, 888, 898, 1125, 1708, 1844, 1852, 1877, 1880, 1881, 1882, 1907, 1908], "traceback": [2, 23, 29, 45, 53, 64, 65, 1159, 1169, 1777, 1856, 1857, 1858, 1869, 1872, 1882, 1892, 1911, 1918], "fail": [2, 8, 12, 13, 14, 17, 18, 23, 35, 41, 43, 44, 45, 50, 51, 52, 53, 55, 64, 65, 68, 899, 900, 961, 1014, 1185, 1191, 1194, 1213, 1242, 1247, 1255, 1256, 1273, 1652, 1857, 1859, 1869, 1877, 1880, 1882, 1890, 1891, 1894, 1895, 1899, 1907], "test": [2, 4, 14, 15, 23, 26, 29, 35, 40, 50, 52, 53, 65, 684, 690, 944, 1074, 1076, 1077, 1082, 1083, 1088, 1089, 1090, 1092, 1094, 1170, 1171, 1175, 1176, 1178, 1179, 1653, 1767, 1852, 1854, 1858, 1867, 1869, 1877, 1885, 1892, 1895, 1898, 1916, 1921, 1922], "slow": [2, 899, 1193, 1197, 1213, 1214, 1600, 1601, 1636, 1834, 1885, 1890, 1916], "myfunc": [2, 1883], "inp": [2, 32, 35, 65, 885, 886, 887, 1467, 1596, 1853, 1922], "clone": [2, 27, 32, 57, 248, 441, 888, 891, 902, 904, 905, 926, 1188, 1359, 1583, 1816, 1825, 1853, 1855, 1869, 1872, 1893, 1897, 1901, 1911, 1913, 1914, 1918], "run_fn": [2, 6, 848, 854], "10": [2, 12, 13, 14, 16, 17, 18, 23, 31, 32, 33, 35, 36, 41, 42, 52, 54, 307, 315, 329, 464, 505, 551, 572, 574, 575, 576, 676, 677, 688, 725, 736, 737, 751, 752, 753, 754, 756, 912, 924, 934, 936, 937, 938, 942, 956, 1036, 1037, 1038, 1039, 1040, 1055, 1057, 1074, 1076, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1092, 1094, 1100, 1108, 1127, 1137, 1147, 1173, 1189, 1194, 1195, 1201, 1206, 1209, 1236, 1238, 1239, 1254, 1256, 1258, 1263, 1265, 1266, 1267, 1268, 1270, 1278, 1289, 1306, 1322, 1323, 1324, 1326, 1327, 1333, 1336, 1339, 1340, 1343, 1346, 1349, 1359, 1360, 1368, 1369, 1370, 1371, 1381, 1386, 1387, 1388, 1413, 1417, 1418, 1423, 1426, 1427, 1431, 1433, 1455, 1459, 1460, 1461, 1462, 1463, 1467, 1473, 1492, 1495, 1499, 1506, 1507, 1517, 1587, 1596, 1619, 1627, 1641, 1644, 1653, 1657, 1677, 1683, 1685, 1703, 1704, 1712, 1737, 1750, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1766, 1775, 1790, 1802, 1803, 1813, 1817, 1818, 1821, 1823, 1837, 1845, 1851, 1854, 1855, 1856, 1857, 1858, 1864, 1877, 1880, 1881, 1888, 1891, 1892, 1893, 1894, 1895, 1897, 1911, 1912, 1914, 1916, 1917, 1918, 1923], "last": [2, 6, 7, 12, 23, 24, 32, 33, 36, 39, 40, 41, 52, 64, 65, 309, 608, 683, 751, 868, 913, 922, 928, 938, 1000, 1040, 1045, 1049, 1074, 1076, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1092, 1094, 1096, 1141, 1142, 1146, 1159, 1161, 1169, 1181, 1205, 1239, 1242, 1247, 1284, 1289, 1324, 1337, 1352, 1360, 1362, 1368, 1386, 1388, 1403, 1423, 1426, 1430, 1431, 1444, 1460, 1461, 1467, 1486, 1507, 1516, 1529, 1552, 1553, 1596, 1597, 1642, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1728, 1737, 1775, 1777, 1784, 1785, 1786, 1788, 1789, 1790, 1798, 1802, 1818, 1820, 1823, 1842, 1843, 1856, 1857, 1867, 1870, 1872, 1877, 1880, 1882, 1885, 1892, 1895, 1899, 1900, 1911, 1917, 1918], "stdin": [2, 1159, 1777, 1872, 1882, 1892, 1911], "instal": [2, 4, 12, 17, 19, 26, 27, 35, 65, 1851, 1888, 1889, 1895, 1899, 1907, 1916], "_tensor": [2, 149], "py": [2, 5, 12, 13, 14, 16, 17, 20, 22, 23, 26, 29, 35, 39, 41, 44, 51, 53, 57, 65, 851, 1596, 1851, 1854, 1857, 1863, 1881, 1885, 1887, 1895, 1899, 1902, 1908], "93": [2, 608], "retain_graph": [2, 145, 884, 898, 904, 905, 1125, 1844, 1855, 1876, 1877, 1907], "90": [2, 1041, 1687, 1729], "allow_unreach": 2, "76": 2, "_forward_cl": 2, "tmp": [2, 4, 26, 35, 50, 52, 1851, 1880, 1901], "53": [2, 474], "44": [2, 13, 315, 438, 1060, 1331, 1411, 1636], "set_detect_anomali": 2, "behaviour": [2, 684, 685, 690, 957, 1515, 1553, 1683, 1752, 1851, 1891, 1913], "interpos": 2, "grad_fn": [2, 145, 329, 871, 884, 892, 893, 894, 895, 896, 897, 902, 904, 905, 1113, 1604, 1779, 1877, 1888, 1893], "node": [2, 14, 20, 22, 23, 35, 39, 43, 45, 51, 52, 57, 65, 77, 80, 81, 810, 811, 812, 815, 816, 817, 1003, 1123, 1198, 1339, 1353, 1596, 1653, 1865, 1880, 1895, 1896, 1899, 1900, 1907, 1908, 1909, 1919, 1921], "grad_mod": [2, 1855], "intermediari": [2, 26, 41, 890, 1877, 1885], "access": [2, 10, 14, 16, 19, 29, 32, 35, 37, 57, 64, 548, 725, 890, 967, 1184, 1187, 1199, 1246, 1324, 1416, 1587, 1598, 1599, 1604, 1608, 1630, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1852, 1854, 1855, 1857, 1858, 1861, 1865, 1868, 1869, 1871, 1872, 1877, 1880, 1884, 1885, 1887, 1888, 1907, 1911, 1914, 1915, 1917, 1923], "isinst": [2, 22, 23, 32, 41, 65, 902, 904, 905, 1171, 1182, 1855, 1857, 1877, 1882, 1888, 1899, 1911], "dir": [2, 1000, 1653, 1851, 1857, 1899], "__call__": [2, 1184, 1416], "__class__": 2, "__delattr__": 2, "__dir__": 2, "__doc__": 2, "__eq__": 2, "__format__": [2, 1858], "__ge__": 2, "__getattribute__": 2, "__gt__": 2, "__hash__": [2, 1858], "__init_subclass__": 2, "__le__": 2, "__lt__": [2, 1857], "__ne__": 2, "__new__": [2, 1856, 1858], "__reduce__": [2, 1899], "__reduce_ex__": 2, "__repr__": [2, 4, 1882], "__setattr__": 2, "__sizeof__": 2, "__str__": [2, 65, 1855, 1857], "__subclasshook__": 2, "_raw_saved_result": 2, "_register_hook_dict": 2, "_saved_result": [2, 1877], "metadata": [2, 4, 22, 37, 45, 46, 1255, 1733, 1872, 1877, 1882, 1883, 1893, 1899, 1901, 1907, 1908, 1916], "next_funct": 2, "register_prehook": [2, 1877], "allclos": [2, 62, 63, 65, 899, 900, 1000, 1079, 1080, 1086, 1087, 1114, 1115, 1117, 1118, 1119, 1120, 1124, 1125, 1231, 1233, 1244, 1246, 1249, 1250, 1275, 1608, 1635, 1701, 1844, 1855, 1883, 1897], "pack": [2, 39, 729, 730, 731, 732, 733, 734, 736, 737, 751, 772, 1199, 1200, 1275, 1353, 1368, 1386, 1431, 1629, 1630, 1631, 1632, 1855, 1865, 1872, 1877, 1884, 1894, 1902], "unpack": [2, 751, 887, 1199, 1231, 1275, 1353, 1632, 1634, 1641, 1654, 1857, 1858, 1877, 1882, 1884], "common": [2, 4, 9, 17, 19, 22, 23, 32, 43, 52, 62, 676, 784, 856, 917, 920, 925, 951, 1052, 1057, 1102, 1103, 1104, 1105, 1127, 1206, 1255, 1305, 1334, 1335, 1336, 1339, 1455, 1497, 1588, 1589, 1591, 1592, 1593, 1594, 1595, 1721, 1733, 1799, 1852, 1857, 1862, 1871, 1877, 1880, 1882, 1883, 1884, 1888, 1890, 1893, 1895, 1899, 1911, 1912, 1915, 1918], "trade": [2, 6, 9, 57, 1247, 1333, 1879, 1884, 1903], "leav": [2, 9, 17, 43, 53, 145, 884, 1189, 1201, 1606, 1609, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1793, 1854, 1856, 1857, 1877, 1899, 1903], "especi": [2, 10, 14, 15, 16, 17, 24, 32, 35, 65, 248, 926, 944, 1583, 1856, 1877, 1882, 1883, 1891, 1893, 1902, 1907, 1911], "notic": [2, 19, 35, 680, 1077, 1091, 1278, 1288, 1332, 1468, 1532, 1674, 1675, 1680, 1681, 1687, 1852, 1854, 1877, 1911], "fit": [2, 10, 23, 44, 61, 62, 491, 908, 1181, 1661, 1723, 1900, 1918], "evalu": [2, 5, 9, 10, 21, 39, 40, 41, 60, 65, 684, 690, 789, 854, 899, 1014, 1120, 1121, 1184, 1324, 1328, 1334, 1335, 1336, 1354, 1371, 1379, 1380, 1381, 1388, 1416, 1430, 1434, 1455, 1558, 1580, 1606, 1661, 1677, 1708, 1857, 1858, 1882, 1888, 1911, 1919], "saved_tensors_hook": [2, 890, 1877], "pack_hook": [2, 1877], "unpack_hook": [2, 1877], "pair": [2, 14, 35, 37, 40, 41, 52, 54, 608, 726, 856, 932, 956, 1091, 1197, 1247, 1285, 1408, 1417, 1422, 1426, 1555, 1670, 1717, 1856, 1857, 1863, 1870, 1877, 1880, 1900, 1907, 1908, 1909, 1916, 1918, 1921], "retriev": [2, 17, 32, 33, 35, 39, 43, 52, 65, 528, 880, 881, 1359, 1363, 1467, 1506, 1596, 1630, 1653, 1777, 1872, 1877, 1887, 1895, 1899, 1900, 1907, 1908, 1909], "everytim": 2, "store": [2, 4, 6, 16, 17, 26, 29, 33, 37, 43, 53, 57, 65, 320, 326, 392, 677, 813, 816, 881, 924, 970, 972, 974, 1129, 1184, 1191, 1194, 1214, 1225, 1226, 1227, 1256, 1261, 1273, 1335, 1359, 1416, 1444, 1596, 1603, 1605, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1629, 1782, 1851, 1852, 1854, 1871, 1872, 1873, 1881, 1882, 1883, 1884, 1887, 1899, 1902, 1907, 1908, 1909, 1911, 1913, 1916, 1917, 1921], "content": [2, 4, 8, 19, 23, 37, 45, 65, 890, 1191, 1194, 1214, 1225, 1227, 1232, 1245, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1793, 1822, 1851, 1857, 1866, 1869, 1877, 1907, 1915, 1916, 1917], "equal": [2, 22, 33, 35, 41, 52, 53, 54, 65, 254, 491, 536, 608, 671, 685, 686, 687, 730, 731, 732, 733, 734, 751, 759, 760, 811, 812, 813, 816, 852, 867, 913, 922, 933, 934, 946, 956, 972, 974, 1027, 1046, 1062, 1101, 1115, 1116, 1128, 1141, 1142, 1144, 1145, 1146, 1169, 1173, 1208, 1229, 1242, 1246, 1249, 1250, 1273, 1274, 1285, 1301, 1317, 1321, 1322, 1323, 1325, 1326, 1327, 1332, 1333, 1339, 1345, 1346, 1348, 1349, 1353, 1360, 1363, 1364, 1365, 1368, 1370, 1386, 1421, 1422, 1430, 1431, 1467, 1483, 1484, 1488, 1491, 1494, 1506, 1507, 1510, 1511, 1517, 1596, 1630, 1633, 1689, 1702, 1759, 1760, 1765, 1790, 1798, 1817, 1833, 1847, 1855, 1858, 1864, 1870, 1871, 1872, 1877, 1878, 1885, 1891, 1897, 1898, 1900, 1912, 1916, 1918], "term": [2, 9, 10, 41, 52, 65, 549, 725, 754, 783, 934, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1088, 1089, 1090, 1093, 1105, 1215, 1324, 1332, 1370, 1377, 1386, 1387, 1421, 1430, 1447, 1512, 1524, 1558, 1569, 1596, 1603, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1672, 1721, 1766, 1852, 1857, 1876, 1877, 1882, 1883, 1884, 1885, 1895, 1899, 1902, 1908, 1911], "mulbackward0": [2, 893, 896, 897], "inplac": [2, 22, 60, 62, 65, 746, 749, 767, 769, 771, 782, 788, 805, 829, 830, 831, 848, 849, 854, 888, 1114, 1184, 1328, 1338, 1354, 1355, 1356, 1357, 1358, 1361, 1373, 1374, 1375, 1402, 1415, 1416, 1434, 1435, 1436, 1443, 1445, 1458, 1481, 1489, 1500, 1501, 1502, 1503, 1504, 1508, 1519, 1520, 1521, 1530, 1545, 1560, 1561, 1563, 1566, 1568, 1578, 1590, 1837, 1853, 1855, 1864, 1877, 1882, 1895, 1921], "lead": [2, 6, 8, 31, 35, 42, 57, 63, 65, 888, 892, 894, 898, 900, 1108, 1125, 1214, 1386, 1431, 1447, 1793, 1844, 1857, 1871, 1872, 1877, 1879, 1881, 1882, 1883, 1891, 1894, 1898, 1899, 1902, 1911, 1916, 1917], "undefin": [2, 35, 42, 45, 57, 313, 464, 608, 869, 891, 899, 900, 928, 1060, 1109, 1110, 1332, 1652, 1695, 1877, 1880, 1882, 1883], "inner": [2, 4, 57, 58, 63, 806, 808, 892, 1040, 1115, 1119, 1124, 1823, 1855, 1897, 1907, 1921], "save_on_cpu": 2, "pin_memori": [2, 32, 438, 439, 440, 441, 442, 1058, 1060, 1710, 1714, 1716, 1816, 1853, 1854, 1855, 1872, 1880, 1897, 1913], "within": [2, 6, 10, 14, 16, 22, 23, 32, 33, 35, 39, 40, 41, 52, 53, 54, 57, 64, 65, 83, 869, 899, 900, 964, 1040, 1184, 1188, 1276, 1329, 1330, 1331, 1339, 1355, 1356, 1357, 1361, 1363, 1409, 1410, 1411, 1416, 1422, 1455, 1467, 1515, 1539, 1540, 1541, 1596, 1606, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1706, 1707, 1737, 1759, 1836, 1854, 1856, 1857, 1867, 1872, 1875, 1879, 1880, 1882, 1886, 1887, 1888, 1891, 1895, 1898, 1899, 1902, 1905, 1906, 1907, 1908, 1916], "move": [2, 6, 8, 9, 10, 17, 23, 26, 35, 37, 57, 65, 515, 580, 812, 1077, 1184, 1191, 1250, 1255, 1291, 1334, 1335, 1336, 1389, 1390, 1391, 1416, 1455, 1553, 1598, 1599, 1669, 1856, 1865, 1866, 1869, 1871, 1880, 1883, 1884, 1888, 1889, 1890, 1898, 1899, 1900, 1907, 1913, 1918], "copi": [2, 8, 16, 22, 24, 32, 33, 35, 37, 43, 50, 57, 61, 62, 65, 185, 191, 201, 204, 309, 396, 441, 451, 456, 464, 485, 491, 571, 572, 573, 574, 594, 608, 783, 805, 829, 830, 870, 871, 886, 933, 941, 970, 971, 1096, 1097, 1098, 1099, 1101, 1114, 1184, 1195, 1256, 1316, 1353, 1363, 1416, 1426, 1467, 1596, 1629, 1718, 1724, 1730, 1816, 1825, 1831, 1854, 1855, 1869, 1872, 1877, 1878, 1880, 1882, 1890, 1897, 1899, 1900, 1901, 1902, 1907, 1911, 1913, 1914, 1915, 1917, 1921], "pin": [2, 204, 331, 438, 439, 440, 441, 442, 456, 571, 594, 1058, 1060, 1184, 1416, 1629, 1710, 1714, 1716, 1816, 1852, 1872, 1913], "asynchron": [2, 4, 5, 64, 191, 204, 571, 594, 983, 1184, 1187, 1202, 1416, 1852, 1858, 1879, 1881, 1907, 1913, 1916], "prod_1": 2, "prod_2": 2, "del": [2, 1858, 1869, 1882, 1884], "illustr": [2, 17, 1857, 1876, 1882, 1911], "aliv": [2, 32, 43, 52, 961, 1877, 1880, 1884, 1890, 1907, 1908, 1909], "live": [2, 39, 1000, 1003, 1184, 1416, 1854, 1880, 1884, 1907, 1909], "releas": [2, 8, 23, 31, 35, 52, 54, 61, 65, 505, 678, 934, 935, 957, 958, 959, 965, 982, 992, 993, 996, 1000, 1001, 1003, 1014, 1130, 1184, 1214, 1225, 1227, 1228, 1229, 1232, 1245, 1273, 1274, 1294, 1356, 1386, 1416, 1431, 1539, 1540, 1541, 1643, 1701, 1717, 1733, 1798, 1802, 1825, 1851, 1852, 1856, 1867, 1869, 1877, 1879, 1880, 1886, 1891, 1892, 1893, 1894, 1895, 1902, 1907, 1917, 1918], "delet": [2, 22, 35, 65, 885, 958, 966, 1851, 1865, 1869, 1877, 1897, 1906, 1907, 1909], "disable_saved_tensors_hook": 2, "error_messag": 2, "featur": [2, 6, 9, 10, 16, 18, 24, 27, 29, 35, 37, 39, 53, 58, 64, 671, 680, 751, 759, 760, 892, 894, 898, 1031, 1195, 1278, 1288, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1334, 1349, 1354, 1355, 1356, 1357, 1361, 1364, 1365, 1368, 1369, 1379, 1386, 1387, 1422, 1431, 1433, 1450, 1459, 1461, 1463, 1464, 1465, 1466, 1483, 1484, 1501, 1502, 1503, 1508, 1510, 1511, 1532, 1596, 1691, 1837, 1852, 1854, 1856, 1857, 1858, 1861, 1863, 1871, 1872, 1877, 1882, 1884, 1885, 1892, 1895, 1896, 1901, 1902, 1907, 1911, 1916], "messag": [2, 3, 23, 29, 35, 45, 54, 62, 65, 78, 615, 671, 1017, 1019, 1213, 1214, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1851, 1854, 1855, 1857, 1858, 1863, 1884, 1895, 1900, 1901, 1907, 1909, 1918], "get": [2, 9, 17, 18, 21, 23, 26, 32, 35, 36, 37, 52, 53, 54, 55, 57, 62, 64, 65, 83, 145, 329, 677, 725, 779, 780, 852, 853, 884, 887, 928, 985, 986, 987, 1004, 1044, 1114, 1117, 1118, 1119, 1131, 1159, 1199, 1251, 1359, 1360, 1384, 1385, 1412, 1413, 1414, 1426, 1443, 1596, 1597, 1604, 1630, 1637, 1722, 1737, 1851, 1852, 1854, 1857, 1867, 1869, 1870, 1877, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1897, 1899, 1902, 1907, 1909, 1911, 1915, 1916, 1917, 1922], "register_multi_grad_hook": [2, 1877], "multi": [2, 5, 40, 43, 52, 751, 961, 1004, 1024, 1057, 1077, 1146, 1184, 1333, 1353, 1368, 1386, 1416, 1419, 1420, 1421, 1422, 1431, 1459, 1461, 1468, 1596, 1852, 1854, 1857, 1877, 1879, 1880, 1888, 1892, 1898, 1907, 1911, 1914, 1917, 1919], "ignor": [2, 6, 8, 19, 22, 35, 39, 44, 50, 57, 65, 145, 491, 535, 677, 680, 681, 682, 726, 785, 786, 849, 852, 853, 865, 884, 898, 899, 900, 912, 934, 956, 1004, 1005, 1024, 1025, 1078, 1080, 1088, 1089, 1090, 1129, 1144, 1184, 1195, 1201, 1204, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1275, 1311, 1312, 1313, 1329, 1330, 1331, 1332, 1333, 1350, 1352, 1360, 1368, 1370, 1376, 1382, 1383, 1386, 1407, 1408, 1409, 1410, 1411, 1416, 1419, 1420, 1421, 1422, 1423, 1430, 1431, 1447, 1448, 1459, 1464, 1487, 1488, 1498, 1507, 1527, 1550, 1558, 1596, 1643, 1654, 1677, 1685, 1689, 1750, 1780, 1781, 1798, 1802, 1825, 1854, 1857, 1858, 1864, 1871, 1877, 1880, 1882, 1895, 1911, 1918], "rel": [2, 9, 10, 17, 26, 33, 35, 41, 57, 65, 480, 685, 867, 899, 900, 904, 905, 956, 1173, 1238, 1241, 1464, 1465, 1480, 1515, 1654, 1658, 1659, 1685, 1864, 1867, 1879, 1880, 1887, 1895, 1899, 1918], "allow_mutation_on_saved_tensor": 2, "mutat": [2, 14, 65, 788, 829, 830, 848, 849, 1114, 1188, 1899, 1917], "version": [2, 3, 6, 9, 23, 26, 31, 33, 35, 37, 41, 53, 57, 60, 61, 65, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 116, 118, 120, 122, 125, 126, 128, 136, 138, 141, 142, 144, 147, 153, 155, 157, 159, 161, 163, 172, 181, 189, 193, 196, 198, 208, 210, 226, 230, 232, 238, 241, 243, 245, 247, 251, 256, 263, 265, 267, 271, 273, 277, 279, 286, 288, 290, 298, 300, 302, 304, 306, 308, 310, 312, 350, 352, 354, 356, 358, 360, 362, 365, 367, 369, 370, 377, 379, 381, 383, 385, 389, 393, 395, 413, 416, 419, 421, 432, 434, 436, 444, 449, 459, 462, 478, 482, 484, 500, 503, 504, 506, 508, 514, 518, 520, 523, 525, 527, 540, 542, 544, 547, 553, 555, 562, 566, 568, 584, 587, 589, 591, 593, 603, 613, 726, 727, 728, 740, 741, 742, 743, 744, 745, 766, 767, 768, 769, 771, 775, 776, 795, 796, 797, 830, 838, 846, 847, 849, 963, 1003, 1113, 1141, 1159, 1181, 1184, 1187, 1188, 1191, 1194, 1213, 1226, 1227, 1231, 1232, 1245, 1278, 1315, 1333, 1386, 1416, 1417, 1431, 1468, 1480, 1505, 1515, 1522, 1531, 1562, 1564, 1579, 1580, 1584, 1588, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1637, 1638, 1669, 1671, 1672, 1734, 1735, 1736, 1793, 1796, 1797, 1798, 1802, 1822, 1837, 1839, 1840, 1851, 1870, 1871, 1877, 1878, 1880, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1892, 1894, 1895, 1896, 1898, 1899, 1901, 1905, 1911, 1918, 1919], "_allowmutationonsavedcontext": 2, "purpos": [2, 12, 16, 17, 23, 33, 35, 65, 464, 491, 751, 899, 1193, 1278, 1339, 1368, 1422, 1590, 1591, 1592, 1593, 1750, 1867, 1872, 1877, 1899, 1908], "upon": [2, 3, 32, 36, 43, 45, 65, 1596, 1605, 1608, 1869, 1877, 1880, 1895, 1902, 1909], "sin_": [2, 1855, 1870], "8415": [2, 1911], "sinbackward0": 2, "variou": [3, 6, 26, 32, 35, 65, 1256, 1861, 1864, 1869, 1872, 1882, 1888, 1890, 1898, 1902, 1904, 1911, 1922], "get_cpu_cap": 3, "capabl": [3, 9, 26, 27, 35, 985, 1708, 1861, 1880, 1886, 1887, 1889, 1919], "possibl": [3, 10, 12, 14, 17, 18, 19, 23, 26, 27, 29, 35, 37, 41, 61, 62, 65, 489, 490, 571, 608, 849, 870, 871, 938, 967, 1105, 1117, 1184, 1197, 1224, 1237, 1240, 1241, 1244, 1249, 1255, 1333, 1339, 1416, 1422, 1506, 1507, 1526, 1559, 1584, 1608, 1609, 1721, 1724, 1739, 1790, 1798, 1816, 1854, 1856, 1857, 1869, 1870, 1875, 1877, 1879, 1880, 1881, 1882, 1885, 1890, 1891, 1892, 1894, 1899, 1902, 1907, 1909, 1914, 1918], "vsx": 3, "z": [3, 4, 11, 22, 23, 41, 57, 62, 608, 811, 868, 890, 935, 936, 946, 1057, 1061, 1285, 1369, 1515, 1608, 1641, 1642, 1650, 1695, 1725, 1726, 1854, 1855, 1856, 1871, 1877, 1879, 1880, 1885, 1886, 1895, 1899, 1905, 1907, 1909], "vector": [3, 16, 24, 33, 41, 57, 58, 62, 248, 307, 309, 315, 680, 681, 682, 875, 884, 886, 892, 893, 894, 895, 896, 897, 898, 925, 926, 932, 943, 952, 956, 957, 1038, 1039, 1044, 1046, 1120, 1124, 1125, 1129, 1216, 1223, 1231, 1239, 1240, 1244, 1247, 1251, 1252, 1253, 1273, 1278, 1285, 1306, 1308, 1333, 1334, 1335, 1336, 1339, 1353, 1359, 1360, 1363, 1371, 1379, 1380, 1381, 1425, 1455, 1464, 1467, 1488, 1506, 1507, 1515, 1517, 1551, 1555, 1583, 1600, 1602, 1604, 1608, 1639, 1643, 1690, 1691, 1782, 1802, 1838, 1841, 1844, 1877, 1885, 1902, 1911, 1916], "NO": 3, "avx": 3, "avx2": [3, 1902], "avx512": 3, "is_built": [3, 1889], "built": [3, 4, 8, 9, 12, 13, 17, 23, 26, 33, 35, 40, 45, 60, 65, 945, 983, 1193, 1465, 1677, 1852, 1872, 1877, 1879, 1880, 1882, 1886, 1888, 1889, 1890, 1904, 1922], "necessarili": [3, 33, 35, 41, 43, 52, 464, 899, 1220, 1242, 1253, 1284, 1352, 1423, 1880, 1882], "machin": [3, 35, 43, 52, 57, 58, 63, 1188, 1193, 1229, 1452, 1886, 1887, 1888, 1889, 1892, 1895, 1896, 1899, 1906, 1907, 1908], "driver": [3, 23, 1129, 1229, 1247, 1248, 1293, 1855, 1880, 1891, 1907], "allow_tf32": [3, 1745, 1855, 1880, 1891], "tensorfloat": 3, "core": [3, 4, 8, 9, 15, 17, 18, 20, 61, 944, 1014, 1652, 1857, 1861, 1879, 1880, 1881, 1891, 1899, 1919], "amper": [3, 18], "newer": [3, 16, 26, 1020, 1637, 1879, 1880, 1893, 1896, 1898, 1899, 1903], "tf32": 3, "allow_fp16_reduced_precision_reduct": [3, 1880, 1891], "precis": [3, 4, 9, 20, 24, 26, 33, 41, 57, 677, 680, 899, 900, 912, 924, 1003, 1100, 1133, 1229, 1247, 1253, 1278, 1288, 1329, 1330, 1331, 1333, 1344, 1345, 1346, 1347, 1348, 1349, 1369, 1387, 1403, 1409, 1410, 1411, 1468, 1526, 1565, 1596, 1730, 1745, 1750, 1852, 1857, 1867, 1873, 1877, 1888, 1899, 1902, 1903, 1905, 1912, 1914, 1916, 1917, 1923], "gemm": [3, 14, 1879, 1895], "allow_bf16_reduced_precision_reduct": [3, 1880, 1891], "cufft_plan_cach": [3, 1880], "cufft": 3, "queri": [3, 17, 35, 52, 65, 726, 960, 961, 963, 969, 1016, 1020, 1034, 1035, 1184, 1416, 1422, 1565, 1607, 1855, 1880, 1899], "specif": [3, 4, 8, 9, 10, 16, 17, 20, 22, 23, 26, 35, 37, 39, 41, 43, 50, 52, 54, 57, 62, 65, 83, 505, 845, 852, 908, 963, 1048, 1077, 1146, 1181, 1188, 1193, 1197, 1199, 1200, 1284, 1363, 1388, 1565, 1590, 1591, 1610, 1651, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1740, 1779, 1851, 1854, 1856, 1857, 1859, 1861, 1863, 1867, 1871, 1873, 1877, 1880, 1886, 1890, 1892, 1895, 1898, 1899, 1901, 1902, 1903, 1905, 1907, 1909, 1916, 1917], "via": [3, 8, 12, 14, 17, 19, 26, 27, 32, 35, 37, 41, 50, 57, 61, 65, 509, 608, 899, 900, 931, 958, 994, 1014, 1061, 1117, 1256, 1334, 1335, 1336, 1353, 1371, 1379, 1380, 1381, 1388, 1455, 1603, 1637, 1640, 1683, 1854, 1856, 1857, 1867, 1869, 1872, 1875, 1877, 1880, 1882, 1883, 1884, 1886, 1888, 1890, 1891, 1895, 1899, 1902, 1907, 1908, 1911, 1914, 1915, 1922], "readonli": 3, "show": [3, 5, 8, 15, 18, 20, 23, 25, 29, 32, 33, 35, 37, 42, 57, 65, 892, 898, 944, 1108, 1184, 1285, 1416, 1587, 1653, 1851, 1852, 1857, 1870, 1879, 1880, 1881, 1885, 1886, 1888, 1895, 1898, 1899, 1907, 1909], "max_siz": [3, 51, 53, 1880], "capac": [3, 1027, 1880], "preferred_linalg_librari": 3, "algebra": [3, 10, 1057, 1241, 1852, 1862], "cusolv": [3, 1247, 1248, 1802], "magma": [3, 936, 1229, 1273, 1701, 1802, 1894, 1911], "decid": [3, 5, 8, 14, 35, 52, 61, 1619, 1864, 1895, 1911], "heurist": [3, 14, 23, 26, 32, 52, 53, 65, 1057], "overrid": [3, 22, 26, 33, 35, 36, 41, 45, 53, 57, 62, 65, 783, 784, 845, 881, 883, 1000, 1332, 1333, 1350, 1352, 1376, 1383, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1487, 1488, 1498, 1527, 1550, 1558, 1610, 1672, 1733, 1750, 1852, 1857, 1861, 1898, 1899, 1902, 1907, 1916, 1921], "wherev": [3, 10, 17, 1870], "pick": [3, 13, 15, 35, 51, 53, 505, 944, 1877, 1907], "prefer": [3, 10, 32, 37, 43, 57, 853, 869, 894, 1182, 1224, 1237, 1241, 1249, 1256, 1423, 1565, 1737, 1798, 1816, 1854, 1877, 1880, 1899, 1911], "achiev": [3, 23, 32, 33, 35, 41, 53, 57, 1057, 1121, 1184, 1339, 1416, 1422, 1423, 1517, 1596, 1880, 1887, 1899, 1907, 1909], "better": [3, 4, 8, 9, 10, 12, 13, 14, 15, 17, 20, 23, 26, 32, 35, 43, 61, 944, 1026, 1113, 1117, 1118, 1159, 1171, 1199, 1352, 1449, 1571, 1596, 1683, 1708, 1857, 1876, 1877, 1879, 1880, 1885, 1894, 1895, 1898, 1901, 1903, 1911, 1916, 1921], "select": [3, 6, 17, 20, 27, 30, 32, 35, 41, 43, 307, 309, 311, 315, 751, 934, 964, 965, 969, 976, 977, 978, 979, 981, 1002, 1006, 1008, 1009, 1010, 1012, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1026, 1027, 1030, 1032, 1034, 1035, 1077, 1256, 1285, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1368, 1386, 1431, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1565, 1624, 1625, 1740, 1813, 1847, 1853, 1854, 1855, 1857, 1869, 1870, 1871, 1872, 1877, 1879, 1880, 1885, 1892, 1897, 1902, 1911, 1915, 1918], "incorrect": [3, 5, 6, 57, 65, 248, 505, 547, 890, 899, 926, 1199, 1242, 1255, 1422, 1460, 1461, 1462, 1463, 1583, 1643, 1798, 1854, 1857, 1880, 1891, 1895], "linalg": [3, 400, 934, 935, 936, 937, 957, 1043, 1129, 1162, 1264, 1273, 1274, 1275, 1279, 1280, 1603, 1604, 1608, 1643, 1688, 1693, 1695, 1701, 1772, 1802, 1803, 1825, 1841, 1852], "inv": [3, 41, 936, 1162, 1215, 1219, 1225, 1241, 1245, 1249], "inv_ex": 3, "cholesky_ex": [3, 1213], "lu_factor": [3, 1232, 1233, 1273, 1274, 1275], "lu": [3, 11, 1225, 1231, 1232, 1233, 1274, 1275, 1855], "eigh": [3, 1213, 1219, 1222, 1241, 1247, 1891], "eighval": 3, "svdval": [3, 1215, 1229, 1238, 1247, 1802, 1891], "_linalgbackend": 3, "sdpbackend": 3, "enum": [3, 17, 35, 787, 1895, 1902, 1907], "scale": [3, 8, 14, 32, 41, 43, 51, 53, 92, 466, 468, 608, 676, 680, 681, 682, 729, 730, 731, 732, 733, 734, 735, 740, 741, 742, 743, 744, 745, 746, 747, 750, 761, 763, 764, 765, 766, 768, 771, 772, 786, 790, 793, 810, 811, 812, 813, 816, 912, 1071, 1072, 1075, 1093, 1124, 1125, 1270, 1328, 1354, 1359, 1360, 1361, 1377, 1388, 1443, 1468, 1469, 1470, 1506, 1507, 1508, 1524, 1526, 1565, 1566, 1571, 1656, 1677, 1703, 1704, 1705, 1706, 1707, 1780, 1781, 1799, 1844, 1852, 1855, 1871, 1875, 1880, 1884, 1888, 1902, 1903, 1905, 1912], "product": [3, 18, 27, 35, 41, 52, 145, 677, 680, 681, 682, 751, 884, 886, 893, 895, 896, 897, 898, 912, 924, 930, 934, 952, 957, 969, 1016, 1020, 1034, 1035, 1038, 1054, 1057, 1120, 1124, 1125, 1161, 1204, 1216, 1223, 1249, 1250, 1252, 1278, 1285, 1288, 1308, 1368, 1369, 1386, 1387, 1514, 1565, 1603, 1689, 1690, 1699, 1818, 1833, 1841, 1844, 1852, 1854, 1870, 1877, 1885, 1887, 1891, 1899, 1911], "attent": [3, 8, 40, 726, 1422, 1459, 1461, 1463, 1565, 1852, 1894, 1915], "stai": [3, 8, 39, 134, 1353, 1880, 1890, 1902, 1907, 1911], "align": [3, 10, 15, 33, 751, 770, 776, 811, 817, 944, 1057, 1137, 1239, 1331, 1339, 1352, 1368, 1382, 1386, 1410, 1411, 1431, 1468, 1498, 1499, 1526, 1527, 1584, 1603, 1643, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1675, 1823, 1852, 1870, 1877, 1885, 1895, 1905, 1912], "src": [3, 4, 35, 65, 191, 223, 307, 315, 464, 504, 505, 506, 507, 508, 509, 511, 529, 1048, 1114, 1306, 1459, 1462, 1463, 1652, 1734, 1735, 1736, 1740, 1771, 1812, 1837, 1853, 1855, 1899], "transform": [3, 4, 16, 17, 18, 32, 37, 40, 57, 62, 772, 788, 829, 830, 848, 849, 935, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1113, 1114, 1115, 1119, 1124, 1181, 1193, 1337, 1371, 1379, 1380, 1381, 1388, 1403, 1444, 1460, 1461, 1462, 1463, 1480, 1486, 1515, 1532, 1551, 1587, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1766, 1798, 1852, 1883, 1900, 1902, 1916, 1921], "sdp_utils_cpp": 3, "h": [3, 5, 11, 20, 26, 41, 480, 732, 733, 734, 751, 1213, 1220, 1223, 1233, 1247, 1322, 1323, 1330, 1331, 1335, 1336, 1340, 1345, 1346, 1348, 1356, 1357, 1359, 1361, 1368, 1369, 1380, 1381, 1386, 1387, 1388, 1399, 1400, 1410, 1411, 1428, 1429, 1431, 1433, 1450, 1466, 1469, 1470, 1480, 1515, 1550, 1556, 1557, 1603, 1604, 1637, 1652, 1802, 1855, 1870, 1871, 1877, 1880, 1881, 1884, 1885, 1895, 1915, 1916, 1917], "flash_sdp_en": 3, "flash": 3, "enable_mem_efficient_sdp": [3, 1565], "mem_efficient_sdp_en": 3, "enable_flash_sdp": [3, 1565], "math_sdp_en": 3, "math": [3, 23, 32, 65, 1067, 1233, 1235, 1527, 1565, 1691, 1708, 1803, 1852, 1854, 1856, 1857, 1891, 1911, 1912, 1918], "enable_math_sdp": [3, 1565], "sdp_kernel": [3, 1565], "enable_flash": 3, "enable_math": [3, 1565], "enable_mem_effici": 3, "temporarili": [3, 43, 1741, 1877, 1895, 1901], "previou": [3, 14, 29, 35, 52, 57, 65, 547, 751, 992, 1102, 1137, 1194, 1254, 1270, 1368, 1386, 1431, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1653, 1708, 1798, 1865, 1877, 1880, 1882, 1888, 1894, 1902, 1909], "is_avail": [3, 28, 35, 1852, 1880, 1886, 1889, 1901], "determinist": [3, 4, 6, 31, 35, 41, 65, 83, 505, 864, 1132, 1165, 1187, 1199, 1200, 1281, 1284, 1286, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1386, 1431, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1565, 1738, 1744, 1837, 1855, 1877, 1892, 1898, 1906], "algorithm": [3, 4, 8, 24, 30, 33, 36, 39, 41, 43, 57, 83, 751, 770, 776, 934, 1181, 1224, 1231, 1237, 1241, 1247, 1256, 1273, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1366, 1368, 1386, 1431, 1467, 1468, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1515, 1526, 1565, 1584, 1596, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1672, 1691, 1730, 1745, 1802, 1803, 1837, 1852, 1877, 1880, 1891, 1907, 1911], "are_deterministic_algorithms_en": 3, "use_deterministic_algorithm": [3, 864, 1165, 1744, 1892], "benchmark": [3, 14, 18, 20, 1852, 1855, 1880, 1886], "fastest": [3, 868, 1596, 1642, 1658, 1659, 1885, 1892, 1898], "benchmark_limit": 3, "maximum": [3, 41, 52, 53, 686, 688, 762, 786, 811, 812, 813, 816, 817, 865, 971, 1006, 1008, 1014, 1021, 1022, 1036, 1037, 1103, 1119, 1144, 1145, 1146, 1256, 1281, 1301, 1375, 1506, 1507, 1601, 1675, 1683, 1708, 1722, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1853, 1855, 1863, 1875, 1876, 1880, 1897, 1905, 1918], "try": [3, 4, 5, 8, 9, 12, 14, 15, 16, 23, 35, 37, 44, 45, 49, 52, 57, 61, 62, 77, 78, 944, 1027, 1110, 1119, 1125, 1189, 1190, 1199, 1301, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1460, 1462, 1468, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1565, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1844, 1851, 1854, 1857, 1858, 1877, 1880, 1882, 1884, 1885, 1890, 1895, 1898, 1899, 1902, 1903, 1907, 1911], "dispatch": [3, 14, 35, 57, 65, 1189, 1297, 1298, 1857, 1861, 1880, 1882, 1895, 1922], "v8": 3, "verbos": [3, 14, 23, 26, 35, 65, 671, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1851, 1863, 1871, 1895, 1896, 1916], "On": [3, 26, 31, 32, 35, 36, 41, 53, 57, 62, 65, 677, 680, 912, 924, 1231, 1278, 1288, 1344, 1345, 1346, 1347, 1348, 1349, 1369, 1384, 1385, 1386, 1387, 1403, 1426, 1431, 1444, 1596, 1658, 1659, 1668, 1671, 1852, 1854, 1864, 1877, 1879, 1880, 1891, 1899, 1907, 1908, 1909, 1911], "demand": [3, 32, 994, 1856, 1887, 1907], "onemkl": 3, "dump": [3, 14, 17, 23, 65, 958, 1881, 1894], "durat": [3, 14, 23, 35, 49, 52, 1297, 1298, 1867, 1901], "kernel": [3, 4, 5, 14, 16, 23, 24, 26, 29, 35, 57, 64, 730, 731, 732, 733, 734, 763, 764, 765, 961, 963, 964, 1000, 1001, 1033, 1035, 1303, 1329, 1330, 1331, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1364, 1365, 1384, 1385, 1392, 1393, 1394, 1395, 1396, 1397, 1409, 1410, 1411, 1412, 1413, 1414, 1467, 1490, 1491, 1492, 1493, 1494, 1495, 1510, 1511, 1565, 1606, 1854, 1861, 1865, 1872, 1880, 1882, 1883, 1889, 1891, 1895, 1898, 1901, 1903, 1911], "environ": [3, 4, 8, 12, 14, 23, 26, 27, 29, 31, 33, 41, 43, 45, 50, 55, 65, 671, 1193, 1199, 1386, 1431, 1837, 1851, 1854, 1863, 1877, 1879, 1881, 1886, 1891, 1892, 1894, 1900, 1907], "mkl_verbos": 3, "methodologi": 3, "larg": [3, 4, 8, 9, 14, 23, 32, 35, 65, 83, 671, 849, 954, 956, 1014, 1229, 1247, 1324, 1363, 1467, 1509, 1596, 1683, 1770, 1782, 1852, 1869, 1871, 1872, 1879, 1880, 1884, 1888, 1891, 1893, 1895, 1899, 1900, 1903, 1907, 1911, 1914, 1917], "moreov": [3, 57, 505, 1596, 1671], "investig": [3, 8, 35, 62], "enough": [3, 9, 33, 65, 1195, 1306, 1465, 1784, 1785, 1786, 1787, 1788, 1789, 1837, 1856, 1869, 1872, 1882, 1885, 1898, 1899, 1914, 1922], "scope": [3, 8, 22, 54, 65, 1110, 1455, 1619, 1854, 1856, 1857, 1880, 1884, 1895, 1899, 1909], "second": [3, 6, 17, 26, 29, 35, 39, 43, 45, 52, 54, 63, 65, 677, 680, 682, 685, 751, 785, 865, 866, 867, 875, 883, 899, 900, 912, 916, 917, 919, 920, 921, 924, 957, 969, 1016, 1020, 1034, 1035, 1045, 1047, 1048, 1054, 1062, 1103, 1104, 1115, 1118, 1119, 1120, 1124, 1125, 1127, 1128, 1137, 1140, 1148, 1149, 1150, 1161, 1173, 1206, 1208, 1216, 1252, 1255, 1261, 1262, 1272, 1278, 1282, 1284, 1285, 1287, 1288, 1312, 1317, 1320, 1324, 1330, 1331, 1337, 1345, 1346, 1348, 1349, 1359, 1360, 1367, 1368, 1382, 1385, 1386, 1404, 1408, 1410, 1411, 1431, 1444, 1497, 1499, 1533, 1587, 1619, 1658, 1659, 1662, 1668, 1672, 1683, 1729, 1779, 1787, 1822, 1827, 1829, 1838, 1841, 1844, 1856, 1857, 1877, 1880, 1882, 1883, 1884, 1885, 1888, 1892, 1895, 1901, 1907, 1912, 1916], "verbose_on": 3, "level": [3, 4, 8, 9, 10, 14, 17, 21, 22, 23, 27, 29, 32, 35, 43, 44, 45, 49, 57, 61, 65, 491, 671, 738, 885, 886, 887, 895, 963, 1114, 1129, 1353, 1596, 1852, 1853, 1854, 1857, 1858, 1863, 1867, 1869, 1872, 1875, 1877, 1879, 1882, 1885, 1899, 1901, 1902, 1903, 1907, 1911, 1916, 1920, 1921, 1922], "verbose_off": 3, "dnn": [3, 1879], "onednn": [3, 846, 847, 850, 1186, 1192, 1902], "former": [3, 57, 1386, 1416, 1877], "dnnl_verbos": 3, "verbose_on_cr": 3, "get_opt_einsum": 3, "packag": [3, 8, 9, 12, 28, 33, 41, 61, 64, 1515, 1596, 1851, 1852, 1868, 1882, 1888, 1898, 1905, 1907, 1916, 1919], "els": [3, 8, 12, 22, 32, 35, 37, 41, 43, 44, 52, 65, 594, 751, 915, 1195, 1201, 1382, 1455, 1552, 1565, 1596, 1650, 1658, 1659, 1668, 1669, 1670, 1671, 1725, 1726, 1759, 1765, 1854, 1856, 1858, 1859, 1864, 1869, 1872, 1880, 1882, 1883, 1888, 1889, 1895, 1898, 1899, 1913], "einsum": [3, 1855, 1897], "readthedoc": [3, 1057], "io": [3, 8, 32, 37, 1057, 1191, 1194, 1255, 1386, 1387, 1463, 1565, 1651, 1733, 1894, 1902], "en": [3, 33, 1057, 1886, 1916, 1923], "path_find": [3, 1057], "html": [3, 4, 5, 8, 15, 27, 53, 671, 721, 722, 723, 724, 736, 737, 747, 752, 753, 754, 755, 756, 944, 1057, 1465, 1837, 1878, 1886, 1888, 1892, 1899, 1916], "calcul": [3, 32, 35, 49, 751, 759, 760, 790, 793, 810, 811, 815, 932, 956, 1045, 1049, 1057, 1061, 1175, 1181, 1239, 1261, 1262, 1264, 1329, 1330, 1331, 1334, 1335, 1336, 1339, 1347, 1348, 1349, 1363, 1368, 1370, 1371, 1379, 1380, 1381, 1388, 1455, 1467, 1468, 1482, 1483, 1484, 1512, 1515, 1526, 1555, 1604, 1615, 1637, 1641, 1643, 1677, 1723, 1747, 1796, 1797, 1827, 1829, 1839, 1840, 1877, 1878, 1881, 1885, 1891, 1894, 1902, 1921], "path": [3, 4, 5, 9, 14, 17, 26, 35, 37, 50, 52, 54, 55, 57, 65, 725, 906, 907, 958, 959, 1057, 1184, 1416, 1432, 1463, 1653, 1851, 1855, 1856, 1877, 1880, 1882, 1886, 1893, 1899, 1901, 1911, 1920], "contract": [3, 12, 17, 1057, 1818, 1852, 1871, 1899], "left": [3, 32, 65, 453, 491, 805, 811, 856, 913, 917, 922, 923, 928, 933, 1057, 1077, 1084, 1098, 1101, 1102, 1106, 1137, 1141, 1142, 1146, 1181, 1182, 1189, 1203, 1224, 1233, 1237, 1241, 1244, 1245, 1246, 1247, 1249, 1261, 1262, 1306, 1324, 1329, 1330, 1331, 1332, 1333, 1344, 1345, 1346, 1363, 1370, 1383, 1384, 1385, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1419, 1420, 1421, 1425, 1426, 1464, 1467, 1468, 1469, 1470, 1515, 1535, 1553, 1601, 1675, 1676, 1689, 1717, 1730, 1737, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1798, 1818, 1823, 1838, 1854, 1855, 1857, 1877, 1882, 1888, 1905, 1912], "strategi": [3, 4, 8, 14, 32, 33, 35, 39, 45, 57, 892, 894, 1057, 1117, 1197, 1324, 1596, 1683, 1856, 1883, 1885, 1903], "auto": [3, 35, 58, 77, 78, 1057, 1332, 1333, 1857, 1895, 1916], "greedi": [3, 39, 1057], "doc": [3, 4, 5, 10, 15, 19, 27, 52, 53, 77, 671, 721, 722, 723, 724, 736, 737, 747, 752, 753, 754, 755, 756, 831, 944, 1125, 1202, 1460, 1461, 1462, 1463, 1837, 1844, 1858, 1869, 1878, 1881, 1882, 1888, 1892, 1895, 1899, 1916], "timer": [4, 38, 1852], "stmt": [4, 1879], "setup": [4, 12, 26, 33, 52, 53, 811, 812, 813, 816, 1125, 1596, 1844, 1879, 1880, 1889, 1907, 1908], "global_setup": 4, "perf_count": 4, "global": [4, 6, 9, 13, 14, 22, 23, 32, 35, 37, 39, 40, 41, 43, 53, 57, 62, 64, 65, 845, 852, 856, 864, 913, 922, 1009, 1016, 1058, 1060, 1070, 1075, 1093, 1111, 1114, 1141, 1142, 1165, 1172, 1184, 1187, 1199, 1203, 1254, 1270, 1416, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1615, 1619, 1647, 1710, 1712, 1714, 1717, 1741, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1849, 1854, 1857, 1858, 1873, 1876, 1882, 1887, 1888, 1890, 1892, 1902, 1907, 1908, 1909, 1911, 1914, 1916], "label": [4, 7, 8, 32, 39, 1057, 1324, 1333, 1339, 1350, 1352, 1376, 1408, 1419, 1420, 1499, 1630, 1676, 1881, 1890, 1892, 1916], "sub_label": 4, "descript": [4, 8, 23, 25, 26, 32, 45, 52, 65, 725, 1155, 1156, 1157, 1229, 1256, 1480, 1701, 1856, 1857, 1880, 1882, 1885, 1887, 1888, 1895, 1923], "env": [4, 14, 23, 35, 41, 45, 50, 52, 53, 55, 65, 1014, 1650, 1881, 1891, 1907], "num_thread": 4, "languag": [4, 26, 45, 1195, 1324, 1459, 1514, 1884], "measur": [4, 41, 49, 960, 1006, 1008, 1215, 1332, 1333, 1350, 1376, 1383, 1407, 1408, 1464, 1465, 1487, 1488, 1546, 1685, 1852, 1880, 1887, 1888, 1898, 1911], "statement": [4, 12, 17, 41, 62, 65, 1185, 1199, 1858, 1877, 1882, 1890, 1893, 1895, 1899, 1905, 1907], "org": [4, 5, 8, 10, 11, 15, 27, 33, 40, 41, 53, 671, 721, 722, 723, 724, 736, 737, 747, 752, 753, 754, 755, 756, 944, 1256, 1386, 1434, 1435, 1462, 1465, 1640, 1691, 1766, 1851, 1858, 1877, 1878, 1888, 1892, 1894, 1895, 1899, 1916, 1923], "timeit": [4, 1879], "sever": [4, 15, 27, 32, 35, 40, 41, 57, 65, 729, 730, 731, 732, 733, 734, 757, 758, 763, 764, 765, 773, 774, 944, 1003, 1061, 1159, 1184, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1344, 1345, 1346, 1347, 1348, 1349, 1364, 1365, 1384, 1385, 1404, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1469, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1482, 1490, 1491, 1492, 1493, 1494, 1495, 1510, 1511, 1533, 1536, 1537, 1539, 1540, 1541, 1596, 1605, 1606, 1608, 1609, 1641, 1652, 1706, 1707, 1747, 1833, 1854, 1876, 1877, 1879, 1880, 1887, 1888, 1895, 1898, 1902, 1907], "kei": [4, 16, 17, 20, 22, 32, 37, 43, 50, 52, 53, 57, 65, 594, 671, 726, 845, 850, 908, 1023, 1113, 1123, 1184, 1199, 1200, 1255, 1416, 1417, 1422, 1426, 1459, 1460, 1461, 1462, 1463, 1565, 1622, 1638, 1852, 1855, 1856, 1857, 1861, 1880, 1882, 1887, 1888, 1893, 1895, 1897, 1898, 1901, 1902, 1905, 1907, 1908, 1913, 1916, 1918, 1920], "awar": [4, 8, 20, 479, 703, 704, 705, 706, 707, 708, 709, 710, 711, 721, 722, 723, 724, 829, 830, 846, 853, 854, 1463, 1565, 1596, 1806, 1807, 1808, 1809, 1810, 1871, 1877, 1880, 1899, 1905, 1908, 1911], "element": [4, 16, 32, 35, 41, 62, 63, 65, 92, 114, 145, 149, 191, 211, 236, 248, 252, 280, 307, 309, 311, 313, 315, 346, 392, 394, 396, 428, 447, 464, 466, 467, 489, 491, 505, 507, 509, 512, 536, 537, 549, 551, 600, 601, 608, 672, 674, 675, 678, 679, 684, 685, 689, 690, 726, 749, 751, 761, 762, 763, 764, 765, 771, 775, 784, 865, 867, 868, 869, 872, 873, 874, 875, 876, 884, 892, 893, 895, 896, 897, 899, 900, 914, 923, 926, 933, 939, 943, 950, 952, 953, 954, 1000, 1036, 1037, 1038, 1039, 1040, 1041, 1044, 1046, 1047, 1048, 1052, 1054, 1057, 1060, 1062, 1063, 1067, 1087, 1091, 1092, 1094, 1096, 1101, 1103, 1104, 1106, 1110, 1115, 1116, 1118, 1119, 1120, 1124, 1125, 1126, 1127, 1128, 1129, 1137, 1140, 1143, 1144, 1145, 1146, 1161, 1169, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1203, 1205, 1206, 1208, 1225, 1227, 1231, 1242, 1246, 1257, 1258, 1260, 1263, 1265, 1266, 1267, 1268, 1272, 1273, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1304, 1306, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1328, 1329, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363, 1368, 1369, 1372, 1373, 1374, 1375, 1376, 1377, 1382, 1383, 1386, 1388, 1392, 1393, 1394, 1395, 1396, 1397, 1402, 1405, 1407, 1408, 1409, 1410, 1411, 1415, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1443, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1464, 1465, 1467, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1500, 1504, 1507, 1508, 1513, 1514, 1518, 1519, 1520, 1521, 1524, 1527, 1528, 1530, 1535, 1539, 1540, 1541, 1545, 1546, 1550, 1551, 1553, 1556, 1557, 1558, 1559, 1560, 1561, 1565, 1566, 1567, 1568, 1569, 1571, 1573, 1575, 1576, 1577, 1578, 1583, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1622, 1623, 1629, 1630, 1632, 1633, 1642, 1643, 1644, 1646, 1654, 1694, 1695, 1698, 1699, 1706, 1707, 1709, 1720, 1723, 1724, 1728, 1730, 1732, 1750, 1753, 1755, 1767, 1768, 1770, 1771, 1775, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1796, 1797, 1801, 1812, 1814, 1815, 1819, 1820, 1821, 1823, 1825, 1826, 1827, 1828, 1829, 1831, 1833, 1834, 1835, 1839, 1840, 1841, 1844, 1847, 1855, 1857, 1864, 1872, 1875, 1878, 1879, 1882, 1885, 1891, 1893, 1895, 1898, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1922], "lazili": [4, 28, 37, 960, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1587, 1854], "threadpool": 4, "comparison": [4, 21, 33, 35, 65, 1184, 1199, 1200, 1416, 1654, 1858, 1882, 1918, 1921], "appl": 4, "focu": [4, 14, 17, 1685], "replic": [4, 32, 40, 57, 1137, 1194, 1344, 1345, 1346, 1353, 1363, 1392, 1393, 1394, 1440, 1441, 1442, 1467, 1553, 1580, 1900], "particularli": [4, 32, 33, 54, 1352, 1353, 1423, 1854, 1880], "variat": [4, 23, 41, 1857, 1882, 1898, 1903], "confound": 4, "quantifi": [4, 1465], "nois": [4, 23, 1855, 1892], "median": [4, 41, 168, 1312, 1837, 1855, 1870, 1897], "deviat": [4, 41, 371, 1328, 1334, 1335, 1336, 1371, 1379, 1380, 1381, 1388, 1455, 1644, 1760, 1765, 1796, 1797, 1875], "merg": [4, 7, 8, 10, 32, 35, 37, 53, 1417, 1422, 1426], "repeat": [4, 41, 62, 486, 956, 1057, 1247, 1273, 1412, 1413, 1414, 1487, 1488, 1691, 1723, 1782, 1802, 1803, 1819, 1853, 1855, 1857, 1897, 1901, 1904, 1911], "autorang": 4, "exact": [4, 14, 15, 20, 23, 26, 32, 43, 54, 333, 732, 733, 734, 786, 865, 866, 867, 899, 900, 944, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1284, 1348, 1386, 1463, 1526, 1565, 1596, 1686, 1776, 1875, 1881, 1890, 1911, 1922], "discuss": [4, 6, 9, 10, 11, 14, 21, 41, 65, 1377, 1864, 1877, 1882, 1888, 1892, 1907, 1909, 1911], "docstr": [4, 26, 65, 852, 853, 1184, 1416, 1851, 1880], "adapt": [4, 757, 758, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1354, 1474, 1475, 1476, 1477, 1478, 1479, 1650, 1656, 1657, 1668, 1670, 1677, 1880], "field": [4, 8, 17, 22, 23, 35, 39, 43, 45, 49, 50, 65, 817, 884, 1182, 1184, 1324, 1332, 1333, 1350, 1352, 1376, 1382, 1383, 1407, 1408, 1416, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1480, 1487, 1488, 1498, 1515, 1527, 1550, 1558, 1629, 1666, 1672, 1867, 1877, 1881, 1890, 1895, 1907, 1908, 1916], "displai": [4, 14, 23, 29, 1002, 1015, 1526, 1584, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1851, 1858, 1863, 1866, 1895, 1916, 1918], "instruct": [4, 5, 14, 17, 23, 24, 26, 54, 64, 1854, 1857, 1891, 1895, 1918], "count": [4, 17, 32, 41, 49, 65, 915, 955, 996, 1110, 1145, 1146, 1182, 1221, 1222, 1629, 1834, 1835, 1855, 1867, 1880, 1897, 1901, 1907, 1909, 1911], "wall": 4, "callgrind": 4, "analog": [4, 17, 65, 685, 1040, 1078, 1080, 1159, 1233, 1386, 1671, 1802, 1819, 1872, 1888], "constructor": [4, 26, 32, 33, 39, 57, 65, 815, 852, 853, 1324, 1421, 1426, 1427, 1444, 1469, 1470, 1596, 1636, 1777, 1852, 1854, 1857, 1858, 1880, 1881, 1888, 1907, 1911, 1913, 1914, 1917, 1923], "snippet": [4, 17, 53, 1851, 1888, 1893], "loop": [4, 17, 18, 22, 33, 54, 58, 62, 63, 65, 853, 854, 898, 1003, 1006, 1008, 1119, 1125, 1199, 1596, 1606, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1844, 1854, 1855, 1857, 1867, 1879, 1880, 1884, 1885, 1888, 1891, 1895, 1898, 1901, 1902, 1916], "default_tim": 4, "summar": [4, 5, 17, 23, 53, 1750, 1857, 1872, 1911], "relu": [4, 12, 16, 22, 23, 33, 62, 63, 65, 691, 692, 696, 697, 698, 699, 700, 701, 702, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717, 718, 719, 720, 756, 783, 784, 805, 845, 851, 1000, 1115, 1125, 1195, 1416, 1431, 1433, 1444, 1452, 1459, 1461, 1463, 1562, 1563, 1587, 1653, 1844, 1853, 1854, 1855, 1865, 1871, 1872, 1875, 1877, 1888, 1893, 1895, 1897, 1902, 1904, 1905], "readabl": [4, 23, 25, 32, 50, 65, 1002, 1015, 1816, 1895, 1898, 1922], "supplement": 4, "disambigu": [4, 23, 50, 65, 1261], "ident": [4, 23, 26, 32, 35, 41, 57, 65, 779, 805, 899, 900, 1045, 1221, 1222, 1223, 1224, 1237, 1249, 1252, 1256, 1273, 1311, 1312, 1328, 1354, 1555, 1603, 1605, 1841, 1847, 1858, 1875, 1891, 1892, 1899, 1904, 1911], "easi": [4, 12, 17, 21, 23, 32, 37, 52, 1854, 1877, 1884, 1887, 1888, 1890, 1899, 1902, 1907, 1908, 1911], "differenti": [4, 41, 58, 63, 145, 346, 580, 793, 880, 882, 884, 886, 887, 889, 892, 893, 894, 895, 896, 897, 898, 899, 900, 941, 1003, 1118, 1119, 1120, 1124, 1198, 1230, 1231, 1242, 1273, 1338, 1339, 1359, 1517, 1551, 1596, 1608, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1837, 1852, 1864, 1882, 1884, 1885, 1895, 1898, 1907, 1917, 1919], "distinguish": [4, 1902, 1911], "princip": [4, 1230, 1691], "signal": [4, 24, 37, 43, 52, 54, 729, 730, 731, 757, 758, 773, 774, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1181, 1246, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1330, 1331, 1344, 1345, 1346, 1364, 1365, 1384, 1385, 1404, 1409, 1410, 1411, 1469, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1482, 1490, 1493, 1510, 1511, 1533, 1536, 1537, 1539, 1540, 1541, 1798, 1852, 1869, 1890, 1901, 1907], "form": [4, 8, 10, 13, 22, 24, 32, 35, 41, 51, 52, 53, 57, 62, 65, 751, 770, 776, 935, 1045, 1085, 1087, 1184, 1223, 1226, 1231, 1242, 1247, 1322, 1323, 1326, 1327, 1339, 1364, 1365, 1368, 1386, 1416, 1431, 1467, 1468, 1499, 1510, 1511, 1514, 1526, 1553, 1584, 1608, 1671, 1689, 1818, 1851, 1854, 1858, 1872, 1877, 1882, 1888, 1895, 1899, 1902, 1916], "treat": [4, 19, 22, 41, 51, 60, 65, 315, 464, 784, 899, 900, 1000, 1113, 1236, 1239, 1241, 1253, 1255, 1265, 1266, 1267, 1268, 1285, 1314, 1360, 1370, 1388, 1420, 1421, 1422, 1423, 1426, 1444, 1449, 1507, 1596, 1638, 1642, 1677, 1730, 1798, 1812, 1819, 1856, 1857, 1870, 1877, 1907, 1911, 1914, 1921], "distinct": [4, 1113, 1219, 1220, 1264, 1857, 1882, 1893, 1907, 1908], "workload": [4, 9, 32, 35, 57, 1003, 1880, 1887, 1891, 1907], "good": [4, 8, 9, 15, 17, 20, 26, 57, 65, 83, 944, 1117, 1424, 1766, 1851, 1861, 1869, 1882, 1887, 1888, 1895, 1899, 1900, 1902], "intrins": [4, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 783, 784, 1903, 1904], "contrast": [4, 41, 43, 751, 1368, 1671, 1853, 1875, 1877, 1883, 1911], "blocked_autorang": 4, "callback": [4, 33, 52, 54, 64, 65, 1596, 1867, 1887, 1901, 1907], "min_run_tim": 4, "minimum": [4, 26, 33, 43, 52, 53, 687, 688, 762, 786, 811, 812, 813, 816, 817, 866, 915, 1037, 1104, 1144, 1145, 1146, 1286, 1339, 1375, 1465, 1675, 1676, 1683, 1766, 1784, 1785, 1786, 1787, 1788, 1789, 1853, 1855, 1875, 1877, 1885, 1897, 1905, 1914], "At": [4, 6, 7, 8, 13, 14, 17, 23, 27, 32, 1091, 1335, 1344, 1345, 1346, 1347, 1348, 1349, 1384, 1385, 1865, 1872, 1879, 1885, 1902, 1907, 1912], "high": [4, 5, 8, 9, 10, 11, 14, 17, 18, 23, 27, 33, 35, 41, 43, 49, 51, 53, 65, 114, 963, 1339, 1462, 1712, 1713, 1745, 1853, 1855, 1867, 1869, 1885, 1886, 1888, 1889, 1898, 1902, 1903, 1907, 1911, 1916, 1917, 1918, 1921], "pseudo": [4, 83], "total_tim": 4, "block_siz": 4, "choic": [4, 9, 10, 14, 23, 35, 1199, 1247, 1417, 1426, 1708, 1879, 1895, 1905, 1911], "block": [4, 8, 9, 32, 35, 39, 40, 52, 54, 64, 65, 574, 575, 576, 923, 960, 1014, 1204, 1256, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1392, 1393, 1394, 1395, 1396, 1397, 1419, 1467, 1509, 1583, 1596, 1784, 1785, 1786, 1854, 1856, 1857, 1867, 1869, 1873, 1877, 1880, 1881, 1885, 1895, 1902, 1907, 1911], "qualiti": [4, 8, 33], "balanc": [4, 15, 83, 944], "compet": 4, "statist": [4, 14, 23, 33, 35, 41, 790, 791, 811, 812, 813, 815, 816, 969, 1006, 1008, 1009, 1010, 1012, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1034, 1035, 1261, 1334, 1335, 1336, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1455, 1867, 1877, 1884, 1898, 1900, 1902, 1905], "amort": 4, "invoc": [4, 6, 17, 65, 832, 1187, 1199, 1854, 1857, 1880, 1882, 1887, 1895, 1907, 1909], "less": [4, 7, 8, 14, 26, 32, 33, 35, 41, 43, 54, 358, 671, 892, 894, 899, 900, 956, 1010, 1027, 1057, 1101, 1105, 1110, 1113, 1208, 1220, 1256, 1272, 1273, 1324, 1377, 1430, 1447, 1453, 1632, 1721, 1827, 1829, 1851, 1855, 1857, 1872, 1880, 1882, 1890, 1891, 1897, 1900, 1902], "bias": [4, 33, 725, 751, 785, 1334, 1335, 1336, 1368, 1369, 1371, 1379, 1380, 1381, 1386, 1387, 1388, 1431, 1433, 1455], "trivial": [4, 43, 45, 726, 934, 1603, 1895, 1909], "low": [4, 8, 29, 33, 41, 57, 491, 895, 963, 1129, 1339, 1691, 1708, 1712, 1713, 1730, 1803, 1853, 1855, 1867, 1869, 1880, 1901, 1918, 1922], "digit": [4, 1750, 1851, 1866, 1887, 1891], "microsecond": [4, 1880], "bia": [4, 10, 35, 40, 703, 704, 705, 706, 707, 708, 709, 710, 711, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 734, 740, 742, 743, 744, 745, 747, 751, 752, 755, 756, 763, 764, 765, 772, 783, 1123, 1184, 1193, 1324, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1368, 1369, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1416, 1422, 1431, 1432, 1433, 1485, 1486, 1490, 1491, 1492, 1493, 1494, 1495, 1516, 1525, 1529, 1532, 1587, 1596, 1603, 1604, 1618, 1620, 1622, 1637, 1640, 1705, 1853, 1855, 1865, 1882, 1888, 1893, 1902, 1904, 1916], "period": [4, 10, 39, 52, 913, 922, 969, 1002, 1015, 1016, 1020, 1034, 1035, 1077, 1141, 1142, 1203, 1687, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1855, 1867, 1890], "until": [4, 8, 14, 32, 33, 35, 39, 43, 52, 57, 64, 65, 479, 960, 961, 963, 994, 1110, 1204, 1256, 1297, 1298, 1515, 1587, 1596, 1674, 1680, 1819, 1869, 1875, 1880, 1884, 1895, 1901, 1907, 1909], "overal": [4, 10, 32, 35, 52, 899, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1462, 1877, 1879, 1880, 1890, 1903], "repetit": [4, 1723, 1819], "collect_callgrind": 4, "collect_baselin": 4, "retain_out_fil": 4, "callgrindstat": [4, 1852], "modulo": [4, 41, 1105, 1721], "determin": [4, 6, 9, 14, 22, 23, 24, 26, 28, 29, 31, 32, 33, 35, 41, 43, 50, 52, 57, 62, 65, 814, 817, 892, 894, 899, 900, 913, 922, 929, 934, 1004, 1059, 1078, 1088, 1112, 1113, 1141, 1142, 1145, 1146, 1197, 1217, 1229, 1240, 1243, 1264, 1278, 1360, 1364, 1365, 1386, 1422, 1425, 1431, 1507, 1510, 1511, 1526, 1559, 1584, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1638, 1648, 1683, 1711, 1713, 1715, 1742, 1784, 1785, 1786, 1787, 1788, 1789, 1798, 1850, 1857, 1858, 1871, 1880, 1881, 1882, 1888, 1895, 1899, 1902, 1907, 1909, 1914, 1916, 1918], "itself": [4, 6, 8, 9, 12, 17, 23, 35, 36, 57, 63, 65, 684, 690, 870, 956, 1118, 1119, 1184, 1195, 1199, 1416, 1449, 1571, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1626, 1854, 1869, 1888, 1892, 1895, 1899, 1907, 1911, 1915], "jitter": 4, "interpret": [4, 17, 32, 35, 39, 41, 43, 52, 54, 70, 770, 776, 871, 898, 1013, 1078, 1079, 1080, 1085, 1087, 1088, 1089, 1090, 1110, 1134, 1146, 1184, 1189, 1195, 1199, 1236, 1256, 1356, 1515, 1526, 1527, 1584, 1742, 1748, 1851, 1856, 1857, 1869, 1879, 1880, 1895, 1911, 1913, 1915], "ideal": [4, 14, 51, 53, 1199, 1672, 1871], "analysi": [4, 12, 21, 33, 41, 65, 1203, 1691, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1858, 1888, 1896, 1921], "valgrind": 4, "degrad": [4, 26, 1879, 1881, 1882, 1911], "amelior": 4, "suffici": [4, 14, 23, 26, 33, 41, 44, 52, 57, 1658, 1659, 1851, 1911, 1914], "obtain": [4, 32, 35, 41, 45, 64, 65, 488, 909, 1129, 1301, 1339, 1423, 1499, 1596, 1691, 1708, 1803, 1857, 1869, 1870, 1879, 1892, 1895, 1898, 1901, 1902], "callgrind_control": 4, "callgrind_annot": 4, "boundari": [4, 14, 65, 770, 776, 928, 1137, 1341, 1342, 1343, 1437, 1438, 1439, 1440, 1441, 1442, 1468, 1471, 1472, 1473, 1526, 1584, 1677, 1683, 1737, 1855, 1881, 1899, 1900, 1907], "caller": [4, 43, 52, 65, 845, 1184, 1416, 1463, 1592, 1593, 1877, 1880, 1907, 1909], "structur": [4, 6, 10, 19, 32, 33, 35, 42, 43, 45, 53, 57, 65, 883, 1108, 1120, 1125, 1199, 1416, 1615, 1619, 1654, 1691, 1803, 1844, 1856, 1858, 1864, 1867, 1872, 1880, 1881, 1882, 1883, 1890, 1893, 1894, 1895, 1896, 1898, 1899, 1907, 1911, 1916, 1917, 1918, 1919, 1921], "restrict": [4, 9, 32, 41, 57, 62, 63, 1255, 1278, 1352, 1856, 1857, 1858, 1871, 1872, 1877, 1880, 1885, 1900, 1902], "builtin": [4, 14, 23, 35, 65, 1196, 1255, 1717, 1854, 1856, 1858, 1907, 1909], "surpris": [4, 9, 57, 1851, 1885, 1891], "serial": [4, 27, 32, 35, 37, 39, 52, 1184, 1193, 1194, 1255, 1416, 1587, 1650, 1651, 1733, 1851, 1852, 1855, 1866, 1871, 1877, 1880, 1887, 1888, 1890, 1899, 1902, 1908], "subsequ": [4, 8, 14, 17, 26, 27, 35, 65, 961, 1184, 1195, 1199, 1344, 1345, 1346, 1347, 1348, 1349, 1416, 1444, 1592, 1593, 1880, 1892, 1895, 1907, 1911], "deseri": [4, 37, 1255, 1587, 1851, 1866], "globalsbridg": 4, "care": [4, 8, 14, 23, 26, 35, 41, 57, 64, 65, 1078, 1080, 1416, 1869, 1879, 1880, 1881, 1882, 1884, 1888, 1890, 1893, 1895, 1907, 1911], "reli": [4, 10, 14, 26, 32, 33, 43, 45, 57, 65, 145, 884, 899, 1057, 1353, 1672, 1877, 1879, 1881, 1882, 1892, 1893, 1911, 1915], "pickl": [4, 32, 33, 35, 1184, 1255, 1416, 1733, 1851, 1866, 1869, 1893, 1899], "transfer": [4, 32, 35, 1865, 1869, 1880, 1886, 1888, 1899, 1907], "properli": [4, 8, 32, 33, 37, 39, 43, 52, 57, 64, 1078, 1079, 1080, 1088, 1089, 1090, 1285, 1417, 1418, 1426, 1427, 1596, 1851, 1864, 1882, 1885, 1888, 1890, 1893, 1907, 1908, 1914], "profil": [4, 5, 14, 15, 49, 65, 944, 1197, 1590, 1591, 1592, 1593, 1750, 1852, 1897, 1907], "drive": [4, 10, 17, 35, 1877], "facil": [4, 1255, 1869], "analyz": [4, 5, 23, 29, 65, 1881, 1882, 1891], "manipul": [4, 22, 57, 64, 1188, 1852, 1876, 1884, 1888, 1900, 1905], "1000000": [4, 1655], "mirror": [4, 134], "semant": [4, 10, 28, 35, 52, 53, 57, 65, 145, 785, 865, 866, 867, 884, 898, 926, 963, 1014, 1114, 1125, 1188, 1194, 1253, 1559, 1672, 1835, 1844, 1852, 1856, 1857, 1861, 1864, 1872, 1883, 1888, 1895, 1911], "number_per_run": 4, "raw_tim": 4, "task_spec": 4, "serializ": [4, 33, 1854], "consum": [4, 17, 32, 37, 42, 54, 64, 428, 1057, 1869, 1880, 1890, 1895, 1896, 1916], "extrapol": 4, "sinc": [4, 8, 14, 17, 19, 22, 23, 32, 33, 35, 40, 41, 45, 54, 57, 65, 309, 525, 738, 776, 784, 799, 800, 934, 1006, 1008, 1010, 1057, 1097, 1098, 1099, 1113, 1181, 1184, 1189, 1194, 1197, 1273, 1332, 1359, 1412, 1413, 1414, 1416, 1468, 1480, 1515, 1517, 1584, 1587, 1590, 1619, 1638, 1643, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1672, 1675, 1676, 1677, 1683, 1798, 1854, 1855, 1856, 1857, 1863, 1865, 1867, 1872, 1876, 1877, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1906, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1917, 1918], "properti": [4, 13, 32, 35, 36, 37, 41, 44, 49, 52, 57, 65, 783, 871, 903, 909, 987, 1073, 1074, 1076, 1078, 1079, 1080, 1088, 1089, 1090, 1184, 1328, 1449, 1571, 1587, 1597, 1598, 1599, 1629, 1650, 1852, 1857, 1861, 1867, 1877, 1880, 1885, 1898, 1901, 1907, 1911, 1913, 1914, 1917, 1919, 1922, 1923], "significant_figur": 4, "figur": [4, 8, 9, 14, 37, 65, 1879, 1881, 1895, 1900, 1909, 1916, 1921], "intend": [4, 52, 57, 65, 881, 890, 965, 1203, 1480, 1590, 1591, 1592, 1593, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1672, 1857, 1872, 1875, 1877, 1888, 1899], "interquartil": 4, "mitig": 4, "tail": [4, 32, 50], "645": 4, "trim_sigfig": 4, "human": [4, 25, 50, 1002, 1015, 1875, 1895, 1922], "raw": [4, 65, 1110, 1242, 1880, 1899], "built_with_debug_symbol": 4, "baseline_inclusive_stat": 4, "baseline_exclusive_stat": 4, "stmt_inclusive_stat": 4, "stmt_exclusive_stat": 4, "stmt_callgrind_out": 4, "done": [4, 12, 17, 20, 22, 27, 32, 35, 37, 40, 41, 43, 50, 57, 64, 65, 488, 671, 751, 899, 1074, 1076, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1092, 1094, 1199, 1273, 1334, 1335, 1336, 1353, 1356, 1368, 1379, 1380, 1381, 1398, 1399, 1400, 1401, 1426, 1455, 1461, 1463, 1596, 1793, 1857, 1861, 1865, 1869, 1877, 1879, 1880, 1881, 1883, 1884, 1888, 1891, 1895, 1898, 1900, 1902, 1903, 1907, 1909], "functioncount": [4, 1852], "stat": [4, 14, 23, 60, 817, 827, 828, 1014, 1021, 1022, 1023, 1455, 1596, 1867, 1880, 1920], "as_standard": 4, "strip": [4, 1517, 1596, 1854, 1897], "prefix": [4, 35, 37, 52, 57, 739, 748, 1184, 1416, 1596, 1851, 1863, 1877, 1895, 1899, 1920], "stumbl": 4, "filepath": 4, "dif": 4, "compon": [4, 8, 10, 12, 17, 23, 27, 29, 35, 41, 65, 671, 899, 1077, 1078, 1080, 1088, 1089, 1090, 1223, 1459, 1460, 1461, 1462, 1463, 1587, 1691, 1798, 1842, 1843, 1858, 1863, 1877, 1881, 1887, 1888, 1900, 1911], "locat": [4, 10, 14, 26, 35, 41, 49, 145, 149, 248, 505, 926, 928, 972, 1036, 1037, 1205, 1255, 1281, 1286, 1289, 1306, 1353, 1363, 1450, 1467, 1480, 1515, 1580, 1583, 1596, 1608, 1702, 1737, 1759, 1780, 1783, 1837, 1851, 1854, 1866, 1880, 1895, 1899, 1901, 1907, 1909, 1911, 1916, 1920], "resembl": [4, 27], "23234231": 4, "first_build_dir": 4, "foo": [4, 15, 26, 35, 49, 50, 64, 65, 815, 845, 850, 944, 1113, 1114, 1123, 1182, 1187, 1191, 1194, 1195, 1198, 1199, 1638, 1851, 1854, 1856, 1857, 1861, 1882, 1888, 1895, 1899, 1918], "9823794": 4, "bar": [4, 8, 17, 49, 65, 845, 850, 956, 1113, 1187, 1194, 1796, 1797, 1839, 1840, 1851, 1854, 1856, 1866, 1888, 1895, 1899, 1918], "53453": 4, "function_that_actually_chang": 4, "second_build_dir": 4, "cancel": [4, 1181], "site": [4, 8], "denois": 4, "explan": [4, 10, 14, 20, 23, 45, 853, 1184, 1416, 1852, 1881, 1882, 1888], "delta": [4, 41, 751, 1368, 1377, 1386, 1447, 1524, 1656, 1796, 1797, 1823, 1839, 1840, 1855, 1875], "inclus": [4, 41, 83, 505, 1144, 1146, 1254, 1270, 1276, 1712, 1713, 1795, 1906, 1918], "diff": [4, 8, 1854, 1855, 1897], "unit": [4, 24, 26, 41, 43, 53, 57, 65, 751, 752, 1075, 1093, 1328, 1338, 1358, 1361, 1366, 1367, 1368, 1369, 1434, 1435, 1445, 1480, 1504, 1508, 1513, 1514, 1560, 1568, 1612, 1613, 1617, 1620, 1622, 1625, 1825, 1877, 1879, 1885, 1899], "next": [4, 13, 14, 16, 17, 32, 35, 41, 52, 57, 65, 551, 751, 1188, 1320, 1369, 1387, 1433, 1596, 1631, 1869, 1876, 1877, 1879, 1883, 1888, 1890, 1900, 1901, 1907, 1908, 1911, 1914, 1916], "logic": [4, 6, 17, 26, 32, 40, 55, 57, 65, 916, 918, 919, 921, 1074, 1076, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1092, 1094, 1114, 1188, 1265, 1266, 1267, 1268, 1278, 1422, 1596, 1700, 1727, 1810, 1857, 1858, 1880, 1881, 1882, 1883, 1885, 1902], "question": [4, 11, 18, 32, 65, 1852, 1877], "why": [4, 8, 32, 57, 62, 65, 1057, 1188, 1565, 1852, 1864, 1883], "involv": [4, 6, 8, 10, 18, 24, 32, 35, 57, 60, 62, 65, 1596, 1857, 1870, 1872, 1877, 1880, 1881, 1884, 1888, 1895, 1907, 1908, 1909, 1911], "look": [4, 5, 8, 9, 10, 12, 14, 17, 20, 22, 23, 27, 35, 41, 51, 52, 59, 62, 65, 853, 892, 894, 1184, 1278, 1324, 1416, 1506, 1621, 1672, 1784, 1785, 1786, 1788, 1789, 1854, 1856, 1870, 1876, 1877, 1880, 1883, 1887, 1888, 1890, 1894, 1895, 1899, 1902, 1907, 1908, 1921], "autom": [4, 9, 14, 23, 65, 1854, 1902], "easili": [4, 8, 9, 16, 22, 23, 24, 33, 35, 1114, 1423, 1515, 1553, 1672, 1730, 1883, 1885, 1888, 1893, 1898, 1906, 1909, 1916], "exclus": [4, 32, 35, 41, 43, 52, 65, 726, 1146, 1596, 1712, 1713, 1716, 1877, 1918], "basi": [4, 10, 11, 41, 1256, 1677, 1880, 1887, 1902, 1907], "thought": [4, 49, 65, 1075, 1077, 1093], "path_and_function_nam": 4, "children": [4, 45, 57, 65, 782, 1184, 1416, 1869, 1888, 1899, 1909], "identifi": [4, 8, 10, 17, 35, 43, 46, 49, 52, 53, 54, 65, 808, 1146, 1255, 1455, 1858, 1869, 1878, 1887, 1888, 1899, 1907, 1908, 1909, 1916], "hot": [4, 17, 41, 1517, 1552, 1885], "spot": 4, "_data": 4, "truncate_row": 4, "_linewidth": 4, "subtract": [4, 307, 555, 856, 1110, 1517, 1784, 1785, 1786, 1788, 1789, 1799, 1855, 1872, 1897, 1911], "cpython": [4, 21, 65], "known": [4, 8, 10, 23, 31, 35, 39, 46, 58, 61, 63, 1120, 1121, 1199, 1200, 1255, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1386, 1431, 1445, 1447, 1467, 1526, 1568, 1587, 1758, 1759, 1816, 1852, 1855, 1859, 1867, 1869, 1872, 1875, 1877, 1879, 1892, 1895, 1898, 1909, 1912], "quit": [4, 8, 65, 1857, 1882, 1884, 1899, 1907], "noisi": 4, "higher": [4, 8, 9, 33, 35, 57, 58, 63, 145, 884, 885, 898, 1003, 1014, 1049, 1115, 1121, 1125, 1144, 1161, 1313, 1352, 1408, 1423, 1565, 1702, 1803, 1844, 1852, 1880, 1882, 1883, 1885, 1887, 1902, 1903, 1907, 1914], "filter": [4, 23, 535, 763, 764, 765, 1181, 1203, 1344, 1345, 1346, 1347, 1348, 1349, 1490, 1491, 1492, 1493, 1494, 1495, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1798, 1857, 1899], "rather": [4, 9, 10, 12, 16, 17, 26, 35, 43, 45, 54, 65, 770, 776, 908, 934, 1182, 1185, 1316, 1480, 1515, 1526, 1584, 1604, 1750, 1854, 1857, 1871, 1872, 1878, 1880, 1882, 1883, 1895, 1899, 1902, 1907, 1911, 1916], "unicod": [4, 1858], "lookup": [4, 17, 37, 41, 1359, 1506, 1854, 1858, 1879, 1908], "agnost": [4, 52, 1515, 1871], "reliabl": [4, 18], "warrant": 4, "filter_fn": 4, "map_fn": 4, "coalesc": [4, 14, 17, 317, 322, 535, 605, 971, 1783, 1833, 1855, 1881, 1897, 1911], "finit": [5, 41, 899, 900, 1173, 1174, 1219, 1220, 1230, 1231, 1247, 1273, 1306, 1310, 1332, 1802, 1882, 1885, 1918], "natur": [5, 8, 9, 24, 35, 41, 57, 899, 900, 1212, 1217, 1243, 1257, 1259, 1264, 1324, 1463, 1565, 1885, 1911, 1912], "against": [5, 20, 26, 35, 43, 52, 785, 856, 899, 900, 1085, 1086, 1087, 1091, 1092, 1094, 1126, 1175, 1184, 1199, 1200, 1416, 1422, 1653, 1851, 1857, 1899, 1921], "cprofil": 5, "correct": [5, 7, 8, 22, 33, 35, 36, 37, 41, 52, 200, 201, 204, 216, 546, 571, 594, 595, 606, 888, 900, 956, 1078, 1080, 1088, 1089, 1090, 1158, 1182, 1185, 1199, 1200, 1219, 1353, 1370, 1382, 1587, 1596, 1629, 1749, 1796, 1797, 1839, 1840, 1853, 1854, 1855, 1856, 1870, 1871, 1880, 1882, 1885, 1913], "launch": [5, 16, 26, 32, 38, 43, 44, 45, 50, 51, 52, 55, 64, 961, 1596, 1852, 1877, 1879, 1880, 1881, 1907], "spent": [5, 14, 23, 35, 909, 1683, 1879, 1888], "appear": [5, 33, 35, 41, 65, 845, 1003, 1057, 1098, 1099, 1125, 1255, 1289, 1291, 1592, 1597, 1723, 1752, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1844, 1854, 1857, 1870, 1871, 1882, 1883, 1888, 1895, 1899], "extrem": [5, 17, 1596, 1877, 1895], "expens": [5, 14, 20, 23, 32, 41, 57, 1603, 1880, 1885, 1887, 1901, 1907, 1917], "bound": [5, 23, 27, 33, 57, 474, 786, 928, 939, 1071, 1072, 1184, 1329, 1330, 1331, 1409, 1410, 1411, 1416, 1434, 1515, 1685, 1716, 1737, 1857, 1858, 1875, 1877, 1899, 1902, 1912], "greater": [5, 35, 52, 286, 608, 671, 933, 934, 939, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1128, 1140, 1238, 1301, 1332, 1464, 1515, 1526, 1552, 1565, 1584, 1604, 1637, 1837, 1855, 1877, 1880, 1892, 1897, 1912], "spend": [5, 8, 1256], "sens": [5, 41, 52, 65, 1619, 1834, 1835, 1857, 1877], "respons": [5, 8, 10, 35, 37, 39, 41, 43, 49, 54, 57, 64, 961, 1404, 1533, 1596, 1877, 1880, 1882, 1883, 1888, 1907], "Of": [5, 1642, 1851, 1881, 1882], "cours": [5, 14, 17, 65, 1851, 1881, 1882, 1907], "realiti": 5, "complic": [5, 33, 65, 784, 1861, 1871, 1878, 1899, 1907, 1909], "depend": [5, 6, 12, 14, 16, 17, 19, 22, 26, 32, 35, 39, 41, 43, 52, 53, 54, 57, 65, 309, 776, 869, 969, 1016, 1020, 1034, 1035, 1078, 1080, 1088, 1089, 1090, 1115, 1119, 1124, 1195, 1199, 1219, 1220, 1247, 1273, 1278, 1332, 1333, 1350, 1352, 1360, 1363, 1376, 1382, 1383, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1467, 1468, 1480, 1487, 1488, 1498, 1507, 1515, 1527, 1550, 1558, 1565, 1584, 1587, 1596, 1608, 1609, 1615, 1650, 1677, 1689, 1691, 1708, 1724, 1784, 1785, 1786, 1788, 1789, 1802, 1825, 1847, 1851, 1854, 1856, 1857, 1864, 1869, 1877, 1879, 1880, 1882, 1883, 1885, 1888, 1895, 1901, 1902, 1907, 1911, 1917, 1918], "could": [5, 6, 8, 9, 12, 14, 19, 23, 32, 35, 41, 43, 52, 57, 62, 64, 65, 574, 575, 576, 578, 579, 996, 1078, 1080, 1088, 1089, 1090, 1181, 1214, 1255, 1273, 1297, 1298, 1676, 1779, 1834, 1856, 1857, 1864, 1869, 1877, 1880, 1881, 1894, 1895, 1899, 1902, 1903, 1907, 1908, 1909, 1911, 1915, 1916], "account": [5, 50, 65, 1596, 1875, 1879, 1911], "heavili": [5, 1661, 1879, 1882, 1899], "similarli": [5, 8, 16, 64, 65, 751, 781, 785, 849, 935, 1077, 1184, 1239, 1416, 1592, 1593, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1626, 1826, 1827, 1828, 1829, 1856, 1877, 1882, 1884, 1885, 1891, 1911], "platform": [5, 9, 10, 26, 35, 44, 45, 49, 1230, 1231, 1242, 1701, 1802, 1865, 1886, 1891, 1892, 1902], "startup": 5, "slower": [5, 26, 35, 867, 893, 1097, 1098, 1099, 1213, 1220, 1534, 1603, 1882, 1892, 1898, 1912], "rerun": [6, 35, 1880], "segment": [6, 14, 19, 1014, 1110, 1447, 1899], "persist": [6, 30, 37, 57, 751, 806, 807, 808, 1184, 1368, 1386, 1416, 1431, 1880, 1888, 1893, 1894], "rng": [6, 32, 989, 1028, 1738, 1880, 1892, 1906], "advanc": [6, 14, 27, 32, 33, 43, 1459, 1461, 1463, 1642, 1651, 1861, 1864, 1871, 1880, 1886, 1890, 1915, 1916], "juggl": 6, "dropout": [6, 40, 65, 725, 726, 751, 1184, 1328, 1355, 1356, 1357, 1361, 1368, 1386, 1416, 1422, 1431, 1432, 1459, 1461, 1463, 1481, 1501, 1502, 1503, 1508, 1565, 1852, 1855, 1865, 1871, 1872, 1877, 1880, 1897, 1904], "moder": 6, "hit": [6, 9, 14, 23, 26, 1596, 1851, 1880], "preserve_rng_st": 6, "checkpoint_sequenti": [6, 1852], "omit": [6, 26, 35, 53, 1091, 1092, 1094, 1370, 1430, 1894, 1895, 1907, 1918], "_infer_device_typ": 6, "remain": [6, 9, 41, 52, 65, 1291, 1359, 1360, 1506, 1507, 1587, 1596, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1626, 1702, 1724, 1867, 1869, 1876, 1884, 1888], "consequ": [6, 62, 1247, 1386, 1802, 1857, 1877, 1880, 1892], "random": [6, 14, 23, 41, 43, 52, 53, 58, 65, 83, 149, 751, 883, 914, 989, 990, 995, 1004, 1005, 1024, 1025, 1028, 1029, 1118, 1125, 1136, 1160, 1256, 1276, 1295, 1296, 1300, 1302, 1328, 1339, 1361, 1368, 1386, 1434, 1508, 1558, 1563, 1587, 1604, 1610, 1616, 1617, 1624, 1625, 1644, 1691, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1738, 1751, 1803, 1844, 1851, 1852, 1855, 1863, 1875, 1883, 1885, 1891, 1895, 1897, 1916], "gradient": [6, 14, 24, 32, 33, 35, 39, 41, 57, 58, 61, 145, 216, 217, 284, 329, 480, 487, 505, 686, 687, 871, 880, 882, 884, 886, 887, 888, 889, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 904, 905, 915, 941, 1061, 1113, 1114, 1115, 1116, 1120, 1125, 1126, 1159, 1184, 1219, 1220, 1223, 1230, 1231, 1247, 1256, 1273, 1275, 1281, 1284, 1286, 1332, 1339, 1347, 1348, 1349, 1352, 1353, 1359, 1360, 1370, 1384, 1385, 1416, 1423, 1447, 1498, 1499, 1506, 1507, 1517, 1526, 1534, 1536, 1537, 1550, 1584, 1585, 1586, 1592, 1593, 1596, 1597, 1600, 1601, 1603, 1608, 1641, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1676, 1689, 1747, 1783, 1802, 1844, 1852, 1854, 1855, 1864, 1871, 1872, 1875, 1880, 1881, 1882, 1884, 1885, 1888, 1891, 1897, 1898, 1907, 1908, 1911], "among": [6, 32, 33, 35, 39, 41, 52, 970, 971, 974, 1146, 1353, 1644, 1857], "detect": [6, 14, 23, 26, 28, 29, 32, 35, 36, 43, 45, 57, 892, 893, 894, 895, 896, 897, 1114, 1188, 1460, 1462, 1596, 1837, 1852, 1869, 1872, 1880, 1885, 1891, 1895, 1899, 1907], "priorit": [6, 1117, 1118, 1120, 1658, 1659, 1911], "defaultdevicetyp": 6, "anticip": 6, "belong": [6, 17, 22, 35, 37, 39, 41, 49, 65, 928, 963, 1673, 1851, 1880, 1898, 1922], "use_reentr": 6, "context_fn": 6, "noop_context_fn": 6, "techniqu": [6, 17, 23, 65, 1354, 1610, 1823, 1873, 1888, 1898, 1900, 1902], "intermedi": [6, 26, 42, 62, 65, 925, 1108, 1114, 1121, 1273, 1360, 1459, 1461, 1463, 1507, 1854, 1857, 1880, 1882, 1883, 1884, 1891, 1921], "entir": [6, 8, 12, 13, 14, 17, 18, 23, 26, 32, 35, 43, 53, 65, 688, 899, 900, 1114, 1137, 1355, 1356, 1357, 1361, 1379, 1380, 1381, 1388, 1501, 1502, 1503, 1508, 1596, 1614, 1616, 1640, 1857, 1872, 1877, 1880, 1882, 1883, 1884, 1887, 1888, 1895, 1899, 1902, 1907, 1909, 1911], "recomput": [6, 890, 1468, 1526, 1640, 1898], "refer": [6, 12, 17, 18, 19, 23, 26, 32, 33, 35, 36, 37, 39, 41, 44, 47, 48, 52, 53, 57, 58, 64, 248, 725, 726, 747, 755, 783, 784, 785, 810, 811, 812, 815, 816, 817, 850, 864, 869, 884, 926, 996, 1001, 1060, 1110, 1132, 1133, 1165, 1172, 1184, 1187, 1195, 1202, 1215, 1236, 1240, 1253, 1256, 1339, 1370, 1416, 1465, 1480, 1488, 1497, 1515, 1583, 1596, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1691, 1708, 1744, 1766, 1803, 1837, 1851, 1852, 1855, 1869, 1870, 1872, 1873, 1876, 1877, 1880, 1881, 1882, 1883, 1884, 1885, 1888, 1890, 1892, 1898, 1903, 1904, 1907, 1908, 1911, 1914, 1915, 1916, 1919], "potenti": [6, 9, 14, 17, 35, 52, 54, 186, 203, 1193, 1229, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1565, 1596, 1837, 1856, 1864, 1869, 1877, 1880, 1899, 1911, 1915], "silent": [6, 16, 1004, 1005, 1024, 1025, 1158, 1199, 1416, 1600, 1601, 1880, 1891, 1895], "consider": [6, 8, 875, 1181, 1360, 1596, 1857, 1879], "limit": [6, 9, 10, 14, 16, 17, 20, 23, 32, 40, 57, 58, 63, 1027, 1114, 1197, 1301, 1339, 1359, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1565, 1596, 1619, 1750, 1852, 1857, 1861, 1869, 1871, 1872, 1877, 1880, 1881, 1888, 1891, 1892, 1893, 1899, 1902, 1905, 1907, 1908, 1918], "reentrant": [6, 1596], "stop": [6, 41, 43, 52, 53, 54, 856, 996, 1182, 1256, 1339, 1629, 1685, 1717, 1854, 1857, 1907], "soon": [6, 17, 23, 52, 57, 784, 1877, 1902, 1907, 1909], "set_checkpoint_early_stop": 6, "entireti": 6, "no_grad": [6, 852, 1061, 1115, 1119, 1124, 1159, 1184, 1359, 1416, 1422, 1463, 1597, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1875, 1877, 1888, 1919], "condit": [6, 30, 32, 62, 65, 608, 611, 615, 685, 751, 893, 899, 900, 1181, 1199, 1213, 1215, 1223, 1229, 1230, 1231, 1242, 1247, 1368, 1386, 1431, 1463, 1631, 1636, 1825, 1847, 1853, 1854, 1855, 1856, 1858, 1872, 1877, 1882, 1891, 1900, 1916], "unmet": 6, "particip": [6, 10, 32, 35, 36, 39, 52, 53, 1596, 1908], "wherea": [6, 1239, 1297, 1298, 1311, 1672, 1802, 1857, 1918], "know": [6, 8, 9, 14, 17, 26, 36, 42, 65, 479, 888, 893, 1108, 1114, 1194, 1596, 1854, 1857, 1864, 1876, 1877, 1880, 1885, 1895, 1899, 1907, 1908, 1909, 1911], "lstm": [6, 754, 1387, 1855, 1880, 1895, 1897, 1902, 1904, 1905, 1916], "hidden": [6, 751, 1123, 1368, 1369, 1386, 1387, 1431, 1433, 1597, 1880, 1916], "correctli": [6, 16, 32, 35, 52, 57, 479, 1114, 1184, 1199, 1416, 1534, 1854, 1856, 1857, 1867, 1871, 1876, 1877, 1881, 1882, 1883, 1890, 1892, 1902, 1907], "entrant": 6, "futur": [6, 9, 10, 14, 33, 35, 37, 43, 52, 53, 62, 65, 284, 315, 505, 509, 548, 671, 678, 784, 806, 807, 808, 817, 852, 890, 934, 935, 949, 950, 957, 958, 960, 961, 963, 992, 993, 1000, 1001, 1003, 1130, 1184, 1187, 1193, 1194, 1197, 1202, 1214, 1225, 1227, 1228, 1229, 1232, 1245, 1273, 1274, 1285, 1356, 1416, 1517, 1539, 1540, 1541, 1588, 1596, 1600, 1637, 1638, 1643, 1661, 1701, 1717, 1798, 1802, 1825, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1863, 1864, 1865, 1867, 1871, 1872, 1879, 1880, 1882, 1893, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1904, 1907, 1911, 1913, 1917, 1918, 1919, 1921], "sequenti": [6, 14, 23, 32, 39, 57, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 784, 1125, 1184, 1193, 1362, 1416, 1455, 1466, 1605, 1619, 1686, 1844, 1854, 1869, 1872, 1880, 1888, 1895, 1898, 1900, 1902, 1921], "func": [6, 35, 40, 60, 62, 65, 853, 883, 885, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 1159, 1187, 1199, 1200, 1515, 1638, 1844, 1852, 1857, 1876, 1907, 1909, 1922], "compris": [6, 53], "chunk": [6, 32, 35, 37, 57, 931, 974, 1119, 1353, 1596, 1790, 1854, 1855, 1870, 1897, 1898, 1900, 1907, 1915], "input_var": [6, 1353], "person": [7, 8, 10], "land": [7, 10, 11, 20], "six": [7, 1346], "commit": [7, 8, 10, 20, 26, 58, 1851, 1852, 1891, 1892], "repositori": [7, 10, 61, 65, 1851, 1882, 1890], "submit": [7, 10, 20, 960, 961, 963, 1880, 1892], "month": [7, 10], "qualifi": [7, 35, 40, 49, 65, 671, 1184, 1416, 1863, 1899], "pr": [7, 8, 1691, 1803, 1921], "interest": [7, 8, 10, 13, 16, 18, 1877, 1883, 1885, 1888], "merge_rul": 7, "vote": [7, 10], "decis": [7, 37, 43, 52, 54, 65, 1199, 1864, 1876], "criteria": [7, 10, 1256], "approv": [7, 10], "Not": [7, 17, 53, 1314, 1854, 1856, 1857, 1858, 1882, 1897, 1902, 1907], "busi": [7, 10], "dai": [7, 8, 20], "contributor": [7, 8, 9, 10], "seen": [7, 15, 17, 29, 41, 65, 216, 931, 944, 1285, 1347, 1348, 1349, 1447, 1539, 1540, 1541, 1685, 1854, 1864, 1877, 1880, 1895, 1911], "thumb": [7, 35], "acceler": [8, 14, 33, 1334, 1335, 1336, 1455, 1655, 1886], "deep": [8, 10, 14, 21, 23, 65, 1334, 1335, 1336, 1358, 1455, 1671, 1852, 1875, 1888, 1902], "neural": [8, 9, 27, 65, 1328, 1339, 1354, 1361, 1370, 1382, 1415, 1416, 1423, 1428, 1429, 1443, 1445, 1459, 1461, 1463, 1545, 1568, 1606, 1669, 1677, 1683, 1854, 1856, 1857, 1875, 1880, 1891, 1895], "tape": 8, "system": [8, 9, 26, 27, 28, 32, 53, 62, 65, 937, 1137, 1191, 1215, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1244, 1245, 1246, 1250, 1255, 1274, 1301, 1459, 1461, 1463, 1596, 1606, 1608, 1746, 1825, 1858, 1863, 1867, 1877, 1879, 1880, 1887, 1888, 1894, 1899, 1907], "organ": [8, 14, 17, 1881, 1887, 1899], "technic": [8, 10, 18, 52, 65, 1184, 1416, 1592, 1593, 1852, 1877, 1884, 1899], "md": [8, 65, 783, 1899], "healthi": [8, 43, 52], "team": [8, 35, 58, 1893, 1900], "commun": [8, 9, 10, 14, 16, 18, 36, 37, 39, 43, 52, 54, 57, 1596, 1877, 1881, 1907, 1908], "ve": [8, 14, 17, 18, 60, 61, 62, 65, 1188, 1864, 1869, 1877, 1883, 1908, 1916], "come": [8, 9, 10, 17, 19, 32, 40, 41, 42, 49, 52, 58, 62, 1057, 1108, 1114, 1255, 1355, 1356, 1357, 1361, 1382, 1652, 1861, 1865, 1881, 1883, 1887, 1899, 1907, 1909, 1911], "peopl": [8, 16, 1877, 1902], "scratch": [8, 23, 1877], "itch": 8, "acquaint": 8, "tip": [8, 14, 1880], "tracker": [8, 1256], "confirm": [8, 14, 19, 1851, 1854, 1882, 1895, 1907, 1909], "tend": [8, 894, 1837], "bootcamp": 8, "1hr": 8, "although": [8, 9, 22, 40, 41, 62, 65, 963, 1347, 1348, 1349, 1416, 1424, 1596, 1852, 1857, 1876, 1882, 1891, 1900, 1902], "join": [8, 33, 35, 39, 52, 53, 64, 65, 1596, 1851, 1852, 1858, 1869, 1877, 1881, 1890, 1897, 1917], "dev": [8, 11, 21, 23, 44, 49], "happi": 8, "research": [8, 9, 10, 1596, 1851, 1877, 1885, 1893], "partner": 8, "speed": [8, 9, 17, 18, 26, 39, 969, 1057, 1113, 1175, 1188, 1193, 1247, 1324, 1422, 1802, 1877, 1879, 1880, 1881, 1882, 1884, 1886, 1891, 1902, 1907], "reach": [8, 9, 10, 13, 32, 33, 35, 36, 43, 52, 58, 1256, 1596, 1674, 1677, 1680, 1681, 1877, 1890, 1900, 1902, 1903, 1907], "design": [8, 10, 14, 16, 21, 23, 32, 41, 49, 52, 58, 61, 62, 63, 899, 900, 1184, 1203, 1416, 1650, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1813, 1851, 1852, 1853, 1867, 1880, 1882, 1886, 1888, 1899], "comment": [8, 65, 1741, 1857, 1858, 1882, 1914, 1916], "crack": 8, "usual": [8, 26, 32, 33, 37, 52, 53, 65, 79, 474, 822, 823, 824, 825, 832, 884, 892, 894, 898, 1125, 1355, 1356, 1357, 1361, 1376, 1379, 1380, 1381, 1382, 1587, 1596, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1844, 1854, 1857, 1872, 1876, 1877, 1879, 1880, 1884, 1887, 1898, 1903, 1905, 1907, 1916, 1922], "idea": [8, 14, 23, 58, 1057, 1324, 1596, 1880, 1887, 1895, 1908], "rfc": [8, 1877, 1902, 1908], "big": [8, 1658, 1659, 1662, 1668, 1669, 1784, 1785, 1786, 1787, 1788, 1789, 1898, 1902], "post": [8, 9, 21, 23, 36, 37, 39, 57, 847, 848, 852, 1184, 1416, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1852, 1861, 1877, 1881, 1884, 1894], "standard": [8, 26, 29, 33, 41, 45, 46, 50, 62, 65, 79, 346, 371, 580, 1077, 1328, 1334, 1335, 1336, 1371, 1379, 1380, 1381, 1382, 1388, 1455, 1461, 1463, 1644, 1691, 1714, 1760, 1765, 1796, 1797, 1856, 1858, 1872, 1875, 1879, 1880, 1890, 1891, 1895, 1896, 1899, 1912], "lot": [8, 16, 17, 18, 26, 32, 1869, 1877, 1880, 1885, 1890, 1899, 1900, 1906, 1908, 1916], "boil": 8, "mostli": [8, 41, 1182, 1596, 1880, 1911, 1922], "evid": 8, "peer": [8, 35, 39, 52, 57, 967, 1596, 1880, 1907], "paper": [8, 10, 33, 41, 751, 1324, 1328, 1334, 1335, 1336, 1338, 1347, 1348, 1349, 1354, 1355, 1356, 1357, 1358, 1361, 1364, 1365, 1368, 1371, 1374, 1379, 1380, 1381, 1388, 1422, 1428, 1429, 1434, 1443, 1447, 1455, 1459, 1461, 1463, 1464, 1465, 1510, 1511, 1520, 1658, 1659, 1670, 1677, 1683, 1885, 1900], "framework": [8, 9, 10, 41, 49, 58, 64, 751, 965, 1293, 1368, 1596, 1603, 1671, 1750, 1852, 1889, 1900, 1902, 1908, 1909], "bit": [8, 16, 17, 65, 83, 324, 451, 752, 754, 756, 810, 811, 812, 813, 816, 818, 849, 917, 920, 949, 950, 1110, 1164, 1725, 1726, 1738, 1767, 1880, 1888, 1891, 1894, 1902, 1905, 1906, 1911, 1914, 1917, 1923], "accept": [8, 10, 23, 32, 35, 37, 40, 58, 59, 61, 63, 145, 505, 793, 880, 881, 882, 883, 884, 889, 898, 934, 1000, 1003, 1109, 1125, 1146, 1184, 1188, 1352, 1416, 1423, 1444, 1615, 1629, 1630, 1636, 1654, 1742, 1779, 1793, 1844, 1857, 1871, 1880, 1882, 1883, 1895, 1898, 1907, 1914, 1916], "overwhelm": [8, 14, 23, 1907], "newli": [8, 17, 57, 65, 1071, 1072, 1359, 1360, 1703, 1704, 1861], "publish": [8, 10, 44, 49, 52, 1256, 1852], "ground": [8, 10, 1352, 1498, 1916], "becom": [8, 9, 10, 14, 17, 23, 32, 35, 41, 65, 284, 751, 867, 1137, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1368, 1386, 1401, 1421, 1431, 1444, 1498, 1515, 1587, 1675, 1775, 1823, 1864, 1865, 1877, 1881, 1895, 1899, 1901, 1907], "refactor": [8, 65, 1894, 1902], "coordin": [8, 14, 23, 35, 37, 41, 43, 574, 577, 875, 1137, 1146, 1285, 1695, 1787, 1827, 1829, 1877, 1911, 1916], "pace": 8, "branch": [8, 20, 65, 1851, 1856, 1857, 1880], "fast": [8, 9, 16, 32, 35, 899, 1358, 1379, 1380, 1381, 1447, 1463, 1565, 1683, 1689, 1708, 1730, 1745, 1852, 1879, 1880, 1882, 1886, 1898, 1907, 1911, 1914, 1915], "definit": [8, 9, 17, 32, 35, 36, 41, 48, 65, 935, 936, 937, 956, 1000, 1105, 1204, 1213, 1214, 1256, 1382, 1527, 1572, 1643, 1721, 1823, 1851, 1854, 1856, 1858, 1876, 1877, 1882, 1885, 1899, 1902, 1916, 1918], "fundament": [8, 62, 1856, 1888, 1907, 1911], "cut": [8, 14], "guidanc": [8, 10, 27, 59, 1900], "stage": [8, 23, 29, 33, 39, 49, 57, 64, 1852, 1864, 1872, 1900, 1909], "piec": [8, 17, 1863, 1872, 1908], "advic": 8, "readi": [8, 18, 26, 64, 852, 853, 913, 922, 1141, 1142, 1596, 1854, 1881, 1907, 1908], "draft": 8, "convert": [8, 17, 22, 23, 32, 35, 40, 41, 42, 57, 61, 65, 77, 145, 571, 575, 576, 577, 578, 579, 726, 779, 780, 781, 783, 784, 785, 806, 807, 808, 829, 830, 845, 848, 849, 850, 870, 871, 930, 943, 1041, 1077, 1108, 1184, 1253, 1416, 1426, 1427, 1455, 1462, 1587, 1598, 1599, 1602, 1639, 1650, 1652, 1653, 1672, 1703, 1704, 1709, 1784, 1785, 1786, 1787, 1788, 1789, 1854, 1855, 1856, 1857, 1872, 1882, 1886, 1895, 1896, 1902, 1905, 1911, 1916, 1918, 1921], "press": [8, 65], "button": [8, 20], "prepend": [8, 26, 32, 35, 39, 65, 224, 1049, 1184, 1278, 1416, 1819, 1855, 1878], "titl": [8, 1897, 1901], "wip": 8, "progress": [8, 35, 39, 43, 53, 55, 960, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1838, 1851, 1866], "ci": [8, 20, 1852], "folk": 8, "who": [8, 9, 10, 17, 18, 24, 52, 1899], "regularli": 8, "queue": [8, 43, 54, 1869, 1916], "everyth": [8, 14, 17, 23, 32, 41, 61, 1854, 1869, 1899], "happen": [8, 10, 17, 18, 35, 37, 39, 41, 43, 45, 52, 57, 62, 65, 79, 598, 782, 805, 1114, 1455, 1596, 1603, 1674, 1680, 1681, 1687, 1802, 1852, 1867, 1869, 1877, 1880, 1881, 1882, 1883, 1884, 1889, 1890, 1894, 1895, 1902, 1907, 1915], "subsystem": [8, 24, 58, 63, 1852, 1882], "feel": [8, 1872, 1895, 1911], "ll": [8, 12, 62, 65, 751, 811, 812, 852, 853, 935, 1003, 1213, 1368, 1369, 1386, 1387, 1864, 1877, 1880, 1882, 1883, 1890, 1895, 1902, 1908], "round": [8, 32, 35, 500, 656, 657, 790, 793, 811, 856, 952, 954, 1014, 1052, 1078, 1079, 1080, 1084, 1088, 1089, 1090, 1105, 1229, 1242, 1468, 1526, 1701, 1702, 1721, 1770, 1853, 1855, 1857, 1870, 1880, 1897, 1902, 1905, 1911, 1912], "trip": [8, 65, 1078, 1079, 1080, 1084, 1088, 1089, 1090], "noth": [8, 26, 43, 65, 671, 994, 1608, 1658, 1659, 1686, 1854, 1856, 1909], "accompani": [8, 78], "solut": [8, 9, 62, 1228, 1229, 1233, 1241, 1244, 1246, 1250, 1332, 1596, 1825, 1854, 1855, 1875, 1876, 1884, 1890], "think": [8, 10, 14, 65, 1672, 1854, 1856, 1877, 1898, 1899, 1909], "confid": [8, 1916], "ahead": [8, 14, 1852, 1902], "search": [8, 12, 20, 23, 24, 33, 810, 928, 1374, 1520, 1596, 1653, 1708, 1737, 1854, 1870, 1871, 1895, 1899, 1911], "repo": [8, 1677, 1851, 1894], "unabl": [8, 23, 62, 77, 1895, 1898], "reproduc": [8, 14, 23, 32, 62, 307, 315, 507, 509, 915, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1412, 1413, 1414, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1507, 1515, 1526, 1553, 1565, 1584, 1585, 1586, 1587, 1837, 1851, 1852, 1898, 1899], "problemat": [8, 32, 65, 1854, 1891, 1903], "insight": [8, 29], "individu": [8, 10, 16, 20, 26, 32, 33, 35, 37, 39, 57, 65, 78, 236, 671, 783, 829, 830, 935, 1023, 1075, 1093, 1184, 1339, 1416, 1455, 1596, 1650, 1857, 1870, 1876, 1877, 1880, 1882, 1887, 1891, 1892, 1895, 1905, 1907, 1918], "intent": [8, 19, 50, 52, 62, 1742, 1864, 1899], "lock": [8, 32, 35, 39, 41, 1877, 1880, 1890, 1899, 1908], "strike": 8, "convers": [8, 22, 451, 571, 574, 784, 929, 1169, 1629, 1852, 1858, 1886, 1895, 1902, 1903, 1911], "medium": [8, 57, 1745], "prioriti": [8, 10, 11, 35, 671, 845, 963, 1856], "entranc": [8, 1880], "great": [8, 1877, 1885], "deal": [8, 9, 17, 32, 43, 54, 1818, 1869, 1884, 1907], "welcom": [8, 1872, 1898, 1911], "aim": [8, 1883, 1911], "rare": [8, 1876, 1895, 1922], "typo": 8, "send": [8, 16, 32, 35, 43, 54, 996, 1587, 1596, 1869, 1881, 1890, 1894, 1897, 1901, 1907, 1908, 1909, 1919, 1921], "forum": [8, 10, 1884, 1890], "share": [8, 11, 26, 32, 36, 39, 41, 42, 52, 53, 57, 62, 216, 305, 334, 451, 476, 512, 515, 608, 850, 870, 871, 888, 899, 900, 958, 960, 992, 996, 1108, 1109, 1110, 1154, 1231, 1315, 1316, 1353, 1596, 1606, 1644, 1719, 1733, 1793, 1816, 1822, 1836, 1855, 1876, 1877, 1879, 1890, 1893, 1894, 1895, 1907, 1911, 1913, 1915, 1920], "resolv": [8, 9, 10, 37, 41, 65, 77, 78, 1184, 1347, 1348, 1349, 1363, 1413, 1416, 1856, 1857, 1858, 1894, 1899, 1913, 1922], "challeng": [8, 14, 35, 1908], "feedback": [8, 23, 29, 33, 57, 58, 1596, 1852], "direct": [8, 10, 17, 22, 24, 35, 751, 783, 1098, 1099, 1184, 1368, 1386, 1416, 1431, 1640, 1670, 1691, 1708, 1729, 1877, 1880, 1882, 1888, 1907], "yourself": [8, 14, 60, 958, 1882, 1888, 1890, 1922], "problem": [8, 14, 18, 23, 32, 35, 52, 62, 1057, 1199, 1229, 1241, 1256, 1352, 1423, 1480, 1741, 1869, 1877, 1880, 1884, 1885, 1890, 1894, 1900, 1902, 1903, 1909, 1914], "area": [8, 10, 1526, 1888, 1902, 1912], "appreci": 8, "strive": 8, "respond": [8, 35], "quickli": [8, 9, 16, 33, 52], "ey": [8, 41, 186, 203, 936, 1125, 1204, 1213, 1224, 1235, 1238, 1241, 1242, 1249, 1250, 1603, 1701, 1780, 1844, 1855, 1859, 1882, 1897], "everyon": [8, 43, 52], "touch": [8, 50, 65], "versu": [8, 1420], "write": [8, 9, 10, 14, 16, 18, 23, 29, 32, 35, 37, 40, 43, 45, 49, 50, 51, 52, 57, 62, 63, 77, 78, 248, 505, 688, 926, 1109, 1125, 1161, 1194, 1214, 1225, 1226, 1227, 1231, 1232, 1245, 1583, 1651, 1733, 1825, 1837, 1844, 1852, 1856, 1867, 1871, 1880, 1883, 1884, 1885, 1898, 1899, 1911, 1916], "blog": [8, 9, 1861, 1881, 1902], "around": [8, 10, 17, 23, 24, 35, 41, 61, 62, 64, 65, 145, 615, 884, 898, 958, 960, 961, 963, 1032, 1103, 1104, 1114, 1184, 1596, 1730, 1854, 1869, 1877, 1880, 1895, 1907], "internet": 8, "grow": [8, 9, 16, 65, 1911], "market": [8, 10], "benefit": [8, 9, 23, 35, 65, 838, 1685, 1869, 1880, 1902, 1911], "opinion": [8, 9, 1911], "isn": [8, 32, 65, 451, 1181, 1877, 1880, 1882, 1907, 1918], "aspect": [8, 35, 65, 1882, 1888], "seem": [8, 1895], "unusu": 8, "claim": [8, 1683, 1885], "wast": [8, 1880], "someon": [8, 10, 1182, 1871], "too": [8, 10, 18, 23, 26, 33, 37, 52, 57, 62, 65, 1014, 1113, 1229, 1247, 1312, 1339, 1352, 1416, 1499, 1597, 1638, 1857, 1879, 1884, 1885, 1890, 1891, 1892, 1894, 1896, 1899, 1900, 1909, 1911], "advisori": 8, "fashion": [8, 32, 35, 54, 507, 1261, 1619, 1854], "rough": [8, 10], "consensu": [8, 10], "corpor": [8, 23], "wrote": [8, 9], "implicitli": [8, 35, 45, 57, 65, 1040, 1129, 1137, 1199, 1200, 1255, 1329, 1330, 1331, 1409, 1410, 1411, 1742, 1823, 1854, 1856, 1857, 1877, 1886], "lifetim": [8, 1880, 1907], "immedi": [8, 9, 10, 52, 53, 57, 64, 1184, 1187, 1416, 1857, 1888, 1893, 1898, 1907, 1909], "sai": [8, 17, 22, 65, 488, 1117, 1118, 1119, 1184, 1416, 1854, 1876, 1877, 1884, 1899, 1908, 1909, 1911], "bugfix": 8, "motiv": [8, 9, 14, 23, 65, 726, 1888, 1908], "ye": [8, 1895, 1898, 1911], "knuth": 8, "bewar": 8, "mere": 8, "proven": [8, 1354, 1596], "ok": [8, 15, 45, 50, 61, 944, 1189, 1909], "sometim": [8, 65, 895, 1014, 1199, 1363, 1467, 1493, 1494, 1495, 1608, 1852, 1857, 1869, 1877, 1880, 1883, 1884, 1888, 1890, 1899, 1914, 1917, 1922], "obvious": [8, 16], "broken": [8, 32, 1014, 1895, 1899], "contrari": [8, 1879], "accident": 8, "put": [8, 10, 32, 35, 43, 61, 64, 65, 313, 1077, 1255, 1371, 1677, 1851, 1855, 1869, 1880, 1890, 1897, 1899, 1908, 1909], "difficulti": [8, 1875], "nonlinearli": 8, "sign": [8, 41, 335, 520, 875, 951, 1045, 1093, 1105, 1110, 1217, 1242, 1243, 1264, 1408, 1670, 1721, 1753, 1767, 1853, 1855, 1870, 1897, 1905, 1911, 1914, 1917, 1918], "split": [8, 32, 35, 65, 608, 763, 764, 765, 850, 852, 853, 931, 938, 1014, 1055, 1147, 1353, 1367, 1368, 1386, 1422, 1431, 1490, 1491, 1492, 1493, 1494, 1495, 1514, 1817, 1845, 1854, 1855, 1870, 1880, 1897, 1899, 1900, 1902, 1907, 1911, 1915], "shippabl": 8, "subtl": [8, 14, 23, 1379, 1380, 1381, 1882], "nuanc": [8, 17, 18], "extra": [8, 17, 26, 32, 33, 35, 39, 41, 57, 65, 1057, 1114, 1125, 1184, 1191, 1194, 1229, 1255, 1416, 1423, 1603, 1798, 1844, 1856, 1871, 1877, 1879, 1881, 1882, 1884, 1887, 1899, 1901, 1911, 1918, 1919], "understand": [8, 9, 10, 12, 13, 14, 16, 17, 18, 23, 35, 37, 43, 44, 1114, 1241, 1861, 1875, 1877, 1880, 1886, 1893, 1901, 1916], "hack": 8, "answer": [8, 11, 65, 815, 1333, 1621], "regress": [8, 19, 1332, 1892], "scrutini": 8, "undertak": 8, "rest": [8, 17, 32, 33, 53, 65, 784, 805, 1110, 1249, 1250, 1817, 1871, 1888, 1892, 1899, 1900, 1902, 1907], "chanc": [8, 37, 41], "unrel": [8, 1123, 1876, 1882, 1899], "aid": [8, 23, 65, 1877], "troubleshoot": [8, 35, 1852], "mayb": [8, 1121], "bracnh": 8, "rebas": 8, "latest": [8, 35, 39, 41, 1615, 1851, 1886, 1895], "statu": [8, 10, 43, 1273, 1852, 1858, 1869, 1902], "hud": 8, "risk": [8, 9, 57, 1605, 1608], "anyth": [8, 42, 45, 64, 814, 817, 1195, 1672, 1854, 1861, 1872, 1888, 1899], "configur": [8, 14, 15, 20, 23, 25, 32, 33, 35, 43, 44, 49, 52, 53, 54, 57, 779, 780, 783, 784, 788, 805, 806, 807, 808, 814, 817, 829, 830, 831, 834, 836, 839, 849, 850, 851, 852, 853, 944, 1014, 1596, 1629, 1746, 1837, 1852, 1863, 1867, 1880, 1881, 1892, 1894, 1899, 1905, 1907, 1916, 1918], "riski": 8, "had": [8, 16, 19, 65, 1199, 1587, 1819, 1877, 1883], "beforehand": [8, 14, 64], "hei": 8, "my": [8, 32, 1353, 1887, 1895, 1902], "member": [8, 10, 32, 35, 43, 52, 53, 65, 1184, 1370, 1416, 1512, 1854, 1856, 1857, 1867, 1884, 1901, 1907, 1918, 1919], "sphinx": 8, "folder": [8, 10, 16, 23, 26, 32, 65, 1653, 1851, 1916], "tree": [8, 15, 45, 61, 944, 1416, 1459, 1653, 1895, 1899, 1901, 1909], "master": [8, 15, 35, 55, 783, 944, 1114, 1459, 1851, 1907], "doxygen": 8, "special": [8, 13, 17, 19, 24, 45, 54, 62, 65, 732, 733, 734, 814, 817, 899, 1050, 1064, 1065, 1066, 1068, 1069, 1078, 1080, 1151, 1152, 1153, 1197, 1255, 1269, 1309, 1353, 1463, 1597, 1598, 1599, 1642, 1672, 1696, 1754, 1765, 1769, 1848, 1852, 1858, 1863, 1871, 1880, 1882, 1885, 1887, 1895, 1899, 1902, 1915, 1916], "server": [8, 32, 35, 53, 1188, 1880, 1899, 1902, 1907], "cppdoc": [8, 27], "cpp": [8, 26, 35, 1306, 1881], "accomplish": [8, 14, 37, 1888], "holist": 8, "concept": [8, 62, 65, 1861, 1883, 1888, 1914], "galleri": 8, "restructur": [8, 1899], "text": [8, 16, 41, 66, 71, 72, 73, 74, 75, 76, 148, 149, 168, 599, 608, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 685, 689, 736, 737, 747, 749, 751, 755, 759, 760, 761, 763, 764, 765, 771, 775, 811, 812, 856, 872, 873, 874, 875, 876, 912, 913, 914, 917, 920, 922, 924, 933, 939, 950, 951, 953, 954, 956, 1052, 1071, 1072, 1101, 1102, 1106, 1107, 1128, 1140, 1141, 1142, 1143, 1150, 1173, 1181, 1204, 1207, 1208, 1209, 1212, 1213, 1220, 1223, 1229, 1233, 1238, 1241, 1247, 1254, 1263, 1270, 1271, 1272, 1273, 1305, 1306, 1317, 1318, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1401, 1402, 1403, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1419, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1482, 1483, 1484, 1486, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1501, 1502, 1503, 1508, 1511, 1513, 1514, 1515, 1519, 1520, 1530, 1535, 1539, 1540, 1541, 1545, 1550, 1553, 1558, 1559, 1561, 1565, 1566, 1567, 1568, 1571, 1572, 1573, 1575, 1576, 1577, 1601, 1603, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1677, 1694, 1695, 1698, 1701, 1714, 1717, 1720, 1732, 1753, 1755, 1756, 1768, 1770, 1780, 1781, 1791, 1798, 1799, 1802, 1814, 1815, 1847, 1872, 1875, 1885, 1895, 1899, 1905, 1912, 1916, 1918], "rst": 8, "rebuild": [8, 33], "circleci": 8, "shard": [8, 14, 32, 37, 39, 40, 57, 1596], "worker": [8, 26, 32, 33, 35, 36, 39, 43, 44, 45, 46, 52, 54, 55, 57, 1596, 1857, 1892, 1900, 1901, 1907, 1908, 1909], "40": [8, 13, 1137, 1256, 1337, 1379, 1603, 1604, 1627, 1628, 1637, 1640, 1813], "minut": [8, 11, 35, 1916], "netlifi": 8, "noplot": 8, "render": [8, 35, 1916], "notebook": 8, "rebuilt": [8, 33, 39], "deploi": [8, 43, 52, 1852, 1887, 1893, 1899], "action": [8, 35, 41, 43, 46, 65, 1880, 1899, 1901, 1909], "develop": [9, 10, 11, 18, 23, 26, 33, 35, 65, 1853, 1856, 1857, 1864, 1877, 1882, 1887, 1888, 1892, 1899, 1902, 1903, 1907, 1911], "meant": [9, 36, 52, 54, 1629, 1876, 1907], "rule": [9, 10, 26, 35, 41, 65, 145, 851, 883, 884, 928, 929, 1040, 1233, 1244, 1334, 1335, 1336, 1379, 1380, 1381, 1455, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1737, 1823, 1852, 1854, 1856, 1870, 1872, 1877, 1878, 1882, 1885, 1914, 1918], "concern": [9, 32, 1869, 1880, 1895], "disagr": 9, "contribut": [9, 10, 37, 908, 1145, 1146, 1352, 1359, 1360, 1423, 1498, 1506, 1507, 1550, 1596, 1852, 1872, 1882, 1883, 1900], "maintainership": [9, 10], "escal": [9, 10], "hacker": 9, "poster": 9, "amaz": 9, "ml": [9, 16], "obsess": 9, "soumith": [9, 11], "goe": [9, 17, 65, 1110, 1328, 1658, 1659, 1884], "depth": [9, 10, 770, 776, 1018, 1019, 1197, 1331, 1346, 1349, 1411, 1468, 1526, 1584, 1864, 1881, 1888, 1901], "primari": [9, 10, 35, 65, 1193, 1858, 1864, 1911], "goal": [9, 16, 49, 61, 65, 1285, 1864, 1877, 1881, 1885, 1896, 1909], "secondari": 9, "abil": [9, 1733, 1864, 1887, 1899], "flexibl": [9, 17, 33, 57, 61, 1240, 1596, 1864, 1880, 1882, 1888], "abstract": [9, 17, 32, 33, 36, 37, 41, 43, 52, 54, 901, 902, 903, 904, 905, 1610, 1857, 1881, 1902, 1907], "critic": [9, 14, 17, 52, 671, 1604, 1637, 1867, 1879, 1880], "concret": [9, 17, 41, 55, 61, 65, 776, 791, 815, 832, 1468, 1553, 1584, 1854, 1857, 1880, 1882, 1890], "manner": [9, 43, 505, 892, 894, 1871, 1873, 1878], "jump": [9, 551, 1914], "regim": 9, "ei": 9, "tradeoff": [9, 14, 19, 33, 1902, 1908], "temptat": 9, "impos": [9, 54, 63, 1741, 1869, 1876, 1914], "strict": [9, 892, 893, 894, 895, 896, 897, 1113, 1120, 1184, 1199, 1200, 1416, 1638, 1899, 1916, 1918], "upfront": 9, "simplifi": [9, 33, 64, 1191, 1406, 1604, 1672, 1864, 1877, 1885, 1888, 1898, 1908], "worth": [9, 10, 17, 32, 33, 55, 1114, 1851, 1915], "friction": 9, "compel": 9, "narrow": [9, 14, 23, 1253, 1316, 1672, 1760, 1855, 1857, 1870, 1897, 1904, 1915], "subproblem": 9, "fragment": [9, 23, 982, 1014, 1861, 1880], "ecosystem": [9, 16, 1887, 1889], "incomprehens": 9, "seamlessli": [9, 1872], "softwar": [9, 1219, 1220, 1247, 1837, 1880, 1886], "experi": [9, 10, 18, 21, 23, 24, 33, 63, 66, 71, 72, 73, 74, 75, 76, 1125, 1445, 1568, 1596, 1844, 1864, 1882, 1916], "rich": [9, 1857], "denomin": [9, 678, 1334, 1335, 1336, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1455, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1672, 1705], "subset": [9, 32, 35, 39, 53, 1195, 1672, 1853, 1854, 1856, 1857, 1882, 1895, 1905], "borrow": 9, "zen": 9, "implicit": [9, 759, 760, 763, 764, 765, 1129, 1137, 1329, 1330, 1331, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1409, 1410, 1411, 1467, 1482, 1483, 1484, 1490, 1491, 1492, 1539, 1540, 1541, 1689, 1853, 1855, 1857, 1858, 1895, 1899, 1915], "concis": [9, 45, 1907], "interchang": [9, 41, 1669, 1822, 1856, 1886, 1896], "everydai": 9, "english": 9, "movement": [9, 1915], "worri": [9, 1907], "placement": [9, 14, 40, 43, 850, 1587, 1902, 1907], "favor": [9, 17, 35, 776, 777, 778, 935, 1026, 1030, 1184, 1238, 1241, 1273, 1274, 1375, 1416, 1469, 1470, 1584, 1585, 1586, 1588, 1701, 1802, 1825], "practition": 9, "debugg": [9, 14, 23, 1189, 1885], "plug": 9, "ir": [9, 14, 18, 23, 65, 751, 1187, 1188, 1368, 1369, 1653, 1852, 1854, 1857, 1895, 1896], "classic": [9, 1877], "sort": [9, 17, 39, 43, 65, 581, 600, 867, 868, 889, 1057, 1144, 1304, 1324, 1630, 1631, 1642, 1702, 1737, 1820, 1834, 1853, 1855, 1857, 1882, 1884, 1897, 1911], "distribut": [9, 18, 24, 32, 33, 36, 43, 44, 45, 46, 49, 50, 51, 52, 54, 55, 57, 64, 168, 252, 280, 371, 447, 474, 599, 686, 687, 810, 914, 1031, 1306, 1324, 1328, 1352, 1353, 1354, 1355, 1356, 1357, 1361, 1366, 1370, 1382, 1430, 1434, 1455, 1498, 1500, 1501, 1502, 1503, 1508, 1512, 1513, 1517, 1527, 1558, 1596, 1644, 1694, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1852, 1857, 1871, 1872, 1875, 1876, 1880, 1900, 1901, 1903, 1909, 1912, 1916, 1919], "tldr": 9, "resourc": [9, 14, 20, 26, 32, 43, 48, 52, 65, 1857, 1869, 1911], "characterist": [9, 1803, 1883, 1888], "uniformli": [9, 41, 1712, 1713, 1918], "leak": [9, 884, 890, 1857, 1869, 1877], "smart": [9, 1882, 1899, 1907], "anywai": [9, 1877], "obviou": [9, 1884, 1909], "extens": [9, 14, 23, 26, 29, 35, 37, 40, 41, 1255, 1256, 1733, 1753, 1852, 1864, 1872, 1876, 1893, 1899, 1911], "unavoid": 9, "latenc": [9, 14, 20, 49, 1879, 1880], "caveat": [9, 12, 19, 23, 57, 1587, 1636, 1864, 1869, 1880, 1888, 1893], "valuabl": 9, "certainli": [9, 1864], "heterogen": [9, 1856], "cluster": [9, 35, 37, 51, 52, 53, 1324, 1916], "focus": [9, 23, 1856, 1857, 1882], "beaten": 9, "space": [9, 10, 32, 41, 763, 764, 765, 1040, 1075, 1077, 1079, 1080, 1086, 1093, 1137, 1146, 1199, 1200, 1254, 1270, 1324, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1382, 1392, 1393, 1394, 1395, 1396, 1397, 1410, 1411, 1467, 1490, 1491, 1492, 1493, 1494, 1495, 1527, 1823, 1855, 1873, 1877, 1885, 1888, 1893], "innov": 9, "ultim": [9, 10, 26, 45, 54, 1881], "evidenc": 9, "began": 9, "bind": [9, 26, 65, 994, 1857, 1858, 1899], "monolith": 9, "deepli": 9, "integr": [9, 12, 32, 40, 46, 61, 149, 914, 916, 917, 918, 919, 920, 921, 956, 1040, 1145, 1184, 1207, 1251, 1252, 1315, 1416, 1708, 1720, 1823, 1872, 1882, 1887, 1888, 1898, 1900, 1902, 1912, 1914, 1918], "numpi": [9, 32, 62, 441, 485, 684, 685, 690, 868, 870, 871, 888, 1052, 1054, 1055, 1057, 1075, 1096, 1097, 1098, 1099, 1103, 1104, 1109, 1125, 1147, 1214, 1215, 1225, 1236, 1238, 1239, 1240, 1241, 1242, 1247, 1248, 1251, 1253, 1285, 1290, 1695, 1720, 1723, 1730, 1742, 1750, 1784, 1785, 1786, 1787, 1788, 1789, 1802, 1804, 1805, 1813, 1816, 1817, 1819, 1841, 1844, 1845, 1864, 1878, 1882, 1883, 1891, 1892, 1894, 1899, 1914, 1915, 1916, 1917, 1918, 1923], "scipi": [9, 932, 1230, 1231, 1555, 1695, 1899, 1910, 1912, 1916], "scikit": [9, 1526], "favorit": 9, "cython": 9, "numba": 9, "reinvent": 9, "wheel": [9, 1894], "year": [9, 1911], "rewrot": 9, "frontend": [9, 14, 27, 61, 65, 1896], "familiar": [9, 14, 22, 27, 65, 1013, 1854, 1877, 1883, 1899, 1902, 1908, 1909], "perhap": [9, 17, 1883], "importantli": [9, 17], "huge": [9, 1803, 1867], "scientif": [9, 1750], "pareto": [9, 1852], "close": [9, 27, 35, 52, 65, 928, 996, 1173, 1219, 1220, 1246, 1247, 1273, 1447, 1465, 1737, 1802, 1825, 1867, 1877, 1882, 1891, 1895, 1899, 1902, 1907, 1916, 1918], "curv": [9, 1916], "torch_funct": [9, 1882], "torch_dispatch": 9, "torch": [9, 10, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 27, 29, 30, 33, 36, 39, 43, 44, 45, 46, 49, 50, 52, 54, 55, 57, 60, 67, 68, 69, 70, 77, 82, 83, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 885, 911, 958, 959, 960, 961, 963, 964, 979, 981, 992, 1061, 1159, 1182, 1183, 1184, 1198, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1587, 1596, 1597, 1598, 1599, 1605, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1629, 1641, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1708, 1747, 1777, 1854, 1855, 1856, 1870, 1871, 1876, 1877, 1878, 1879, 1881, 1884, 1885, 1887, 1888, 1889, 1890, 1892, 1894, 1900, 1902, 1903, 1904, 1907, 1908, 1909, 1915], "tracer": [9, 17, 69, 1199, 1895, 1896, 1916, 1921], "functorch": [9, 12, 58, 63], "anchor": [9, 22, 65, 1464, 1465, 1581, 1582, 1855], "hackabl": 9, "todai": [9, 58, 63, 1902], "open": [9, 10, 14, 26, 32, 41, 52, 58, 680, 906, 1107, 1191, 1255, 1278, 1288, 1532, 1854, 1864, 1869, 1872, 1886, 1894, 1895, 1899, 1902, 1907, 1911, 1912], "evolv": [9, 1881], "ai": [9, 1895, 1912], "adopt": [10, 35, 711, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 736, 737, 747, 752, 753, 754, 755, 756], "hierarch": [10, 1916], "pull": [10, 11, 27, 65, 145, 884, 1899], "request": [10, 11, 24, 35, 37, 54, 680, 852, 870, 871, 1014, 1256, 1278, 1288, 1532, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1851, 1872, 1876, 1877, 1879, 1880, 1895, 1899, 1907, 1908, 1909, 1911, 1912], "overseen": 10, "catch": [10, 45, 1854, 1877, 1883, 1885], "maker": 10, "strong": 10, "toward": [10, 1052, 1145, 1146, 1256, 1320, 1596, 1680, 1721, 1729, 1730, 1900], "philosophi": [10, 61, 1852], "beyond": [10, 33, 1301, 1352, 1658, 1659, 1668, 1728, 1884, 1888], "encourag": [10, 43, 1872, 1902, 1911, 1918], "propos": [10, 1655, 1675, 1676, 1864, 1885, 1898, 1908], "review": [10, 11, 17, 33, 1899], "willing": 10, "invest": 10, "anyon": 10, "ownership": [10, 65], "codebas": 10, "strictli": [10, 32, 145, 186, 203, 884, 928, 1146, 1184, 1188, 1416, 1877, 1912], "compani": 10, "bui": 10, "addition": [10, 32, 33, 35, 41, 57, 145, 505, 608, 884, 1114, 1118, 1119, 1188, 1247, 1324, 1379, 1380, 1381, 1779, 1884, 1919], "membership": [10, 43, 51, 52, 1858], "That": [10, 43, 50, 53, 59, 65, 1181, 1254, 1270, 1837, 1865, 1882, 1883, 1884, 1893, 1899, 1907], "seat": 10, "reserv": [10, 49, 1014, 1858, 1880, 1888], "emploi": [10, 1671, 1888, 1899, 1900], "directori": [10, 14, 23, 26, 35, 37, 50, 1653, 1851, 1866, 1887, 1899, 1901, 1916], "procedur": [10, 23, 41, 850, 1199, 1200, 1256, 1777, 1907], "disput": 10, "public": [10, 11, 1114, 1882, 1922], "relev": [10, 16, 17, 36, 43, 52, 64, 671, 1247, 1858, 1876, 1877, 1899, 1902], "resolut": [10, 1428, 1429, 1480, 1515, 1556, 1557, 1823, 1858, 1899, 1923], "conclus": 10, "publicli": [10, 1922], "vision": [10, 16, 1193, 1352, 1498, 1851, 1852], "roadmap": [10, 11], "parti": [10, 52, 1851, 1852, 1854, 1880, 1883, 1888, 1899], "triag": [10, 11], "meet": [10, 11, 51, 1213, 1880], "Their": [10, 1049], "articul": 10, "cohes": 10, "negoti": [10, 1907], "contenti": 10, "broad": [10, 1888], "stakehold": 10, "power": [10, 18, 51, 1020, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1100, 1207, 1237, 1251, 1384, 1385, 1536, 1537, 1604, 1637, 1655, 1684, 1698, 1722, 1838, 1858, 1880, 1911], "veto": 10, "admin": 10, "amongst": 10, "commonli": [10, 16, 41, 57, 1285, 1857, 1859, 1876, 1877, 1898, 1902, 1914], "merit": 10, "demonstr": [10, 16, 53, 65, 1339, 1854, 1888, 1893, 1900, 1907], "expertis": 10, "continu": [10, 12, 13, 17, 32, 35, 41, 55, 57, 65, 396, 599, 810, 893, 1137, 1219, 1220, 1247, 1338, 1339, 1596, 1858, 1864, 1877, 1893, 1901, 1919], "light": [10, 1916], "mainten": [10, 52, 53], "emeritu": [10, 11], "inact": [10, 1014, 1880], "contact": 10, "item": [10, 17, 32, 37, 574, 575, 576, 580, 783, 784, 785, 805, 806, 807, 808, 1352, 1417, 1426, 1608, 1750, 1851, 1853, 1854, 1855, 1856, 1857, 1870, 1880, 1895, 1897, 1899, 1907, 1916, 1917], "nomine": 10, "breadth": 10, "testimoni": 10, "posit": [10, 32, 41, 65, 83, 396, 464, 536, 726, 848, 852, 854, 899, 913, 915, 922, 935, 936, 937, 1073, 1074, 1075, 1076, 1077, 1085, 1087, 1091, 1093, 1110, 1120, 1121, 1124, 1141, 1142, 1176, 1179, 1184, 1187, 1213, 1214, 1225, 1227, 1238, 1241, 1242, 1256, 1276, 1291, 1310, 1315, 1316, 1333, 1344, 1345, 1346, 1351, 1352, 1353, 1360, 1370, 1377, 1416, 1422, 1452, 1459, 1464, 1465, 1480, 1488, 1507, 1512, 1515, 1581, 1582, 1590, 1591, 1592, 1728, 1730, 1780, 1782, 1826, 1827, 1828, 1829, 1836, 1851, 1855, 1870, 1871, 1882, 1883, 1885, 1895, 1897, 1900, 1906, 1911, 1912, 1918, 1922, 1923], "neg": [10, 24, 26, 32, 35, 41, 54, 65, 83, 434, 436, 451, 652, 653, 689, 746, 771, 915, 951, 954, 963, 979, 985, 986, 1014, 1026, 1073, 1074, 1075, 1076, 1077, 1078, 1092, 1093, 1094, 1100, 1110, 1174, 1176, 1178, 1237, 1264, 1276, 1297, 1298, 1306, 1310, 1315, 1316, 1324, 1333, 1361, 1370, 1402, 1409, 1410, 1411, 1419, 1423, 1425, 1430, 1447, 1464, 1465, 1508, 1512, 1515, 1517, 1526, 1530, 1539, 1540, 1541, 1550, 1558, 1581, 1582, 1584, 1694, 1695, 1726, 1730, 1765, 1767, 1770, 1781, 1818, 1826, 1827, 1828, 1829, 1836, 1853, 1854, 1855, 1870, 1872, 1875, 1877, 1883, 1895, 1896, 1897, 1906, 1911, 1912], "interact": [10, 14, 27, 32, 40, 65, 853, 961, 994, 1159, 1858, 1881, 1899, 1916], "final": [10, 13, 23, 35, 37, 39, 41, 43, 52, 61, 62, 677, 680, 681, 751, 912, 930, 943, 1057, 1096, 1114, 1137, 1255, 1273, 1278, 1368, 1370, 1386, 1431, 1444, 1587, 1780, 1823, 1854, 1856, 1857, 1858, 1870, 1882, 1885, 1888, 1891, 1893, 1895, 1899, 1908, 1909], "declin": 10, "conflict": [10, 33, 53, 1899], "lack": [10, 24, 1219, 1220, 1247], "unfit": 10, "conduct": [10, 1596, 1691, 1803, 1907], "filial": 10, "romant": 10, "strength": 10, "candid": [10, 908, 1855, 1899], "letter": [10, 1057], "befit": 10, "candidaci": 10, "behind": [10, 1852, 1893, 1908], "75": [10, 1145, 1404, 1515, 1533, 1655, 1702, 1855, 1912], "choos": [10, 27, 65, 883, 908, 983, 1229, 1242, 1247, 1332, 1875, 1876, 1879, 1899, 1903, 1916], "unforeseen": 10, "circumst": [10, 52, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1565, 1880], "perman": [10, 65, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1626, 1877, 1909], "unavail": [10, 1856], "rank": [10, 23, 32, 33, 35, 36, 37, 39, 40, 41, 43, 50, 52, 53, 55, 57, 1229, 1230, 1231, 1238, 1273, 1408, 1455, 1596, 1608, 1691, 1803, 1855, 1881, 1890, 1895, 1900, 1907, 1908], "elect": 10, "invit": [10, 1851], "convinc": 10, "approach": [10, 14, 33, 35, 65, 932, 1125, 1777, 1844, 1854, 1869, 1872, 1880, 1882, 1885, 1902, 1907], "interview": 10, "talk": [10, 54, 1887], "gather": [10, 35, 52, 57, 505, 1813, 1837, 1853, 1855, 1882, 1884, 1887, 1897, 1899], "read": [10, 14, 16, 17, 21, 23, 29, 32, 35, 37, 42, 43, 45, 52, 53, 57, 61, 65, 441, 1016, 1040, 1108, 1109, 1110, 1191, 1255, 1685, 1852, 1870, 1871, 1877, 1878, 1880, 1881, 1883, 1887, 1891, 1899, 1902, 1907], "attend": [10, 726, 1422, 1459], "confer": [10, 1370], "pipelin": [10, 14, 65, 1852, 1907], "world": [10, 18, 21, 35, 39, 43, 50, 52, 53, 57, 1455, 1596, 1877, 1899, 1902], "cover": [10, 13, 17, 58, 65, 1031, 1057, 1409, 1539, 1540, 1541, 1857, 1859, 1871, 1877, 1882, 1885, 1887, 1888, 1907], "push": [10, 17, 44, 1019, 1125, 1249, 1844, 1901], "codeown": 10, "notifi": [10, 36, 53, 1909], "expert": 10, "strongli": [10, 35, 43, 53, 1355, 1356, 1357, 1361, 1798, 1851], "failur": [10, 14, 17, 23, 35, 41, 43, 44, 45, 49, 50, 51, 52, 55, 671, 899, 900, 1114, 1199, 1200, 1301, 1857, 1863, 1869, 1896, 1900, 1907, 1909, 1918], "revert": [10, 41, 57, 1452, 1573, 1909], "substanti": [10, 33, 1880], "syntact": [10, 45, 65], "establish": [10, 35, 52, 1877], "seri": [10, 19, 65, 1339, 1379, 1892, 1895, 1922], "lf": 10, "llc": 10, "guidelin": [10, 1619, 1899, 1902, 1903], "trademark": 10, "www": [10, 1339, 1465, 1916], "lfproject": 10, "acknowledg": [10, 35, 1852, 1909, 1911], "copyright": [10, 23], "holder": 10, "independ": [10, 32, 35, 52, 57, 64, 148, 149, 770, 776, 892, 893, 894, 895, 896, 897, 963, 1137, 1146, 1242, 1354, 1355, 1356, 1357, 1361, 1501, 1502, 1503, 1508, 1526, 1584, 1640, 1701, 1852, 1854, 1876, 1877, 1880, 1893, 1899], "authorship": 10, "claus": [10, 1884], "bsd": 10, "licens": 10, "opensourc": 10, "outbound": 10, "inbound": 10, "q": [10, 33, 41, 424, 472, 749, 1129, 1204, 1220, 1223, 1242, 1284, 1313, 1382, 1422, 1565, 1603, 1689, 1691, 1701, 1702, 1803, 1854, 1855, 1885, 1892, 1895, 1911, 1912], "partli": [10, 1857], "domain": [10, 41, 45, 675, 817, 876, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1085, 1087, 1088, 1089, 1090, 1137, 1872, 1895, 1902], "absolut": [10, 24, 26, 65, 87, 672, 685, 899, 900, 1105, 1173, 1212, 1217, 1238, 1241, 1243, 1264, 1377, 1383, 1447, 1524, 1528, 1569, 1613, 1614, 1616, 1617, 1619, 1622, 1623, 1624, 1625, 1643, 1654, 1695, 1721, 1753, 1855, 1888, 1895, 1897, 1912, 1917, 1918], "health": 10, "success": [10, 23, 37, 41, 43, 49, 65, 1214, 1225, 1227, 1273, 1615, 1784, 1785, 1786, 1788, 1789, 1880, 1888, 1895, 1896, 1911], "am": 10, "grant": 10, "purchas": 10, "board": 10, "driven": [10, 1895], "clearli": [10, 1864, 1899], "sponsorship": 10, "foundat": [10, 1896], "ptf": 10, "minor": [10, 985, 1214, 1230], "committ": 10, "facebook": 10, "infrastructur": [10, 44, 1899], "employe": 10, "expand": [10, 41, 249, 485, 869, 891, 899, 900, 927, 1236, 1237, 1285, 1422, 1466, 1559, 1833, 1851, 1853, 1855, 1863, 1870, 1871, 1878, 1883, 1895, 1897, 1899, 1900, 1915], "deliv": [10, 1901], "offici": [10, 35, 1324, 1902], "showcas": [10, 1412, 1880, 1890], "whenev": [10, 17, 871, 1603, 1604, 1867, 1869, 1905, 1908, 1909, 1922], "fix": [11, 14, 23, 29, 32, 35, 40, 41, 43, 52, 57, 59, 62, 65, 77, 78, 256, 786, 792, 1114, 1197, 1229, 1359, 1360, 1434, 1506, 1507, 1526, 1596, 1854, 1855, 1867, 1875, 1876, 1880, 1881, 1884, 1890, 1894, 1895, 1897, 1898], "plu": [11, 26, 37, 892, 1110, 1230, 1911], "quarterli": 11, "chintala": 11, "edward": 11, "yang": [11, 1256], "ezyang": [11, 1915], "greg": 11, "chanan": 11, "gchanan": 11, "dmytro": 11, "dzhulgakov": 11, "nikita": 11, "shulga": 11, "malfet": 11, "joel": [11, 1691, 1803], "schlosser": 11, "jbschlosser": 11, "alban": 11, "desmaison": 11, "alband": 11, "sam": 11, "gross": 11, "colesburi": 11, "adam": [11, 36, 39, 41, 57, 1659, 1660, 1662, 1668, 1672, 1898], "paszk": 11, "apaszk": 11, "ilqar": 11, "ramazanli": 11, "iramazanli": 11, "vincent": 11, "quennevil": 11, "belair": 11, "vincentqb": 11, "jeffrei": 11, "wan": 11, "soulitz": 11, "elia": 11, "ellison": 11, "eellison": 11, "michael": [11, 23], "suo": 11, "yanan": 11, "cao": 11, "gmagogsfm": 11, "jame": 11, "reed": 11, "jamesr66a": 11, "jason": [11, 13], "ansel": [11, 13], "jansel": 11, "jiong": 11, "gong": 11, "jgong5": 11, "zach": 11, "devito": 11, "zdevito": 11, "fritz": 11, "obermey": 11, "fritzo": 11, "neeraj": 11, "pradhan": 11, "neerajprad": 11, "alican": 11, "bozkurt": 11, "alicanb": 11, "vishwak": 11, "srinivasan": 11, "vishwakftw": 11, "shen": 11, "li": [11, 1313, 1702, 1880], "mrshenli": 11, "pritam": 11, "damania": 11, "pritamdamania87": 11, "yanli": 11, "zhao": 11, "zhaojuanmao": 11, "rohan": 11, "varma": 11, "wanchao": 11, "liang": 11, "wanchaol": 11, "junji": 11, "wang": [11, 41], "fduwjj": 11, "howard": 11, "huang": 11, "tristan": 11, "rice": 11, "d4l3k": 11, "alisson": 11, "azzolini": 11, "aazzolini": 11, "ke": 11, "wen": 11, "kwen2501": 11, "kiuk": 11, "chung": 11, "kiukchung": 11, "pieter": 11, "noordhui": 11, "pietern": 11, "mingzh": 11, "mingzhe09088": 11, "omkar": 11, "salpekar": 11, "osalpekar": 11, "simon": 11, "ssnl": 11, "vitali": 11, "fedyunin": 11, "vitalyfedyunin": 11, "mike": 11, "ruberri": 11, "mruberri": 11, "mario": 11, "lezcano": 11, "ivan": 11, "yashchuk": 11, "ivanyashchuk": 11, "pearu": 11, "peterson": 11, "vedeneev": 11, "nikitav": 11, "christian": 11, "puhrsch": 11, "cpuhrsch": 11, "andrew": [11, 1256], "amjam": 11, "driss": 11, "guessou": 11, "drisspg": 11, "mikayla": 11, "gawarecki": 11, "mikaylagawarecki": 11, "natalia": 11, "gimelshein": 11, "ngimel": 11, "georg": 11, "qi": 11, "peter": 11, "bell": 11, "peterbell10": 11, "mingfei": 11, "ma": 11, "mingfeima": 11, "xiaob": 11, "zhang": 11, "xiaobingsup": 11, "xiaoqiang": 11, "zheng": 11, "xq": 11, "ilia": 11, "cherniavskii": 11, "cher": 11, "bai": 11, "bddppq": 11, "yinghai": 11, "jianhui": 11, "piotr": 11, "bialecki": 11, "ptrblck": 11, "sarofeen": 11, "csarofeen": 11, "tulloch": 11, "ajtulloch": 11, "alex": 11, "jann": 11, "jjsjann123": 11, "peng": 11, "sun": 11, "sunway513": 11, "jithun": 11, "nair": 11, "jithunnair": 11, "jeff": 11, "daili": 11, "jeffdaili": 11, "eli": 11, "uriega": 11, "seemether": 11, "mikei": 11, "dagits": 11, "zain": 11, "rizvi": 11, "zainrizvi": 11, "nirav": 11, "mehta": 11, "mehtanirav": 11, "andrei": 11, "talman": 11, "atalman": 11, "zhuoji": 11, "zhou": 11, "zhouzhuoji": 11, "karl": 11, "ostmo": 11, "kostmo": 11, "adnan": 11, "aziz": 11, "adnanaziz": 11, "ck": 11, "luk": 11, "ckluk": 11, "taylor": [11, 1137], "robi": 11, "robieta": 11, "xu": [11, 57], "xuzhao9": 11, "geeta": 11, "chauhan": 11, "chauhang": 11, "victor": 11, "bittorf": 11, "bitfort": 11, "gisl": 11, "dankel": 11, "gdankel": 11, "feng": 11, "yf225": 11, "brian": 11, "hirsh": 11, "bdhirsh": 11, "sebastian": 11, "messmer": 11, "smessmer": 11, "bowen": 11, "bao": [11, 20], "bowenbao": 11, "aaron": 11, "bockov": 11, "abock": 11, "gari": 11, "miguel": 11, "garymm": 11, "lara": 11, "haidar": 11, "hdr": 11, "fang": 11, "houseroad": 11, "negin": 11, "raoof": 11, "neginraoof": 11, "spandan": 11, "tiwari": 11, "spandantiwari": 11, "david": [11, 1324], "reiss": 11, "dreiss": 11, "raziel": 11, "guevara": 11, "linbin": 11, "yu": 11, "linbinyu": 11, "kobzarev": 11, "ivankobzarev": 11, "tao": 11, "xta0": 11, "vasilii": 11, "kuznetsov": 11, "vkuzo": 11, "jerri": 11, "jerryzh168": [11, 784], "zafar": 11, "takhirov": 11, "supriya": 11, "rao": 11, "supriyar": 11, "raghuraman": 11, "krishnamoorthi": 11, "raghuramank100": 11, "guoliang": 11, "hua": 11, "nbcsm": 11, "teng": 11, "gao": 11, "gaoteng": 11, "git": [11, 14, 23, 1901], "johnson": 11, "peterjc123": [11, 1894], "kulin": 11, "seth": 11, "kulinseth": 11, "ramin": 11, "azarmehr": 11, "razarmehr": 11, "alfredo": 11, "mendoza": 11, "avmgithub": 11, "svetlana": 11, "karslioglu": 11, "svekar": 11, "jack": 11, "jackcaog": 11, "daniel": [11, 41], "sohn": 11, "jysohn23": 11, "cain": 11, "zcain117": 11, "hirsch": 11, "gregori": 11, "ail": 11, "ailzhang": 11, "libenzi": 11, "dlibenzi": 11, "suhan": 11, "asuhan": 11, "manoj": 11, "mycpuorg": 11, "vamshi": 11, "dantu": 11, "vdantu": 11, "dhanasekar": 11, "karuppasami": 11, "dhanainm": 11, "francisco": 11, "massa": 11, "fmassa": 11, "vasili": 11, "vrynioti": 11, "datumbox": 11, "nicola": 11, "hug": 11, "nicolashug": 11, "yosua": 11, "maranatha": 11, "yosuamichael": 11, "joao": 11, "gome": 11, "jdsgome": 11, "philip": 11, "meier": 11, "pmeier": 11, "fomin": 11, "vfdev": 11, "nayef": 11, "ahm": 11, "nayef211": 11, "parmeet": 11, "singh": 11, "bhatia": 11, "guanheng": 11, "zhangguanheng66": 11, "moto": 11, "hira": 11, "mthrok": 11, "hwang": 11, "hwangjeff": 11, "carolin": 11, "chen": 11, "carolineechen": 11, "xiaohui": 11, "zhaoheng": 11, "ni": 11, "nateanl": 11, "qb": 11, "ivchenko": 11, "divchenko": 11, "colin": 11, "colin2328": 11, "wenlei": 11, "xie": 11, "wenleix": 11, "straightforward": [12, 17, 65, 1864, 1872, 1888, 1898, 1911], "gm": [12, 17, 22, 23, 65], "my_custom_backend": 12, "f_opt": 12, "_dynamo": [12, 13, 14, 15, 16, 17, 19, 21, 23, 944, 1852, 1881], "my_compil": [12, 13, 17], "besid": [12, 33, 35, 1880, 1881, 1916], "plugin": [12, 1901, 1916], "entry_point": [12, 53], "torch_dynamo_backend": 12, "your_modul": 12, "submodul": [12, 22, 27, 57, 65, 782, 788, 805, 829, 830, 831, 849, 852, 853, 1123, 1184, 1188, 1194, 1195, 1353, 1416, 1417, 1418, 1444, 1594, 1854, 1856, 1857, 1865, 1888, 1893, 1899, 1902, 1907, 1921], "registr": [12, 39, 40, 64, 77, 1000, 1589, 1594, 1595, 1596, 1605, 1608, 1861, 1899], "minifi": [12, 14], "typic": [12, 23, 26, 32, 33, 35, 41, 42, 43, 45, 52, 53, 54, 57, 65, 78, 956, 958, 1100, 1108, 1184, 1204, 1207, 1350, 1376, 1416, 1587, 1596, 1658, 1659, 1784, 1785, 1786, 1788, 1789, 1851, 1852, 1854, 1857, 1863, 1877, 1879, 1880, 1891, 1892, 1893, 1895, 1898, 1900, 1902, 1907, 1915, 1923], "canon": [12, 43, 45, 1854], "opset": [12, 1853, 1895, 1896, 1897], "significantli": [12, 35, 893, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1745, 1911], "smaller": [12, 32, 65, 491, 536, 956, 1596, 1685, 1700, 1790, 1880, 1893, 1899, 1923], "aot_autograd": 12, "fw_compil": 12, "bw_compil": 12, "box": [12, 16, 24, 35, 40, 53, 65, 1125, 1844, 1871, 1877, 1881], "make_boxed_func": 12, "my_backend": [12, 783], "model_opt": 12, "pretti": [12, 17, 1184, 1653, 1750, 1854], "bytecod": [12, 13, 14, 17, 21, 23, 32, 671, 1863, 1899], "print_tabular": [12, 17, 65], "co": [12, 15, 16, 18, 63, 196, 626, 627, 674, 922, 944, 1000, 1115, 1118, 1119, 1124, 1141, 1142, 1235, 1350, 1351, 1354, 1675, 1676, 1683, 1695, 1757, 1758, 1761, 1762, 1763, 1764, 1766, 1784, 1785, 1786, 1788, 1789, 1853, 1855, 1870, 1897, 1898, 1911, 1916, 1918], "sin": [12, 15, 16, 18, 26, 62, 63, 523, 660, 661, 872, 944, 1000, 1115, 1117, 1118, 1119, 1121, 1124, 1142, 1235, 1285, 1695, 1758, 1764, 1853, 1855, 1870, 1877, 1897, 1911, 1912, 1916], "opcod": [12, 13, 17, 65, 1899], "placehold": [12, 13, 22, 65, 66, 71, 72, 73, 74, 75, 76, 825, 1378, 1880], "call_funct": [12, 13, 14, 17, 22, 23, 65, 77, 78], "0x7f1a894649a8": 12, "mockmodul": 12, "optimized_mod": 12, "ab": [12, 13, 14, 17, 23, 40, 41, 85, 86, 616, 617, 673, 932, 1057, 1215, 1236, 1237, 1239, 1240, 1253, 1256, 1386, 1435, 1462, 1465, 1467, 1555, 1640, 1643, 1685, 1691, 1695, 1852, 1853, 1855, 1857, 1870, 1871, 1872, 1880, 1888, 1897, 1911, 1917], "abs_1": [12, 13], "0x7f8d259298a0": 12, "truediv": [12, 13, 65], "call_method": [12, 13, 17, 65], "sum_1": [12, 13, 65], "lt": [12, 13, 357, 389, 1210, 1853, 1854, 1855, 1870, 1897], "mul_1": 12, "nondeterminist": [12, 65, 307, 309, 315, 507, 509, 915, 1205, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1412, 1413, 1414, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1507, 1515, 1526, 1553, 1565, 1584, 1585, 1586, 1744, 1837], "offer": [12, 14, 35, 57, 60, 1596, 1837, 1853, 1880, 1886, 1899, 1911], "superior": 12, "real": [12, 16, 17, 18, 32, 41, 65, 677, 678, 679, 680, 681, 683, 689, 899, 912, 937, 946, 952, 1003, 1073, 1074, 1076, 1078, 1079, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1174, 1176, 1177, 1180, 1181, 1204, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1223, 1226, 1227, 1228, 1233, 1236, 1238, 1240, 1241, 1242, 1243, 1247, 1248, 1252, 1253, 1254, 1264, 1270, 1383, 1425, 1428, 1429, 1465, 1603, 1798, 1802, 1841, 1842, 1843, 1851, 1852, 1853, 1855, 1857, 1877, 1880, 1897, 1899, 1902, 1907, 1909, 1915, 1917, 1918, 1922], "optimize_for_infer": [12, 1188], "optimize_for_inference_compil": 12, "And": [12, 16, 17, 61, 788, 815, 1036, 1037, 1113, 1184, 1205, 1281, 1286, 1339, 1416, 1877, 1882, 1883, 1894, 1895, 1902, 1921], "code_to_acceler": 12, "trt_compil": 12, "tensorrt": [12, 14, 16, 1902], "inductor_compil": 12, "tensor_match": 13, "function_match": 13, "recaptur": 13, "recompil": [13, 17, 18, 19, 26, 65, 671, 1197, 1863, 1886], "dispatch_kei": [13, 1861], "ndim": [13, 1249, 1250, 1870, 1872, 1911, 1917], "log_level": [13, 14, 23, 1881], "info": [13, 14, 23, 35, 43, 46, 50, 671, 883, 960, 961, 963, 1214, 1225, 1227, 1228, 1232, 1245, 1273, 1297, 1298, 1652, 1852, 1855, 1863, 1881, 1882, 1883, 1895, 1899], "output_cod": [13, 23, 671, 1863], "spammi": [13, 1863], "printout": [13, 65, 1002, 1015], "__compiled_fn_0": 13, "eval_with_kei": 13, "0x7f9ca082f8a0": 13, "load_fast": [13, 17], "load_glob": 13, "load_method": 13, "6": [13, 14, 20, 23, 26, 29, 32, 33, 35, 41, 50, 65, 307, 309, 311, 315, 395, 396, 464, 480, 491, 505, 509, 551, 598, 676, 677, 682, 688, 732, 733, 734, 736, 737, 749, 752, 754, 756, 892, 893, 895, 896, 897, 915, 923, 928, 934, 937, 938, 942, 956, 969, 1016, 1020, 1034, 1035, 1036, 1040, 1041, 1052, 1055, 1056, 1073, 1081, 1086, 1087, 1091, 1092, 1094, 1096, 1097, 1100, 1107, 1137, 1147, 1149, 1150, 1173, 1194, 1205, 1209, 1220, 1236, 1240, 1241, 1242, 1249, 1250, 1254, 1256, 1285, 1289, 1314, 1315, 1316, 1329, 1340, 1343, 1348, 1351, 1359, 1360, 1369, 1370, 1371, 1373, 1374, 1412, 1413, 1417, 1425, 1433, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1459, 1460, 1462, 1467, 1473, 1482, 1512, 1519, 1520, 1552, 1554, 1561, 1587, 1631, 1632, 1634, 1636, 1642, 1643, 1644, 1656, 1670, 1690, 1691, 1694, 1701, 1702, 1708, 1709, 1712, 1718, 1728, 1729, 1733, 1737, 1750, 1771, 1775, 1779, 1782, 1784, 1785, 1790, 1801, 1803, 1804, 1805, 1812, 1817, 1818, 1819, 1820, 1821, 1823, 1826, 1828, 1832, 1837, 1845, 1846, 1853, 1854, 1857, 1858, 1864, 1872, 1875, 1877, 1882, 1883, 1888, 1893, 1895, 1907, 1908, 1911, 1912, 1914, 1917, 1918, 1922], "load_const": [13, 17], "12": [13, 20, 32, 33, 35, 57, 315, 509, 608, 677, 732, 733, 734, 736, 737, 934, 938, 1055, 1073, 1147, 1188, 1203, 1242, 1324, 1340, 1348, 1363, 1364, 1365, 1413, 1428, 1429, 1450, 1459, 1467, 1510, 1511, 1551, 1556, 1557, 1604, 1637, 1690, 1701, 1750, 1765, 1775, 1817, 1833, 1845, 1851, 1854, 1855, 1858, 1864, 1880, 1889, 1893, 1895, 1897, 1911, 1918], "binary_add": 13, "14": [13, 35, 315, 509, 937, 1000, 1001, 1040, 1055, 1147, 1236, 1242, 1310, 1340, 1413, 1701, 1708, 1775, 1817, 1818, 1823, 1845, 1854, 1858, 1895, 1897, 1911, 1915, 1916], "binary_true_divid": 13, "16": [13, 14, 23, 31, 35, 315, 608, 729, 730, 731, 732, 733, 734, 763, 1055, 1073, 1100, 1137, 1147, 1184, 1195, 1207, 1213, 1219, 1220, 1224, 1240, 1316, 1328, 1330, 1331, 1339, 1340, 1343, 1344, 1345, 1346, 1348, 1349, 1354, 1355, 1356, 1357, 1361, 1364, 1365, 1384, 1385, 1386, 1404, 1409, 1410, 1411, 1413, 1414, 1416, 1423, 1431, 1442, 1459, 1473, 1490, 1492, 1493, 1495, 1499, 1510, 1511, 1646, 1698, 1775, 1837, 1841, 1845, 1854, 1858, 1875, 1880, 1888, 1891, 1893, 1895, 1897, 1900, 1907, 1911, 1912, 1914, 1916, 1917], "store_fast": 13, "11": [13, 23, 26, 35, 315, 505, 934, 938, 963, 1003, 1055, 1147, 1204, 1240, 1254, 1270, 1324, 1340, 1365, 1413, 1511, 1643, 1644, 1653, 1775, 1817, 1845, 1854, 1858, 1864, 1871, 1880, 1894, 1895, 1897, 1911, 1912], "18": [13, 35, 315, 438, 676, 1058, 1137, 1181, 1256, 1413, 1854, 1895, 1897, 1911], "20": [13, 17, 35, 39, 41, 315, 676, 711, 719, 720, 725, 729, 730, 731, 732, 733, 734, 737, 747, 751, 752, 753, 754, 755, 756, 763, 1137, 1182, 1185, 1195, 1206, 1240, 1305, 1328, 1330, 1331, 1333, 1334, 1335, 1336, 1337, 1339, 1343, 1344, 1345, 1346, 1348, 1349, 1354, 1355, 1356, 1357, 1361, 1364, 1365, 1368, 1369, 1371, 1378, 1379, 1380, 1381, 1384, 1385, 1386, 1387, 1388, 1403, 1409, 1410, 1411, 1413, 1414, 1416, 1431, 1433, 1444, 1452, 1455, 1458, 1459, 1460, 1461, 1473, 1490, 1492, 1493, 1495, 1499, 1510, 1511, 1517, 1573, 1603, 1604, 1628, 1637, 1640, 1661, 1676, 1704, 1813, 1854, 1855, 1872, 1881, 1882, 1891, 1898, 1907, 1911], "22": [13, 35, 41, 315, 608, 1256, 1587, 1633, 1635, 1854, 1892, 1911], "24": [13, 33, 35, 41, 917, 1242, 1404, 1480, 1636, 1701, 1818, 1854, 1875, 1879, 1912], "26": [13, 23, 1239, 1676], "compare_op": 13, "28": [13, 608, 737, 1040, 1823, 1895], "pop_jump_if_fals": 13, "38": [13, 1310], "30": [13, 18, 32, 35, 41, 43, 52, 438, 608, 711, 719, 720, 747, 755, 1137, 1206, 1337, 1339, 1343, 1403, 1467, 1473, 1490, 1499, 1587, 1679, 1681, 1687, 1704, 1813, 1882, 1895, 1898, 1907], "34": [13, 17, 23, 35], "binary_multipli": [13, 17], "36": [13, 17, 35, 315, 1100, 1137], "13": [13, 23, 35, 866, 938, 1055, 1058, 1102, 1137, 1147, 1188, 1273, 1340, 1364, 1365, 1413, 1450, 1510, 1511, 1775, 1817, 1845, 1854, 1858, 1897, 1911], "42": [13, 32, 815, 922, 1305, 1757, 1880, 1888], "return_valu": [13, 43, 44, 50], "unpack_sequ": 13, "__resume_at_30_1": 13, "__resume_at_38_2": 13, "offset": [13, 17, 39, 43, 220, 221, 222, 223, 333, 512, 549, 737, 869, 1045, 1046, 1047, 1048, 1110, 1218, 1360, 1507, 1596, 1703, 1704, 1782, 1827, 1829, 1855, 1857], "__resume_at_": 13, "jump_absolut": 13, "resume_at": 13, "remaind": [13, 32, 482, 1105, 1137, 1853, 1855, 1897], "restart": [13, 33, 43, 51, 53, 55, 1675, 1676, 1869, 1916], "saroufim": 14, "aotautograd": [14, 16, 23, 61, 671, 1863, 1881, 1896], "evalfram": 14, "min": [14, 32, 35, 45, 52, 65, 111, 180, 181, 182, 183, 294, 686, 687, 688, 749, 761, 762, 771, 793, 810, 811, 812, 813, 816, 866, 939, 940, 1000, 1037, 1071, 1072, 1144, 1215, 1229, 1230, 1236, 1240, 1242, 1247, 1253, 1273, 1306, 1338, 1375, 1402, 1404, 1424, 1436, 1443, 1489, 1526, 1530, 1559, 1561, 1566, 1584, 1670, 1675, 1676, 1685, 1689, 1691, 1701, 1802, 1826, 1827, 1828, 1829, 1853, 1855, 1867, 1870, 1895, 1897, 1902, 1905, 1907, 1923], "partit": [14, 22, 39, 40, 1324, 1823, 1895, 1897, 1900, 1908, 1909], "usercod": 14, "ddp": [14, 35, 36, 37, 39, 57, 1455, 1596, 1852, 1880, 1881, 1907], "unrol": [14, 1856, 1857, 1895], "fsdp": [14, 37, 40, 57, 1852], "naiv": [14, 32, 1900], "delai": [14, 1596, 1909], "outlin": [14, 36, 1900, 1908], "bucket": [14, 23, 33, 39, 1324, 1596, 1855, 1881, 1897], "broadcast": [14, 35, 39, 41, 57, 62, 92, 191, 392, 394, 395, 396, 505, 507, 509, 557, 676, 677, 678, 679, 680, 681, 682, 688, 726, 875, 912, 917, 920, 924, 925, 926, 927, 951, 971, 1000, 1051, 1052, 1057, 1062, 1102, 1103, 1104, 1105, 1126, 1128, 1140, 1150, 1208, 1209, 1216, 1229, 1233, 1238, 1239, 1241, 1244, 1252, 1272, 1277, 1278, 1288, 1305, 1308, 1317, 1320, 1351, 1370, 1422, 1497, 1559, 1596, 1654, 1690, 1698, 1721, 1723, 1799, 1818, 1823, 1847, 1852, 1853, 1857, 1870, 1871, 1872, 1881, 1895, 1897, 1912], "fraction": [14, 32, 41, 1027, 1100, 1106, 1301, 1347, 1348, 1349, 1364, 1365, 1422, 1463, 1510, 1511, 1613, 1614, 1616, 1617, 1619, 1622, 1623, 1624, 1625, 1702, 1875], "rob": 14, "fusion": [14, 15, 16, 22, 23, 65, 783, 805, 851, 852, 944, 1186, 1192, 1197, 1198, 1199, 1200, 1865, 1888, 1902], "opportun": [14, 1214, 1854, 1908], "diminish": 14, "practic": [14, 32, 35, 41, 57, 1852, 1854, 1864, 1869, 1871, 1877, 1882, 1885, 1888, 1893, 1899, 1907], "vast": 14, "probabl": [14, 19, 32, 149, 751, 914, 1145, 1261, 1306, 1324, 1328, 1332, 1339, 1352, 1354, 1355, 1356, 1357, 1361, 1368, 1370, 1386, 1422, 1423, 1431, 1487, 1498, 1499, 1500, 1501, 1502, 1503, 1508, 1517, 1527, 1550, 1565, 1701, 1869, 1882, 1894, 1895, 1912, 1916], "situat": [14, 16, 32, 41, 54, 65, 952, 1608, 1869, 1882, 1883, 1890, 1891, 1899, 1902, 1909, 1922], "250k": 14, "aitempl": 14, "fuse": [14, 15, 16, 22, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717, 718, 719, 720, 783, 784, 793, 795, 796, 797, 805, 838, 850, 851, 944, 1197, 1198, 1565, 1658, 1659, 1865, 1870, 1895, 1898, 1902, 1903, 1904, 1905], "mobil": [14, 1865, 1902], "ran": [14, 19, 23, 29, 57], "fine": [14, 26, 35, 37, 39, 42, 849, 852, 1108, 1199, 1565, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1851, 1869, 1877, 1880, 1882, 1895, 1899, 1900, 1902], "succeed": [14, 43, 52, 67, 69, 1273], "aot_eag": [14, 23], "warn": [14, 17, 18, 23, 26, 29, 33, 35, 39, 57, 671, 892, 898, 934, 969, 1016, 1020, 1031, 1034, 1035, 1125, 1165, 1199, 1241, 1285, 1422, 1460, 1461, 1462, 1463, 1605, 1608, 1744, 1752, 1837, 1844, 1851, 1863, 1867, 1878, 1882, 1897, 1899, 1906], "torchdynamo_debug_funct": [14, 23], "desired_function_nam": 14, "replay_record_en": [14, 23], "replai": [14, 23, 958, 992, 1650, 1880], "hundr": [14, 23, 1876, 1887], "thousand": [14, 23], "highli": [14, 52, 1324, 1596, 1851, 1889, 1895, 1911, 1918], "tini": [14, 1917, 1918, 1923], "torchdynamo_repro_aft": [14, 23], "aot": [14, 23, 671, 1863], "your_model": 14, "quickest": 14, "repro": [14, 23, 1653], "torchdynamo_repro_dir": 14, "nvfuser": [14, 16, 23, 1854], "leverag": [14, 15, 944, 1907], "compile_tim": [14, 23], "torch_compile_debug": [14, 16], "_inductor": [14, 15, 18, 23, 944], "diagram": [14, 23, 43, 52, 1184, 1416, 1902, 1909], "certain": [14, 17, 23, 32, 33, 35, 49, 50, 62, 64, 65, 677, 680, 726, 912, 924, 982, 1045, 1159, 1181, 1184, 1191, 1255, 1278, 1288, 1344, 1345, 1346, 1347, 1348, 1349, 1369, 1387, 1403, 1416, 1422, 1467, 1516, 1527, 1529, 1642, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1857, 1864, 1871, 1877, 1878, 1880, 1882, 1887, 1888, 1891, 1895, 1900, 1901, 1907, 1908, 1911], "assumpt": [14, 19, 23, 37, 49, 53, 899, 1339, 1370, 1877, 1881, 1885, 1907, 1908, 1911], "express": [14, 23, 24, 37, 58, 62, 63, 65, 313, 1182, 1185, 1798, 1858, 1865, 1872, 1877, 1882, 1922], "cache_size_limit": [14, 17, 23], "troubl": [14, 23], "compileprofil": [14, 23], "my_model": [14, 23, 37, 1596, 1854, 1895], "profiler_model": [14, 23], "upcom": [14, 23, 35, 57, 1876], "tune": [14, 23, 33, 35, 39, 1014, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1877, 1880, 1889, 1902], "unexpect": [14, 17, 35, 42, 65, 957, 1108, 1110, 1113, 1184, 1416, 1638, 1654, 1793, 1854, 1877, 1882, 1891], "warm": [14, 33, 39, 1003, 1675, 1676, 1880, 1901], "traffic": 14, "frozen_toy_exampl": 14, "vertic": [14, 1845, 1846, 1898, 1900, 1916], "cosin": [14, 674, 675, 953, 954, 1350, 1351, 1497, 1675, 1676, 1683, 1761, 1898], "horizont": [14, 942, 1147, 1149, 1898, 1900], "simplest": [14, 17, 18, 32, 37, 43, 65, 849, 1329, 1330, 1331, 1344, 1345, 1346, 1409, 1410, 1411, 1606, 1881, 1882, 1888, 1902, 1909, 1911], "batch": [14, 15, 23, 33, 35, 41, 53, 55, 58, 59, 62, 63, 65, 574, 575, 576, 578, 579, 677, 693, 694, 695, 696, 697, 698, 726, 751, 770, 776, 898, 899, 900, 912, 924, 925, 932, 935, 936, 937, 944, 957, 1045, 1047, 1057, 1118, 1119, 1125, 1181, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1251, 1252, 1253, 1256, 1264, 1273, 1274, 1278, 1332, 1333, 1334, 1335, 1336, 1339, 1344, 1345, 1350, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1368, 1369, 1370, 1371, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1386, 1387, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1407, 1408, 1419, 1420, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1431, 1433, 1447, 1448, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1480, 1485, 1487, 1488, 1498, 1499, 1501, 1502, 1503, 1506, 1507, 1508, 1509, 1512, 1525, 1526, 1527, 1550, 1558, 1565, 1583, 1584, 1587, 1596, 1603, 1629, 1630, 1632, 1633, 1635, 1676, 1677, 1683, 1689, 1691, 1701, 1705, 1784, 1785, 1786, 1788, 1789, 1793, 1798, 1802, 1803, 1822, 1825, 1826, 1828, 1841, 1844, 1852, 1870, 1871, 1872, 1876, 1880, 1883, 1884, 1888, 1890, 1900, 1902, 1907, 1911, 1916, 1917], "schedul": [14, 37, 43, 45, 51, 57, 64, 671, 1669, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1863, 1881, 1887, 1901], "automat": [14, 16, 23, 26, 33, 35, 40, 52, 53, 65, 145, 580, 880, 882, 994, 1003, 1146, 1193, 1199, 1285, 1462, 1565, 1597, 1720, 1750, 1851, 1852, 1856, 1857, 1865, 1866, 1870, 1871, 1877, 1878, 1880, 1882, 1888, 1890, 1895, 1899, 1900, 1902, 1903, 1907, 1916, 1917, 1919], "physic": [14, 53, 1075, 1093, 1858, 1879, 1911], "principl": [14, 1880], "whatev": [14, 54, 65, 441, 1596, 1741, 1825, 1857, 1883], "triton": [14, 15, 16, 21, 23, 944, 1883], "stream": [14, 32, 35, 43, 50, 57, 64, 145, 479, 884, 898, 958, 959, 960, 961, 964, 965, 966, 974, 977, 978, 992, 998, 1030, 1033, 1297, 1298, 1303, 1651, 1723, 1852, 1855, 1857, 1907], "multiprocessor": 14, "tile": [14, 485, 1855, 1897], "some_fun": [14, 23], "insurmount": [14, 23], "invis": [14, 23, 1880], "introduc": [14, 18, 19, 23, 29, 41, 62, 751, 1256, 1368, 1386, 1431, 1526, 1728, 1851, 1857, 1878, 1881, 1889, 1895, 1899, 1900, 1901, 1907, 1917], "maxim": [14, 23, 865, 1281, 1412, 1413, 1414, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1669, 1670, 1671, 1672, 1911], "explain": [14, 23, 27, 35, 1672, 1851, 1857, 1876, 1880, 1883], "aggreg": [14, 23, 33, 35, 37, 45, 57, 1360, 1507, 1596, 1619, 1867, 1900], "woo": [14, 23], "out_guard": [14, 23], "ops_per_graph": [14, 23], "builtinvari": [14, 23], "constantvari": [14, 17, 23], "t2": [14, 23, 42, 678, 679, 871, 1108, 1137, 1596, 1907, 1908], "generic_jump": [14, 23], "17": [14, 23, 26, 35, 676, 1181, 1236, 1413, 1775, 1854, 1895, 1897, 1911], "throw": [14, 16, 23, 35, 36, 40, 57, 64, 65, 185, 317, 322, 536, 605, 1169, 1184, 1224, 1273, 1416, 1596, 1598, 1599, 1632, 1643, 1697, 1837, 1872, 1877, 1892, 1907, 1917], "fallback": [14, 23, 26, 35, 52, 60, 1197, 1247, 1876, 1880], "fullgraph": [14, 15, 23, 944], "went": [14, 35, 65], "torchdynamo_dynamic_shap": 14, "vari": [14, 23, 810, 1447, 1629, 1759, 1867, 1891, 1898, 1902, 1903, 1911], "imag": [14, 23, 26, 32, 732, 733, 734, 852, 853, 946, 1322, 1326, 1327, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1363, 1364, 1365, 1380, 1388, 1423, 1428, 1429, 1450, 1467, 1469, 1470, 1480, 1491, 1492, 1494, 1495, 1509, 1510, 1515, 1526, 1583, 1584, 1726, 1852, 1853, 1855, 1872, 1885, 1897, 1900, 1915, 1916], "cv": 14, "nlp": [14, 33, 1379, 1380, 1381, 1388], "client": [14, 35, 39, 52, 1014, 1899], "app": 14, "unnecessarili": 14, "cold": [14, 20], "metric": [14, 20, 38, 1006, 1008, 1014, 1685, 1867, 1888, 1901, 1916], "visibli": 14, "torchdynamo_repro_level": [14, 23], "bisect": [14, 23], "codegen": [14, 23, 65], "yet": [14, 17, 18, 19, 23, 36, 43, 57, 62, 64, 65, 77, 78, 960, 1031, 1187, 1189, 1201, 1289, 1596, 1610, 1614, 1616, 1852, 1856, 1857, 1863, 1871, 1872, 1880, 1895, 1897, 1902, 1907, 1909, 1911, 1912, 1914], "dramat": [14, 23], "impact": [14, 19, 23, 33, 35, 1014, 1745, 1865, 1867, 1877, 1902, 1915], "fallback_random": [14, 15, 23, 944], "alpha": [14, 41, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 146, 147, 306, 307, 545, 552, 553, 554, 555, 676, 677, 680, 681, 682, 735, 761, 766, 912, 1000, 1001, 1141, 1155, 1328, 1338, 1358, 1404, 1443, 1481, 1489, 1504, 1505, 1515, 1533, 1566, 1655, 1669, 1762, 1763, 1776, 1780, 1794, 1799, 1800, 1853, 1855, 1877, 1882, 1895, 1898], "root": [14, 35, 37, 45, 52, 53, 57, 65, 784, 1122, 1221, 1222, 1669, 1732, 1791, 1865, 1877, 1899, 1907, 1908, 1911], "allevi": [14, 1900], "cudagraph": [14, 15, 16, 20, 944, 992, 1880], "subgraph": [15, 23, 944, 1653, 1877, 1881, 1895, 1899, 1921], "autotun": [15, 18, 944], "list_mode_opt": [15, 18, 944], "notabl": [15, 944, 1857], "epilogue_fus": [15, 944], "pointwis": [15, 16, 41, 944, 1118, 1119, 1261, 1262, 1382, 1870, 1878], "templat": [15, 944, 1000, 1001, 1898], "max_autotun": [15, 944], "shape_pad": [15, 944], "pad": [15, 32, 33, 703, 704, 705, 706, 707, 708, 709, 710, 716, 717, 718, 721, 722, 726, 729, 730, 731, 732, 733, 734, 759, 760, 763, 764, 765, 770, 773, 774, 776, 944, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1181, 1329, 1330, 1331, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1359, 1360, 1363, 1392, 1393, 1394, 1395, 1396, 1397, 1409, 1410, 1411, 1412, 1413, 1414, 1419, 1420, 1422, 1437, 1438, 1439, 1440, 1441, 1442, 1462, 1463, 1467, 1471, 1472, 1473, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1506, 1507, 1509, 1515, 1526, 1539, 1540, 1541, 1542, 1543, 1544, 1583, 1584, 1630, 1632, 1633, 1635, 1706, 1707, 1798, 1852, 1853, 1855, 1872, 1884, 1895, 1897, 1902, 1916], "graph_diagram": [15, 944], "pictur": [15, 944], "list_opt": [15, 18, 944], "speedup": [16, 17, 18, 20, 32, 33, 1422, 1463], "checkout": [16, 1895], "new_fn": 16, "input_tensor": [16, 35], "10000": [16, 29, 33, 685, 1683, 1730, 1884, 1888, 1911, 1916], "Its": [16, 35, 65, 956, 972, 1184, 1231, 1249, 1250, 1275, 1416, 1643, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1841, 1857, 1881], "famou": 16, "suboptim": [16, 33], "crucial": [16, 17, 18, 27, 1861], "bottleneck": [16, 33, 1852, 1888], "bandwidth": [16, 33, 35, 51, 53, 1902, 1907], "crunch": 16, "elimin": [16, 22, 35, 65, 601, 1834, 1835, 1892], "trig": 16, "size_hint": 16, "16384": [16, 1880], "filenam": [16, 26, 32, 65, 1183, 1191, 1194, 1851, 1855, 1866, 1877, 1899, 1913, 1916], "__file__": [16, 1851, 1894, 1899], "meta": [16, 22, 57, 61, 65, 330, 1861, 1907, 1916, 1918], "fp32": [16, 57, 772, 785, 808, 1042, 1596, 1880, 1891, 1902, 1903, 1905], "i32": 16, "instance_descriptor": 16, "divisible_by_16": 16, "equal_to_1": 16, "in_ptr0": 16, "out_ptr0": 16, "xnumel": 16, "xblock": 16, "tl": 16, "constexpr": 16, "xoffset": 16, "program_id": 16, "xindex": 16, "reshap": [16, 27, 35, 41, 490, 491, 505, 535, 608, 683, 942, 1040, 1055, 1056, 1096, 1147, 1204, 1236, 1240, 1249, 1250, 1253, 1316, 1363, 1437, 1438, 1439, 1440, 1441, 1467, 1604, 1637, 1643, 1782, 1783, 1790, 1817, 1818, 1823, 1845, 1846, 1853, 1855, 1864, 1871, 1872, 1895, 1897, 1904, 1915, 1916], "arang": [16, 24, 32, 35, 42, 505, 598, 682, 683, 684, 688, 690, 877, 878, 879, 926, 938, 942, 1040, 1055, 1073, 1077, 1085, 1091, 1093, 1097, 1098, 1099, 1100, 1107, 1108, 1147, 1204, 1205, 1209, 1212, 1236, 1239, 1240, 1253, 1316, 1437, 1438, 1439, 1440, 1441, 1468, 1469, 1470, 1552, 1643, 1644, 1690, 1698, 1702, 1717, 1724, 1729, 1750, 1782, 1790, 1801, 1817, 1818, 1820, 1821, 1823, 1845, 1853, 1855, 1864, 1872, 1893, 1897, 1912, 1916, 1917], "xmask": 16, "x0": [16, 41], "tmp0": 16, "tmp1": 16, "tmp2": 16, "int32": [16, 186, 203, 307, 315, 319, 440, 608, 928, 1059, 1071, 1072, 1107, 1109, 1110, 1214, 1225, 1226, 1227, 1245, 1273, 1339, 1700, 1737, 1902, 1911, 1913, 1914, 1917, 1923], "temporari": [16, 26, 65, 814, 817, 1597, 1877, 1884], "held": [16, 64, 958, 982, 1010, 1294, 1876], "written": [16, 22, 23, 35, 45, 62, 907, 1016, 1353, 1651, 1671, 1854, 1856, 1864, 1865, 1877, 1881, 1882, 1883, 1888, 1893, 1895, 1899, 1901, 1913, 1916], "resnet50": [16, 1851, 1916], "hub": [16, 1852, 1866], "v0": 16, "resnet18": [16, 60, 65, 1851, 1854, 1856, 1866, 1899], "opt_model": 16, "64": [16, 60, 61, 63, 1118, 1119, 1123, 1321, 1322, 1323, 1325, 1326, 1327, 1333, 1444, 1565, 1738, 1872, 1894, 1895, 1902, 1906, 1911, 1914, 1916, 1917], "inspir": [16, 57, 1661, 1882], "frequent": [16, 18, 24, 37, 1324, 1852, 1891, 1893], "timm": [16, 18, 20], "download": [16, 1866, 1894, 1916], "huggingfac": [16, 18, 20], "berttoken": 16, "bertmodel": 16, "past": [16, 20, 35, 65, 969, 1016, 1020, 1034, 1035, 1596, 1884], "bert": [16, 1462], "uncas": 16, "token": [16, 52, 958, 992, 993, 1851, 1858], "from_pretrain": [16, 1359, 1360], "me": 16, "encoded_input": 16, "return_tensor": 16, "pt": [16, 24, 33, 1189, 1191, 1194, 1201, 1255, 1733, 1854, 1888, 1893, 1899], "trigonometri": 16, "skim": 16, "create_model": 16, "resnext101_32x8d": 16, "7": [16, 20, 26, 32, 33, 35, 41, 65, 254, 307, 309, 311, 315, 395, 396, 464, 505, 551, 598, 608, 676, 688, 736, 737, 895, 897, 920, 923, 928, 934, 938, 942, 1040, 1052, 1054, 1055, 1058, 1073, 1096, 1097, 1100, 1103, 1107, 1137, 1147, 1161, 1205, 1209, 1219, 1224, 1226, 1227, 1230, 1231, 1235, 1236, 1240, 1247, 1314, 1315, 1316, 1322, 1323, 1326, 1327, 1329, 1340, 1359, 1404, 1412, 1413, 1437, 1438, 1439, 1440, 1441, 1467, 1482, 1553, 1621, 1626, 1636, 1643, 1661, 1708, 1712, 1718, 1728, 1729, 1730, 1737, 1750, 1753, 1755, 1766, 1767, 1775, 1782, 1784, 1785, 1790, 1802, 1804, 1805, 1812, 1817, 1818, 1821, 1823, 1832, 1841, 1845, 1854, 1858, 1864, 1871, 1872, 1878, 1880, 1882, 1891, 1893, 1895, 1897, 1902, 1911, 1914, 1915, 1916, 1917, 1918], "highest": [16, 671, 1324, 1712, 1713, 1745, 1903, 1918], "torchinductor": [16, 21, 671, 1863], "aot_ts_nvfus": 16, "nvprims_nvfus": 16, "primtorch": 16, "onnxrt": 16, "ipex": 16, "tvm": 16, "apach": 16, "symbolic_trac": [16, 65], "traceabl": [16, 65, 615, 808, 1854, 1902], "smoother": [16, 1851, 1864], "transit": [16, 17, 1184, 1285, 1416, 1798, 1852, 1854], "ux": [17, 58, 63], "perspect": [17, 1881, 1891, 1908], "fn_foo": 17, "grab": 17, "dig": 17, "hole": 17, "perf": [17, 26, 1902], "neutral": 17, "referenc": [17, 65, 961, 1184, 1416, 1825, 1856, 1877, 1895, 1907], "previous": [17, 19, 52, 57, 58, 61, 62, 63, 65, 216, 689, 783, 784, 1125, 1191, 1796, 1797, 1839, 1840, 1844, 1854, 1878, 1880, 1888, 1899, 1900, 1906, 1907, 1912], "invalid": [17, 45, 50, 1184, 1306, 1416, 1876, 1877, 1895, 1899, 1900], "lifecycl": 17, "translat": [17, 35, 80, 81, 1137, 1877, 1909], "check_fn": 17, "thrown": [17, 35, 40, 57, 64, 608, 869, 871, 1014, 1055, 1147, 1184, 1214, 1223, 1225, 1227, 1230, 1231, 1242, 1416, 1600, 1845, 1899], "_pyinterpreterstate_setevalframefunc": 17, "convert_fram": [17, 23], "convert_frame_assert": 17, "gloss": 17, "proxi": [17, 35, 37, 1902], "one_graph": 17, "_convert_frame_assert": 17, "frametyp": 17, "cache_s": [17, 41], "f_code": 17, "unsupport": [17, 19, 62, 77, 1854, 1858, 1871, 1896, 1907, 1911], "drop": [17, 32, 61, 63, 65, 1003, 1189, 1242, 1247, 1328, 1638, 1798, 1854, 1871, 1890], "needless": 17, "evict": 17, "alongsid": [17, 26, 1184, 1416], "transform_code_object": 17, "output_instruct": 17, "rememb": [17, 1884, 1890], "guardedcod": 17, "symbolic_loc": 17, "f_local": 17, "travers": [17, 57, 827, 1596, 1881, 1882, 1908, 1920, 1921], "ordereddict": [17, 1184, 1416, 1417, 1426, 1444, 1587, 1619, 1855, 1888, 1893, 1918], "k": [17, 23, 32, 35, 37, 41, 53, 65, 280, 348, 498, 505, 507, 509, 581, 608, 751, 937, 1044, 1057, 1113, 1126, 1146, 1205, 1213, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1228, 1229, 1230, 1233, 1235, 1242, 1244, 1246, 1247, 1256, 1274, 1278, 1329, 1331, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1364, 1365, 1368, 1369, 1386, 1387, 1401, 1403, 1404, 1409, 1411, 1422, 1423, 1431, 1433, 1498, 1510, 1511, 1533, 1550, 1565, 1603, 1689, 1691, 1701, 1729, 1779, 1780, 1781, 1782, 1784, 1785, 1786, 1788, 1789, 1798, 1820, 1825, 1853, 1855, 1856, 1875, 1880, 1882, 1894, 1911, 1912, 1914], "variablebuild": 17, "localsourc": 17, "_wrap": 17, "construct": [17, 26, 27, 32, 35, 37, 39, 40, 41, 52, 57, 59, 61, 62, 65, 145, 441, 783, 784, 815, 869, 870, 884, 898, 946, 1044, 1060, 1125, 1146, 1184, 1195, 1199, 1200, 1207, 1214, 1254, 1255, 1270, 1285, 1359, 1360, 1416, 1506, 1587, 1596, 1598, 1599, 1629, 1636, 1650, 1691, 1695, 1742, 1777, 1784, 1785, 1786, 1787, 1788, 1789, 1803, 1816, 1819, 1844, 1852, 1854, 1867, 1880, 1881, 1888, 1890, 1893, 1899, 1902, 1907, 1909, 1914, 1916, 1917, 1918], "variabletrack": 17, "make_guard": 17, "outputgraph": [17, 65], "mention": [17, 23, 35, 57, 1851, 1856, 1857, 1871, 1877, 1880, 1888, 1895, 1911, 1915], "recal": [17, 1333, 1882, 1916], "heart": [17, 32], "pump": 17, "exactli": [17, 26, 33, 35, 41, 54, 899, 900, 938, 970, 974, 1057, 1103, 1104, 1181, 1184, 1225, 1360, 1363, 1416, 1444, 1447, 1507, 1517, 1596, 1643, 1654, 1864, 1870, 1877, 1880, 1881, 1882, 1885, 1886, 1895, 1899, 1900], "cool": 17, "di": [17, 1869], "get_instruct": 17, "124": 17, "opnam": 17, "argval": 17, "starts_lin": 17, "is_jump_target": 17, "littl": [17, 35, 1882, 1909], "hasattr": [17, 65, 1855, 1882, 1902], "inst": 17, "unimpl": 17, "miss": [17, 50, 57, 680, 1113, 1184, 1278, 1288, 1350, 1379, 1380, 1381, 1416, 1532, 1638, 1894, 1895, 1896, 1911], "getattr": [17, 65, 1855, 1882], "inde": [17, 19, 42, 1854, 1864, 1899, 1909], "onto": [17, 22, 35, 57, 65, 1019, 1191, 1194, 1255, 1608, 1851, 1869, 1880, 1883, 1884, 1888, 1901], "dozen": 17, "symbolic_convert": [17, 23], "spoken": 17, "quiet": 17, "closer": [17, 1137, 1465, 1702, 1882, 1888], "mind": [17, 18, 1229, 1247, 1359, 1877, 1883, 1885], "underli": [17, 35, 37, 39, 41, 43, 57, 62, 65, 92, 305, 320, 371, 394, 396, 466, 467, 468, 469, 476, 491, 512, 515, 548, 549, 550, 604, 739, 748, 869, 960, 1154, 1158, 1184, 1255, 1315, 1558, 1719, 1822, 1836, 1854, 1857, 1872, 1880, 1884, 1886, 1900, 1907, 1913, 1915], "replace_guard": 17, "add_guard": 17, "visit": [17, 55, 1895], "act": [17, 37, 41, 43, 50, 62, 849, 1333, 1417, 1418, 1427, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1837, 1880, 1888, 1892, 1898], "behalf": 17, "python_typ": 17, "as_proxi": 17, "as_python_proxi": 17, "bookkeep": 17, "came": 17, "somewher": [17, 1871, 1887], "flesh": 17, "notimplementederror": [17, 41, 1899], "relianc": 17, "fulfil": [17, 1877, 1883, 1899], "build_tupl": 17, "gist": [17, 61, 784, 1885], "old": [17, 35, 42, 65, 845, 1108, 1356, 1648, 1685, 1733, 1850, 1852, 1854, 1877, 1880, 1882, 1894, 1902, 1916], "notion": [17, 32, 899, 1334, 1335, 1336, 1379, 1380, 1381, 1455], "popn": 17, "tuplevari": 17, "pydoc": 17, "tensorvari": 17, "hint": [17, 958, 992, 1185, 1422, 1460, 1461, 1462, 1463, 1854, 1856, 1857, 1880], "instructiontranslatorbas": 17, "pop": [17, 62, 1018, 1417, 1426, 1897, 1900, 1901], "dataclass": [17, 22, 37], "ctor": 17, "guardsourc": 17, "create_fn": 17, "kind": [17, 35, 46, 65, 671, 1203, 1597, 1653, 1700, 1765, 1851, 1861, 1882, 1890, 1895, 1899, 1902, 1912, 1914], "guard_sourc": 17, "elif": [17, 22, 65, 1190, 1382, 1650, 1856, 1857, 1886], "istyp": 17, "guardbuild": 17, "equals_match": 17, "rangevari": 17, "appar": 17, "checkfunctionmanag": 17, "compile_check_fn": 17, "cacheentri": 17, "create_cache_entri": 17, "pyobject": 17, "guarded_cod": 17, "malloc": [17, 57], "sizeof": [17, 1913], "debug_null_check": 17, "pyobject_getattrstr": 17, "null_check": 17, "pycodeobject": 17, "compos": [17, 19, 41, 61, 65, 729, 730, 731, 732, 733, 734, 757, 758, 763, 764, 765, 773, 774, 935, 937, 1115, 1117, 1118, 1119, 1125, 1184, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1330, 1331, 1344, 1345, 1346, 1347, 1348, 1349, 1364, 1365, 1384, 1385, 1404, 1409, 1410, 1411, 1416, 1464, 1469, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1482, 1490, 1491, 1492, 1493, 1494, 1495, 1510, 1511, 1533, 1536, 1537, 1539, 1540, 1541, 1706, 1707, 1844, 1852, 1853, 1854, 1857, 1870, 1882, 1883, 1888, 1895, 1899, 1916], "sort_kei": 17, "guard_nn_modul": 17, "is_nn_modul": 17, "local_build": 17, "global_build": 17, "ref": [17, 23, 1851], "val": [17, 1000, 1190, 1855, 1857, 1875], "___guarded_cod": 17, "___check_type_id": 17, "94367738391392": 17, "___check_tensor": 17, "id": [17, 20, 23, 29, 32, 35, 39, 43, 51, 52, 53, 57, 65, 765, 815, 958, 993, 1455, 1541, 1580, 1596, 1653, 1857, 1887, 1895, 1897, 1899, 1906, 1907, 1908, 1913], "deeper": [17, 21, 1852, 1888, 1899], "dive": [17, 21, 1852, 1881, 1885, 1899], "_eval_fram": 17, "anew": 17, "massiv": 17, "role": [17, 37, 43, 44, 52, 53], "weak": 17, "moduleinvalid": 17, "2x": [18, 1916], "compress": [18, 20, 33, 57, 203, 578, 579, 1079, 1080, 1089, 1090, 1596, 1784, 1785, 1786, 1788, 1789, 1822, 1852], "varieti": [18, 1880, 1908], "announc": [18, 52], "compiled_fn": 18, "set_float32_matmul_precis": [18, 1133], "simpler": [18, 63, 1125, 1844, 1854, 1877, 1882, 1885, 1888], "bench_al": 18, "IF": 18, "accur": [18, 45, 960, 1137, 1259, 1358, 1708, 1823, 1880, 1908], "odd": [18, 41, 1078, 1079, 1080, 1088, 1089, 1090, 1490, 1491, 1492], "quirk": 18, "ask": [18, 35, 61, 62, 1851, 1852, 1883, 1885], "overview": [18, 27, 35, 49, 1596, 1852, 1864, 1869, 1877, 1885, 1888, 1900, 1902, 1907], "nnmodul": 18, "constabl": 19, "edg": [19, 770, 776, 1137, 1145, 1146, 1526, 1584, 1862, 1883, 1908], "workflow": [19, 20, 27, 1851, 1882, 1902, 1903, 1919], "orchestr": 19, "_forward_pre_hook": 19, "forward_hook": [19, 1888], "_backward_pre_hook": 19, "_backward_hook": 19, "categori": [19, 41, 45, 1306, 1857, 1859, 1895, 1898, 1901, 1903, 1914], "_state_dict_hook": 19, "pre": [19, 23, 27, 35, 39, 57, 65, 898, 905, 1184, 1416, 1591, 1593, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1651, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1851, 1854, 1857, 1865, 1877, 1879, 1888, 1895, 1900, 1917], "load_": 19, "alter": [19, 1876, 1882], "backward_hook": [19, 1888], "avoiabl": 19, "fire": [19, 1184, 1416, 1881, 1887], "presenc": [19, 62, 65, 1193, 1311, 1899, 1911], "conv": [19, 65, 693, 694, 695, 696, 697, 698, 699, 700, 701, 783, 784, 787, 805, 845, 851, 1184, 1193, 1199, 1200, 1344, 1345, 1346, 1347, 1348, 1349, 1416, 1417, 1423, 1865, 1875, 1880, 1891, 1895, 1902, 1903, 1904, 1905], "opaqu": [19, 35, 42, 958, 992, 993, 1108], "skip_nnmodule_hook_guard": 19, "react": [19, 43], "pre_backward": 19, "accordingli": [19, 41, 65, 1193, 1386, 1608, 1872, 1907], "warn_onc": 19, "bin": [20, 43, 50, 52, 294, 295, 810, 915, 1144, 1145, 1146, 1855, 1857, 1897, 1916], "hui": 20, "nightli": 20, "gcp": [20, 35], "a100": [20, 23], "night": 20, "40gb": [20, 23], "2ghz": 20, "xeon": [20, 1852, 1879], "suit": [20, 35, 1854, 1856, 1857, 1895, 1903, 1907], "torchbench": 20, "amp": [20, 23, 1003, 1852, 1876], "trend": 20, "droplist": 20, "geometr": [20, 280, 770, 776, 1515, 1526, 1584, 1838, 1852, 1897, 1919], "peak": [20, 37, 39, 57, 1006, 1008, 1014, 1021, 1022, 1023, 1596, 1677, 1683, 1900], "footprint": [20, 33, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1880], "ratio": [20, 41, 43, 608, 1364, 1365, 1510, 1511, 1855], "click": [20, 1919], "with_cudagraph": 20, "kick": [20, 1881, 1907, 1908], "ui": [20, 1885, 1916], "Be": [20, 1895], "wise": [20, 33, 35, 41, 678, 679, 689, 749, 761, 762, 771, 775, 875, 950, 1057, 1062, 1103, 1104, 1127, 1128, 1140, 1149, 1206, 1208, 1265, 1266, 1267, 1268, 1272, 1282, 1285, 1287, 1317, 1338, 1349, 1356, 1358, 1372, 1373, 1374, 1375, 1377, 1402, 1405, 1415, 1424, 1434, 1435, 1436, 1443, 1445, 1446, 1447, 1452, 1454, 1456, 1457, 1489, 1504, 1513, 1514, 1518, 1519, 1520, 1521, 1524, 1528, 1530, 1535, 1545, 1546, 1559, 1560, 1561, 1566, 1567, 1568, 1569, 1573, 1575, 1576, 1577, 1782, 1846, 1879, 1882, 1911, 1912, 1915], "pep": [21, 1854, 1856, 1895], "523": 21, "rewrit": [21, 37, 62, 77, 78, 1865, 1877, 1885, 1895], "customiz": [21, 1858, 1920], "mix": [21, 26, 33, 41, 57, 1003, 1596, 1852, 1877, 1879, 1902, 1911], "usabl": [21, 23, 64, 1857, 1895], "openmp": [21, 1852, 1879, 1894], "dashboard": [21, 1852], "video": [21, 1428, 1429, 1871, 1916], "topic": [21, 24, 1887, 1888], "sit": 22, "replace_add_with_mul": 22, "insert": [22, 32, 35, 41, 57, 64, 65, 738, 783, 784, 852, 853, 1417, 1418, 1426, 1596, 1737, 1740, 1750, 1771, 1795, 1836, 1854, 1865, 1880, 1897, 1902], "insert_relu_after_add": 22, "inserting_aft": [22, 65], "new_relu_nod": 22, "replace_all_uses_with": [22, 65], "roughli": [22, 32, 1382, 1881], "coupl": [22, 61, 1854, 1887, 1908], "axi": [22, 505, 507, 509, 813, 816, 948, 1056, 1071, 1097, 1126, 1149, 1703, 1723, 1728, 1729, 1846, 1853, 1855, 1883, 1895, 1900, 1902], "eg": [22, 928, 1730, 1737], "dead": [22, 65], "frequenc": [22, 53, 915, 956, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1181, 1324, 1359, 1360, 1506, 1507, 1677, 1798], "replaceaddwithmul": 22, "transformed_graph_modul": 22, "graph_modul": [22, 850], "replaceaddwithmulsub": 22, "mul_r": 22, "removedetachpass": 22, "detach_copi": [22, 1855, 1897], "len": [22, 32, 35, 37, 65, 213, 536, 686, 687, 1076, 1080, 1083, 1087, 1090, 1094, 1124, 1188, 1250, 1271, 1283, 1311, 1314, 1353, 1553, 1614, 1616, 1632, 1676, 1683, 1787, 1790, 1796, 1797, 1801, 1838, 1839, 1840, 1854, 1855, 1857, 1882, 1897, 1911, 1916], "args_map": 22, "schema": [22, 29, 35, 37, 1853, 1854, 1855, 1857, 1861, 1895], "enumer": [22, 32, 41, 65, 1184, 1416, 1418, 1427, 1676, 1855, 1856, 1876, 1880, 1894, 1916], "_schema": 22, "kwarg_onli": 22, "scalartotensorpass": 22, "breakpoint": [22, 65, 1857], "try_coerc": 22, "tensortyp": [22, 1857], "pattern": [22, 35, 37, 783, 784, 785, 787, 845, 852, 1000, 1353, 1632, 1780, 1854, 1857, 1877, 1880, 1882, 1884, 1886, 1893, 1903, 1904], "wildcard": [22, 1871, 1899], "subgraph_rewrit": [22, 65], "replace_pattern": 22, "replaced_pattern": 22, "replace_pattern_with_filt": 22, "traced_modul": [22, 65, 1893], "replacedpattern": 22, "nodes_map": [22, 65], "popul": [22, 35, 41, 50, 57, 64, 65, 329, 487, 495, 496, 1284, 1312, 1880], "passmanag": 22, "blob": [22, 783, 1114, 1885, 1887, 1916], "infra": [22, 23, 45, 1896], "pass_manag": 22, "__": [22, 1858], "pm": 22, "replace_add_with_div": 22, "replace_div_with_mul": 22, "run_checks_after_each_pass": 22, "suppress_check_failur": 22, "graph_module_out": 22, "set_check": 22, "check_div_target": 22, "div": [22, 33, 230, 1053, 1102, 1105, 1324, 1428, 1429, 1721, 1830, 1853, 1855, 1861, 1870, 1897, 1911, 1914], "valueerror": [22, 64, 1182, 1608, 1609, 1629, 1632, 1882, 1900, 1918], "add_check": 22, "subgraphmatch": 22, "matcher_util": 22, "match_output": 22, "match_placehold": 22, "remove_overlapping_match": 22, "ignore_liter": 22, "liter": [22, 1652, 1855, 1858, 1871, 1899], "largemodel": 22, "_weight": [22, 736, 737, 1359, 1360], "_bia": 22, "large_model_graph": 22, "patternmodel": 22, "_weight_1": 22, "_bias_1": 22, "pattern_graph": 22, "subgraph_match": 22, "match_result": 22, "internalmatch": 22, "default_factori": 22, "placeholder_nod": 22, "returning_nod": 22, "largest": [22, 57, 581, 915, 1101, 1215, 1236, 1238, 1240, 1241, 1256, 1552, 1604, 1820, 1853, 1855, 1856, 1857, 1923], "invari": [22, 41, 1629, 1777, 1784, 1785, 1786, 1787, 1788, 1789, 1909, 1911], "capabilitybasedpartition": 22, "l34": 22, "operator_support": 22, "operatorsupportbas": 22, "allows_single_node_partit": 22, "non_compute_op": 22, "ex": [22, 44, 1596, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1867], "_oper": 22, "getitem": 22, "allowed_single_node_partition_op": 22, "ll28c1": 22, "l28c1": 22, "is_node_support": 22, "chain": [22, 32, 33, 41, 64, 65, 145, 884, 934, 1239, 1360, 1444, 1673, 1686, 1857, 1877, 1880, 1882, 1885, 1888, 1898], "operatorsuppportbas": 22, "l150": 22, "any_chain": 22, "l164": 22, "addmuloperatorsupport": 22, "capability_partition": 22, "op_support": 22, "partition_list": 22, "propose_partit": 22, "call_modul": [22, 65], "fused_graph_modul": 22, "fuse_partit": 22, "lazo": 23, "meantim": [23, 1332, 1333, 1350, 1352, 1376, 1383, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1487, 1488, 1498, 1527, 1550, 1558], "smallest": [23, 45, 933, 1205, 1215, 1236, 1240, 1256, 1700, 1820, 1918, 1923], "suspect": [23, 29, 1672, 1880], "taken": [23, 35, 41, 57, 64, 65, 856, 1078, 1080, 1103, 1104, 1339, 1352, 1360, 1423, 1499, 1507, 1750, 1782, 1875, 1877, 1879, 1880, 1882, 1884, 1887, 1893, 1895, 1899, 1901], "begin": [23, 29, 32, 33, 35, 36, 44, 52, 57, 65, 488, 751, 775, 811, 812, 856, 913, 951, 958, 1006, 1008, 1077, 1137, 1143, 1204, 1239, 1251, 1331, 1332, 1333, 1350, 1352, 1358, 1368, 1369, 1372, 1373, 1374, 1375, 1376, 1377, 1383, 1386, 1387, 1402, 1407, 1410, 1411, 1423, 1424, 1431, 1434, 1447, 1453, 1458, 1465, 1498, 1519, 1520, 1596, 1603, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1675, 1677, 1683, 1750, 1753, 1756, 1798, 1823, 1834, 1847, 1857, 1876, 1877, 1880, 1882, 1885, 1887, 1892, 1895, 1898, 1905, 1912], "whose": [23, 35, 41, 57, 65, 535, 850, 886, 934, 951, 1045, 1057, 1062, 1110, 1128, 1137, 1140, 1146, 1184, 1200, 1208, 1254, 1270, 1272, 1317, 1416, 1596, 1644, 1695, 1753, 1819, 1857, 1877, 1882, 1885, 1899, 1911, 1916, 1918], "insuffici": [23, 1004], "proce": [23, 1876, 1880, 1907], "sampl": [23, 32, 37, 41, 58, 63, 65, 83, 148, 149, 371, 447, 474, 599, 770, 914, 956, 969, 1003, 1016, 1020, 1034, 1035, 1075, 1093, 1115, 1125, 1137, 1181, 1200, 1273, 1306, 1328, 1332, 1333, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1370, 1376, 1379, 1380, 1381, 1382, 1383, 1401, 1403, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1434, 1447, 1448, 1455, 1464, 1480, 1487, 1488, 1498, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1512, 1515, 1517, 1525, 1526, 1527, 1550, 1558, 1596, 1604, 1644, 1676, 1691, 1694, 1708, 1710, 1712, 1714, 1716, 1780, 1796, 1797, 1798, 1839, 1840, 1844, 1852, 1867, 1875, 1876, 1880, 1887, 1888, 1899, 1902, 1903, 1916], "test_assertion_error": 23, "compiled_test_assertion_error": 23, "mlazo": 23, "837": 23, "build_map": 23, "portion": [23, 57, 1106, 1353, 1447, 1555, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1903], "fortun": [23, 1884], "isol": [23, 65, 1587, 1869, 1900], "test_backend_error": 23, "_foobar": [23, 1897], "dummi": [23, 32, 39, 1877, 1882, 1922], "compiled_test_backend_error": 23, "246": [23, 608], "185": [23, 608], "decomp_fn": 23, "810": 23, "repro_aft": 23, "nearli": [23, 145, 884, 898, 1691, 1890, 1907], "minifier_launch": 23, "base_dir": 23, "successfulli": [23, 35, 43, 49, 67, 68, 69, 1190, 1746, 1869, 1888, 1893, 1907], "runnabl": [23, 65, 1876, 1895, 1916], "rand_strid": 23, "proxy_tensor": [23, 1114], "make_fx": [23, 1114], "0a0": 23, "gitfddfc44": 23, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 23, "nvcc": [23, 26, 988], "2005": [23, 674, 1840], "2022": 23, "thu_feb_10_18": 23, "23": [23, 35, 505, 1256, 1761, 1854, 1911], "41_pst_2022": 23, "v11": 23, "112": [23, 608], "cuda_11": 23, "r11": 23, "30978841_0": 23, "sxm4": 23, "float32": [23, 32, 33, 261, 571, 608, 810, 811, 812, 813, 816, 817, 871, 946, 1071, 1072, 1109, 1131, 1133, 1166, 1320, 1333, 1468, 1469, 1470, 1482, 1658, 1659, 1695, 1700, 1708, 1712, 1727, 1742, 1743, 1745, 1787, 1842, 1872, 1876, 1880, 1891, 1895, 1904, 1912, 1913, 1914, 1917, 1918, 1923], "compile_fx": 23, "compile_fx_inn": 23, "walk": [23, 27, 65, 1861, 1882, 1899, 1908, 1909, 1915], "toi": [23, 49], "toy_compil": 23, "debug_util": 23, "run_fwd_maybe_bwd": 23, "opt_mod": 23, "sh": [23, 759, 760, 764, 765, 1483, 1484, 1491, 1492, 1494, 1495, 1540, 1541], "st": [23, 1484, 1492, 1495, 1541], "dt": [23, 1492, 1495, 1912], "requires_grad_": [23, 329, 441, 1184, 1339, 1416, 1499, 1779, 1816, 1855, 1870, 1877, 1917], "rg": 23, "autocast": [23, 1003, 1422, 1852, 1880], "test_model": 23, "layernorm": [23, 1371, 1379, 1380, 1381, 1459, 1463, 1529, 1872, 1904], "overridden": [23, 26, 65, 880, 881, 882, 1000, 1416, 1777, 1857, 1877, 1882, 1891, 1900, 1922], "debug_dir_root": 23, "torch_compile_debug_dir": 23, "timestamp": [23, 45, 46, 49, 53, 1867, 1901, 1916], "cd": [23, 1894, 1899, 1901], "l": [23, 41, 726, 751, 913, 922, 928, 935, 936, 1057, 1141, 1142, 1184, 1203, 1213, 1214, 1219, 1220, 1221, 1222, 1226, 1230, 1231, 1273, 1275, 1329, 1332, 1333, 1334, 1344, 1352, 1355, 1356, 1363, 1368, 1376, 1377, 1379, 1382, 1383, 1386, 1398, 1407, 1409, 1416, 1418, 1422, 1423, 1431, 1447, 1464, 1465, 1467, 1565, 1614, 1623, 1631, 1633, 1661, 1737, 1798, 1855, 1857, 1877, 1916], "run_2023_03_01_08_20_52_143510": 23, "pid_180167": 23, "subfold": [23, 26], "artifact": [23, 671, 1863, 1887, 1899], "model__0_forward_1": 23, "aot_model___0_debug": 23, "fx_graph_read": 23, "fx_graph_runn": 23, "fx_graph_transform": 23, "ir_post_fus": 23, "txt": [23, 1191, 1194, 1899], "ir_pre_fus": 23, "fx_graph": 23, "buf1": 23, "schedulernod": 23, "computedbuff": 23, "memorydep": 23, "s0": 23, "unmet_depend": 23, "buf0": 23, "c0": [23, 725, 753, 1386], "met_depend": 23, "primals_2": 23, "buf1_loop_bodi": 23, "var_rang": 23, "z0": 23, "index0": 23, "index1": 23, "bodi": [23, 65, 1195, 1854, 1856, 1857, 1858], "get_index": 23, "get_index_1": 23, "load_1": 23, "get_index_2": 23, "compiled_fun": 23, "hinder": 23, "sublist": [23, 1057], "succe": [23, 35, 40, 52, 62, 1880, 1882, 1894], "compiled_toi": 23, "exhibit": [23, 1653, 1895], "outweigh": [23, 1672], "readm": [23, 47, 48, 783, 1872], "verify_instal": 23, "log_fil": 23, "bj": 24, "j": [24, 35, 41, 307, 309, 315, 505, 507, 509, 683, 886, 892, 894, 946, 1057, 1073, 1074, 1081, 1087, 1091, 1092, 1126, 1181, 1184, 1219, 1220, 1231, 1247, 1256, 1263, 1271, 1273, 1278, 1355, 1356, 1357, 1361, 1416, 1419, 1501, 1502, 1503, 1508, 1695, 1702, 1781, 1798, 1802, 1841, 1856, 1875, 1877, 1882, 1885, 1893, 1916], "imaginari": [24, 305, 899, 946, 952, 1078, 1080, 1088, 1089, 1090, 1154, 1174, 1176, 1177, 1180, 1798, 1842, 1843, 1858, 1877, 1885, 1918], "satisfi": [24, 30, 33, 41, 608, 685, 751, 785, 893, 899, 900, 928, 1073, 1074, 1076, 1078, 1080, 1088, 1089, 1090, 1105, 1197, 1223, 1249, 1250, 1324, 1339, 1363, 1368, 1386, 1431, 1619, 1636, 1721, 1737, 1777, 1798, 1857, 1877, 1880, 1885, 1898, 1900, 1911, 1914], "equat": [24, 937, 1057, 1129, 1141, 1227, 1228, 1229, 1230, 1231, 1233, 1244, 1246, 1332, 1763, 1825, 1855, 1877, 1885, 1898, 1912], "mathemat": [24, 40, 65, 892, 893, 894, 895, 896, 897, 1105, 1137, 1332, 1334, 1335, 1336, 1379, 1380, 1381, 1382, 1455, 1534, 1572, 1596, 1643, 1721, 1779, 1780, 1857, 1877, 1891, 1912, 1919], "tradition": 24, "torchaudio": [24, 1852], "mimick": 24, "assembli": 24, "lapack": [24, 936, 1129, 1214, 1225, 1226, 1227, 1229, 1232, 1245, 1701, 1802], "cubla": [24, 975, 1837, 1892], "spectral": [24, 1203, 1219, 1247, 1604, 1627, 1637, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1891], "fft": [24, 1852, 1880], "4621": 24, "0303j": 24, "2438": [24, 1229, 1506], "5874j": 24, "7706": 24, "1421j": 24, "2110": 24, "1918j": 24, "complex128": [24, 170, 946, 1100, 1109, 1163, 1184, 1213, 1214, 1219, 1220, 1221, 1222, 1223, 1224, 1344, 1345, 1346, 1416, 1490, 1491, 1492, 1652, 1695, 1742, 1913, 1914, 1917, 1918], "complex64": [24, 173, 946, 1074, 1076, 1077, 1082, 1083, 1109, 1163, 1215, 1238, 1241, 1344, 1345, 1346, 1490, 1491, 1492, 1652, 1695, 1742, 1913, 1914, 1917, 1918], "apart": [24, 1857, 1877], "linspac": [24, 915, 939, 1078, 1088, 1285, 1855, 1859, 1897], "logspac": [24, 1855, 1859, 1897], "switch": [24, 32, 60, 64, 65, 1226, 1227, 1228, 1356, 1515, 1553, 1600, 1733, 1837, 1869, 1877, 1880, 1888, 1898], "view_as_r": [24, 1798, 1855, 1897, 1915], "6125": 24, "1681": 24, "3773": 24, "3487": 24, "0861": 24, "7981": 24, "1681j": 24, "3487j": 24, "7981j": 24, "mul_": [24, 1855, 1870, 1872, 1911], "2250": [24, 1240, 1643], "7546": [24, 937], "1722": 24, "x1": [24, 932, 1231, 1351, 1408, 1464, 1465, 1497, 1554, 1855], "3j": [24, 35, 689, 949, 950, 1725, 1726, 1742], "4j": [24, 35, 1753], "0000": [24, 41, 505, 856, 892, 894, 915, 935, 939, 952, 1038, 1044, 1045, 1046, 1071, 1072, 1075, 1077, 1078, 1084, 1085, 1088, 1093, 1105, 1106, 1107, 1137, 1143, 1146, 1150, 1209, 1212, 1213, 1214, 1226, 1227, 1230, 1235, 1236, 1240, 1242, 1254, 1270, 1311, 1359, 1360, 1468, 1469, 1471, 1472, 1506, 1507, 1643, 1695, 1701, 1706, 1707, 1708, 1717, 1721, 1722, 1746, 1753, 1755, 1756, 1758, 1761, 1762, 1763, 1764, 1780, 1825, 1826, 1828, 1847, 1864, 1872, 1880, 1911, 1912, 1917], "6569": [24, 1150], "5708": [24, 1041], "7854": 24, "complex_tensor": 24, "conjug": [24, 324, 451, 683, 899, 937, 949, 950, 1164, 1213, 1214, 1220, 1223, 1226, 1233, 1247, 1252, 1256, 1603, 1689, 1725, 1798, 1802, 1841, 1885, 1898, 1917], "wirting": [24, 899, 1885], "deriv": [24, 35, 57, 145, 729, 730, 731, 732, 733, 734, 772, 791, 815, 884, 898, 899, 900, 1120, 1124, 1137, 1181, 1241, 1273, 1587, 1852, 1856, 1882, 1883, 1885, 1907, 1911, 1912], "steepest": [24, 1877], "descent": [24, 41, 1655, 1671, 1675, 1676, 1877, 1888], "quantiz": [24, 65, 214, 320, 332, 465, 466, 467, 468, 469, 471, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 908, 1042, 1071, 1072, 1703, 1704, 1705, 1706, 1707, 1852, 1897, 1914, 1917, 1918, 1920, 1921], "parallel_info": [25, 1852, 1879], "cppextens": [26, 1852], "setuptool": 26, "bare": 26, "buildextens": [26, 1852], "ext_modul": 26, "extra_compile_arg": [26, 1894], "cmdclass": 26, "build_ext": 26, "cudaextens": [26, 1852], "cuda_extens": 26, "extension_kernel": 26, "cu": 26, "cxx": 26, "o2": 26, "arch": 26, "card": [26, 1894], "visibl": [26, 35, 37, 49, 982, 1027, 1417, 1418, 1426, 1427], "ptx": 26, "road": 26, "cc": [26, 35, 1880], "newest": [26, 61], "torch_cuda_arch_list": 26, "build_my_extens": 26, "older": [26, 1880, 1893, 1899], "modestli": [26, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672], "pars": [26, 35, 55, 906, 1857, 1899, 1907], "window": [26, 32, 35, 65, 345, 547, 913, 922, 1141, 1142, 1181, 1203, 1329, 1330, 1331, 1364, 1365, 1384, 1385, 1409, 1410, 1411, 1412, 1413, 1414, 1482, 1510, 1511, 1539, 1540, 1541, 1706, 1707, 1798, 1852, 1855, 1867, 1880], "workaround": [26, 32, 65, 1188, 1851, 1892, 1895, 1902], "pure": [26, 27, 62, 1187, 1854], "sigmoidalphablendforwardcuda": 26, "69460": 26, "facebookresearch": 26, "pytorch3d": 26, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 26, "relocat": 26, "link": [26, 27, 41, 65, 77, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1409, 1410, 1411, 1467, 1517, 1871, 1887, 1888, 1911], "rdc": 26, "dc": 26, "anymor": [26, 35, 57, 216], "dlto": 26, "dlink": 26, "protent": 26, "lib": [26, 1894], "nvshmem": 26, "ninja": [26, 1894], "dlink_librari": 26, "dlink_lib": 26, "std": [26, 43, 50, 83, 371, 447, 1071, 1072, 1103, 1104, 1105, 1644, 1695, 1721, 1760, 1765, 1797, 1835, 1853, 1855, 1870, 1875, 1880, 1887, 1894, 1897], "use_ninja": 26, "greatli": [26, 65, 1880], "distutil": 26, "max_job": 26, "extra_cflag": 26, "extra_cuda_cflag": 26, "extra_ldflag": 26, "extra_include_path": 26, "build_directori": 26, "with_cuda": [26, 1894], "is_python_modul": 26, "is_standalon": 26, "keep_intermedi": 26, "torch_extens": 26, "torch_extensions_dir": 26, "o3": 26, "cuh": 26, "Such": [26, 32, 33, 64, 1838, 1911], "lib64": 26, "cudart": [26, 1894], "cuda_hom": 26, "safest": 26, "pybind11": [26, 27, 1856], "union": [26, 32, 37, 40, 43, 46, 50, 53, 57, 65, 1195, 1255, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1330, 1331, 1364, 1365, 1384, 1385, 1409, 1410, 1411, 1416, 1459, 1461, 1463, 1466, 1608, 1650, 1652, 1733, 1855, 1856, 1857, 1895, 1899, 1913, 1918, 1921], "linker": 26, "workspac": 26, "header": [26, 50, 1894, 1918], "plain": [26, 1333, 1417, 1426, 1603, 1786, 1882, 1911], "standalon": [26, 51, 52, 53, 808, 1195, 1199, 1854], "torch_lib_path": 26, "load_inlin": [26, 1852], "cpp_sourc": 26, "cuda_sourc": 26, "with_pytorch_error_handl": 26, "behav": [26, 27, 35, 64, 65, 307, 315, 485, 507, 509, 832, 1124, 1199, 1412, 1413, 1414, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1856, 1857, 1864, 1877, 1883, 1888, 1892, 1899, 1907, 1911], "inlin": [26, 64, 1000, 1184, 1188, 1199, 1879], "concaten": [26, 32, 35, 40, 894, 931, 942, 972, 1056, 1149, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1360, 1386, 1499, 1507, 1600, 1608, 1795, 1846, 1855, 1858, 1895, 1897, 1911], "furthermor": [26, 50, 61, 1219, 1220, 1247, 1273, 1354, 1870, 1871, 1877, 1892, 1905, 1907], "cuda_runtim": 26, "se": 26, "macro": [26, 1886], "pybind": 26, "_safe_foo": 26, "redirect": [26, 43, 50, 1919], "obscur": 26, "sin_add": 26, "inline_extens": 26, "include_path": [26, 1852], "get_compiler_abi_compatibility_and_vers": [26, 1852], "abi": [26, 27], "shell": 26, "torchvers": 26, "verify_ninja_avail": [26, 1852], "is_ninja_avail": [26, 1852], "embed": [27, 65, 726, 737, 886, 1048, 1324, 1350, 1360, 1376, 1388, 1422, 1465, 1507, 1565, 1672, 1740, 1855, 1879, 1897, 1902, 1904, 1907, 1911, 1916], "preprocess": [27, 488, 1184], "augment": [27, 1858, 1918], "interfac": [27, 33, 37, 42, 44, 49, 52, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 736, 737, 747, 752, 753, 754, 755, 756, 785, 1110, 1587, 1744, 1798, 1837, 1853, 1857, 1867, 1868, 1882, 1887, 1898, 1905, 1911, 1916], "opencv": [27, 1515, 1526], "struct": [27, 1124, 1125, 1844, 1865, 1887], "classat_1_1_tensor": 27, "tensor_index": 27, "cpp_autograd": 27, "undesir": [27, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1565, 1882], "cpp_frontend": 27, "library_root": 27, "libtorch": 27, "linux": [27, 35, 1851], "gcc": 27, "cxx11": 27, "race": [29, 1877], "enable_cuda_sanit": 29, "torch_cuda_sanit": 29, "concurr": [29, 35, 39, 1879, 1880, 1907, 1908], "uniniti": [29, 438, 491, 1058, 1059, 1587, 1598, 1599, 1636, 1872, 1897], "overwrit": [29, 32, 35, 65, 1417, 1426, 1857, 1877], "commandlin": 29, "example_error": 29, "csan": 29, "pointer": [29, 134, 975, 1432, 1880, 1881, 1887, 1907, 1909], "139719969079296": 29, "94646435460352": 29, "_sanit": 29, "364": 29, "_handle_kernel_launch": 29, "stack_trac": [29, 65], "stacksummari": 29, "420": 29, "_handle_memory_alloc": 29, "incorrectli": [29, 57, 961, 1102], "faulti": [29, 35], "current_stream": [29, 960, 1852, 1880], "wait_stream": [29, 35, 961, 963, 1880], "default_stream": [29, 35, 1852], "cudnn": [30, 31, 751, 1193, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1368, 1386, 1431, 1432, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1565, 1745, 1852, 1855, 1880, 1891, 1892], "float16": [30, 33, 37, 57, 291, 677, 680, 751, 814, 817, 825, 841, 842, 849, 912, 924, 1109, 1166, 1184, 1278, 1288, 1344, 1345, 1346, 1347, 1348, 1349, 1368, 1369, 1386, 1387, 1403, 1416, 1431, 1565, 1658, 1659, 1730, 1876, 1888, 1902, 1904, 1913, 1914, 1917, 1918, 1923], "v100": [30, 751, 1368, 1386, 1431, 1880], "packedsequ": [30, 751, 1368, 1386, 1431, 1630, 1631, 1632, 1634], "rnn": [31, 725, 751, 752, 753, 754, 756, 849, 1368, 1369, 1386, 1387, 1433, 1597, 1606, 1629, 1859, 1884, 1888, 1904, 1916], "enforc": [31, 33, 64, 786, 881, 1184, 1386, 1416, 1431, 1857, 1888, 1915], "cuda_launch_block": [31, 1386, 1431, 1880], "colon": [31, 1386, 1431, 1907], "cublas_workspace_config": [31, 1386, 1431, 1837, 1880, 1892], "4096": [31, 1386, 1431, 1837, 1880, 1895], "dataload": [32, 488, 1596, 1676, 1677, 1683, 1880, 1884, 1894, 1898, 1916], "batch_siz": [32, 41, 61, 63, 883, 1115, 1123, 1125, 1422, 1629, 1631, 1632, 1634, 1844, 1855, 1883, 1884, 1892, 1895, 1916], "shuffl": [32, 1852, 1916], "batch_sampl": 32, "num_work": [32, 43, 1892, 1894], "drop_last": 32, "timeout": [32, 35, 52, 1869, 1907], "worker_init_fn": [32, 1884, 1892], "prefetch_factor": 32, "persistent_work": 32, "__getitem__": [32, 1837], "__len__": [32, 65, 1855], "protocol": [32, 37, 42, 52, 54, 871, 1108, 1110, 1651, 1733, 1882, 1894, 1895, 1907, 1922], "possibli": [32, 52, 57, 1184, 1199, 1226, 1231, 1416, 1596, 1854, 1861, 1892, 1899], "idx": [32, 65, 889, 1184, 1324, 1359, 1416, 1604, 1855, 1871], "th": [32, 149, 307, 309, 315, 751, 892, 894, 914, 934, 1044, 1049, 1158, 1181, 1205, 1223, 1231, 1237, 1273, 1306, 1355, 1356, 1357, 1361, 1368, 1376, 1386, 1431, 1501, 1502, 1503, 1508, 1702, 1798, 1882, 1894, 1912, 1914], "iterabledataset": [32, 1887], "__iter__": [32, 1858], "suitabl": [32, 41, 928, 1203, 1672, 1737, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1891, 1901, 1903, 1916], "improb": 32, "fetch": [32, 64, 65, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1652, 1907], "databas": 32, "remot": [32, 35, 39, 43, 1596, 1900, 1907, 1908], "replica": [32, 33, 35, 39, 50, 1353, 1596, 1881], "duplic": [32, 309, 313, 464, 535, 913, 922, 943, 1141, 1142, 1184, 1416, 1834, 1835, 1911], "yield": [32, 33, 57, 65, 1045, 1047, 1184, 1230, 1231, 1416, 1847, 1857, 1858, 1864, 1900, 1902, 1912], "stochast": [32, 41, 1364, 1365, 1510, 1511, 1655, 1657, 1658, 1660, 1671, 1675, 1676, 1888, 1898], "decent": 32, "randomli": [32, 736, 737, 747, 755, 900, 1328, 1354, 1355, 1356, 1357, 1361, 1434, 1500, 1501, 1502, 1503, 1508, 1616, 1872, 1887, 1888], "permut": [32, 1057, 1230, 1231, 1250, 1273, 1275, 1716, 1852, 1853, 1855, 1871, 1897, 1904, 1915, 1917], "mini": [32, 770, 776, 1334, 1335, 1336, 1359, 1360, 1371, 1376, 1379, 1380, 1381, 1388, 1408, 1419, 1421, 1455, 1464, 1506, 1507, 1526, 1584, 1900], "neither": [32, 35, 786, 887, 890, 1040, 1100, 1422, 1463, 1643, 1823, 1882, 1891, 1907], "nor": [32, 35, 43, 57, 786, 890, 1219, 1220, 1247, 1422, 1463, 1596, 1643, 1700, 1802, 1882, 1895], "collat": 32, "minibatch": [32, 759, 760, 763, 764, 765, 1273, 1324, 1332, 1333, 1350, 1352, 1376, 1382, 1383, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1468, 1482, 1483, 1484, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1527, 1539, 1540, 1541, 1550, 1558, 1900], "loader": [32, 1898], "essenti": [32, 35, 40, 43, 65, 1273, 1871, 1880, 1894, 1911], "infinit": [32, 1176, 1256, 1332, 1339, 1499, 1695, 1882, 1891, 1907], "dataset_it": 32, "cheaper": [32, 64], "bulk": 32, "arrai": [32, 43, 441, 751, 811, 812, 870, 871, 915, 933, 952, 956, 1057, 1101, 1109, 1110, 1118, 1119, 1255, 1285, 1363, 1368, 1369, 1386, 1387, 1509, 1723, 1730, 1750, 1784, 1785, 1786, 1788, 1789, 1816, 1823, 1831, 1838, 1854, 1858, 1880, 1888, 1911, 1913, 1917, 1918], "untouch": 32, "slightli": [32, 35, 41, 57, 1643, 1691, 1803, 1851, 1880, 1885, 1891, 1899], "default_col": 32, "channel": [32, 60, 465, 466, 467, 770, 776, 799, 813, 816, 824, 836, 844, 1071, 1334, 1335, 1336, 1340, 1344, 1345, 1346, 1347, 1348, 1349, 1354, 1355, 1356, 1357, 1361, 1363, 1371, 1379, 1380, 1381, 1388, 1392, 1393, 1394, 1395, 1396, 1397, 1404, 1424, 1450, 1455, 1467, 1468, 1469, 1470, 1485, 1501, 1502, 1503, 1508, 1525, 1526, 1533, 1559, 1584, 1614, 1615, 1616, 1623, 1624, 1640, 1703, 1871, 1873, 1875, 1877, 1902, 1903, 1905, 1916], "class_index": 32, "namedtupl": [32, 65, 887, 1036, 1037, 1129, 1184, 1195, 1205, 1225, 1275, 1281, 1284, 1286, 1289, 1312, 1324, 1416, 1691, 1701, 1775, 1802, 1820, 1825, 1854, 1856, 1857, 1902], "gil": [32, 35, 39, 1877, 1880, 1907], "integ": [32, 35, 41, 52, 283, 438, 440, 442, 536, 551, 557, 676, 677, 678, 679, 680, 681, 757, 758, 776, 778, 856, 883, 912, 913, 922, 933, 951, 961, 963, 979, 985, 986, 1014, 1052, 1055, 1057, 1058, 1100, 1101, 1102, 1103, 1104, 1105, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1127, 1141, 1142, 1145, 1146, 1147, 1194, 1197, 1206, 1207, 1214, 1225, 1227, 1237, 1256, 1305, 1324, 1339, 1344, 1345, 1346, 1388, 1474, 1475, 1476, 1477, 1478, 1479, 1586, 1629, 1644, 1647, 1679, 1682, 1686, 1691, 1703, 1704, 1710, 1712, 1713, 1714, 1716, 1721, 1730, 1742, 1790, 1799, 1803, 1817, 1818, 1831, 1845, 1849, 1856, 1857, 1858, 1870, 1883, 1885, 1900, 1903, 1905, 1911, 1912, 1914, 1917, 1918, 1923], "descriptor": [32, 1464, 1465, 1858, 1895], "parent": [32, 45, 50, 54, 57, 671, 779, 780, 808, 1416, 1869, 1894, 1899, 1909, 1916], "refcount": [32, 1869, 1890], "panda": 32, "pyarrow": 32, "13246": 32, "get_worker_info": [32, 1907], "seed": [32, 83, 995, 1004, 1005, 1025, 1160, 1276, 1296, 1691, 1708, 1803, 1852, 1855, 1884, 1892, 1906], "shut": [32, 1907], "garbag": [32, 1909], "subtleti": [32, 1353, 1882, 1884], "multiprocess": [32, 35, 36, 38, 43, 45, 53, 54, 1353, 1596, 1852, 1871, 1881, 1908], "unix": [32, 50, 959, 1869], "fork": [32, 50, 1202, 1596, 1857, 1879, 1880, 1884, 1887, 1890, 1894, 1906, 1907, 1909], "child": [32, 43, 45, 57, 782, 1184, 1416, 1615, 1869, 1888, 1894, 1909], "address": [32, 35, 52, 55, 62, 211, 899, 900, 966, 1864, 1869, 1880, 1907, 1908], "maco": [32, 35, 1869, 1889], "spawn": [32, 33, 36, 43, 44, 50, 54, 1187, 1596, 1852, 1876, 1881, 1890, 1894, 1908], "__main__": [32, 33, 35, 44, 45, 53, 1878, 1881, 1890, 1894, 1908], "base_se": 32, "worker_id": [32, 54, 1892], "therebi": [32, 41, 1898, 1902], "mandatorili": 32, "faq": [32, 1353, 1632, 1852], "initial_se": [32, 83, 1852, 1892, 1906], "host": [32, 35, 43, 45, 51, 52, 53, 54, 191, 204, 571, 594, 868, 1184, 1416, 1596, 1608, 1642, 1880, 1900, 1907, 1908, 1913], "recogn": [32, 1857, 1907, 1911], "simplecustombatch": 32, "transposed_data": 32, "zip": [32, 37, 1851, 1855, 1856, 1866, 1880, 1887, 1911], "tgt": [32, 1459, 1460, 1461], "collate_wrapp": 32, "tensordataset": 32, "batch_ndx": 32, "is_pin": [32, 1629, 1855, 1870, 1897, 1913], "multiprocessing_context": 32, "pin_memory_devic": 32, "reshuffl": 32, "draw": [32, 149, 914, 1020, 1306, 1708, 1916], "mutual": [32, 35, 43, 726, 1918], "subprocess": [32, 35, 50, 52, 54, 1884, 1890], "incomplet": [32, 892, 1859, 1912], "divis": [32, 574, 608, 678, 763, 764, 765, 938, 1052, 1102, 1105, 1194, 1227, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1371, 1383, 1407, 1425, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1551, 1721, 1790, 1817, 1857, 1876, 1880], "basecontext": 32, "randomsampl": 32, "prefetch": [32, 57], "unpickl": [32, 35, 1255, 1899], "proper": [32, 43, 64, 65, 1048, 1740, 1856, 1877, 1880, 1882, 1894], "guess": 32, "trust": [32, 35, 1255, 1851, 1899], "inaccur": [32, 33], "kwd": 32, "__getitems__": 32, "myiterabledataset": 32, "worker_info": 32, "iter_start": 32, "iter_end": 32, "per_work": 32, "ceil": [32, 172, 624, 625, 759, 760, 1329, 1330, 1331, 1384, 1385, 1409, 1410, 1411, 1482, 1483, 1484, 1539, 1540, 1541, 1706, 1707, 1730, 1853, 1855, 1870, 1880, 1897, 1911], "mult": 32, "overall_start": 32, "overall_end": 32, "concatdataset": 32, "assembl": 32, "chaindataset": 32, "fly": [32, 1000, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1877], "_util": 32, "collate_fn_map": 32, "default_collate_fn_map": 32, "collate_tensor_fn": 32, "custom_col": 32, "collate_map": 32, "outer": [32, 682, 892, 1057, 1115, 1119, 1124, 1130, 1855, 1857, 1897], "unchang": [32, 491, 505, 507, 726, 805, 1096, 1184, 1416, 1459, 1722, 1793, 1876, 1891, 1902], "byte": [32, 35, 41, 52, 236, 428, 549, 871, 965, 1006, 1008, 1010, 1012, 1110, 1183, 1255, 1292, 1293, 1652, 1661, 1733, 1856, 1857, 1858, 1870, 1899, 1911, 1913], "v_i": [32, 1223], "v_1": 32, "v_2": 32, "v1_i": 32, "v2_i": 32, "v1_1": 32, "v1_2": 32, "v2_1": 32, "v2_2": 32, "elem": [32, 1855], "customtyp": 32, "collate_customtype_fn": 32, "custotyp": 32, "default_convert": 32, "np": [32, 932, 1052, 1057, 1097, 1098, 1099, 1555, 1695, 1883, 1892, 1895, 1916, 1917, 1918], "workerinfo": [32, 1907], "random_split": 32, "floor": [32, 265, 638, 639, 759, 760, 1052, 1102, 1194, 1329, 1330, 1331, 1384, 1385, 1409, 1410, 1411, 1482, 1483, 1484, 1539, 1540, 1541, 1706, 1707, 1721, 1730, 1798, 1853, 1855, 1857, 1870, 1893, 1897, 1911], "frac": [32, 41, 273, 371, 640, 641, 678, 751, 763, 764, 765, 856, 913, 922, 952, 956, 1052, 1102, 1137, 1141, 1142, 1203, 1215, 1219, 1220, 1223, 1235, 1247, 1254, 1270, 1324, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1354, 1363, 1368, 1369, 1370, 1371, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1401, 1403, 1404, 1405, 1406, 1409, 1410, 1411, 1419, 1420, 1421, 1423, 1431, 1433, 1434, 1446, 1448, 1449, 1451, 1452, 1454, 1455, 1456, 1467, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1535, 1551, 1553, 1555, 1565, 1567, 1571, 1573, 1575, 1576, 1656, 1657, 1660, 1662, 1668, 1675, 1676, 1705, 1717, 1720, 1732, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1781, 1796, 1797, 1798, 1802, 1823, 1839, 1840, 1855, 1870, 1875, 1877, 1885, 1897, 1912], "robin": [32, 35], "generator1": 32, "manual_se": [32, 62, 83, 1852, 1855, 1870, 1888, 1892, 1895, 1897, 1906], "generator2": 32, "data_sourc": 32, "accedingsequencelengthsampl": 32, "argsort": [32, 1813, 1855, 1883, 1897], "tolist": [32, 346, 1857, 1897, 1913], "accedingsequencelengthbatchsampl": 32, "sequentialsampl": 32, "num_sampl": [32, 414, 1306, 1855], "drawn": [32, 168, 252, 280, 1306, 1644, 1708, 1712, 1713, 1875, 1918, 1919], "subsetrandomsampl": 32, "weightedrandomsampl": 32, "row": [32, 33, 40, 41, 203, 307, 309, 315, 576, 579, 684, 690, 868, 892, 894, 932, 952, 956, 1040, 1070, 1098, 1099, 1119, 1125, 1146, 1205, 1231, 1239, 1242, 1247, 1271, 1273, 1281, 1283, 1284, 1286, 1289, 1306, 1312, 1313, 1314, 1506, 1507, 1555, 1603, 1642, 1699, 1702, 1722, 1782, 1783, 1784, 1785, 1786, 1788, 1789, 1801, 1820, 1823, 1827, 1829, 1838, 1844, 1846, 1855, 1885, 1911, 1916], "05": [32, 39, 65, 108, 338, 685, 703, 704, 705, 706, 707, 708, 714, 715, 727, 728, 740, 742, 743, 744, 745, 899, 900, 936, 1071, 1173, 1199, 1200, 1270, 1334, 1335, 1336, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1455, 1459, 1461, 1463, 1485, 1516, 1525, 1529, 1596, 1674, 1680, 1681, 1687, 1759, 1760, 1765, 1854, 1855, 1898, 1908, 1918], "batchsampl": 32, "distributedsampl": [32, 1596], "num_replica": 32, "world_siz": [32, 33, 35, 36, 39, 43, 52, 53, 55, 57, 1596, 1881, 1900, 1907, 1908], "evenli": [32, 574, 575, 576, 686, 687, 1055, 1147, 1254, 1270, 1845], "set_epoch": 32, "is_distribut": [32, 1855, 1897], "start_epoch": 32, "n_epoch": 32, "vanilla": [33, 1864], "allreduc": [33, 35, 1596, 1880, 1881, 1897], "register_comm_hook": [33, 39, 57, 1596], "mainli": [33, 41, 818, 1339, 1499, 1920], "gradbucket": [33, 1596], "flatten": [33, 57, 65, 865, 866, 1046, 1146, 1240, 1253, 1467, 1643, 1650, 1654, 1702, 1718, 1723, 1728, 1833, 1834, 1835, 1855, 1870, 1871, 1875, 1895, 1897, 1904, 1915], "decompos": [33, 65, 1107, 1114, 1228, 1853, 1877, 1895], "get_per_parameter_tensor": 33, "_distributed_c10d": [33, 35], "1d": [33, 40, 41, 57, 693, 696, 729, 732, 763, 773, 943, 952, 956, 1040, 1054, 1145, 1146, 1161, 1181, 1239, 1240, 1285, 1313, 1321, 1325, 1329, 1339, 1344, 1347, 1352, 1355, 1356, 1360, 1384, 1408, 1409, 1421, 1423, 1468, 1474, 1477, 1480, 1482, 1490, 1493, 1501, 1507, 1536, 1539, 1702, 1703, 1706, 1798, 1823, 1841], "is_last": 33, "set_buff": 33, "stateless": [33, 62, 1873, 1888], "ddp_comm_hook": [33, 39], "default_hook": 33, "allreduce_hook": 33, "process_group": [33, 36, 37, 39, 57, 1455, 1596], "henc": [33, 39, 43, 51, 52, 55, 57, 64, 914, 1110, 1412, 1413, 1414, 1468, 1787, 1872, 1877, 1880, 1881, 1907, 1909], "unaffect": [33, 491, 492, 1370], "ddp_model": [33, 35, 1596, 1881], "fp16_compress_hook": 33, "decompress": [33, 1851, 1866], "bf16_compress_hook": 33, "nccl": [33, 36, 37, 53, 57, 1596, 1886], "brain": [33, 1914, 1917], "wrapper": [33, 35, 40, 41, 57, 64, 65, 615, 748, 781, 815, 958, 960, 961, 963, 1030, 1032, 1103, 1104, 1123, 1184, 1353, 1854, 1856, 1857, 1867, 1869, 1880, 1881, 1895, 1900], "fp16_compress_wrapp": 33, "powersgdst": 33, "matrix_approximation_rank": 33, "start_powersgd_it": 33, "powersgd_hook": 33, "bf16_compress_wrapp": 33, "wikipedia": [33, 1552, 1877, 1885, 1923], "wiki": [33, 1923], "bfloat16_float": 33, "point_format": 33, "vogel": 33, "et": [33, 41, 57, 1339, 1428, 1429, 1464, 1465, 1671, 1766, 1803, 1875], "al": [33, 41, 57, 1339, 1428, 1429, 1464, 1465, 1671, 1766, 1803, 1875], "neurip": [33, 41], "2019": [33, 41, 1014], "hyperparamet": [33, 57, 65, 1916], "1000": [33, 1072, 1077, 1103, 1104, 1324, 1359, 1465, 1703, 1730, 1750, 1816, 1877, 1893, 1895, 1916], "min_compression_r": 33, "use_error_feedback": 33, "warm_start": 33, "orthogonalization_epsilon": 33, "random_se": 33, "compression_stats_logging_frequ": 33, "batch_tensors_with_same_shap": 33, "stronger": 33, "threshold": [33, 65, 1238, 1241, 1377, 1447, 1452, 1573, 1579, 1685, 1750, 1855, 1876, 1880, 1897, 1916], "exponenti": [33, 252, 1067, 1235, 1261, 1262, 1263, 1271, 1338, 1358, 1504, 1852, 1857, 1897, 1898, 1912, 1919], "grid": [33, 1077, 1285, 1480, 1515, 1853, 1855, 1880, 1916], "satisfactori": 33, "appendix": [33, 1852], "defer": [33, 57, 1880, 1900], "hybrid": [33, 57, 213, 534, 574, 575, 576, 578, 579, 1148], "scheme": [33, 52, 471, 793, 810, 811, 812, 813, 816, 818, 1888], "sensit": [33, 1377, 1447, 1895, 1899, 1908], "trajectori": 33, "irrecover": 33, "num_row": 33, "num_col": 33, "1e": [33, 65, 108, 338, 685, 703, 704, 705, 706, 707, 708, 714, 715, 727, 728, 740, 742, 743, 744, 745, 746, 899, 900, 935, 936, 1173, 1199, 1200, 1250, 1334, 1335, 1336, 1351, 1370, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1402, 1425, 1430, 1455, 1459, 1461, 1463, 1464, 1485, 1497, 1512, 1516, 1517, 1525, 1529, 1551, 1554, 1558, 1581, 1604, 1637, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1672, 1685, 1693, 1746, 1854, 1855, 1882, 1888, 1895, 1898, 1912, 1918], "orthogon": [33, 1220, 1223, 1242, 1247, 1256, 1689, 1701, 1875, 1877, 1888, 1911], "epsilon": [33, 65, 810, 811, 812, 813, 816, 856, 1238, 1241, 1334, 1335, 1336, 1351, 1371, 1379, 1380, 1381, 1388, 1425, 1455, 1497, 1551, 1604, 1637, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1705, 1855, 1912], "bucket_cap_mb": [33, 1596, 1881], "memor": 33, "compens": 33, "apex": 33, "uncompress": [33, 1911], "p": [33, 37, 41, 57, 65, 149, 228, 280, 418, 419, 446, 483, 484, 599, 677, 680, 912, 914, 924, 932, 1051, 1204, 1215, 1221, 1222, 1230, 1231, 1273, 1275, 1278, 1288, 1309, 1328, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1382, 1384, 1385, 1421, 1425, 1427, 1464, 1465, 1481, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1536, 1537, 1547, 1551, 1554, 1555, 1581, 1600, 1606, 1608, 1614, 1623, 1643, 1671, 1722, 1779, 1853, 1855, 1856, 1876, 1877, 1880, 1884, 1885, 1890, 1901, 1911, 1912], "pq": 33, "mq": [33, 1902, 1921], "tp": [33, 40], "awai": [33, 65, 1515, 1852, 1871, 1877, 1883], "comm": [33, 35, 1881], "handler": [33, 35, 45, 46, 1615, 1867, 1887, 1899, 1922], "batched_powersgd_hook": 33, "destroi": [33, 52, 1353, 1877, 1907], "squar": [33, 41, 542, 730, 731, 732, 733, 770, 776, 785, 956, 1044, 1046, 1181, 1215, 1217, 1219, 1220, 1221, 1224, 1225, 1229, 1231, 1233, 1235, 1237, 1241, 1243, 1244, 1246, 1247, 1251, 1264, 1273, 1322, 1326, 1330, 1331, 1345, 1346, 1348, 1349, 1364, 1365, 1377, 1385, 1407, 1410, 1411, 1414, 1447, 1459, 1482, 1491, 1494, 1510, 1511, 1515, 1524, 1526, 1546, 1569, 1584, 1603, 1656, 1658, 1659, 1660, 1662, 1668, 1669, 1672, 1732, 1791, 1825, 1838, 1855, 1897, 1911], "truncat": [33, 1102, 1831, 1872, 1875, 1884, 1891], "impli": [33, 52, 1869, 1877, 1895, 1900, 1905, 1907], "debugging_hook": 33, "noop_hook": 33, "noop": [33, 1596], "headroom": 33, "desynchron": [33, 35], "trainer": [33, 43, 45, 50, 53, 54, 1596, 1907], "__setstate__": 33, "__getstate__": 33, "reload": [33, 39, 1851], "sy": [33, 44, 53, 55, 1851, 1880, 1899], "tempfil": 33, "simplemodel": 33, "fc2": [33, 1587, 1900], "master_addr": [33, 35, 43, 53, 55, 1881, 1900, 1907, 1908], "localhost": [33, 35, 52, 53, 1881, 1900, 1907, 1908], "master_port": [33, 35, 43, 53, 55, 1881, 1900, 1907, 1908], "12355": 33, "init_process_group": [33, 35, 36, 39, 43, 53, 55, 1596, 1880, 1881, 1907], "cleanup": 33, "destroy_process_group": 33, "run_demo": 33, "demo_fn": 33, "mp": [33, 35, 36, 54, 1596, 1852, 1881, 1890, 1902, 1908, 1913, 1914, 1921], "nproc": [33, 35, 50, 51, 53, 1869, 1881, 1908], "demo_seri": 33, "gettempdir": 33, "device_id": [33, 35, 36, 39, 53, 57, 1255, 1353, 1455, 1580, 1596, 1881], "powersgd_st": 33, "lr": [33, 36, 39, 57, 1587, 1596, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1880, 1881, 1888, 1898, 1908, 1916], "001": [33, 899, 900, 1193, 1654, 1658, 1659, 1668, 1672, 1684, 1881, 1895], "comm_hook": 33, "comm_hook_st": 33, "hook_stat": 33, "barrier": [33, 43, 52, 1897], "map_loc": [33, 1188, 1191, 1255, 1596, 1851, 1866, 1899], "n_gpu": 33, "device_count": [33, 35, 1852], "got": [33, 35, 882, 1882, 1918], "thank": [33, 41, 1882, 1900], "thij": 33, "par": 33, "home": [34, 1880], "brief": [35, 1596, 1869, 1907], "introduct": [35, 41, 992, 1596, 1852, 1854, 1858, 1870, 1878, 1888, 1895, 1907, 1911, 1916], "mpi": [35, 1596], "gloo": [35, 53, 1596, 1881, 1886, 1907], "recv": [35, 1596, 1897, 1908], "all_reduc": [35, 54, 1596], "all_gath": 35, "scatter": [35, 39, 57, 505, 507, 509, 1353, 1837, 1855, 1884, 1897, 1907], "reduce_scatt": [35, 1897], "all_to_al": 35, "v1": [35, 57, 1252, 1690, 1851, 1881, 1907], "init_method": [35, 1596, 1907], "adher": [35, 1857], "some_fil": 35, "machine_nam": 35, "share_folder_nam": 35, "tcpstore": [35, 52], "infiniband": [35, 1596, 1907], "interconnect": 35, "gpudirect": 35, "ethernet": 35, "ip": [35, 52], "ib": 35, "nccl_socket_ifnam": 35, "eth0": 35, "gloo_socket_ifnam": 35, "comma": [35, 1057, 1857, 1863], "eth1": 35, "eth2": 35, "eth3": 35, "imper": 35, "nccl_debug": 35, "nccl_debug_subsi": 35, "coll": 35, "hang": [35, 36, 39, 1596, 1881], "topologi": [35, 37, 40, 43], "effort": [35, 1907], "socket": [35, 1869, 1907], "nccl_socket_nthread": 35, "nccl_nsocks_perthread": 35, "cloud": [35, 1911, 1916], "aw": [35, 44, 956], "primit": [35, 39, 52, 1255, 1853, 1854, 1856, 1858, 1879, 1889, 1895, 1907], "connect": [35, 43, 52, 1344, 1345, 1346, 1347, 1348, 1349, 1392, 1393, 1394, 1395, 1396, 1397, 1444, 1869, 1907], "advantag": [35, 52, 53, 1333, 1377, 1881, 1884, 1907, 1911], "redund": [35, 57, 1073, 1074, 1076, 1078, 1092, 1094, 1798], "averag": [35, 39, 726, 757, 758, 759, 760, 812, 813, 908, 910, 956, 1020, 1034, 1184, 1321, 1322, 1323, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1350, 1352, 1360, 1370, 1376, 1382, 1383, 1384, 1385, 1389, 1390, 1391, 1407, 1408, 1416, 1419, 1420, 1421, 1422, 1423, 1430, 1447, 1448, 1455, 1464, 1474, 1475, 1476, 1482, 1483, 1484, 1487, 1488, 1498, 1512, 1527, 1536, 1537, 1550, 1558, 1596, 1655, 1656, 1658, 1659, 1660, 1662, 1668, 1669, 1672, 1823, 1852, 1881, 1901], "thrash": 35, "recurr": [35, 751, 752, 1199, 1339, 1353, 1368, 1369, 1386, 1431, 1606, 1632, 1669, 1852, 1880], "use_distribut": 35, "datetim": [35, 1867], "timedelta": [35, 52, 1867], "1800": 35, "group_nam": [35, 49], "pg_option": 35, "url": [35, 52, 907, 1851, 1866, 1907], "discov": [35, 1907], "encod": [35, 43, 49, 52, 65, 1231, 1255, 1297, 1298, 1332, 1333, 1459, 1460, 1461, 1462, 1463, 1596, 1784, 1785, 1786, 1788, 1789, 1854, 1857, 1858, 1882, 1893, 1899, 1908, 1911], "ucc": 35, "lowercas": 35, "deadlock": [35, 1596], "job": [35, 43, 45, 46, 48, 49, 51, 52, 53, 54, 1596, 1677, 1683, 1887, 1901, 1916], "exchang": [35, 52, 961, 1045, 1880, 1895], "nccl_blocking_wait": 35, "nccl_async_error_handl": [35, 1880], "abort": [35, 1880], "crash": [35, 45, 52, 1869, 1877, 1907, 1909, 1916], "caught": [35, 1596, 1869], "watch": 35, "dog": 35, "deprec": [35, 43, 52, 53, 57, 61, 400, 505, 548, 594, 776, 777, 778, 784, 817, 898, 899, 934, 935, 1007, 1011, 1130, 1184, 1238, 1241, 1273, 1274, 1332, 1333, 1350, 1352, 1375, 1376, 1382, 1383, 1407, 1408, 1416, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1469, 1470, 1487, 1488, 1498, 1527, 1550, 1558, 1584, 1585, 1586, 1588, 1596, 1637, 1638, 1643, 1701, 1717, 1798, 1802, 1825, 1852, 1854, 1859, 1869, 1878, 1901, 1905, 1913, 1917, 1918], "processgroupopt": 35, "processgroupnccl": [35, 1881], "is_high_priority_stream": 35, "backend_nam": 35, "custom_backend": 35, "is_initi": [35, 1852], "is_mpi_avail": 35, "is_nccl_avail": 35, "is_gloo_avail": 35, "is_torchelastic_launch": 35, "elast": [35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 1852], "aka": [35, 908, 1377, 1877, 1914], "torchelast": [35, 38, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55], "torchelastic_run_id": [35, 53], "rendezv": [35, 38, 43, 49, 51, 55, 1881, 1907], "null": [35, 44, 46, 49], "discoveri": [35, 52, 1880, 1899], "reachabl": 35, "multicast": 35, "23456": 35, "clean": [35, 43, 65, 996, 1851, 1869, 1899], "fcntl": 35, "nf": 35, "init": [35, 43, 45, 57, 1184, 1416, 1424, 1443, 1636, 1852, 1859, 1877, 1882, 1887, 1888], "brand": 35, "unsuccess": 35, "mnt": 35, "sharedfil": 35, "port": [35, 43, 51, 52, 53, 1886], "backend_str": 35, "uppercas": 35, "classmethod": [35, 52, 723, 729, 730, 731, 736, 737, 747, 755, 783, 784, 785, 806, 807, 808, 815, 845, 960, 1359, 1360, 1455, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1652, 1857, 1858, 1882, 1902, 1907, 1913, 1922], "extended_api": 35, "instanti": [35, 39, 51, 52, 53, 65, 832, 1061, 1159, 1360, 1507, 1605, 1629, 1636, 1641, 1851, 1854, 1856, 1857, 1880, 1882, 1888, 1913], "3rd": [35, 41, 52, 608, 1685, 1878], "processgroup": [35, 37, 39, 57, 1596], "four": [35, 1229, 1345, 1882, 1885, 1907, 1909], "c10d": [35, 43, 51, 53, 55, 1596, 1881, 1897], "distributedbackendopt": 35, "get_backend": [35, 52], "get_rank": [35, 1455], "uniqu": [35, 43, 49, 52, 53, 54, 505, 509, 1175, 1219, 1220, 1224, 1230, 1231, 1233, 1242, 1244, 1246, 1247, 1284, 1291, 1779, 1802, 1835, 1851, 1854, 1866, 1882, 1899, 1901, 1907, 1908, 1909, 1911, 1916], "get_world_s": 35, "filestor": [35, 52], "hashstor": 35, "host_nam": 35, "hostnam": [35, 43, 52, 1901], "listen": 35, "is_mast": 35, "300": [35, 43, 1261, 1333, 1633, 1635, 1898], "wait_for_work": 35, "server_stor": 35, "127": [35, 785, 1871, 1902, 1916], "1234": [35, 52, 1161], "client_stor": 35, "first_kei": 35, "first_valu": 35, "hashmap": 35, "file_nam": [35, 1851, 1866, 1899], "store1": 35, "store2": 35, "prefixstor": 35, "quantiti": [35, 58, 63, 1219, 1220, 1247, 1382, 1613, 1614, 1616, 1617, 1619, 1622, 1623, 1624, 1625, 1685, 1883, 1885], "compare_set": 35, "arg2": 35, "expected_valu": 35, "desired_valu": 35, "second_valu": 35, "overload": [35, 65, 608, 1856, 1857, 1861], "bad_kei": 35, "num_kei": 35, "destruct": [35, 1867, 1907, 1909], "delete_kei": 35, "set_timeout": 35, "grain": [35, 849, 852, 1565, 1877, 1895], "plai": 35, "new_group": [35, 57, 1455], "use_local_synchron": 35, "enqueu": [35, 64, 961, 963, 964, 1880, 1908], "get_group_rank": 35, "global_rank": [35, 43], "get_global_rank": 35, "group_rank": [35, 43, 53], "get_process_group_rank": 35, "dst": [35, 1851, 1899], "destin": [35, 37, 46, 49, 57, 204, 409, 410, 594, 972, 973, 1126, 1184, 1290, 1291, 1416, 1650, 1651, 1855, 1907, 1908, 1913], "unspecifi": [35, 474, 811, 812, 813, 816, 899, 900, 1449, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1781, 1864, 1911, 1916], "sender": [35, 1909], "isend": 35, "irecv": 35, "is_complet": 35, "finish": [35, 37, 43, 49, 50, 52, 54, 64, 1114, 1880, 1881, 1894, 1901, 1907, 1909], "batch_isend_irecv": 35, "p2p_op_list": 35, "p2pop": 35, "op_list": 35, "send_tensor": 35, "recv_tensor": 35, "send_op": 35, "recv_op": 35, "req": 35, "pg": [35, 1596], "set_devic": [35, 37, 57, 1596, 1741, 1852, 1907, 1914], "p2p": [35, 52], "async_op": 35, "get_futur": [35, 1596], "regard": [35, 1347, 1348, 1349, 1359, 1360, 1506, 1507, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1854, 1909, 1911], "add_": [35, 60, 62, 216, 1114, 1855, 1870, 1878, 1911], "101": [35, 1324], "overwrot": 35, "sent": [35, 37, 996, 1857, 1869, 1890, 1907, 1908, 1909], "broadcast_object_list": 35, "object_list": 35, "picklabl": [35, 1184, 1416, 1899], "current_devic": [35, 37, 969, 977, 978, 985, 986, 1002, 1006, 1008, 1009, 1010, 1012, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1033, 1034, 1035, 1852, 1914], "insecur": [35, 1255], "malici": [35, 1255, 1899], "ineffici": [35, 1880, 1902], "redoptyp": 35, "bitwis": [35, 916, 918, 919, 921, 1858, 1891, 1903, 1919], "reduceop": 35, "int64": [35, 186, 203, 307, 315, 387, 856, 915, 928, 1058, 1071, 1072, 1109, 1498, 1629, 1712, 1716, 1717, 1737, 1784, 1785, 1786, 1788, 1789, 1880, 1911, 1913, 1914, 1917, 1923], "1j": [35, 689, 949, 950, 1180, 1725, 1726, 1841, 1877, 1885, 1893], "2j": [35, 689, 949, 950, 1725, 1726, 1753, 1841, 1877], "tensor_list": [35, 1872], "all_gather_into_tensor": 35, "output_tensor": 35, "accommod": [35, 1412, 1413, 1414], "ii": [35, 952, 1057, 1386, 1387], "tensor_in": 35, "tensor_out": 35, "tensor_out2": 35, "all_gather_object": 35, "obj": [35, 65, 871, 981, 1170, 1171, 1190, 1195, 1733, 1855, 1894, 1899], "pickabl": 35, "responsibl": 35, "gather_object": 35, "gather_list": 35, "object_gather_list": 35, "scatter_list": 35, "tensor_s": 35, "t_one": 35, "t_five": 35, "scatter_object_list": 35, "scatter_object_output_list": 35, "scatter_object_input_list": 35, "output_list": 35, "input_list": 35, "reduce_scatter_tensor": 35, "all_to_all_singl": 35, "output_split_s": 35, "input_split_s": 35, "15": [35, 65, 608, 1055, 1127, 1137, 1147, 1206, 1220, 1340, 1413, 1414, 1633, 1635, 1693, 1766, 1775, 1821, 1845, 1854, 1855, 1858, 1895, 1911], "uneven": [35, 36, 39, 1596], "21": [35, 41, 676, 934, 1040, 1242, 1701, 1823, 1854, 1911], "31": [35, 920, 1331, 1411, 1587, 1761, 1895], "33": [35, 729, 730, 731, 732, 733, 734, 763, 1184, 1344, 1345, 1346, 1348, 1349, 1414, 1416, 1490, 1492, 1493, 1495, 1854, 1895], "35": [35, 1242, 1335, 1336, 1380, 1381, 1455, 1701], "input_split": 35, "output_split": 35, "5j": 35, "6j": 35, "7j": 35, "8j": 35, "9j": 35, "10j": 35, "11j": 35, "12j": 35, "13j": 35, "14j": 35, "15j": 35, "16j": 35, "output_tensor_list": 35, "input_tensor_list": 35, "monitored_barri": [35, 1897], "wait_all_rank": 35, "band": 35, "bor": 35, "bxor": 35, "premul_sum": 35, "suppos": [35, 65, 1181, 1686, 1864, 1911], "_make_nccl_premul_sum": 35, "all_reduce_multigpu": 35, "__members__": 35, "reduce_op": 35, "revisit": 35, "broadcast_multigpu": 35, "reduce_multigpu": 35, "all_gather_multigpu": 35, "reduce_scatter_multigpu": 35, "distributed_test": 35, "dev_idx": 35, "src_tensor": 35, "resid": [35, 57, 64, 191, 283, 331, 1255, 1596, 1880, 1900, 1907], "dst_tensor": 35, "cpp_extens": [35, 1852, 1882], "cpp_c10d_extens": 35, "torchrun": [35, 38, 44, 51, 55], "benefici": [35, 1888], "nproc_per_nod": [35, 44], "num_gpus_you_hav": 35, "your_training_script": [35, 51, 53], "arg3": 35, "192": [35, 608, 1895], "168": 35, "nnode": [35, 51, 53], "local_process_rank": 35, "local_rank": [35, 43, 45, 50, 53, 55, 1455], "argpars": [35, 53, 1880], "parser": [35, 53, 1880], "argumentpars": [35, 53, 1880], "add_argu": [35, 53, 1880], "parse_arg": [35, 44, 53, 55, 1880, 1895], "output_devic": [35, 39, 53, 1353, 1455, 1580, 1596], "adjust": [35, 37, 39, 41, 57, 1852, 1879, 1903], "launcher": [35, 53], "filesystem": [35, 37, 959, 1851, 1899], "12042": 35, "imagenet": [35, 1875], "inconsist": [35, 57, 856, 1717, 1882], "group_gloo": 35, "29501": 35, "monitoredbarri": 35, "transport": [35, 1907], "598": 35, "2401": 35, "db00": 35, "eef0": 35, "1100": 35, "3560": 35, "1c05": 35, "25d": 35, "8594": 35, "torch_cpp_log_level": 35, "twolinlayernet": 35, "i0607": 35, "739390": 35, "515217": 35, "logger": [35, 1649, 1920, 1921], "173": 35, "broadcast_buff": [35, 1596], "bucket_cap_byt": 35, "26214400": 35, "find_unused_paramet": [35, 1596, 1881], "gradient_as_bucket_view": [35, 1596], "is_multi_device_modul": 35, "num_parameter_tensor": 35, "total_parameter_size_byt": 35, "440": 35, "bucket_s": 35, "cuda_visible_devic": [35, 1026, 1596, 1880], "module_nam": [35, 65, 808, 845, 1899], "nccl_ib_timeout": 35, "nccl_nthread": 35, "58": 35, "085681": 35, "544067": 35, "344": 35, "unused_parameter_s": 35, "40838608": 35, "5983335": 35, "4326421": 35, "comp": [35, 41], "4207652": 35, "085693": 35, "544066": 35, "42850427": 35, "3885553": 35, "2357981": 35, "2234674": 35, "enhanc": [35, 57, 1596], "unus": [35, 39, 65, 898, 996, 1010, 1189, 1195, 1378, 1596, 1654, 1854, 1856, 1857, 1880, 1881, 1886, 1899], "wasn": [35, 1255, 1854], "va": 35, "lue": 35, "indirectli": 35, "outstand": [35, 1907], "stuck": [35, 43, 54], "uninform": 35, "nontrivi": [35, 1880], "reveal": [35, 1881], "default_pg": 35, "opt": [35, 39, 1195, 1673, 1674, 1680, 1684, 1686, 1854, 1885], "longtensor": [35, 129, 130, 131, 309, 311, 313, 445, 464, 505, 507, 509, 865, 866, 1126, 1158, 1205, 1306, 1359, 1360, 1419, 1506, 1507, 1552, 1642, 1737, 1775, 1787, 1812, 1820, 1847, 1914, 1917], "set_debug_level": 35, "set_debug_level_from_env": 35, "get_debug_level": 35, "torch_show_cpp_stacktrac": 35, "distbackenderror": 35, "facilit": [36, 41, 62, 961, 1045, 1742, 1851, 1854, 1857, 1892], "joinabl": [36, 39, 1596, 1852], "joinhook": [36, 1852], "throw_on_early_termin": [36, 1596], "shadow": [36, 39, 1596, 1920, 1921], "notify_join_context": 36, "zeroredundancyoptim": [36, 39, 1596, 1852], "01": [36, 39, 54, 746, 771, 812, 813, 1058, 1100, 1402, 1530, 1531, 1587, 1653, 1655, 1657, 1659, 1669, 1670, 1677, 1683, 1703, 1757, 1759, 1760, 1765, 1766, 1853, 1855, 1875, 1887, 1895, 1898], "vacuou": 36, "inherit": [36, 1621, 1854, 1856, 1872, 1882, 1888, 1890], "join_hook": [36, 39, 1596], "join_devic": 36, "join_process_group": 36, "repeatedli": [36, 1880, 1911], "main_hook": 36, "post_hook": 36, "is_last_join": 36, "dcp": 37, "reshard": [37, 40, 57], "storag": [37, 57, 216, 305, 333, 336, 337, 428, 451, 476, 491, 512, 515, 549, 550, 575, 576, 578, 579, 869, 886, 888, 981, 1048, 1154, 1158, 1170, 1184, 1191, 1255, 1277, 1315, 1316, 1353, 1416, 1719, 1733, 1740, 1771, 1776, 1779, 1793, 1816, 1822, 1851, 1852, 1855, 1866, 1869, 1877, 1880, 1890, 1893, 1899, 1907, 1911, 1914, 1915, 1917], "storage_read": 37, "coordinator_rank": 37, "no_dist": 37, "planner": 37, "spmd": 37, "style": [37, 40, 42, 65, 868, 1052, 1108, 1642, 1854, 1856, 1857, 1895, 1899, 1916], "fullfil": 37, "shardedtensor": [37, 57], "po": [37, 1895], "storageread": [37, 1852], "rank0": [37, 57], "mymodul": [37, 57, 65, 1188, 1189, 1190, 1194, 1195, 1201, 1417, 1418, 1426, 1427, 1854, 1856, 1857, 1884, 1893, 1907], "adagrad": [37, 1359, 1864, 1898, 1907], "model_state_dict": 37, "fs_storage_load": 37, "filesystemload": 37, "save_state_dict": [37, 1852], "storage_writ": 37, "storagewrit": [37, 1852], "fs_storage_writ": 37, "filesystemwrit": [37, 1852], "told": [37, 1856], "read_metadata": 37, "set_up_storage_read": 37, "prepare_local_plan": 37, "prepare_global_plan": 37, "read_data": 37, "central": [37, 1137, 1885, 1887], "loadplan": [37, 1852], "storage_data": 37, "loadplann": [37, 1852], "load_byt": 37, "bytesio": [37, 1191, 1194, 1255, 1733, 1895, 1902], "resolve_tensor": 37, "storagelay": 37, "is_coordin": 37, "set_up_storage_writ": 37, "write_data": 37, "recover": 37, "writeresult": 37, "saveplan": [37, 1852], "saveplann": [37, 1852], "resolve_data": 37, "writeitem": [37, 1852], "tensor_data": 37, "set_up_plann": 37, "create_local_plan": 37, "create_global_plan": 37, "commit_tensor": 37, "defaultloadplann": [37, 1852], "requit": 37, "intrincaci": 37, "renameplann": 37, "original_state_dict": 37, "foo_": [37, 1114], "v": [37, 49, 61, 65, 480, 535, 886, 893, 895, 896, 897, 928, 1113, 1123, 1125, 1181, 1197, 1219, 1223, 1247, 1251, 1256, 1422, 1464, 1465, 1506, 1551, 1565, 1635, 1640, 1669, 1671, 1691, 1724, 1783, 1787, 1802, 1803, 1844, 1852, 1854, 1855, 1856, 1857, 1867, 1877, 1885, 1894, 1899, 1911, 1916], "read_item": 37, "dest_index": 37, "fqn": [37, 40, 1921], "metamodelmateri": 37, "defaultsaveplann": [37, 1852], "empty_lik": [37, 1855, 1859, 1870, 1872, 1897, 1911], "global_plan": 37, "finish_plan": 37, "central_plan": 37, "alia": [37, 41, 46, 86, 87, 106, 182, 183, 347, 400, 429, 430, 437, 532, 673, 857, 858, 859, 860, 861, 862, 863, 880, 940, 947, 948, 1043, 1050, 1053, 1064, 1065, 1066, 1068, 1069, 1095, 1130, 1138, 1139, 1151, 1152, 1153, 1162, 1182, 1184, 1210, 1211, 1218, 1234, 1238, 1241, 1269, 1279, 1280, 1290, 1307, 1309, 1319, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1416, 1526, 1599, 1629, 1645, 1688, 1693, 1696, 1731, 1754, 1769, 1772, 1774, 1800, 1804, 1805, 1824, 1830, 1848, 1853, 1857, 1882, 1897, 1912, 1913, 1917], "readitem": [37, 1852], "planner_data": 37, "loaditemtyp": 37, "metadataindex": 37, "dest_offset": 37, "storage_index": 37, "storage_offset": [37, 133, 512, 608, 869, 1853, 1855, 1897], "tandem": 37, "fp16planner": 37, "write_item": 37, "writeitemtyp": 37, "byte_io": 37, "itertool": [37, 41, 930, 943], "islic": 37, "ddploadbalancingplann": 37, "all_plan": 37, "saveextradataplann": 37, "merged_data": 37, "new_plan": 37, "idempot": [37, 1907, 1909], "hi": [37, 1386, 1387, 1854, 1856, 1885], "late": [37, 52], "tensorwritedata": 37, "nonetyp": [37, 1855, 1857], "filesystemread": [37, 1852], "single_file_per_rank": 37, "sync_fil": 37, "thread_count": 37, "per_thread_copy_ahead": 37, "10000000": 37, "simplif": 37, "atom": [37, 52, 65, 1858], "distributedtensor": [37, 40], "flatten_state_dict": 37, "flatten_sharded_tensor": 37, "dedup_replicated_tensor": 37, "lookup_object": 37, "transform_object": 37, "lookup_tensor": 37, "transform_tensor": 37, "fault": [38, 43, 51, 52, 1110], "toler": [38, 43, 51, 52, 65, 685, 899, 900, 1173, 1199, 1200, 1238, 1241, 1256, 1654, 1661, 1854, 1918], "quickstart": 38, "agent": [38, 44, 45, 46, 49, 51, 53, 54, 1907], "expir": 38, "kubernet": 38, "distributedoptim": [39, 1596, 1852, 1907, 1908], "rref": [39, 1596, 1852, 1857, 1900, 1908], "optimizer_class": 39, "params_rref": 39, "get_gradi": [39, 1897, 1907, 1908], "multithread": [39, 911, 1880], "dist_autograd": [39, 1596, 1907, 1908], "rpc": [39, 64, 1596, 1852, 1857, 1900, 1908, 1909], "context_id": [39, 1596, 1907, 1908], "rref1": [39, 1907, 1908], "worker1": [39, 64, 1596, 1907, 1908], "rref2": [39, 1907, 1908], "to_her": [39, 1596, 1897, 1907, 1908, 1909], "dist_optim": [39, 1596, 1908], "postlocalsgdoptim": [39, 1852], "afer": 39, "modelaverag": 39, "localsgd": 39, "model_averag": 39, "post_localsgd_hook": 39, "postlocalsgdst": 39, "subgroup": 39, "start_localsgd_it": 39, "warmup_step": 39, "local_optim": 39, "periodicmodelaverag": 39, "intra": [39, 1879, 1881, 1900], "unnecessari": [39, 1636, 1857, 1877, 1880, 1882, 1893, 1899, 1915], "parameters_as_bucket_view": 39, "overlap_with_ddp": 39, "consumpt": [39, 61, 1641, 1911, 1916], "intact": [39, 1907], "ddp_zero_hook": 39, "disjointli": 39, "trail": [39, 1631, 1633, 1872, 1875, 1878, 1882], "wari": 39, "static_graph": [39, 1596, 1881], "third": [39, 41, 1056, 1057, 1273, 1324, 1331, 1346, 1349, 1411, 1683, 1852, 1854, 1880, 1883, 1888, 1899, 1901], "add_param_group": [39, 1608, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672], "param_group": [39, 57, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1668, 1669, 1670, 1671, 1672, 1679, 1682], "frozen": [39, 1188, 1193, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1858, 1894], "trainabl": [39, 1003, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1668, 1669, 1670, 1671, 1672, 1882], "consolidate_state_dict": 39, "consolid": [39, 57, 1900], "pertain": 39, "dtensor": 40, "rowwis": 40, "colwis": 40, "pairwis": [40, 41, 1376, 1425, 1464], "parallelize_modul": [40, 1852], "device_mesh": 40, "parallelize_plan": 40, "tp_mesh_dim": 40, "sub_modul": 40, "parallelstyl": 40, "devicemesh": 40, "mesh": [40, 1916], "prepar": [40, 65, 788, 830, 832, 848, 850, 852, 853, 854, 1123, 1193, 1858, 1895, 1920, 1921], "pairwiseparallel": [40, 1852], "finer": 40, "granular": [40, 57, 1197, 1876], "rowwiseparallel": [40, 1852], "_prepare_input": 40, "make_input_shard_1d_last_dim": [40, 1852], "_prepare_output": 40, "make_output_tensor": [40, 1852], "colwiseparallel": [40, 1852], "make_input_replicate_1d": [40, 1852], "make_sharded_output_tensor": 40, "megatron": 40, "lm": 40, "arxiv": [40, 41, 1386, 1434, 1435, 1462, 1640, 1691, 1803, 1877], "1909": [40, 869], "08053": 40, "multihead": [40, 1422, 1461], "mlp": [40, 1587, 1902], "sequenceparallel": [40, 1852], "pdf": [40, 1339, 1434, 1766, 1877], "2205": 40, "05198": 40, "expectedli": 40, "make_input_reshard_repl": [40, 1852], "make_input_shard_1d": [40, 1852], "make_output_replicate_1d": [40, 1852], "make_output_reshard_tensor": [40, 1852], "make_output_shard_1d": [40, 1852], "multiheadattent": [40, 1459, 1461, 1463, 1902], "multihead_attent": 40, "swap": [40, 65, 608, 779, 780, 781, 784, 788, 855, 1273, 1464, 1465, 1581, 1582, 1822, 1855, 1858, 1880, 1902, 1911, 1913, 1920], "multihead_attention_tp": 40, "tensorparallelmultiheadattent": [40, 1852], "embed_dim": [40, 726, 1422], "num_head": [40, 726, 1422, 1855], "add_bias_kv": [40, 726, 1422], "add_zero_attn": [40, 726, 1422, 1855], "kdim": [40, 726, 1422], "vdim": [40, 726, 1422], "batch_first": [40, 725, 726, 751, 1368, 1386, 1422, 1431, 1432, 1459, 1461, 1463, 1630, 1632, 1633, 1635, 1855, 1884], "tp_size": 40, "self_attent": 40, "head": [40, 726, 1324, 1422, 1459, 1461, 1463], "fullyshardeddataparallel": [40, 1852], "enable_2d_with_fsdp": [40, 1852], "parameteriz": 41, "tensorflow": [41, 1669, 1877, 1916], "backpropag": [41, 900, 1670, 1701, 1884], "surrog": 41, "likelihood": [41, 1324, 1370, 1423, 1430, 1512, 1550, 1558], "reinforc": [41, 1445, 1568], "polici": [41, 43, 45, 57, 1677, 1683], "reparameter": [41, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1626, 1627, 1628, 1640], "trick": [41, 895, 1333, 1517, 1877, 1885, 1887], "autoencod": 41, "whilst": [41, 1880], "densiti": [41, 295, 1145, 1146, 1766, 1855, 1912], "log_prob": [41, 1324, 1339, 1499, 1855], "theta": [41, 1480, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1855], "pi": [41, 168, 371, 689, 922, 1141, 1142, 1235, 1366, 1430, 1513, 1558, 1675, 1676, 1695, 1757, 1758, 1761, 1762, 1763, 1764, 1798, 1856, 1857, 1899, 1912], "reward": 41, "ascent": 41, "prob": [41, 1855], "policy_network": 41, "next_stat": 41, "rsampl": 41, "parameter": [41, 371, 447, 1190, 1873, 1911], "has_rsampl": 41, "batch_shap": 41, "event_shap": 41, "validate_arg": 41, "arg_constraint": 41, "cdf": 41, "cumul": [41, 1036, 1037, 1038, 1039, 1040, 1263, 1334, 1335, 1336, 1366, 1389, 1390, 1391, 1455, 1513], "mass": 41, "enumerate_support": 41, "discret": [41, 56, 474, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1092, 1094, 1517, 1766, 1916, 1919], "cardin": [41, 1285], "univari": 41, "singleton": [41, 248, 1388, 1836, 1878], "cartesian": [41, 930, 1285, 1695], "_instanc": 41, "icdf": 41, "perplex": 41, "sample_shap": 41, "sample_n": 41, "set_default_validate_arg": 41, "mimic": [41, 1683], "stddev": 41, "varianc": [41, 956, 1334, 1335, 1336, 1361, 1370, 1379, 1380, 1381, 1389, 1390, 1391, 1398, 1399, 1400, 1455, 1508, 1512, 1668, 1669, 1705, 1714, 1715, 1839, 1840, 1875, 1888], "exp_famili": 41, "famili": 41, "p_": [41, 934, 1275, 1671], "langl": 41, "rangl": 41, "denot": [41, 65, 956, 1204, 1223, 1229, 1242, 1252, 1344, 1345, 1382, 1605, 1608, 1671, 1784, 1785, 1786, 1788, 1789, 1841, 1885, 1905, 1908, 1911], "carrier": 41, "analyt": [41, 899, 900, 1506, 1911], "bregman": 41, "courtesi": 41, "frank": 41, "nielsen": 41, "richard": 41, "nock": 41, "logit": [41, 385, 1333, 1352, 1488, 1498, 1517, 1855, 1897, 1912], "70": [41, 1242, 1701, 1872], "lower_bound": 41, "upper_bound": 41, "has_enumerate_support": 41, "param_shap": 41, "concentration1": 41, "concentration0": 41, "concentr": 41, "1046": 41, "1st": [41, 1878], "2nd": [41, 608, 1424, 1450, 1553, 1878], "greaterthan": 41, "total_count": 41, "71": 41, "trial": 41, "integergreaterthan": 41, "ldot": [41, 1215, 1223, 1254, 1270, 1285, 1388, 1409, 1410, 1411, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "dimension": [41, 505, 507, 871, 877, 878, 879, 923, 930, 942, 1045, 1047, 1048, 1057, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1091, 1092, 1094, 1096, 1098, 1099, 1110, 1137, 1146, 1147, 1148, 1216, 1221, 1222, 1223, 1224, 1249, 1254, 1270, 1278, 1285, 1324, 1341, 1342, 1343, 1352, 1353, 1359, 1360, 1388, 1406, 1423, 1437, 1438, 1439, 1440, 1441, 1442, 1449, 1451, 1455, 1471, 1472, 1473, 1498, 1550, 1553, 1585, 1586, 1603, 1642, 1708, 1784, 1785, 1786, 1787, 1788, 1789, 1798, 1813, 1816, 1817, 1823, 1857, 1872, 1875, 1878, 1885, 1891, 1911, 1913, 1914, 1917, 1919], "unnorm": [41, 1352, 1488, 1498, 1517], "likewis": [41, 1822], "25": [41, 488, 577, 578, 579, 932, 1145, 1251, 1256, 1362, 1419, 1421, 1424, 1587, 1596, 1633, 1635, 1661, 1683, 1702, 1838, 1854, 1912], "independentconstraint": 41, "simplex": 41, "loc": [41, 1255], "lorentz": 41, "3214": 41, "width": [41, 770, 776, 849, 1144, 1145, 1146, 1330, 1331, 1345, 1346, 1348, 1349, 1385, 1410, 1411, 1423, 1450, 1468, 1526, 1584, 1871], "df": 41, "chi": 41, "continuous_bernoulli": 41, "lim": [41, 1181], "499": 41, "501": 41, "2538": [41, 1215], "pervas": 41, "loaiza": 41, "ganem": 41, "cunningham": 41, "jp": 41, "1907": 41, "06845": 41, "8954": 41, "greaterthaneq": 41, "df1": 41, "df2": 41, "fisher": 41, "snedecor": 41, "2453": 41, "degre": [41, 956, 1034, 1041, 1184, 1221, 1222, 1416, 1425, 1464, 1596, 1709, 1729, 1796, 1797, 1839, 1840, 1855, 1885, 1897, 1911], "freedom": [41, 956, 1796, 1797, 1839, 1840, 1885], "0124": 41, "half_cauchi": 41, "half_norm": 41, "base_distribut": 41, "reinterpreted_batch_ndim": 41, "reinterpret": [41, 491], "diagon": [41, 62, 219, 254, 586, 587, 588, 589, 923, 952, 956, 1044, 1045, 1046, 1048, 1057, 1070, 1118, 1119, 1129, 1213, 1225, 1227, 1230, 1242, 1246, 1555, 1565, 1782, 1821, 1825, 1826, 1827, 1828, 1829, 1855, 1882, 1897, 1915], "multivari": [41, 1912], "multivariate_norm": 41, "mvn": 41, "scale_tril": 41, "diag": [41, 63, 1117, 1118, 1119, 1219, 1220, 1247, 1691, 1782, 1802, 1803, 1855, 1897], "diagn": 41, "1729": [41, 1888], "lkj_choleski": 41, "lkj": 41, "matric": [41, 254, 677, 680, 912, 924, 925, 934, 935, 936, 937, 1045, 1129, 1204, 1213, 1214, 1215, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1256, 1264, 1273, 1275, 1288, 1367, 1425, 1480, 1514, 1603, 1608, 1689, 1691, 1701, 1750, 1776, 1779, 1780, 1802, 1803, 1825, 1826, 1828, 1855, 1870, 1885, 1891, 1911, 1917], "eta": [41, 1655, 1657, 1670], "proport": [41, 1384, 1385, 1422, 1463], "det": [41, 1221, 1222, 1243, 1264, 1855, 1897], "lkjcorr": 41, "onion": 41, "3x3": [41, 1040, 1823], "3516": 41, "9361": 41, "1899": [41, 1286], "4748": 41, "8593": 41, "vine": 41, "2009": [41, 1691, 1803], "lewandowski": 41, "dorota": 41, "kurowicka": 41, "harri": [41, 1766], "joe": 41, "journal": [41, 1708], "1016": 41, "jmva": 41, "04": [41, 1100, 1261, 1759, 1766], "008": 41, "corrcholeski": 41, "log_norm": [41, 1897], "lowrank_multivariate_norm": 41, "cov_factor": 41, "cov_diag": 41, "covari": [41, 925, 952, 956, 1334, 1335, 1336, 1455, 1691], "covariance_matrix": 41, "2102": 41, "5429": [41, 1825], "woodburi": 41, "lemma": 41, "formula": [41, 83, 759, 760, 880, 882, 913, 922, 1141, 1142, 1209, 1275, 1276, 1430, 1483, 1484, 1572, 1671, 1704, 1882, 1885, 1901, 1906], "capacit": 41, "precision_matrix": 41, "mixture_same_famili": 41, "mixture_distribut": 41, "component_distribut": 41, "rightmost": [41, 925, 1145, 1146, 1857], "gaussian": [41, 1366, 1370, 1445, 1512, 1513, 1568, 1765, 1912], "gmm": 41, "bivari": 41, "innermost": [41, 65, 1137, 1146, 1737], "1338": 41, "mathbf": [41, 1204, 1604, 1637, 1640, 1670], "sigma": [41, 168, 371, 751, 1333, 1367, 1368, 1369, 1386, 1387, 1445, 1446, 1514, 1568, 1604, 1637, 1760, 1796, 1797, 1839, 1840, 1855], "triangular": [41, 935, 936, 937, 1213, 1214, 1220, 1222, 1230, 1231, 1238, 1241, 1242, 1244, 1246, 1555, 1677, 1701, 1825, 1826, 1827, 1828, 1829], "positivedefinit": 41, "lowercholeski": 41, "negative_binomi": 41, "halfopeninterv": 41, "mu": [41, 371, 1669, 1671], "one_hot_categor": 41, "onehot": 41, "5623": 41, "nonneg": [41, 1465, 1691, 1803, 1912], "pmf": 41, "mathrm": [41, 914, 1221, 1222, 1223, 1224, 1235, 1334, 1335, 1336, 1371, 1379, 1380, 1381, 1388, 1425, 1430, 1455, 1603, 1658, 1659, 1660, 1670, 1705, 1877, 1912], "relaxed_bernoulli": 41, "temperatur": [41, 1517, 1852], "parametr": [41, 1113, 1605, 1612, 1637, 1638, 1873, 1882], "relax": [41, 1199, 1200, 1608, 1902], "reparametriz": 41, "99": [41, 1195, 1669, 1854], "2951": [41, 1283], "3442": 41, "8918": 41, "9021": 41, "maddison": 41, "2017": [41, 1459, 1461, 1463, 1783, 1894], "reparametr": [41, 1517, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1620], "jang": 41, "relaxed_categor": 41, "1294": [41, 935], "2324": [41, 1184, 1416], "3859": 41, "2523": 41, "student": 41, "transformed_distribut": 41, "composit": [41, 62, 1117, 1231, 1603, 1854, 1857, 1883, 1888, 1895], "basedistribut": 41, "dx": [41, 1040, 1332, 1823, 1855, 1882, 1883, 1912], "dy": 41, "logist": [41, 1445, 1448, 1568, 1912], "sigmoidtransform": 41, "affinetransform": 41, "invert": [41, 65, 937, 1175, 1215, 1224, 1225, 1231, 1237, 1244, 1246, 1249, 1250, 1264, 1412, 1413, 1414, 1825, 1855, 1891, 1907], "3418": 41, "upper": [41, 176, 177, 178, 585, 786, 923, 928, 935, 936, 937, 939, 1071, 1072, 1144, 1145, 1213, 1214, 1220, 1222, 1230, 1231, 1242, 1246, 1434, 1555, 1563, 1564, 1677, 1683, 1701, 1716, 1737, 1825, 1828, 1829, 1855, 1875, 1897, 1912, 1918], "von_mis": 41, "circular": [41, 1344, 1345, 1346, 1392, 1393, 1394, 1553], "von": 41, "mise": 41, "unconstrain": [41, 1608], "angl": [41, 746, 875, 1041, 1264, 1402, 1695, 1709, 1753, 1852, 1855, 1897, 1911], "9777": 41, "radian": [41, 689, 875, 1041, 1709, 1855, 1897], "nichola": 41, "simul": [41, 790, 792, 1902, 1905], "1979": 41, "152": [41, 608], "157": 41, "4784": [41, 1288], "symmetr": [41, 793, 811, 913, 922, 935, 936, 937, 1078, 1079, 1080, 1085, 1087, 1091, 1092, 1094, 1141, 1142, 1203, 1213, 1214, 1219, 1220, 1222, 1226, 1227, 1228, 1235, 1238, 1241, 1247, 1256, 1603, 1608, 1683, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1902, 1905], "x_ij": 41, "wu": [41, 1256], "chu": 41, "2018": [41, 1256, 1699], "sawyer": 41, "2007": 41, "anderson": 41, "w": [41, 63, 145, 751, 880, 882, 884, 890, 898, 913, 922, 956, 1115, 1126, 1141, 1142, 1181, 1223, 1322, 1323, 1330, 1331, 1335, 1336, 1340, 1345, 1346, 1352, 1356, 1357, 1359, 1360, 1361, 1368, 1380, 1381, 1388, 1399, 1400, 1410, 1411, 1421, 1422, 1423, 1428, 1429, 1450, 1466, 1467, 1469, 1470, 1480, 1506, 1507, 1515, 1550, 1556, 1557, 1604, 1637, 1640, 1855, 1870, 1871, 1875, 1877, 1882, 1885, 1898, 1899, 1916], "2003": 41, "ed": [41, 62, 1355, 1356, 1877, 1899, 1922], "odel": 41, "feiveson": 41, "1966": 41, "samplecovari": 41, "jasa": 41, "61": 41, "313": 41, "199": 41, "203": [41, 608], "ku": 41, "bloomfield": 41, "2010": [41, 1875], "ox": 41, "max_try_correct": 41, "bartlett": [41, 913], "singular": [41, 1215, 1229, 1230, 1236, 1238, 1240, 1241, 1247, 1248, 1256, 1264, 1273, 1604, 1608, 1691, 1802, 1803, 1891], "kl_diverg": 41, "kullback": [41, 1382, 1527], "leibler": [41, 1382, 1527], "register_kl": 41, "type_p": 41, "type_q": 41, "kl_normal_norm": 41, "ambigu": [41, 65, 1169, 1347, 1348, 1349, 1363, 1412, 1413, 1414, 1468, 1857], "runtimewarn": 41, "basep": 41, "derivedq": 41, "kl_version1": 41, "derivedp": 41, "baseq": 41, "kl_version2": 41, "tie": 41, "abstransform": 41, "event_dim": 41, "affin": [41, 465, 466, 467, 468, 469, 740, 742, 743, 744, 793, 1334, 1335, 1336, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1455, 1480, 1880, 1888], "cattransform": 41, "tseq": 41, "functor": [41, 1000, 1001], "submatrix": 41, "t0": [41, 1137, 1655, 1856], "exptransform": 41, "identity_transform": 41, "composetransform": 41, "corrcholeskytransform": 41, "uncontrain": 41, "euclidean": [41, 932, 1551], "x_i": [41, 62, 939, 1036, 1037, 1038, 1039, 1252, 1259, 1406, 1425, 1449, 1451, 1464, 1535, 1571, 1698, 1781, 1796, 1797, 1823, 1839, 1840, 1841, 1912], "stickbreakingtransform": 41, "r_i": 41, "tanh": [41, 568, 751, 756, 786, 876, 1366, 1368, 1369, 1386, 1387, 1415, 1431, 1433, 1457, 1513, 1545, 1577, 1853, 1855, 1870, 1871, 1875, 1897, 1904, 1911], "unsign": [41, 1905, 1914, 1917, 1918], "z_i": 41, "s_i": 41, "y_i": [41, 939, 1036, 1037, 1038, 1039, 1252, 1259, 1464, 1823, 1841, 1885], "sqrt": [41, 65, 371, 540, 664, 665, 751, 952, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1150, 1203, 1285, 1334, 1335, 1336, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1366, 1368, 1369, 1371, 1379, 1380, 1381, 1384, 1385, 1386, 1387, 1388, 1401, 1403, 1431, 1433, 1455, 1513, 1565, 1608, 1656, 1657, 1658, 1659, 1662, 1668, 1669, 1705, 1732, 1765, 1796, 1797, 1853, 1855, 1870, 1875, 1876, 1877, 1897, 1911, 1912, 1918], "cumulativedistributiontransform": 41, "copula": 41, "base_dist": 41, "independenttransform": 41, "base_transform": 41, "log_abs_det_jacobian": 41, "lowercholeskytransform": 41, "positivedefinitetransform": 41, "powertransform": 41, "expon": [41, 262, 263, 274, 461, 462, 1100, 1107, 1207, 1237, 1324, 1404, 1551, 1698, 1708, 1853, 1855, 1914, 1917], "reshapetransform": 41, "in_shap": 41, "out_shap": 41, "softplustransform": 41, "tanhtransform": 41, "softmaxtransform": 41, "biject": 41, "hmc": 41, "stacktransform": 41, "stick": 41, "aris": [41, 65, 1877], "primarili": [41, 64, 806, 807, 808, 814, 1316, 1867, 1902], "memoiz": 41, "_call": 41, "_invers": 41, "codomain": [41, 1877], "iff": [41, 1422], "weaker": [41, 1880], "pseudoinvers": [41, 1224, 1241, 1249], "monoton": [41, 1415, 1545, 1737], "forward_shap": 41, "inverse_shap": 41, "corr_choleski": 41, "greater_than": 41, "greater_than_eq": 41, "integer_interv": 41, "less_than": 41, "lower_choleski": 41, "lower_triangular": 41, "nonnegative_integ": 41, "one_hot": [41, 1855, 1897], "positive_integ": 41, "positive_semidefinit": 41, "positive_definit": 41, "real_vector": 41, "unit_interv": 41, "is_discret": 41, "_cat": 41, "dependent_properti": 41, "_dependentproperti": 41, "_greaterthan": 41, "_greaterthaneq": 41, "_independentconstraint": 41, "_integerinterv": 41, "_interv": 41, "half_open_interv": 41, "_halfopeninterv": 41, "_lessthan": 41, "_multinomi": 41, "_stack": [41, 1897], "constraintregistri": 41, "biject_to": 41, "transform_to": 41, "overparameter": 41, "rotat": [41, 1729, 1802], "hamiltonian": 41, "mont": 41, "carlo": 41, "potential_energi": 41, "cheap": [41, 1324], "svi": 41, "fewer": [41, 62, 684, 686, 687, 690, 938, 1204, 1205, 1271, 1281, 1283, 1284, 1286, 1289, 1311, 1314, 1370, 1497, 1699, 1783, 1796, 1797, 1801, 1819, 1839, 1840, 1863, 1878, 1893, 1918], "my_constraint": 41, "my_transform": 41, "myconstraintclass": 41, "my_factori": 41, "mytransform": 41, "param1": [41, 1888], "param2": [41, 1888], "constraint_registri": 41, "my_registri": 41, "construct_transform": 41, "myconstraint": 41, "from_dlpack": [42, 871, 1852], "ext_tensor": [42, 1108], "extern": [42, 961, 1108, 1199, 1867, 1879, 1880, 1891, 1895], "immut": [42, 1108, 1857], "__dlpack__": [42, 1108], "capsul": [42, 871, 1108], "ndarrai": [42, 451, 870, 1108, 1109, 1784, 1785, 1786, 1787, 1788, 1789, 1816, 1895, 1916, 1918], "pycapsul": [42, 1108], "to_dlpack": [42, 1108, 1852], "dltensor": [42, 1108], "t3": [42, 1108, 1908], "legaci": [42, 53, 1517, 1901, 1914], "idiomat": 42, "plane": [43, 52, 729, 730, 731, 732, 733, 734, 757, 758, 759, 760, 763, 764, 765, 773, 774, 1045, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1330, 1331, 1344, 1345, 1346, 1347, 1348, 1349, 1364, 1365, 1384, 1385, 1388, 1404, 1409, 1410, 1411, 1474, 1475, 1476, 1477, 1478, 1479, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1510, 1511, 1533, 1536, 1537, 1539, 1540, 1541, 1640, 1706, 1707, 1729], "monitor": [43, 53, 54, 960, 1685, 1852, 1880, 1886], "unhealthi": 43, "tear": 43, "decentr": 43, "elasticag": 43, "deploy": [43, 52, 1852], "quad": [43, 1332, 1333, 1352, 1383, 1407, 1423, 1465], "group_result": 43, "is_fail": [43, 44], "exit_cod": 43, "get_worker_group": 43, "workergroup": [43, 53], "mutabl": [43, 1199, 1854, 1899, 1916], "implementor": 43, "defens": 43, "retri": [43, 45, 54, 57, 1014, 1907, 1909], "max_restart": [43, 44, 53], "runresult": 43, "workerspec": [43, 44, 53, 54], "local_world_s": [43, 44, 53], "rdzv_handler": [43, 44, 52], "monitor_interv": [43, 44], "local_addr": [43, 52], "tee": [43, 50], "blueprint": 43, "spec": [43, 44, 54, 79, 784, 785, 810, 811, 812, 815, 816, 817, 1904], "homogen": [43, 53], "rendezvoushandl": [43, 44, 52, 53], "rdzv": [43, 51, 53], "chose": [43, 1876], "consol": [43, 46, 49, 50, 53, 1916], "get_entrypoint_nam": 43, "__qualname__": 43, "workerst": 43, "unknown": [43, 1598, 1599, 1909], "unrecover": 43, "interrupt": [43, 1869], "termin": [43, 52, 54, 65, 1661, 1869, 1907], "uncaught": [43, 45], "unhandl": 43, "recov": [43, 886, 1078, 1243, 1275, 1596, 1629, 1798, 1876, 1884, 1885, 1903], "is_run": 43, "role_rank": [43, 53], "role_world_s": [43, 53], "pid": [43, 45, 53, 54, 1455, 1884, 1901], "local_elastic_ag": 43, "localelasticag": [43, 44, 54], "start_method": [43, 44, 50, 54, 1869], "exit_barrier_timeout": 43, "log_dir": [43, 50, 1867, 1916], "inter": [43, 45, 1134, 1748, 1879, 1881, 1900, 1907], "safeti": [43, 65, 1854, 1857, 1871], "advis": [43, 535, 608, 856, 1890], "pipe": [43, 54, 1852, 1907], "torchelastic_enable_file_tim": 43, "torchelastic_timer_fil": 43, "shared_queu": 43, "get_context": [43, 54, 1890], "nproc_per_process": 43, "foobar": [43, 45, 49, 50], "other_param": [43, 54], "usr": [43, 50, 52, 1880], "simpleelasticag": 43, "scaffold": 43, "_assign_worker_rank": 43, "group_world_s": 43, "_exit_barri": 43, "_initialize_work": 43, "worker_group": 43, "fresh": [43, 1048, 1740, 1771, 1851], "start_work": 43, "_stop_work": 43, "optimist": 43, "deleg": 43, "_monitor_work": 43, "_rendezv": 43, "_restart_work": 43, "_shutdown": 43, "death_sig": 43, "sigterm": 43, "_start_work": 43, "gracefulli": [43, 53, 62, 1214, 1883], "meaning": [43, 45, 46, 1014, 1880], "meaningless": 43, "intention": [43, 1054, 1841, 1886, 1907], "ship": [44, 1114, 1879, 1907], "programmat": [44, 65, 1888], "my_launch": 44, "argv": [44, 55], "trainer_entrypoint_fn": 44, "fn_arg": 44, "run_result": 44, "tricki": [44, 58, 63, 1877, 1888, 1909], "myrendezvoushandl": 44, "elastic_ag": 44, "servic": [44, 1881], "metrichandl": [44, 49], "mymetrichandl": 44, "metric_data": [44, 49], "metricdata": 44, "sink": [44, 49, 1867], "eventhandl": 44, "cloudwatch": 44, "nulleventhandl": 44, "myeventhandl": 44, "start_process": [45, 50, 1869], "torchelastic_error_fil": 45, "error_handl": 45, "sugar": [45, 1856], "get_error_handl": 45, "childfailederror": 45, "get_first_failur": 45, "dump_error_fil": 45, "error_fil": [45, 50], "exitcod": [45, 53], "nanni": 45, "diagnost": [45, 66, 71, 72, 73, 74, 75, 76, 77, 78, 1650, 1852, 1854], "torchelastic_ag": 45, "trainer_0": 45, "trainer_1": 45, "json": [45, 50, 54, 1887, 1901], "trainer_n": 45, "errorhandl": 45, "record_except": 45, "processfailur": 45, "test_ev": 46, "eventsourc": 46, "get_logging_handl": 46, "millisecond": [46, 49, 960, 1867], "eventmetadatavalu": 46, "telemetri": 49, "timeseri": 49, "metric_group": 49, "metric_nam": 49, "sensibl": 49, "my_modul": [49, 57, 65, 1854, 1899], "nullmetricshandl": 49, "consolemetricshandl": 49, "my_method": 49, "put_metr": 49, "calculate_lat": 49, "succinctli": 49, "baz": [49, 65, 845, 1899, 1918], "leaf_modul": 49, "classnam": [49, 1857], "threw": 49, "my_app": 49, "consolemetrichandl": 49, "stdout": [49, 50, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1895], "stdoutmetrichandl": 49, "1574213883": 49, "4182858": 49, "my_metr": 49, "1574213940": 49, "5237644": 49, "nullmetrichandl": 49, "class_nam": [49, 65], "def_nam": 49, "leaf": [49, 145, 217, 329, 441, 495, 496, 782, 829, 831, 870, 884, 1123, 1653, 1816, 1872, 1876, 1877, 1895, 1921], "metric_valu": 49, "metric_group_nam": 49, "popen": 50, "stderr": [50, 1851, 1866], "err": 50, "echo": 50, "hello": [50, 62, 1856, 1895, 1899], "pcontext": 50, "multiprocesscontext": 50, "subprocesscontext": 50, "keyset": 50, "bitmask": 50, "mask": [50, 393, 394, 395, 396, 397, 535, 726, 899, 900, 1277, 1328, 1339, 1361, 1422, 1459, 1460, 1461, 1462, 1463, 1508, 1565, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1672, 1852, 1855, 1870, 1871, 1911], "bar0": 50, "bar1": 50, "file1": 50, "file2": 50, "caution": 50, "short": [50, 65, 725, 754, 1057, 1181, 1339, 1386, 1387, 1499, 1652, 1750, 1798, 1856, 1870, 1877, 1878, 1888, 1907, 1913, 1914, 1917], "ing": 50, "cmd": [50, 53], "forkserv": [50, 1596, 1869, 1890], "tee_stdout": 50, "tee_stderr": 50, "processcontext": [50, 1869], "superset": [50, 53], "runprocsresult": 50, "num_nod": [51, 53], "trainers_per_nod": 51, "num_allowed_failur": 51, "job_id": [51, 52, 53], "endpoint": [51, 52, 53], "host_node_addr": [51, 53], "min_siz": [51, 53], "num_allowed_failures_or_membership_chang": 51, "node1": [51, 53], "29400": [51, 53], "sidecar": [51, 52], "agre": [52, 1242, 1909], "resum": [52, 1677, 1683, 1685, 1907, 1909, 1916], "retryabl": 52, "lose": [52, 55, 57, 186, 203, 1871], "train_loop": [52, 853], "arriv": [52, 53, 1907, 1909], "dynamicrendezvoushandl": 52, "rendezvousbackend": 52, "c10drendezvousbackend": 52, "etcdrendezvousbackend": 52, "supersed": 52, "etcdrendezvoushandl": 52, "my_run_id": 52, "from_backend": 52, "run_id": [52, 53], "min_nod": 52, "max_nod": 52, "rendezvousparamet": 52, "admit": [52, 53, 1880], "get_as_bool": 52, "get_as_int": 52, "rendezvoushandlerregistri": 52, "create_handl": 52, "creator": [52, 1877, 1907, 1909], "get_run_id": 52, "is_clos": 52, "set_clos": 52, "next_rendezv": 52, "rendezvousclosederror": 52, "rendezvousconnectionerror": 52, "rendezvousstateerror": 52, "rendezvoustimeouterror": 52, "num_nodes_wait": 52, "shutdown": [52, 1907, 1908], "rendezvouserror": 52, "dynamic_rendezv": 52, "join_timeout": 52, "600": 52, "last_call_timeout": 52, "close_timeout": 52, "rendezvoustimeout": 52, "get_stat": [52, 83], "fenc": 52, "set_stat": [52, 83], "condition": [52, 1747], "last_cal": 52, "heartbeat": 52, "keep_al": 52, "c10d_rendezvous_backend": 52, "create_backend": 52, "store_typ": 52, "tcp": [52, 53, 1907], "read_timeout": 52, "60": [52, 54, 1370, 1687, 1813, 1818, 1867, 1907], "is_host": 52, "cname": 52, "fqdn": [52, 53], "etcd_rendezvous_backend": 52, "ssl_cert": 52, "ssl": 52, "certif": 52, "ssl_cert_kei": 52, "privat": [52, 1880, 1882, 1899], "ca_cert": 52, "rool": 52, "key_prefix": 52, "ttl": 52, "hour": 52, "etcd_rendezv": 52, "rdzv_impl": 52, "etcdrendezv": 52, "etcd_address": 52, "min_work": 52, "max_work": 52, "noqa": 52, "w605": 52, "2379": [52, 1281], "etcd_prefix": 52, "etcdstor": 52, "etcd_stor": 52, "etcd_client": 52, "etcd_store_prefix": 52, "c10": [52, 1887], "piggyback": 52, "num": [52, 736, 737, 751, 1306, 1368, 1371, 1386, 1422, 1431, 1459], "lookuperror": 52, "override_timeout": 52, "etcdserv": 52, "cumbersom": [52, 1857], "etcd_serv": 52, "data_dir": 52, "v3": [52, 53], "substitut": [52, 65, 1196, 1877, 1914], "torchelastic_etcd_binary_path": 52, "get_client": 52, "etcd_binary_path": 52, "migrat": [53, 58, 1285, 1905], "train_script": 53, "aforment": 53, "suffic": [53, 65], "compliant": [53, 55], "num_train": 53, "wors": [53, 1837], "port_k": 53, "etcd": 53, "v2": [53, 1252, 1690, 1851], "revis": 53, "localworkergroup": 53, "rdzv_id": 53, "rdzv_backend": [53, 55], "rdzv_endpoint": [53, 55], "max_nnod": 53, "torchelastic_restart_count": 53, "far": [53, 1193, 1515], "torchelastic_max_restart": 53, "python_exec": 53, "gang": 53, "departur": 53, "surviv": 53, "kill": [53, 54, 1869, 1884], "ness": 53, "load_checkpoint": [53, 55], "checkpoint_path": [53, 55], "dataset": [53, 55, 789, 1324, 1333, 1382, 1852, 1884, 1887, 1894, 1898, 1902, 1903, 1916], "train_step": 53, "should_checkpoint": 53, "save_checkpoint": [53, 55], "acquir": [54, 65, 1888, 1909, 1911], "deadlin": 54, "message_queu": 54, "localtimerserv": 54, "max_interv": 54, "trainer_func": 54, "localtimercli": 54, "expiri": 54, "timer_cli": 54, "countdown": 54, "timefram": [54, 1907], "elig": [54, 1909], "reap": 54, "timerserv": 54, "mp_queue": 54, "daemon": [54, 1869], "filetimerserv": 54, "file_path": 54, "log_ev": [54, 1867], "filetimercli": 54, "fifo": 54, "watchdog": 54, "filetimerrequest": 54, "sigkil": 54, "named_pip": 54, "mkfifo": 54, "timercli": 54, "timerrequest": 54, "scope_id": 54, "expiration_tim": 54, "acquisit": 54, "request_queu": 54, "entiti": [54, 65], "clear_tim": 54, "get_expired_tim": 54, "register_tim": 54, "timer_request": 54, "use_env": 55, "expositori": 55, "worst": [55, 1882], "total_num_epoch": 55, "sharding_strategi": 57, "cpu_offload": 57, "auto_wrap_polici": 57, "backward_prefetch": 57, "backwardprefetch": [57, 1852], "backward_pr": [57, 1184, 1416], "mixed_precis": [57, 1596], "ignored_modul": 57, "param_init_fn": 57, "sync_module_st": 57, "forward_prefetch": 57, "limit_all_gath": 57, "use_orig_param": 57, "ignored_paramet": 57, "deepspe": 57, "shorten": 57, "sharded_modul": 57, "0001": [57, 65, 1038, 1228, 1404, 1533, 1655, 1685, 1855, 1898], "stale": 57, "dev_id": 57, "no_sync": [57, 1596], "offload": 57, "ping": 57, "77724": 57, "summon_full_param": 57, "illeg": [57, 1880], "shardingstrategi": [57, 1852], "shard_grad_op": 57, "unshard": 57, "full_shard": 57, "with_grad": 57, "reacquir": 57, "hybrid_shard": 57, "cpuoffload": [57, 1852], "_fsdppolici": 57, "modulewrappolici": 57, "nonwrapped_numel": 57, "subtre": 57, "size_based_auto_wrap_polici": 57, "exce": [57, 1261, 1880], "100m": 57, "numel": [57, 428, 437, 942, 956, 1088, 1169, 1855, 1870, 1877, 1897, 1911], "custom_auto_wrap_polici": 57, "min_num_param": 57, "1e8": 57, "my_auto_wrap_polici": 57, "functool": [57, 60, 832, 1882, 1918], "1e5": 57, "mixedprecis": [57, 1852], "is_meta": [57, 1897], "reset_paramet": 57, "torchdistx": 57, "deferred_init": 57, "materialize_modul": 57, "my_init_fn": 57, "fsdp_model": 57, "fullstatedictconfig": 57, "flight": 57, "named_paramet": [57, 59, 61, 1113, 1184, 1188, 1416, 1888, 1893], "flatparamet": 57, "norm_typ": [57, 736, 737, 1359, 1360, 1384, 1385, 1506, 1507, 1536, 1537, 1600, 1855], "infin": [57, 954, 1174, 1176, 1178, 1179, 1310, 1332, 1409, 1410, 1411, 1539, 1540, 1541, 1600, 1660, 1770, 1781, 1911, 1912], "no_shard": 57, "promot": [57, 676, 917, 920, 929, 1000, 1052, 1100, 1102, 1103, 1104, 1105, 1305, 1355, 1356, 1357, 1361, 1497, 1700, 1720, 1721, 1727, 1742, 1799, 1853, 1857, 1914, 1918], "flatten_sharded_optim_state_dict": 57, "sharded_optim_state_dict": 57, "shard_full_optim_state_dict": 57, "unflatten": [57, 1855, 1870, 1871, 1897, 1915], "fsdp_modul": 57, "root_onli": 57, "full_optim_state_dict": 57, "optim_input": 57, "rank0_onli": 57, "convent": [57, 65, 329, 933, 1057, 1075, 1077, 1101, 1123, 1334, 1335, 1336, 1379, 1380, 1381, 1455, 1730, 1733, 1831, 1851, 1866, 1872, 1877, 1885, 1888, 1893], "alias": [57, 886, 1114, 1125, 1526, 1844, 1856, 1857, 1861, 1882], "load_optim_state_dict_pre_hook": 57, "optim_state_dict": 57, "namedoptim": 57, "optim_state_dict_to_load": 57, "named_buff": [57, 1184, 1416, 1888, 1893], "intercept": [57, 65], "occurr": [57, 396, 1182, 1284, 1629, 1834, 1835], "state_dict_typ": 57, "oom": [57, 1884], "unflattend": 57, "statedicttyp": 57, "fulloptimstatedictconfig": 57, "set_state_dict_typ": 57, "full_state_dict": 57, "save_a_checkpoint": 57, "load_a_checkpoint": 57, "optim_state_dict_post_hook": 57, "is_named_optim": 57, "load_directli": 57, "original_osd": 57, "keyedoptim": 57, "torchrec": [57, 1852], "gossipgrad": [57, 1596], "latter": [57, 678, 782, 1184, 1386, 1416, 1423, 1883, 1888, 1890, 1892], "rekey_optim_state_dict": 57, "optim_state_key_typ": 57, "loadabl": [57, 1851], "wrapped_model": 57, "wrapped_optim": 57, "full_osd": 57, "nonwrapped_model": 57, "nonwrapped_optim": 57, "rekeyed_osd": 57, "optimstatekeytyp": 57, "param_id": 57, "osd": 57, "param_nam": 57, "sharded_osd": 57, "scatter_full_optim_state_dict": 57, "new_model": 57, "new_optim": 57, "remap": [57, 83, 1188, 1191, 1255, 1276, 1851, 1866, 1906], "state_dict_config": 57, "optim_state_dict_config": 57, "descend": [57, 65, 131, 533, 867, 1184, 1247, 1248, 1416, 1775, 1802, 1855], "transpar": [57, 1881, 1900, 1907, 1909], "sharded_state_dict": 57, "shardedstatedictconfig": 57, "offload_to_cpu": 57, "optimstatedictconfig": 57, "param_state_dict": 57, "statedictconfig": 57, "statedictset": 57, "writeback": 57, "summon": 57, "discard": [57, 1181, 1241, 1606, 1851, 1856, 1867], "redundantli": [57, 1876], "materi": [57, 891, 949, 1598, 1599, 1672, 1725, 1726, 1882], "throughput": [57, 1854, 1879], "contend": 57, "backward_post": 57, "reorder": [57, 1077, 1239], "volum": [57, 1146], "_hybrid_shard_zero2": 57, "freed": [57, 145, 884, 898, 966, 1014, 1869, 1880, 1886, 1907], "param_dtyp": 57, "reduce_dtyp": 57, "buffer_dtyp": 57, "keep_low_precision_grad": 57, "cast_forward_input": 57, "cast_root_forward_input": 57, "permit": [57, 1911], "thereaft": 57, "upcast": 57, "batchnorm": [57, 691, 692, 1122, 1184, 1193, 1416, 1455, 1596, 1865, 1877, 1888, 1898, 1900, 1902, 1904, 1905], "offload_param": 57, "jax": [58, 61, 62, 63, 1877, 1883], "love": 58, "hear": 58, "vmap": [58, 60, 61, 65, 892, 894, 898, 899, 900, 1115, 1118, 1119, 1121, 1123], "arbitrarili": [58, 63, 505, 1187, 1480, 1857, 1877, 1883], "stock": [58, 63], "ensembl": [58, 61, 63, 1123], "maml": [58, 63], "vjp": [58, 61, 62, 880, 881, 1119, 1125, 1844, 1882, 1883], "whirlwind": 58, "tour": 58, "jacrev": [59, 61, 62, 894, 1117, 1118, 1883], "functional_cal": [59, 61, 1123], "running_mean": [60, 1122, 1184, 1334, 1335, 1336, 1379, 1380, 1381, 1389, 1390, 1391, 1398, 1399, 1400, 1416, 1455, 1485, 1525, 1853, 1855, 1888, 1893], "running_var": [60, 1122, 1184, 1334, 1335, 1336, 1379, 1380, 1381, 1389, 1390, 1391, 1398, 1399, 1400, 1416, 1455, 1485, 1525, 1853, 1855, 1893], "groupnorm": [60, 1516], "anywher": [60, 1876], "batchnorm2d": [60, 704, 707, 709, 714, 805, 1193, 1353, 1390, 1485, 1865, 1877, 1888, 1902, 1904], "track_running_stat": [60, 742, 743, 744, 1122, 1334, 1335, 1336, 1379, 1380, 1381, 1389, 1390, 1391, 1398, 1399, 1400, 1455, 1893], "resnet": [60, 1851, 1854, 1856, 1888, 1899, 1916, 1920], "regnet": 60, "norm_lay": 60, "num_group": [60, 740, 1371, 1516, 1855], "attach": [60, 64, 65, 134, 703, 704, 705, 706, 707, 708, 709, 710, 711, 721, 722, 723, 724, 784, 829, 831, 855, 1587, 1851, 1854, 1856, 1870, 1877, 1882, 1902, 1908, 1920], "fragil": 60, "replace_all_batch_norm_modules_": 60, "upstream": [61, 1894], "reflect": [61, 451, 512, 547, 1109, 1110, 1113, 1181, 1344, 1345, 1346, 1392, 1393, 1394, 1437, 1438, 1439, 1515, 1553, 1638, 1686, 1798, 1854, 1855, 1884, 1915], "kept": [61, 65, 688, 770, 776, 1334, 1335, 1336, 1379, 1380, 1381, 1455, 1526, 1584, 1857, 1869, 1905], "jvp": [61, 62, 881, 885, 886, 887, 891, 1121, 1882], "jacfwd": [61, 62, 894, 1117, 1883], "carefulli": [61, 64, 1883, 1899], "make_functional_with_buff": 61, "hurri": 61, "emul": [61, 790, 1858, 1882], "fmodel": 61, "compute_loss": [61, 63, 1113, 1115], "predict": [61, 1324, 1333, 1370, 1498, 1898, 1916], "argnum": [61, 1115, 1116, 1117, 1118, 1119], "stack_module_st": 61, "num_model": [61, 1123], "in_featur": [61, 711, 719, 720, 723, 724, 747, 755, 1123, 1184, 1324, 1401, 1403, 1416, 1587, 1603, 1604, 1636, 1637, 1640, 1888], "out_featur": [61, 711, 719, 720, 723, 724, 747, 755, 1123, 1184, 1337, 1401, 1403, 1416, 1587, 1603, 1604, 1636, 1637, 1640, 1888], "base_model": 61, "deepcopi": [61, 1902, 1921], "clearer": [61, 1240, 1672, 1882, 1896], "call_single_model": 61, "stori": [61, 1885], "grad_x": [62, 1883], "has_aux": [62, 1115, 1116, 1118, 1119, 1120, 1124], "mental": [62, 1114], "absenc": 62, "unbind": [62, 1125, 1844, 1852, 1855, 1870, 1897, 1915], "lst": 62, "in_dim": [62, 63, 883, 1115, 1125, 1844, 1883], "batchedtensor": 62, "batched_tensor_input": 62, "new_": [62, 1880, 1917], "new_zero": [62, 1855, 1897], "new_empti": [62, 1855, 1897], "diag_emb": [62, 1047, 1219, 1220, 1247, 1802, 1855, 1897], "vec": [62, 102, 103, 417, 681, 1308, 1639, 1853, 1855, 1911], "copy_": [62, 216, 1114, 1468, 1854, 1855, 1870, 1880, 1913], "arithmet": [62, 917, 920, 934, 1239, 1727, 1858, 1867, 1870, 1871, 1891, 1902, 1914], "extra_arg": 62, "theoret": 62, "custom_dot": 62, "lax": 62, "cond": [62, 1891], "while_loop": 62, "is_nonzero": [62, 1855, 1897, 1911], "rag": 62, "unclear": [62, 608], "add_nois": 62, "prng": 62, "cos_x": [63, 1115], "neg_sin_x": [63, 1115], "hide": [63, 1125, 1844, 1883], "lift": [63, 1125, 1844, 1871, 1897], "feature_s": [63, 1115, 1125, 1844], "feature_vec": [63, 1115, 1125, 1844], "mseloss": [63, 1115, 1377, 1447, 1546, 1880, 1881], "grad_weight_per_exampl": [63, 1115], "cotang": [63, 1124], "vjp_fn": [63, 1124], "out_tang": 63, "hessian0": 63, "hessian1": 63, "hess": [63, 1117], "encapsul": [64, 65, 1907], "rpc_async": [64, 1857, 1897, 1907, 1909], "add_done_callback": 64, "fut": [64, 1187, 1596, 1879, 1907], "set_result": [64, 1596, 1907], "haven": [64, 1888], "set_except": 64, "baseexcept": 64, "slow_set_futur": 64, "sleep": 64, "cb1": 64, "cb2": 64, "dedic": [64, 1880], "pool": [64, 757, 758, 759, 760, 773, 774, 958, 992, 993, 1003, 1014, 1292, 1293, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1330, 1331, 1364, 1365, 1384, 1385, 1409, 1410, 1411, 1412, 1413, 1414, 1417, 1474, 1475, 1476, 1477, 1478, 1479, 1482, 1483, 1484, 1510, 1511, 1536, 1537, 1539, 1540, 1541, 1706, 1707, 1852, 1879, 1880, 1882, 1888, 1890, 1904, 1907], "didn": [64, 1882, 1894, 1898], "cb_fut": 64, "chain_cb_fut": 64, "cb": [64, 1907], "collect_al": [64, 1852], "fut0": 64, "fut1": [64, 1907], "fut_list": 64, "wait_al": [64, 1852], "toolkit": 65, "clamp": [65, 181, 182, 790, 793, 940, 1190, 1332, 1370, 1515, 1526, 1584, 1853, 1855, 1865, 1870, 1895, 1897, 1902, 1904, 1905, 1912, 1918], "get_attr": 65, "feed": [65, 1854, 1884, 1888, 1920], "theses": 65, "callsit": 65, "constitut": 65, "tracer_class": 65, "treatment": 65, "topk": [65, 1853, 1855, 1870, 1897], "linear_weight": 65, "add_1": [65, 1114], "linear_1": 65, "relu_1": 65, "topk_1": 65, "pose": [65, 1908], "explor": [65, 1851, 1877, 1888, 1899], "edit": [65, 1899, 1915], "lint": 65, "new_nod": 65, "tediou": 65, "unwieldi": 65, "machineri": [65, 1882], "imagin": [65, 1907], "requisit": 65, "relu_decomposit": 65, "decomposition_rul": 65, "constitu": [65, 1872], "new_graph": 65, "graphappendingtrac": 65, "proxy_arg": 65, "output_proxi": 65, "node_copi": 65, "ari": [65, 1895], "unari": [65, 1118, 1119, 1459, 1461, 1463, 1858, 1870], "organiz": 65, "shapeprop": 65, "named_modul": [65, 1184, 1416, 1888], "args_it": 65, "load_arg": 65, "map_arg": 65, "fetch_attr": 65, "target_atom": 65, "attr_itr": 65, "nonexist": [65, 1856, 1857], "self_obj": 65, "encompass": 65, "prove": [65, 1869], "disprov": 65, "led": 65, "auxiliari": [65, 1115, 1116, 1118, 1119, 1120, 1124, 1851, 1887], "unord": [65, 1417, 1426], "nondetermin": [65, 900, 1892], "dedupl": 65, "torchvis": [65, 1851, 1852, 1854, 1856, 1895, 1899, 1902, 1916, 1920], "transformed_resnet18": 65, "input_imag": 65, "224": [65, 852, 853, 1854, 1856, 1895], "margin": [65, 1350, 1376, 1408, 1419, 1421, 1464, 1465, 1496, 1523, 1538, 1547, 1581, 1582, 1855, 1916], "commut": 65, "toolbox": 65, "tradit": 65, "luckili": 65, "my_pass": 65, "my_module_transform": 65, "input_valu": 65, "prompt": [65, 1851, 1894], "set_trac": [65, 1189, 1195, 1201, 1854], "examin": [65, 1888, 1895, 1901], "undergon": 65, "subclassm": 65, "untrac": 65, "pre_trac": 65, "post_trac": 65, "sake": 65, "tabular": [65, 671, 1863], "transform_graph": 65, "session": 65, "luck": 65, "input_nod": 65, "stepwis": 65, "excel": 65, "onlin": [65, 1657], "realpython": 65, "pycharm": 65, "vscode": 65, "graphic": [65, 1894], "parlanc": 65, "func_to_trac": 65, "dyn": 65, "155": 65, "__bool__": [65, 1855, 1857], "to_bool": 65, "85": [65, 1419, 1683], "traceerror": [65, 1902], "architectur": [65, 984, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1352, 1459, 1498, 1746, 1880, 1891, 1902], "hyper": [65, 1447, 1856, 1916], "do_activ": 65, "512": [65, 1459, 1460, 1461, 1462, 1463, 1880], "without_activ": 65, "with_activ": 65, "traced_without_activ": 65, "traced_with_activ": 65, "concrete_arg": 65, "truli": [65, 1895], "__torch_function__": [65, 1922], "161": 65, "len_1": 65, "sqrt_1": 65, "mycustomtrac": 65, "traced_graph": 65, "myspecialsubmodul": 65, "submod": 65, "neg_1": 65, "is_leaf_modul": [65, 1921], "sparse_coo_tensor": [65, 535, 572, 1783, 1855, 1859, 1897, 1911], "ones_lik": [65, 1118, 1119, 1124, 1855, 1872, 1880, 1883, 1888, 1897], "zeros_lik": [65, 889, 891, 1855, 1859, 1872, 1880, 1897, 1911], "viabl": [65, 1880], "torch_randn": 65, "gotcha": 65, "bake": [65, 1188, 1193, 1658, 1659, 1898], "dropoutrepro": 65, "assert_clos": [65, 1074, 1076, 1077, 1082, 1083, 1088, 1089, 1090, 1092, 1094, 1852, 1854, 1918], "greatest": [65, 1127, 1310, 1895, 1918], "6207983493804932": 65, "dropoutrepro2": 65, "pytre": [65, 1883], "overspeci": 65, "ph": 65, "shouldn": [65, 958, 1899, 1911, 1915], "fn_or_nam": 65, "callfunct": 65, "fn_to_be_trac": 65, "reassign": [65, 1880], "regener": 65, "unset": [65, 1891], "add_submodul": 65, "subpath": 65, "get_submodul": [65, 1184, 1416], "delete_all_unused_submodul": 65, "delete_submodul": 65, "print_read": 65, "print_output": 65, "date": [65, 1899], "pythoncod": 65, "fxmodul": 65, "pathlik": [65, 1255, 1733, 1899], "owning_modul": 65, "tracer_cl": 65, "tracer_extra": 65, "the_funct": 65, "type_expr": 65, "create_nod": 65, "method_nam": 65, "0th": [65, 1125, 1844], "inserting_befor": 65, "influenc": [65, 1649, 1895, 1911], "eliminate_dead_cod": 65, "topolog": [65, 1895], "attr_1": 65, "is_impur": 65, "bad": [65, 1869, 1895, 1899, 1902], "sound": [65, 1444, 1861, 1916], "erase_nod": 65, "to_eras": 65, "eras": 65, "qualified_nam": 65, "graph_copi": 65, "val_map": 65, "return_output_nod": 65, "slice": [65, 598, 686, 687, 1334, 1335, 1336, 1449, 1451, 1455, 1571, 1572, 1722, 1739, 1740, 1771, 1781, 1832, 1853, 1854, 1858, 1872, 1895, 1897, 1911, 1912, 1915, 1917], "memory_format": [65, 150, 165, 167, 170, 173, 174, 175, 184, 190, 201, 204, 234, 261, 291, 319, 325, 387, 491, 492, 516, 571, 941, 1058, 1059, 1112, 1184, 1416, 1596, 1648, 1711, 1713, 1715, 1850, 1852, 1853, 1855, 1918], "layout": [65, 145, 186, 203, 336, 337, 428, 438, 439, 440, 441, 442, 451, 535, 572, 573, 574, 575, 576, 578, 579, 608, 680, 856, 884, 886, 913, 922, 973, 1058, 1059, 1060, 1070, 1075, 1093, 1111, 1112, 1141, 1142, 1203, 1254, 1270, 1278, 1288, 1316, 1532, 1647, 1648, 1672, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1779, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1822, 1827, 1829, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1859, 1872, 1880, 1897, 1899, 1911, 1916, 1917, 1918], "companion": 65, "__exit__": [65, 1857, 1858, 1899], "arg_transform": 65, "value_remap": 65, "_node_list": 65, "doubli": 65, "on_generate_cod": 65, "make_transform": 65, "transformcodefunc": 65, "insert_pdb": 65, "current_tran": 65, "stuff": 65, "default_valu": 65, "_not_": 65, "tabul": 65, "process_input": 65, "process_output": 65, "python_cod": 65, "root_modul": [65, 784, 1904], "set_codegen": 65, "return_typ": [65, 688, 1036, 1037, 1146, 1205, 1243, 1281, 1284, 1286, 1289, 1312, 1775, 1820, 1825], "all_input_nod": 65, "format_nod": 65, "placeholder_nam": 65, "maybe_return_typenam": 65, "autogener": [65, 1883], "impur": 65, "normalized_argu": 65, "arg_typ": 65, "kwarg_typ": 65, "normalize_to_only_use_kwarg": 65, "vararg": 65, "argskwargspair": 65, "bx": 65, "ax": [65, 1215, 1229, 1233, 1244, 1245, 1246, 1274, 1285, 1424, 1434, 1825, 1895], "prev": [65, 1670], "replace_with": 65, "delete_user_cb": 65, "propagate_meta": 65, "replace_input_with": 65, "old_input": 65, "new_input": 65, "create_proxi": 65, "record_stack_trac": 65, "update_arg": 65, "update_kwarg": 65, "autowrap_modul": 65, "autowrap_funct": 65, "create_arg": 65, "create_args_for_root": 65, "root_fn": 65, "is_modul": 65, "introspect": 65, "disallow": [65, 1899, 1907, 1914], "proxy_factory_fn": 65, "attr": [65, 145, 884, 1285, 1730], "attr_val": 65, "parameter_proxy_cach": 65, "module_qualified_nam": [65, 1921], "path_of_modul": 65, "some_hyperparamet": 65, "indexed_item": 65, "proxied_valu": 65, "garbage_collect_valu": 65, "run_nod": 65, "vice": [65, 451, 594, 1109, 1110, 1408, 1877, 1905, 1913], "versa": [65, 451, 594, 1109, 1110, 1408, 1877, 1905, 1913], "negsigmswapinterpret": 65, "call_self": 65, "args_tail": 65, "boxed_run": 65, "args_list": 65, "promptli": [65, 1256], "fetch_args_kwargs_from_env": 65, "map_nodes_to_valu": 65, "initial_env": 65, "enable_io_process": 65, "negsigmswapxform": 65, "w1": 65, "w2": 65, "m1": [65, 1842, 1843], "m2": [65, 1636, 1842, 1843, 1902], "despit": [65, 1199, 1200, 1885], "stack_1": 65, "stack_2": 65, "sum_2": 65, "max_1": 65, "max_2": 65, "add_2": 65, "onnx": [77, 80, 81, 82, 1630, 1631, 1649, 1650, 1651, 1652, 1653, 1654, 1852, 1871, 1902], "dynamo_export": [77, 1650, 1651, 1895], "opset_vers": [82, 1649, 1895, 1897], "g_cpu": 83, "g_cuda": 83, "bytetensor": [83, 989, 990, 1028, 1029, 1136, 1295, 1302, 1751, 1906, 1914, 1917], "2147483647": 83, "0x8000_0000_0000_0000": [83, 1276, 1906], "0xffff_ffff_ffff_ffff": [83, 1276, 1906], "random_devic": 83, "1516516984916": 83, "new_stat": [83, 1028, 1029, 1302, 1751, 1906], "void": [83, 959, 1001, 1880, 1887], "g_cpu_oth": 83, "abs_": [87, 1855, 1870, 1917], "acosh": [91, 117, 858, 1853, 1855, 1870, 1897], "batch1": [94, 95, 146, 147, 677, 912, 1855], "batch2": [94, 95, 146, 147, 164, 677, 912, 1855], "tensor1": [96, 97, 98, 99, 678, 679, 1278, 1727, 1855], "tensor2": [96, 97, 98, 99, 308, 398, 678, 679, 1278, 1727, 1855], "mat1": [100, 101, 545, 680, 1148, 1204, 1288, 1776, 1779, 1780, 1794, 1853, 1855], "mat2": [100, 101, 407, 545, 680, 924, 1148, 1204, 1288, 1776, 1779, 1780, 1794, 1853, 1855], "mat": [102, 103, 531, 681, 1308, 1708, 1773, 1776, 1794, 1855, 1916], "vec1": [104, 105, 682, 1855], "vec2": [104, 105, 282, 454, 682, 1130, 1690, 1855], "keepdim": [107, 109, 110, 111, 113, 129, 130, 348, 386, 401, 403, 404, 405, 408, 422, 423, 424, 425, 446, 463, 472, 546, 556, 606, 684, 686, 687, 688, 690, 865, 866, 1205, 1236, 1240, 1253, 1271, 1281, 1283, 1284, 1286, 1289, 1311, 1312, 1313, 1314, 1425, 1554, 1643, 1699, 1702, 1796, 1797, 1801, 1839, 1840, 1853, 1855, 1870, 1912], "rtol": [108, 338, 685, 899, 900, 1173, 1238, 1241, 1654, 1854, 1855, 1918], "atol": [108, 338, 685, 899, 900, 1173, 1238, 1241, 1250, 1654, 1854, 1855, 1882, 1918], "08": [108, 338, 685, 922, 1173, 1230, 1351, 1430, 1558, 1658, 1659, 1660, 1662, 1668, 1669, 1672, 1685, 1757, 1855], "equal_nan": [108, 338, 685, 1173, 1855, 1918], "arcco": [116, 1855, 1897, 1918], "acosh_": [118, 1855, 1870], "arccosh": [118, 1855, 1897], "arcsin": [120, 872, 1855, 1897, 1911], "arcsinh": [122, 1855, 1897], "atan2_": [125, 1855, 1870], "arctan2": [125, 1855, 1897], "arctan": [126, 1855, 1897], "arctanh": [128, 1855, 1897], "cl": [134, 1882, 1902, 1907, 1922], "asinh": [138, 860, 1853, 1855, 1870, 1897, 1911], "atan": [142, 622, 623, 861, 1853, 1855, 1870, 1897, 1911], "atanh": [144, 863, 1853, 1855, 1870, 1897, 1911], "wrt": [145, 899, 900], "60521": [145, 884], "issuecom": [145, 884], "867061780": [145, 884], "texttt": [148, 149, 685, 1173, 1324, 1918], "bernoulli": [149, 751, 1328, 1354, 1355, 1356, 1357, 1361, 1368, 1386, 1500, 1501, 1502, 1503, 1508, 1852, 1855, 1870, 1897, 1919], "preserve_format": [150, 165, 167, 170, 173, 174, 175, 184, 201, 204, 234, 261, 291, 319, 387, 516, 571, 941, 1059, 1112, 1648, 1711, 1713, 1715, 1850, 1914], "minlength": [151, 915, 1855], "bitwise_and": [153, 1853, 1855, 1897], "bitwise_left_shift": [155, 1855, 1897], "bitwise_not": [157, 1853, 1855, 1870, 1897], "bitwise_or": [159, 1853, 1855, 1897], "bitwise_right_shift": [161, 1855, 1897], "bitwise_xor": [163, 1853, 1855, 1897], "uint8": [167, 236, 608, 684, 690, 1109, 1700, 1703, 1704, 1727, 1902, 1913, 1914, 1916, 1917, 1923], "cauchi": [168, 1852, 1877, 1885, 1897, 1919], "dfrac": [168, 371, 599, 1351, 1497, 1604, 1637, 1640], "complex32": [174, 1344, 1345, 1346, 1490, 1491, 1492, 1652, 1917, 1918], "int8": [175, 441, 720, 916, 917, 918, 919, 920, 921, 1109, 1265, 1266, 1267, 1268, 1902, 1905, 1913, 1914, 1917, 1923], "input2": [178, 452, 453, 509, 751, 937, 1337, 1350, 1351, 1408, 1425, 1486, 1496, 1497, 1538, 1855, 1876, 1895], "clamp_": [183, 1855, 1870], "uncoalesc": [185, 322, 1787], "coo": [185, 317, 322, 336, 605, 1148, 1776, 1779, 1784, 1785, 1786, 1787, 1788, 1789, 1852, 1864, 1914, 1918], "inttensor": [186, 203, 1158, 1273, 1274, 1359, 1914, 1917], "csr": [186, 203, 337, 574, 579, 1360, 1776, 1779, 1780, 1786, 1789, 1864, 1918], "sparse_csr": [186, 203, 574, 579, 1779, 1780, 1782, 1786, 1789, 1911], "nnz": [186, 535, 574, 575, 576, 578, 579, 899, 1316, 1777, 1779, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1911], "mkl": [186, 203, 1852, 1879, 1894, 1897, 1911], "routin": [186, 203, 867, 936, 1256, 1775, 1802, 1911], "downcast": [186, 203], "to_sparse_csr": [186, 203, 575, 576, 1779, 1780, 1855, 1897, 1911], "conj_phys": [189, 949, 1853, 1855, 1897, 1911], "contiguous_format": [190, 325, 491, 492, 1058, 1596, 1914], "non_block": [191, 204, 571, 594, 1184, 1416, 1629, 1853, 1855, 1880, 1913], "copysign": [193, 1855, 1897], "fweight": [200, 956, 1855], "aweight": [200, 956, 1855], "sparse_dim": [213, 536, 537, 1776, 1779, 1783, 1787, 1855, 1897, 1911], "resize_": [216, 492, 1114, 1205, 1854, 1855, 1856, 1870, 1904, 1913], "resize_as_": [216, 1855, 1870, 1911], "set_": [216, 491, 1855], "transpose_": [216, 1855, 1911], "zero_": [216, 1229, 1506, 1855, 1870, 1871, 1888, 1911], "dim1": [220, 222, 223, 560, 583, 584, 1045, 1047, 1048, 1218, 1805, 1822, 1855], "dim2": [220, 222, 223, 1045, 1047, 1048, 1218, 1855], "digamma": [226, 1853, 1855, 1870, 1897, 1912], "rounding_mod": [229, 230, 231, 232, 1052, 1053, 1102, 1105, 1721, 1830, 1855], "split_size_or_sect": [235, 296, 610, 1790], "eq": [238, 1853, 1855, 1870, 1897], "erf": [241, 630, 631, 1853, 1855, 1870, 1897, 1911, 1912], "erfc": [243, 632, 633, 1853, 1855, 1870, 1897, 1912], "front": [248, 1256, 1419, 1871, 1883], "lambd": [252, 292, 1372, 1453, 1518, 1574, 1655, 1855], "fill_valu": [254, 439, 1111, 1112, 1339, 1853, 1855, 1880], "tall": [254, 1242, 1247, 1882], "start_dim": [257, 1096, 1362, 1855], "end_dim": [257, 1096, 1362, 1855], "float_pow": [263, 1855, 1897], "floor_divid": [267, 1052, 1855, 1897, 1911], "divisor": [270, 271, 481, 482, 759, 760, 1052, 1102, 1105, 1127, 1330, 1331, 1363, 1467, 1483, 1484, 1721, 1830], "fmod": [271, 1721, 1853, 1855, 1897], "mantissa": [274, 474, 1107, 1207, 1855, 1880, 1891], "gcd": [277, 1853, 1855, 1897], "ge": [279, 1139, 1277, 1373, 1374, 1519, 1520, 1853, 1855, 1870, 1897], "ordin": [283, 1784, 1785, 1786, 1788, 1789, 1914], "greater_equ": [288, 1855, 1897], "gt": [290, 1138, 1853, 1855, 1870, 1885, 1897], "hypot": [298, 1853, 1855, 1897], "i0": [300, 1203, 1765, 1855, 1897, 1912], "igamma": [302, 1853, 1855, 1897], "igammac": [304, 1853, 1855, 1897], "3100": [305, 476, 1154, 1719], "3553j": [305, 476, 1154, 1719], "5445": [305, 476, 1154, 1719], "7896j": [305, 476, 1154, 1719], "6492": [305, 476, 1154, 1719], "0633j": [305, 476, 1154, 1719], "0638": [305, 476, 1154, 1719], "8119j": [305, 476, 1154, 1719], "3553": [305, 1154], "7896": [305, 1154], "0633": [305, 1154, 1230, 1872], "8119": [305, 1154], "index_add_": [306, 889, 1155, 1156, 1855, 1892], "index_copy_": [308, 1855], "index_fill_": [310, 1855, 1870], "index_put_": [312, 1855], "include_self": [315, 508, 509, 1157, 1736, 1853, 1855], "identit": 315, "amax": [315, 509, 687, 688, 1779, 1853, 1855, 1897], "amin": [315, 509, 686, 688, 1779, 1853, 1855, 1897], "fill_": [315, 1184, 1209, 1416, 1722, 1855, 1870, 1888, 1913], "72": [315, 608, 1137], "uint8_t": [320, 1652], "retain_grad": [329, 1855, 1877, 1897], "n_fft": [345, 547, 1181, 1798, 1855], "hop_length": [345, 547, 1181, 1798, 1855], "win_length": [345, 547, 1181, 1798, 1855], "center": [345, 547, 770, 776, 1077, 1181, 1480, 1515, 1526, 1584, 1669, 1691, 1759, 1798, 1855, 1877, 1897, 1916], "onesid": [345, 547, 1181, 1798, 1853, 1855], "return_complex": [345, 547, 1181, 1798, 1855], "element_s": [347, 428, 1855, 1870, 1897, 1913], "lcm": [350, 1855, 1897], "ldexp": [352, 1107, 1855, 1897], "le": [354, 1211, 1373, 1374, 1519, 1520, 1853, 1855, 1870, 1897, 1918], "lerp": [356, 1855, 1897], "less_equ": [360, 1855, 1897], "lgamma": [362, 642, 643, 1853, 1855, 1897], "ln": [371, 1212, 1912], "logical_and": [377, 1853, 1855, 1897], "logical_not": [379, 1853, 1855, 1870, 1872, 1897], "logical_or": [381, 1853, 1855, 1897], "logical_xor": [383, 1855, 1897], "pivot": [390, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1273, 1274, 1275, 1701, 1855], "get_info": [390, 1273], "lu_data": [391, 1274, 1275, 1855], "lu_pivot": [391, 1274, 1275, 1855], "masked_fill_": [393, 1855, 1870, 1871], "booltensor": [394, 396, 726, 1277, 1459, 1847, 1914, 1917], "masked_scatter_": [395, 1855], "mvlgamma": [419, 1855, 1897], "posinf": [420, 421, 1310, 1855], "neginf": [420, 421, 1310, 1855], "nan_to_num": [421, 1855, 1897], "interpol": [424, 472, 776, 777, 778, 810, 1209, 1313, 1468, 1469, 1470, 1480, 1515, 1584, 1585, 1586, 1702, 1837, 1855, 1904], "ne": [432, 1604, 1637, 1645, 1853, 1855, 1870, 1897], "8182e": 438, "5765e": 438, "41": [438, 1060, 1242, 1587, 1636, 1701], "0545e": 438, "0949e": 438, "4842e": [438, 1060], "0000e": [438, 1060, 1100, 1261, 1270, 1310, 1636, 1757, 1759, 1760, 1765, 1766], "00": [438, 1060, 1100, 1261, 1270, 1310, 1636, 1653, 1757, 1759, 1760, 1765, 1766, 1854, 1895], "141592": [439, 1111], "1416": [439, 1041, 1111, 1816], "from_numpi": [441, 870, 871, 1816], "array_lik": [441, 870, 1784, 1785, 1786, 1787, 1788, 1789, 1816, 1872], "nextaft": [444, 1853, 1855, 1897], "fro": [446, 1215, 1236, 1240, 1253, 1614, 1623, 1643, 1855], "not_equ": [449, 1855, 1897], "resolve_conj": [451, 949, 1855, 1897], "resolve_neg": [451, 1855, 1897], "input3": [453, 1855], "transpos": [453, 584, 585, 608, 683, 732, 733, 734, 937, 1057, 1124, 1213, 1214, 1220, 1223, 1226, 1233, 1244, 1247, 1347, 1348, 1349, 1467, 1493, 1494, 1495, 1565, 1603, 1632, 1689, 1802, 1804, 1805, 1811, 1825, 1853, 1855, 1870, 1872, 1877, 1891, 1895, 1897, 1904, 1911, 1915, 1917], "polygamma": [459, 1855, 1897, 1912], "q_per_channel_axi": [466, 467, 1855, 1897], "zero_point": [467, 469, 729, 730, 731, 732, 733, 734, 735, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 761, 763, 764, 765, 766, 768, 771, 772, 790, 793, 810, 811, 812, 813, 816, 843, 1071, 1072, 1703, 1704, 1705, 1706, 1707, 1855, 1902, 1903], "qtensor": [471, 1855], "uniform": [474, 599, 914, 1352, 1434, 1498, 1710, 1711, 1759, 1852, 1853, 1875, 1897, 1919], "queu": [479, 964, 1880], "life": [479, 961], "cycl": [479, 884, 961, 1677, 1683, 1877, 1901], "unexpectedli": [479, 1917], "maxnorm": [483, 484, 1722, 1855], "repeat_interleav": [485, 1837, 1855, 1897, 1904], "output_s": [486, 732, 733, 734, 757, 758, 1321, 1322, 1323, 1325, 1326, 1327, 1348, 1363, 1364, 1365, 1412, 1413, 1414, 1467, 1474, 1475, 1476, 1477, 1478, 1479, 1509, 1510, 1511, 1542, 1543, 1544, 1723, 1853, 1855, 1872], "is_leaf": [487, 1855, 1870, 1872, 1897], "saved_weight": 488, "loaded_weight": 488, "5503": 488, "4926": [488, 1888], "1158": 488, "8303": 488, "1007": 488, "9853": 488, "2316": 488, "6606": 488, "resiz": [491, 492, 515, 536, 537, 1109, 1110, 1114, 1468, 1515, 1526, 1853, 1855, 1870, 1897, 1913], "shift": [497, 917, 920, 1077, 1084, 1328, 1334, 1335, 1336, 1361, 1455, 1508, 1728, 1855, 1858], "decim": [499, 500, 1730, 1855, 1891, 1923], "scatter_": [504, 507, 1734, 1855], "scatter_add_": [505, 506, 1735, 1837, 1855], "scatter_reduce_": [505, 508, 1736, 1855], "4600": 505, "2300": 505, "scatter_reduc": [509, 1837, 1853, 1855, 1897], "sgn": [514, 1106, 1755, 1855, 1870, 1872, 1897, 1911], "int16": [516, 1109, 1266, 1913, 1914, 1917, 1923], "dense_dim": [534, 536, 537, 574, 575, 576, 578, 579, 1787, 1855, 1897, 1911], "nse": [535, 1911], "randint": [535, 915, 956, 1100, 1289, 1339, 1465, 1498, 1499, 1783, 1855, 1859, 1871, 1897, 1916, 1919], "6550": 535, "2397": 535, "1611": 535, "0779": [535, 1220, 1698, 1847], "2326": 535, "0558": 535, "4711": 535, "9678": 535, "5138": 535, "0411": 535, "9417": 535, "5158": 535, "0793": 535, "0036": [535, 1281], "2569": 535, "1055": 535, "sparse_coo": [535, 574, 1316, 1779, 1782, 1783, 1787, 1911, 1914], "split_siz": [538, 1790, 1855], "squeez": [544, 684, 686, 687, 688, 690, 1205, 1271, 1281, 1283, 1284, 1286, 1289, 1311, 1314, 1497, 1699, 1783, 1796, 1797, 1801, 1839, 1840, 1853, 1855, 1870, 1895, 1897, 1904, 1915], "pad_mod": [547, 1798, 1855], "typedstorag": [548, 1852, 1913], "untypedstorag": [548, 604, 1852, 1913], "untyped_storag": 548, "compute_uv": [558, 1247, 1248, 1802, 1855], "axis0": [559, 1804, 1855], "axis1": [559, 1804, 1855], "dim0": [560, 583, 584, 1805, 1822, 1855], "indices_or_sect": [569, 1055, 1147, 1817, 1845], "rep": 570, "5044": 571, "0005": [571, 1681, 1687], "3310": 571, "0584": [571, 1802], "cuda0": [571, 1880, 1886, 1917], "masked_grad": [572, 1855], "sparse_mask": [572, 1855, 1897], "mkldnn": [573, 1193, 1852, 1897], "sparsedim": 574, "blocksiz": [574, 575, 576, 1784, 1785, 1786, 1855, 1911], "sparse_csc": [574, 578, 1782, 1786, 1788, 1911], "sparse_bsr": [574, 576, 1785, 1786, 1911], "sparse_bsc": [574, 575, 1784, 1786, 1911], "bsr": [574, 576, 1785, 1786, 1918], "bsc": [574, 575, 1784, 1786, 1918], "csc": [574, 578, 1786, 1788, 1918], "minu": [574, 575, 576, 578, 579, 1912], "crow_indic": [574, 576, 579, 1777, 1779, 1780, 1782, 1785, 1786, 1789, 1855, 1897, 1911, 1918], "col_indic": [574, 576, 579, 1779, 1780, 1782, 1785, 1786, 1789, 1855, 1897, 1911, 1918], "sparsecsr": [574, 1822, 1911], "row_indic": [575, 578, 1784, 1788, 1855, 1897, 1911, 1918], "ccol_indic": [575, 578, 1784, 1788, 1855, 1897, 1911, 1918], "_nnz": [577, 578, 579, 1897], "012766935862600803": 580, "5415473580360413": 580, "08909505605697632": 580, "7729271650314331": 580, "unitriangular": [585, 1246, 1825, 1855], "tril": [587, 1565, 1855, 1897], "triu": [589, 1608, 1825, 1855, 1895, 1897], "trunc": [593, 668, 669, 678, 1052, 1095, 1102, 1105, 1730, 1853, 1855, 1870, 1897, 1911], "sizedim": 598, "return_invers": [600, 601, 1834, 1835, 1855], "return_count": [600, 601, 1834, 1835, 1855], "unsqueez": [603, 1077, 1204, 1244, 1359, 1435, 1608, 1819, 1853, 1855, 1882, 1897, 1904, 1911, 1915, 1916], "subspac": [608, 1247, 1422, 1691, 1802, 1803], "span": [608, 1018, 1019, 1352, 1802, 1901, 1907], "foral": 608, "proportion": [608, 776, 1468, 1584], "met": [608, 1223, 1230, 1231, 1242, 1256, 1463], "9482": [608, 1161], "0310": 608, "4999": 608, "5316": 608, "1520": 608, "7472": 608, "5617": 608, "8649": 608, "4724": [608, 1888], "0334": 608, "2976": 608, "8499": 608, "2109": 608, "9913": 608, "9607": 608, "6123": 608, "1064483442": 608, "1124191867": 608, "1069546515": 608, "1089989247": 608, "1105482831": 608, "1061112040": 608, "1057999968": 608, "1084397505": 608, "1071760287": 608, "1123489973": 608, "1097310419": 608, "1084649136": 608, "1101533110": 608, "1073668768": 608, "1082790149": 608, "1088634448": 608, "1000000000": 608, "0047": 608, "0310j": 608, "5316j": 608, "7472j": 608, "8649j": 608, "0334j": 608, "8499j": 608, "9913j": 608, "6123j": 608, "202": 608, "154": [608, 1894], "59": [608, 1827, 1829], "182": 608, "243": [608, 1181, 1802], "253": 608, "188": 608, "252": [608, 1894], "191": 608, "63": [608, 1894, 1902], "240": 608, "227": 608, "165": 608, "190": 608, "128": [608, 711, 719, 720, 747, 755, 785, 810, 811, 1337, 1351, 1378, 1403, 1425, 1464, 1465, 1497, 1565, 1871, 1872, 1902, 1904, 1905, 1907, 1914, 1917], "146": 608, "106": 608, "205": 608, "206": 608, "189": 608, "95": [608, 1679, 1682, 1683], "147": 608, "89": [608, 1709], "43": 608, "87": 608, "235": 608, "226": 608, "254": [608, 1894], "111": [608, 1653, 1895], "117": 608, "177": 608, "xlogi": [613, 1855, 1897, 1912], "aot_graph": [671, 1863], "aot_joint_graph": [671, 1863], "ddp_graph": [671, 1863], "graph_cod": [671, 1863], "toggl": [671, 1880], "torch_log": [671, 1863], "supress": 671, "silenc": 671, "lowest": [671, 934, 1310, 1613, 1614, 1622, 1623, 1712, 1713, 1882, 1918], "notset": 671, "joint": [671, 1863], "ddpoptim": [671, 1863], "unregist": [671, 1863, 1867, 1895], "3348": 674, "5889": 674, "1584": 674, "2294": [674, 1283], "2004": 674, "3690": 674, "7298": [674, 1720], "hyperbol": [675, 873, 876, 954, 1456, 1770, 1815], "uniform_": [675, 876, 914, 1852, 1855, 1870, 1875, 1882, 1912, 1919], "3192": 675, "9915": 675, "9674": 675, "7151": 675, "7791": 675, "3120": [675, 951], "2979": 675, "1341": 675, "_i": [676, 677, 678, 679, 680, 912, 914, 917, 920, 924, 939, 1052, 1102, 1207, 1209, 1305, 1464, 1694, 1698, 1717, 1753, 1799, 1847, 1912], "0202": 676, "0985": 676, "3506": [676, 1273], "6056": 676, "19": [676, 737, 937, 1413, 1854, 1895, 1911], "3944": 676, "9732": 676, "3497": 676, "6245": [676, 1215], "4022": [676, 1039, 1802], "3743": 676, "7724": 676, "5811": 676, "8017": 676, "7695": 676, "3930": 676, "3672": [676, 957, 1216], "1450": [676, 1783], "6971": 676, "0736": [676, 1888], "0994": 676, "3216": 676, "7845": 676, "1610": 676, "1868": 676, "4090": 676, "9902": [676, 957, 1216], "3667": [676, 951], "3925": 676, "6147": 676, "sum_": [677, 1181, 1235, 1252, 1329, 1330, 1331, 1344, 1345, 1346, 1352, 1384, 1385, 1404, 1419, 1423, 1425, 1796, 1797, 1798, 1818, 1823, 1839, 1840, 1841, 1912], "mathbin": [677, 680, 681, 912, 924, 1780], "doubletensor": [677, 678, 679, 680, 681, 912, 1743, 1914, 1917], "tensorfloat32": [677, 680, 912, 924, 1278, 1288, 1344, 1345, 1346, 1347, 1348, 1349, 1403, 1490, 1491, 1492, 1493, 1494, 1495, 1532, 1745, 1880, 1891], "rocm": [677, 680, 912, 924, 1278, 1288, 1344, 1345, 1346, 1347, 1348, 1349, 1369, 1387, 1403, 1852], "6311": 677, "0503": 677, "9768": [677, 1888], "0362": 677, "1653": 677, "8185": 677, "4255": [677, 1305], "6760": 677, "9453": 677, "5743": 677, "8202": 677, "3691": 677, "0943": 677, "1109": [677, 1370, 1766], "4730": [677, 1818], "histor": [678, 1014, 1356, 1879, 1888, 1893], "t1": [678, 679, 871, 1137, 1596, 1856, 1907, 1908], "2312": [678, 1783], "6496": 678, "1312": 678, "0428": 678, "4292": 678, "1030": 678, "5369": 678, "9829": 678, "0430": 678, "8635": 679, "6391": 679, "6174": 679, "7617": 679, "5879": 679, "7388": 679, "8353": 679, "6249": 679, "6511": 679, "8716": 680, "4671": 680, "3746": 680, "7573": 680, "9555": 680, "8681": 680, "3768": 681, "5565": 681, "otim": [682, 1204, 1367, 1514], "conj": [683, 950, 1073, 1074, 1076, 1078, 1085, 1087, 1091, 1092, 1094, 1213, 1214, 1220, 1222, 1241, 1725, 1726, 1853, 1855, 1885, 1897, 1917], "mh": [683, 935, 1220, 1802, 1855, 1897, 1915, 1917], "lvert": [685, 1173, 1464, 1551, 1918], "rvert": [685, 1173, 1918], "leq": [685, 913, 914, 951, 1075, 1077, 1173, 1204, 1208, 1223, 1229, 1339, 1358, 1419, 1421, 1423, 1499, 1550, 1553, 1756, 1798, 1875, 1912], "elementwis": [685, 951, 973, 1000, 1001, 1100, 1102, 1320, 1379, 1380, 1381, 1453, 1574, 1838, 1857, 1872, 1885, 1912], "07": [685, 810, 811, 812, 813, 816, 935, 936, 1060, 1221, 1224, 1229, 1241, 1242, 1248, 1271, 1274, 1603, 1654, 1661, 1760, 1765, 1802, 1895], "09": [685, 1661, 1673, 1918], "8177": 686, "4878": 686, "2491": 686, "9130": 686, "7158": 686, "1775": 686, "0992": 686, "4817": 686, "0053": 686, "0164": 686, "3738": 686, "0507": [686, 1895], "9700": 686, "1106": 686, "0318": 686, "0816": [686, 1273], "6451": 687, "4866": 687, "2987": 687, "3312": 687, "5744": 687, "2980": [687, 1872], "8397": 687, "2713": 687, "9128": 687, "9214": 687, "7268": 687, "2995": 687, "9023": [687, 1214], "4853": 687, "9075": 687, "6165": 687, "180": [689, 1041, 1709], "14159": [689, 1816], "135": 689, "45": [689, 1335, 1336, 1380, 1381, 1455, 1636, 1895], "ao": [691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 1902, 1903, 1904], "batch_norm": [691, 692, 1193, 1855, 1897], "3d": [692, 695, 698, 726, 731, 734, 758, 760, 765, 770, 1285, 1323, 1327, 1331, 1334, 1336, 1346, 1349, 1356, 1357, 1363, 1365, 1379, 1381, 1411, 1422, 1468, 1476, 1479, 1480, 1484, 1492, 1495, 1503, 1509, 1511, 1526, 1541, 1553, 1584, 1872, 1891, 1902, 1911, 1916], "bn": [693, 694, 695, 696, 697, 698, 805, 851, 1057, 1193, 1893, 1898, 1902, 1903], "qat": [703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 721, 722, 723, 724, 783, 784, 837, 1902, 1903, 1904], "in_channel": [703, 704, 705, 706, 707, 708, 709, 710, 716, 717, 718, 721, 722, 729, 730, 731, 732, 733, 734, 1193, 1344, 1345, 1346, 1347, 1348, 1349, 1392, 1393, 1394, 1395, 1396, 1397], "out_channel": [703, 704, 705, 706, 707, 708, 709, 710, 716, 717, 718, 721, 722, 729, 730, 731, 732, 733, 734, 1193, 1344, 1345, 1346, 1347, 1348, 1349, 1392, 1393, 1394, 1395, 1396, 1397], "kernel_s": [703, 704, 705, 706, 707, 708, 709, 710, 716, 717, 718, 721, 722, 729, 730, 731, 732, 733, 734, 759, 760, 773, 774, 1184, 1193, 1329, 1330, 1331, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1364, 1365, 1384, 1385, 1392, 1393, 1394, 1395, 1396, 1397, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1467, 1482, 1483, 1484, 1493, 1494, 1495, 1509, 1510, 1511, 1536, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1583, 1706, 1707, 1853, 1855, 1916], "dilat": [703, 704, 705, 706, 707, 708, 709, 710, 716, 717, 718, 721, 722, 729, 730, 731, 732, 733, 734, 763, 764, 765, 773, 774, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1392, 1393, 1394, 1395, 1396, 1397, 1409, 1410, 1411, 1467, 1490, 1491, 1492, 1493, 1494, 1495, 1509, 1539, 1540, 1541, 1583, 1706, 1707, 1853, 1855, 1895], "padding_mod": [703, 704, 705, 706, 707, 708, 709, 710, 716, 717, 718, 721, 722, 729, 730, 731, 732, 733, 734, 763, 764, 765, 1344, 1345, 1346, 1347, 1348, 1349, 1392, 1393, 1394, 1395, 1396, 1397, 1515, 1853, 1855], "ep": [703, 704, 705, 706, 707, 708, 714, 715, 727, 728, 740, 742, 743, 744, 745, 786, 810, 811, 812, 813, 816, 817, 899, 900, 1193, 1269, 1320, 1334, 1335, 1336, 1351, 1370, 1371, 1379, 1380, 1381, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1425, 1430, 1455, 1459, 1461, 1463, 1464, 1485, 1497, 1512, 1516, 1517, 1525, 1529, 1551, 1554, 1558, 1581, 1604, 1637, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1672, 1685, 1705, 1853, 1855, 1882, 1885, 1912, 1923], "momentum": [703, 704, 705, 706, 707, 708, 714, 715, 727, 728, 742, 743, 744, 1334, 1335, 1336, 1379, 1380, 1381, 1389, 1390, 1391, 1398, 1399, 1400, 1455, 1485, 1525, 1662, 1669, 1671, 1677, 1683, 1685, 1853, 1855, 1888, 1898], "freeze_bn": [703, 704, 705, 706, 707, 708], "qconfig": [703, 704, 705, 706, 707, 708, 709, 710, 711, 721, 722, 723, 724, 779, 780, 782, 785, 786, 787, 788, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 852, 853, 1921], "batchnorm1d": [703, 706, 1389, 1455, 1485, 1893, 1904], "fakequant": [703, 704, 705, 706, 707, 708, 709, 710, 711, 721, 722, 723, 724, 793, 853], "weight_fake_qu": [703, 704, 705, 706, 707, 708, 709, 710, 721, 722], "quant": [703, 704, 705, 706, 707, 708, 709, 710, 711, 721, 722, 723, 781, 783, 784, 829, 852, 853, 1071, 1072, 1902, 1903], "batchnorm3d": [705, 708, 710, 715, 1391, 1455, 1485, 1904], "num_featur": [714, 715, 727, 728, 742, 743, 744, 1184, 1334, 1335, 1336, 1379, 1380, 1381, 1389, 1390, 1391, 1398, 1399, 1400, 1416, 1455, 1517, 1888], "qint8": [719, 720, 747, 752, 755, 756, 763, 764, 765, 772, 783, 785, 790, 811, 832, 849, 850, 852, 853, 1652, 1703, 1704, 1902, 1904, 1905, 1913, 1917, 1918], "highlight": [721, 722, 1857], "from_float": [723, 729, 730, 731, 736, 737, 747, 755, 788, 808, 814, 817, 829, 1902], "qparams_dict": [723, 729, 730, 731, 755], "hidden_s": [725, 751, 752, 756, 1368, 1369, 1386, 1387, 1431, 1432, 1433, 1855], "num_lay": [725, 751, 1368, 1386, 1431, 1432, 1460, 1462, 1855, 1888], "bidirect": [725, 751, 1368, 1386, 1431, 1432, 1855], "_lstmlayer": 725, "nnqa": 725, "h0": [725, 751, 753, 1368, 1386, 1431], "hn": [725, 751, 753, 1368, 1369, 1386, 1431], "cn": [725, 753, 1184, 1386], "weight_ih": [725, 1369, 1387, 1433], "weight_hh": [725, 1369, 1387, 1433], "dequant": [726, 779, 781, 783, 784, 790, 792, 852, 1855, 1897, 1903, 1905, 1918, 1920], "mha": [726, 1422], "conver": 726, "key_padding_mask": [726, 1422, 1855], "need_weight": [726, 1422, 1855], "attn_mask": [726, 1422, 1565, 1855], "average_attn_weight": [726, 1422, 1855], "is_caus": [726, 1422, 1462, 1463, 1565, 1855], "attn_output_weight": [726, 1422], "unmask": [726, 1459], "causal": [726, 1422, 1460, 1461, 1462, 1463, 1565], "attn_weight": [726, 1422, 1565], "attn_output": [726, 1422], "quint8": [729, 730, 731, 732, 733, 734, 736, 737, 747, 763, 764, 765, 772, 783, 785, 790, 810, 811, 812, 813, 816, 818, 850, 852, 1652, 1703, 1704, 1705, 1706, 1707, 1902, 1904, 1905, 1913, 1917, 1918], "learnabl": [729, 730, 731, 732, 733, 734, 736, 737, 747, 751, 755, 1334, 1335, 1336, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1359, 1360, 1368, 1369, 1371, 1379, 1380, 1381, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1424, 1431, 1433, 1455, 1507, 1559, 1888], "q_input": [729, 730, 731, 732, 733, 734, 763, 764, 765], "quantize_per_tensor": [729, 730, 731, 732, 733, 734, 747, 748, 749, 763, 764, 765, 1705, 1706, 1707, 1855, 1897, 1902], "unequ": [730, 731, 732, 733, 734, 1345, 1346, 1348, 1349], "50": [730, 732, 733, 734, 763, 815, 1239, 1289, 1330, 1331, 1339, 1344, 1345, 1346, 1348, 1349, 1364, 1365, 1384, 1385, 1409, 1410, 1411, 1466, 1492, 1493, 1495, 1499, 1510, 1511, 1670, 1813, 1872], "56": 731, "output_pad": [732, 733, 734, 1347, 1348, 1349, 1395, 1396, 1397, 1493, 1494, 1495, 1853, 1855], "qnnpack": [732, 733, 747, 755, 846, 847, 850, 852, 853, 1902, 1904], "convtranspose2d": [732, 1396, 1494, 1837, 1904], "nnq": [732, 733, 734, 779, 780, 781, 855, 1902], "downsampl": [732, 733, 734, 1348, 1468, 1480, 1515, 1526], "upsampl": [732, 733, 734, 770, 777, 778, 810, 1348, 1469, 1470, 1480, 1515, 1526, 1585, 1586], "fbgemm": [733, 734, 747, 755, 824, 846, 847, 850, 852, 853, 1902, 1903], "cubic": [734, 1365, 1511, 1515], "num_embed": [736, 737, 1359, 1360, 1507], "embedding_dim": [736, 737, 1359, 1360, 1388, 1506, 1507], "padding_idx": [736, 1359, 1360, 1506, 1507, 1853, 1855], "scale_grad_by_freq": [736, 737, 1359, 1360, 1506, 1507, 1853, 1855], "overwritten": [736, 737, 747, 755, 788, 832, 852, 1877, 1918], "_embed": [736, 737], "_dim": [736, 737, 1359], "include_last_offset": [737, 1360, 1507, 1855], "embedding_bag": [737, 1855, 1897], "floatfunct": [738, 1902], "activation_post_process": [738, 790, 1902], "add_relu": [738, 739, 748, 1865, 1897, 1920], "add_scalar": [738, 739, 748, 1897, 1916, 1920], "mul_scalar": [738, 739, 748, 1897, 1920], "collector": 739, "f_add": 739, "num_channel": [740, 1371, 1871], "normalized_shap": [745, 1388, 1529, 1853, 1855, 1872], "elementwise_affin": [745, 1388], "negative_slop": [746, 771, 1402, 1530, 1531, 1853, 1855, 1875], "slope": [746, 771, 1402, 1447, 1875], "bias_": [747, 755], "_featur": [747, 755, 772, 1324, 1337, 1401, 1403, 1486, 1532], "from_refer": [747, 755], "ref_qlinear": [747, 755], "output_scal": [747, 750, 1705, 1855], "output_zero_point": [747, 750, 1705, 1855], "q_add": 748, "qint32": [748, 749, 1652, 1703, 1704, 1902, 1905, 1913, 1917, 1918], "x_0": [749, 1823], "gate": [751, 752, 1367, 1368, 1369, 1386, 1445, 1514, 1568], "r_t": [751, 1368, 1668], "w_": [751, 1322, 1323, 1326, 1327, 1330, 1331, 1333, 1341, 1342, 1343, 1345, 1346, 1348, 1349, 1352, 1364, 1365, 1368, 1369, 1385, 1386, 1387, 1410, 1411, 1413, 1414, 1423, 1428, 1429, 1431, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1468, 1469, 1470, 1471, 1472, 1473, 1511, 1515], "x_t": [751, 885, 887, 1334, 1335, 1336, 1368, 1379, 1380, 1381, 1386, 1431, 1455, 1656], "b_": [751, 1368, 1369, 1386, 1387, 1404, 1431, 1433, 1818, 1911], "hr": [751, 1368, 1369, 1386, 1885], "h_": [751, 1322, 1323, 1326, 1327, 1330, 1331, 1337, 1342, 1343, 1345, 1346, 1348, 1349, 1364, 1365, 1368, 1369, 1385, 1386, 1403, 1410, 1411, 1412, 1413, 1414, 1428, 1429, 1431, 1433, 1438, 1439, 1441, 1442, 1468, 1469, 1470, 1472, 1473, 1486, 1511, 1515], "z_t": [751, 1368], "iz": [751, 1368, 1369], "hz": [751, 969, 1368, 1369, 1916], "n_t": [751, 1368], "h_t": [751, 1368, 1386, 1431], "hadamard": [751, 1368, 1369, 1386, 1387], "multilay": [751, 1368, 1386], "_t": [751, 1368, 1386, 1669, 1671, 1882, 1898], "b_ih": [751, 1368, 1369, 1386, 1387, 1431, 1433, 1855], "b_hh": [751, 1368, 1369, 1386, 1387, 1431, 1433, 1855], "h_0": [751, 1368, 1386, 1387, 1431], "seq_len": [751, 1368, 1386, 1422, 1431], "pack_padded_sequ": [751, 1368, 1386, 1431, 1629, 1631, 1632, 1884], "num_direct": [751, 1368, 1386, 1431], "h_n": [751, 1368, 1386, 1431], "input1": [751, 1337, 1350, 1351, 1408, 1425, 1486, 1496, 1497, 1538, 1855, 1876, 1895], "_size": [751, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1330, 1331, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1364, 1365, 1368, 1369, 1384, 1385, 1386, 1387, 1409, 1410, 1411, 1412, 1413, 1414, 1431, 1433, 1467, 1511], "_layer": [751, 1368, 1386, 1431], "_direct": 751, "output1": [751, 1324, 1876, 1895], "output2": [751, 1324], "weight_ih_l": [751, 1368, 1386, 1431], "w_ir": [751, 1368], "w_iz": [751, 1368], "w_in": [751, 1368], "weight_hh_l": [751, 1368, 1386, 1431], "w_hr": [751, 1368], "w_hz": [751, 1368], "w_hn": [751, 1368], "bias_ih_l": [751, 1368, 1386, 1431], "b_ir": [751, 1368], "b_iz": [751, 1368], "b_in": [751, 1368], "bias_hh_l": [751, 1368, 1386, 1431], "b_hr": [751, 1368], "b_hz": [751, 1368], "b_hn": [751, 1368], "mathcal": [751, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1359, 1360, 1368, 1369, 1386, 1387, 1401, 1403, 1431, 1433, 1434, 1455, 1714, 1875, 1885], "subtli": [751, 1368, 1671], "gru": [752, 1369, 1855, 1880, 1897, 1902, 1904], "cell": [752, 754, 756, 1368, 1369, 1386, 1387, 1431, 1433], "hx": [752, 754, 756, 1369, 1387, 1433, 1855], "cx": [754, 1387, 1855], "nonlinear": [756, 1332, 1350, 1376, 1431, 1433, 1443, 1852, 1875, 1911], "elman": [756, 1431, 1433], "adaptiveavgpool2d": [757, 1475, 1837, 1904], "adaptiveavgpool3d": [758, 1476, 1837, 1904], "ceil_mod": [759, 760, 773, 774, 1329, 1330, 1331, 1384, 1385, 1409, 1410, 1411, 1482, 1483, 1484, 1536, 1537, 1539, 1540, 1541, 1706, 1707, 1853, 1855], "count_include_pad": [759, 760, 1329, 1330, 1331, 1482, 1483, 1484, 1853, 1855], "divisor_overrid": [759, 760, 1330, 1331, 1483, 1484, 1853, 1855], "kh": [759, 760, 764, 765, 1330, 1331, 1364, 1365, 1410, 1411, 1483, 1484, 1491, 1492, 1494, 1495, 1510, 1511, 1540, 1541], "kw": [759, 760, 764, 765, 1330, 1331, 1364, 1365, 1410, 1411, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1510, 1511, 1539, 1540, 1541], "sw": [759, 760, 763, 764, 765, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1539, 1540, 1541], "avgpool2d": [759, 1483, 1904], "_channel": [759, 760, 763, 764, 765, 1344, 1345, 1346, 1347, 1348, 1349, 1371, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1539, 1540, 1541, 1907], "ih": [759, 760, 764, 765, 1431, 1433, 1483, 1484, 1491, 1492, 1494, 1495, 1540, 1541], "iw": [759, 760, 763, 764, 765, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495, 1539, 1540, 1541], "padh": [759, 760, 764, 765, 1483, 1484, 1491, 1492, 1494, 1495], "padw": [759, 760, 763, 764, 765, 1482, 1483, 1484, 1490, 1491, 1492, 1493, 1494, 1495], "kd": [760, 765, 1331, 1411], "sd": [760, 765], "padd": [760, 765], "formul": [761, 1338, 1358, 1372, 1406, 1452, 1453, 1534, 1551, 1565, 1885, 1911], "min_": [762, 1219, 1220, 1229, 1247, 1802], "max_": [762, 1409, 1410, 1411, 1604, 1637], "convolv": [763, 764, 765, 1344, 1345, 1346, 1347, 1348, 1349, 1392, 1393, 1394, 1395, 1396, 1397, 1490, 1491, 1492, 1493, 1494, 1495], "dw": [763, 764, 765, 1490, 1491, 1492, 1493, 1494, 1495], "qf": [763, 764, 765], "dtype_input": [763, 764, 765], "dtype_filt": [763, 764, 765], "q_filter": [763, 764, 765], "dh": [764, 765, 1491, 1492, 1494, 1495], "dd": 765, "min_val": [769, 1375, 1521, 1522, 1853, 1855], "max_val": [769, 1375, 1521, 1522, 1853, 1855], "scale_factor": [770, 776, 777, 778, 1468, 1469, 1470, 1526, 1565, 1584, 1585, 1586, 1853, 1855], "nearest": [770, 776, 778, 1313, 1468, 1470, 1515, 1526, 1584, 1586, 1702, 1730, 1880], "align_corn": [770, 776, 777, 1468, 1469, 1480, 1515, 1526, 1584, 1585, 1853, 1855], "height": [770, 776, 1330, 1331, 1345, 1346, 1348, 1349, 1385, 1410, 1411, 1423, 1450, 1468, 1526, 1584, 1871], "spatial": [770, 776, 777, 778, 932, 1077, 1335, 1363, 1388, 1428, 1429, 1450, 1467, 1468, 1469, 1470, 1480, 1515, 1526, 1555, 1556, 1557, 1584, 1585, 1586], "pixel": [770, 776, 778, 1345, 1352, 1355, 1356, 1357, 1361, 1423, 1428, 1429, 1468, 1480, 1515, 1526, 1584, 1586], "corner": [770, 776, 923, 1468, 1480, 1515, 1526, 1584], "leakyrelu": [771, 1417, 1530, 1888, 1904], "_slope": [771, 1402, 1530, 1875], "xa": [772, 1233, 1244, 1245, 1246, 1403, 1532], "return_indic": [773, 774, 1325, 1326, 1327, 1364, 1365, 1409, 1410, 1411, 1412, 1413, 1414, 1477, 1478, 1479, 1510, 1511, 1539, 1540, 1541, 1855], "maxpool1d": [773, 1412, 1539, 1542, 1904], "maxpool2d": [774, 1413, 1417, 1540, 1543, 1895, 1904], "linearli": [776, 1121, 1242, 1468, 1584, 1680, 1701, 1884, 1898, 1905], "neighbour": [778, 1404, 1526, 1586], "stub": [779, 780, 1899], "calibr": [779, 780, 788, 829, 830, 848, 850, 852, 1876, 1902, 1903, 1905, 1921], "quantstub": [781, 1902], "dequantstub": [781, 1902], "quantwrapp": 782, "backend_config": [783, 784, 785, 786, 787, 808, 809, 850, 851, 852, 853, 1921], "acycl": [783, 1877], "backendpatternconfig": [783, 852], "dtypeconfig": [783, 784, 786, 852], "observationtyp": [783, 784, 852, 1904], "weighted_int8_dtype_config": [783, 852], "input_dtyp": [783, 785, 852, 1904], "output_dtyp": [783, 785, 852, 1853, 1904], "weight_dtyp": [783, 785, 852, 1904], "bias_dtyp": [783, 785, 1904], "fuse_conv2d_relu": 783, "is_qat": [783, 784], "convrelu2d": [783, 1904], "linear_config": 783, "set_observation_typ": [783, 784, 852], "output_use_different_observer_as_input": [783, 784, 787, 852, 1904], "add_dtype_config": [783, 784, 852], "set_root_modul": [783, 784], "set_qat_modul": [783, 784], "set_reference_quantized_modul": [783, 784], "conv_relu_config": 783, "set_fused_modul": [783, 784], "set_fuser_method": [783, 784], "fused_conv_relu_config": 783, "set_backend_pattern_config": [783, 852], "from_dict": [783, 784, 785, 806, 807, 808, 845], "backend_config_dict": [783, 1902], "set_nam": 783, "to_dict": [783, 784, 785, 806, 807, 808, 845], "backendconfig": [784, 809, 850, 852, 1905], "dtype_config": [784, 1904], "backend_pattern_config_dict": 784, "observation_typ": [784, 1904], "qat_modul": [784, 1904], "reference_quantized_modul": 784, "fused_modul": [784, 1904], "fuser_method": [784, 805, 1904], "pattern_complex_format": 784, "set_dtype_config": 784, "fuse_linear_relu": 784, "linearrelu": [784, 1904], "8bea7180a8ba3c279f2c9b050f2a69a6": 784, "understood": [784, 931], "output_share_observer_with_input": [784, 787, 1904], "renam": [784, 1855, 1870, 1871, 1897], "quantdequantstub": 784, "set_pattern": 784, "is_dynam": [785, 817, 1904], "quant1": 785, "dequant1": 785, "fp32_linear": 785, "quant2": 785, "dequant2": 785, "bracket": [785, 1908], "dtype_config1": 785, "dtype_config2": 785, "dtypewithconstraint": [785, 1904], "quant_min_lower_bound": [785, 786, 1904], "quant_max_upper_bound": [785, 786, 1904], "255": [785, 793, 1071, 1072, 1110, 1515, 1526, 1584, 1902, 1904, 1916], "input_dtype_with_constraint": 785, "scale_min_lower_bound": [785, 786, 1904], "scale_max_upper_bound": [785, 786, 1904], "dtype_config_dict": 785, "bias_typ": [785, 852], "scale_exact_match": [786, 1904], "zero_point_exact_match": [786, 1904], "quant_min": [786, 790, 793, 810, 811, 812, 813, 816, 817, 1071, 1072, 1855, 1902], "quant_max": [786, 790, 793, 810, 811, 812, 813, 816, 817, 1071, 1072, 1855, 1902], "fixedqparamsobserv": 786, "fixedqparamsfakequant": 786, "input_output_not_observ": [787, 1904], "maxpool": [787, 1364, 1365, 1510, 1511, 1895], "remove_qconfig": 788, "is_refer": 788, "convert_custom_config_dict": [788, 806, 1902], "from_observ": [788, 806, 1902], "observed_to_quantized_custom_module_class": [788, 806, 1902], "observedcustommodul": [788, 806, 808, 829, 1902], "quantizedcustommodul": [788, 806], "calib_data": 789, "fake_quant": [790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 853, 1071, 1072, 1921], "movingaverageminmaxobserv": [790, 793, 813], "observer_kwarg": [790, 793], "x_out": [790, 793], "fake_quant_en": 790, "observer_en": 790, "calculate_qparam": [791, 810, 811, 815], "qscheme": [793, 810, 811, 812, 813, 816, 817, 818, 1855, 1897, 1902, 1905, 1918], "fake_qu": [794, 798, 799, 800, 1902], "default_fake_qu": 795, "default_per_channel_weight_fake_qu": 796, "default_weight_fake_qu": 797, "histogram": [798, 810, 822, 1144, 1146, 1855, 1897, 1916], "memoryless": [799, 800], "averaging_const": [799, 800, 812, 813, 1855], "modules_to_fus": 805, "fuser_func": 805, "fuse_known_modul": 805, "fuse_custom_config_dict": [805, 807], "convmodul": 805, "bnmodul": 805, "convbnmodul": 805, "additional_fuser_method_map": 805, "fuse_conv_bn": [805, 1904], "conv1": [805, 1195, 1416, 1444, 1854, 1902, 1916], "bn1": 805, "relu1": [805, 1444, 1587], "fused_m": 805, "custom_config": [806, 807, 808, 809], "convert_fx": [806, 1902, 1921], "convert_custom_config": [806, 850, 1902], "set_observed_to_quantized_map": 806, "set_preserved_attribut": [806, 807, 808], "attr1": [806, 807, 808, 1895], "attr2": [806, 807, 808, 1895], "floatcustommodul": [806, 808], "weight_onli": [806, 850, 1902], "preserved_attribut": [806, 807, 808], "observed_class": [806, 808], "quantized_class": 806, "quant_typ": [806, 808], "quanttyp": [806, 808], "fuse_fx": [807, 1902], "fuse_custom_config": [807, 851], "convertcustomconfig": [807, 850], "prepare_fx": [808, 831, 850, 853, 1902, 1921], "prepare_qat_fx": [808, 850, 1902], "prepare_custom_config": [808, 809, 852, 853, 1902], "set_standalone_module_nam": 808, "module1": [808, 845, 1880], "qconfig_map": [808, 809, 845, 846, 847, 850, 852, 853, 1902], "child_prepare_custom_config": 808, "set_standalone_module_class": 808, "mystandalonemodul": 808, "set_float_to_observed_map": 808, "set_non_traceable_module_nam": 808, "module2": [808, 845, 1880], "module3": [808, 1880], "set_non_traceable_module_class": 808, "nontraceablemodule1": 808, "nontraceablemodule2": 808, "set_input_quantized_index": 808, "set_output_quantized_index": 808, "prepare_custom_config_dict": [808, 829, 831, 1902], "standalone_module_nam": 808, "standalone_module_class": 808, "module_class": 808, "float_to_observed_custom_module_class": [808, 829, 1902], "non_traceable_module_nam": 808, "non_traceable_module_class": 808, "input_quantized_idx": 808, "output_quantized_idx": 808, "float_class": 808, "qconfigmap": [809, 846, 847, 850, 852, 1902, 1905], "preparecustomconfig": [809, 852], "2048": [810, 1459, 1461, 1463, 1880], "upsample_r": 810, "per_tensor_affin": [810, 811, 812, 1704, 1705, 1706, 1707, 1902, 1905], "reduce_rang": [810, 811, 812, 813, 816, 818, 1855, 1902, 1903], "factory_kwarg": [810, 811, 816], "1920928955078125e": [810, 811, 812, 813, 816], "finfo": [810, 811, 812, 813, 816, 1238, 1241, 1320, 1852, 1918], "minmaxobserv": [810, 812, 816, 832, 852, 853, 1905], "x_": [811, 812, 956, 1067, 1257, 1258, 1260, 1263, 1271, 1333, 1352, 1406, 1423, 1449, 1451, 1571, 1779, 1781, 1823, 1877, 1905, 1912], "q_": [811, 1905], "x_orig": 811, "reset_min_max_v": [811, 816], "ch_axi": [813, 816, 1855], "per_channel_affin": [813, 816, 1703, 1902, 1905], "custom_op_nam": [814, 817], "with_arg": [815, 832, 852, 853], "_callable_arg": 815, "_with_arg": 815, "foo_build": 815, "foo_instance1": 815, "foo_instance2": 815, "with_callable_arg": 815, "_with_callable_arg": 815, "cur_tim": 815, "get_time_func": 815, "dan": 815, "creation_tim": 815, "compute_dtyp": 817, "ptq": [822, 1902, 1903, 1905], "obs_dict": 828, "get_observer_state_dict": 828, "allow_list": [829, 1920], "observer_non_leaf_module_list": 829, "preemptiv": [829, 830, 1596], "custommodul": [829, 1902], "propagate_qconfig_": 831, "qconfig_dict": [831, 845], "my_qconfig": 832, "default_observ": 832, "default_qat_config": 838, "set_glob": [845, 850, 852, 1902], "set_object_typ": [845, 850, 852], "set_module_name_regex": 845, "regex": 845, "set_module_nam": [845, 850, 852], "set_module_name_object_type_ord": 845, "global_qconfig": 845, "qconfig1": 845, "qconfig2": 845, "qconfig3": 845, "object_typ": 845, "module_name_regex": 845, "module_name_object_type_ord": 845, "conv0": 845, "x86": [846, 847, 1746, 1902, 1904], "run_arg": [848, 854], "counterpart": [848, 855, 1253, 1596, 1857, 1865, 1919, 1920], "qconfig_spec": 849, "quantize_fx": [850, 851, 852, 853, 1902, 1921], "_remove_qconfig": 850, "qconfig_from_prepar": 850, "prepared_model": [850, 852, 853], "xnnpack": [850, 1865, 1902], "get_default_backend_config": [850, 852, 853], "quantized_model": 850, "fusion_pattern": 851, "fusecustomconfig": 851, "_equalization_config": 852, "get_default_qconfig_map": [852, 1902], "float_model": [852, 853, 1920], "data_load": [852, 853, 1677, 1683, 1890], "get_default_qconfig": [852, 853, 1902], "linear_pattern_config": 852, "suer": 852, "sample_inference_data": 852, "get_default_qat_qconfig_map": [853, 1902], "load_weight": 853, "train_data": 853, "get_default_qat_qconfig": [853, 1902], "custom_module_class_map": 855, "lceil": [856, 933], "rceil": [856, 933], "gap": [856, 1717, 1852, 1902], "adjac": [856, 923, 1355, 1356, 1357, 1361, 1717, 1911], "set_default_tensor_typ": [856, 913, 922, 1058, 1060, 1070, 1075, 1093, 1111, 1131, 1141, 1142, 1203, 1254, 1270, 1647, 1710, 1712, 1714, 1716, 1717, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1784, 1785, 1786, 1787, 1788, 1789, 1827, 1829, 1849], "get_default_dtyp": [856, 1254, 1270, 1652, 1717, 1913, 1914, 1923], "5000": [856, 871, 877, 878, 879, 915, 939, 1075, 1077, 1078, 1085, 1088, 1093, 1103, 1105, 1106, 1107, 1137, 1143, 1146, 1209, 1235, 1254, 1311, 1313, 1341, 1342, 1360, 1468, 1702, 1706, 1707, 1708, 1717, 1721, 1912, 1917], "3398": 865, "2663": [865, 1880], "2686": 865, "2450": 865, "7401": 865, "8805": 865, "3402": 865, "1936": 865, "4907": [865, 1271], "3948": [865, 951], "0691": 865, "3132": 865, "6092": 865, "5419": 865, "2993": [865, 1801], "3195": 865, "1139": 866, "2254": 866, "1381": [866, 1801], "3687": 866, "0100": [866, 1237, 1703], "1975": [866, 1872], "0102": 866, "4732": 866, "9240": 866, "1207": [866, 1305], "7506": 866, "0213": 866, "7809": 866, "2960": 866, "9384": 866, "1438": 866, "ascend": [867, 1077, 1220, 1222, 1251, 1304, 1737, 1775, 1834], "0785": 867, "5267": 867, "8521": 867, "4065": 867, "1598": 867, "0788": 867, "0745": 867, "2700": 867, "2208": 867, "0722": 867, "7064": 867, "2564": 867, "0669": 867, "2318": 867, "8229": 867, "9280": 867, "lexicograph": [868, 1642, 1857, 1911], "9039": 869, "6291": 869, "0795": [869, 1702, 1888], "1586": 869, "1939": 869, "4900": 869, "7503": 869, "9355": 869, "histori": [870, 871, 1123, 1661, 1816, 1864, 1872, 1882, 1884, 1908], "dlpack": [871, 1108, 1852], "frombuff": 871, "data_ptr": [871, 1870, 1913, 1915], "addbackward0": [871, 1888, 1893], "__array_interface__": 871, "5962": 872, "4985": 872, "4396": 872, "4525": [872, 1872], "6387": 872, "4552": 872, "sine": [873, 1758, 1768, 1770], "1606": 873, "4267": 873, "0899": 873, "0250": 873, "1599": 873, "1534": 873, "9435": 873, "8990": [873, 1052], "arctang": [874, 875], "2341": 874, "2539": 874, "6256": 874, "6448": 874, "2299": 874, "2487": 874, "5591": [874, 896], "5727": 874, "quadrant": 875, "9041": [875, 932], "0196": [875, 932], "3108": [875, 932], "4423": [875, 932], "9833": 875, "0811": 875, "9743": 875, "4151": 875, "tangent": [876, 886, 887, 1120, 1121, 1456, 1814, 1815], "9385": 876, "2968": 876, "8591": 876, "1871": 876, "7253": 876, "3060": 876, "2899": 876, "1893": 876, "needs_input_grad": [880, 1882], "setup_context": [881, 1883], "save_for_forward": [881, 1883], "grad_input": [882, 889, 891, 904, 1184, 1416, 1592, 1882, 1888], "underneath": 883, "generate_vmap_rul": [883, 1883], "out_dim": [883, 1125, 1844, 1855, 1871, 1883], "grad_tensor": [884, 898, 1855, 1880], "grad_vari": 884, "forward_ad": 885, "dual": [885, 886, 887, 1641, 1883], "make_du": [885, 887], "your_fn": 885, "unpack_du": [885, 886], "grad_aft": 885, "dual_level": [886, 887], "primal": [887, 1116, 1120, 1121, 1124], "x_npy": 888, "once_differenti": [888, 889, 890, 891, 1882], "g1": [889, 891, 1880, 1909], "g2": [889, 891, 1880, 1909], "oppos": [890, 1883], "weren": 890, "grad_out": [890, 1853, 1855, 1885], "gx": 890, "gy": 890, "gz": 890, "simplefunc": 891, "induc": [891, 1515, 1553, 1875], "outer_jacobian_strategi": 892, "disconnect": [892, 893, 894, 895, 896, 897], "said": [892, 893, 894, 895, 896, 897, 1864, 1891], "cliff": [892, 894, 898], "_debug_only_display_vmap_fallback_warn": [892, 898], "pow_reduc": [892, 893, 896], "2265": 892, "8221": 892, "9456": [892, 914], "2550": 892, "viewbackward": [892, 894], "pow_adder_reduc": [892, 893, 896], "func_output": [893, 895, 896, 897], "1448": 893, "0239": 893, "6456": 893, "4988": 893, "4310": 893, "sumbackward0": [893, 896], "3030": 893, "vhp": 893, "batched_grad": 894, "exp_reduc": [894, 895, 897], "4917": 894, "4352": 894, "4369": 894, "3799": 894, "exp_add": 894, "8052": 894, "3963": 894, "3090": 895, "6742": 895, "9114": 895, "2106": 895, "sumbackward1": [895, 897], "squeezebackward1": 895, "adder": [895, 897], "2399": 895, "5005": 895, "0689": 896, "2431": 896, "0989": 896, "4456": 896, "8053": [896, 1732], "7817": 897, "2458": 897, "7830": 897, "7782": 897, "4458": 897, "3962": 897, "3042": [897, 1241], "6354": 897, "1288": [897, 1761], "0652": 897, "5483": 897, "5035": 897, "2046": [897, 951], "1292": 897, "1432": 897, "3059": 897, "3225": 897, "6652": 897, "7753": 897, "0152": 897, "4225": 897, "3340": 897, "only_input": 898, "allow_unus": [898, 1855], "is_grads_batch": 898, "materialize_grad": 898, "require_grad": [898, 1857, 1877], "06": [899, 900, 1224, 1229, 1230, 1241, 1242, 1247, 1370, 1425, 1464, 1467, 1512, 1581, 1656, 1670, 1802, 1855, 1918], "raise_except": [899, 900], "check_sparse_nnz": 899, "nondet_tol": [899, 900], "check_undefined_grad": [899, 900], "check_grad_dtyp": [899, 900], "check_batched_grad": [899, 900], "check_batched_forward_grad": 899, "check_forward_ad": 899, "check_backward_ad": 899, "fast_mod": [899, 900, 1885], "differenc": [899, 1882], "perturb": [899, 900, 1885], "sparsetensor": [899, 1787], "gradgradcheck": [899, 1882], "gen_non_contig_grad_output": 900, "check_fwd_over_rev": 900, "check_rev_over_rev": 900, "noncontigu": [900, 1000, 1918], "inaccuraci": 900, "clonebackward0": 902, "gi": [904, 905, 1888], "removablehandl": [904, 905, 1184, 1416, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1899], "eventlist": [907, 908], "chrome": [907, 1901], "group_by_stack_n": [908, 1901], "roof": 908, "functioneventavg": [908, 910], "window_length": [913, 922, 1141, 1142, 1203, 1855], "2n": [913, 1756], "trim": [913, 922, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1141, 1142, 1181], "_length": [913, 922, 1141, 1142, 1181, 1339, 1798], "sim": [914, 1430, 1558, 1694, 1714], "pseudorandom": [914, 1306, 1644, 1691, 1694, 1710, 1712, 1714, 1716, 1803], "1737": 914, "0950": [914, 1780], "3609": 914, "7148": 914, "0289": [914, 1826], "2676": 914, "8937": 914, "7202": 914, "2500": [915, 1075, 1077, 1078, 1088, 1093, 1254, 1468, 1708], "7500": [915, 1078, 1088, 1107, 1137, 1239, 1254, 1468, 1708, 1764], "AND": [916, 1265, 1857, 1877], "OR": [919, 1267, 1857], "xor": [921, 1268, 1857], "blackman": [922, 1766], "arrang": 923, "broadcast_tensor": [925, 1855, 1897], "out_int32": [928, 1737, 1855], "formal": [928, 1737, 1864, 1871], "tensor_a": [930, 943], "tensor_b": 930, "6580": 931, "0969": 931, "4614": 931, "1034": [931, 1057], "5790": 931, "1497": 931, "x2": [932, 1231, 1408, 1464, 1465, 1497, 1554, 1855], "compute_mod": 932, "use_mm_for_euclid_dist_if_necessari": 932, "distanc": [932, 1181, 1219, 1220, 1247, 1376, 1425, 1464, 1465, 1555, 1677, 1798, 1802, 1852], "infti": [932, 1181, 1235, 1332, 1384, 1385, 1447, 1555, 1668, 1912], "use_mm_for_euclid_dist": 932, "donot_use_mm_for_euclid_dist": 932, "minkowski": [932, 1555], "ham": [932, 1141, 1555, 1762], "closest": [932, 1555], "xn": [932, 1555], "4821": [932, 935], "059": 932, "0590": 932, "1763": [932, 1720], "4713": [932, 1720], "6986": [932, 1720], "3702": [932, 1720], "1193": [932, 1273], "0959": 932, "7138": 932, "8322": 932, "2830": [932, 1828], "3791": 932, "6341": 933, "4208": 933, "0900": 933, "5826": 933, "clr": [934, 1677], "3375": 934, "9790": 934, "1119": 934, "6577": 934, "5609": [934, 1506], "5095": 934, "2614": 934, "4038": 934, "3378": [934, 1828], "4982": 934, "2457": [934, 1286], "2561": 934, "4684": 934, "7163": 934, "9647": 934, "8917": [934, 1264], "3213": [934, 1260], "2284": [934, 1037], "8615": 934, "2816": 934, "tu": 935, "mt": [935, 936, 1213, 1220, 1222, 1226, 1227, 1228, 1233, 1242, 1701, 1802, 1855, 1864, 1897, 1915, 1917], "4112": 935, "7486": 935, "4551": 935, "3544": 935, "6724": 935, "5528": 935, "0592": [935, 1888], "9371": 935, "5487": 935, "7023": 935, "03": [935, 936, 1261, 1759, 1760, 1765], "3842e": [935, 1229], "dpotri": 936, "spotri": 936, "uu": 936, "9935": 936, "6353": 936, "5806": 936, "8769": 936, "7183": [936, 1235, 1888], "6618": 936, "9314": 936, "2251": [936, 957, 1216, 1258], "0889": 936, "4439": 936, "2122": 936, "1412": 936, "5894e": 936, "semidefinit": 937, "7747": 937, "9549": 937, "3086": 937, "4114": 937, "8733": 937, "6355": 937, "9891": 937, "1974": 937, "4706": 937, "4115": 937, "6225": 937, "1625": 937, "6097": 937, "8398": 937, "2387": [937, 952], "3771": [937, 1230], "4173": 937, "1626": [937, 957, 1216], "tensor_split": [938, 1055, 1147, 1845, 1855, 1897, 1915], "min_valu": [939, 1375], "max_valu": [939, 1375, 1855], "_valu": [939, 1324, 1601, 1787, 1882, 1897, 1911], "7120": 939, "1734": [939, 1158], "0478": [939, 1847], "0922": 939, "3333": [939, 1137, 1146, 1468, 1469, 1816], "hstack": [942, 1855, 1897, 1911], "with_replac": [943, 1855], "combinations_with_replac": 943, "_glibcxx_use_cxx11_abi": 945, "flip": [949, 1098, 1099, 1251, 1853, 1855, 1897, 1898], "lazi": [949, 1196, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1587, 1852], "writeabl": [949, 950], "is_conj": [949, 1725, 1855, 1897], "geq": [951, 1128, 1215, 1223, 1352, 1402, 1423, 1424, 1434, 1498, 1550, 1603, 1875, 1912], "signbit": [951, 1853, 1855, 1897, 1911], "2557": 951, "0026": 951, "5387": 951, "4740": 951, "9244": 951, "7079": 951, "2778": 951, "0249": [951, 1259], "5719": 951, "0059": 951, "2600": 951, "4475": 951, "9567": [951, 1219, 1801], "5757": 951, "1751": 951, "0742": 951, "2998": 951, "1054": 951, "2373": 951, "3190": [951, 1880], "1128": [951, 1241, 1386], "pearson": 952, "coeffici": [952, 1141, 1656, 1658, 1659, 1660, 1662, 1668, 1672, 1761, 1762, 1763, 1825], "r_": [952, 1818], "ij": [952, 1057, 1263, 1271, 1285, 1419, 1779], "c_": [952, 1344, 1345, 1346, 1347, 1348, 1349, 1386, 1428, 1429], "jj": 952, "hermitian": [952, 1073, 1074, 1076, 1078, 1079, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1213, 1214, 1219, 1220, 1222, 1226, 1227, 1228, 1238, 1241, 1247, 1855], "cov": [952, 1855, 1897], "2678": [952, 1359], "0908": 952, "3766": 952, "2780": 952, "5812": 952, "1535": [952, 1359], "2350": 952, "3582": 952, "4309": 953, "2706": 953, "8562": 953, "9796": [953, 1229], "1395": 953, "2957": 953, "6553": 953, "5574": 953, "1632": 954, "1835": 954, "6979": 954, "7325": [954, 1047], "0133": 954, "7860": 954, "2536": 954, "2805": 954, "sleef": [954, 1770], "unbias": [956, 1334, 1335, 1336, 1371, 1379, 1380, 1381, 1388, 1455, 1796, 1797, 1839, 1840, 1853, 1855], "_w": 956, "y_": [956, 1067, 1257, 1258, 1260, 1333, 1352, 1382, 1779, 1823, 1877, 1912], "w_i": [956, 1223], "mu_x": 956, "mu_i": [956, 1662], "whichev": [956, 1125, 1515, 1702, 1844, 1880], "w_ix_": 956, "bessel": [956, 1203, 1765, 1796, 1797, 1839, 1840, 1912], "corrcoef": [956, 1855, 1897], "6667": [956, 1146, 1468, 1469, 1722, 1756, 1893], "fw": 956, "4282": 956, "0255": [956, 1044], "4144": [956, 1880], "4169": 956, "3956": [957, 1216], "1455": [957, 1216, 1894], "6895": [957, 1216], "5849": [957, 1216], "3599": [957, 1216], "7180": [957, 1216], "0521": [957, 1216], "1339": [957, 1216], "0225": [957, 1216, 1229], "0257": [957, 1216], "4725": [957, 1216], "1479": [957, 1216], "7005": [957, 1216], "9757": [957, 1216], "3904": [957, 1216], "3726": [957, 1216], "1836": [957, 1216], "9688": [957, 1216], "7153": [957, 1216, 1912], "2159": [957, 1216], "0844": [957, 1216], "5281": [957, 1216], "6120": [957, 1216], "4490": [957, 1216], "5687": [957, 1216], "9792": [957, 1038, 1216], "8304": [957, 1216], "3037": [957, 1216, 1888], "5650": [957, 1216], "2329": [957, 1216], "9883": [957, 1216], "0551": [957, 1216], "capture_begin": [958, 1880], "make_graphed_cal": [958, 1880], "graph_pool_handl": [958, 992], "other_graph_inst": [958, 992], "capture_end": [958, 1880], "debug_dump": 958, "debug_path": 958, "enable_debug_mod": 958, "path_to_so_fil": 959, "alloc_fn_nam": 959, "free_fn_nam": 959, "ctype": 959, "change_current_alloc": [959, 1880], "ssize_t": [959, 1880], "cudastream_t": [959, 961, 1880], "ptr": [959, 1880], "size_t": 959, "oss": 959, "enable_tim": [960, 1880], "interprocess": 960, "marker": 960, "elapsed_tim": [960, 1880], "end_ev": [960, 1880], "elaps": [960, 1867], "from_ipc_handl": 960, "reconstruct": [960, 1273, 1332, 1333, 1885, 1893, 1899], "ipc": [960, 996], "ipc_handl": 960, "proceed": [960, 1370, 1908, 1909], "cudaeventsynchron": 960, "cudastreamwaitev": [960, 961, 963], "stream_ptr": 961, "record_ev": [961, 963], "cudastreamsynchron": [961, 963], "wait_ev": [961, 963], "interoper": 965, "caching_allocator_delet": 965, "mem_ptr": 966, "caching_allocator_alloc": 966, "peer_devic": 967, "_cudaalloc": 968, "clock": 969, "sm": 969, "hertz": 969, "smi": [969, 982, 1010, 1016, 1020, 1034, 1035, 1880, 1884, 1886], "buffer_s": 971, "10485760": 971, "chunk_siz": [974, 1119, 1125, 1844], "cublashandle_t": 975, "unoccupi": [982, 1294], "pytorch_cuda_alloc_conf": [983, 1880], "cudamallocasync": [983, 1014, 1880], "_cudadeviceproperti": 987, "gencod": 988, "eagerli": [989, 995, 1880], "cuda_graph": 992, "ordinari": [994, 1596, 1876], "code_str": [1000, 1001], "temp": 1000, "typenam": [1000, 1001], "my_kernel": [1000, 1001], "jitted_fn": [1000, 1001], "create_jit_fn": [1000, 1001], "util_fn": 1000, "gelu": [1000, 1445, 1459, 1461, 1463, 1568, 1853, 1855, 1872, 1897], "my_gelu": 1000, "my_lib": [1000, 1861, 1894], "impl": [1000, 1861], "num_output": 1001, "sample_arg": 1003, "num_warmup_it": 1003, "allow_unused_input": 1003, "datadistributedparallel": 1003, "manual_seed_al": 1004, "occupi": [1006, 1010, 1021, 1292, 1404, 1533, 1880, 1886, 1923], "reset_peak_memory_stat": [1006, 1008, 1021, 1022], "max_memory_reserv": [1007, 1880, 1886], "cudamemgetinfo": 1009, "memory_reserv": [1011, 1880, 1886], "snapshot": [1013, 1857, 1880, 1886], "large_pool": 1014, "small_pool": 1014, "allocated_byt": 1014, "cudamalloc": [1014, 1880], "reserved_byt": 1014, "active_byt": 1014, "inactive_split": 1014, "inactive_split_byt": 1014, "octob": 1014, "1mb": 1014, "num_alloc_retri": 1014, "num_oom": 1014, "assist": [1014, 1881], "max_split_s": 1014, "oversize_alloc": 1014, "oversize_seg": 1014, "requested_byt": 1014, "abbrevi": 1015, "percent": [1016, 1035], "msg": [1017, 1019, 1901, 1918], "instantan": [1017, 1901], "ascii": [1017, 1019, 1255, 1857, 1901], "sensor": [1020, 1034], "mw": 1020, "milliwatt": 1020, "fermi": 1020, "max_memory_alloc": [1021, 1880, 1886], "max_memory_cach": 1022, "memory_stat": [1023, 1880, 1886], "seed_al": 1024, "environment": 1026, "total_memori": [1027, 1301], "debug_mod": [1031, 1744], "streamcontext": [1032, 1852], "centigrad": 1034, "x_1": [1036, 1037, 1038, 1039, 1251, 1337, 1350, 1351, 1486, 1497, 1823], "x_2": [1036, 1037, 1038, 1039, 1251, 1337, 1350, 1351, 1486, 1497], "x_3": [1036, 1037, 1038, 1039, 1251], "3449": 1036, "5447": 1036, "0685": 1036, "5104": [1036, 1880], "1706": 1036, "2259": 1036, "4696": 1036, "3284": 1036, "9946": 1036, "8209": [1036, 1039], "6628": 1037, "0975": 1037, "2680": [1037, 1879], "3298": [1037, 1044], "4220": 1037, "3885": 1037, "1762": 1037, "9165": 1037, "6684": [1037, 1161], "6001": 1038, "2069": 1038, "1919": 1038, "6727": [1038, 1051], "0062": 1038, "4126": 1038, "2129": 1038, "4206": 1038, "1968": [1038, 1912], "1241": 1038, "0238": 1038, "0233": [1038, 1709], "0157": 1038, "0158": [1038, 1802], "0065": 1038, "0014": [1038, 1912], "0006": 1038, "8286": 1039, "4890": 1039, "5155": 1039, "8443": 1039, "1865": 1039, "1752": [1039, 1047], "0595": 1039, "1850": 1039, "1571": [1039, 1888, 1893], "4243": 1039, "3175": 1039, "8020": [1039, 1699], "0423": 1039, "2289": 1039, "0537": 1039, "0058": 1039, "9780": 1039, "trapezoid": [1040, 1824, 1855, 1897], "360": 1041, "2832": 1041, "diagflat": [1044, 1855, 1897], "5950": 1044, "0872": 1044, "4264": 1044, "1064": [1044, 1888], "8795": 1044, "2429": 1044, "1374": 1044, "1029": 1044, "6482": 1044, "6300": 1044, "5410": 1045, "2934": 1045, "1788": [1045, 1912], "5684": 1045, "0845": [1045, 1770, 1888], "3986": 1045, "2956": [1046, 1216], "9068": 1046, "1695": 1046, "2094": [1046, 1880], "3018": 1046, "1516": 1046, "9342": 1046, "0854": 1047, "1431": 1047, "8536": 1047, "0905": 1047, "0360": [1047, 1305], "6927": 1047, "3735": 1047, "4945": 1047, "2631": [1047, 1304, 1880], "3755": 1047, "5977": 1047, "8172": 1047, "1065": [1047, 1888], "0401": 1047, "2235": [1047, 1801], "7938": 1047, "3081": 1047, "6166": 1047, "2335": 1047, "0500": 1047, "7336": 1047, "3836": 1047, "1015": 1047, "emb": [1048, 1740, 1771], "5393": 1051, "8675": 1051, "5916": 1051, "6321": 1051, "0967": 1051, "0511": 1051, "6295": 1051, "8360": 1051, "6973": 1051, "6537": 1051, "dividend": [1052, 1102, 1105, 1721, 1830], "true_divid": [1052, 1855, 1897], "3810": [1052, 1145], "2774": 1052, "2972": 1052, "3719": 1052, "4637": 1052, "7620": 1052, "5548": 1052, "5944": 1052, "7438": 1052, "9274": 1052, "3711": 1052, "9353": 1052, "4605": 1052, "2917": 1052, "1815": [1052, 1264], "0111": [1052, 1759], "9805": 1052, "5923": 1052, "1062": 1052, "4581": [1052, 1223], "7759": 1052, "2344": 1052, "1830": 1052, "0313": 1052, "1908": 1052, "4757": 1052, "8032": 1052, "2930": 1052, "8113": 1052, "2308": 1052, "4620": [1052, 1847], "6051": 1052, "5676": 1052, "2639": 1052, "2260": 1052, "4509": [1052, 1237], "2086": 1052, "1322": 1052, "9764": 1052, "9564": 1052, "3484": 1052, "2278": 1052, "1068": [1052, 1158], "4678": 1052, "3938": [1052, 1811], "depthwis": [1055, 1056, 1344, 1345, 1346], "atleast_3d": [1056, 1855, 1897], "operand": [1057, 1857, 1858, 1882, 1911, 1914], "notat": [1057, 1382, 1750, 1858, 1888, 1917], "einstein": 1057, "summat": [1057, 1181, 1263, 1271, 1911], "subscript": [1057, 1858], "jk": 1057, "ik": [1057, 1256, 1779], "za": 1057, "alphabet": [1057, 1499, 1907], "arrow": [1057, 1909], "ki": 1057, "ellipsi": [1057, 1857, 1858, 1871], "fourth": 1057, "whitespac": [1057, 1858], "opt_einsum": [1057, 1852], "_the_": 1057, "bypass": [1057, 1861, 1872, 1880], "disclaim": 1057, "52": 1057, "op1": [1057, 1857], "sublist1": 1057, "op2": [1057, 1857], "sublist2": 1057, "subslist_out": 1057, "2104": 1057, "7952": 1057, "2433": 1057, "4545": 1057, "1156": 1057, "2897": [1057, 1888], "3918": 1057, "4963": 1057, "3744": 1057, "9381": 1057, "2685": 1057, "6070": 1057, "7208": 1057, "8058": 1057, "4419": 1057, "0936": 1057, "1713": 1057, "4291": 1057, "5802": 1057, "7350": [1057, 1912], "5704": 1057, "4290": 1057, "9323": 1057, "4480": 1057, "bij": 1057, "bjk": 1057, "bik": 1057, "0564": 1057, "5904": 1057, "2023": 1057, "1271": 1057, "6706": [1057, 1702], "8097": 1057, "8025": 1057, "1183": 1057, "2239": [1057, 1243], "3107": 1057, "5756": 1057, "2354": 1057, "4558": 1057, "3460": 1057, "5087": 1057, "8530": [1057, 1341, 1471], "8153": 1057, "8787": 1057, "3839": [1057, 1843], "2112": [1057, 1826], "3728": 1057, "1131": [1057, 1699], "0921": 1057, "8305": 1057, "ji": 1057, "anm": 1057, "bm": 1057, "ba": 1057, "3430": [1057, 1264], "2405": 1057, "4494": 1057, "3311": 1057, "5201": 1057, "0356": 1057, "4064e": 1058, "8000e": 1058, "3493e": 1058, "5751e": 1058, "1428e": 1058, "5955e": 1058, "9683e": 1060, "1239e": 1060, "0705e": 1060, "set_grad_en": [1061, 1855, 1897, 1919], "parenthesi": [1061, 1159, 1641], "doubler": [1061, 1641], "elsewher": [1062, 1070, 1128, 1140, 1174, 1176, 1177, 1180, 1208, 1272, 1317, 1780, 1851], "_max": [1071, 1072, 1902], "_min": [1071, 1072, 1902], "nearbi": [1071, 1072], "_int": [1071, 1072], "_point": [1071, 1072], "2525": 1071, "0466": 1071, "3491": [1071, 1237], "2168": [1071, 1818], "5906": [1071, 1912], "6258": 1071, "6444": 1071, "0542": 1071, "0475": [1071, 1912], "0486": 1071, "3405": 1071, "6134": [1071, 1286], "6323": 1071, "0552": 1072, "9730": 1072, "3973": 1072, "0780": 1072, "4000": [1072, 1075, 1084, 1093, 1468, 1705, 1756], "6000": [1072, 1459, 1461, 1463, 1468, 1705, 1753, 1756], "fourier": [1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1181, 1766, 1798, 1852], "rfft": [1073, 1078, 1088, 1092, 1093, 1094], "compact": [1073, 1074, 1076, 1226, 1228, 1231, 1882, 1895, 1902], "chalf": [1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1088, 1089, 1090, 1855, 1897, 1917], "sm53": [1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094], "ortho": [1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1256], "orthonorm": [1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1247, 1603, 1802], "ifft": [1073, 1077, 1078, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090], "fftn": [1074, 1077, 1083, 1086, 1094], "rfft2": [1074, 1089], "ifft2": [1074, 1086], "two_fft": [1074, 1076, 1086, 1092, 1094], "check_strid": [1074, 1076, 1077, 1082, 1083, 1088, 1089, 1090, 1092, 1094, 1918], "nyquist": [1075, 1077, 1085, 1087, 1091, 1092, 1093, 1094], "i_1": [1076, 1094, 1204], "i_n": [1076, 1094, 1125, 1204, 1818, 1844], "rfftn": [1076, 1080, 1086, 1090, 1092], "ifftn": [1076, 1082, 1087], "rearrang": [1077, 1084, 1340, 1428, 1429, 1556, 1557, 1871], "fftfreq": [1077, 1084, 1093], "9000": [1077, 1816], "8000": [1077, 1311, 1468, 1702, 1756], "uncent": 1077, "ifftshift": 1077, "x_center": 1077, "x_uncent": 1077, "fft_uncent": 1077, "fft_center": 1077, "x_centered_2": 1077, "ihfft": [1078, 1086, 1087], "irfft": [1078, 1090, 1091], "symmetri": [1078, 1080, 1798], "opposit": [1078, 1080, 1802, 1822], "transformed_dim_s": [1078, 1088], "0000j": [1078, 1085, 1088, 1213, 1214, 1219, 1220, 1222, 1695, 1753], "1250": [1078, 1304], "1720j": 1078, "0406j": 1078, "2809": 1078, "6250": [1078, 1088, 1107, 1468], "9691": 1078, "hfftn": [1079, 1087], "last_dim_s": [1079, 1080, 1089, 1090, 1853], "ihfft2": 1079, "roundtrip": [1079, 1080, 1088, 1089, 1090], "ihfftn": [1080, 1086], "irfftn": [1080, 1089, 1094], "fft2": [1082, 1092], "two_ifft": [1082, 1083, 1087], "fftshift": 1084, "hfft": 1085, "6882j": 1085, "1625j": 1085, "hfft2": 1086, "8602j": 1088, "2031j": 1088, "1562": 1088, "3511": 1088, "7812": 1088, "2114": 1088, "irfft2": 1092, "wider": [1100, 1854, 1857, 1898, 1911], "49": [1100, 1239, 1879], "2500e": 1100, "1000e": 1100, "7656e": 1100, "lfloor": [1101, 1106, 1324, 1329, 1330, 1331, 1344, 1345, 1346, 1363, 1384, 1385, 1409, 1410, 1411, 1467, 1468, 1469, 1470, 1484, 1553, 1717, 1798], "rfloor": [1101, 1106, 1324, 1329, 1330, 1331, 1344, 1345, 1346, 1363, 1384, 1385, 1409, 1410, 1411, 1467, 1468, 1469, 1470, 1484, 1553, 1717, 1798], "8166": 1101, "5308": 1101, "2530": 1101, "2091": 1101, "7000": [1103, 1360, 1755], "3000": [1104, 1359, 1755, 1880], "entrywis": [1105, 1721], "modulu": [1105, 1243, 1721], "operatornam": [1106, 1219, 1220, 1221, 1222, 1239, 1247, 1332, 1333, 1339, 1376, 1377, 1383, 1407, 1447, 1465, 1755], "8750": [1107, 1468], "char": [1110, 1652, 1870, 1913], "parameter_and_buffer_dict": 1113, "tie_weight": [1113, 1638], "submodule_nam": [1113, 1638], "parameter_nam": [1113, 1638], "ti": [1113, 1638, 1730], "ty": [1113, 1638], "foo_ti": [1113, 1638], "new_a": [1113, 1638], "mutlipl": 1113, "grad_weight": [1113, 1882], "detached_param": 1113, "parameters_and_buffer_dict": 1113, "reparamater": [1113, 1638], "paramat": 1113, "intermediate_upd": 1114, "mutations_and_view": 1114, "intermeid": 1114, "inpt": 1114, "out1": [1114, 1855], "out2": [1114, 1855], "f_trace": 1114, "f_no_mutations_trac": 1114, "f_no_mutations_and_views_trac": 1114, "a_1": [1114, 1204], "view_1": 1114, "view_copi": [1114, 1855, 1897, 1919], "view_copy_1": 1114, "as_strid": [1114, 1853, 1855, 1897, 1915], "writ": 1114, "native_funct": [1114, 1853], "yaml": [1114, 1853], "aux": [1115, 1116, 1118, 1119, 1120, 1124], "my_loss_func": 1115, "y_pred": [1115, 1880], "loss_per_sampl": 1115, "y_true": 1115, "autodiff": [1118, 1119, 1120, 1242], "jacobian_f": [1118, 1119], "f_x": [1118, 1119], "jacboian": [1118, 1119], "expectedx": [1118, 1119], "expectedi": [1118, 1119], "_preallocate_and_copi": 1119, "stand": [1120, 1124, 1856, 1899, 1909], "jvp_out": 1120, "jvp_fn": 1121, "requr": 1121, "optimiz": [1123, 1854], "l1": [1123, 1376, 1377, 1447, 1524, 1569, 1613, 1622, 1888, 1893], "l2": [1123, 1377, 1407, 1447, 1655, 1656, 1657, 1658, 1660, 1662, 1668, 1669, 1671, 1876], "vjpfunc": 1124, "unsuccessfulli": [1125, 1844], "rummag": [1125, 1844], "batched_dot": [1125, 1844], "imposs": [1125, 1844, 1876], "jacobian_row": [1125, 1844], "get_vjp": [1125, 1844], "n1": [1125, 1723, 1844], "n0": [1125, 1844], "batched_pow": [1125, 1844], "autobatch": [1125, 1844], "sparse_grad": [1126, 1853, 1855], "tau": [1129, 1223, 1517, 1657, 1671, 1688, 1689, 1759, 1855], "elementari": [1129, 1877, 1885], "reflector": [1129, 1603, 1689], "household": [1129, 1223, 1603, 1689], "householder_product": [1129, 1603, 1688], "gel": [1129, 1229], "set_default_dtyp": 1131, "set_deterministic_debug_mod": [1132, 1837], "edge_ord": [1137, 1855], "mathbb": [1137, 1213, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1229, 1230, 1233, 1235, 1242, 1244, 1246, 1247, 1352, 1423, 1603], "rightarrow": 1137, "interior": 1137, "theorem": 1137, "h_l": 1137, "h_r": 1137, "neighbor": [1137, 1181, 1468, 1470, 1798], "xi_1": 1137, "xi_2": 1137, "approx": [1137, 1803, 1885], "outermost": 1137, "80": [1137, 1239, 1681, 1750, 1880, 1898], "halv": 1137, "coord": 1137, "54": [1141, 1378, 1762], "46": [1141, 1761], "hann_window": [1141, 1798, 1855, 1859, 1897], "hann": [1142, 1762], "hist": [1145, 1146, 1855], "bin_edg": [1145, 1146, 1855], "9524": 1145, "leftmost": [1146, 1872], "leg": 1150, "triangl": [1150, 1916], "hypotenus": 1150, "4031": 1150, "gammainc": [1152, 1912], "gammaincc": [1153, 1912], "index_reduce_": [1157, 1855], "realloc": 1158, "1427": 1158, "0231": 1158, "5414": 1158, "0009": 1158, "4664": [1158, 1818], "2647": 1158, "1228": 1158, "6571": 1158, "7230": 1158, "6004": 1158, "inferencemod": [1159, 1877], "bump": 1159, "_version": [1159, 1897], "multidimension": [1161, 1253, 1379], "8173": 1161, "0874": 1161, "1784": 1161, "3279": 1161, "7894": 1161, "4682": 1161, "7159": 1161, "1506": 1161, "4034": 1161, "3657": 1161, "0387": 1161, "9892": 1161, "1774": 1161, "3261": 1161, "3917": 1161, "4537": [1161, 1587], "7493": 1161, "1724": 1161, "2291": 1161, "5749": 1161, "2267": 1161, "7920": 1161, "3607": 1161, "3701": 1161, "3666": 1161, "5850": [1161, 1214], "7242": 1161, "9837": 1161, "1560": 1161, "2907": 1161, "6785": 1161, "5671": [1161, 1215], "5452": 1161, "6912": 1161, "5509": 1161, "1782": 1161, "9843": 1161, "7366": 1161, "5672": [1161, 1644], "5115": 1161, "4864": 1161, "2476": 1161, "4337": 1161, "6347": 1161, "1748": 1161, "3567": [1161, 1214], "6558": 1161, "2469": [1161, 1888], "5787": [1161, 1264], "typecheck": [1171, 1897], "mypi": [1171, 1856, 1857], "warn_alwai": 1172, "set_warn_alwai": 1172, "nonfinit": 1173, "test_el": [1175, 1855], "assume_uniqu": [1175, 1855], "0j": [1180, 1841], "nola": 1181, "envelop": 1181, "hop": [1181, 1798], "shorter": [1181, 1895, 1907], "griffin": 1181, "ieee": [1181, 1370, 1766, 1891], "tran": 1181, "assp": 1181, "vol": [1181, 1370, 1766], "pp": [1181, 1370, 1766], "236": 1181, "apr": 1181, "1984": 1181, "slide": [1181, 1329, 1330, 1331, 1363, 1409, 1410, 1411, 1467, 1509, 1539, 1540, 1541, 1583, 1706, 1707, 1798], "fft_size": 1181, "scriptmodul": [1182, 1183, 1188, 1191, 1193, 1194, 1195, 1199, 1200, 1654, 1854, 1856, 1865, 1895], "implic": [1182, 1199, 1907, 1911], "attributemodul": 1182, "names_ag": 1182, "9223372036854775807": [1182, 1629, 1867], "get_debug_st": 1183, "graphexecutorst": 1183, "_extra_fil": [1183, 1184, 1191, 1194, 1887], "save_to_buff": 1183, "add_modul": [1184, 1416], "init_weight": [1184, 1416, 1888], "buf": [1184, 1416], "20l": [1184, 1416], "1l": [1184, 1416], "5l": [1184, 1416], "syntax": [1184, 1854, 1857, 1899], "code_with_const": 1184, "constmap": 1184, "extra_repr": [1184, 1416, 1882], "get_buff": [1184, 1416], "attributeerror": [1184, 1416, 1882, 1902], "get_extra_st": [1184, 1416], "set_extra_st": [1184, 1416], "get_paramet": [1184, 1416], "net_b": [1184, 1416], "net_c": [1184, 1416], "inlined_graph": 1184, "ipu": [1184, 1416], "missing_kei": [1184, 1416], "unexpected_kei": [1184, 1416], "remove_dupl": [1184, 1416], "named_children": [1184, 1416, 1888], "conv4": [1184, 1416], "conv5": [1184, 1416], "memo": [1184, 1416], "register_backward_hook": [1184, 1416, 1592], "register_full_backward_hook": [1184, 1416, 1888], "register_buff": [1184, 1416, 1589, 1854, 1856, 1882, 1888], "register_forward_hook": [1184, 1416, 1590, 1888], "with_kwarg": [1184, 1416], "register_module_forward_hook": [1184, 1416, 1888], "register_forward_pre_hook": [1184, 1353, 1416, 1591, 1888], "forward_pr": [1184, 1416], "register_module_forward_pre_hook": [1184, 1416, 1888], "register_module_full_backward_hook": [1184, 1416, 1588, 1877, 1888], "register_full_backward_pre_hook": [1184, 1416, 1888], "register_module_full_backward_pre_hook": [1184, 1416, 1888], "register_load_state_dict_post_hook": [1184, 1416], "incompatible_kei": [1184, 1416], "register_modul": [1184, 1416, 1594], "register_paramet": [1184, 1416, 1595, 1882, 1888], "register_state_dict_pre_hook": [1184, 1416], "keep_var": [1184, 1416], "finetun": [1184, 1416], "gan": [1184, 1416, 1604, 1637], "share_memori": [1184, 1416, 1890], "share_memory_": [1184, 1416, 1869, 1913], "shallow": [1184, 1353, 1416, 1464, 1465], "channels_last": [1184, 1416, 1596, 1914], "4d": [1184, 1335, 1363, 1380, 1416, 1468, 1509, 1526, 1553, 1584, 1705], "1913": [1184, 1416], "3420": [1184, 1416], "5113": [1184, 1416, 1818], "2325": [1184, 1216, 1416], "gpu1": [1184, 1416], "1914": [1184, 1416], "5112": [1184, 1416, 1880], "3741": [1184, 1416], "2382": [1184, 1305, 1416], "5593": [1184, 1416], "4443": [1184, 1416], "6122": [1184, 1416], "1150": [1184, 1416], "to_empti": [1184, 1416], "dst_type": [1184, 1416], "xpu": [1184, 1416, 1901], "set_to_non": [1184, 1416, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1880], "the_typ": 1185, "the_valu": 1185, "script_bar": 1187, "addmod": 1187, "preserved_attr": 1188, "optimize_numer": 1188, "run_frozen_optim": 1188, "scripted_modul": [1188, 1195, 1893], "frozen_modul": 1188, "modified_tensor": 1188, "mymodule2": 1188, "dump_alias_db": 1188, "pdb": [1189, 1195, 1201, 1854, 1856], "training_method": 1189, "target_typ": 1190, "refin": [1190, 1871], "testcod": [1190, 1856], "key1": 1190, "val1": 1190, "key2": 1190, "val2": 1190, "_restore_shap": 1191, "scriptfunct": [1191, 1195, 1196, 1199, 1895], "readlin": [1191, 1255, 1899], "seek": [1191, 1255, 1899, 1902], "retrac": 1191, "rb": [1191, 1255], "extra_fil": [1191, 1194], "other_method": 1193, "lesser": [1193, 1877, 1879], "extent": [1193, 1879, 1911], "frozen_mod": 1193, "offlin": 1194, "_frames_up": 1195, "_rcb": 1195, "scriptdict": 1195, "scriptlist": 1195, "test_sum": 1195, "scripted_fn": [1195, 1854], "conv2": [1195, 1416, 1444, 1854, 1902], "some_entry_point": 1195, "python_only_fn": 1195, "testnnmodul": 1195, "pdt_model": 1195, "scripted_model": [1195, 1899], "un": [1197, 1339, 1902], "unfus": 1197, "nb": 1197, "check_trac": [1199, 1200], "check_input": [1199, 1200, 1854], "check_toler": [1199, 1200], "_force_outplac": [1199, 1200], "_module_class": [1199, 1200], "_compilation_unit": [1199, 1200], "compilationunit": [1199, 1200], "example_kwarg_input": 1199, "_store_input": [1199, 1200], "trace_modul": [1199, 1854, 1857], "untrack": 1199, "checker": [1199, 1200, 1857, 1895], "diverg": [1199, 1200, 1382, 1527, 1852, 1857], "traced_foo": [1199, 1854], "example_weight": [1199, 1200], "example_forward_input": [1199, 1200], "example_inputs_is_kwarg": 1200, "method2": 1200, "example_method2_input": 1200, "weighted_kernel_sum": 1200, "use_memory_effici": 1201, "memory_effici": 1201, "scriptabl": 1201, "kaiser": [1203, 1459, 1461, 1463], "i_0": [1203, 1204, 1765, 1818, 1912], "zeroth": [1203, 1765, 1912], "out_i": 1203, "kroneck": 1204, "a_0": 1204, "a_n": 1204, "b_0": 1204, "b_1": 1204, "b_n": 1204, "k_0": [1204, 1818], "k_1": 1204, "k_n": 1204, "j_0": 1204, "j_1": 1204, "j_n": 1204, "k_t": 1204, "i_t": [1204, 1386, 1670], "b_t": 1204, "j_t": 1204, "bmatrix": 1204, "a_": [1204, 1275, 1404, 1818], "cdot": [1204, 1229, 1241, 1332, 1333, 1351, 1352, 1374, 1382, 1419, 1420, 1421, 1422, 1423, 1459, 1497, 1520, 1695, 1798, 1912, 1918], "vdot": [1204, 1251, 1252, 1855, 1897], "ddot": [1204, 1251], "kth": 1205, "full_lik": [1209, 1855, 1859, 1897], "logarithm": [1212, 1217, 1243, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1270, 1339, 1499, 1534, 1778, 1912], "gamma": [1212, 1334, 1335, 1336, 1371, 1379, 1380, 1381, 1388, 1455, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1671, 1673, 1677, 1678, 1681, 1686, 1687, 1705, 1852, 1855, 1895, 1897, 1898, 1912], "5724": [1212, 1912], "1208": [1212, 1912], "mathrlap": [1213, 1219, 1220, 1221, 1222, 1230, 1233, 1242, 1244, 1246, 1247, 1603], "qquad": [1213, 1215, 1219, 1220, 1221, 1222, 1223, 1230, 1233, 1242, 1244, 1246, 1247, 1603], "eigenvalu": [1213, 1219, 1220, 1221, 1222, 1235, 1238, 1241, 1246, 1247, 1256, 1691, 1855], "resp": [1213, 1220, 1222, 1246, 1247, 1264], "5266": 1213, "9586": 1213, "0626j": 1213, "4160": 1213, "5895": 1213, "2322": 1213, "2976j": 1213, "4928": [1213, 1818], "4692e": 1213, "8747e": 1213, "check_error": [1214, 1225, 1227, 1232, 1245, 1855], "performantli": 1214, "3792": 1214, "9831j": 1214, "8757": 1214, "5425": 1214, "6374j": 1214, "kappa": 1215, "_p": [1215, 1425], "frobeniu": [1215, 1229, 1236, 1240, 1643], "nuc": [1215, 1236, 1240, 1253, 1614, 1623, 1643], "nuclear": [1215, 1236, 1240, 1643], "sigma_1": [1215, 1229, 1238, 1241], "sigma_n": 1215, "kappa_2": 1215, "kappa_": 1215, "4142": [1215, 1240, 1643, 1695], "1623": [1215, 1236], "2426": [1215, 1240, 1643], "7071": [1215, 1758], "5917": 1215, "9941": 1216, "5132": 1216, "5681": 1216, "4653": 1216, "4507": 1216, "4119": 1216, "6163": 1216, "1073": 1216, "3957": 1216, "9666": [1216, 1506], "0840": 1216, "3357": 1216, "2139": 1216, "slogdet": [1217, 1264, 1855, 1897], "0934": 1217, "1990": [1217, 1264], "4099": [1217, 1264], "7386": [1217, 1264], "diagonaliz": [1219, 1221], "eigenvector": [1219, 1220, 1256, 1855], "neq": [1219, 1220, 1223, 1247, 1317, 1419, 1421, 1656, 1657, 1658, 1660, 1662, 1668, 1669, 1671, 1675, 1802], "phi": [1219, 1220, 1247, 1366, 1513, 1802], "shall": [1219, 1220, 1247, 1605, 1609], "lambda_i": [1219, 1220, 1235], "lambda_j": [1219, 1220], "eigval": [1219, 1855], "9828": [1219, 1826, 1888], "3889j": 1219, "4617": 1219, "3010j": 1219, "1662": 1219, "7435j": 1219, "6139": 1219, "0562j": 1219, "1226": [1219, 1221], "5738j": [1219, 1221], "7537": [1219, 1221], "1286j": [1219, 1221], "9218": 1219, "1882": 1219, "2220j": 1219, "0270": 1219, "3867j": 1219, "7119e": 1219, "2841e": 1219, "uplo": [1220, 1222, 1855], "unitari": [1220, 1223, 1242, 1247, 1603, 1689], "eigvalsh": [1220, 1238], "9228": [1220, 1222], "2029": [1220, 1222], "0862j": [1220, 1222], "3464": [1220, 1222], "3277": [1220, 1222], "9415": [1220, 1222], "0846": 1220, "9964": 1220, "9170": 1220, "3898j": 1220, "0331j": 1220, "1062e": 1220, "5423e": 1220, "polynomi": [1221, 1222, 1684], "_n": [1221, 1222, 1224, 1603, 1882], "4576e": [1221, 1248], "5797": 1222, "4629": 1222, "1605": 1222, "3780": 1222, "1113": [1222, 1888], "7381": 1222, "h_1h_2": 1223, "h_k": 1223, "h_i": [1223, 1450], "_m": [1223, 1603], "tau_i": 1223, "8034": 1223, "4184j": 1223, "2588": 1223, "0174j": 1223, "6853": 1223, "7953j": 1223, "0790": 1223, "5620j": 1223, "6989j": 1223, "5360": 1223, "1193j": 1223, "3877": 1223, "6691j": 1223, "3512": 1223, "3024j": 1223, "4766": 1223, "5783j": 1223, "0361": [1223, 1888], "6587j": 1223, "6396": [1223, 1888], "1612j": 1223, "3693": 1223, "4481j": 1223, "aa": 1224, "pinv": [1224, 1229, 1693], "moor": [1224, 1241], "penros": [1224, 1241], "ainv": [1224, 1225, 1245, 1249], "1921e": 1224, "9073e": [1224, 1467], "5107e": 1224, "ldl": [1226, 1228], "indefinit": 1226, "ld": [1226, 1227, 1228, 1855], "sytrf": [1226, 1227], "ldl_solv": 1226, "ldl_factor_ex": [1226, 1228], "2079": [1226, 1227, 1912], "2414": [1226, 1227], "9428": [1226, 1227], "4554": [1226, 1227], "3264": [1226, 1227], "3823": [1226, 1227], "5884": [1226, 1227], "9595": [1226, 1227, 1758], "2695": [1226, 1227], "8513": [1226, 1227], "1633": [1226, 1227], "ldl_factor": 1227, "rcond": [1229, 1241, 1693, 1855], "_f": 1229, "gelsi": 1229, "gelsd": 1229, "gelss": 1229, "tridiagon": 1229, "sigma_i": [1229, 1247, 1802], "residu": [1229, 1256, 1855, 1888], "singular_valu": [1229, 1855], "lh": 1229, "rh": [1229, 1274], "0838": [1229, 1888], "2275": [1229, 1304], "3844": 1229, "5499": 1229, "1175": 1229, "9102": 1229, "0870": 1229, "6772": 1229, "7758": 1229, "5109": 1229, "4382": 1229, "3769": 1229, "1818": 1229, "3450": 1229, "0806": [1229, 1888], "3967": 1229, "3994": 1229, "1521": 1229, "1473": 1229, "9194": 1229, "0458": 1229, "6705": [1229, 1288], "1802": 1229, "4086": 1229, "5152e": 1229, "almost": [1230, 1231, 1894], "5007": 1230, "9755": 1230, "0489": 1230, "9644": [1230, 1283], "9605e": 1230, "0376e": 1230, "lu_factor_ex": [1231, 1273], "lu_unpack": [1231, 1273, 1855, 1897], "b1": 1231, "b2": [1231, 1880, 1886], "a_factor": 1231, "getrf": [1232, 1245], "adjoint": [1233, 1855, 1897, 1915, 1917], "_exp": 1235, "3891": 1235, "8660": 1235, "ord": [1236, 1240, 1253, 1643, 1855, 1857, 1897], "la": [1236, 1240, 1253, 1888], "2829": 1236, "2627": 1236, "0756": 1237, "4980": 1237, "6617": 1237, "4994": 1237, "9980": 1237, "2731": 1237, "8001": 1237, "2640": 1237, "4571": 1237, "5511": 1237, "0163": [1237, 1283], "5292": 1237, "4899": 1237, "0822": 1237, "2773": [1237, 1872], "varepsilon": [1238, 1241], "tol": [1238, 1256, 1855], "fewest": 1239, "nd": [1239, 1891], "bc": [1239, 1898], "75000": 1239, "148": 1239, "vector_norm": [1240, 1643], "matrix_norm": [1240, 1253, 1604, 1643], "7460": [1240, 1643], "3485": 1240, "8570e": 1240, "8480": 1240, "2361": [1240, 1643, 1644], "7417": [1240, 1643], "computation": [1241, 1885], "5495": [1241, 1304], "0979": 1241, "4092": 1241, "4132": [1241, 1764], "1143": 1241, "3662": 1241, "6374": 1241, "9294": 1241, "3269": [1241, 1888], "5745": [1241, 1796, 1797, 1839, 1840], "0382": [1241, 1305], "5922": 1241, "6759": 1241, "0600": 1241, "1933": 1241, "2090": 1241, "0903": 1241, "0817": 1241, "4752": [1241, 1801], "7124": 1241, "1631": 1241, "2272": 1241, "1356": 1241, "3933": 1241, "5023": 1241, "0308": 1241, "1725": 1241, "5216": 1241, "apinv": 1241, "5633e": 1241, "0830e": 1241, "wide": [1242, 1247, 1603, 1760, 1879, 1882, 1888, 1898], "51": [1242, 1414, 1701], "167": [1242, 1701], "68": [1242, 1701, 1854, 1856], "8571": [1242, 1701], "3943": [1242, 1701], "3314": [1242, 1701], "4286": [1242, 1701], "9029": [1242, 1701], "0343": [1242, 1701], "2857": [1242, 1701], "1714": [1242, 1701, 1888], "9429": [1242, 1701], "175": [1242, 1701], "q2": 1242, "r2": [1242, 1455], "6099e": 1242, "2158e": 1242, "logabsdet": [1243, 1855], "0032": 1243, "1219": [1243, 1720], "6690": 1243, "1161": 1243, "4053": 1243, "6218": [1243, 1815], "9273": 1243, "0082": 1243, "7576": 1243, "logdet": [1243, 1855, 1897], "linalg_slogdet": [1243, 1855, 1897], "2776": 1243, "solve_triangular": [1244, 1825], "expand_a": [1244, 1855, 1882, 1897, 1915], "rectangular": [1246, 1247, 1275, 1875], "triu_": [1246, 1855], "tril_": [1246, 1855], "full_matric": [1247, 1248, 1608, 1802, 1853, 1855], "vh": [1247, 1608, 1802, 1853, 1855], "gesvdj": [1247, 1248, 1802], "jacobi": 1247, "gesvda": [1247, 1248], "gesvd": [1247, 1248, 1802], "u_k": 1247, "v_k": 1247, "sigma_j": [1247, 1802], "eigendecomposit": 1247, "0486e": 1247, "0957e": 1247, "5139": 1248, "1087": 1248, "1066": 1248, "ind": [1249, 1250, 1855, 1883], "tensorsolv": 1249, "atensorinv": 1249, "movedim": [1250, 1290, 1855, 1883, 1897, 1915], "tensorinv": 1250, "vandermond": [1251, 1838], "pmatrix": 1251, "x_n": [1251, 1332, 1333, 1376, 1377, 1383, 1407, 1447, 1823, 1877], "125": [1251, 1434, 1838, 1855], "overlin": [1252, 1841], "3223": 1252, "2815": 1252, "1944": [1252, 1888], "4345": 1253, "pickle_modul": [1255, 1733], "weights_onli": [1255, 1851, 1866], "pickle_load_arg": 1255, "register_packag": 1255, "binaryio": [1255, 1733, 1899], "untrust": [1255, 1851, 1866, 1899], "unsaf": [1255, 1605, 1608, 1855, 1880, 1899], "tamper": [1255, 1899], "ram": [1255, 1880], "surg": 1255, "decod": [1255, 1459, 1460, 1461, 1596, 1899], "utf": [1255, 1895, 1899], "unicodedecodeerror": 1255, "codec": 1255, "0x": 1255, "latin1": 1255, "byte_arrai": 1255, "niter": [1256, 1691, 1803], "ortho_iparam": 1256, "ortho_fparam": 1256, "ortho_bparam": 1256, "knyazev": 1256, "knyazev2001": 1256, "stathopoulosetal2002": 1256, "converg": [1256, 1447, 1603, 1658, 1659, 1683, 1876, 1888, 1891], "precondition": 1256, "eigenpair": 1256, "criterion": [1256, 1332, 1333, 1350, 1352, 1377, 1383, 1407, 1408, 1419, 1420, 1421, 1447, 1448, 1464, 1465, 1498, 1676, 1708, 1884], "fep": 1256, "eigenproblem": 1256, "iparam": 1256, "fparam": 1256, "bparam": 1256, "ivar": 1256, "fvar": 1256, "bvar": 1256, "tvar": 1256, "istep": 1256, "converged_count": 1256, "rerr": 1256, "force_stop": 1256, "2001": 1256, "precondit": 1256, "eigensolv": 1256, "siam": 1256, "sci": 1256, "517": 1256, "541": 1256, "epub": 1256, "doi": [1256, 1370, 1766], "1137": 1256, "s1064827500366124": 1256, "andrea": 1256, "stathopoulo": 1256, "kesheng": 1256, "2002": [1256, 1766], "2165": 1256, "2182": 1256, "s1064827500370883": 1256, "duerschetal2018": 1256, "jed": 1256, "duersch": 1256, "meiyu": 1256, "shao": 1256, "chao": 1256, "ming": 1256, "gu": 1256, "c655": 1256, "c676": 1256, "17m1129830": 1256, "log_": [1257, 1258, 1259, 1260, 1855, 1870], "7767": 1257, "3234": 1257, "2156": 1257, "2411": 1257, "5739": 1257, "5637": 1257, "4640": 1257, "1952": 1257, "4226": 1257, "5204": [1257, 1710], "5224": 1258, "9354": 1258, "7257": 1258, "1301": 1258, "2820": 1258, "0290": 1258, "1392": 1258, "8857": 1258, "6476": 1258, "0090": [1259, 1318, 1697, 1912], "9923": 1259, "5372": 1259, "2492": 1259, "8653": 1259, "7055": 1259, "7705": 1259, "2225": 1259, "8419": 1260, "8003": [1260, 1892], "9971": 1260, "5287": 1260, "0490": 1260, "2483": 1260, "0042": 1260, "9196": 1260, "3504": [1260, 1818], "logsumexp": [1261, 1855, 1870, 1897, 1912], "3069": 1261, "6867": 1261, "8731": 1261, "30000": 1261, "1269e": 1261, "log_2": 1262, "logaddexp": [1262, 1855, 1897], "limits_": 1263, "42296738": 1263, "04462666": 1263, "86278635": 1263, "94622083": 1263, "05277811": 1263, "39202815": 1263, "83525007": 1263, "84492621": 1263, "06084887": 1263, "06844475": 1263, "2611": [1264, 1815], "9254": 1264, "6213": [1264, 1888], "6843": 1264, "3242": 1264, "9665": 1264, "4539": 1264, "0887": [1264, 1912], "1336": 1264, "4025": 1264, "7089": [1264, 1359], "9032": 1264, "3031": 1264, "2589": 1270, "1135": 1270, "5481": [1270, 1283, 1888], "9566": 1270, "sum_j": [1271, 1406, 1449, 1451, 1571, 1781, 1912], "0593": [1271, 1888], "5696": 1271, "6859e": 1271, "compute_pivot": 1273, "transposit": [1273, 1822, 1911], "perm": 1273, "a_lu": 1273, "5558": 1273, "1684": 1273, "1551": 1273, "1940": 1273, "6189": 1273, "5497": 1273, "4526": 1273, "2526": 1273, "3285": 1273, "7988": 1273, "7175": 1273, "9701": 1273, "2634": 1273, "9255": 1273, "3459": 1273, "00000e": 1274, "8312": 1274, "unpack_data": [1275, 1855], "unpack_pivot": [1275, 1855], "l_": [1275, 1321, 1325, 1329, 1333, 1344, 1345, 1346, 1347, 1384, 1409], "u_": [1275, 1656, 1660], "3552": [1277, 1507], "3825": 1277, "8297": 1277, "3477": 1277, "2035": [1277, 1796, 1797, 1839, 1840], "2252": [1277, 1912], "5002": 1277, "6248": [1277, 1286], "1307": 1277, "0608": [1277, 1775], "1244": 1277, "0139": 1277, "6763": 1281, "7445": 1281, "2369": 1281, "argmax": [1281, 1324, 1409, 1539, 1540, 1541, 1813, 1853, 1855, 1897], "max_indic": 1281, "2360": 1281, "2942": 1281, "1222": [1281, 1888], "8475": 1281, "1949": 1281, "1127": 1281, "6702": 1281, "5717": 1281, "9207": 1281, "1297": 1281, "8768": 1281, "6172": 1281, "6060": 1281, "2432": 1281, "3288": 1283, "3367": 1283, "nanmean": [1283, 1855, 1897], "3841": 1283, "6320": 1283, "4254": 1283, "7384": 1283, "0131": 1283, "6549": [1283, 1758], "4279": 1283, "3350": 1283, "7694": 1283, "5600": [1283, 1468], "0842": 1283, "9580": 1283, "3623": 1283, "2343": [1283, 1872], "5085": 1283, "4599": 1283, "1807": 1283, "5219": 1284, "5212": 1284, "2202": 1284, "2505": 1284, "3982": 1284, "9948": 1284, "3518": 1284, "3131": 1284, "3180": [1284, 1911], "6993": 1284, "0436": 1284, "0438": 1284, "2270": 1284, "2751": 1284, "7303": 1284, "2192": 1284, "3321": 1284, "2488": 1284, "0778": 1284, "9510": 1284, "7048": 1284, "4742": [1284, 1831, 1912], "7125": [1284, 1783], "plot": [1285, 1879, 1901, 1916], "t_0": [1285, 1676], "t_": [1285, 1365, 1511, 1675, 1676, 1855, 1911], "s_0": 1285, "s_": [1285, 1322, 1323, 1362, 1466], "g_0": 1285, "g_": [1285, 1660, 1670, 1671], "g_i": 1285, "t_i": 1285, "0d": [1285, 1408], "xy": 1285, "50276": 1285, "cartesian_prod": [1285, 1855, 1897], "grid_x": 1285, "grid_i": 1285, "dstack": [1285, 1855, 1897, 1911], "matplotlib": [1285, 1916], "pyplot": [1285, 1916], "plt": 1285, "plot_surfac": 1285, "6750": 1286, "0857": [1286, 1828], "7197": [1286, 1847], "argmin": [1286, 1853, 1855, 1897], "min_indic": [1286, 1855], "1334": 1286, "2803": 1286, "4644": [1286, 1796, 1797, 1839, 1840], "2635": [1286, 1888], "3651": 1286, "0384": 1286, "0128": 1286, "7015": 1286, "1153": 1286, "9849": 1286, "1458": [1286, 1912], "5788": 1286, "deduc": [1288, 1911], "4851": 1288, "5037": 1288, "3633": 1288, "0760": 1288, "3362": [1290, 1291], "8437": [1290, 1291], "9627": [1290, 1291], "1727": [1290, 1291], "5173": [1290, 1291], "1398": [1290, 1291], "mpsalloc": [1292, 1293], "metal": [1293, 1301, 1865, 1889], "mpsgraph": 1293, "wait_until_complet": [1297, 1298], "signpost": [1297, 1298, 1299], "xcode": 1298, "recommendedmaxworkingsets": 1301, "unlimit": [1301, 1880], "1321": 1304, "4370": 1304, "1289": 1304, "0527": 1304, "3077": [1304, 1792], "0881": 1304, "1259": 1304, "0284": 1304, "2015": [1305, 1875, 1888], "6087": 1305, "1494": 1305, "5491": 1305, "260": 1305, "8663": 1305, "3137": 1305, "0700": 1305, "8378": 1305, "5146": 1305, "1216": 1305, "5244": 1305, "5767": 1305, "1363": 1305, "5877": 1305, "5083": 1305, "1614": 1305, "1645": 1305, "7021": 1305, "0085": 1305, "0367": 1305, "1567": 1305, "4312": 1305, "1019": 1305, "4394": 1305, "8753": 1305, "_sampl": 1306, "thtensorrandom": 1306, "320": [1306, 1442], "0404": 1308, "6361": 1308, "multigammaln": [1309, 1912], "4028e": 1310, "1400e": 1310, "isnan": [1311, 1853, 1855, 1897, 1911], "midpoint": [1313, 1702], "weakli": [1315, 1316, 1912], "to_spars": [1316, 1779, 1855, 1892, 1897, 1911], "2262": [1318, 1697], "0682": [1318, 1697], "2866": [1318, 1697], "3940": [1318, 1697], "5x7": [1322, 1326], "7x7": [1322, 1326], "10x7": [1322, 1326], "cube": [1323, 1327, 1708], "d_": [1323, 1327, 1331, 1343, 1346, 1349, 1411, 1414, 1439, 1442, 1468, 1473, 1515, 1826, 1827, 1828, 1829], "5x7x9": [1323, 1327], "7x7x7": [1323, 1327], "7x9x8": [1323, 1327], "n_class": 1324, "cutoff": [1324, 1875], "div_valu": 1324, "head_bia": 1324, "edouard": 1324, "grave": [1324, 1339], "armand": 1324, "joulin": 1324, "moustapha": 1324, "ciss\u00e9": 1324, "grangier": 1324, "herv\u00e9": 1324, "j\u00e9gou": 1324, "imbalanc": 1324, "zipf": 1324, "law": 1324, "102": 1324, "1001": 1324, "1002": 1324, "_class": 1324, "maxunpool1d": [1325, 1409, 1542, 1837], "maxunpool2d": [1326, 1364, 1410, 1543, 1837], "maxunpool3d": [1327, 1365, 1411, 1544, 1837], "selu": [1328, 1361, 1508, 1855, 1875, 1895, 1897], "n_i": [1329, 1330, 1331, 1344, 1345, 1346, 1409, 1410, 1411, 1464, 1465], "c_j": [1329, 1330, 1331, 1409, 1410, 1411], "size_averag": [1332, 1333, 1350, 1352, 1376, 1382, 1383, 1407, 1408, 1419, 1420, 1421, 1423, 1430, 1447, 1448, 1464, 1487, 1488, 1496, 1498, 1523, 1527, 1528, 1538, 1546, 1547, 1548, 1549, 1550, 1558, 1569, 1570, 1581, 1855], "unreduc": [1332, 1333, 1352, 1377, 1383, 1407, 1423, 1447, 1465], "ell": [1332, 1333, 1352, 1376, 1377, 1383, 1407, 1423, 1447, 1465], "l_1": [1332, 1333, 1352, 1376, 1377, 1383, 1407, 1423, 1447, 1465], "l_n": [1332, 1333, 1352, 1376, 1377, 1383, 1407, 1423, 1447, 1465], "w_n": [1332, 1333, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766], "y_n": [1332, 1333, 1352, 1376, 1377, 1383, 1407, 1423, 1447, 1823, 1877], "lim_": [1332, 1877], "secondli": 1332, "straight": [1332, 1517], "rescal": [1332, 1333, 1352, 1420, 1421, 1423, 1449, 1451, 1487, 1488, 1498, 1550, 1608, 1637], "nbatch": [1332, 1333], "pos_weight": [1333, 1488, 1855], "classif": [1333, 1339, 1352, 1419, 1421, 1423, 1448, 1499, 1852, 1875, 1903], "ell_c": 1333, "l_c": 1333, "p_c": 1333, "random_": [1333, 1352, 1423, 1488, 1855, 1870, 1919], "hat": [1334, 1335, 1336, 1379, 1380, 1381, 1455], "terminologi": [1334, 1335, 1336, 1455], "tempor": [1334, 1336, 1339, 1455, 1468, 1499, 1526, 1584], "5d": [1336, 1381, 1468, 1515, 1526, 1553, 1584], "volumetr": [1336, 1455, 1468, 1515, 1526, 1584, 1585, 1586], "spatio": [1336, 1455], "in1_featur": 1337, "in2_featur": 1337, "in1": [1337, 1486], "in2": [1337, 1486], "blank": [1339, 1499, 1855, 1858], "zero_infin": [1339, 1499, 1855], "connectionist": [1339, 1499], "unseg": 1339, "longest": [1339, 1630, 1632, 1633, 1884], "input_length": [1339, 1499, 1855, 1884], "target_length": [1339, 1499, 1855], "s_n": 1339, "target_n": 1339, "unbatch": [1339, 1352, 1363, 1368, 1379, 1386, 1422, 1431, 1459, 1509], "s_min": 1339, "toronto": 1339, "edu": [1339, 1708], "icml_2006": 1339, "256": [1339, 1698, 1880, 1895], "background": [1339, 1347, 1515, 1553, 1890, 1907], "channel_shuffl": [1340, 1855, 1897], "_left": [1341, 1342, 1343, 1437, 1438, 1439, 1440, 1441, 1442, 1471, 1472, 1473, 1553], "_right": [1341, 1342, 1343, 1437, 1438, 1439, 1440, 1441, 1442, 1471, 1472, 1473, 1553], "0491": [1341, 1471], "7152": [1341, 1471], "0749": [1341, 1471], "3287": [1341, 1471], "8966": [1341, 1471], "1466": [1341, 1471], "2771": [1341, 1471], "6616": [1341, 1471], "4523": [1341, 1471], "1255": [1341, 1471], "6372": [1341, 1471, 1802], "1182": [1341, 1471], "8652": [1341, 1471], "_top": [1342, 1343, 1438, 1439, 1441, 1442, 1472, 1473, 1553], "_bottom": [1342, 1343, 1438, 1439, 1441, 1442, 1472, 1473, 1553], "6585": 1342, "4320": [1342, 1811], "8701": 1342, "4649": 1342, "_front": [1343, 1439, 1442, 1473, 1553], "_back": [1343, 1439, 1442, 1473, 1553], "_j": [1344, 1345], "star": [1344, 1345, 1346, 1857], "\u00e0": [1344, 1345, 1346, 1347, 1348, 1349, 1363, 1467], "trou": [1344, 1345, 1346, 1347, 1348, 1349, 1363, 1467], "harder": [1344, 1345, 1346, 1347, 1348, 1349, 1363, 1410, 1411, 1467], "nice": [1344, 1345, 1346, 1347, 1348, 1349, 1363, 1409, 1410, 1411, 1467, 1871, 1877, 1899], "prod_": [1345, 1346, 1348, 1349, 1362, 1466, 1662], "out_j": 1346, "deconvolut": [1347, 1348, 1349, 1493, 1494, 1495], "_pad": [1347, 1348, 1349], "dissimilar": [1350, 1376], "semi": [1350, 1376, 1875], "supervis": [1350, 1376], "vert": [1351, 1425, 1497], "_2": [1351, 1497, 1604, 1637], "ast_1": [1351, 1367], "ast_2": [1351, 1367], "ignore_index": [1352, 1423, 1498, 1550, 1855], "label_smooth": [1352, 1498, 1855], "unbalanc": [1352, 1423], "d_1": [1352, 1423, 1498, 1550], "d_2": [1352, 1423, 1498, 1550], "d_k": [1352, 1423, 1498, 1550], "_index": [1352, 1423], "logsoftmax": [1352, 1423, 1449, 1534], "nllloss": [1352, 1449, 1550, 1571, 1837], "blend": 1352, "smooth": [1352, 1377, 1447, 1452, 1498, 1669], "w_c": 1352, "truth": [1352, 1498, 1864, 1916], "rethink": [1352, 1498], "incept": [1352, 1498], "spectral_norm": [1353, 1627], "neuron": 1354, "detector": 1354, "dropout1d": [1356, 1855], "_freez": 1359, "sparseadam": [1359, 1898], "0251": 1359, "6902": [1359, 1699], "7172": 1359, "6431": 1359, "0748": 1359, "6969": 1359, "4970": 1359, "3448": 1359, "9685": 1359, "3677": 1359, "7265": 1359, "1685": 1359, "4362": 1359, "4004": [1359, 1783], "9400": 1359, "9124": 1359, "3616": 1359, "1151": 1359, "0309": 1359, "9315": 1359, "1655": [1359, 1880], "9897": 1359, "0635": 1359, "7895": 1359, "0364": 1359, "6778": 1359, "5803": 1359, "bag": [1360, 1507], "per_sample_weight": [1360, 1507, 1855], "embedding_sum": 1360, "8861": 1360, "4350": 1360, "0523": 1360, "1306": 1360, "5798": 1360, "0044": 1360, "7082": [1360, 1507], "2145": [1360, 1507], "6251": [1360, 1507], "6500": 1360, "satur": [1361, 1508], "alphadropout": [1361, 1481], "160": [1362, 1898], "unfold": [1363, 1855, 1897, 1915], "prod_d": [1363, 1467], "neighborhood": [1363, 1467], "col2im": [1363, 1853, 1855, 1897], "fold_param": [1363, 1467], "input_on": [1363, 1467], "output_ratio": [1364, 1365, 1510, 1511, 1855], "_random_sampl": [1364, 1365, 1510, 1511, 1855], "ben": [1364, 1365, 1510, 1511], "graham": [1364, 1365, 1510, 1511], "oh": [1364, 1365, 1510, 1511], "ow": [1364, 1365, 1510, 1511], "_ratio": [1364, 1365, 1511], "13x12": [1364, 1510], "kt": [1365, 1484, 1492, 1495, 1511, 1541], "ot": [1365, 1511], "13x12x11": [1365, 1511], "044715": [1366, 1513], "pack_sequ": [1368, 1386, 1431, 1632, 1634], "bias_ih": [1369, 1387, 1433], "bias_hh": [1369, 1387, 1433], "const": [1370, 1887], "homoscedast": [1370, 1512], "heteroscedast": [1370, 1512], "nix": 1370, "weigend": 1370, "1994": 1370, "icnn": 1370, "94": 1370, "orlando": 1370, "fl": 1370, "usa": [1370, 1916], "374138": 1370, "instancenorm": [1371, 1904], "shrinkag": [1372, 1453, 1518, 1574], "mobilenetv3": [1374, 1520], "_val": 1375, "l1loss": [1377, 1447, 1528], "outlier": [1377, 1447, 1902, 1903], "huber": [1377, 1447], "smoothl1loss": [1377, 1569], "insensit": 1378, "unused_argument1": 1378, "unused_argument2": 1378, "ingredi": [1379, 1380, 1381], "styliz": [1379, 1380, 1381], "rgb": [1380, 1381, 1916], "color": [1381, 1856, 1857, 1916], "log_target": [1382, 1527, 1855], "pred": [1382, 1596, 1853, 1889, 1898, 1907], "kl": [1382, 1527, 1852], "summaris": 1382, "loss_pointwis": 1382, "batchmean": [1382, 1527], "kl_loss": 1382, "mae": 1383, "f_t": [1386, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "hf": [1386, 1387], "g_t": [1386, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "ig": [1386, 1387], "hg": [1386, 1387], "o_t": 1386, "ho": [1386, 1387], "c_t": 1386, "odot": 1386, "forget": [1386, 1856, 1857], "proj_siz": [1386, 1432], "1402": 1386, "c_0": [1386, 1387], "proj": 1386, "c_n": 1386, "w_ii": 1386, "w_if": 1386, "w_ig": 1386, "w_io": 1386, "w_hi": 1386, "w_hf": 1386, "w_hg": 1386, "w_ho": 1386, "b_ii": 1386, "b_if": 1386, "b_ig": 1386, "b_io": 1386, "b_hi": 1386, "b_hf": 1386, "b_hg": 1386, "b_ho": 1386, "weight_hr_l": 1386, "_revers": 1386, "h_1": 1387, "c_1": 1387, "time_step": 1387, "_shape": 1388, "sentence_length": 1388, "lazymodulemixin": [1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401], "cls_to_becom": [1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1599], "convtranspose1d": [1395, 1493, 1837, 1904], "convtranspose3d": [1397, 1495, 1837, 1904], "instancenorm1d": [1398, 1525, 1904], "instancenorm2d": [1399, 1525, 1904], "instancenorm3d": [1400, 1525, 1904], "uninitializedparamet": [1401, 1587, 1852], "lrn": 1404, "signal_2d": 1404, "signal_4d": 1404, "output_2d": 1404, "output_4d": 1404, "x_j": [1406, 1449, 1451, 1571, 1781, 1885, 1912], "80827": [1412, 1413, 1414], "unpool": [1412, 1413, 1414], "maxpool3d": [1414, 1541, 1544, 1837, 1904], "unpooled_output": 1414, "t_destin": 1416, "lrelu": [1417, 1888], "hing": [1419, 1421], "sum_i": [1420, 1421, 1448], "nelement": [1420, 1448], "jointli": 1422, "concat": [1422, 1855, 1897], "head_1": 1422, "head_h": 1422, "head_i": 1422, "qw_i": 1422, "kw_i": 1422, "vw_i": 1422, "scaled_dot_product_attent": [1422, 1855, 1897], "fastpath": 1422, "inference_mod": [1422, 1463], "nestedtensor": [1422, 1463, 1872], "multihead_attn": 1422, "e_q": 1422, "e_k": 1422, "e_v": 1422, "_head": [1422, 1459], "merge_mask": 1422, "mask_typ": 1422, "merged_mask": 1422, "nll": 1423, "crossentropyloss": [1423, 1498], "num_paramet": 1424, "nchannel": 1424, "decai": [1424, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1671, 1674, 1678, 1680, 1681, 1684, 1685, 1687, 1759, 1898], "legitim": [1424, 1515, 1883], "vert_p": 1425, "fromkei": 1426, "popitem": [1426, 1897], "setdefault": [1426, 1897], "upscale_factor": [1428, 1556, 1855], "upscal": 1428, "shi": [1428, 1429], "2016": [1428, 1429, 1465], "_factor": [1428, 1429, 1468, 1469, 1470], "pixel_shuffl": [1428, 1855, 1897, 1904], "downscale_factor": [1429, 1557, 1855], "pixelshuffl": [1429, 1556, 1557], "downscal": 1429, "pixel_unshuffl": [1429, 1855, 1897, 1904], "log_input": [1430, 1558, 1855], "poisson": [1430, 1558, 1759, 1852, 1855, 1897], "stirl": [1430, 1558], "hh": [1431, 1433], "flatten_paramet": 1432, "3333333333333333": [1434, 1674, 1680, 1855], "leaki": [1434, 1563, 1875], "rectifi": [1434, 1435, 1560, 1875], "liner": 1434, "empir": 1434, "1505": 1434, "00853": 1434, "crelu": 1435, "1603": 1435, "05201": 1435, "480": 1442, "6732632423543772848170429916717": [1443, 1566], "0507009873554804934193349852946": [1443, 1566], "kaiming_norm": 1443, "kaiming_normal_": [1443, 1852, 1859, 1875], "initialis": 1443, "calculate_gain": [1443, 1852, 1859, 1875], "modulelist": [1444, 1888], "cascad": 1444, "relu2": [1444, 1587], "swish": [1445, 1568], "coin": [1445, 1568], "explod": 1447, "cnn": [1447, 1902], "ross": 1447, "girshick": 1447, "quadrat": [1447, 1884], "huberloss": [1447, 1524], "lie": [1449, 1451, 1571, 1781, 1912, 1916], "w_j": 1450, "soft": [1453, 1517, 1574], "softshrinkag": 1453, "convert_sync_batchnorm": 1455, "r1": 1455, "sync_bn_network": 1455, "ddp_sync_bn_network": 1455, "sync_bn_modul": 1455, "d_model": [1459, 1460, 1461, 1462, 1463], "nhead": [1459, 1460, 1461, 1462, 1463], "num_encoder_lay": 1459, "num_decoder_lay": 1459, "dim_feedforward": [1459, 1461, 1463], "custom_encod": 1459, "custom_decod": 1459, "layer_norm_ep": [1459, 1461, 1463], "norm_first": [1459, 1461, 1463], "ashish": [1459, 1461, 1463], "vaswani": [1459, 1461, 1463], "noam": [1459, 1461, 1463], "shazeer": [1459, 1461, 1463], "niki": [1459, 1461, 1463], "parmar": [1459, 1461, 1463], "jakob": [1459, 1461, 1463], "uszkoreit": [1459, 1461, 1463], "llion": [1459, 1461, 1463], "jone": [1459, 1461, 1463], "aidan": [1459, 1461, 1463], "gomez": [1459, 1461, 1463], "lukasz": [1459, 1461, 1463], "illia": [1459, 1461, 1463], "polosukhin": [1459, 1461, 1463], "6010": [1459, 1461, 1463], "feedforward": [1459, 1461, 1463, 1875], "transformer_model": 1459, "word_language_model": 1459, "src_mask": [1459, 1463], "tgt_mask": [1459, 1460, 1461], "memory_mask": [1459, 1460, 1461], "src_key_padding_mask": [1459, 1462, 1463], "tgt_key_padding_mask": [1459, 1460, 1461], "memory_key_padding_mask": [1459, 1460, 1461], "_mask": [1459, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626], "_key_padding_mask": 1459, "generate_square_subsequent_mask": 1459, "sz": 1459, "decoder_lay": [1460, 1461], "transformerdecoderlay": 1460, "transformer_decod": 1460, "tgt_is_caus": [1460, 1461], "memory_is_caus": [1460, 1461], "attn": [1461, 1463], "encoder_lay": [1462, 1463], "enable_nested_tensor": 1462, "mask_check": 1462, "1810": 1462, "04805": 1462, "transformerencoderlay": 1462, "transformer_encod": 1462, "flashattent": [1463, 1565], "triplet": [1464, 1465], "x3": 1464, "balnta": [1464, 1465], "riba": [1464, 1465], "a_i": [1464, 1465, 1761], "p_i": [1464, 1465], "rm": [1464, 1465], "bf": [1464, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "rvert_p": [1464, 1551], "tripletmarginwithdistanceloss": [1464, 1582], "triplet_loss": [1464, 1465], "distance_funct": [1465, 1582], "l_i": 1465, "tripletmarginloss": [1465, 1581], "l_p": [1465, 1551], "pairwisedist": [1465, 1554], "penal": [1465, 1888], "distant": 1465, "anchor_id": 1465, "positive_id": 1465, "negative_id": 1465, "l_infin": 1465, "bmva": 1465, "bmvc": 1465, "paper119": 1465, "unflattened_s": 1466, "namedtensor": 1466, "namedshap": 1466, "u_1": 1466, "u_n": 1466, "u_i": 1466, "im2col": [1467, 1855, 1897], "fold": [1467, 1803, 1855, 1865, 1895, 1905, 1911], "2x3": 1467, "3x4": 1467, "inp_unf": 1467, "out_unf": 1467, "recompute_scale_factor": [1468, 1526], "bicub": [1468, 1515, 1526, 1584, 1837], "trilinear": [1468, 1515, 1526, 1584, 1837], "input_3x3": 1468, "4375": 1468, "8125": 1468, "9375": 1468, "2400": [1468, 1818], "1200": [1468, 1730, 1880], "8800": 1468, "4400": [1468, 1818], "7200": 1468, "0400": 1468, "2800": [1468, 1753], "3600": 1468, "5200": 1468, "6400": 1468, "1678": 1472, "4418": 1472, "9466": [1472, 1912], "9604": 1472, "4219": 1472, "5241": 1472, "9162": 1472, "5436": [1472, 1818], "6446": 1472, "adaptiveavgpool1d": [1474, 1904], "tripl": [1476, 1479], "adaptivemaxpool1d": 1477, "adaptivemaxpool2d": [1478, 1837], "adaptivemaxpool3d": 1479, "ill": [1480, 1891], "avgpool1d": [1482, 1904], "avgpool3d": [1484, 1837, 1904], "iT": [1484, 1492, 1495], "padt": [1484, 1492, 1495], "score": [1488, 1565, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623, 1852], "out_padw": [1493, 1494, 1495], "out_padh": [1494, 1495], "out_padt": 1495, "cosineembeddingloss": 1496, "ctcloss": [1499, 1837], "charact": [1499, 1750, 1854, 1857, 1871, 1907], "elu": [1505, 1855, 1895, 1897, 1904], "embedding_matrix": [1506, 1507], "8490": 1506, "9625": 1506, "6753": 1506, "7761": 1506, "6108": 1506, "6246": 1506, "9751": 1506, "3618": 1506, "4161": [1506, 1911], "2419": 1506, "7383": 1506, "0237": 1506, "7794": 1506, "0528": 1506, "3385": 1506, "8612": 1506, "1867": 1506, "5384": 1506, "8720": 1506, "6262": 1506, "7471": 1506, "embeddingbag": [1507, 1837, 1902, 1904, 1917], "3397": 1507, "5545": 1507, "5893": 1507, "4386": 1507, "5882": 1507, "featurealphadropout": 1508, "gaussiannllloss": 1512, "border": 1515, "affine_grid": [1515, 1855], "extrema": 1515, "pil": [1515, 1526], "overshoot": [1515, 1526, 1584], "gumbel": [1517, 1852], "y_hard": 1517, "y_soft": 1517, "hardtanh": [1522, 1853, 1855, 1865, 1897, 1904], "hingeembeddingloss": 1523, "use_input_stat": [1525, 1855], "antialia": 1526, "anti": 1526, "pillow": [1526, 1916], "buggi": 1526, "inter_nearest": 1526, "kldivloss": 1527, "batchsiz": [1527, 1784, 1785, 1786, 1788, 1789, 1911], "leaky_relu": [1531, 1853, 1855, 1875, 1897, 1904], "localresponsenorm": 1533, "_stacklevel": [1534, 1571, 1572, 1855], "lppool1d": 1536, "lppool2d": 1537, "marginrankingloss": 1538, "max_unpool1d": [1539, 1855], "multimarginloss": 1547, "multilabelmarginloss": 1548, "multilabelsoftmarginloss": 1549, "n_0": 1551, "n_": 1551, "n_k": 1551, "everywher": [1552, 1798, 1898], "constantpad2d": 1553, "reflectionpad2d": [1553, 1837], "replicationpad2d": [1553, 1837], "t4d": 1553, "p1d": 1553, "p2d": 1553, "p3d": 1553, "pixelunshuffl": 1557, "poissonnllloss": 1558, "rrelu": [1564, 1855, 1897], "dropout_p": [1565, 1855], "masked_fil": [1565, 1855, 1870, 1872, 1897], "ev": 1565, "legend": 1565, "softmarginloss": 1570, "module_kwarg": 1580, "upsample_trilinear": 1585, "fo": 1585, "spatia": 1586, "mixin": [1587, 1852], "dry": 1587, "lazymlp": 1587, "lazylinear": 1587, "lazy_mlp": 1587, "8832e": 1587, "5636e": 1587, "1598e": 1587, "5637e": 1587, "8788e": 1587, "0042e": 1587, "0019": 1587, "lazymodul": 1587, "full_mlp": 1587, "3837": [1587, 1699], "0907": 1587, "6708": 1587, "5223": 1587, "9028": 1587, "2851": 1587, "6813": 1587, "5766": 1587, "8678": 1587, "1320": 1587, "2938": 1587, "0679": [1587, 1828], "2793": [1587, 1644], "1088": 1587, "1795": 1587, "2301": 1587, "2807": 1587, "2479": 1587, "1091": 1587, "has_uninitialized_param": 1587, "initialize_paramet": 1587, "register_backward_pre_hook": 1593, "check_reduct": 1596, "delay_all_reduce_named_param": 1596, "param_to_hook_all_reduc": 1596, "optimizer_param": 1596, "loss_func": [1596, 1907], "consume_prefix_in_state_dict_if_pres": 1596, "nccl2": 1596, "dictat": [1596, 1857], "megabyt": 1596, "mb": [1596, 1880], "detach_": [1596, 1855, 1870, 1904, 1911], "ddp_logging_data": 1596, "can_set_static_graph": 1596, "model_ddp": 1596, "_get_ddp_logging_data": 1596, "divide_by_initial_world_s": 1596, "syncbatchnorm": 1596, "exhaust": 1596, "deplet": 1596, "pariti": 1596, "discrep": [1596, 1708, 1885], "another_input": 1596, "predivid": 1596, "encode_and_decod": 1596, "encoded_tensor": 1596, "decoded_tensor": 1596, "error_if_nonfinit": 1600, "foreach": [1600, 1601, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671, 1898], "clip_valu": 1601, "orthogonal_map": 1603, "use_trivi": 1603, "qq": 1603, "matrix_exp": [1603, 1855, 1897], "caylei": 1603, "thin": [1603, 1701], "manifold": 1603, "register_parametr": [1603, 1604, 1605, 1606, 1637, 1873], "orth_linear": 1603, "parametrizedlinear": [1603, 1604], "moduledict": [1603, 1604, 1856, 1888], "parametrizationlist": [1603, 1604, 1608], "_orthogon": 1603, "9332e": 1603, "n_power_iter": [1604, 1637], "sn": [1604, 1637], "discrimin": [1604, 1637], "adversari": [1604, 1637], "lipschitz": 1604, "reimplement": [1604, 1637], "_spectralnorm": 1604, "convtranspos": [1604, 1637], "snm": 1604, "0081": 1604, "amaxbackward0": 1604, "original0": [1605, 1608], "original1": [1605, 1608], "tensor_nam": [1605, 1607, 1608, 1609], "right_invers": [1605, 1608], "out_rnn": 1606, "rnn_cell": 1606, "simplic": [1608, 1908], "inbuilt": 1608, "unparametr": 1608, "rankon": 1608, "surject": 1608, "s0_sqrt": 1608, "linear_rank_on": 1608, "matrix_rank": 1608, "leave_parametr": 1609, "unparametris": 1609, "prune": [1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1911], "skeleton": 1610, "compute_mask": [1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617], "importance_scor": [1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1622, 1623], "apply_mask": [1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617], "pruned_tensor": [1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617], "default_mask": [1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617], "_orig": [1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626], "undon": [1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1626], "unprun": [1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625], "indexerror": [1614, 1616], "basepruningmethod": [1615, 1621], "add_pruning_method": 1615, "pruning_typ": [1615, 1619], "unstructur": [1615, 1619], "ravel": [1615, 1855, 1897], "nonmask": 1615, "bias_mask": [1618, 1620], "pruning_method": 1619, "typeerror": [1619, 1882, 1900, 1918, 1922], "parameters_to_prun": 1619, "l1unstructur": 1619, "parameters_to_vector": 1619, "forward_pre_hook": [1621, 1888], "random_unstructur": [1621, 1626], "odict_kei": 1622, "weight_orig": 1622, "weight_mask": [1622, 1625], "columns_prun": 1624, "t_modul": [1627, 1628, 1637, 1640], "weight_norm": 1628, "sorted_indic": [1629, 1631, 1632, 1634], "unsorted_indic": [1629, 1631, 1632, 1634], "abc": [1629, 1857], "axbc": 1629, "throughout": [1629, 1885, 1888, 1902], "conform": [1629, 1888], "is_cuda": [1629, 1870, 1897, 1913], "enforce_sort": [1630, 1631, 1632], "unsort": [1630, 1631, 1737], "shortest": 1630, "uncondition": [1630, 1851, 1882, 1922], "pad_sequ": [1631, 1635, 1855, 1897], "padding_valu": [1632, 1633, 1855], "total_length": [1632, 1884], "seq_unpack": 1632, "lens_unpack": 1632, "packed_sequ": 1634, "unpacked_sequ": 1634, "padded_sequ": 1635, "unpad": 1635, "unstack": 1635, "as_tensor": [1635, 1816, 1855, 1872, 1882, 1897, 1916, 1917, 1918], "unpadded_sequ": 1635, "module_cl": [1636, 1907], "5846e": 1636, "29": [1636, 1766, 1895], "8307e": 1636, "5250e": 1636, "1210e": 1636, "4677e": 1636, "5915e": 1636, "4013e": 1636, "weight_u": 1637, "parameters_and_buff": 1638, "decoupl": [1640, 1659], "weight_g": [1640, 1855], "weight_v": 1640, "1602": 1640, "07868": 1640, "as_tupl": [1642, 1847], "complexfloat": [1643, 1652], "0425": 1644, "7969": 1644, "2925": 1644, "7229": 1644, "2134": 1644, "0505": 1644, "1408": 1644, "0563": 1644, "0566": 1644, "0732": [1644, 1818], "0687": 1644, "1177": 1644, "2303": 1644, "1552": 1644, "6148": 1644, "6535": 1644, "8318": 1644, "3987": 1644, "9544": [1644, 1709], "6048": 1644, "7909": 1644, "120": [1646, 1916], "op_level_debug": 1649, "model_proto": [1650, 1651], "input_adapt": 1650, "output_adapt": 1650, "diagnostic_context": 1650, "adapt_torch_inputs_to_onnx": 1650, "model_arg": [1650, 1895], "model_kwarg": [1650, 1895], "xdoctest": 1650, "torch_doctest_onnx": 1650, "func_with_nested_input_structur": 1650, "x_dict": 1650, "y_tupl": 1650, "y1": [1650, 1779], "y2": [1650, 1779], "y3": 1650, "export_output": [1650, 1651], "adapt_torch_outputs_to_onnx": 1650, "model_output": 1650, "func_returning_tupl": 1650, "pt_output": 1650, "diagnosticcontext": 1650, "modelproto": [1650, 1651], "protobuf": [1650, 1651, 1895], "exportoutput": [1651, 1895], "bufferediobas": 1651, "protobufexportoutputseri": 1651, "serializetostr": 1651, "exported_model": 1651, "from_valu": 1652, "onnx_typ": 1652, "tensorprotodatatyp": 1652, "torch_c_value_with_type_float": 1652, "from_dtyp": 1652, "jit_type_bas": 1652, "safer": [1652, 1864], "onnxexportererror": [1652, 1895], "symbolicvalueerror": 1652, "onnx_compat": 1652, "scalar_nam": 1652, "complexhalf": 1652, "complexdoubl": 1652, "torch_nam": 1652, "int8_t": 1652, "int64_t": 1652, "int16_t": 1652, "verif": [1653, 1654, 1895], "input_arg": [1653, 1895], "params_dict": 1653, "export_opt": [1653, 1895], "_excluded_node_kind": 1653, "frozenset": [1653, 1857], "scalarimplicit": [1653, 1897], "prim": [1653, 1854, 1895, 1897], "listconstruct": [1653, 1854], "all_mismatch_leaf_graph_info": 1653, "essential_node_count": 1653, "essential_node_kind": 1653, "export_repro": 1653, "repro_dir": 1653, "test_": 1653, "test_data_set_0": 1653, "input_0": [1653, 1895], "pb": [1653, 1895], "input_1": [1653, 1895], "output_0": 1653, "output_1": 1653, "find_mismatch": [1653, 1895], "verificationopt": [1653, 1895], "find_partit": 1653, "has_mismatch": 1653, "pretty_print_mismatch": 1653, "pretty_print_tre": 1653, "graph_info": [1653, 1895], "__2": [1653, 1895], "__1": [1653, 1895], "__3": [1653, 1895], "110": [1653, 1895], "verify_export": 1653, "onnx_graph": 1653, "onnx_out": 1653, "pt_out": 1653, "ignore_non": 1654, "check_shap": 1654, "check_dtyp": [1654, 1918], "onnxbackend": 1654, "onnx_runtime_cpu": 1654, "remained_onnx_input_idx": 1654, "acceptable_error_percentag": 1654, "percentag": [1654, 1683, 1759], "weight_decai": [1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1671, 1888], "1e6": 1655, "impair": [1655, 1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "register_step_post_hook": [1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672], "removeablehandl": [1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672], "register_step_pre_hook": [1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672], "new_arg": [1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672], "new_kwarg": [1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1668, 1669, 1670, 1671, 1672], "altogeth": [1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672], "rho": 1656, "110mm": [1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "4pt": [1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "textbf": [1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "theta_0": [1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "v_0": [1656, 1658, 1659, 1662, 1668, 1669], "leftarrow": [1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "u_0": [1656, 1660], "hspace": [1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "5mm": [1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "nabla_": [1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "theta_": [1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "10mm": [1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "v_t": [1656, 1658, 1659, 1662, 1668, 1669], "v_": [1656, 1658, 1659, 1662, 1668, 1669, 1671], "2_t": [1656, 1657, 1658, 1659, 1662, 1668, 1669], "21mm": 1656, "u_t": [1656, 1660], "theta_t": [1656, 1657, 1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "lr_decai": 1657, "initial_accumulator_valu": 1657, "12mm": [1657, 1668], "_sum_0": 1657, "tild": [1657, 1669], "_sum_t": 1657, "_sum_": 1657, "subgradi": 1657, "999": [1658, 1659, 1660, 1662, 1668, 1672, 1893, 1898], "amsgrad": [1658, 1659], "beta_1": [1658, 1659, 1660, 1662, 1668], "beta_2": [1658, 1659, 1660, 1662, 1668], "13mm": [1658, 1659, 1660, 1662, 1668, 1669, 1670, 1671], "textit": [1658, 1659, 1671], "m_0": [1658, 1659, 1660, 1662, 1668], "widehat": [1658, 1659, 1662, 1668], "m_t": [1658, 1659, 1660, 1662, 1668], "m_": [1658, 1659, 1660, 1662, 1668], "ungraph": [1658, 1659], "002": [1660, 1662], "t_1": 1660, "2e": [1660, 1662], "max_it": 1661, "max_ev": 1661, "tolerance_grad": 1661, "tolerance_chang": 1661, "history_s": 1661, "line_search_fn": 1661, "bfg": 1661, "minfunc": 1661, "intens": [1661, 1891], "param_byt": 1661, "strong_wolf": 1661, "reevalu": [1661, 1666, 1672, 1898], "momentum_decai": 1662, "004": 1662, "gamma_t": 1662, "psi": [1662, 1912], "mu_t": 1662, "96": 1662, "mu_": 1662, "11mm": 1662, "incorpor": [1662, 1902], "nesterov": [1662, 1671], "4e": 1662, "weightdecai": 1668, "18mm": 1668, "rho_": 1668, "6mm": 1668, "rho_t": 1668, "t_2": 1668, "l_t": 1668, "adamw": [1668, 1898], "_0": [1669, 1883, 1899], "av": 1669, "8mm": 1669, "3mm": 1669, "lectur": 1669, "hinton": 1669, "step_siz": [1670, 1687], "resili": [1670, 1891], "eta_": [1670, 1675, 1676], "etaplu": 1670, "etaminu": 1670, "gamma_": [1670, 1912], "0_": 1670, "eta_0": 1670, "i_": [1670, 1818], "15mm": [1670, 1671], "eta_t": [1670, 1675, 1676], "dampen": 1671, "sutskev": 1671, "veloc": 1671, "conflat": 1672, "is_spars": [1672, 1870, 1897, 1911, 1913], "maskedtensor": [1672, 1911], "gain": [1672, 1875], "rig": 1672, "insist": 1672, "lr_schedul": [1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1898], "chainabl": [1673, 1683], "081": 1673, "729": [1673, 1686], "6561": [1673, 1842], "59049": 1673, "scheduler1": [1673, 1686, 1898], "constantlr": [1673, 1686], "total_it": [1673, 1674, 1680, 1684, 1686], "scheduler2": [1673, 1686, 1898], "exponentiallr": [1673, 1686, 1898], "get_last_lr": [1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687], "print_lr": [1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687], "is_verbos": [1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687], "__dict__": [1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687], "last_epoch": [1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687], "mileston": [1674, 1680, 1681, 1686, 1898], "simultan": [1674, 1675, 1680, 1681, 1687, 1877, 1907], "025": [1674, 1680], "t_max": [1675, 1898], "eta_min": [1675, 1676], "anneal": [1675, 1676, 1683, 1898], "cur": [1675, 1676], "sgdr": [1675, 1676], "2k": 1675, "sole": 1675, "t_mult": 1676, "interleav": 1676, "base_lr": [1677, 1683], "max_lr": [1677, 1683], "step_size_up": 1677, "step_size_down": 1677, "scale_fn": 1677, "scale_mod": 1677, "cycle_momentum": [1677, 1683], "base_momentum": [1677, 1683], "max_momentum": [1677, 1683], "cyclic": 1677, "forth": [1677, 1838, 1851, 1901], "amplitud": [1677, 1683], "triangular2": 1677, "exp_rang": 1677, "bckenstler": 1677, "train_batch": [1677, 1683], "get_lr": 1677, "lr_lambda": [1679, 1682], "lambda1": 1679, "lambda2": 1679, "start_factor": 1680, "end_factor": 1680, "03125": 1680, "0375": 1680, "04375": 1680, "005": [1681, 1687], "lmbda": 1682, "total_step": 1683, "steps_per_epoch": 1683, "pct_start": 1683, "anneal_strategi": [1683, 1898], "div_factor": 1683, "final_div_factor": 1683, "three_phas": 1683, "1cycl": 1683, "fastai": 1683, "unpublish": 1683, "initial_lr": 1683, "min_lr": [1683, 1685], "1e4": 1683, "annihil": 1683, "00075": 1684, "00050": 1684, "00025": 1684, "patienc": 1685, "threshold_mod": 1685, "cooldown": 1685, "stagnat": 1685, "new_lr": 1685, "hasn": [1685, 1867, 1899], "optimum": 1685, "dynamic_threshold": 1685, "val_loss": 1685, "81": 1686, "mn": 1689, "pca": [1691, 1911], "overestim": [1691, 1803], "nathan": [1691, 1803], "halko": [1691, 1803], "gunnar": [1691, 1803], "martinsson": [1691, 1803], "tropp": [1691, 1803], "probabilist": [1691, 1803], "0909": [1691, 1803], "4061": [1691, 1803], "na": [1691, 1803], "cmath": [1695, 1855], "4142j": 1695, "4331": 1698, "2475": [1698, 1801], "6834": 1698, "2791": 1698, "1875": 1698, "5561": 1698, "4670": 1698, "5428": 1699, "5854": 1699, "5261": [1699, 1802], "1857": 1699, "2498": 1699, "1646": [1699, 1880], "0705": 1699, "0629": 1699, "2962": 1699, "0821": [1699, 1759], "1831": 1699, "type1": [1700, 1855], "type2": [1700, 1855], "2117": 1702, "9765": 1702, "1707": 1702, "4884": 1702, "5661": 1702, "5795": 1702, "5280": 1702, "9206": 1702, "quantization_schem": [1703, 1704, 1705, 1706, 1707], "int_repr": [1703, 1704, 1855, 1897], "nchw": [1705, 1916], "qx": [1705, 1706, 1707], "00001": 1705, "max_pool1d": [1706, 1855, 1897, 1904], "max_pool2d": [1707, 1855, 1897, 1904], "quasirandom": 1708, "scrambl": 1708, "sobol": 1708, "quasi": 1708, "21201": 1708, "web": 1708, "unsw": 1708, "au": [1708, 1899], "fkuo": 1708, "art": 1708, "owen": 1708, "niederreit": 1708, "xing": 1708, "466": 1708, "489": 1708, "decemb": 1708, "1998": 1708, "zh": 1708, "vychisl": 1708, "phy": 1708, "784": 1708, "802": 1708, "1967": 1708, "soboleng": 1708, "draw_base2": 1708, "base2": 1708, "fast_forward": 1708, "142": 1709, "283": 1709, "570": 1709, "359": 1709, "9894": 1709, "2503": 1710, "3525": 1710, "5673": 1710, "8237": 1710, "5781": 1710, "6879": 1710, "3816": 1710, "7249": 1710, "0998": 1710, "1436": 1714, "9966": 1714, "3426": 1714, "6366": 1714, "5954": 1714, "8929": 1714, "0923": 1714, "1719": 1714, "4709": 1714, "1996": 1714, "4595": 1720, "4314": 1720, "flat": [1723, 1766, 1855, 1872, 1895], "n2": 1723, "n3": 1723, "negat": [1726, 1810, 1857], "is_neg": [1726, 1855, 1897], "equidist": 1730, "inexact": 1730, "1234567": 1730, "1230": 1730, "vstack": [1731, 1855, 1897, 1911], "0370": 1732, "2970": 1732, "5420": 1732, "9105": 1732, "8351": 1732, "pickle_protocol": [1733, 1899], "default_protocol": 1733, "_use_new_zipfile_seri": 1733, "zipfil": [1733, 1899], "sorted_sequ": [1737, 1855], "sorter": [1737, 1855], "sorted_sequence_1d": 1737, "select_copi": [1739, 1855, 1897], "92701": [1741, 1914], "complaint": 1742, "bfloat16_3x": 1745, "denorm": [1746, 1891], "sse3": 1746, "323": 1746, "88131e": 1746, "324": 1746, "is_train": [1747, 1919], "interop": 1748, "intraop": 1749, "edgeitem": 1750, "linewidth": 1750, "sci_mod": 1750, "shamelessli": 1750, "repr": [1750, 1857], "sane": 1750, "_tensor_str": 1750, "_formatt": 1750, "12345": 1750, "1235": 1750, "excess": 1752, "24j": 1753, "8000j": 1753, "9600j": 1753, "4472": [1753, 1888], "8944j": 1753, "expit": [1754, 1912], "sym": [1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766], "2222": [1756, 1816], "4444": 1756, "8889": 1756, "4901e": 1757, "4000e": 1757, "0077e": 1757, "4923e": 1757, "waveform": [1758, 1759, 1760], "1564": 1758, "4540": 1758, "8910": 1758, "9877": 1758, "1423": [1758, 1780], "4154": 1758, "8413": [1758, 1912], "0302": 1759, "2231": 1759, "6065": 1759, "5400e": 1759, "3546e": 1759, "4788e": 1759, "8316e": 1759, "02": [1759, 1760, 1765], "3534e": 1759, "0065e": [1760, 1765], "1875e": [1760, 1765], "3937e": [1760, 1765], "2465e": [1760, 1765], "8250e": [1760, 1765], "9858e": [1760, 1765], "1365e": [1760, 1765], "8659e": [1760, 1765], "4658e": [1760, 1765], "3941e": [1760, 1765], "5400": 1761, "3376": 1761, "4200": 1761, "9136": 1761, "wit": [1761, 1854], "0955": [1761, 1762, 1764], "3455": [1761, 1762, 1764], "6545": [1761, 1762, 1764], "9045": [1761, 1762, 1764], "0800": [1762, 1763], "1876": [1762, 1763], "4601": [1762, 1763], "7700": [1762, 1763], "9723": [1762, 1763], "1679": 1763, "3979": 1763, "6821": 1763, "9121": 1763, "1170": 1764, "9698": 1764, "36358": 1766, "z_n": [1766, 1877], "48917": 1766, "2z_n": 1766, "13659": 1766, "3z_n": 1766, "01064": 1766, "4z_n": 1766, "\u03c0": 1766, "sidelob": 1766, "transact": 1766, "acoust": 1766, "speech": 1766, "84": 1766, "91": 1766, "feb": 1766, "1981": 1766, "tassp": 1766, "1163506": 1766, "heinzel": 1766, "spectrum": [1766, 1891], "dft": 1766, "comprehens": [1766, 1857, 1858, 1871, 1880, 1886, 1902], "februari": 1766, "holomet": 1766, "fnal": 1766, "gov": 1766, "gh_fft": 1766, "nutal": 1766, "general_ham": 1766, "6280e": 1766, "2698e": 1766, "1052e": 1766, "9826e": 1766, "5461": [1768, 1888], "1347": 1768, "7266": 1768, "2746": 1768, "5194": 1768, "1343": 1768, "4032": 1768, "2711": 1768, "5380": 1770, "8632": 1770, "1265": 1770, "9399": 1770, "5644": 1770, "9744": 1770, "1268": 1770, "2162": 1775, "6719": 1775, "3332": 1775, "5793": [1775, 1888], "0061": 1775, "6058": 1775, "9497": 1775, "5071": 1775, "3343": 1775, "9553": 1775, "0960": 1775, "derivati": [1776, 1779], "sparsr": 1777, "run_my_model": 1777, "prev_checks_en": 1777, "check_invari": [1777, 1784, 1785, 1786, 1787, 1788, 1789, 1911], "sparse_csr_tensor": [1777, 1855, 1897, 1911], "z_": [1779, 1877, 1912], "bigoplus_": 1779, "kj": 1779, "bigoplu": 1779, "sparseaddmmbackward0": 1779, "sparsemmreduceimplbackward0": 1779, "sparsiti": [1780, 1852, 1864, 1875], "spy": 1780, "2847": 1780, "7805": 1780, "1900": [1780, 1892], "to_dens": [1780, 1782, 1855, 1897, 1911], "3903": 1780, "x_k": 1781, "6438": 1783, "6467": 1783, "3411": 1783, "0918": 1783, "5348": 1783, "0634": 1783, "0494": 1783, "0646": 1783, "1844": 1783, "1276": 1783, "1874": 1783, "6334": 1783, "9682": 1783, "5340": 1783, "7483": 1783, "4512": 1783, "4073": 1783, "8901": 1783, "3183": 1783, "7539": 1783, "6596": 1783, "ncolblock": [1784, 1911], "array_list": [1784, 1785, 1786, 1788, 1789], "nrow": [1784, 1785, 1786, 1788, 1789, 1911], "ncol": [1784, 1785, 1786, 1788, 1789, 1911], "denses": [1784, 1785, 1786, 1788, 1789, 1911], "check_sparse_tensor_invari": [1784, 1785, 1786, 1787, 1788, 1789, 1911], "nrowblock": [1785, 1911], "compressed_indic": [1786, 1855, 1911], "plain_indic": [1786, 1855, 1911], "compressed_dim_s": [1786, 1911], "rdinat": 1787, "_indic": [1787, 1897, 1911], "0755": [1791, 1792], "0226": [1791, 1792], "0831": [1791, 1792], "4806": [1791, 1792], "0112": 1791, "2883": 1791, "6933": 1791, "0457": 1792, "0069": 1792, "2310": 1792, "2959": [1796, 1797, 1839, 1840], "8101": [1796, 1797, 1839, 1840], "5027": [1796, 1797, 1839, 1840], "3270": [1796, 1797, 1839, 1840], "5905": [1796, 1797, 1839, 1840], "6538": [1796, 1797, 1839, 1840, 1888], "3330": [1796, 1797, 1839, 1840], "5596": [1796, 1797, 1839, 1840], "6548": [1796, 1797, 1839, 1840], "1264": [1796, 1797, 1839, 1840], "5080": [1796, 1797, 1802, 1839, 1840, 1888], "6420": [1796, 1797, 1839, 1840], "1992": [1796, 1797, 1839, 1840], "0311": [1796, 1912], "7477": 1796, "2204": 1796, "9087": 1796, "2620": 1797, "0028": [1797, 1822], "0957": 1797, "6038": 1797, "0645": [1797, 1840], "4485": [1797, 1840], "8707": [1797, 1840], "0665": [1797, 1840], "librosa": 1798, "omega": 1798, "win": [1798, 1877], "_fft": [1798, 1855], "dimnsion": 1798, "1133": 1801, "2958": 1801, "5475": 1801, "0569": 1801, "0737": 1801, "3429": 1801, "9138": 1801, "9337": 1801, "6864": [1801, 1826], "1132": 1801, "7892": 1801, "1003": 1801, "5688": 1801, "3637": 1801, "9906": 1801, "5197": 1801, "4598": 1801, "3708": 1801, "6217": 1801, "435": 1801, "1335": 1801, "3135": 1801, "gesdd": 1802, "conquer": 1802, "gesvdjbatch": 1802, "fortran": 1802, "\u00b9": 1802, "2364": 1802, "7752": 1802, "7201": 1802, "7394": 1802, "0504": 1802, "3371": 1802, "5296": 1802, "3550": 1802, "5569": 1802, "2445": 1802, "1414": 1802, "4027": 1802, "0287": 1802, "5434": 1802, "1946": 1802, "8833": 1802, "3679": 1802, "4296": 1802, "2890": 1802, "6604": 1802, "2717": 1802, "2618": 1802, "4234": 1802, "2481": 1802, "4733": 1802, "3289": [1802, 1893], "0315": 1802, "7806": 1802, "0199": 1802, "8766": 1802, "4809": 1802, "4054": 1802, "7600": 1802, "8611": 1802, "2594": 1802, "4373": 1802, "6531e": 1802, "a_big": 1802, "6503e": 1802, "swapax": [1805, 1855, 1897, 1915], "symint": [1806, 1807, 1808, 1809, 1810, 1853, 1919], "symfloat": [1806, 1807, 1919], "symbool": [1810, 1919], "1995": 1811, "4608": 1811, "7702": 1811, "4875": 1811, "9158": 1811, "5872": 1811, "6929": 1811, "6932": 1811, "take_along_axi": [1813, 1883], "max_idx": 1813, "sorted_idx": 1813, "2027": 1814, "7687": 1814, "4412": 1814, "3856": 1814, "5930": 1814, "9859": 1814, "4722": 1814, "3366": 1814, "8986": 1815, "7279": 1815, "1745": 1815, "7156": 1815, "8257": 1815, "2553": 1815, "11111": 1816, "222222": 1816, "3333333": 1816, "1111": 1816, "array_split": 1817, "i_d": 1818, "k_": 1818, "4532": 1818, "4874": 1818, "5018": 1818, "4796": [1818, 1892], "5162": 1818, "5306": 1818, "2922": 1818, "7556": 1818, "2741": 1818, "3161": 1818, "0704": 1818, "0187": 1818, "4079": 1818, "3126": 1818, "8744": 1818, "8223": 1818, "9445": 1818, "4117": 1818, "7780": 1818, "7193": 1818, "4867": 1818, "3204": 1818, "5513": 1818, "4737": [1818, 1843], "2850": 1818, "2573": 1818, "5997": 1818, "sparsebsr": 1822, "sparsecsc": 1822, "sparsebsc": 1822, "9893": 1822, "5809": 1822, "1669": 1822, "7299": 1822, "4942": [1822, 1888], "y_0": 1823, "y_1": 1823, "x_diff": 1823, "y_diff": 1823, "riemann": [1823, 1877, 1885, 1912], "badli": 1825, "cloned_coeffici": 1825, "1527": 1825, "0753": 1825, "7986": 1825, "0210": 1825, "3513": 1825, "5492": 1825, "7403": 1825, "0243": 1825, "7841": 1825, "9046": 1825, "5405": 1825, "9320": 1825, "9270": 1825, "2826": 1825, "lbrace": [1826, 1827, 1828, 1829], "rbrace": [1826, 1827, 1828, 1829], "0813": 1826, "8619": 1826, "7105": 1826, "0935": 1826, "1380": 1826, "3409": [1826, 1892], "2219": 1826, "5653": 1826, "2521": 1826, "2345": 1826, "2544": 1826, "3461": 1826, "4785": 1826, "4477": 1826, "6049": 1826, "6368": 1826, "8775": 1826, "7145": 1826, "1502": 1826, "2716": 1826, "1243": 1826, "5413": 1826, "3615": 1826, "0614": 1826, "7344": 1826, "3164": 1826, "7648": 1826, "4024": 1826, "0978": 1826, "col": [1827, 1829, 1855], "2309": 1828, "5207": 1828, "0049": 1828, "2072": 1828, "0680": 1828, "6602": 1828, "3480": 1828, "5211": 1828, "4573": 1828, "5876": 1828, "0794": [1828, 1912], "8373": 1828, "6654": 1828, "2604": 1828, "5235": 1828, "2447": 1828, "9556": 1828, "2919": 1828, "1768": 1828, "4333": 1828, "3146": [1828, 1888], "6576": 1828, "0432": 1828, "9348": [1828, 1912], "4410": 1828, "9888": 1828, "3337": 1828, "6556": 1828, "4798": 1828, "5466": 1831, "8008": 1831, "9079": 1831, "unique_consecut": [1834, 1855, 1897], "inverse_indic": [1834, 1835], "warn_onli": 1837, "alon": [1837, 1856, 1899], "put_": [1837, 1855], "index_add": [1837, 1855, 1897], "index_select": [1837, 1853, 1855, 1897, 1911], "fractionalmaxpool2d": 1837, "fractionalmaxpool3d": 1837, "reflectionpad1d": 1837, "reflectionpad3d": 1837, "replicationpad1d": 1837, "replicationpad3d": 1837, "histc": [1837, 1855, 1897], "bincount": [1837, 1855, 1897], "kthvalu": [1837, 1855, 1870, 1897], "cublasapi_reproduc": [1837, 1892], "avg_pool3d_backward_cuda": 1837, "alexandr": 1838, "theophil": 1838, "0631": 1839, "5590": 1839, "4893": 1839, "8258": 1839, "5926": 1840, "0056": 1840, "3646": 1840, "vecdot": 1841, "mi": [1842, 1843], "6116": 1842, "5772": [1842, 1912], "4606": 1842, "9120": 1842, "0786": 1842, "7497": 1842, "6623": 1842, "5772j": 1842, "9120j": 1842, "7497j": 1842, "6623j": 1842, "3839j": 1843, "2098": 1843, "6699j": 1843, "3470": 1843, "9451j": 1843, "5174": 1843, "3136j": 1843, "6699": 1843, "9451": 1843, "3136": 1843, "atleast_2d": [1846, 1855, 1897], "3139": 1847, "3898": 1847, "1657": 1847, "0383": 1847, "8785": 1847, "1089": 1847, "hubconf": 1851, "entrypoint_nam": 1851, "_resnet18": 1851, "underscor": [1851, 1871, 1907, 1917], "load_state_dict_from_url": [1851, 1866], "2gb": 1851, "relative_path_to_checkpoint": 1851, "pth": [1851, 1866, 1893], "dirnam": 1851, "5c106cde": [1851, 1866], "force_reload": 1851, "skip_valid": 1851, "trust_repo": 1851, "repo_own": 1851, "repo_nam": 1851, "torchhub": 1851, "owner": [1851, 1882, 1897, 1907, 1908], "github_token": 1851, "repo_or_dir": 1851, "mute": 1851, "resnet50_weight": 1851, "imagenet1k_v1": 1851, "download_url_to_fil": 1851, "hash_prefix": 1851, "temporary_fil": 1851, "sha256": [1851, 1866], "s3": [1851, 1866, 1894], "amazonaw": [1851, 1866, 1894], "model_dir": [1851, 1866], "check_hash": [1851, 1866], "hub_dir": [1851, 1866], "get_dir": [1851, 1866], "ext": [1851, 1866], "eight": [1851, 1866], "hash": [1851, 1855, 1857, 1866, 1897], "succinct": 1851, "set_dir": 1851, "path_to_hub_dir": 1851, "torch_hom": 1851, "xdg_cache_hom": [1851, 1880], "reiniti": 1851, "path_importer_cach": 1851, "subpackag": [1851, 1899], "offend": 1851, "classifi": [1852, 1857, 1895, 1898, 1902, 1916], "pypi": 1852, "conda": [1852, 1894], "hip": 1852, "javadoc": 1852, "uninitializedbuff": 1852, "anomali": 1852, "can_device_access_p": 1852, "current_blas_handl": 1852, "device_of": 1852, "get_arch_list": 1852, "get_device_cap": 1852, "get_device_nam": 1852, "get_device_properti": 1852, "get_gencode_flag": 1852, "get_sync_debug_mod": 1852, "ipc_collect": 1852, "memory_usag": 1852, "set_stream": 1852, "set_sync_debug_mod": 1852, "power_draw": 1852, "clock_rat": 1852, "outofmemoryerror": 1852, "jiter": 1852, "sanit": 1852, "get_rng_stat": [1852, 1906], "set_rng_stat": [1852, 1906], "empty_cach": [1852, 1880, 1886], "set_per_process_memory_fract": 1852, "current_allocated_memori": 1852, "driver_allocated_memori": 1852, "pathwis": 1852, "exponentialfamili": 1852, "binomi": [1852, 1855, 1897], "chi2": 1852, "continuousbernoulli": 1852, "dirichlet": 1852, "fishersnedecor": 1852, "halfcauchi": 1852, "halfnorm": 1852, "kumaraswami": 1852, "lkjcholeski": 1852, "laplac": 1852, "lognorm": 1852, "lowrankmultivariatenorm": 1852, "mixturesamefamili": 1852, "multinomi": [1852, 1855, 1897], "multivariatenorm": 1852, "negativebinomi": 1852, "onehotcategor": 1852, "relaxedbernoulli": 1852, "logitrelaxedbernoulli": 1852, "relaxedonehotcategor": 1852, "studentt": 1852, "transformeddistribut": 1852, "vonmis": 1852, "weibul": 1852, "wishart": 1852, "solver": [1852, 1891], "misc": 1852, "normal_": [1852, 1855, 1870, 1875, 1880, 1919], "constant_": [1852, 1875], "ones_": [1852, 1875], "zeros_": [1852, 1875], "eye_": [1852, 1859, 1875], "dirac_": [1852, 1859, 1875], "xavier_uniform_": [1852, 1875], "xavier_normal_": [1852, 1875, 1888], "kaiming_uniform_": [1852, 1875], "trunc_normal_": [1852, 1875], "orthogonal_": [1852, 1859, 1875, 1888], "sparse_": [1852, 1875], "alexnet": 1852, "pitfal": 1852, "preview": 1852, "swa": 1852, "ema": 1852, "powersgd": 1852, "remotemodul": 1852, "fork_rng": [1852, 1906], "doublestorag": [1852, 1913], "floatstorag": [1852, 1913], "halfstorag": [1852, 1913], "longstorag": [1852, 1913], "intstorag": [1852, 1913], "shortstorag": [1852, 1913], "charstorag": [1852, 1913], "bytestorag": [1852, 1913], "boolstorag": [1852, 1913], "bfloat16storag": [1852, 1913], "complexdoublestorag": [1852, 1913], "complexfloatstorag": [1852, 1913], "quint8storag": [1852, 1913], "qint8storag": [1852, 1913], "qint32storag": [1852, 1913], "quint4x2storag": [1852, 1913], "quint2x4storag": [1852, 1913], "make_tensor": [1852, 1918], "assert_allclos": [1852, 1918], "sampler": 1852, "mobile_optim": 1852, "optimize_for_mobil": [1852, 1865], "model_zoo": 1852, "load_url": [1852, 1866], "tensorboard": [1852, 1867, 1901], "summarywrit": [1852, 1867, 1916], "iinfo": 1852, "unifi": [1852, 1871], "__config__": [1852, 1879], "_log": [1852, 1857], "set_log": [1852, 1863], "torchdata": 1852, "torchserv": 1852, "torchtext": 1852, "xla": 1852, "_out": [1853, 1875, 1885], "_adaptive_avg_pool2d": [1853, 1897], "_adaptive_avg_pool2d_backward": 1853, "_log_softmax": [1853, 1897], "half_to_float": 1853, "_native_batch_norm_legit": [1853, 1897], "no_stat": 1853, "_softmax": [1853, 1897, 1912], "_to_copi": [1853, 1897], "scalartyp": 1853, "memoryformat": 1853, "start_step": 1853, "avg_pool2d": [1853, 1855, 1897, 1904], "avg_pool2d_backward": 1853, "constant_pad_nd": [1853, 1855, 1897], "convolution_backward": 1853, "bias_siz": 1853, "output_mask": 1853, "embedding_dense_backward": 1853, "num_weight": 1853, "empty_strid": [1853, 1855, 1859, 1897], "interpolation_mod": [1853, 1855], "isinf": [1853, 1855, 1897, 1911], "max_pool2d_with_indic": [1853, 1855, 1897], "max_pool2d_with_indices_backward": 1853, "max_pool3d_with_indic": [1853, 1855, 1897], "native_batch_norm": [1853, 1855, 1897], "native_dropout": [1853, 1855, 1897], "native_group_norm": [1853, 1855, 1897], "hxw": [1853, 1855], "native_group_norm_backward": 1853, "rstd": 1853, "native_layer_norm": [1853, 1855, 1897], "native_layer_norm_backward": 1853, "tensor_scalar": 1853, "tensor_tensor": 1853, "scalar_tensor": [1853, 1855, 1897], "slice_scatt": [1853, 1855, 1897], "dim_intlist": 1853, "upsample_bilinear2d": [1853, 1855, 1897], "upsample_nearest2d": [1853, 1855, 1897], "convert_element_typ": [1853, 1897], "broadcast_in_dim": [1853, 1897], "bessel_i0": [1853, 1897], "bessel_i1": [1853, 1897], "bessel_j0": [1853, 1897, 1912], "bessel_j1": [1853, 1897, 1912], "cbrt": [1853, 1897], "erf_inv": [1853, 1897], "erfcx": [1853, 1897, 1912], "exp2": [1853, 1855, 1897, 1912, 1916], "isfinit": [1853, 1855, 1891, 1897], "ndtri": [1853, 1897, 1912], "spherical_bessel_j0": [1853, 1897, 1912], "fmax": [1853, 1855, 1897], "fmin": [1853, 1855, 1897], "shift_left": [1853, 1897], "shift_right_arithmet": [1853, 1897], "zeta": [1853, 1880, 1897, 1912], "broadcast_dimens": 1853, "collapse_view": [1853, 1897], "start_indic": 1853, "limit_indic": 1853, "slice_in_dim": [1853, 1897], "start_index": 1853, "limit_index": 1853, "split_dim": [1853, 1897], "outer_length": 1853, "view_of": [1853, 1897], "as_strided_scatt": [1853, 1855, 1897], "collaps": [1853, 1870, 1897], "rev": [1853, 1897], "device_put": [1853, 1897], "maximum_valu": [1853, 1897], "minimum_valu": [1853, 1897], "copy_strid": [1853, 1897], "copy_to": [1853, 1897], "xor_sum": [1853, 1897], "empty_permut": [1853, 1855, 1897], "physical_layout": [1853, 1855], "iota": [1853, 1897], "fft_r2c": [1853, 1897], "fft_c2c": [1853, 1897], "fft_c2r": [1853, 1897], "disadvantag": 1854, "gentl": 1854, "beam": 1854, "traced_bar": 1854, "myscriptmodul": 1854, "103": [1854, 1856], "939": [1854, 1856], "116": [1854, 1856], "779": [1854, 1856], "123": [1854, 1856], "my_script_modul": [1854, 1856], "ins": 1854, "pytorch_jit": 1854, "traced_fn": 1854, "disable_jit_exampl": 1854, "printer": 1854, "rv": 1854, "rv0": 1854, "rv1": 1854, "ssa": 1854, "block0": 1854, "block1": 1854, "loop_in_traced_fn": 1854, "input_tupl": 1854, "fill_row_zero": 1854, "tracerwarn": 1854, "disjoint": 1854, "nr": 1854, "09115803241729736": 1854, "6782537698745728": 1854, "cpu_model": 1854, "gpu_model": 1854, "sample_input_cpu": 1854, "sample_input_gpu": 1854, "traced_cpu": 1854, "traced_gpu": 1854, "use_gpu": 1854, "__constants__": [1854, 1856], "my_module_inst": 1854, "redeclar": 1854, "nn_module_inst": 1854, "my_scripted_model": 1854, "526": [1854, 1856, 1895], "script_method": 1854, "implicitly_compiled_method": 1854, "another_forward": 1854, "unused_method": 1854, "some_fn": 1854, "ever": [1854, 1913], "some_fn2": 1854, "some_fn3": 1854, "some_fn4": 1854, "my_dict": [1854, 1856], "my_int": [1854, 1856], "my_const": 1854, "make_dict": 1854, "nnc": 1854, "__and__": 1855, "__iand__": 1855, "__ilshift__": 1855, "__ior__": 1855, "__irshift__": 1855, "__ixor__": 1855, "__lshift__": 1855, "__or__": 1855, "__rshift__": 1855, "__xor__": 1855, "absolute_": 1855, "acos_": [1855, 1870], "addbmm_": 1855, "addcdiv_": 1855, "addcmul_": 1855, "addmv_": [1855, 1870], "addr_": 1855, "align_a": [1855, 1870, 1871, 1897], "align_to": [1855, 1870, 1871, 1897], "ellipsis_idx": 1855, "aminmax": [1855, 1897], "arccos_": 1855, "arccosh_": 1855, "arcsin_": [1855, 1911], "arcsinh_": 1855, "arctan2_": 1855, "arctan_": 1855, "arctanh_": 1855, "argwher": [1855, 1897], "as_strided_": 1855, "asin_": [1855, 1870, 1911], "asinh_": [1855, 1870], "atan_": [1855, 1870], "atanh_": [1855, 1870], "baddbmm_": 1855, "bernoulli_": [1855, 1870, 1919], "bitwise_and_": 1855, "bitwise_left_shift_": 1855, "bitwise_not_": [1855, 1870], "bitwise_or_": 1855, "bitwise_right_shift_": 1855, "bitwise_xor_": 1855, "broadcast_to": [1855, 1897], "cauchy_": [1855, 1870, 1919], "ceil_": [1855, 1870], "clamp_max": [1855, 1897], "clamp_max_": 1855, "clamp_min": [1855, 1897], "clamp_min_": 1855, "clip_": 1855, "conj_physical_": 1855, "copysign_": 1855, "cos_": [1855, 1870, 1877], "cosh_": [1855, 1870], "count_nonzero": [1855, 1897], "cummax": [1855, 1897], "cummin": [1855, 1897], "cumprod_": 1855, "cumsum_": 1855, "deg2rad": [1855, 1870, 1897, 1911], "deg2rad_": [1855, 1870, 1911], "outdim": 1855, "diagonal_scatt": [1855, 1897], "digamma_": [1855, 1870], "div_": [1855, 1870, 1911], "divide_": 1855, "dsplit": [1855, 1897], "eq_": 1855, "erf_": [1855, 1870], "erfc_": [1855, 1870], "erfinv_": [1855, 1870], "exp2_": 1855, "exp_": [1855, 1870], "expm1_": [1855, 1870], "exponential_": [1855, 1870, 1919], "fill_diagonal_": 1855, "fix_": 1855, "fliplr": [1855, 1897], "flipud": [1855, 1897], "float_power_": 1855, "floor_": [1855, 1870], "floor_divide_": [1855, 1911], "fmod_": 1855, "frac_": [1855, 1870], "frexp": [1855, 1897], "gcd_": 1855, "ge_": 1855, "geometric_": [1855, 1919], "ger": [1855, 1897], "get_devic": [1855, 1870, 1897, 1911, 1913, 1914], "greater_": 1855, "greater_equal_": 1855, "gt_": 1855, "hardshrink": [1855, 1897], "heavisid": [1855, 1897], "heaviside_": 1855, "hsplit": [1855, 1897, 1915], "hypot_": 1855, "i0_": 1855, "igamma_": 1855, "igammac_": 1855, "index_fil": [1855, 1870, 1897], "index_reduc": [1855, 1897], "is_coalesc": [1855, 1897, 1911], "is_complex": [1855, 1897, 1911, 1914], "is_contigu": [1855, 1870, 1897, 1915], "is_floating_point": [1855, 1870, 1897, 1911, 1914], "is_infer": [1855, 1897], "is_same_s": [1855, 1897, 1911], "is_set_to": [1855, 1897], "is_sign": [1855, 1870, 1897, 1911], "isclos": [1855, 1897], "isneginf": [1855, 1897, 1911], "isposinf": [1855, 1897, 1911], "isreal": [1855, 1897], "istft": [1855, 1897], "kron": [1855, 1897], "lcm_": 1855, "ldexp_": 1855, "le_": 1855, "lerp_": 1855, "less_": 1855, "less_equal_": 1855, "lgamma_": 1855, "log10_": [1855, 1870], "log1p_": [1855, 1870, 1911], "log2_": [1855, 1870], "log_normal_": [1855, 1870, 1919], "logaddexp2": [1855, 1897], "logcumsumexp": [1855, 1897], "logical_and_": 1855, "logical_not_": [1855, 1870], "logical_or_": 1855, "logical_xor_": 1855, "logit_": 1855, "lt_": 1855, "masked_scatt": [1855, 1897], "masked_select": [1855, 1870, 1897], "matrix_pow": [1855, 1897], "moveaxi": [1855, 1897], "msort": [1855, 1897], "multiply_": 1855, "mvlgamma_": 1855, "nan_to_num_": 1855, "nanmedian": [1855, 1870, 1897], "nansum": [1855, 1897], "narrow_copi": [1855, 1897, 1911], "ne_": 1855, "neg_": [1855, 1870, 1911], "negative_": [1855, 1911], "new_empty_strid": [1855, 1897], "new_ful": [1855, 1880, 1897], "new_on": [1855, 1897], "nextafter_": 1855, "nonzero_stat": [1855, 1897], "not_equal_": 1855, "output_nr": [1855, 1897], "polygamma_": 1855, "pow_": [1855, 1870], "q_per_channel_scal": [1855, 1897], "q_per_channel_zero_point": [1855, 1897], "q_scale": [1855, 1897], "q_zero_point": [1855, 1897], "rad2deg": [1855, 1870, 1897, 1911], "rad2deg_": [1855, 1870, 1911], "reciprocal_": [1855, 1870], "record_stream": [1855, 1880, 1897], "refine_nam": [1855, 1870, 1871, 1897], "relu_": [1855, 1904], "remainder_": 1855, "rename_": [1855, 1870, 1871], "renorm_": 1855, "reshape_a": [1855, 1872, 1897, 1915], "resize_a": [1855, 1897], "the_templ": 1855, "resize_as_sparse_": 1855, "retains_grad": [1855, 1897], "roll": [1855, 1897], "rot90": [1855, 1897], "round_": [1855, 1870], "rsqrt_": [1855, 1870], "select_scatt": [1855, 1897], "sgn_": [1855, 1870], "sigmoid_": [1855, 1870, 1904], "sign_": [1855, 1870], "sinc_": 1855, "sinh_": [1855, 1870], "smm": [1855, 1897, 1911], "sparse_resize_": 1855, "sparse_resize_and_clear_": 1855, "split_with_s": [1855, 1897, 1915], "sqrt_": [1855, 1870], "square_": 1855, "squeeze_": [1855, 1904], "sspaddmm": [1855, 1897, 1911], "sub_": [1855, 1870, 1911], "subtract_": 1855, "sum_to_s": [1855, 1897], "swapaxes_": 1855, "swapdim": [1855, 1897, 1915], "swapdims_": 1855, "take_along_dim": [1855, 1897], "tan_": [1855, 1870], "tanh_": [1855, 1870, 1904], "tensor_indices_or_sect": 1855, "to_mkldnn": [1855, 1897], "to_padded_tensor": [1855, 1872, 1897], "to_sparse_bsc": [1855, 1897], "to_sparse_bsr": [1855, 1897, 1911], "to_sparse_csc": [1855, 1897, 1911], "true_divide_": 1855, "trunc_": [1855, 1870], "type_a": [1855, 1870, 1897], "out0": [1855, 1893], "unsafe_chunk": [1855, 1897], "unsafe_split": [1855, 1897], "unsafe_split_with_s": [1855, 1897], "unsqueeze_": [1855, 1904], "view_a": [1855, 1897, 1915], "vsplit": [1855, 1897, 1915], "xlogy_": 1855, "adaptive_avg_pool2d": [1855, 1882, 1897, 1904], "adaptive_max_pool1d_with_indic": [1855, 1882], "adaptive_max_pool2d_with_indic": 1855, "adaptive_max_pool3d_with_indic": 1855, "alpha_dropout": [1855, 1897], "assert_int_or_pair": 1855, "arg_nam": 1855, "binary_cross_entropi": [1855, 1897], "binary_cross_entropy_with_logit": [1855, 1897], "celu": [1855, 1897], "dropout2d": 1855, "dropout3d": 1855, "feature_alpha_dropout": [1855, 1897], "fractional_max_pool2d_with_indic": 1855, "fractional_max_pool3d_with_indic": 1855, "gaussian_nll_loss": 1855, "glu": [1855, 1897], "gumbel_softmax": 1855, "hardsigmoid": [1855, 1897, 1904], "hardswish": [1855, 1897, 1904], "huber_loss": [1855, 1897], "instance_norm": [1855, 1897, 1904], "local_response_norm": 1855, "lp_pool1d": 1855, "lp_pool2d": 1855, "max_pool1d_with_indic": [1855, 1897], "mish": [1855, 1897], "multi_head_attention_forward": 1855, "embed_dim_to_check": 1855, "in_proj_weight": 1855, "in_proj_bia": 1855, "bias_k": 1855, "bias_v": 1855, "out_proj_weight": 1855, "out_proj_bia": 1855, "use_separate_proj_weight": 1855, "q_proj_weight": 1855, "k_proj_weight": 1855, "v_proj_weight": 1855, "static_k": 1855, "static_v": 1855, "multilabel_soft_margin_loss": 1855, "relu6": [1855, 1897, 1904], "silu": [1855, 1872, 1897], "softsign": 1855, "tanhshrink": 1855, "adaptive_avg_pool1d": [1855, 1882, 1897, 1904], "adaptive_max_pool1d": [1855, 1882, 1897], "affine_grid_gener": [1855, 1897], "alias_copi": [1855, 1897], "align_tensor": [1855, 1897], "alpha_dropout_": 1855, "as_strided_copi": [1855, 1897], "atleast_1d": [1855, 1897], "avg_pool1d": [1855, 1897, 1904], "bartlett_window": [1855, 1859, 1897], "cudnn_en": 1855, "batch_norm_backward_elemt": 1855, "invstd": 1855, "mean_di": 1855, "mean_dy_xmu": 1855, "batch_norm_backward_reduc": 1855, "input_g": 1855, "bias_g": 1855, "out3": 1855, "batch_norm_elemt": [1855, 1897], "batch_norm_gather_stat": [1855, 1897], "batch_norm_gather_stats_with_count": [1855, 1897], "batch_norm_stat": [1855, 1897], "batch_norm_update_stat": [1855, 1897], "blackman_window": [1855, 1859, 1897], "block_diag": [1855, 1897], "can_cast": [1855, 1897], "ccol_indices_copi": [1855, 1897], "celu_": 1855, "choose_qparams_optim": [1855, 1897], "n_bin": 1855, "bit_width": 1855, "col_indices_copi": [1855, 1897], "column_stack": [1855, 1897], "conv_tbc": [1855, 1897], "crow_indices_copi": [1855, 1897], "cudnn_affine_grid_gener": [1855, 1897], "cudnn_batch_norm": [1855, 1897], "exponential_average_factor": 1855, "cudnn_convolut": [1855, 1897], "cudnn_convolution_add_relu": [1855, 1897], "cudnn_convolution_relu": [1855, 1897], "cudnn_convolution_transpos": [1855, 1897], "cudnn_grid_sampl": [1855, 1897], "cudnn_is_accept": [1855, 1897], "cumulative_trapezoid": [1855, 1897], "diagonal_copi": [1855, 1897], "dropout_": [1855, 1865], "embedding_renorm_": 1855, "empty_quant": [1855, 1897], "anyenumtyp": 1855, "expand_copi": [1855, 1897], "fake_quantize_per_channel_affin": [1855, 1897], "fbgemm_linear_fp16_weight": [1855, 1897], "packed_weight": 1855, "fbgemm_linear_fp16_weight_fp32_activ": [1855, 1897], "fbgemm_linear_int8_weight": [1855, 1897], "col_offset": 1855, "weight_scal": 1855, "weight_zero_point": 1855, "fbgemm_linear_int8_weight_fp32_activ": [1855, 1897], "fbgemm_linear_quantize_weight": [1855, 1897], "fbgemm_pack_gemm_matrix_fp16": [1855, 1897], "fbgemm_pack_quantized_matrix": [1855, 1897], "feature_alpha_dropout_": 1855, "feature_dropout": [1855, 1897], "feature_dropout_": 1855, "frobenius_norm": [1855, 1897], "from_fil": [1855, 1897, 1913], "fused_moving_avg_obs_fake_qu": [1855, 1897], "observer_on": 1855, "fake_quant_on": 1855, "running_min": 1855, "running_max": 1855, "per_row_fake_qu": 1855, "symmetric_qu": 1855, "has_bias": 1855, "gru_cel": [1855, 1897], "w_ih": 1855, "w_hh": 1855, "hamming_window": [1855, 1859, 1897], "histogramdd": [1855, 1897], "hspmm": [1855, 1897, 1911], "indices_copi": [1855, 1897], "is_autocast_cpu_en": [1855, 1897], "is_autocast_en": [1855, 1897], "is_grad_en": [1855, 1897], "is_vulkan_avail": [1855, 1897], "isin": [1855, 1897], "kaiser_window": [1855, 1897], "lstm_cell": [1855, 1897], "meshgrid": [1855, 1897], "miopen_batch_norm": [1855, 1897], "miopen_convolut": [1855, 1897], "miopen_convolution_add_relu": [1855, 1897], "miopen_convolution_relu": [1855, 1897], "miopen_convolution_transpos": [1855, 1897], "miopen_depthwise_convolut": [1855, 1897], "miopen_rnn": [1855, 1897], "weight_stride0": 1855, "dropout_st": 1855, "out4": 1855, "mkldnn_adaptive_avg_pool2d": [1855, 1897], "mkldnn_convolut": [1855, 1897], "mkldnn_linear_backward_weight": 1855, "bias_defin": 1855, "mkldnn_max_pool2d": [1855, 1897], "mkldnn_max_pool3d": [1855, 1897], "mkldnn_rnn_layer": [1855, 1897], "weight0": 1855, "weight1": 1855, "weight2": 1855, "weight3": 1855, "hx_": 1855, "cx_": 1855, "save_mean": 1855, "save_invstd": 1855, "native_channel_shuffl": [1855, 1897], "native_norm": [1855, 1897, 1911], "norm_except_dim": [1855, 1897], "nuclear_norm": [1855, 1897], "pairwise_dist": [1855, 1897], "permute_copi": [1855, 1897], "promote_typ": [1855, 1897, 1918], "quantize_per_channel": [1855, 1897, 1902], "quantize_per_tensor_dynam": [1855, 1897, 1902], "quantized_batch_norm": [1855, 1897], "quantized_gru_cel": [1855, 1897], "packed_ih": 1855, "packed_hh": 1855, "col_offsets_ih": 1855, "col_offsets_hh": 1855, "scale_ih": 1855, "scale_hh": 1855, "zero_point_ih": 1855, "zero_point_hh": 1855, "quantized_lstm_cel": [1855, 1897], "quantized_max_pool1d": [1855, 1897], "quantized_max_pool2d": [1855, 1897], "quantized_rnn_relu_cel": [1855, 1897], "quantized_rnn_tanh_cel": [1855, 1897], "rand_lik": [1855, 1859, 1880, 1897, 1919], "randint_lik": [1855, 1859, 1897, 1919], "randn_lik": [1855, 1859, 1872, 1897, 1919], "randperm": [1855, 1859, 1897, 1919], "result_typ": [1855, 1897], "scalar1": 1855, "scalar2": 1855, "rnn_relu": [1855, 1897], "rnn_relu_cel": [1855, 1897], "rnn_tanh": [1855, 1897], "rnn_tanh_cel": [1855, 1897], "row_indices_copi": [1855, 1897], "row_stack": [1855, 1897], "rrelu_": 1855, "rsub": [1855, 1897], "searchsort": [1855, 1897], "segment_reduc": [1855, 1897], "selu_": 1855, "slice_copi": [1855, 1897], "sparse_bsc_tensor": [1855, 1897, 1911], "sparse_bsr_tensor": [1855, 1897, 1911], "sparse_compressed_tensor": [1855, 1897, 1911], "sparse_csc_tensor": [1855, 1897, 1911], "split_copi": [1855, 1897], "split_with_sizes_copi": [1855, 1897], "squeeze_copi": [1855, 1897], "std_mean": [1855, 1870, 1897], "t_copi": [1855, 1897], "threshold_": 1855, "transpose_copi": [1855, 1897], "trapz": [1855, 1897], "tril_indic": [1855, 1859, 1897], "triu_indic": [1855, 1859, 1897], "unbind_copi": [1855, 1897], "unfold_copi": [1855, 1897], "unsqueeze_copi": [1855, 1897], "values_copi": [1855, 1897], "vander": [1855, 1859, 1897], "var_mean": [1855, 1870, 1897], "view_as_complex_copi": [1855, 1897], "view_as_real_copi": [1855, 1897], "_nn": 1855, "adaptive_max_pool2d": [1855, 1897], "conv_depthwise3d": [1855, 1897], "cross_entropy_loss": [1855, 1897], "input_scal": 1855, "elu_": 1855, "flatten_dense_tensor": [1855, 1897], "random_sampl": 1855, "gelu_": 1855, "hardsigmoid_": [1855, 1904], "hardswish_": 1855, "hardtanh_": [1855, 1904], "leaky_relu_": 1855, "log_sigmoid": [1855, 1897], "mish_": 1855, "mkldnn_linear": [1855, 1897], "mkldnn_reorder_conv2d_weight": [1855, 1897], "mkldnn_reorder_conv3d_weight": [1855, 1897], "nll_loss2d": [1855, 1897], "nll_loss_nd": [1855, 1897], "reflection_pad3d": [1855, 1897], "relu6_": 1855, "rrelu_with_nois": [1855, 1897], "rrelu_with_noise_": 1855, "silu_": 1855, "slow_conv3d": [1855, 1897], "slow_conv_dilated2d": [1855, 1897], "slow_conv_dilated3d": [1855, 1897], "slow_conv_transpose2d": [1855, 1897], "slow_conv_transpose3d": [1855, 1897], "softshrink": [1855, 1897], "thnn_conv2d": [1855, 1897], "unflatten_dense_tensor": [1855, 1897], "upsample_bicubic2d": [1855, 1897], "scales_h": 1855, "scales_w": 1855, "upsample_linear1d": [1855, 1897], "upsample_nearest1d": [1855, 1897], "upsample_nearest3d": [1855, 1897], "scales_d": 1855, "upsample_trilinear3d": [1855, 1897], "fft_fftfreq": [1855, 1897], "fft_fftshift": [1855, 1897], "fft_hfft2": [1855, 1897], "fft_hfftn": [1855, 1897], "fft_ifftshift": [1855, 1897], "fft_ihfft2": [1855, 1897], "fft_ihfftn": [1855, 1897], "fft_rfftfreq": [1855, 1897], "_linalg": 1855, "linalg_cross": [1855, 1897], "linalg_det": [1855, 1897], "linalg_diagon": [1855, 1897], "eigvec": 1855, "linalg_ldl_factor": [1855, 1897], "linalg_ldl_factor_ex": [1855, 1897], "linalg_ldl_solv": [1855, 1897], "linalg_lu": [1855, 1897], "linalg_lu_factor": [1855, 1897], "linalg_lu_factor_ex": [1855, 1897], "linalg_lu_solv": [1855, 1897], "linalg_matmul": [1855, 1897], "linalg_matrix_exp": [1855, 1897], "linalg_matrix_pow": [1855, 1897], "linalg_multi_dot": [1855, 1897], "linalg_norm": [1855, 1897], "linalg_pinv": [1855, 1897], "linalg_solve_ex": [1855, 1897], "linalg_solve_triangular": [1855, 1897], "linalg_vand": [1855, 1897], "linalg_vecdot": [1855, 1897], "linalg_vector_norm": [1855, 1897], "_nest": 1855, "nested_to_padded_tensor": [1855, 1897], "_spars": 1855, "sparse_sampled_addmm": [1855, 1897], "_special": 1855, "special_airy_ai": [1855, 1897], "special_bessel_j0": [1855, 1897], "special_bessel_j1": [1855, 1897], "special_bessel_y0": [1855, 1897], "special_bessel_y1": [1855, 1897], "special_chebyshev_polynomial_t": [1855, 1897], "special_chebyshev_polynomial_u": [1855, 1897], "special_chebyshev_polynomial_v": [1855, 1897], "special_chebyshev_polynomial_w": [1855, 1897], "special_digamma": [1855, 1897], "special_entr": [1855, 1897], "special_erf": [1855, 1897], "special_erfc": [1855, 1897], "special_erfcx": [1855, 1897], "special_erfinv": [1855, 1897], "special_exp2": [1855, 1897], "special_expit": [1855, 1897], "special_expm1": [1855, 1897], "special_gammainc": [1855, 1897], "special_gammaincc": [1855, 1897], "special_gammaln": [1855, 1897], "special_hermite_polynomial_h": [1855, 1897], "special_i0": [1855, 1897], "special_i1": [1855, 1897], "special_laguerre_polynomial_l": [1855, 1897], "special_legendre_polynomial_p": [1855, 1897], "special_log1p": [1855, 1897], "special_log_ndtr": [1855, 1897], "special_log_softmax": [1855, 1897], "special_logit": [1855, 1897], "special_logsumexp": [1855, 1897], "special_modified_bessel_i0": [1855, 1897], "special_modified_bessel_i1": [1855, 1897], "special_modified_bessel_k0": [1855, 1897], "special_modified_bessel_k1": [1855, 1897], "special_multigammaln": [1855, 1897], "special_ndtr": [1855, 1897], "special_ndtri": [1855, 1897], "special_polygamma": [1855, 1897], "special_psi": [1855, 1897], "special_round": [1855, 1897], "special_scaled_modified_bessel_k0": [1855, 1897], "special_scaled_modified_bessel_k1": [1855, 1897], "special_shifted_chebyshev_polynomial_t": [1855, 1897], "special_shifted_chebyshev_polynomial_u": [1855, 1897], "special_shifted_chebyshev_polynomial_v": [1855, 1897], "special_shifted_chebyshev_polynomial_w": [1855, 1897], "special_sinc": [1855, 1897], "special_softmax": [1855, 1897], "special_spherical_bessel_j0": [1855, 1897], "special_xlog1pi": [1855, 1897], "special_xlogi": [1855, 1897], "special_zeta": [1855, 1897], "tval": 1855, "is_accept": 1855, "rect": 1855, "magic": [1855, 1858, 1919], "__complex__": 1855, "__float__": 1855, "__int__": 1855, "hex": [1855, 1857, 1897], "__hex__": 1855, "oct": [1855, 1897], "__oct__": 1855, "divmod": [1855, 1857, 1897], "chr": [1855, 1857, 1897], "int_float": 1855, "float_int": 1855, "fab": [1855, 1897], "int_int": 1855, "float_float": 1855, "complex_complex": 1855, "int_complex": 1855, "complex_int": 1855, "float_complex": 1855, "complex_float": [1855, 1913], "scalar_scalar": 1855, "int_to_int": 1855, "modf": [1855, 1897], "mathremaind": [1855, 1897], "programm": [1856, 1857], "tn": 1856, "subtyp": 1856, "an_error": 1856, "noreturn": [1856, 1857], "classvar": [1856, 1857], "anystr": [1856, 1857], "nomin": 1856, "newtyp": [1856, 1857], "tup": [1856, 1857], "emptydatastructur": 1856, "my_list": 1856, "aug_add_x": 1856, "inc": [1856, 1857], "assign_x": [1856, 1857], "polymorph": 1856, "sum_pair": 1856, "red": [1856, 1857], "green": [1856, 1857], "enum_fn": [1856, 1857], "my_variable_nam": 1856, "top_level_method": 1856, "other_help": 1856, "ten": [1856, 1916], "my_paramet": 1856, "my_submodul": 1856, "tuple_or_list": 1856, "a_tupl": 1856, "de": [1856, 1899, 1902], "is_script": [1856, 1857, 1897], "unsupported_linear_op": 1856, "is_trac": [1856, 1857], "univers": 1856, "typing_extens": 1856, "a_dict": 1856, "some_dict": 1856, "delimit": [1857, 1858], "tstype": 1857, "tsmoduletyp": 1857, "tsalltyp": 1857, "tsmetatyp": 1857, "tsprimitivetyp": 1857, "tsstructuraltyp": 1857, "tsnominaltyp": 1857, "myclass": [1857, 1899], "printabl": [1857, 1899], "sortabl": 1857, "nevertheless": [1857, 1909], "inc_first_el": 1857, "cpufloattyp": 1857, "tstupl": 1857, "tsnamedtupl": 1857, "tslist": 1857, "tsdict": 1857, "tsoption": 1857, "tsunion": 1857, "tsfutur": 1857, "tsrref": 1857, "tsawait": 1857, "await": [1857, 1858, 1907], "keytyp": 1857, "_await": 1857, "mytupl": 1857, "scripted_inc": 1857, "_annotatednamedtupl": 1857, "_namedtupleannot": 1857, "_unannotatednamedtupl": 1857, "mistak": [1857, 1884], "nameerror": 1857, "remedi": 1857, "tsbuiltinclass": 1857, "tscustomclass": 1857, "tsenum": 1857, "tstensor": 1857, "subtensor": [1857, 1882, 1922], "subwithtorchfunct": 1857, "script_g": 1857, "tsclassdef": 1857, "methoddefinit": 1857, "__torch__": [1857, 1895], "class2": 1857, "tsenumdef": 1857, "tsenumtyp": 1857, "memberidentifi": 1857, "intenum": 1857, "intflag": 1857, "basecolor": 1857, "compli": [1857, 1899], "classbodydefinit": 1857, "moduleobj": 1857, "testmodul": 1857, "mymodel": [1857, 1876, 1890], "dosometh": 1857, "strateg": 1857, "congruent": 1857, "python3": 1857, "unannot": 1857, "python3annot": 1857, "paramannot": 1857, "returnannot": 1857, "funcormethodbodi": 1857, "mypyannot": 1857, "localvarannot": 1857, "setval": 1857, "moduletyp": [1857, 1899], "classidentifi": 1857, "instanceattridentifi": 1857, "offset_": 1857, "tsstructualtyp": 1857, "grammar": 1857, "chapter": [1857, 1885], "floattyp": 1857, "inttyp": 1857, "stringtyp": 1857, "devicetyp": 1857, "bullet": 1857, "tupletyp": 1857, "listtyp": 1857, "enclosur": 1857, "parenth_form": 1857, "list_displai": 1857, "dict_displai": 1857, "legal": 1857, "stringliter": 1857, "floatnumb": 1857, "expression_list": 1857, "list_comprehens": 1857, "comp_for": 1857, "target_list": 1857, "or_expr": 1857, "key_datum_list": 1857, "dict_comprehens": 1857, "key_datum": 1857, "ongo": [1857, 1895, 1905, 1907], "enclos": 1857, "datum": [1857, 1921], "attributeref": 1857, "slice_list": 1857, "slice_item": 1857, "proper_slic": 1857, "argument_list": 1857, "desugar": 1857, "u_expr": 1857, "tightli": [1857, 1888], "m_expr": 1857, "a_expr": 1857, "shift_expr": 1857, "and_expr": 1857, "xor_expr": 1857, "comp_oper": 1857, "__contains__": 1857, "or_test": 1857, "and_test": 1857, "not_test": 1857, "conditional_express": 1857, "starred_item": 1857, "expression_stmt": 1857, "starred_express": 1857, "assignment_express": 1857, "assignment_stmt": 1857, "augmented_assignment_stmt": 1857, "augtarget": 1857, "augop": 1857, "annotated_assignment_stmt": 1857, "raise_stmt": 1857, "assert_stmt": 1857, "return_stmt": 1857, "del_stmt": 1857, "pass_stmt": 1857, "print_stmt": 1857, "break_stmt": 1857, "continue_stmt": 1857, "if_stmt": 1857, "while_stmt": 1857, "for_stmt": 1857, "with_stmt": 1857, "with_item": 1857, "__enter__": 1857, "suppress": [1857, 1906], "tuple_stmt": 1857, "getattr_stmt": 1857, "hasattr_stmt": 1857, "zip_stmt": 1857, "iterable1": 1857, "iterable2": 1857, "enumerate_stmt": 1857, "add_stat_valu": 1857, "sugaredvalu": 1857, "unrecogn": 1857, "honor": 1857, "__abs__": 1857, "bytearrai": 1857, "delattr": 1857, "exec": 1857, "__index__": 1857, "isint": 1857, "issubclass": [1857, 1882], "ndigit": 1857, "setattr": 1857, "__import__": [1857, 1899], "notimpl": [1857, 1858, 1882], "rpc_sync": [1857, 1897, 1907, 1908, 1909], "synonym": 1857, "_fork": [1857, 1879], "_wait": [1857, 1879], "lexic": 1858, "indent": 1858, "coroutin": 1858, "__del__": [1858, 1877], "__bytes__": 1858, "__slots__": 1858, "metaclass": 1858, "mro": 1858, "__r": 1858, "nonloc": 1858, "bytesliter": 1858, "imagnumb": 1858, "parenthes": 1858, "ifs": 1858, "compound": 1858, "exc_typ": 1858, "exc_valu": 1858, "adaptivelogsoftmaxwithloss": 1859, "enable_grad": [1859, 1919], "overload_nam": 1861, "handi": [1861, 1877, 1880], "spotti": 1861, "googl": 1861, "colab": [1861, 1899], "keynam": 1861, "alias_analysi": 1861, "conserv": [1861, 1864, 1880], "op_nam": 1861, "opoverload": 1861, "div_cpu": 1861, "off_by_default": 1863, "_registr": 1863, "born": 1864, "citizen": 1864, "afterthought": 1864, "unlock": 1864, "intuit": 1864, "alik": 1864, "grai": 1864, "systemat": 1864, "onboard": 1864, "maskedarrai": 1864, "masked_tensor": 1864, "blocklist": [1865, 1899], "mobileoptimizertyp": 1865, "conv_bn_fus": 1865, "correspondingli": 1865, "prepack": [1865, 1897], "insert_fold_prepack_op": 1865, "arm": [1865, 1902], "remove_dropout": 1865, "hoist": 1865, "hoist_conv_packed_param": 1865, "fuse_add_relu": 1865, "vulkan": 1865, "vulkan_automatic_gpu_transf": 1865, "freeze_modul": 1865, "script_modul": 1865, "optimization_blocklist": 1865, "preserved_method": 1865, "_mobileoptimizertyp": 1865, "recursivescriptmodul": [1865, 1893], "infrequ": 1867, "window_s": 1867, "max_sampl": 1867, "cap": 1867, "_monitor": 1867, "data_value_t": 1867, "eventhandlerhandl": 1867, "register_event_handl": 1867, "unregister_event_handl": 1867, "tensorboardeventhandl": 1867, "writer": [1867, 1888, 1916], "shared_memori": 1869, "abruptli": 1869, "get_all_sharing_strategi": 1869, "get_sharing_strategi": 1869, "set_sharing_strategi": 1869, "new_strategi": 1869, "abnorm": [1869, 1890], "fatal": [1869, 1890], "forev": [1869, 1881], "asap": 1869, "queue_2": 1869, "x_clone": 1869, "segfault": [1869, 1891], "shm_open": 1869, "mmap": 1869, "prone": [1869, 1890], "destructor": [1869, 1909], "seriou": [1869, 1880], "torch_shm_manag": 1869, "unnot": 1869, "spawncontext": 1869, "has_nam": 1870, "is_shar": [1870, 1913], "is_sparse_csr": [1870, 1897, 1913], "is_tensor": [1870, 1911], "items": [1870, 1897], "unifies_names_from_input_tensor": 1870, "nbyte": [1870, 1897, 1913], "ndimens": 1870, "position": [1870, 1871], "unnam": [1870, 1871], "misalign": 1870, "inher": 1870, "disappear": 1870, "img": [1871, 1916], "renamed_img": 1871, "coexist": 1871, "scale_channel": 1871, "more_img": 1871, "named_tensor": 1871, "named_img": 1871, "flat_img": 1871, "named_flat_img": 1871, "unflattened_img": 1871, "unflattened_named_img": 1871, "grad_loss": 1871, "8107": 1871, "6357": 1871, "0783": 1871, "untest": 1871, "rename_map": 1871, "greedili": 1871, "unment": 1871, "49152": 1871, "datastructur": 1872, "seamless": 1872, "nested_tensor": 1872, "nt": 1872, "vein": 1872, "as_nested_tensor": 1872, "irregular": 1872, "indistinguish": 1872, "2286": 1872, "4842": 1872, "7827": 1872, "6745": [1872, 1912], "0658": 1872, "1247": 1872, "4078": 1872, "8083": 1872, "2871": 1872, "5559": 1872, "9885": 1872, "4074": 1872, "4855": 1872, "0733": 1872, "8285": 1872, "6858": 1872, "7030": 1872, "3481": 1872, "0236": 1872, "fake_grad": 1872, "6862": 1872, "1282": 1872, "1031": 1872, "0464": 1872, "3276": 1872, "9967": 1872, "0054": 1872, "8972": 1872, "9174": 1872, "4995": 1872, "8546": 1872, "7194": 1872, "2918": 1872, "1846": 1872, "8793": 1872, "5183": 1872, "6447": 1872, "8009": 1872, "8468": 1872, "9832": 1872, "5272": 1872, "pt_infer": 1872, "pt_larg": 1872, "pt_small": 1872, "bitwidth": [1873, 1888, 1902], "asymmetr": [1873, 1902, 1905], "sacrific": [1875, 1880], "dirac": 1875, "glorot": 1875, "bengio": 1875, "fan": 1875, "_in": 1875, "fan_in": 1875, "delv": 1875, "surpass": 1875, "he": 1875, "_mode": 1875, "fan_out": 1875, "redrawn": 1875, "sax": 1875, "2013": 1875, "marten": 1875, "walkthrough": 1876, "clip_grad_value_": 1876, "optimizer2": 1876, "batch_per_it": 1876, "iters_to_accumul": 1876, "num_proc": 1876, "grad_param": 1876, "grad_norm": 1876, "scaled_grad_param": 1876, "inv_scal": 1876, "optimizer0": 1876, "optimizer1": 1876, "output0": 1876, "model0": 1876, "model1": 1876, "loss0": 1876, "loss1": 1876, "imped": 1876, "poor": [1876, 1877], "dp_model": 1876, "imported_funct": 1876, "mymm": 1876, "myfloat32func": 1876, "fwd_output": 1876, "cleaner": 1877, "mapsto": 1877, "educ": 1877, "_save": 1877, "_saved_self": 1877, "convex": 1877, "concav": 1877, "togglabl": 1877, "drawback": 1877, "0011": 1877, "dirti": 1877, "hogwild": 1877, "train_fn": 1877, "graphtask": 1877, "copyslic": 1877, "mutex": 1877, "gotten": 1877, "curiou": 1877, "\u2102": 1877, "yj": 1877, "holomorph": 1877, "theori": 1877, "homomorph": 1877, "mathematician": 1877, "im": 1877, "studi": [1877, 1901], "beauti": 1877, "somewhat": [1877, 1880, 1911], "counterintuit": 1877, "0906": 1877, "4835": 1877, "audio": [1877, 1916], "\u211d": 1877, "_output": 1877, "vj": 1877, "selfdeletingtempfil": 1877, "tmp_dir": 1877, "uuid": 1877, "uuid4": 1877, "temp_fil": 1877, "forbidden": 1877, "savedtensor": 1877, "_raw_saved_": 1877, "_raw_saved_self": 1877, "save_on_disk_threshold": 1877, "tensor_or_sctf": 1877, "_saved_oth": 1877, "4th": 1878, "backcompat": 1878, "broadcast_warn": 1878, "userwarn": 1878, "compute_z": 1879, "w_z": 1879, "w_y": 1879, "tbb": 1879, "aten_thread": 1879, "omp": 1879, "mkl_thread": 1879, "bla": 1879, "mkldnn_cpu_runtim": 1879, "use_mkldnn": 1879, "use_tbb": 1879, "use_openmp": 1879, "ON": [1879, 1886, 1887], "set_num_interop_thread": 1879, "get_num_interop_thread": 1879, "set_num_thread": 1879, "get_num_thread": 1879, "omp_num_thread": 1879, "mkl_num_thread": 1879, "1024": [1879, 1880], "e5": 1879, "oversubscript": 1879, "irrespect": 1880, "spread": 1880, "cuda2": [1880, 1886], "a_ful": 1880, "10240": 1880, "b_full": 1880, "ab_ful": 1880, "7277": 1880, "ab_tf32": 1880, "016": 1880, "ga100": 1880, "1747": 1880, "relative_error": 1880, "0022": 1880, "ab_fp32": 1880, "0031": 1880, "000039": 1880, "7x": 1880, "globalcontext": 1880, "setallowtf32cubla": 1880, "setallowtf32cudnn": 1880, "bench_gemm_transform": 1880, "allow_fp16_reduc": 1880, "4048": 1880, "1634": 1880, "1639": 1880, "4056": 1880, "1670": 1880, "1661": 1880, "4080": 1880, "1664": 1880, "1658": 1880, "1651": 1880, "4104": 1880, "1677": 1880, "1674": 1880, "4128": 1880, "1796": [1880, 1888], "2519": 1880, "5096": 1880, "2144": 1880, "2149": 1880, "2766": 1880, "5120": 1880, "2142": 1880, "9728": 1880, "3875": 1880, "5779": 1880, "6182": 1880, "9656": 1880, "setallowfp16reductioncubla": 1880, "instabl": 1880, "setallowbf16reductioncubla": 1880, "start_ev": 1880, "elapsed_time_m": 1880, "exploit": 1880, "paragraph": [1880, 1885], "initial_grad": 1880, "memory_alloc": [1880, 1886], "memory_snapshot": [1880, 1886], "memcheck": 1880, "pytorch_no_cuda_memory_cach": [1880, 1886], "option2": 1880, "value2": 1880, "max_split_size_mb": 1880, "borderlin": 1880, "memory_summari": 1880, "resort": [1880, 1885, 1899], "roundup_power2_divis": 1880, "cudacachingalloc": 1880, "1280": 1880, "1536": 1880, "1792": 1880, "256mb": 1880, "512mb": 1880, "1gb": 1880, "knob": 1880, "roundup_bypass_threshold_mb": 1880, "garbage_collection_threshold": 1880, "reclaim": 1880, "release_cached_block": 1880, "unfavor": 1880, "cuda_runtime_api": 1880, "iostream": 1880, "fpic": 1880, "my_malloc": 1880, "cout": 1880, "endl": [1880, 1887], "my_fre": 1880, "cudafre": 1880, "cudapluggablealloc": 1880, "new_alloc": 1880, "_cuda_clearcublasworkspac": 1880, "kib": 1880, "lru": 1880, "geometri": 1880, "1023": 1880, "use_pytorch_kernel_cach": 1880, "pytorch_kernel_cache_path": 1880, "store_tru": 1880, "disable_cuda": 1880, "assess": 1880, "cudagetdevicecount": 1880, "cuinit": 1880, "pytorch_nvml_based_cuda_check": 1880, "nvml": 1880, "nvmldevicegetcount_v2": 1880, "poison": 1880, "aforement": [1880, 1890], "train_load": 1880, "x_cpu": 1880, "x_gpu": 1880, "x_cpu_long": 1880, "y_cpu": 1880, "y_gpu": 1880, "y_cpu_long": 1880, "new_tensor": 1880, "overus": 1880, "cudagraphlaunch": 1880, "elid": 1880, "versatil": 1880, "static_input": 1880, "static_output": 1880, "realist": 1880, "sophist": [1880, 1898], "violat": [1880, 1883], "prohibit": [1880, 1893], "virtual": 1880, "d_in": 1880, "d_out": 1880, "640": 1880, "static_target": 1880, "static_y_pr": 1880, "static_loss": 1880, "real_input": 1880, "real_target": 1880, "refil": 1880, "dag": 1880, "rejoin": 1880, "cuda_work": 1880, "nsight": 1880, "reorgan": 1880, "graphabl": 1880, "needlessli": 1880, "econom": 1880, "static_out_1": 1880, "g1_workload": 1880, "static_in_1": 1880, "static_out_2": 1880, "g2_workload": 1880, "static_in_2": 1880, "real_data_1": 1880, "real_data_2": 1880, "occasion": [1880, 1911], "29500": [1881, 1900, 1907, 1908], "prerequisit": 1881, "grad0": 1881, "grad1": 1881, "bucket1": 1881, "bucket0": 1881, "hurt": 1881, "earliest": 1881, "unreadi": 1881, "absent": 1881, "hpp": 1881, "processgroupgloo": 1881, "processgroupmpi": 1881, "_sync_param": 1881, "autograd_hook": 1881, "prepare_for_backward": 1881, "_after_": 1881, "optimize_ddp": 1881, "mark_dirti": 1882, "mark_non_differenti": [1882, 1883], "set_materialize_grad": 1882, "linearfunct": 1882, "grad_bia": 1882, "mulconst": 1882, "mycub": [1882, 1883], "grad_dx": [1882, 1883], "my_cub": [1882, 1883], "input_featur": 1882, "output_featur": 1882, "duck": [1882, 1899], "__array_function__": 1882, "nep": 1882, "0018": 1882, "scalartensor": 1882, "handled_funct": 1882, "mandat": 1882, "update_wrapp": 1882, "ensure_tensor": 1882, "metadatatensor": 1882, "__add__": 1882, "subtensor2": 1882, "othersubtensor": 1882, "loggingtensor": 1882, "permiss": 1882, "_metadata": 1882, "ndata": 1882, "ret": [1882, 1907], "ministri": 1882, "silli": 1882, "superclass": 1882, "troublesom": 1882, "face": [1882, 1899, 1916], "_get_overridable_funct": 1882, "overriden": 1882, "get_overridable_funct": [1882, 1922], "func_dict": 1882, "nn_func": 1882, "labori": 1882, "_get_testing_overrid": 1882, "get_testing_overrid": [1882, 1922], "override_dict": 1882, "dummy_add": 1882, "get_ignored_funct": [1882, 1922], "custom_vjp": 1883, "custom_jvp": 1883, "to_numpi": 1883, "numpysort": 1883, "ind_inv": 1883, "_1": [1883, 1899], "numpytak": 1883, "numpy_sort": 1883, "saniti": 1883, "ggx": 1883, "vmappabl": 1883, "x_bdim": 1883, "ind_bdim": 1883, "ind_inv_bdim": 1883, "expanded_x": 1883, "expanded_ind": 1883, "expanded_ind_inv": 1883, "new_dim": 1883, "logical_dim": 1883, "maybe_expand_bdim_at_front": 1883, "pseudocod": 1883, "rapidli": 1884, "abridg": 1884, "total_loss": 1884, "extrud": 1884, "phenomenon": 1884, "plenti": 1884, "bptt": 1884, "repackag": 1884, "nm": 1884, "blow": 1884, "elf": 1884, "grep": 1884, "run_model": 1884, "recoveri": 1884, "data_parallel": 1884, "pad_packed_sequ": 1884, "padded_input": 1884, "packed_input": 1884, "packed_output": 1884, "my_lstm": 1884, "dp_m": 1884, "padding_input": 1884, "ur": 1885, "rewritten": 1885, "j_f": 1885, "calculu": 1885, "cw": 1885, "bigger": 1885, "articl": 1885, "58eb23378f2a376565a66ac32c93a316c45b6131": 1885, "l99": 1885, "l105": 1885, "ds_dx": 1885, "compute_gradi": 1885, "ds_dy": 1885, "conj_w_d": 1885, "w_d": 1885, "d_idx": 1885, "albeit": 1885, "wonder": 1885, "amd": 1886, "dialect": 1886, "portabl": 1886, "rocmdoc": 1886, "programming_guid": 1886, "hip_api_guid": 1886, "cuda_vers": 1886, "cudaruntimegetvers": 1886, "cudadrivergetvers": 1886, "hip_vers": 1886, "hipruntimegetvers": 1886, "hipdrivergetvers": 1886, "11000": 1886, "use_rocm": 1886, "rocm_vers": 1886, "40300": 1886, "cmake": [1886, 1894], "drocm_force_enable_gpu_assert": 1886, "addglobalcallback": 1887, "recordfunct": 1887, "ivalu": 1887, "threadlocaldebuginfo": 1887, "debuginfoguard": 1887, "recordfunctioncallback": 1887, "onfunctionent": 1887, "onfunctionexit": 1887, "needsinput": 1887, "samplingprob": 1887, "enablerecordfunct": 1887, "cerr": 1887, "broader": [1887, 1919], "inject": 1887, "setapiusagehandl": 1887, "setapiusagelogg": 1887, "event_nam": 1887, "c10_log_api_usage_onc": 1887, "my_api": 1887, "_log_api_usage_onc": 1887, "archiv": 1887, "bundl": 1887, "akin": 1887, "jpeg": 1887, "camera": [1887, 1916], "setexportmoduleextrafileshook": 1887, "extrafilesmap": 1887, "producer_info": 1887, "getenv": 1887, "getsourc": 1887, "precompil": 1887, "pyc": 1887, "loos": 1887, "elabor": 1888, "tpu": 1888, "mylinear": 1888, "sample_input": 1888, "0413": 1888, "2057": 1888, "0597": 1888, "8247": 1888, "1045": 1888, "4299": 1888, "5457": 1888, "4793": 1888, "3634": 1888, "8525": 1888, "6749": 1888, "l0": [1888, 1893], "bignet": 1888, "big_net": 1888, "dynamicnet": 1888, "dynamic_net": 1888, "2051": 1888, "7601": 1888, "1963": 1888, "4354": 1888, "6598": 1888, "4446": 1888, "4628": 1888, "8774": 1888, "6848": 1888, "5458": 1888, "4647": 1888, "5310": 1888, "0609": 1888, "0940": 1888, "1266": 1888, "0623": 1888, "3508": 1888, "0550": 1888, "5317": 1888, "5562": 1888, "4028": 1888, "6942": 1888, "0140": 1888, "0329": 1888, "1160": 1888, "0434": 1888, "3889": 1888, "1613": 1888, "6340": 1888, "3887": 1888, "9979": 1888, "0767": 1888, "3526": 1888, "8756": 1888, "5847": 1888, "6016": 1888, "1608": 1888, "0829": 1888, "6338": 1888, "9239": 1888, "6943": 1888, "5034": 1888, "0268": 1888, "4489": 1888, "9403": 1888, "2509": 1888, "5052": 1888, "3088": 1888, "4951": 1888, "3381": 1888, "5166": 1888, "boilerpl": [1888, 1899], "beginn": 1888, "examples_nn": 1888, "polynomial_modul": 1888, "teach": 1888, "0013": [1888, 1912], "0030": 1888, "0008": 1888, "modalmodul": 1888, "6614": 1888, "2669": 1888, "0617": 1888, "4519": 1888, "two_layer_net_optim": 1888, "blitz": 1888, "neural_networks_tutori": 1888, "autograd_tutori": 1888, "new_net": 1888, "runningmean": 1888, "1041": 1888, "0647": 1888, "1515": 1888, "m_load": 1888, "unserialized_th": 1888, "statefulmodul": 1888, "param3": 1888, "param_list": 1888, "parameterlist": 1888, "param_dict": 1888, "parameterdict": 1888, "buffer1": 1888, "buffer2": 1888, "buffer3": 1888, "0322": 1888, "9066": 1888, "1409": 1888, "4852": 1888, "6949": 1888, "2911": 1888, "1044": 1888, "4202": 1888, "1953": 1888, "5299": 1888, "8747": 1888, "6289": 1888, "4898": 1888, "6434": 1888, "5187": 1888, "0346": 1888, "4077": 1888, "4324": 1888, "7022": 1888, "3915": 1888, "6176": 1888, "6062": 1888, "5992": 1888, "4452": 1888, "2843": 1888, "3710": 1888, "3947": 1888, "saving_loading_model": 1888, "what_is_state_dict": 1888, "skip_init": 1888, "skip_param_init": 1888, "new_grad_input": 1888, "5059": 1888, "8158": 1888, "2390": 1888, "0043": 1888, "addmmbackward": 1888, "forward_pre_hook_handl": 1888, "5752": 1888, "7421": 1888, "forward_hook_handl": 1888, "0980": 1888, "4666": 1888, "0256": 1888, "4497": 1888, "5046": 1888, "combat": 1888, "shader": 1889, "mps_devic": 1889, "yourfavoritenet": 1889, "a3c": 1890, "set_start_method": 1890, "simplequeu": 1890, "cope": 1890, "eleg": 1890, "num_process": 1890, "modern": 1891, "754": 1891, "1e20": 1891, "4142e": 1891, "struggl": 1891, "benign": 1891, "v_dot2": 1891, "mfma": 1891, "fp64": 1891, "rocbla": 1891, "miopen": 1891, "rocblas_internal_fp16_alt_impl": 1891, "miopen_debug_convolution_attrib_fp16_alt_impl": 1891, "_convbackend": 1891, "slownd": 1891, "slownd_transpos": 1891, "slownd_dil": 1891, "slownd_dilated_transpos": 1891, "convbackend": 1891, "miopendepthwis": 1891, "miopentranspos": 1891, "svd_lowrank": [1892, 1911], "22modul": 1892, "20determin": 1892, "index_add_cuda_": 1892, "1509": 1892, "8027": 1892, "0333": 1892, "1444": 1892, "rese": 1892, "seed_work": 1892, "worker_se": 1892, "train_dataset": 1892, "tensor_dict": 1893, "loaded_numb": 1893, "loaded_even": 1893, "scene": [1893, 1916], "loaded_smal": 1893, "num_batches_track": 1893, "bn_state_dict": 1893, "new_bn": 1893, "out0_relu": 1893, "1400": 1893, "4563": 1893, "0271": 1893, "4406": 1893, "2827": 1893, "4588": 1893, "2031": 1893, "0300": 1893, "1316": 1893, "6533": 1893, "3413": 1893, "1112": 1893, "m_state_dict": 1893, "new_m": 1893, "original_nam": 1893, "controlflowmodul": 1893, "controlflowmodule_trac": 1893, "3793": 1893, "controlflowmodule_script": 1893, "rem": 1894, "7z": 1894, "curl": 1894, "ossci": 1894, "mkl_2020": 1894, "aoa": 1894, "omkl": 1894, "cuda_prefix": 1894, "cuda102": 1894, "magma_2": 1894, "4_": 1894, "omagma": 1894, "cmake_include_path": 1894, "magma_hom": 1894, "studio": 1894, "pip": [1894, 1895, 1916], "cmake_gener": 1894, "ffi": 1894, "create_extens": 1894, "_ext": 1894, "define_macro": 1894, "relative_to": 1894, "c99": 1894, "x86_x64": 1894, "packagesnotfounderror": 1894, "anaconda": 1894, "noarch": 1894, "continuum": 1894, "pkg": 1894, "pro": [1894, 1916], "msys2": 1894, "importerror": [1894, 1899], "dll": 1894, "vc2017": 1894, "redistribut": 1894, "vc": 1894, "vs2017_runtim": 1894, "mkl_fft": 1894, "intel_openmp": 1894, "vs2017": 1894, "pai": [1894, 1915], "openbla": 1894, "forg": 1894, "emerg": 1894, "bootstrap": 1894, "forgotten": 1894, "idiom": 1894, "freeze_support": 1894, "forkingpickl": 1894, "brokenpipeerror": 1894, "errno": 1894, "couldn": [1894, 1895], "torch_14808_1591070686": 1894, "thalloc": 1894, "tdr": 1894, "thcudacheck": 1894, "csrc": 1894, "storageshar": 1894, "dummy_input": 1895, "input_nam": 1895, "actual_input_1": 1895, "learned_": 1895, "output_nam": 1895, "learned_0": 1895, "learned_1": 1895, "learned_2": 1895, "learned_3": 1895, "learned_14": 1895, "learned_15": 1895, "kernel_shap": 1895, "9216": 1895, "transb": 1895, "check_model": 1895, "printable_graph": 1895, "onnxruntim": 1895, "ort": 1895, "ort_sess": 1895, "inferencesess": 1895, "astyp": 1895, "seq_length": 1895, "real_seq_length": 1895, "experienc": 1895, "new_data": 1895, "hope": 1895, "symbolic_opset": 1895, "symbolic_opset9": 1895, "_variablefunct": 1895, "pyi": 1895, "___torch_mangle_0": 1895, "alpha_f": 1895, "myrelu": 1895, "value_t": 1895, "pythonop": [1895, 1897], "mylogexp": 1895, "operator_export_typ": 1895, "onnx_fallthrough": 1895, "onnx_aten_fallback": 1895, "onnxscript": 1895, "onnx_opset": 1895, "opset15": 1895, "custom_opset": 1895, "67326": 1895, "alphax": 1895, "castlik": 1895, "gammax": 1895, "settyp": 1895, "custom_selu": 1895, "jit_util": 1895, "graphcontext": 1895, "onnxscript_op": 1895, "register_custom_op_symbol": 1895, "symbolic_nam": 1895, "symbolic_fn": 1895, "symbolic_help": 1895, "symbolic_foo_forward": 1895, "custom_domain": 1895, "attr1_f": 1895, "attr2_i": 1895, "custom_op": 1895, "foo_forward": 1895, "foomodel": 1895, "example_input1": 1895, "caffe2": [1895, 1916], "torch_script_graph": 1895, "unconvertible_op": 1895, "dynamic_ax": 1895, "export_param": 1895, "trainingmod": 1895, "operatorexporttyp": 1895, "do_constant_fold": 1895, "keep_initializers_as_input": 1895, "export_modules_as_funct": 1895, "OF": 1895, "WITH": 1895, "input_i": 1895, "input_z": 1895, "fileno": 1895, "untrain": 1895, "doc_str": 1895, "onnx_aten": 1895, "build_caffe2": 1895, "summodul": 1895, "dim_valu": 1895, "my_custom_axis_nam": 1895, "dim_param": 1895, "sum_dynamic_axes_1": 1895, "predefin": 1895, "checkererror": 1895, "unsupportedoperatorerror": 1895, "export_to_pretty_str": 1895, "export_typ": 1895, "google_print": 1895, "add_node_nam": 1895, "nodeproto": 1895, "debugstr": 1895, "contrib": 1895, "test_aten_embedding_2": 1895, "test_oper": 1895, "unregister_custom_op_symbol": 1895, "select_model_mode_for_export": 1895, "is_in_onnx_export": 1895, "middl": 1895, "enable_log": 1895, "disable_log": 1895, "graphinfo": 1895, "incorrect_relu_symbolic_funct": 1895, "2328854203224182": 1895, "699536174352349": 1895, "rapid": 1895, "exportopt": 1895, "my_nn_modul": 1895, "my_nn_module_attribut": 1895, "underdevelop": 1896, "parsabl": 1896, "sarif": 1896, "diagsys0001": 1896, "fxe0001": 1896, "fxe0002": 1896, "fxe0003": 1896, "fxe0004": 1896, "fxe0005": 1896, "fxe0006": 1896, "atenlib": 1896, "fxe0007": 1896, "fxe0008": 1896, "fxe0009": 1896, "fxe0010": 1896, "fxe0011": 1896, "fxe0012": 1896, "poe0001": 1896, "poe0002": 1896, "poe0003": 1896, "poe0004": 1896, "_intern": [1896, 1913], "exportdiagnost": 1896, "frames_to_skip": 1896, "cpp_stack": 1896, "record_cpp_call_stack": 1896, "constantchunk": 1897, "__and_": 1897, "__contains_": 1897, "__derive_index": 1897, "__getitem_": 1897, "__interpol": 1897, "__is_": 1897, "__isnot_": 1897, "__lshift_": 1897, "__not_": 1897, "__or_": 1897, "__range_length": 1897, "__rshift_": 1897, "__xor_": 1897, "_cast_byt": 1897, "_cast_char": 1897, "_cast_doubl": 1897, "_cast_float": 1897, "_cast_half": 1897, "_cast_int": 1897, "_cast_long": 1897, "_cast_short": 1897, "_conj": 1897, "_convolution_mod": 1897, "_dim_arang": 1897, "_pack_padded_sequ": 1897, "_pad_packed_sequ": 1897, "_reshape_from_tensor": 1897, "_sample_dirichlet": 1897, "_set_item": 1897, "_shape_as_tensor": 1897, "_standard_gamma": 1897, "_uniqu": 1897, "_unique2": 1897, "_weight_norm": 1897, "conv1d_relu": 1897, "conv2d_relu": 1897, "embedding_renorm": 1897, "floordiv": [1897, 1904], "nonzero_numpi": 1897, "numpy_t": 1897, "unchecked_cast": 1897, "unique_dim": 1897, "_quantiz": 1897, "conv2d_prepack": 1897, "conv3d_prepack": 1897, "conv3d_relu": 1897, "conv_transpose1d_prepack": 1897, "conv_transpose2d_prepack": 1897, "conv_transpose3d_prepack": 1897, "linear_dynam": 1897, "linear_prepack": 1897, "linear_prepack_fp16": 1897, "linear_prepack_fp16_legaci": 1897, "linear_prepack_legaci": 1897, "_test": 1897, "get_first": 1897, "compleximplicit": 1897, "floatimplicit": 1897, "intimplicit": 1897, "__iand_": 1897, "__ilshift_": 1897, "__ior_": 1897, "__irshift_": 1897, "__ixor_": 1897, "__round_to_zero_floordiv": 1897, "__upsampl": 1897, "__upsample_bilinear": 1897, "__upsample_nearest": 1897, "_adaptive_avg_pool3d": 1897, "_add_batch_dim": 1897, "_add_relu": 1897, "_addmm_activ": 1897, "_aminmax": 1897, "_amp_foreach_non_finite_check_and_unscal": 1897, "_amp_update_scal": 1897, "_assert_async": 1897, "_assert_tensor_metadata": 1897, "_autocast_to_full_precis": 1897, "_autocast_to_reduced_precis": 1897, "_batch_norm_impl_index": 1897, "_cdist_forward": 1897, "_cholesky_solve_help": 1897, "_choose_qparams_per_tensor": 1897, "_chunk_grad_outputs_efficient_attent": 1897, "_coalesc": 1897, "_compute_linear_combin": 1897, "_conj_copi": 1897, "_conj_phys": 1897, "_conv_depthwise2d": 1897, "_convert_indices_from_coo_to_csr": 1897, "_convert_indices_from_csr_to_coo": 1897, "_copy_from": 1897, "_copy_from_and_res": 1897, "_ctc_loss": 1897, "_cudnn_ctc_loss": 1897, "_cudnn_init_dropout_st": 1897, "_cudnn_rnn": 1897, "_cudnn_rnn_flatten_weight": 1897, "_cufft_clear_plan_cach": 1897, "_cufft_get_plan_cache_max_s": 1897, "_cufft_get_plan_cache_s": 1897, "_cufft_set_plan_cache_max_s": 1897, "_cummax_help": 1897, "_cummin_help": 1897, "_debug_has_internal_overlap": 1897, "_dimi": 1897, "_dimv": 1897, "_dirichlet_grad": 1897, "_efficient_attention_forward": 1897, "_efficientzerotensor": 1897, "_embedding_bag": 1897, "_embedding_bag_forward_onli": 1897, "_empty_affine_quant": 1897, "_empty_per_channel_affine_quant": 1897, "_euclidean_dist": 1897, "_fake_quantize_learnable_per_channel_affin": 1897, "_fake_quantize_learnable_per_tensor_affin": 1897, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1897, "_fft_c2c": 1897, "_fft_c2r": 1897, "_fft_r2c": 1897, "_flash_attention_forward": 1897, "_foreach_ab": 1897, "_foreach_aco": 1897, "_foreach_add": 1897, "_foreach_addcdiv": 1897, "_foreach_addcmul": 1897, "_foreach_asin": 1897, "_foreach_atan": 1897, "_foreach_ceil": 1897, "_foreach_clamp_max": 1897, "_foreach_clamp_min": 1897, "_foreach_co": 1897, "_foreach_cosh": 1897, "_foreach_div": 1897, "_foreach_erf": 1897, "_foreach_erfc": 1897, "_foreach_exp": 1897, "_foreach_expm1": 1897, "_foreach_floor": 1897, "_foreach_frac": 1897, "_foreach_lerp": 1897, "_foreach_lgamma": 1897, "_foreach_log": 1897, "_foreach_log10": 1897, "_foreach_log1p": 1897, "_foreach_log2": 1897, "_foreach_maximum": 1897, "_foreach_minimum": 1897, "_foreach_mul": 1897, "_foreach_neg": 1897, "_foreach_norm": 1897, "_foreach_pow": 1897, "_foreach_reciproc": 1897, "_foreach_round": 1897, "_foreach_sigmoid": 1897, "_foreach_sin": 1897, "_foreach_sinh": 1897, "_foreach_sqrt": 1897, "_foreach_sub": 1897, "_foreach_tan": 1897, "_foreach_tanh": 1897, "_foreach_trunc": 1897, "_foreach_zero": 1897, "_fused_adam": 1897, "_fused_adamw": 1897, "_fused_dropout": 1897, "_fused_moving_avg_obs_fq_help": 1897, "_fused_moving_avg_obs_fq_helper_funct": 1897, "_fused_sdp_choic": 1897, "_fw_primal": 1897, "_fw_primal_copi": 1897, "_get_cpu_cap": 1897, "_get_tracing_st": 1897, "_grad_sum_to_s": 1897, "_has_compatible_shallow_copy_typ": 1897, "_has_same_storage_numel": 1897, "_histogramdd_bin_edg": 1897, "_histogramdd_from_bin_ct": 1897, "_histogramdd_from_bin_tensor": 1897, "_index_put_impl": 1897, "_indices_copi": 1897, "_infer_s": 1897, "_int_mm": 1897, "_is_all_tru": 1897, "_is_any_tru": 1897, "_is_zerotensor": 1897, "_linalg_check_error": 1897, "_linalg_det": 1897, "_linalg_eigh": 1897, "_linalg_slogdet": 1897, "_linalg_solve_ex": 1897, "_linalg_svd": 1897, "_list_to_tensor": 1897, "_local_scalar_dens": 1897, "_logcumsumexp": 1897, "_lstm_mp": 1897, "_make_du": 1897, "_make_dual_copi": 1897, "_make_per_channel_quantized_tensor": 1897, "_make_per_tensor_quantized_tensor": 1897, "_masked_scal": 1897, "_masked_softmax": 1897, "_mkldnn_reshap": 1897, "_mkldnn_transpos": 1897, "_mps_convolut": 1897, "_mps_convolution_transpos": 1897, "_native_batch_norm_legit_funct": 1897, "_native_batch_norm_legit_no_train": 1897, "_native_multi_head_attent": 1897, "_ncf_unsqueez": 1897, "_ncf_view": 1897, "_neg_view": 1897, "_neg_view_copi": 1897, "_nested_from_pad": 1897, "_nested_from_padded_and_nested_exampl": 1897, "_nested_tensor_from_mask": 1897, "_nested_tensor_from_mask_left_align": 1897, "_nested_tensor_from_tensor_list": 1897, "_nested_tensor_s": 1897, "_nested_tensor_softmax_with_shap": 1897, "_nested_tensor_storage_offset": 1897, "_nested_tensor_strid": 1897, "_nested_view_from_buff": 1897, "_nested_view_from_buffer_copi": 1897, "_new_zeros_with_same_feature_meta": 1897, "_nnpack_avail": 1897, "_nnpack_spatial_convolut": 1897, "_no_grad_embedding_renorm": 1897, "_no_grad_fil": 1897, "_no_grad_norm": 1897, "_no_grad_uniform": 1897, "_no_grad_zero": 1897, "_pack_sequ": 1897, "_pad_circular": 1897, "_pad_enum": 1897, "_pdist_forward": 1897, "_pin_memori": 1897, "_prelu_kernel": 1897, "_propagate_xla_data": 1897, "_remove_batch_dim": 1897, "_reshape_alia": 1897, "_reshape_alias_copi": 1897, "_reshape_copi": 1897, "_resize_output": 1897, "_rowwise_prun": 1897, "_saturate_weight_to_fp16": 1897, "_scaled_dot_product_attent": 1897, "_scaled_dot_product_attention_math": 1897, "_scaled_dot_product_efficient_attent": 1897, "_scaled_dot_product_flash_attent": 1897, "_size_if_not_equ": 1897, "_slow_conv2d_forward": 1897, "_sobol_engine_draw": 1897, "_sobol_engine_ff": 1897, "_sobol_engine_initialize_st": 1897, "_sobol_engine_scrambl": 1897, "_sparse_addmm": 1897, "_sparse_broadcast_to": 1897, "_sparse_broadcast_to_copi": 1897, "_sparse_bsc_tensor_unsaf": 1897, "_sparse_bsr_tensor_unsaf": 1897, "_sparse_compressed_tensor_unsaf": 1897, "_sparse_coo_tensor_unsaf": 1897, "_sparse_coo_tensor_with_dim": 1897, "_sparse_coo_tensor_with_dims_and_tensor": 1897, "_sparse_csc_tensor_unsaf": 1897, "_sparse_csr_prod": 1897, "_sparse_csr_sum": 1897, "_sparse_csr_tensor_unsaf": 1897, "_sparse_log_softmax": 1897, "_sparse_mm": 1897, "_sparse_mm_reduce_impl": 1897, "_sparse_softmax": 1897, "_sparse_sparse_matmul": 1897, "_sparse_sum": 1897, "_spdiag": 1897, "_standard_gamma_grad": 1897, "_structured_sparse_linear": 1897, "_tensor_to_list": 1897, "_test_ambiguous_default": 1897, "_test_autograd_multiple_dispatch": 1897, "_test_autograd_multiple_dispatch_view": 1897, "_test_autograd_multiple_dispatch_view_copi": 1897, "_test_check_tensor": 1897, "_test_functorch_fallback": 1897, "_test_optional_filled_intlist": 1897, "_test_optional_floatlist": 1897, "_test_optional_intlist": 1897, "_test_serialization_subcmul": 1897, "_test_string_default": 1897, "_test_warn_in_autograd": 1897, "_thnn_fused_gru_cel": 1897, "_thnn_fused_lstm_cel": 1897, "_to_cpu": 1897, "_to_dens": 1897, "_transform_bias_rescale_qkv": 1897, "_transformer_encoder_layer_fwd": 1897, "_trilinear": 1897, "_triton_multi_head_attent": 1897, "_triton_scaled_dot_attent": 1897, "_unpack_du": 1897, "_unsafe_index": 1897, "_unsafe_view": 1897, "_unwrap_opt": 1897, "_upsample_bicubic2d_aa": 1897, "_upsample_bilinear2d_aa": 1897, "_upsample_nearest_exact1d": 1897, "_upsample_nearest_exact2d": 1897, "_upsample_nearest_exact3d": 1897, "_use_cudnn_ctc_loss": 1897, "_use_cudnn_rnn_flatten_weight": 1897, "_validate_compressed_sparse_indic": 1897, "_validate_sparse_bsc_tensor_arg": 1897, "_validate_sparse_bsr_tensor_arg": 1897, "_validate_sparse_compressed_tensor_arg": 1897, "_validate_sparse_coo_tensor_arg": 1897, "_validate_sparse_csc_tensor_arg": 1897, "_validate_sparse_csr_tensor_arg": 1897, "_values_copi": 1897, "_weight_norm_interfac": 1897, "capit": 1897, "confirmed_by_own": [1897, 1907], "convolution_overrid": 1897, "copy_sparse_to_spars": 1897, "endswith": 1897, "expandtab": 1897, "fake_quantize_per_channel_affine_cachemask": 1897, "fake_quantize_per_tensor_affine_cachemask": 1897, "fill_diagon": 1897, "glu_jvp": 1897, "has_torch_funct": [1897, 1922], "is_non_overlapping_and_dens": 1897, "is_own": 1897, "is_strides_like_format": 1897, "isalnum": 1897, "isalpha": 1897, "isdecim": 1897, "isdigit": 1897, "isidentifi": 1897, "islow": 1897, "isnumer": 1897, "isprint": 1897, "isspac": 1897, "istitl": 1897, "isupp": 1897, "lift_fresh": 1897, "lift_fresh_copi": 1897, "ljust": 1897, "local_valu": [1897, 1900], "log_sigmoid_forward": 1897, "lstrip": 1897, "matrix_h": 1897, "nll_loss2d_forward": 1897, "nll_loss_forward": 1897, "normal_funct": 1897, "owner_nam": 1897, "percentformat": 1897, "quantized_gru": 1897, "quantized_lstm": 1897, "resize_as_spars": 1897, "rfind": 1897, "rindex": 1897, "rjust": 1897, "rpartit": 1897, "rsplit": 1897, "rstrip": 1897, "set_data": 1897, "slow_conv3d_forward": 1897, "sparse_res": 1897, "sparse_resize_and_clear": 1897, "splitlin": 1897, "startswith": 1897, "swapcas": 1897, "sym_numel": 1897, "sym_siz": 1897, "sym_storage_offset": 1897, "sym_strid": 1897, "unique_dim_consecut": 1897, "zfill": 1897, "_allgather_bas": 1897, "_reduce_scatter_bas": 1897, "allgath": 1897, "allgather_coalesc": 1897, "allgather_into_tensor_coalesc": 1897, "allreduce_coalesc": 1897, "alltoal": 1897, "alltoall_bas": 1897, "recv_any_sourc": 1897, "debugprim": 1897, "load_tensor": 1897, "_mkl_linear": 1897, "_mkl_reorder_linear_weight": 1897, "_convolution_pointwis": 1897, "_convolution_transpose_pointwis": 1897, "_is_mkldnn_bf16_support": 1897, "_linear_pointwis": 1897, "_reorder_convolution_transpose_weight": 1897, "_reorder_linear_weight": 1897, "mkldnn_prepack": 1897, "conv2d_run": 1897, "nvprim": 1897, "conv2d_clamp_prepack": 1897, "conv2d_clamp_run": 1897, "conv2d_transpose_clamp_prepack": 1897, "conv2d_transpose_clamp_run": 1897, "linear_clamp_prepack": 1897, "linear_clamp_run": 1897, "unpack_prepacked_sizes_conv2d": 1897, "unpack_prepacked_sizes_linear": 1897, "addstatvalu": 1897, "autogradadd": 1897, "autogradallnonzero": 1897, "autogradallzero": 1897, "autogradanynonzero": 1897, "autogradzero": 1897, "bailout": 1897, "bailouttempl": 1897, "broadcastmkldnntensor": 1897, "broadcasts": 1897, "chunksiz": 1897, "constantmkldnntensor": 1897, "differentiablegraph": 1897, "enumnam": 1897, "enumvalu": 1897, "fallbackgraph": 1897, "fusedconcat": 1897, "fusiongroup": 1897, "ifthenels": 1897, "ignoredpythonop": 1897, "mkldnnclamp": 1897, "mkldnnhardsigmoid": 1897, "mkldnnhardswish": 1897, "mkldnnhardtanh": 1897, "mkldnnlayernorm": 1897, "mkldnnscalarmul": 1897, "mmbatchsid": 1897, "mmtreereduc": 1897, "modulecontainerindex": 1897, "numtotensor": 1897, "raiseexcept": 1897, "reductions": 1897, "requiresgradcheck": 1897, "staticruntimecopyout": 1897, "staticsubgraph": 1897, "stringindex": 1897, "tensorexprdynamicgroup": 1897, "tensorexprdynamicguard": 1897, "tensorexprgroup": 1897, "timepoint": 1897, "tupleindex": 1897, "tupleunpack": 1897, "varconcat": 1897, "varstack": 1897, "awaitable_nowait": 1897, "awaitable_wait": 1897, "is_cpu": 1897, "is_ipu": 1897, "is_mkldnn": 1897, "is_mp": 1897, "is_nest": 1897, "is_ort": 1897, "is_quant": 1897, "is_vulkan": 1897, "is_xpu": 1897, "onednnfusiongroup": 1897, "onednnfusionguard": 1897, "profile_ivalu": 1897, "rangelist": 1897, "rpc_remot": 1897, "unchecked_unwrap_opt": 1897, "_call_end_callbacks_on_jit_fut": 1897, "_record_function_ent": 1897, "_record_function_enter_new": 1897, "_record_function_exit": 1897, "_bfloat16quantizedtofloat": 1897, "_floattobfloat16quant": 1897, "add_out": 1897, "add_relu_out": 1897, "add_scalar_out": 1897, "add_scalar_relu": 1897, "add_scalar_relu_out": 1897, "batch_norm1d": 1897, "batch_norm1d_relu": 1897, "batch_norm2d": 1897, "batch_norm2d_relu": 1897, "batch_norm3d": 1897, "batch_norm3d_relu": 1897, "batch_norm_relu": 1897, "cat_out": 1897, "cat_relu": 1897, "cat_relu_out": 1897, "conv1d_dynam": 1897, "conv1d_prepack": 1897, "conv1d_unpack": 1897, "conv2d_add": 1897, "conv2d_add_relu": 1897, "conv2d_dil": 1897, "conv2d_dynam": 1897, "conv2d_group": 1897, "conv2d_output_pad": 1897, "conv2d_pad": 1897, "conv2d_strid": 1897, "conv2d_transpos": 1897, "conv2d_unpack": 1897, "conv2d_unpack_s": 1897, "conv3d_dil": 1897, "conv3d_dynam": 1897, "conv3d_group": 1897, "conv3d_output_pad": 1897, "conv3d_pad": 1897, "conv3d_strid": 1897, "conv3d_transpos": 1897, "conv3d_unpack": 1897, "conv_prepack": 1897, "conv_transpose1d_dynam": 1897, "conv_transpose1d_unpack": 1897, "conv_transpose2d_dil": 1897, "conv_transpose2d_dynam": 1897, "conv_transpose2d_group": 1897, "conv_transpose2d_output_pad": 1897, "conv_transpose2d_pad": 1897, "conv_transpose2d_strid": 1897, "conv_transpose2d_transpos": 1897, "conv_transpose2d_unpack": 1897, "conv_transpose3d_dil": 1897, "conv_transpose3d_dynam": 1897, "conv_transpose3d_group": 1897, "conv_transpose3d_output_pad": 1897, "conv_transpose3d_pad": 1897, "conv_transpose3d_strid": 1897, "conv_transpose3d_transpos": 1897, "conv_transpose3d_unpack": 1897, "conv_unpack": 1897, "embedding_4bit": 1897, "embedding_bag_2bit_prepack": 1897, "embedding_bag_2bit_rowwise_offset": 1897, "embedding_bag_2bit_unpack": 1897, "embedding_bag_4bit": 1897, "embedding_bag_4bit_prepack": 1897, "embedding_bag_4bit_rowwise_offset": 1897, "embedding_bag_4bit_unpack": 1897, "embedding_bag_byt": 1897, "embedding_bag_byte_prepack": 1897, "embedding_bag_byte_rowwise_offset": 1897, "embedding_bag_byte_unpack": 1897, "embedding_bag_prepack": 1897, "embedding_bag_unpack": 1897, "embedding_byt": 1897, "linear_dynamic_fp16": 1897, "linear_leaky_relu": 1897, "linear_relu": [1897, 1904], "linear_relu_dynam": 1897, "linear_relu_dynamic_fp16": 1897, "linear_tanh": 1897, "linear_unpack": 1897, "linear_unpack_fp16": 1897, "linear_with_input_q_dq_qweight_dq_output_fp32": 1897, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1897, "make_quantized_cell_param": 1897, "make_quantized_cell_params_dynam": 1897, "make_quantized_cell_params_fp16": 1897, "mul_out": 1897, "mul_relu": 1897, "mul_relu_out": 1897, "mul_scalar_out": 1897, "mul_scalar_relu": 1897, "mul_scalar_relu_out": 1897, "quantized_gru_cell_dynam": 1897, "quantized_lstm_cell_dynam": 1897, "quantized_rnn_relu_cell_dynam": 1897, "quantized_rnn_tanh_cell_dynam": 1897, "rngprim": 1897, "philox_rand": 1897, "qlinear": 1897, "qlinear_dynam": 1897, "qlinear_prepack": 1897, "qlinear_relu": 1897, "qlinear_relu_dynam": 1897, "qlinear_unpack": 1897, "static_runtim": 1897, "vartupleunpack": 1897, "clamp_nan_to_num": 1897, "create_owned_ref": 1897, "dequantize_copi": 1897, "dict_unpack": 1897, "expand_dims_copi": 1897, "flatten_copi": 1897, "fused_equally_split": 1897, "reshape_copi": 1897, "select_tensor": 1897, "signed_log1p": 1897, "to_copi": 1897, "to_maybe_copy_out": 1897, "var1": 1898, "var2": 1898, "lbfg": 1898, "adadelta": 1898, "adamax": 1898, "asgd": 1898, "nadam": 1898, "radam": 1898, "rmsprop": 1898, "rprop": 1898, "reducelronplateau": 1898, "multisteplr": 1898, "upgrad": [1898, 1918], "swa_util": 1898, "averagedmodel": 1898, "swalr": 1898, "update_bn": 1898, "optima": 1898, "polyak": 1898, "averaged_model": 1898, "multi_avg_fn": 1898, "get_ema_multi_avg_fn": 1898, "textrm": 1898, "update_paramet": 1898, "avg_fn": 1898, "_foreach": 1898, "ema_model": 1898, "ema_avg": 1898, "averaged_model_paramet": 1898, "model_paramet": 1898, "num_averag": 1898, "swa_schedul": 1898, "anneal_epoch": 1898, "swa_lr": 1898, "swa_model": 1898, "cosineannealinglr": 1898, "swa_start": 1898, "test_input": 1898, "secur": 1899, "unpackag": 1899, "exercis": 1899, "unzip": 1899, "my_packag": 1899, "freeli": 1899, "94304870911616": 1899, "94304900784016": 1899, "extern_modul": 1899, "model_1": 1899, "pkl": 1899, "myzip": 1899, "file_byt": 1899, "writestr": 1899, "new_file_byt": 1899, "vim": 1899, "vimrc": 1899, "bufreadcmd": 1899, "brows": 1899, "amatch": 1899, "vi": 1899, "packageimport": 1899, "queryabl": 1899, "glob": 1899, "packageexport": 1899, "pe": 1899, "save_pickl": 1899, "has_fil": 1899, "importer_file_structur": 1899, "package_a": 1899, "get_rdep": 1899, "all_path": 1899, "dependency_graph_str": 1899, "save_text": 1899, "save_binari": 1899, "my_resourc": 1899, "config_stuff": 1899, "raw_data": 1899, "my_byt": 1899, "complementari": [1899, 1912], "load_pickl": 1899, "load_text": 1899, "load_binari": 1899, "my_tensor": 1899, "__reduce_package__": 1899, "my_str": 1899, "time_import": 1899, "time_export": 1899, "pickler": 1899, "persistent_id": 1899, "persistent_load": 1899, "generated_module_nam": 1899, "get_unique_id": 1899, "clock_gettim": 1899, "unpackage_foo": 1899, "depickl": 1899, "foo_1": 1899, "foo_2": 1899, "foo_packag": 1899, "foo_collect": 1899, "foo1": 1899, "foo2": 1899, "imported_foo": 1899, "9857706": 1899, "650140837": 1899, "652698385": 1899, "__torch_package__": 1899, "is_in_packag": 1899, "userexcept": 1899, "unpackageableexcept": 1899, "loaded_modul": 1899, "import_modul": 1899, "save_source_str": 1899, "save_modul": 1899, "textwrap": 1899, "dedent": 1899, "my_funct": 1899, "is_packag": 1899, "importlib": 1899, "my_pickl": 1899, "get_my_resourc": 1899, "read_text": 1899, "torch_package_import": 1899, "get_my_pickl": 1899, "is_from_packag": 1899, "stdlib": 1899, "my_test": 1899, "f2": [1899, 1900], "sys_import": 1899, "script_model": 1899, "mixed_model": 1899, "python_model_with_scripted_submodul": 1899, "loaded_script": 1899, "loaded_mix": 1899, "convention": 1899, "94286146172688": 1899, "94286146172784": 1899, "consult": 1899, "essai": 1899, "another_packag": 1899, "pickletool": 1899, "ast": 1899, "deni": 1899, "my_export": 1899, "my_interned_modul": 1899, "package_export": 1899, "my_externed_modul": 1899, "my_mocked_modul": 1899, "unwant": [1899, 1916], "hodg": 1899, "podg": 1899, "bazel": 1899, "buck": 1899, "my_class_inst": 1899, "imported_myclass": 1899, "okai": 1899, "torch_package_0": 1899, "handle_me_this_wai": 1899, "inadvert": 1899, "pun": 1899, "packagingerror": 1899, "dependency_graph": 1899, "emptymatcherror": 1899, "allow_empti": 1899, "_sysimport": 1899, "hermet": 1899, "scan": 1899, "orderedimport": 1899, "add_depend": 1899, "graphviz": 1899, "lang": 1899, "denied_modul": 1899, "my_subpackag": 1899, "digraph": 1899, "externed_modul": 1899, "interned_modul": 1899, "mocked_modul": 1899, "register_extern_hook": 1899, "register_intern_hook": 1899, "register_mock_hook": 1899, "myobject": 1899, "save_source_fil": 1899, "file_or_directori": 1899, "my_subsubpackag": 1899, "file_or_buff": 1899, "module_allow": 1899, "pytorchfileread": 1899, "python_vers": 1899, "is_dir": 1899, "gpipe": 1900, "suffer": 1900, "microbatch": 1900, "bubbl": 1900, "except_last": 1900, "deferred_batch_norm": 1900, "torchgpip": 1900, "withdevic": 1900, "micro": 1900, "fc": [1900, 1902], "init_rpc": [1900, 1907, 1908], "output_rref": 1900, "fairli": 1900, "fed": [1900, 1916], "nochunk": 1900, "resnext": 1900, "till": 1900, "skippabl": 1900, "perfectli": 1900, "1to3": 1900, "layer1": 1900, "f1": 1900, "layer2": 1900, "layer3": 1900, "skip_1to3": 1900, "f3": 1900, "alic": 1900, "bob": 1900, "carol": 1900, "stashstashpop": 1900, "f_alic": 1900, "f_bob": 1900, "verify_skipp": 1900, "unmatch": [1900, 1921], "fairscal": 1900, "_kinetoprofil": 1901, "profileract": 1901, "add_metadata": 1901, "add_metadata_json": 1901, "unaggreg": 1901, "export_chrome_trac": 1901, "export_memory_timelin": 1901, "gzip": 1901, "export_stack": 1901, "self_cuda_time_tot": 1901, "flamegraph": 1901, "brendangregg": 1901, "pl": 1901, "countnam": 1901, "perf_viz": 1901, "svg": 1901, "on_trace_readi": 1901, "record_and_sav": 1901, "tensorboard_trace_handl": 1901, "dir_nam": 1901, "logdir": [1901, 1916], "code_to_profil": 1901, "row_limit": 1901, "trace_handl": 1901, "test_trace_": 1901, "step_num": 1901, "code_iteration_to_profil": 1901, "mtia": 1901, "skip_first": 1901, "worker_nam": [1901, 1907], "use_gzip": 1901, "range_push": 1901, "range_pop": 1901, "4x": 1902, "broadli": 1902, "domin": 1902, "previous_layer_fp32": 1902, "linear_fp32": 1902, "activation_fp32": 1902, "next_layer_fp32": 1902, "linear_weight_fp32": 1902, "linear_int8_w_fp32_inp": 1902, "linear_weight_int8": 1902, "ptdq": 1902, "model_fp32": 1902, "model_int8": 1902, "quantize_dynam": 1902, "input_fp32": 1902, "previous_layer_int8": 1902, "linear_with_activation_int8": 1902, "next_layer_int8": 1902, "ptsq": 1902, "minmax": 1902, "l2norm": 1902, "model_fp32_fus": 1902, "fuse_modul": [1902, 1903], "model_fp32_prepar": 1902, "fq": 1902, "prepare_qat": 1902, "training_loop": 1902, "requant": 1902, "linear1": 1902, "custom_qconfig": 1902, "fxptq": 1902, "model_fp": 1902, "usermodel": 1902, "model_to_quant": 1902, "default_dynamic_qconfig": 1902, "model_prepar": 1902, "model_quant": 1902, "model_fus": 1902, "per_tensor_symmetr": [1902, 1905], "per_channel_symmetr": [1902, 1905], "per_channel_scal": 1902, "per_channel_zero_point": 1902, "quantized_tensor": 1902, "qengin": 1902, "in4": 1902, "fx2trt": 1902, "float_modul": [1902, 1920], "staticquantcustommodul": 1902, "observed_modul": 1902, "default_qconfig": [1902, 1921], "test_quantized_op": 1902, "testquantizedop": 1902, "test_custom_module_lstm": 1902, "test_quantize_fx": 1902, "testquantizefx": 1902, "test_static_lstm": 1902, "some_oper": 1902, "e2": 1902, "thnn_conv2d_forward": 1902, "quantizedcpu": 1902, "some_qconfig": 1902, "linearpackedparam": 1902, "_modul": 1902, "prepare_orig": 1902, "quantized_orig": 1902, "scripted_quant": 1902, "fp32_op": 1903, "int8_op": 1903, "cooperlak": 1903, "audit": 1903, "op_fp32": 1903, "op_int8": 1903, "_numeric_suit": 1903, "_numeric_suite_fx": 1903, "0x7fbceb1fd720": 1904, "0x7fbcd707a670": 1904, "0x7fbcd707a700": 1904, "num_tensor_args_to_observation_typ": 1904, "convbn1d": 1904, "0x7fbcd6482b80": 1904, "reference_quantized_module_for_root": 1904, "fuse_convtranspose_bn": 1904, "0x7fbcd6482d30": 1904, "linearbn1d": 1904, "fuse_linear_bn": 1904, "0x7fbcd6482ca0": 1904, "convbn2d": 1904, "convbn3d": 1904, "bnrelu2d": 1904, "bnrelu3d": 1904, "input_type_to_index": 1904, "conv_fus": 1904, "convbnrelu1d": 1904, "convbnrelu2d": 1904, "convbnrelu3d": 1904, "convrelu1d": 1904, "convrelu3d": 1904, "0x7fbcd707a790": 1904, "0x7fbcd707adc0": 1904, "quint4x2": [1904, 1913, 1917, 1918], "embedding_op": 1904, "0x7fbcd707cca0": 1904, "00390625": 1904, "0x7fbcd707c5e0": 1904, "0x7fbcd707c790": 1904, "0x7fbcd707aca0": 1904, "0x7fbcd707cb80": 1904, "0x7fbcd6f961f0": 1904, "0x7fbcd707cc10": 1904, "0x7fbcd707af70": 1904, "linear_fus": 1904, "_sequential_wrapper2": 1904, "0x7fbcf234a430": 1904, "0x7fbcd707ab80": 1904, "0x7fbcd4398430": 1904, "fuse_conv_bn_relu": 1904, "0x7fbcd6482c10": 1904, "0x7fbcd43984c0": 1904, "0x7fbcd4398550": 1904, "0x7fbcd43985e0": 1904, "0x7fbcd4398670": 1904, "0x7fbcd4398700": 1904, "0x7fbcd4398790": 1904, "0x7fbcd4398820": 1904, "0x7fbcd43988b0": 1904, "0x7fbcd4398940": 1904, "0x7fbcd43989d0": 1904, "0x7fbcd707ad30": 1904, "0078125": 1904, "customconfig": 1905, "custom_module_config": 1905, "_caller": 1906, "_devices_kw": 1906, "slowli": 1906, "unind": 1906, "deivc": 1906, "privateuse1": 1906, "shortcom": 1907, "stitch": 1907, "rpc_backend_opt": 1907, "trainer3": 1907, "parameterserver2": 1907, "dash": [1907, 1909], "backendtyp": 1907, "rpcbackendopt": 1907, "rpcagent": 1907, "transmit": 1907, "calle": [1907, 1909], "_set_rpc_timeout": 1907, "5678": 1907, "worker0": 1907, "my_script_add": 1907, "wire": 1907, "fut2": 1907, "meth": 1907, "grace": 1907, "pend": [1907, 1916], "userrref": [1907, 1909], "async_execut": 1907, "paus": 1907, "outmost": 1907, "async_add_chain": 1907, "worker2": 1907, "script_add": 1907, "async_add": 1907, "asyncexecutionclass": 1907, "static_async_add": 1907, "class_async_add": 1907, "ret_fut": 1907, "bound_async_add": 1907, "rpc_timeout": 1907, "incid": [1907, 1909], "nvlink": 1907, "multiplex": 1907, "tensorpiperpcbackendopt": 1907, "num_worker_thread": 1907, "device_map": 1907, "_transport": 1907, "tensorpipeag": 1907, "set_device_map": 1907, "intermitt": 1907, "remote_modul": 1907, "forward_async": 1907, "remote_devic": 1907, "workernam": 1907, "trainer0": 1907, "ps0": 1907, "remote_linear_modul": 1907, "get_module_rref": 1907, "remote_paramet": 1907, "my_add": [1908, 1922], "t4": 1908, "t5": 1908, "autograd_message_id": 1908, "autograd_context_id": 1908, "send1": 1908, "kickoff": 1908, "recv2": 1908, "heard": 1908, "send2": 1908, "recv1": 1908, "dist_autograd_simpl": 1908, "random_tensor": 1908, "_run_process": 1908, "dst_rank": 1908, "dst_name": 1908, "run_process": 1908, "rrefid": 1909, "ownerrref": 1909, "transient": 1909, "udf": 1909, "deliveri": 1909, "knowledg": 1909, "danger": 1909, "ancestor": 1909, "trickier": 1909, "wouldn": 1909, "forkid": 1909, "ack": 1909, "solid": 1909, "gc": 1909, "followup": 1909, "lil": 1911, "stark": 1911, "9093": 1911, "1411": 1911, "7568": 1911, "9589": 1911, "2794": 1911, "catastroph": 1911, "9900": 1911, "000": 1911, "400": 1911, "s2": 1911, "plain_dim_s": 1911, "lp64": 1911, "280": 1911, "310": 1911, "sp": 1911, "9078": 1911, "conception": 1911, "lobpcg": 1911, "geneig": 1911, "pca_lowrank": 1911, "kindli": 1911, "airy_ai": 1912, "airi": 1912, "onward": 1912, "9635": 1912, "entr": 1912, "3466": 1912, "int_": 1912, "8427": 1912, "0561": 1912, "4769": 1912, "9213": 1912, "8858": 1912, "7683": 1912, "7481": 1912, "2920": 1912, "int_0": 1912, "gammaln": 1912, "a1": 1912, "a2": 1912, "3528": 1912, "5665": 1912, "6472": 1912, "4335": 1912, "2650": 1912, "2661": 1912, "2796": 1912, "8808": 1912, "3019": 1912, "4658": 1912, "3085": 1912, "2430": 1912, "2070": 1912, "i1": 1912, "5652": 1912, "9534": 1912, "7595": 1912, "2153": 1912, "log_ndtr": 1912, "_ndtr": 1912, "6077": 1912, "7832": 1912, "841": 1912, "6931": 1912, "1728": 1912, "023": 1912, "9331": 1912, "6486": 1912, "1523": 1912, "6516": 1912, "6352": 1912, "6131": 1912, "7169": 1912, "6261": 1912, "displaystyl": 1912, "undefiend": 1912, "6835": 1912, "8474": 1912, "1929": 1912, "7162": 1912, "4180": 1912, "3928": 1912, "4007": 1912, "7586": 1912, "3901": 1912, "5049": 1912, "ndtr": 1912, "0228": 1912, "1587": 1912, "9772": 1912, "9987": 1912, "2p": 1912, "64493": 1912, "4041": 1912, "8288": 1912, "4939": 1912, "97": 1912, "4091": 1912, "8863": 1912, "771": 1912, "scaled_modified_bessel_k0": 1912, "scaled_modified_bessel_k1": 1912, "2948": 1912, "0267": 1912, "1566": 1912, "9186": 1912, "8631": 1912, "0259": 1912, "1300": 1912, "spheric": 1912, "xlog1pi": 1912, "3863": 1912, "1972": 1912, "6094": 1912, "2189": 1912, "8283": 1912, "7726": 1912, "0986": 1912, "1589": 1912, "hurwitz": 1912, "6449": 1912, "0823": 1912, "untyp": 1913, "wrap_storag": 1913, "complex_doubl": 1913, "from_buff": 1913, "pickle_storage_typ": 1913, "byteswap": 1913, "quint2x4": [1913, 1918], "twelv": 1914, "halftensor": [1914, 1917], "bfloat16tensor": [1914, 1917], "chartensor": [1914, 1917], "shorttensor": [1914, 1917], "binary16": [1914, 1917], "significand": [1914, 1917], "float_tensor": 1914, "double_tensor": 1914, "complex_float_tensor": 1914, "complex_double_tensor": 1914, "int_tensor": 1914, "long_tensor": 1914, "uint_tensor": 1914, "bool_tensor": 1914, "long_zerodim": 1914, "int_zerodim": 1914, "set_default_devic": 1914, "cuda1": 1914, "nhwc": [1914, 1916], "channels_last_3d": 1914, "ndhwc": 1914, "blogpost": 1915, "totensor": 1916, "trainset": 1916, "mnist": 1916, "mnist_train": 1916, "trainload": 1916, "grayscal": 1916, "make_grid": 1916, "add_imag": 1916, "add_graph": 1916, "clutter": 1916, "n_iter": 1916, "purge_step": 1916, "max_queu": 1916, "flush_sec": 1916, "filename_suffix": 1916, "current_datetime_hostnam": 1916, "exp1": 1916, "suffix": [1916, 1917], "global_step": 1916, "purg": 1916, "event_file_writ": 1916, "eventfilewrit": 1916, "may04_22": 1916, "54_": 1916, "macbook": 1916, "my_experi": 1916, "lr_0": 1916, "1_batch_16": 1916, "locallr_0": 1916, "scalar_valu": 1916, "walltim": 1916, "new_styl": 1916, "double_precis": 1916, "blobnam": 1916, "simple_valu": 1916, "main_tag": 1916, "tag_scalar_dict": 1916, "run_14h": 1916, "xsinx": 1916, "xcosx": 1916, "tanx": 1916, "add_histogram": 1916, "max_bin": 1916, "fd": 1916, "img_tensor": 1916, "dataformat": 1916, "chw": 1916, "hwc": 1916, "hw": 1916, "wh": 1916, "3xhxw": 1916, "img_hwc": 1916, "my_imag": 1916, "my_image_hwc": 1916, "img_batch": 1916, "my_image_batch": 1916, "add_figur": 1916, "add_video": 1916, "vid_tensor": 1916, "fp": 1916, "moviepi": 1916, "add_audio": 1916, "snd_tensor": 1916, "sample_r": 1916, "44100": 1916, "add_text": 1916, "text_str": 1916, "input_to_model": 1916, "use_strict_trac": 1916, "add_embed": 1916, "label_img": 1916, "metadata_head": 1916, "projector": 1916, "kwlist": 1916, "add_pr_curv": 1916, "num_threshold": 1916, "pr_curv": 1916, "add_custom_scalar": 1916, "chart": 1916, "categorynam": 1916, "chartnam": 1916, "listofproperti": 1916, "multilin": 1916, "taiwan": 1916, "twse": 1916, "0050": 1916, "2330": 1916, "dow": 1916, "aaa": 1916, "bbb": 1916, "ccc": 1916, "nasdaq": 1916, "add_mesh": 1916, "config_dict": 1916, "threej": 1916, "vertex": 1916, "number_of_vertic": 1916, "vertices_tensor": 1916, "colors_tensor": 1916, "faces_tensor": 1916, "my_mesh": 1916, "add_hparam": 1916, "hparam_dict": 1916, "metric_dict": 1916, "hparam_domain_discret": 1916, "run_nam": 1916, "hparam": 1916, "bsize": 1916, "_like": 1917, "allow_subclass": 1918, "check_devic": 1918, "check_layout": 1918, "6e": 1918, "3e": 1918, "assert_equ": 1918, "000000000000001e": 1918, "1e0": 1918, "argh": 1918, "nfooter": 1918, "66": 1918, "footer": 1918, "exclude_zero": 1918, "1205": 1918, "2282": 1918, "6380": 1918, "default_gener": 1919, "data_dependent_output": 1919, "dynamic_output_shap": 1919, "inplace_view": 1919, "nondeterministic_bitwis": 1919, "nondeterministic_seed": 1919, "compare_weight": 1920, "float_dict": 1920, "quantized_dict": 1920, "wt_compare_dict": 1920, "qmodel": 1920, "compute_error": 1920, "weight_dict": 1920, "get_logger_dict": 1920, "shadowlogg": 1920, "outputlogg": [1920, 1921], "target_dict": 1920, "q_modul": 1920, "logger_cl": [1920, 1921], "prepare_model_with_stub": 1920, "module_swap_list": 1920, "q_model": 1920, "ob_dict": 1920, "compare_model_stub": 1920, "quantizablebasicblock": 1920, "get_matching_activ": 1920, "act_dict": 1920, "prepare_model_output": 1920, "compare_model_output": 1920, "act_compare_dict": 1920, "weight_comparison": 1921, "extract_weight": 1921, "sqnr": 1921, "extend_logger_results_with_comparison": 1921, "compute_sqnr": 1921, "mp_n": 1921, "mq_n": 1921, "add_logg": 1921, "act_comparison": 1921, "extract_logger_info": 1921, "mp_shadows_mq": 1921, "add_shadow_logg": 1921, "shadow_act_comparison": 1921, "extract_shadow_logger_info": 1921, "ref_node_nam": 1921, "prev_node_nam": 1921, "model_nam": 1921, "ref_nam": 1921, "prev_node_target_typ": 1921, "ref_node_target_typ": 1921, "results_typ": 1921, "index_within_arg": 1921, "index_of_arg": 1921, "qconfig_str": 1921, "outputcomparisonlogg": 1921, "x_ref": 1921, "nstracer": 1921, "skipped_module_nam": 1921, "skipped_module_class": 1921, "model_name_a": 1921, "model_a": 1921, "model_name_b": 1921, "model_b": 1921, "base_name_to_sets_of_related_op": 1921, "unmatchable_types_map": 1921, "op_to_type_to_weight_extraction_fn": 1921, "nsresultstyp": 1921, "name_a": 1921, "name_b": 1921, "should_log_input": 1921, "model_a_with_logg": 1921, "model_b_with_logg": 1921, "model_name_to_use_for_layer_nam": 1921, "node_type_to_io_type_map": 1921, "model_a_shadows_b": 1921, "model_name_1": 1921, "model_name_2": 1921, "comparison_fn": 1921, "comparison_nam": 1921, "prepare_n_shadows_model": 1921, "qconfig_multi_map": 1921, "custom_prepare_fn": 1921, "custom_prepare_kwarg": 1921, "custom_trac": 1921, "args_kwargs_m": 1921, "op_m": 1921, "output_m": 1921, "op_m_n": 1921, "log_m_n": 1921, "log_m_0": 1921, "qconfig_n": 1921, "args_m": 1921, "op_m_prepared_with_qconfig_n": 1921, "out_m_n": 1921, "kwargs_m": 1921, "docblock": 1921, "loggers_set_en": 1921, "loggers_set_save_activ": 1921, "save_activ": 1921, "convert_n_shadows_model": 1921, "custom_convert_fn": 1921, "custom_convert_kwarg": 1921, "extract_results_n_shadows_model": 1921, "print_comparisons_n_shadows_model": 1921, "compute_normalized_l2_error": 1921, "compute_cosine_similar": 1921, "as_subclass": 1922, "resolve_nam": 1922, "handle_torch_funct": 1922, "public_api": 1922, "relevant_arg": 1922, "has_torch_function_unari": 1922, "is_tensor_lik": 1922, "notatensor": 1922, "tensorlik": 1922, "is_tensor_method_or_properti": 1922, "__get__": 1922, "__module__": 1922, "slot": 1922, "wrap_torch_funct": 1922, "smallest_norm": 1923, "subnorm": 1923, "denormal_numb": 1923}, "objects": {"": [[1919, 0, 0, "-", "torch"], [1854, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1913, 1, 1, "", "BFloat16Storage"], [1913, 1, 1, "", "BoolStorage"], [1913, 1, 1, "", "ByteStorage"], [1913, 1, 1, "", "CharStorage"], [1913, 1, 1, "", "ComplexDoubleStorage"], [1913, 1, 1, "", "ComplexFloatStorage"], [1913, 1, 1, "", "DoubleStorage"], [1913, 1, 1, "", "FloatStorage"], [83, 1, 1, "", "Generator"], [1913, 1, 1, "", "HalfStorage"], [1913, 1, 1, "", "IntStorage"], [1913, 1, 1, "", "LongStorage"], [1913, 1, 1, "", "QInt32Storage"], [1913, 1, 1, "", "QInt8Storage"], [1913, 1, 1, "", "QUInt2x4Storage"], [1913, 1, 1, "", "QUInt4x2Storage"], [1913, 1, 1, "", "QUInt8Storage"], [1913, 1, 1, "", "ShortStorage"], [1919, 1, 1, "", "SymBool"], [1919, 1, 1, "", "SymFloat"], [1919, 1, 1, "", "SymInt"], [1919, 1, 1, "", "Tag"], [1917, 1, 1, "", "Tensor"], [1913, 1, 1, "", "TypedStorage"], [1913, 1, 1, "", "UntypedStorage"], [25, 0, 0, "-", "__config__"], [615, 5, 1, "", "_assert"], [0, 0, 0, "-", "_dynamo"], [616, 5, 1, "", "_foreach_abs"], [617, 5, 1, "", "_foreach_abs_"], [618, 5, 1, "", "_foreach_acos"], [619, 5, 1, "", "_foreach_acos_"], [620, 5, 1, "", "_foreach_asin"], [621, 5, 1, "", "_foreach_asin_"], [622, 5, 1, "", "_foreach_atan"], [623, 5, 1, "", "_foreach_atan_"], [624, 5, 1, "", "_foreach_ceil"], [625, 5, 1, "", "_foreach_ceil_"], [626, 5, 1, "", "_foreach_cos"], [627, 5, 1, "", "_foreach_cos_"], [628, 5, 1, "", "_foreach_cosh"], [629, 5, 1, "", "_foreach_cosh_"], [630, 5, 1, "", "_foreach_erf"], [631, 5, 1, "", "_foreach_erf_"], [632, 5, 1, "", "_foreach_erfc"], [633, 5, 1, "", "_foreach_erfc_"], [634, 5, 1, "", "_foreach_exp"], [635, 5, 1, "", "_foreach_exp_"], [636, 5, 1, "", "_foreach_expm1"], [637, 5, 1, "", "_foreach_expm1_"], [638, 5, 1, "", "_foreach_floor"], [639, 5, 1, "", "_foreach_floor_"], [640, 5, 1, "", "_foreach_frac"], [641, 5, 1, "", "_foreach_frac_"], [642, 5, 1, "", "_foreach_lgamma"], [643, 5, 1, "", "_foreach_lgamma_"], [644, 5, 1, "", "_foreach_log"], [645, 5, 1, "", "_foreach_log10"], [646, 5, 1, "", "_foreach_log10_"], [647, 5, 1, "", "_foreach_log1p"], [648, 5, 1, "", "_foreach_log1p_"], [649, 5, 1, "", "_foreach_log2"], [650, 5, 1, "", "_foreach_log2_"], [651, 5, 1, "", "_foreach_log_"], [652, 5, 1, "", "_foreach_neg"], [653, 5, 1, "", "_foreach_neg_"], [654, 5, 1, "", "_foreach_reciprocal"], [655, 5, 1, "", "_foreach_reciprocal_"], [656, 5, 1, "", "_foreach_round"], [657, 5, 1, "", "_foreach_round_"], [658, 5, 1, "", "_foreach_sigmoid"], [659, 5, 1, "", "_foreach_sigmoid_"], [660, 5, 1, "", "_foreach_sin"], [661, 5, 1, "", "_foreach_sin_"], [662, 5, 1, "", "_foreach_sinh"], [663, 5, 1, "", "_foreach_sinh_"], [664, 5, 1, "", "_foreach_sqrt"], [665, 5, 1, "", "_foreach_sqrt_"], [666, 5, 1, "", "_foreach_tan"], [667, 5, 1, "", "_foreach_tan_"], [668, 5, 1, "", "_foreach_trunc"], [669, 5, 1, "", "_foreach_trunc_"], [670, 5, 1, "", "_foreach_zero_"], [1863, 0, 0, "-", "_logging"], [672, 5, 1, "", "abs"], [673, 5, 1, "", "absolute"], [674, 5, 1, "", "acos"], [675, 5, 1, "", "acosh"], [676, 5, 1, "", "add"], [677, 5, 1, "", "addbmm"], [678, 5, 1, "", "addcdiv"], [679, 5, 1, "", "addcmul"], [680, 5, 1, "", "addmm"], [681, 5, 1, "", "addmv"], [682, 5, 1, "", "addr"], [683, 5, 1, "", "adjoint"], [684, 5, 1, "", "all"], [685, 5, 1, "", "allclose"], [686, 5, 1, "", "amax"], [687, 5, 1, "", "amin"], [688, 5, 1, "", "aminmax"], [1, 0, 0, "-", "amp"], [689, 5, 1, "", "angle"], [690, 5, 1, "", "any"], [1902, 0, 0, "-", "ao"], [856, 5, 1, "", "arange"], [857, 5, 1, "", "arccos"], [858, 5, 1, "", "arccosh"], [859, 5, 1, "", "arcsin"], [860, 5, 1, "", "arcsinh"], [861, 5, 1, "", "arctan"], [862, 5, 1, "", "arctan2"], [863, 5, 1, "", "arctanh"], [864, 5, 1, "", "are_deterministic_algorithms_enabled"], [865, 5, 1, "", "argmax"], [866, 5, 1, "", "argmin"], [867, 5, 1, "", "argsort"], [868, 5, 1, "", "argwhere"], [869, 5, 1, "", "as_strided"], [870, 5, 1, "", "as_tensor"], [871, 5, 1, "", "asarray"], [872, 5, 1, "", "asin"], [873, 5, 1, "", "asinh"], [874, 5, 1, "", "atan"], [875, 5, 1, "", "atan2"], [876, 5, 1, "", "atanh"], [877, 5, 1, "", "atleast_1d"], [878, 5, 1, "", "atleast_2d"], [879, 5, 1, "", "atleast_3d"], [1, 1, 1, "", "autocast"], [2, 0, 0, "-", "autograd"], [3, 0, 0, "-", "backends"], [912, 5, 1, "", "baddbmm"], [913, 5, 1, "", "bartlett_window"], [914, 5, 1, "", "bernoulli"], [915, 5, 1, "", "bincount"], [916, 5, 1, "", "bitwise_and"], [917, 5, 1, "", "bitwise_left_shift"], [918, 5, 1, "", "bitwise_not"], [919, 5, 1, "", "bitwise_or"], [920, 5, 1, "", "bitwise_right_shift"], [921, 5, 1, "", "bitwise_xor"], [922, 5, 1, "", "blackman_window"], [923, 5, 1, "", "block_diag"], [924, 5, 1, "", "bmm"], [925, 5, 1, "", "broadcast_shapes"], [926, 5, 1, "", "broadcast_tensors"], [927, 5, 1, "", "broadcast_to"], [928, 5, 1, "", "bucketize"], [929, 5, 1, "", "can_cast"], [930, 5, 1, "", "cartesian_prod"], [931, 5, 1, "", "cat"], [932, 5, 1, "", "cdist"], [933, 5, 1, "", "ceil"], [934, 5, 1, "", "chain_matmul"], [935, 5, 1, "", "cholesky"], [936, 5, 1, "", "cholesky_inverse"], [937, 5, 1, "", "cholesky_solve"], [938, 5, 1, "", "chunk"], [939, 5, 1, "", "clamp"], [940, 5, 1, "", "clip"], [941, 5, 1, "", "clone"], [942, 5, 1, "", "column_stack"], [943, 5, 1, "", "combinations"], [15, 5, 1, "", "compile"], [945, 5, 1, "", "compiled_with_cxx11_abi"], [946, 5, 1, "", "complex"], [947, 5, 1, "", "concat"], [948, 5, 1, "", "concatenate"], [949, 5, 1, "", "conj"], [950, 5, 1, "", "conj_physical"], [1919, 0, 0, "-", "contrib"], [951, 5, 1, "", "copysign"], [952, 5, 1, "", "corrcoef"], [953, 5, 1, "", "cos"], [954, 5, 1, "", "cosh"], [955, 5, 1, "", "count_nonzero"], [956, 5, 1, "", "cov"], [1, 0, 0, "-", "cpu"], [957, 5, 1, "", "cross"], [28, 0, 0, "-", "cuda"], [1036, 5, 1, "", "cummax"], [1037, 5, 1, "", "cummin"], [1038, 5, 1, "", "cumprod"], [1039, 5, 1, "", "cumsum"], [1040, 5, 1, "", "cumulative_trapezoid"], [1041, 5, 1, "", "deg2rad"], [1042, 5, 1, "", "dequantize"], [1043, 5, 1, "", "det"], [1914, 1, 1, "", "device"], [1044, 5, 1, "", "diag"], [1045, 5, 1, "", "diag_embed"], [1046, 5, 1, "", "diagflat"], [1047, 5, 1, "", "diagonal"], [1048, 5, 1, "", "diagonal_scatter"], [1049, 5, 1, "", "diff"], [1050, 5, 1, "", "digamma"], [1051, 5, 1, "", "dist"], [35, 0, 0, "-", "distributed"], [41, 0, 0, "-", "distributions"], [1052, 5, 1, "", "div"], [1053, 5, 1, "", "divide"], [1054, 5, 1, "", "dot"], [1055, 5, 1, "", "dsplit"], [1056, 5, 1, "", "dstack"], [1914, 1, 1, "", "dtype"], [1057, 5, 1, "", "einsum"], [1058, 5, 1, "", "empty"], [1059, 5, 1, "", "empty_like"], [1060, 5, 1, "", "empty_strided"], [1061, 1, 1, "", "enable_grad"], [1062, 5, 1, "", "eq"], [1063, 5, 1, "", "equal"], [1064, 5, 1, "", "erf"], [1065, 5, 1, "", "erfc"], [1066, 5, 1, "", "erfinv"], [1067, 5, 1, "", "exp"], [1068, 5, 1, "", "exp2"], [1069, 5, 1, "", "expm1"], [1070, 5, 1, "", "eye"], [1071, 5, 1, "", "fake_quantize_per_channel_affine"], [1072, 5, 1, "", "fake_quantize_per_tensor_affine"], [56, 0, 0, "-", "fft"], [1095, 5, 1, "", "fix"], [1096, 5, 1, "", "flatten"], [1097, 5, 1, "", "flip"], [1098, 5, 1, "", "fliplr"], [1099, 5, 1, "", "flipud"], [1100, 5, 1, "", "float_power"], [1101, 5, 1, "", "floor"], [1102, 5, 1, "", "floor_divide"], [1103, 5, 1, "", "fmax"], [1104, 5, 1, "", "fmin"], [1105, 5, 1, "", "fmod"], [1106, 5, 1, "", "frac"], [1107, 5, 1, "", "frexp"], [1108, 5, 1, "", "from_dlpack"], [1109, 5, 1, "", "from_numpy"], [1110, 5, 1, "", "frombuffer"], [1111, 5, 1, "", "full"], [1112, 5, 1, "", "full_like"], [59, 0, 0, "-", "func"], [64, 0, 0, "-", "futures"], [65, 0, 0, "-", "fx"], [1126, 5, 1, "", "gather"], [1127, 5, 1, "", "gcd"], [1128, 5, 1, "", "ge"], [1129, 5, 1, "", "geqrf"], [1130, 5, 1, "", "ger"], [1131, 5, 1, "", "get_default_dtype"], [1132, 5, 1, "", "get_deterministic_debug_mode"], [1133, 5, 1, "", "get_float32_matmul_precision"], [1134, 5, 1, "", "get_num_interop_threads"], [1135, 5, 1, "", "get_num_threads"], [1136, 5, 1, "", "get_rng_state"], [1137, 5, 1, "", "gradient"], [1138, 5, 1, "", "greater"], [1139, 5, 1, "", "greater_equal"], [1140, 5, 1, "", "gt"], [1141, 5, 1, "", "hamming_window"], [1142, 5, 1, "", "hann_window"], [1143, 5, 1, "", "heaviside"], [1144, 5, 1, "", "histc"], [1145, 5, 1, "", "histogram"], [1146, 5, 1, "", "histogramdd"], [1147, 5, 1, "", "hsplit"], [1148, 5, 1, "", "hspmm"], [1149, 5, 1, "", "hstack"], [1851, 0, 0, "-", "hub"], [1150, 5, 1, "", "hypot"], [1151, 5, 1, "", "i0"], [1152, 5, 1, "", "igamma"], [1153, 5, 1, "", "igammac"], [1154, 5, 1, "", "imag"], [1155, 5, 1, "", "index_add"], [1156, 5, 1, "", "index_copy"], [1157, 5, 1, "", "index_reduce"], [1158, 5, 1, "", "index_select"], [1159, 1, 1, "", "inference_mode"], [1160, 5, 1, "", "initial_seed"], [1161, 5, 1, "", "inner"], [1162, 5, 1, "", "inverse"], [1163, 5, 1, "", "is_complex"], [1164, 5, 1, "", "is_conj"], [1165, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1166, 5, 1, "", "is_floating_point"], [1167, 5, 1, "", "is_grad_enabled"], [1168, 5, 1, "", "is_inference_mode_enabled"], [1169, 5, 1, "", "is_nonzero"], [1170, 5, 1, "", "is_storage"], [1171, 5, 1, "", "is_tensor"], [1172, 5, 1, "", "is_warn_always_enabled"], [1173, 5, 1, "", "isclose"], [1174, 5, 1, "", "isfinite"], [1175, 5, 1, "", "isin"], [1176, 5, 1, "", "isinf"], [1177, 5, 1, "", "isnan"], [1178, 5, 1, "", "isneginf"], [1179, 5, 1, "", "isposinf"], [1180, 5, 1, "", "isreal"], [1181, 5, 1, "", "istft"], [1854, 0, 0, "-", "jit"], [1203, 5, 1, "", "kaiser_window"], [1204, 5, 1, "", "kron"], [1205, 5, 1, "", "kthvalue"], [1914, 1, 1, "", "layout"], [1206, 5, 1, "", "lcm"], [1207, 5, 1, "", "ldexp"], [1208, 5, 1, "", "le"], [1209, 5, 1, "", "lerp"], [1210, 5, 1, "", "less"], [1211, 5, 1, "", "less_equal"], [1212, 5, 1, "", "lgamma"], [1862, 0, 0, "-", "linalg"], [1254, 5, 1, "", "linspace"], [1255, 5, 1, "", "load"], [1256, 5, 1, "", "lobpcg"], [1257, 5, 1, "", "log"], [1258, 5, 1, "", "log10"], [1259, 5, 1, "", "log1p"], [1260, 5, 1, "", "log2"], [1261, 5, 1, "", "logaddexp"], [1262, 5, 1, "", "logaddexp2"], [1263, 5, 1, "", "logcumsumexp"], [1264, 5, 1, "", "logdet"], [1265, 5, 1, "", "logical_and"], [1266, 5, 1, "", "logical_not"], [1267, 5, 1, "", "logical_or"], [1268, 5, 1, "", "logical_xor"], [1269, 5, 1, "", "logit"], [1270, 5, 1, "", "logspace"], [1271, 5, 1, "", "logsumexp"], [1272, 5, 1, "", "lt"], [1273, 5, 1, "", "lu"], [1274, 5, 1, "", "lu_solve"], [1275, 5, 1, "", "lu_unpack"], [1276, 5, 1, "", "manual_seed"], [1864, 0, 0, "-", "masked"], [1277, 5, 1, "", "masked_select"], [1278, 5, 1, "", "matmul"], [1279, 5, 1, "", "matrix_exp"], [1280, 5, 1, "", "matrix_power"], [1281, 5, 1, "", "max"], [1282, 5, 1, "", "maximum"], [1283, 5, 1, "", "mean"], [1284, 5, 1, "", "median"], [1914, 1, 1, "", "memory_format"], [1285, 5, 1, "", "meshgrid"], [1286, 5, 1, "", "min"], [1287, 5, 1, "", "minimum"], [1288, 5, 1, "", "mm"], [1289, 5, 1, "", "mode"], [1867, 0, 0, "-", "monitor"], [1290, 5, 1, "", "moveaxis"], [1291, 5, 1, "", "movedim"], [1868, 0, 0, "-", "mps"], [1304, 5, 1, "", "msort"], [1305, 5, 1, "", "mul"], [1306, 5, 1, "", "multinomial"], [1307, 5, 1, "", "multiply"], [1869, 0, 0, "-", "multiprocessing"], [1308, 5, 1, "", "mv"], [1309, 5, 1, "", "mvlgamma"], [1310, 5, 1, "", "nan_to_num"], [1311, 5, 1, "", "nanmean"], [1312, 5, 1, "", "nanmedian"], [1313, 5, 1, "", "nanquantile"], [1314, 5, 1, "", "nansum"], [1315, 5, 1, "", "narrow"], [1316, 5, 1, "", "narrow_copy"], [1317, 5, 1, "", "ne"], [1318, 5, 1, "", "neg"], [1319, 5, 1, "", "negative"], [1872, 0, 0, "-", "nested"], [1320, 5, 1, "", "nextafter"], [1873, 0, 0, "-", "nn"], [1641, 1, 1, "", "no_grad"], [1642, 5, 1, "", "nonzero"], [1643, 5, 1, "", "norm"], [1644, 5, 1, "", "normal"], [1645, 5, 1, "", "not_equal"], [1646, 5, 1, "", "numel"], [1647, 5, 1, "", "ones"], [1648, 5, 1, "", "ones_like"], [1895, 0, 0, "-", "onnx"], [1898, 0, 0, "-", "optim"], [1688, 5, 1, "", "orgqr"], [1689, 5, 1, "", "ormqr"], [1690, 5, 1, "", "outer"], [1899, 0, 0, "-", "package"], [1691, 5, 1, "", "pca_lowrank"], [1692, 5, 1, "", "permute"], [1693, 5, 1, "", "pinverse"], [1694, 5, 1, "", "poisson"], [1695, 5, 1, "", "polar"], [1696, 5, 1, "", "polygamma"], [1697, 5, 1, "", "positive"], [1698, 5, 1, "", "pow"], [1699, 5, 1, "", "prod"], [1901, 0, 0, "-", "profiler"], [1700, 5, 1, "", "promote_types"], [1701, 5, 1, "", "qr"], [1702, 5, 1, "", "quantile"], [1905, 0, 0, "-", "quantization"], [1703, 5, 1, "", "quantize_per_channel"], [1704, 5, 1, "", "quantize_per_tensor"], [1705, 5, 1, "", "quantized_batch_norm"], [1706, 5, 1, "", "quantized_max_pool1d"], [1707, 5, 1, "", "quantized_max_pool2d"], [1709, 5, 1, "", "rad2deg"], [1710, 5, 1, "", "rand"], [1711, 5, 1, "", "rand_like"], [1712, 5, 1, "", "randint"], [1713, 5, 1, "", "randint_like"], [1714, 5, 1, "", "randn"], [1715, 5, 1, "", "randn_like"], [1906, 0, 0, "-", "random"], [1716, 5, 1, "", "randperm"], [1717, 5, 1, "", "range"], [1718, 5, 1, "", "ravel"], [1719, 5, 1, "", "real"], [1720, 5, 1, "", "reciprocal"], [1721, 5, 1, "", "remainder"], [1722, 5, 1, "", "renorm"], [1723, 5, 1, "", "repeat_interleave"], [1724, 5, 1, "", "reshape"], [1725, 5, 1, "", "resolve_conj"], [1726, 5, 1, "", "resolve_neg"], [1727, 5, 1, "", "result_type"], [1728, 5, 1, "", "roll"], [1729, 5, 1, "", "rot90"], [1730, 5, 1, "", "round"], [1731, 5, 1, "", "row_stack"], [1732, 5, 1, "", "rsqrt"], [1733, 5, 1, "", "save"], [1734, 5, 1, "", "scatter"], [1735, 5, 1, "", "scatter_add"], [1736, 5, 1, "", "scatter_reduce"], [1737, 5, 1, "", "searchsorted"], [1738, 5, 1, "", "seed"], [1739, 5, 1, "", "select"], [1740, 5, 1, "", "select_scatter"], [1741, 5, 1, "", "set_default_device"], [1742, 5, 1, "", "set_default_dtype"], [1743, 5, 1, "", "set_default_tensor_type"], [1744, 5, 1, "", "set_deterministic_debug_mode"], [1745, 5, 1, "", "set_float32_matmul_precision"], [1746, 5, 1, "", "set_flush_denormal"], [1747, 1, 1, "", "set_grad_enabled"], [1748, 5, 1, "", "set_num_interop_threads"], [1749, 5, 1, "", "set_num_threads"], [1750, 5, 1, "", "set_printoptions"], [1751, 5, 1, "", "set_rng_state"], [1752, 5, 1, "", "set_warn_always"], [1753, 5, 1, "", "sgn"], [1754, 5, 1, "", "sigmoid"], [1755, 5, 1, "", "sign"], [1910, 0, 0, "-", "signal"], [1767, 5, 1, "", "signbit"], [1768, 5, 1, "", "sin"], [1769, 5, 1, "", "sinc"], [1770, 5, 1, "", "sinh"], [1771, 5, 1, "", "slice_scatter"], [1772, 5, 1, "", "slogdet"], [1773, 5, 1, "", "smm"], [1774, 5, 1, "", "softmax"], [1775, 5, 1, "", "sort"], [1911, 0, 0, "-", "sparse"], [1784, 5, 1, "", "sparse_bsc_tensor"], [1785, 5, 1, "", "sparse_bsr_tensor"], [1786, 5, 1, "", "sparse_compressed_tensor"], [1787, 5, 1, "", "sparse_coo_tensor"], [1788, 5, 1, "", "sparse_csc_tensor"], [1789, 5, 1, "", "sparse_csr_tensor"], [1912, 0, 0, "-", "special"], [1790, 5, 1, "", "split"], [1791, 5, 1, "", "sqrt"], [1792, 5, 1, "", "square"], [1793, 5, 1, "", "squeeze"], [1794, 5, 1, "", "sspaddmm"], [1795, 5, 1, "", "stack"], [1796, 5, 1, "", "std"], [1797, 5, 1, "", "std_mean"], [1798, 5, 1, "", "stft"], [1799, 5, 1, "", "sub"], [1800, 5, 1, "", "subtract"], [1801, 5, 1, "", "sum"], [1802, 5, 1, "", "svd"], [1803, 5, 1, "", "svd_lowrank"], [1804, 5, 1, "", "swapaxes"], [1805, 5, 1, "", "swapdims"], [1806, 5, 1, "", "sym_float"], [1807, 5, 1, "", "sym_int"], [1808, 5, 1, "", "sym_max"], [1809, 5, 1, "", "sym_min"], [1810, 5, 1, "", "sym_not"], [1811, 5, 1, "", "t"], [1812, 5, 1, "", "take"], [1813, 5, 1, "", "take_along_dim"], [1814, 5, 1, "", "tan"], [1815, 5, 1, "", "tanh"], [1816, 5, 1, "", "tensor"], [1817, 5, 1, "", "tensor_split"], [1818, 5, 1, "", "tensordot"], [1918, 0, 0, "-", "testing"], [1819, 5, 1, "", "tile"], [1820, 5, 1, "", "topk"], [1821, 5, 1, "", "trace"], [1822, 5, 1, "", "transpose"], [1823, 5, 1, "", "trapezoid"], [1824, 5, 1, "", "trapz"], [1825, 5, 1, "", "triangular_solve"], [1826, 5, 1, "", "tril"], [1827, 5, 1, "", "tril_indices"], [1828, 5, 1, "", "triu"], [1829, 5, 1, "", "triu_indices"], [1830, 5, 1, "", "true_divide"], [1831, 5, 1, "", "trunc"], [1832, 5, 1, "", "unbind"], [1833, 5, 1, "", "unflatten"], [1834, 5, 1, "", "unique"], [1835, 5, 1, "", "unique_consecutive"], [1836, 5, 1, "", "unsqueeze"], [1837, 5, 1, "", "use_deterministic_algorithms"], [1919, 0, 0, "-", "utils"], [1838, 5, 1, "", "vander"], [1839, 5, 1, "", "var"], [1840, 5, 1, "", "var_mean"], [1841, 5, 1, "", "vdot"], [1842, 5, 1, "", "view_as_complex"], [1843, 5, 1, "", "view_as_real"], [1844, 5, 1, "", "vmap"], [1845, 5, 1, "", "vsplit"], [1846, 5, 1, "", "vstack"], [1847, 5, 1, "", "where"], [1848, 5, 1, "", "xlogy"], [1849, 5, 1, "", "zeros"], [1850, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1913, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1913, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1913, 2, 1, "", "dtype"]], "torch.CharStorage": [[1913, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1913, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1913, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1913, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1913, 2, 1, "", "dtype"]], "torch.Generator": [[83, 2, 1, "", "device"], [83, 3, 1, "", "get_state"], [83, 3, 1, "", "initial_seed"], [83, 3, 1, "", "manual_seed"], [83, 3, 1, "", "seed"], [83, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1913, 2, 1, "", "dtype"]], "torch.IntStorage": [[1913, 2, 1, "", "dtype"]], "torch.LongStorage": [[1913, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1913, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1913, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1913, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1913, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1913, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1913, 2, 1, "", "dtype"]], "torch.Tag": [[1919, 4, 1, "", "name"]], "torch.Tensor": [[1917, 2, 1, "", "H"], [1917, 2, 1, "", "T"], [84, 3, 1, "", "abs"], [85, 3, 1, "", "abs_"], [86, 3, 1, "", "absolute"], [87, 3, 1, "", "absolute_"], [88, 3, 1, "", "acos"], [89, 3, 1, "", "acos_"], [90, 3, 1, "", "acosh"], [91, 3, 1, "", "acosh_"], [92, 3, 1, "", "add"], [93, 3, 1, "", "add_"], [94, 3, 1, "", "addbmm"], [95, 3, 1, "", "addbmm_"], [96, 3, 1, "", "addcdiv"], [97, 3, 1, "", "addcdiv_"], [98, 3, 1, "", "addcmul"], [99, 3, 1, "", "addcmul_"], [100, 3, 1, "", "addmm"], [101, 3, 1, "", "addmm_"], [102, 3, 1, "", "addmv"], [103, 3, 1, "", "addmv_"], [104, 3, 1, "", "addr"], [105, 3, 1, "", "addr_"], [106, 3, 1, "", "adjoint"], [1871, 3, 1, "", "align_as"], [1871, 3, 1, "", "align_to"], [107, 3, 1, "", "all"], [108, 3, 1, "", "allclose"], [109, 3, 1, "", "amax"], [110, 3, 1, "", "amin"], [111, 3, 1, "", "aminmax"], [112, 3, 1, "", "angle"], [113, 3, 1, "", "any"], [114, 3, 1, "", "apply_"], [115, 3, 1, "", "arccos"], [116, 3, 1, "", "arccos_"], [117, 3, 1, "", "arccosh"], [118, 3, 1, "", "arccosh_"], [119, 3, 1, "", "arcsin"], [120, 3, 1, "", "arcsin_"], [121, 3, 1, "", "arcsinh"], [122, 3, 1, "", "arcsinh_"], [123, 3, 1, "", "arctan"], [124, 3, 1, "", "arctan2"], [125, 3, 1, "", "arctan2_"], [126, 3, 1, "", "arctan_"], [127, 3, 1, "", "arctanh"], [128, 3, 1, "", "arctanh_"], [129, 3, 1, "", "argmax"], [130, 3, 1, "", "argmin"], [131, 3, 1, "", "argsort"], [132, 3, 1, "", "argwhere"], [133, 3, 1, "", "as_strided"], [134, 3, 1, "", "as_subclass"], [135, 3, 1, "", "asin"], [136, 3, 1, "", "asin_"], [137, 3, 1, "", "asinh"], [138, 3, 1, "", "asinh_"], [139, 3, 1, "", "atan"], [140, 3, 1, "", "atan2"], [141, 3, 1, "", "atan2_"], [142, 3, 1, "", "atan_"], [143, 3, 1, "", "atanh"], [144, 3, 1, "", "atanh_"], [145, 3, 1, "", "backward"], [146, 3, 1, "", "baddbmm"], [147, 3, 1, "", "baddbmm_"], [148, 3, 1, "", "bernoulli"], [149, 3, 1, "", "bernoulli_"], [150, 3, 1, "", "bfloat16"], [151, 3, 1, "", "bincount"], [152, 3, 1, "", "bitwise_and"], [153, 3, 1, "", "bitwise_and_"], [154, 3, 1, "", "bitwise_left_shift"], [155, 3, 1, "", "bitwise_left_shift_"], [156, 3, 1, "", "bitwise_not"], [157, 3, 1, "", "bitwise_not_"], [158, 3, 1, "", "bitwise_or"], [159, 3, 1, "", "bitwise_or_"], [160, 3, 1, "", "bitwise_right_shift"], [161, 3, 1, "", "bitwise_right_shift_"], [162, 3, 1, "", "bitwise_xor"], [163, 3, 1, "", "bitwise_xor_"], [164, 3, 1, "", "bmm"], [165, 3, 1, "", "bool"], [166, 3, 1, "", "broadcast_to"], [167, 3, 1, "", "byte"], [168, 3, 1, "", "cauchy_"], [169, 3, 1, "", "ccol_indices"], [170, 3, 1, "", "cdouble"], [171, 3, 1, "", "ceil"], [172, 3, 1, "", "ceil_"], [173, 3, 1, "", "cfloat"], [174, 3, 1, "", "chalf"], [175, 3, 1, "", "char"], [176, 3, 1, "", "cholesky"], [177, 3, 1, "", "cholesky_inverse"], [178, 3, 1, "", "cholesky_solve"], [179, 3, 1, "", "chunk"], [180, 3, 1, "", "clamp"], [181, 3, 1, "", "clamp_"], [182, 3, 1, "", "clip"], [183, 3, 1, "", "clip_"], [184, 3, 1, "", "clone"], [185, 3, 1, "", "coalesce"], [186, 3, 1, "", "col_indices"], [187, 3, 1, "", "conj"], [188, 3, 1, "", "conj_physical"], [189, 3, 1, "", "conj_physical_"], [190, 3, 1, "", "contiguous"], [191, 3, 1, "", "copy_"], [192, 3, 1, "", "copysign"], [193, 3, 1, "", "copysign_"], [194, 3, 1, "", "corrcoef"], [195, 3, 1, "", "cos"], [196, 3, 1, "", "cos_"], [197, 3, 1, "", "cosh"], [198, 3, 1, "", "cosh_"], [199, 3, 1, "", "count_nonzero"], [200, 3, 1, "", "cov"], [201, 3, 1, "", "cpu"], [202, 3, 1, "", "cross"], [203, 3, 1, "", "crow_indices"], [204, 3, 1, "", "cuda"], [205, 3, 1, "", "cummax"], [206, 3, 1, "", "cummin"], [207, 3, 1, "", "cumprod"], [208, 3, 1, "", "cumprod_"], [209, 3, 1, "", "cumsum"], [210, 3, 1, "", "cumsum_"], [211, 3, 1, "", "data_ptr"], [212, 3, 1, "", "deg2rad"], [213, 3, 1, "", "dense_dim"], [214, 3, 1, "", "dequantize"], [215, 3, 1, "", "det"], [216, 3, 1, "", "detach"], [217, 3, 1, "", "detach_"], [218, 2, 1, "", "device"], [219, 3, 1, "", "diag"], [220, 3, 1, "", "diag_embed"], [221, 3, 1, "", "diagflat"], [222, 3, 1, "", "diagonal"], [223, 3, 1, "", "diagonal_scatter"], [224, 3, 1, "", "diff"], [225, 3, 1, "", "digamma"], [226, 3, 1, "", "digamma_"], [227, 3, 1, "", "dim"], [228, 3, 1, "", "dist"], [229, 3, 1, "", "div"], [230, 3, 1, "", "div_"], [231, 3, 1, "", "divide"], [232, 3, 1, "", "divide_"], [233, 3, 1, "", "dot"], [234, 3, 1, "", "double"], [235, 3, 1, "", "dsplit"], [236, 3, 1, "", "element_size"], [237, 3, 1, "", "eq"], [238, 3, 1, "", "eq_"], [239, 3, 1, "", "equal"], [240, 3, 1, "", "erf"], [241, 3, 1, "", "erf_"], [242, 3, 1, "", "erfc"], [243, 3, 1, "", "erfc_"], [244, 3, 1, "", "erfinv"], [245, 3, 1, "", "erfinv_"], [246, 3, 1, "", "exp"], [247, 3, 1, "", "exp_"], [248, 3, 1, "", "expand"], [249, 3, 1, "", "expand_as"], [250, 3, 1, "", "expm1"], [251, 3, 1, "", "expm1_"], [252, 3, 1, "", "exponential_"], [253, 3, 1, "", "fill_"], [254, 3, 1, "", "fill_diagonal_"], [255, 3, 1, "", "fix"], [256, 3, 1, "", "fix_"], [257, 3, 1, "", "flatten"], [258, 3, 1, "", "flip"], [259, 3, 1, "", "fliplr"], [260, 3, 1, "", "flipud"], [261, 3, 1, "", "float"], [262, 3, 1, "", "float_power"], [263, 3, 1, "", "float_power_"], [264, 3, 1, "", "floor"], [265, 3, 1, "", "floor_"], [266, 3, 1, "", "floor_divide"], [267, 3, 1, "", "floor_divide_"], [268, 3, 1, "", "fmax"], [269, 3, 1, "", "fmin"], [270, 3, 1, "", "fmod"], [271, 3, 1, "", "fmod_"], [272, 3, 1, "", "frac"], [273, 3, 1, "", "frac_"], [274, 3, 1, "", "frexp"], [275, 3, 1, "", "gather"], [276, 3, 1, "", "gcd"], [277, 3, 1, "", "gcd_"], [278, 3, 1, "", "ge"], [279, 3, 1, "", "ge_"], [280, 3, 1, "", "geometric_"], [281, 3, 1, "", "geqrf"], [282, 3, 1, "", "ger"], [283, 3, 1, "", "get_device"], [284, 2, 1, "", "grad"], [285, 3, 1, "", "greater"], [286, 3, 1, "", "greater_"], [287, 3, 1, "", "greater_equal"], [288, 3, 1, "", "greater_equal_"], [289, 3, 1, "", "gt"], [290, 3, 1, "", "gt_"], [291, 3, 1, "", "half"], [292, 3, 1, "", "hardshrink"], [293, 3, 1, "", "heaviside"], [294, 3, 1, "", "histc"], [295, 3, 1, "", "histogram"], [296, 3, 1, "", "hsplit"], [297, 3, 1, "", "hypot"], [298, 3, 1, "", "hypot_"], [299, 3, 1, "", "i0"], [300, 3, 1, "", "i0_"], [301, 3, 1, "", "igamma"], [302, 3, 1, "", "igamma_"], [303, 3, 1, "", "igammac"], [304, 3, 1, "", "igammac_"], [305, 2, 1, "", "imag"], [306, 3, 1, "", "index_add"], [307, 3, 1, "", "index_add_"], [308, 3, 1, "", "index_copy"], [309, 3, 1, "", "index_copy_"], [310, 3, 1, "", "index_fill"], [311, 3, 1, "", "index_fill_"], [312, 3, 1, "", "index_put"], [313, 3, 1, "", "index_put_"], [314, 3, 1, "", "index_reduce"], [315, 3, 1, "", "index_reduce_"], [316, 3, 1, "", "index_select"], [317, 3, 1, "", "indices"], [318, 3, 1, "", "inner"], [319, 3, 1, "", "int"], [320, 3, 1, "", "int_repr"], [321, 3, 1, "", "inverse"], [322, 3, 1, "", "is_coalesced"], [323, 3, 1, "", "is_complex"], [324, 3, 1, "", "is_conj"], [325, 3, 1, "", "is_contiguous"], [326, 2, 1, "", "is_cuda"], [327, 3, 1, "", "is_floating_point"], [328, 3, 1, "", "is_inference"], [329, 2, 1, "", "is_leaf"], [330, 2, 1, "", "is_meta"], [331, 3, 1, "", "is_pinned"], [332, 2, 1, "", "is_quantized"], [333, 3, 1, "", "is_set_to"], [334, 3, 1, "", "is_shared"], [335, 3, 1, "", "is_signed"], [336, 2, 1, "", "is_sparse"], [337, 2, 1, "", "is_sparse_csr"], [338, 3, 1, "", "isclose"], [339, 3, 1, "", "isfinite"], [340, 3, 1, "", "isinf"], [341, 3, 1, "", "isnan"], [342, 3, 1, "", "isneginf"], [343, 3, 1, "", "isposinf"], [344, 3, 1, "", "isreal"], [345, 3, 1, "", "istft"], [346, 3, 1, "", "item"], [347, 2, 1, "", "itemsize"], [348, 3, 1, "", "kthvalue"], [349, 3, 1, "", "lcm"], [350, 3, 1, "", "lcm_"], [351, 3, 1, "", "ldexp"], [352, 3, 1, "", "ldexp_"], [353, 3, 1, "", "le"], [354, 3, 1, "", "le_"], [355, 3, 1, "", "lerp"], [356, 3, 1, "", "lerp_"], [357, 3, 1, "", "less"], [358, 3, 1, "", "less_"], [359, 3, 1, "", "less_equal"], [360, 3, 1, "", "less_equal_"], [361, 3, 1, "", "lgamma"], [362, 3, 1, "", "lgamma_"], [363, 3, 1, "", "log"], [364, 3, 1, "", "log10"], [365, 3, 1, "", "log10_"], [366, 3, 1, "", "log1p"], [367, 3, 1, "", "log1p_"], [368, 3, 1, "", "log2"], [369, 3, 1, "", "log2_"], [370, 3, 1, "", "log_"], [371, 3, 1, "", "log_normal_"], [372, 3, 1, "", "logaddexp"], [373, 3, 1, "", "logaddexp2"], [374, 3, 1, "", "logcumsumexp"], [375, 3, 1, "", "logdet"], [376, 3, 1, "", "logical_and"], [377, 3, 1, "", "logical_and_"], [378, 3, 1, "", "logical_not"], [379, 3, 1, "", "logical_not_"], [380, 3, 1, "", "logical_or"], [381, 3, 1, "", "logical_or_"], [382, 3, 1, "", "logical_xor"], [383, 3, 1, "", "logical_xor_"], [384, 3, 1, "", "logit"], [385, 3, 1, "", "logit_"], [386, 3, 1, "", "logsumexp"], [387, 3, 1, "", "long"], [388, 3, 1, "", "lt"], [389, 3, 1, "", "lt_"], [390, 3, 1, "", "lu"], [391, 3, 1, "", "lu_solve"], [1917, 2, 1, "", "mH"], [1917, 2, 1, "", "mT"], [392, 3, 1, "", "map_"], [393, 3, 1, "", "masked_fill"], [394, 3, 1, "", "masked_fill_"], [395, 3, 1, "", "masked_scatter"], [396, 3, 1, "", "masked_scatter_"], [397, 3, 1, "", "masked_select"], [398, 3, 1, "", "matmul"], [399, 3, 1, "", "matrix_exp"], [400, 3, 1, "", "matrix_power"], [401, 3, 1, "", "max"], [402, 3, 1, "", "maximum"], [403, 3, 1, "", "mean"], [404, 3, 1, "", "median"], [405, 3, 1, "", "min"], [406, 3, 1, "", "minimum"], [407, 3, 1, "", "mm"], [408, 3, 1, "", "mode"], [409, 3, 1, "", "moveaxis"], [410, 3, 1, "", "movedim"], [411, 3, 1, "", "msort"], [412, 3, 1, "", "mul"], [413, 3, 1, "", "mul_"], [414, 3, 1, "", "multinomial"], [415, 3, 1, "", "multiply"], [416, 3, 1, "", "multiply_"], [417, 3, 1, "", "mv"], [418, 3, 1, "", "mvlgamma"], [419, 3, 1, "", "mvlgamma_"], [1871, 2, 1, "", "names"], [420, 3, 1, "", "nan_to_num"], [421, 3, 1, "", "nan_to_num_"], [422, 3, 1, "", "nanmean"], [423, 3, 1, "", "nanmedian"], [424, 3, 1, "", "nanquantile"], [425, 3, 1, "", "nansum"], [426, 3, 1, "", "narrow"], [427, 3, 1, "", "narrow_copy"], [428, 2, 1, "", "nbytes"], [429, 2, 1, "", "ndim"], [430, 3, 1, "", "ndimension"], [431, 3, 1, "", "ne"], [432, 3, 1, "", "ne_"], [433, 3, 1, "", "neg"], [434, 3, 1, "", "neg_"], [435, 3, 1, "", "negative"], [436, 3, 1, "", "negative_"], [437, 3, 1, "", "nelement"], [438, 3, 1, "", "new_empty"], [439, 3, 1, "", "new_full"], [440, 3, 1, "", "new_ones"], [441, 3, 1, "", "new_tensor"], [442, 3, 1, "", "new_zeros"], [443, 3, 1, "", "nextafter"], [444, 3, 1, "", "nextafter_"], [445, 3, 1, "", "nonzero"], [446, 3, 1, "", "norm"], [447, 3, 1, "", "normal_"], [448, 3, 1, "", "not_equal"], [449, 3, 1, "", "not_equal_"], [450, 3, 1, "", "numel"], [451, 3, 1, "", "numpy"], [452, 3, 1, "", "orgqr"], [453, 3, 1, "", "ormqr"], [454, 3, 1, "", "outer"], [455, 3, 1, "", "permute"], [456, 3, 1, "", "pin_memory"], [457, 3, 1, "", "pinverse"], [458, 3, 1, "", "polygamma"], [459, 3, 1, "", "polygamma_"], [460, 3, 1, "", "positive"], [461, 3, 1, "", "pow"], [462, 3, 1, "", "pow_"], [463, 3, 1, "", "prod"], [464, 3, 1, "", "put_"], [465, 3, 1, "", "q_per_channel_axis"], [466, 3, 1, "", "q_per_channel_scales"], [467, 3, 1, "", "q_per_channel_zero_points"], [468, 3, 1, "", "q_scale"], [469, 3, 1, "", "q_zero_point"], [470, 3, 1, "", "qr"], [471, 3, 1, "", "qscheme"], [472, 3, 1, "", "quantile"], [473, 3, 1, "", "rad2deg"], [474, 3, 1, "", "random_"], [475, 3, 1, "", "ravel"], [476, 2, 1, "", "real"], [477, 3, 1, "", "reciprocal"], [478, 3, 1, "", "reciprocal_"], [479, 3, 1, "", "record_stream"], [1871, 3, 1, "", "refine_names"], [480, 3, 1, "", "register_hook"], [481, 3, 1, "", "remainder"], [482, 3, 1, "", "remainder_"], [1871, 3, 1, "", "rename"], [1871, 3, 1, "", "rename_"], [483, 3, 1, "", "renorm"], [484, 3, 1, "", "renorm_"], [485, 3, 1, "", "repeat"], [486, 3, 1, "", "repeat_interleave"], [487, 2, 1, "", "requires_grad"], [488, 3, 1, "", "requires_grad_"], [489, 3, 1, "", "reshape"], [490, 3, 1, "", "reshape_as"], [491, 3, 1, "", "resize_"], [492, 3, 1, "", "resize_as_"], [493, 3, 1, "", "resolve_conj"], [494, 3, 1, "", "resolve_neg"], [495, 3, 1, "", "retain_grad"], [496, 2, 1, "", "retains_grad"], [497, 3, 1, "", "roll"], [498, 3, 1, "", "rot90"], [499, 3, 1, "", "round"], [500, 3, 1, "", "round_"], [501, 3, 1, "", "row_indices"], [502, 3, 1, "", "rsqrt"], [503, 3, 1, "", "rsqrt_"], [504, 3, 1, "", "scatter"], [505, 3, 1, "", "scatter_"], [506, 3, 1, "", "scatter_add"], [507, 3, 1, "", "scatter_add_"], [508, 3, 1, "", "scatter_reduce"], [509, 3, 1, "", "scatter_reduce_"], [510, 3, 1, "", "select"], [511, 3, 1, "", "select_scatter"], [512, 3, 1, "", "set_"], [513, 3, 1, "", "sgn"], [514, 3, 1, "", "sgn_"], [515, 3, 1, "", "share_memory_"], [516, 3, 1, "", "short"], [517, 3, 1, "", "sigmoid"], [518, 3, 1, "", "sigmoid_"], [519, 3, 1, "", "sign"], [520, 3, 1, "", "sign_"], [521, 3, 1, "", "signbit"], [522, 3, 1, "", "sin"], [523, 3, 1, "", "sin_"], [524, 3, 1, "", "sinc"], [525, 3, 1, "", "sinc_"], [526, 3, 1, "", "sinh"], [527, 3, 1, "", "sinh_"], [528, 3, 1, "", "size"], [529, 3, 1, "", "slice_scatter"], [530, 3, 1, "", "slogdet"], [531, 3, 1, "", "smm"], [532, 3, 1, "", "softmax"], [533, 3, 1, "", "sort"], [534, 3, 1, "", "sparse_dim"], [535, 3, 1, "", "sparse_mask"], [536, 3, 1, "", "sparse_resize_"], [537, 3, 1, "", "sparse_resize_and_clear_"], [538, 3, 1, "", "split"], [539, 3, 1, "", "sqrt"], [540, 3, 1, "", "sqrt_"], [541, 3, 1, "", "square"], [542, 3, 1, "", "square_"], [543, 3, 1, "", "squeeze"], [544, 3, 1, "", "squeeze_"], [545, 3, 1, "", "sspaddmm"], [546, 3, 1, "", "std"], [547, 3, 1, "", "stft"], [548, 3, 1, "", "storage"], [549, 3, 1, "", "storage_offset"], [550, 3, 1, "", "storage_type"], [551, 3, 1, "", "stride"], [552, 3, 1, "", "sub"], [553, 3, 1, "", "sub_"], [554, 3, 1, "", "subtract"], [555, 3, 1, "", "subtract_"], [556, 3, 1, "", "sum"], [557, 3, 1, "", "sum_to_size"], [558, 3, 1, "", "svd"], [559, 3, 1, "", "swapaxes"], [560, 3, 1, "", "swapdims"], [561, 3, 1, "", "t"], [562, 3, 1, "", "t_"], [563, 3, 1, "", "take"], [564, 3, 1, "", "take_along_dim"], [565, 3, 1, "", "tan"], [566, 3, 1, "", "tan_"], [567, 3, 1, "", "tanh"], [568, 3, 1, "", "tanh_"], [569, 3, 1, "", "tensor_split"], [570, 3, 1, "", "tile"], [571, 3, 1, "", "to"], [572, 3, 1, "", "to_dense"], [573, 3, 1, "", "to_mkldnn"], [574, 3, 1, "", "to_sparse"], [575, 3, 1, "", "to_sparse_bsc"], [576, 3, 1, "", "to_sparse_bsr"], [577, 3, 1, "", "to_sparse_coo"], [578, 3, 1, "", "to_sparse_csc"], [579, 3, 1, "", "to_sparse_csr"], [580, 3, 1, "", "tolist"], [581, 3, 1, "", "topk"], [582, 3, 1, "", "trace"], [583, 3, 1, "", "transpose"], [584, 3, 1, "", "transpose_"], [585, 3, 1, "", "triangular_solve"], [586, 3, 1, "", "tril"], [587, 3, 1, "", "tril_"], [588, 3, 1, "", "triu"], [589, 3, 1, "", "triu_"], [590, 3, 1, "", "true_divide"], [591, 3, 1, "", "true_divide_"], [592, 3, 1, "", "trunc"], [593, 3, 1, "", "trunc_"], [594, 3, 1, "", "type"], [595, 3, 1, "", "type_as"], [596, 3, 1, "", "unbind"], [597, 3, 1, "", "unflatten"], [598, 3, 1, "", "unfold"], [599, 3, 1, "", "uniform_"], [600, 3, 1, "", "unique"], [601, 3, 1, "", "unique_consecutive"], [602, 3, 1, "", "unsqueeze"], [603, 3, 1, "", "unsqueeze_"], [604, 3, 1, "", "untyped_storage"], [605, 3, 1, "", "values"], [606, 3, 1, "", "var"], [607, 3, 1, "", "vdot"], [608, 3, 1, "", "view"], [609, 3, 1, "", "view_as"], [610, 3, 1, "", "vsplit"], [611, 3, 1, "", "where"], [612, 3, 1, "", "xlogy"], [613, 3, 1, "", "xlogy_"], [614, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1913, 3, 1, "", "bfloat16"], [1913, 3, 1, "", "bool"], [1913, 3, 1, "", "byte"], [1913, 3, 1, "", "char"], [1913, 3, 1, "", "clone"], [1913, 3, 1, "", "complex_double"], [1913, 3, 1, "", "complex_float"], [1913, 3, 1, "", "copy_"], [1913, 3, 1, "", "cpu"], [1913, 3, 1, "", "cuda"], [1913, 3, 1, "", "data_ptr"], [1913, 4, 1, "", "device"], [1913, 3, 1, "", "double"], [1913, 2, 1, "", "dtype"], [1913, 3, 1, "", "element_size"], [1913, 3, 1, "", "fill_"], [1913, 3, 1, "", "float"], [1913, 3, 1, "", "from_buffer"], [1913, 3, 1, "", "from_file"], [1913, 3, 1, "", "get_device"], [1913, 3, 1, "", "half"], [1913, 3, 1, "", "int"], [1913, 4, 1, "", "is_cuda"], [1913, 3, 1, "", "is_pinned"], [1913, 3, 1, "", "is_shared"], [1913, 2, 1, "", "is_sparse"], [1913, 3, 1, "", "long"], [1913, 3, 1, "", "nbytes"], [1913, 3, 1, "", "pickle_storage_type"], [1913, 3, 1, "", "pin_memory"], [1913, 3, 1, "", "resize_"], [1913, 3, 1, "", "share_memory_"], [1913, 3, 1, "", "short"], [1913, 3, 1, "", "size"], [1913, 3, 1, "", "tolist"], [1913, 3, 1, "", "type"], [1913, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1913, 3, 1, "", "bfloat16"], [1913, 3, 1, "", "bool"], [1913, 3, 1, "", "byte"], [1913, 3, 1, "", "byteswap"], [1913, 3, 1, "", "char"], [1913, 3, 1, "", "clone"], [1913, 3, 1, "", "complex_double"], [1913, 3, 1, "", "complex_float"], [1913, 3, 1, "", "copy_"], [1913, 3, 1, "", "cpu"], [1913, 3, 1, "", "cuda"], [1913, 3, 1, "", "data_ptr"], [1913, 2, 1, "", "device"], [1913, 3, 1, "", "double"], [1913, 3, 1, "", "element_size"], [1913, 3, 1, "", "fill_"], [1913, 3, 1, "", "float"], [1913, 3, 1, "", "from_buffer"], [1913, 3, 1, "", "from_file"], [1913, 3, 1, "", "get_device"], [1913, 3, 1, "", "half"], [1913, 3, 1, "", "int"], [1913, 4, 1, "", "is_cuda"], [1913, 3, 1, "", "is_pinned"], [1913, 3, 1, "", "is_shared"], [1913, 2, 1, "", "is_sparse"], [1913, 2, 1, "", "is_sparse_csr"], [1913, 3, 1, "", "long"], [1913, 3, 1, "", "mps"], [1913, 3, 1, "", "nbytes"], [1913, 3, 1, "", "new"], [1913, 3, 1, "", "pin_memory"], [1913, 3, 1, "", "resize_"], [1913, 3, 1, "", "share_memory_"], [1913, 3, 1, "", "short"], [1913, 3, 1, "", "size"], [1913, 3, 1, "", "tolist"], [1913, 3, 1, "", "type"], [1913, 3, 1, "", "untyped"]], "torch.__config__": [[25, 5, 1, "", "parallel_info"], [25, 5, 1, "", "show"]], "torch._dynamo": [[0, 1, 1, "", "OptimizedModule"], [0, 5, 1, "", "allow_in_graph"], [0, 5, 1, "", "disable"], [0, 5, 1, "", "disallow_in_graph"], [0, 5, 1, "", "export"], [0, 5, 1, "", "forbid_in_graph"], [0, 5, 1, "", "graph_break"], [0, 5, 1, "", "list_backends"], [0, 5, 1, "", "mark_dynamic"], [0, 5, 1, "", "mark_static"], [0, 5, 1, "", "optimize"], [0, 5, 1, "", "optimize_assert"], [0, 5, 1, "", "register_backend"], [0, 5, 1, "", "reset"], [0, 5, 1, "", "run"]], "torch._logging": [[671, 5, 1, "", "set_logs"]], "torch.ao": [[1902, 0, 0, "-", "nn"], [1902, 0, 0, "-", "ns"], [1902, 0, 0, "-", "pruning"], [1902, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1905, 0, 0, "-", "intrinsic"], [1905, 0, 0, "-", "qat"], [1902, 0, 0, "-", "quantizable"], [1902, 0, 0, "-", "quantized"], [1902, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[691, 1, 1, "", "BNReLU2d"], [692, 1, 1, "", "BNReLU3d"], [693, 1, 1, "", "ConvBn1d"], [694, 1, 1, "", "ConvBn2d"], [695, 1, 1, "", "ConvBn3d"], [696, 1, 1, "", "ConvBnReLU1d"], [697, 1, 1, "", "ConvBnReLU2d"], [698, 1, 1, "", "ConvBnReLU3d"], [699, 1, 1, "", "ConvReLU1d"], [700, 1, 1, "", "ConvReLU2d"], [701, 1, 1, "", "ConvReLU3d"], [702, 1, 1, "", "LinearReLU"], [1905, 0, 0, "-", "modules"], [1905, 0, 0, "-", "qat"], [1905, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[703, 1, 1, "", "ConvBn1d"], [704, 1, 1, "", "ConvBn2d"], [705, 1, 1, "", "ConvBn3d"], [706, 1, 1, "", "ConvBnReLU1d"], [707, 1, 1, "", "ConvBnReLU2d"], [708, 1, 1, "", "ConvBnReLU3d"], [709, 1, 1, "", "ConvReLU2d"], [710, 1, 1, "", "ConvReLU3d"], [711, 1, 1, "", "LinearReLU"], [712, 1, 1, "", "freeze_bn_stats"], [1905, 0, 0, "-", "modules"], [713, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[714, 1, 1, "", "BNReLU2d"], [715, 1, 1, "", "BNReLU3d"], [716, 1, 1, "", "ConvReLU1d"], [717, 1, 1, "", "ConvReLU2d"], [718, 1, 1, "", "ConvReLU3d"], [719, 1, 1, "", "LinearReLU"], [1905, 0, 0, "-", "dynamic"], [1905, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[720, 1, 1, "", "LinearReLU"], [1905, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[721, 1, 1, "", "Conv2d"], [722, 1, 1, "", "Conv3d"], [723, 1, 1, "", "Linear"], [1905, 0, 0, "-", "dynamic"], [1905, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[723, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[724, 1, 1, "", "Linear"], [1905, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[725, 1, 1, "", "LSTM"], [726, 1, 1, "", "MultiheadAttention"], [1902, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[726, 3, 1, "", "dequantize"], [726, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[727, 1, 1, "", "BatchNorm2d"], [728, 1, 1, "", "BatchNorm3d"], [729, 1, 1, "", "Conv1d"], [730, 1, 1, "", "Conv2d"], [731, 1, 1, "", "Conv3d"], [732, 1, 1, "", "ConvTranspose1d"], [733, 1, 1, "", "ConvTranspose2d"], [734, 1, 1, "", "ConvTranspose3d"], [735, 1, 1, "", "ELU"], [736, 1, 1, "", "Embedding"], [737, 1, 1, "", "EmbeddingBag"], [738, 1, 1, "", "FXFloatFunctional"], [739, 1, 1, "", "FloatFunctional"], [740, 1, 1, "", "GroupNorm"], [741, 1, 1, "", "Hardswish"], [742, 1, 1, "", "InstanceNorm1d"], [743, 1, 1, "", "InstanceNorm2d"], [744, 1, 1, "", "InstanceNorm3d"], [745, 1, 1, "", "LayerNorm"], [746, 1, 1, "", "LeakyReLU"], [747, 1, 1, "", "Linear"], [748, 1, 1, "", "QFunctional"], [749, 1, 1, "", "ReLU6"], [750, 1, 1, "", "Sigmoid"], [1905, 0, 0, "-", "dynamic"], [1905, 0, 0, "-", "functional"], [1905, 0, 0, "-", "modules"], [1902, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[729, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[730, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[731, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[736, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[737, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[747, 3, 1, "", "from_float"], [747, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[751, 1, 1, "", "GRU"], [752, 1, 1, "", "GRUCell"], [753, 1, 1, "", "LSTM"], [754, 1, 1, "", "LSTMCell"], [755, 1, 1, "", "Linear"], [756, 1, 1, "", "RNNCell"], [1905, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[755, 3, 1, "", "from_float"], [755, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[757, 1, 1, "", "adaptive_avg_pool2d"], [758, 1, 1, "", "adaptive_avg_pool3d"], [759, 1, 1, "", "avg_pool2d"], [760, 1, 1, "", "avg_pool3d"], [761, 1, 1, "", "celu"], [762, 1, 1, "", "clamp"], [763, 1, 1, "", "conv1d"], [764, 1, 1, "", "conv2d"], [765, 1, 1, "", "conv3d"], [766, 1, 1, "", "elu"], [767, 1, 1, "", "hardsigmoid"], [768, 1, 1, "", "hardswish"], [769, 1, 1, "", "hardtanh"], [770, 1, 1, "", "interpolate"], [771, 1, 1, "", "leaky_relu"], [772, 1, 1, "", "linear"], [773, 1, 1, "", "max_pool1d"], [774, 1, 1, "", "max_pool2d"], [775, 1, 1, "", "threshold"], [776, 1, 1, "", "upsample"], [777, 1, 1, "", "upsample_bilinear"], [778, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1902, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1902, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1902, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1920, 0, 0, "-", "_numeric_suite"], [1921, 0, 0, "-", "_numeric_suite_fx"], [1902, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1920, 1, 1, "", "Logger"], [1920, 1, 1, "", "OutputLogger"], [1920, 1, 1, "", "Shadow"], [1920, 1, 1, "", "ShadowLogger"], [1920, 5, 1, "", "compare_model_outputs"], [1920, 5, 1, "", "compare_model_stub"], [1920, 5, 1, "", "compare_weights"], [1920, 5, 1, "", "get_logger_dict"], [1920, 5, 1, "", "get_matching_activations"], [1920, 5, 1, "", "prepare_model_outputs"], [1920, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1920, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1920, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1920, 3, 1, "", "add"], [1920, 3, 1, "", "add_relu"], [1920, 3, 1, "", "add_scalar"], [1920, 3, 1, "", "cat"], [1920, 3, 1, "", "forward"], [1920, 3, 1, "", "mul"], [1920, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1920, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1921, 1, 1, "", "NSTracer"], [1921, 1, 1, "", "OutputComparisonLogger"], [1921, 1, 1, "", "OutputLogger"], [1921, 5, 1, "", "add_loggers"], [1921, 5, 1, "", "add_shadow_loggers"], [1921, 5, 1, "", "convert_n_shadows_model"], [1921, 5, 1, "", "extend_logger_results_with_comparison"], [1921, 5, 1, "", "extract_logger_info"], [1921, 5, 1, "", "extract_results_n_shadows_model"], [1921, 5, 1, "", "extract_shadow_logger_info"], [1921, 5, 1, "", "extract_weights"], [1921, 5, 1, "", "loggers_set_enabled"], [1921, 5, 1, "", "loggers_set_save_activations"], [1921, 5, 1, "", "prepare_n_shadows_model"], [1921, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1921, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1921, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1921, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1921, 5, 1, "", "compute_cosine_similarity"], [1921, 5, 1, "", "compute_normalized_l2_error"], [1921, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1902, 0, 0, "-", "scheduler"], [1902, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[779, 1, 1, "", "DeQuantStub"], [780, 1, 1, "", "QuantStub"], [781, 1, 1, "", "QuantWrapper"], [782, 1, 1, "", "add_quant_dequant"], [1902, 0, 0, "-", "backend_config"], [788, 1, 1, "", "convert"], [789, 1, 1, "", "default_eval_fn"], [805, 1, 1, "", "fuse_modules"], [1902, 0, 0, "-", "fx"], [829, 1, 1, "", "prepare"], [830, 1, 1, "", "prepare_qat"], [831, 1, 1, "", "propagate_qconfig_"], [848, 1, 1, "", "quantize"], [849, 1, 1, "", "quantize_dynamic"], [854, 1, 1, "", "quantize_qat"], [855, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[783, 1, 1, "", "BackendConfig"], [784, 1, 1, "", "BackendPatternConfig"], [785, 1, 1, "", "DTypeConfig"], [786, 1, 1, "", "DTypeWithConstraints"], [787, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[783, 4, 1, "", "configs"], [783, 3, 1, "", "from_dict"], [783, 3, 1, "", "set_backend_pattern_config"], [783, 3, 1, "", "set_backend_pattern_configs"], [783, 3, 1, "", "set_name"], [783, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[784, 3, 1, "", "add_dtype_config"], [784, 3, 1, "", "from_dict"], [784, 3, 1, "", "set_dtype_configs"], [784, 3, 1, "", "set_fused_module"], [784, 3, 1, "", "set_fuser_method"], [784, 3, 1, "", "set_observation_type"], [784, 3, 1, "", "set_pattern"], [784, 3, 1, "", "set_qat_module"], [784, 3, 1, "", "set_reference_quantized_module"], [784, 3, 1, "", "set_root_module"], [784, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[785, 3, 1, "", "from_dict"], [785, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[787, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [787, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [787, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[790, 1, 1, "", "FakeQuantize"], [791, 1, 1, "", "FakeQuantizeBase"], [792, 1, 1, "", "FixedQParamsFakeQuantize"], [793, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [794, 2, 1, "", "default_fake_quant"], [795, 2, 1, "", "default_fused_act_fake_quant"], [796, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [797, 2, 1, "", "default_fused_wt_fake_quant"], [798, 2, 1, "", "default_histogram_fake_quant"], [799, 2, 1, "", "default_per_channel_weight_fake_quant"], [800, 2, 1, "", "default_weight_fake_quant"], [801, 1, 1, "", "disable_fake_quant"], [802, 1, 1, "", "disable_observer"], [803, 1, 1, "", "enable_fake_quant"], [804, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[806, 1, 1, "", "ConvertCustomConfig"], [807, 1, 1, "", "FuseCustomConfig"], [808, 1, 1, "", "PrepareCustomConfig"], [809, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[806, 3, 1, "", "from_dict"], [806, 3, 1, "", "set_observed_to_quantized_mapping"], [806, 3, 1, "", "set_preserved_attributes"], [806, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[807, 3, 1, "", "from_dict"], [807, 3, 1, "", "set_preserved_attributes"], [807, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[808, 3, 1, "", "from_dict"], [808, 3, 1, "", "set_float_to_observed_mapping"], [808, 3, 1, "", "set_input_quantized_indexes"], [808, 3, 1, "", "set_non_traceable_module_classes"], [808, 3, 1, "", "set_non_traceable_module_names"], [808, 3, 1, "", "set_output_quantized_indexes"], [808, 3, 1, "", "set_preserved_attributes"], [808, 3, 1, "", "set_standalone_module_class"], [808, 3, 1, "", "set_standalone_module_name"], [808, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[810, 1, 1, "", "HistogramObserver"], [811, 1, 1, "", "MinMaxObserver"], [812, 1, 1, "", "MovingAverageMinMaxObserver"], [813, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [814, 1, 1, "", "NoopObserver"], [815, 1, 1, "", "ObserverBase"], [816, 1, 1, "", "PerChannelMinMaxObserver"], [817, 1, 1, "", "PlaceholderObserver"], [818, 1, 1, "", "RecordingObserver"], [819, 2, 1, "", "default_debug_observer"], [820, 2, 1, "", "default_dynamic_quant_observer"], [821, 2, 1, "", "default_float_qparams_observer"], [822, 2, 1, "", "default_histogram_observer"], [823, 2, 1, "", "default_observer"], [824, 2, 1, "", "default_per_channel_weight_observer"], [825, 2, 1, "", "default_placeholder_observer"], [826, 2, 1, "", "default_weight_observer"], [827, 1, 1, "", "get_observer_state_dict"], [828, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[811, 3, 1, "", "calculate_qparams"], [811, 3, 1, "", "forward"], [811, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[815, 3, 1, "", "with_args"], [815, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[816, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.qconfig": [[832, 1, 1, "", "QConfig"], [833, 2, 1, "", "default_activation_only_qconfig"], [834, 2, 1, "", "default_debug_qconfig"], [835, 2, 1, "", "default_dynamic_qconfig"], [836, 2, 1, "", "default_per_channel_qconfig"], [837, 2, 1, "", "default_qat_qconfig"], [838, 2, 1, "", "default_qat_qconfig_v2"], [839, 2, 1, "", "default_qconfig"], [840, 2, 1, "", "default_weight_only_qconfig"], [841, 2, 1, "", "float16_dynamic_qconfig"], [842, 2, 1, "", "float16_static_qconfig"], [843, 2, 1, "", "float_qparams_weight_only_qconfig"], [844, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[845, 1, 1, "", "QConfigMapping"], [846, 1, 1, "", "get_default_qat_qconfig_mapping"], [847, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[845, 3, 1, "", "from_dict"], [845, 3, 1, "", "set_global"], [845, 3, 1, "", "set_module_name"], [845, 3, 1, "", "set_module_name_object_type_order"], [845, 3, 1, "", "set_module_name_regex"], [845, 3, 1, "", "set_object_type"], [845, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[850, 1, 1, "", "convert_fx"], [851, 1, 1, "", "fuse_fx"], [852, 1, 1, "", "prepare_fx"], [853, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[2, 1, 1, "", "Function"], [884, 5, 1, "", "backward"], [2, 1, 1, "", "detect_anomaly"], [898, 5, 1, "", "grad"], [899, 5, 1, "", "gradcheck"], [900, 5, 1, "", "gradgradcheck"], [2, 1, 1, "", "set_detect_anomaly"], [911, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.Function": [[880, 3, 1, "", "backward"], [881, 3, 1, "", "forward"], [882, 3, 1, "", "jvp"], [883, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[885, 1, 1, "", "dual_level"], [886, 5, 1, "", "make_dual"], [887, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[888, 3, 1, "", "mark_dirty"], [889, 3, 1, "", "mark_non_differentiable"], [890, 3, 1, "", "save_for_backward"], [891, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[892, 5, 1, "", "hessian"], [893, 5, 1, "", "hvp"], [894, 5, 1, "", "jacobian"], [895, 5, 1, "", "jvp"], [896, 5, 1, "", "vhp"], [897, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[901, 3, 1, "", "metadata"], [902, 3, 1, "", "name"], [903, 4, 1, "", "next_functions"], [904, 3, 1, "", "register_hook"], [905, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[2, 1, 1, "", "allow_mutation_on_saved_tensors"], [2, 1, 1, "", "disable_saved_tensors_hooks"], [2, 1, 1, "", "register_multi_grad_hook"], [2, 1, 1, "", "save_on_cpu"], [2, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[2, 1, 1, "", "emit_itt"], [2, 1, 1, "", "emit_nvtx"], [906, 5, 1, "", "load_nvprof"], [2, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[907, 3, 1, "", "export_chrome_trace"], [908, 3, 1, "", "key_averages"], [909, 4, 1, "", "self_cpu_time_total"], [910, 3, 1, "", "total_average"]], "torch.backends": [[3, 0, 0, "-", "cpu"], [3, 0, 0, "-", "cuda"], [3, 0, 0, "-", "cudnn"], [3, 0, 0, "-", "mkl"], [3, 0, 0, "-", "mkldnn"], [3, 0, 0, "-", "mps"], [3, 0, 0, "-", "openmp"], [3, 0, 0, "-", "opt_einsum"], [3, 0, 0, "-", "quantized"], [3, 0, 0, "-", "xeon"], [3, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[3, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[3, 1, 1, "", "SDPBackend"], [3, 3, 1, "", "clear"], [3, 5, 1, "", "enable_flash_sdp"], [3, 5, 1, "", "enable_math_sdp"], [3, 5, 1, "", "enable_mem_efficient_sdp"], [3, 5, 1, "", "flash_sdp_enabled"], [3, 5, 1, "", "is_built"], [3, 5, 1, "", "math_sdp_enabled"], [3, 2, 1, "", "max_size"], [3, 5, 1, "", "mem_efficient_sdp_enabled"], [3, 5, 1, "", "preferred_linalg_library"], [3, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.torch.backends.cuda": [[3, 2, 1, "", "cufft_plan_cache"], [3, 2, 1, "", "size"]], "torch.backends.cuda.torch.backends.cuda.matmul": [[3, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [3, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [3, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[3, 5, 1, "", "is_available"], [3, 5, 1, "", "version"]], "torch.backends.cudnn.torch.backends.cudnn": [[3, 2, 1, "", "allow_tf32"], [3, 2, 1, "", "benchmark"], [3, 2, 1, "", "benchmark_limit"], [3, 2, 1, "", "deterministic"], [3, 2, 1, "", "enabled"]], "torch.backends.mkl": [[3, 5, 1, "", "is_available"], [3, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[3, 5, 1, "", "is_available"], [3, 1, 1, "", "verbose"]], "torch.backends.mps": [[3, 5, 1, "", "is_available"], [3, 5, 1, "", "is_built"]], "torch.backends.openmp": [[3, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[3, 5, 1, "", "get_opt_einsum"], [3, 5, 1, "", "is_available"]], "torch.backends.opt_einsum.torch.backends.opt_einsum": [[3, 2, 1, "", "enabled"], [3, 2, 1, "", "strategy"]], "torch.cpu": [[1, 0, 0, "-", "amp"]], "torch.cpu.amp": [[1, 1, 1, "", "autocast"]], "torch.cuda": [[958, 1, 1, "", "CUDAGraph"], [959, 1, 1, "", "CUDAPluggableAllocator"], [960, 1, 1, "", "Event"], [961, 1, 1, "", "ExternalStream"], [962, 6, 1, "", "OutOfMemoryError"], [963, 1, 1, "", "Stream"], [964, 1, 1, "", "StreamContext"], [29, 0, 0, "-", "_sanitizer"], [1, 0, 0, "-", "amp"], [965, 5, 1, "", "caching_allocator_alloc"], [966, 5, 1, "", "caching_allocator_delete"], [967, 5, 1, "", "can_device_access_peer"], [968, 5, 1, "", "change_current_allocator"], [969, 5, 1, "", "clock_rate"], [975, 5, 1, "", "current_blas_handle"], [976, 5, 1, "", "current_device"], [977, 5, 1, "", "current_stream"], [978, 5, 1, "", "default_stream"], [979, 1, 1, "", "device"], [980, 5, 1, "", "device_count"], [981, 1, 1, "", "device_of"], [982, 5, 1, "", "empty_cache"], [983, 5, 1, "", "get_allocator_backend"], [984, 5, 1, "", "get_arch_list"], [985, 5, 1, "", "get_device_capability"], [986, 5, 1, "", "get_device_name"], [987, 5, 1, "", "get_device_properties"], [988, 5, 1, "", "get_gencode_flags"], [989, 5, 1, "", "get_rng_state"], [990, 5, 1, "", "get_rng_state_all"], [991, 5, 1, "", "get_sync_debug_mode"], [992, 1, 1, "", "graph"], [993, 5, 1, "", "graph_pool_handle"], [994, 5, 1, "", "init"], [995, 5, 1, "", "initial_seed"], [996, 5, 1, "", "ipc_collect"], [997, 5, 1, "", "is_available"], [998, 5, 1, "", "is_current_stream_capturing"], [999, 5, 1, "", "is_initialized"], [1002, 5, 1, "", "list_gpu_processes"], [1003, 5, 1, "", "make_graphed_callables"], [1004, 5, 1, "", "manual_seed"], [1005, 5, 1, "", "manual_seed_all"], [1006, 5, 1, "", "max_memory_allocated"], [1007, 5, 1, "", "max_memory_cached"], [1008, 5, 1, "", "max_memory_reserved"], [1009, 5, 1, "", "mem_get_info"], [1010, 5, 1, "", "memory_allocated"], [1011, 5, 1, "", "memory_cached"], [1012, 5, 1, "", "memory_reserved"], [1013, 5, 1, "", "memory_snapshot"], [1014, 5, 1, "", "memory_stats"], [1015, 5, 1, "", "memory_summary"], [1016, 5, 1, "", "memory_usage"], [1020, 5, 1, "", "power_draw"], [1021, 5, 1, "", "reset_max_memory_allocated"], [1022, 5, 1, "", "reset_max_memory_cached"], [1023, 5, 1, "", "reset_peak_memory_stats"], [1024, 5, 1, "", "seed"], [1025, 5, 1, "", "seed_all"], [1026, 5, 1, "", "set_device"], [1027, 5, 1, "", "set_per_process_memory_fraction"], [1028, 5, 1, "", "set_rng_state"], [1029, 5, 1, "", "set_rng_state_all"], [1030, 5, 1, "", "set_stream"], [1031, 5, 1, "", "set_sync_debug_mode"], [1032, 5, 1, "", "stream"], [1033, 5, 1, "", "synchronize"], [1034, 5, 1, "", "temperature"], [1035, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[958, 3, 1, "", "capture_begin"], [958, 3, 1, "", "capture_end"], [958, 3, 1, "", "debug_dump"], [958, 3, 1, "", "enable_debug_mode"], [958, 3, 1, "", "pool"], [958, 3, 1, "", "replay"], [958, 3, 1, "", "reset"]], "torch.cuda.Event": [[960, 3, 1, "", "elapsed_time"], [960, 3, 1, "", "from_ipc_handle"], [960, 3, 1, "", "ipc_handle"], [960, 3, 1, "", "query"], [960, 3, 1, "", "record"], [960, 3, 1, "", "synchronize"], [960, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[961, 3, 1, "", "query"], [961, 3, 1, "", "record_event"], [961, 3, 1, "", "synchronize"], [961, 3, 1, "", "wait_event"], [961, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[963, 3, 1, "", "query"], [963, 3, 1, "", "record_event"], [963, 3, 1, "", "synchronize"], [963, 3, 1, "", "wait_event"], [963, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[29, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[1, 1, 1, "", "GradScaler"], [1, 1, 1, "", "autocast"], [1, 5, 1, "", "custom_bwd"], [1, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[1, 3, 1, "", "get_backoff_factor"], [1, 3, 1, "", "get_growth_factor"], [1, 3, 1, "", "get_growth_interval"], [1, 3, 1, "", "get_scale"], [1, 3, 1, "", "is_enabled"], [1, 3, 1, "", "load_state_dict"], [1, 3, 1, "", "scale"], [1, 3, 1, "", "set_backoff_factor"], [1, 3, 1, "", "set_growth_factor"], [1, 3, 1, "", "set_growth_interval"], [1, 3, 1, "", "state_dict"], [1, 3, 1, "", "step"], [1, 3, 1, "", "unscale_"], [1, 3, 1, "", "update"]], "torch.cuda.comm": [[970, 5, 1, "", "broadcast"], [971, 5, 1, "", "broadcast_coalesced"], [972, 5, 1, "", "gather"], [973, 5, 1, "", "reduce_add"], [974, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1000, 5, 1, "", "_create_jit_fn"], [1001, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.nvtx": [[1017, 5, 1, "", "mark"], [1018, 5, 1, "", "range_pop"], [1019, 5, 1, "", "range_push"]], "torch.distributed": [[35, 1, 1, "", "Backend"], [35, 1, 1, "", "DistBackendError"], [35, 1, 1, "", "FileStore"], [33, 1, 1, "", "GradBucket"], [35, 1, 1, "", "HashStore"], [35, 1, 1, "", "P2POp"], [35, 1, 1, "", "PrefixStore"], [35, 1, 1, "", "ReduceOp"], [35, 1, 1, "", "Store"], [35, 1, 1, "", "TCPStore"], [35, 0, 0, "-", "algorithms"], [35, 5, 1, "", "all_gather"], [35, 5, 1, "", "all_gather_into_tensor"], [35, 5, 1, "", "all_gather_multigpu"], [35, 5, 1, "", "all_gather_object"], [35, 5, 1, "", "all_reduce"], [35, 5, 1, "", "all_reduce_multigpu"], [35, 5, 1, "", "all_to_all"], [35, 5, 1, "", "all_to_all_single"], [1907, 0, 0, "-", "autograd"], [35, 5, 1, "", "barrier"], [35, 5, 1, "", "batch_isend_irecv"], [35, 5, 1, "", "broadcast"], [35, 5, 1, "", "broadcast_multigpu"], [35, 5, 1, "", "broadcast_object_list"], [37, 0, 0, "-", "checkpoint"], [35, 0, 0, "-", "elastic"], [57, 0, 0, "-", "fsdp"], [35, 5, 1, "", "gather"], [35, 5, 1, "", "gather_object"], [35, 5, 1, "", "get_backend"], [35, 5, 1, "", "get_global_rank"], [35, 5, 1, "", "get_group_rank"], [35, 5, 1, "", "get_process_group_ranks"], [35, 5, 1, "", "get_rank"], [35, 5, 1, "", "get_world_size"], [35, 5, 1, "", "init_process_group"], [35, 5, 1, "", "irecv"], [35, 5, 1, "", "is_available"], [35, 5, 1, "", "is_gloo_available"], [35, 5, 1, "", "is_initialized"], [35, 5, 1, "", "is_mpi_available"], [35, 5, 1, "", "is_nccl_available"], [35, 5, 1, "", "is_torchelastic_launched"], [35, 5, 1, "", "isend"], [35, 0, 0, "-", "launch"], [35, 0, 0, "-", "launcher"], [35, 5, 1, "", "monitored_barrier"], [35, 5, 1, "", "new_group"], [35, 0, 0, "-", "nn"], [39, 0, 0, "-", "optim"], [35, 0, 0, "-", "pipeline"], [35, 5, 1, "", "recv"], [35, 5, 1, "", "reduce"], [35, 5, 1, "", "reduce_multigpu"], [35, 1, 1, "", "reduce_op"], [35, 5, 1, "", "reduce_scatter"], [35, 5, 1, "", "reduce_scatter_multigpu"], [35, 5, 1, "", "reduce_scatter_tensor"], [1907, 0, 0, "-", "rpc"], [53, 0, 0, "-", "run"], [35, 5, 1, "", "scatter"], [35, 5, 1, "", "scatter_object_list"], [35, 5, 1, "", "send"], [35, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[35, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[33, 5, 1, "", "buffer"], [33, 5, 1, "", "gradients"], [33, 5, 1, "", "index"], [33, 5, 1, "", "is_last"], [33, 5, 1, "", "parameters"], [33, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[35, 5, 1, "", "add"], [35, 5, 1, "", "compare_set"], [35, 5, 1, "", "delete_key"], [35, 5, 1, "", "get"], [35, 5, 1, "", "num_keys"], [35, 5, 1, "", "set"], [35, 5, 1, "", "set_timeout"], [35, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[36, 1, 1, "", "Join"], [36, 1, 1, "", "JoinHook"], [36, 1, 1, "", "Joinable"], [35, 0, 0, "-", "ddp_comm_hooks"], [35, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[36, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[36, 3, 1, "", "main_hook"], [36, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[36, 4, 1, "", "join_device"], [36, 3, 1, "", "join_hook"], [36, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[33, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[33, 5, 1, "", "allreduce_hook"], [33, 5, 1, "", "bf16_compress_hook"], [33, 5, 1, "", "bf16_compress_wrapper"], [33, 5, 1, "", "fp16_compress_hook"], [33, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[33, 1, 1, "", "PowerSGDState"], [33, 5, 1, "", "batched_powerSGD_hook"], [33, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[33, 3, 1, "", "__getstate__"], [33, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1907, 5, 1, "", "backward"], [1907, 1, 1, "", "context"], [1907, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[37, 1, 1, "", "DefaultLoadPlanner"], [37, 1, 1, "", "DefaultSavePlanner"], [37, 1, 1, "", "FileSystemReader"], [37, 1, 1, "", "FileSystemWriter"], [37, 1, 1, "", "LoadPlan"], [37, 1, 1, "", "LoadPlanner"], [37, 1, 1, "", "ReadItem"], [37, 1, 1, "", "SavePlan"], [37, 1, 1, "", "SavePlanner"], [37, 1, 1, "", "StorageReader"], [37, 1, 1, "", "StorageWriter"], [37, 1, 1, "", "WriteItem"], [37, 5, 1, "", "load_state_dict"], [37, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[37, 3, 1, "", "lookup_tensor"], [37, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[37, 3, 1, "", "lookup_object"], [37, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[37, 3, 1, "", "commit_tensor"], [37, 3, 1, "", "create_global_plan"], [37, 3, 1, "", "create_local_plan"], [37, 3, 1, "", "finish_plan"], [37, 3, 1, "", "load_bytes"], [37, 3, 1, "", "resolve_tensor"], [37, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[37, 3, 1, "", "create_global_plan"], [37, 3, 1, "", "create_local_plan"], [37, 3, 1, "", "finish_plan"], [37, 3, 1, "", "resolve_data"], [37, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[37, 3, 1, "", "prepare_global_plan"], [37, 3, 1, "", "prepare_local_plan"], [37, 3, 1, "", "read_data"], [37, 3, 1, "", "read_metadata"], [37, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[37, 3, 1, "", "finish"], [37, 3, 1, "", "prepare_global_plan"], [37, 3, 1, "", "prepare_local_plan"], [37, 3, 1, "", "set_up_storage_writer"], [37, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[43, 0, 0, "-", "agent"], [46, 0, 0, "-", "events"], [49, 0, 0, "-", "metrics"], [50, 0, 0, "-", "multiprocessing"], [52, 0, 0, "-", "rendezvous"], [54, 0, 0, "-", "timer"], [35, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[43, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[43, 1, 1, "", "ElasticAgent"], [43, 1, 1, "", "SimpleElasticAgent"], [43, 1, 1, "", "Worker"], [43, 1, 1, "", "WorkerGroup"], [43, 1, 1, "", "WorkerSpec"], [43, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[43, 3, 1, "", "get_worker_group"], [43, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[43, 3, 1, "", "_assign_worker_ranks"], [43, 3, 1, "", "_exit_barrier"], [43, 3, 1, "", "_initialize_workers"], [43, 3, 1, "", "_monitor_workers"], [43, 3, 1, "", "_rendezvous"], [43, 3, 1, "", "_restart_workers"], [43, 3, 1, "", "_shutdown"], [43, 3, 1, "", "_start_workers"], [43, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[43, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[43, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[43, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[43, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[46, 1, 1, "", "Event"], [46, 2, 1, "", "EventMetadataValue"], [46, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[46, 5, 1, "", "get_logging_handler"], [46, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[49, 1, 1, "", "ConsoleMetricHandler"], [49, 1, 1, "", "MetricHandler"], [49, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[49, 5, 1, "", "configure"], [49, 5, 1, "", "prof"], [49, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[50, 1, 1, "", "MultiprocessContext"], [50, 1, 1, "", "PContext"], [50, 1, 1, "", "RunProcsResult"], [50, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[45, 0, 0, "-", "errors"], [50, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[45, 1, 1, "", "ChildFailedError"], [45, 1, 1, "", "ErrorHandler"], [45, 1, 1, "", "ProcessFailure"], [45, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[52, 1, 1, "", "RendezvousClosedError"], [52, 1, 1, "", "RendezvousConnectionError"], [52, 1, 1, "", "RendezvousError"], [52, 1, 1, "", "RendezvousHandler"], [52, 1, 1, "", "RendezvousHandlerRegistry"], [52, 1, 1, "", "RendezvousParameters"], [52, 1, 1, "", "RendezvousStateError"], [52, 1, 1, "", "RendezvousTimeoutError"], [52, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[52, 3, 1, "", "get_backend"], [52, 3, 1, "", "get_run_id"], [52, 3, 1, "", "is_closed"], [52, 3, 1, "", "next_rendezvous"], [52, 3, 1, "", "num_nodes_waiting"], [52, 3, 1, "", "set_closed"], [52, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[52, 3, 1, "", "create_handler"], [52, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[52, 3, 1, "", "get"], [52, 3, 1, "", "get_as_bool"], [52, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[52, 1, 1, "", "C10dRendezvousBackend"], [52, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[52, 3, 1, "", "get_state"], [52, 4, 1, "", "name"], [52, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[52, 1, 1, "", "DynamicRendezvousHandler"], [52, 1, 1, "", "RendezvousBackend"], [52, 1, 1, "", "RendezvousTimeout"], [52, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[52, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[52, 3, 1, "", "get_state"], [52, 4, 1, "", "name"], [52, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[52, 4, 1, "", "close"], [52, 4, 1, "", "heartbeat"], [52, 4, 1, "", "join"], [52, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[52, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[52, 1, 1, "", "EtcdRendezvousBackend"], [52, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[52, 3, 1, "", "get_state"], [52, 4, 1, "", "name"], [52, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[52, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[52, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[52, 3, 1, "", "add"], [52, 3, 1, "", "check"], [52, 3, 1, "", "get"], [52, 3, 1, "", "set"], [52, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[54, 1, 1, "", "FileTimerClient"], [54, 1, 1, "", "FileTimerServer"], [54, 1, 1, "", "LocalTimerClient"], [54, 1, 1, "", "LocalTimerServer"], [54, 1, 1, "", "TimerClient"], [54, 1, 1, "", "TimerRequest"], [54, 1, 1, "", "TimerServer"], [54, 5, 1, "", "configure"], [54, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[54, 3, 1, "", "acquire"], [54, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[54, 3, 1, "", "clear_timers"], [54, 3, 1, "", "get_expired_timers"], [54, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[35, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[57, 1, 1, "", "BackwardPrefetch"], [57, 1, 1, "", "CPUOffload"], [57, 1, 1, "", "FullyShardedDataParallel"], [57, 1, 1, "", "MixedPrecision"], [57, 1, 1, "", "ShardingStrategy"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[57, 3, 1, "", "apply"], [57, 3, 1, "", "clip_grad_norm_"], [57, 3, 1, "", "flatten_sharded_optim_state_dict"], [57, 3, 1, "", "forward"], [57, 3, 1, "", "fsdp_modules"], [57, 3, 1, "", "full_optim_state_dict"], [57, 3, 1, "", "load_optim_state_dict_pre_hook"], [57, 4, 1, "", "module"], [57, 3, 1, "", "named_buffers"], [57, 3, 1, "", "named_parameters"], [57, 3, 1, "", "no_sync"], [57, 3, 1, "", "optim_state_dict"], [57, 3, 1, "", "optim_state_dict_post_hook"], [57, 3, 1, "", "optim_state_dict_to_load"], [57, 3, 1, "", "register_comm_hook"], [57, 3, 1, "", "rekey_optim_state_dict"], [57, 3, 1, "", "scatter_full_optim_state_dict"], [57, 3, 1, "", "set_state_dict_type"], [57, 3, 1, "", "shard_full_optim_state_dict"], [57, 3, 1, "", "sharded_optim_state_dict"], [57, 3, 1, "", "state_dict_type"], [57, 3, 1, "", "summon_full_params"]], "torch.distributed.nn": [[35, 0, 0, "-", "api"], [35, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1907, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1907, 3, 1, "", "get_module_rref"], [1907, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[35, 0, 0, "-", "templates"]], "torch.distributed.optim": [[39, 1, 1, "", "DistributedOptimizer"], [39, 1, 1, "", "PostLocalSGDOptimizer"], [39, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[39, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[39, 3, 1, "", "load_state_dict"], [39, 3, 1, "", "state_dict"], [39, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[39, 3, 1, "", "add_param_group"], [39, 3, 1, "", "consolidate_state_dict"], [39, 3, 1, "", "join_hook"], [39, 3, 1, "", "load_state_dict"], [39, 3, 1, "", "state_dict"], [39, 3, 1, "", "step"]], "torch.distributed.pipeline": [[35, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1900, 1, 1, "", "Pipe"], [35, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1900, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1900, 1, 1, "", "pop"], [1900, 5, 1, "", "skippable"], [1900, 1, 1, "", "stash"], [1900, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1907, 1, 1, "", "BackendType"], [1907, 1, 1, "", "RRef"], [1907, 1, 1, "", "RpcBackendOptions"], [1907, 1, 1, "", "TensorPipeRpcBackendOptions"], [1907, 1, 1, "", "WorkerInfo"], [1907, 5, 1, "", "get_worker_info"], [1907, 5, 1, "", "init_rpc"], [1907, 5, 1, "", "remote"], [1907, 5, 1, "", "rpc_async"], [1907, 5, 1, "", "rpc_sync"], [1907, 5, 1, "", "shutdown"]], "torch.distributed.rpc.RpcBackendOptions": [[1907, 4, 1, "", "init_method"], [1907, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1907, 4, 1, "", "device_maps"], [1907, 4, 1, "", "devices"], [1907, 4, 1, "", "init_method"], [1907, 4, 1, "", "num_worker_threads"], [1907, 4, 1, "", "rpc_timeout"], [1907, 3, 1, "", "set_device_map"], [1907, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1907, 4, 1, "", "id"], [1907, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1907, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[40, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.fsdp": [[40, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel.multihead_attention_tp": [[40, 1, 1, "", "TensorParallelMultiheadAttention"]], "torch.distributed.tensor.parallel": [[40, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[40, 1, 1, "", "ColwiseParallel"], [40, 1, 1, "", "PairwiseParallel"], [40, 1, 1, "", "RowwiseParallel"], [40, 1, 1, "", "SequenceParallel"], [40, 5, 1, "", "make_input_replicate_1d"], [40, 5, 1, "", "make_input_reshard_replicate"], [40, 5, 1, "", "make_input_shard_1d"], [40, 5, 1, "", "make_input_shard_1d_last_dim"], [40, 5, 1, "", "make_output_replicate_1d"], [40, 5, 1, "", "make_output_reshard_tensor"], [40, 5, 1, "", "make_output_shard_1d"], [40, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[41, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_enumerate_support"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.beta": [[41, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[41, 2, 1, "", "arg_constraints"], [41, 4, 1, "", "concentration0"], [41, 4, 1, "", "concentration1"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.binomial": [[41, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_enumerate_support"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.categorical": [[41, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_enumerate_support"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[41, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.chi2": [[41, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[41, 2, 1, "", "arg_constraints"], [41, 4, 1, "", "df"], [41, 3, 1, "", "expand"]], "torch.distributions": [[41, 0, 0, "-", "constraint_registry"], [41, 0, 0, "-", "constraints"], [41, 0, 0, "-", "kl"], [41, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[41, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[41, 3, 1, "", "register"]], "torch.distributions.constraints": [[41, 1, 1, "", "Constraint"], [41, 2, 1, "", "cat"], [41, 2, 1, "", "dependent_property"], [41, 2, 1, "", "greater_than"], [41, 2, 1, "", "greater_than_eq"], [41, 2, 1, "", "half_open_interval"], [41, 2, 1, "", "independent"], [41, 2, 1, "", "integer_interval"], [41, 2, 1, "", "interval"], [41, 2, 1, "", "less_than"], [41, 2, 1, "", "multinomial"], [41, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[41, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[41, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "rsample"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "stddev"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[41, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.distribution": [[41, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[41, 4, 1, "", "arg_constraints"], [41, 4, 1, "", "batch_shape"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 4, 1, "", "event_shape"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "perplexity"], [41, 3, 1, "", "rsample"], [41, 3, 1, "", "sample"], [41, 3, 1, "", "sample_n"], [41, 3, 1, "", "set_default_validate_args"], [41, 4, 1, "", "stddev"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[41, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[41, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[41, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "stddev"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[41, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.gamma": [[41, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.geometric": [[41, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[41, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "stddev"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[41, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "scale"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[41, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "scale"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.independent": [[41, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 3, 1, "", "expand"], [41, 4, 1, "", "has_enumerate_support"], [41, 4, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.kl": [[41, 5, 1, "", "kl_divergence"], [41, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[41, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.laplace": [[41, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "stddev"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[41, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"]], "torch.distributions.log_normal": [[41, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 4, 1, "", "loc"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "scale"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[41, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[41, 2, 1, "", "arg_constraints"], [41, 4, 1, "", "covariance_matrix"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "precision_matrix"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "scale_tril"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[41, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 4, 1, "", "component_distribution"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mixture_distribution"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[41, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"], [41, 2, 1, "", "total_count"], [41, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[41, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[41, 2, 1, "", "arg_constraints"], [41, 4, 1, "", "covariance_matrix"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "precision_matrix"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "scale_tril"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[41, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.normal": [[41, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "stddev"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[41, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_enumerate_support"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.pareto": [[41, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.poisson": [[41, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[41, 1, 1, "", "LogitRelaxedBernoulli"], [41, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "probs"], [41, 2, 1, "", "support"], [41, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[41, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "probs"], [41, 2, 1, "", "support"], [41, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[41, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[41, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "expand"], [41, 4, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 3, 1, "", "rsample"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"]], "torch.distributions.transforms": [[41, 1, 1, "", "AbsTransform"], [41, 1, 1, "", "AffineTransform"], [41, 1, 1, "", "CatTransform"], [41, 1, 1, "", "ComposeTransform"], [41, 1, 1, "", "CorrCholeskyTransform"], [41, 1, 1, "", "CumulativeDistributionTransform"], [41, 1, 1, "", "ExpTransform"], [41, 1, 1, "", "IndependentTransform"], [41, 1, 1, "", "LowerCholeskyTransform"], [41, 1, 1, "", "PositiveDefiniteTransform"], [41, 1, 1, "", "PowerTransform"], [41, 1, 1, "", "ReshapeTransform"], [41, 1, 1, "", "SigmoidTransform"], [41, 1, 1, "", "SoftmaxTransform"], [41, 1, 1, "", "SoftplusTransform"], [41, 1, 1, "", "StackTransform"], [41, 1, 1, "", "StickBreakingTransform"], [41, 1, 1, "", "TanhTransform"], [41, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[41, 3, 1, "", "forward_shape"], [41, 4, 1, "", "inv"], [41, 3, 1, "", "inverse_shape"], [41, 3, 1, "", "log_abs_det_jacobian"], [41, 4, 1, "", "sign"]], "torch.distributions.uniform": [[41, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "stddev"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[41, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.weibull": [[41, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.wishart": [[41, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[41, 2, 1, "", "arg_constraints"], [41, 4, 1, "", "covariance_matrix"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "precision_matrix"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "scale_tril"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.fft": [[1073, 5, 1, "", "fft"], [1074, 5, 1, "", "fft2"], [1075, 5, 1, "", "fftfreq"], [1076, 5, 1, "", "fftn"], [1077, 5, 1, "", "fftshift"], [1078, 5, 1, "", "hfft"], [1079, 5, 1, "", "hfft2"], [1080, 5, 1, "", "hfftn"], [1081, 5, 1, "", "ifft"], [1082, 5, 1, "", "ifft2"], [1083, 5, 1, "", "ifftn"], [1084, 5, 1, "", "ifftshift"], [1085, 5, 1, "", "ihfft"], [1086, 5, 1, "", "ihfft2"], [1087, 5, 1, "", "ihfftn"], [1088, 5, 1, "", "irfft"], [1089, 5, 1, "", "irfft2"], [1090, 5, 1, "", "irfftn"], [1091, 5, 1, "", "rfft"], [1092, 5, 1, "", "rfft2"], [1093, 5, 1, "", "rfftfreq"], [1094, 5, 1, "", "rfftn"]], "torch.func": [[1113, 5, 1, "", "functional_call"], [1114, 5, 1, "", "functionalize"], [1115, 5, 1, "", "grad"], [1116, 5, 1, "", "grad_and_value"], [1117, 5, 1, "", "hessian"], [1118, 5, 1, "", "jacfwd"], [1119, 5, 1, "", "jacrev"], [1120, 5, 1, "", "jvp"], [1121, 5, 1, "", "linearize"], [1122, 5, 1, "", "replace_all_batch_norm_modules_"], [1123, 5, 1, "", "stack_module_state"], [1124, 5, 1, "", "vjp"], [1125, 5, 1, "", "vmap"]], "torch.futures": [[64, 1, 1, "", "Future"], [64, 5, 1, "", "collect_all"], [64, 5, 1, "", "wait_all"]], "torch.futures.Future": [[64, 3, 1, "", "add_done_callback"], [64, 3, 1, "", "done"], [64, 3, 1, "", "set_exception"], [64, 3, 1, "", "set_result"], [64, 3, 1, "", "then"], [64, 3, 1, "", "value"], [64, 3, 1, "", "wait"]], "torch.fx": [[65, 1, 1, "", "Graph"], [65, 1, 1, "", "GraphModule"], [65, 1, 1, "", "Interpreter"], [65, 1, 1, "", "Node"], [65, 1, 1, "", "Proxy"], [65, 1, 1, "", "Tracer"], [65, 1, 1, "", "Transformer"], [65, 0, 0, "-", "experimental"], [65, 0, 0, "-", "passes"], [65, 5, 1, "", "replace_pattern"], [65, 5, 1, "", "symbolic_trace"], [65, 5, 1, "", "wrap"]], "torch.fx.Graph": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "call_function"], [65, 3, 1, "", "call_method"], [65, 3, 1, "", "call_module"], [65, 3, 1, "", "create_node"], [65, 3, 1, "", "eliminate_dead_code"], [65, 3, 1, "", "erase_node"], [65, 3, 1, "", "get_attr"], [65, 3, 1, "", "graph_copy"], [65, 3, 1, "", "inserting_after"], [65, 3, 1, "", "inserting_before"], [65, 3, 1, "", "lint"], [65, 3, 1, "", "node_copy"], [65, 4, 1, "", "nodes"], [65, 3, 1, "", "on_generate_code"], [65, 3, 1, "", "output"], [65, 3, 1, "", "placeholder"], [65, 3, 1, "", "print_tabular"], [65, 3, 1, "", "process_inputs"], [65, 3, 1, "", "process_outputs"], [65, 3, 1, "", "python_code"], [65, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "add_submodule"], [65, 4, 1, "", "code"], [65, 3, 1, "", "delete_all_unused_submodules"], [65, 3, 1, "", "delete_submodule"], [65, 4, 1, "", "graph"], [65, 3, 1, "", "print_readable"], [65, 3, 1, "", "recompile"], [65, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[65, 3, 1, "", "boxed_run"], [65, 3, 1, "", "call_function"], [65, 3, 1, "", "call_method"], [65, 3, 1, "", "call_module"], [65, 3, 1, "", "fetch_args_kwargs_from_env"], [65, 3, 1, "", "fetch_attr"], [65, 3, 1, "", "get_attr"], [65, 3, 1, "", "map_nodes_to_values"], [65, 3, 1, "", "output"], [65, 3, 1, "", "placeholder"], [65, 3, 1, "", "run"], [65, 3, 1, "", "run_node"]], "torch.fx.Node": [[65, 4, 1, "", "all_input_nodes"], [65, 3, 1, "", "append"], [65, 4, 1, "", "args"], [65, 3, 1, "", "format_node"], [65, 3, 1, "", "is_impure"], [65, 4, 1, "", "kwargs"], [65, 4, 1, "", "next"], [65, 3, 1, "", "normalized_arguments"], [65, 3, 1, "", "prepend"], [65, 4, 1, "", "prev"], [65, 3, 1, "", "replace_all_uses_with"], [65, 3, 1, "", "replace_input_with"], [65, 4, 1, "", "stack_trace"], [65, 3, 1, "", "update_arg"], [65, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[65, 3, 1, "", "call_module"], [65, 3, 1, "", "create_arg"], [65, 3, 1, "", "create_args_for_root"], [65, 3, 1, "", "create_node"], [65, 3, 1, "", "create_proxy"], [65, 3, 1, "", "getattr"], [65, 3, 1, "", "is_leaf_module"], [65, 3, 1, "", "iter"], [65, 3, 1, "", "keys"], [65, 3, 1, "", "path_of_module"], [65, 3, 1, "", "proxy"], [65, 3, 1, "", "to_bool"], [65, 3, 1, "", "trace"]], "torch.fx.Transformer": [[65, 3, 1, "", "call_function"], [65, 3, 1, "", "call_module"], [65, 3, 1, "", "get_attr"], [65, 3, 1, "", "placeholder"], [65, 3, 1, "", "transform"]], "torch.fx.experimental": [[65, 0, 0, "-", "migrate_gradual_types"], [65, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[65, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[65, 0, 0, "-", "backends"], [65, 0, 0, "-", "dialect"], [65, 0, 0, "-", "infra"], [65, 0, 0, "-", "tests"], [65, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[65, 0, 0, "-", "common"]], "torch.hub": [[1851, 5, 1, "", "download_url_to_file"], [1851, 5, 1, "", "get_dir"], [1851, 5, 1, "", "help"], [1851, 5, 1, "", "list"], [1851, 5, 1, "", "load"], [1851, 5, 1, "", "load_state_dict_from_url"], [1851, 5, 1, "", "set_dir"]], "torch.jit": [[1182, 1, 1, "", "Attribute"], [1183, 1, 1, "", "ScriptFunction"], [1184, 1, 1, "", "ScriptModule"], [1185, 5, 1, "", "annotate"], [1186, 5, 1, "", "enable_onednn_fusion"], [1854, 5, 1, "", "export"], [1187, 5, 1, "", "fork"], [1188, 5, 1, "", "freeze"], [1189, 5, 1, "", "ignore"], [1856, 5, 1, "", "is_scripting"], [1856, 5, 1, "", "is_tracing"], [1190, 5, 1, "", "isinstance"], [1191, 5, 1, "", "load"], [1854, 0, 0, "-", "mobile"], [1192, 5, 1, "", "onednn_fusion_enabled"], [1193, 5, 1, "", "optimize_for_inference"], [1194, 5, 1, "", "save"], [1195, 5, 1, "", "script"], [1196, 5, 1, "", "script_if_tracing"], [1197, 5, 1, "", "set_fusion_strategy"], [1198, 1, 1, "", "strict_fusion"], [1855, 0, 0, "-", "supported_ops"], [1199, 5, 1, "", "trace"], [1200, 5, 1, "", "trace_module"], [1859, 0, 0, "-", "unsupported_tensor_ops"], [1201, 5, 1, "", "unused"], [1202, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1182, 3, 1, "", "count"], [1182, 3, 1, "", "index"], [1182, 2, 1, "", "type"], [1182, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1183, 3, 1, "", "get_debug_state"], [1183, 3, 1, "", "save"], [1183, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1184, 3, 1, "", "add_module"], [1184, 3, 1, "", "apply"], [1184, 3, 1, "", "bfloat16"], [1184, 3, 1, "", "buffers"], [1184, 3, 1, "", "children"], [1184, 4, 1, "", "code"], [1184, 4, 1, "", "code_with_constants"], [1184, 3, 1, "", "compile"], [1184, 3, 1, "", "cpu"], [1184, 3, 1, "", "cuda"], [1184, 3, 1, "", "double"], [1184, 3, 1, "", "eval"], [1184, 3, 1, "", "extra_repr"], [1184, 3, 1, "", "float"], [1184, 3, 1, "", "get_buffer"], [1184, 3, 1, "", "get_extra_state"], [1184, 3, 1, "", "get_parameter"], [1184, 3, 1, "", "get_submodule"], [1184, 4, 1, "", "graph"], [1184, 3, 1, "", "half"], [1184, 4, 1, "", "inlined_graph"], [1184, 3, 1, "", "ipu"], [1184, 3, 1, "", "load_state_dict"], [1184, 3, 1, "", "modules"], [1184, 3, 1, "", "named_buffers"], [1184, 3, 1, "", "named_children"], [1184, 3, 1, "", "named_modules"], [1184, 3, 1, "", "named_parameters"], [1184, 3, 1, "", "parameters"], [1184, 3, 1, "", "register_backward_hook"], [1184, 3, 1, "", "register_buffer"], [1184, 3, 1, "", "register_forward_hook"], [1184, 3, 1, "", "register_forward_pre_hook"], [1184, 3, 1, "", "register_full_backward_hook"], [1184, 3, 1, "", "register_full_backward_pre_hook"], [1184, 3, 1, "", "register_load_state_dict_post_hook"], [1184, 3, 1, "", "register_module"], [1184, 3, 1, "", "register_parameter"], [1184, 3, 1, "", "register_state_dict_pre_hook"], [1184, 3, 1, "", "requires_grad_"], [1184, 3, 1, "", "save"], [1184, 3, 1, "", "set_extra_state"], [1184, 3, 1, "", "share_memory"], [1184, 3, 1, "", "state_dict"], [1184, 3, 1, "", "to"], [1184, 3, 1, "", "to_empty"], [1184, 3, 1, "", "train"], [1184, 3, 1, "", "type"], [1184, 3, 1, "", "xpu"], [1184, 3, 1, "", "zero_grad"]], "torch.library": [[1861, 1, 1, "", "Library"]], "torch.library.Library": [[1861, 3, 1, "", "define"], [1861, 3, 1, "", "impl"]], "torch.linalg": [[1213, 5, 1, "", "cholesky"], [1214, 5, 1, "", "cholesky_ex"], [1215, 5, 1, "", "cond"], [1216, 5, 1, "", "cross"], [1217, 5, 1, "", "det"], [1218, 5, 1, "", "diagonal"], [1219, 5, 1, "", "eig"], [1220, 5, 1, "", "eigh"], [1221, 5, 1, "", "eigvals"], [1222, 5, 1, "", "eigvalsh"], [1223, 5, 1, "", "householder_product"], [1224, 5, 1, "", "inv"], [1225, 5, 1, "", "inv_ex"], [1226, 5, 1, "", "ldl_factor"], [1227, 5, 1, "", "ldl_factor_ex"], [1228, 5, 1, "", "ldl_solve"], [1229, 5, 1, "", "lstsq"], [1230, 5, 1, "", "lu"], [1231, 5, 1, "", "lu_factor"], [1232, 5, 1, "", "lu_factor_ex"], [1233, 5, 1, "", "lu_solve"], [1234, 5, 1, "", "matmul"], [1235, 5, 1, "", "matrix_exp"], [1236, 5, 1, "", "matrix_norm"], [1237, 5, 1, "", "matrix_power"], [1238, 5, 1, "", "matrix_rank"], [1239, 5, 1, "", "multi_dot"], [1240, 5, 1, "", "norm"], [1241, 5, 1, "", "pinv"], [1242, 5, 1, "", "qr"], [1243, 5, 1, "", "slogdet"], [1244, 5, 1, "", "solve"], [1245, 5, 1, "", "solve_ex"], [1246, 5, 1, "", "solve_triangular"], [1247, 5, 1, "", "svd"], [1248, 5, 1, "", "svdvals"], [1249, 5, 1, "", "tensorinv"], [1250, 5, 1, "", "tensorsolve"], [1251, 5, 1, "", "vander"], [1252, 5, 1, "", "vecdot"], [1253, 5, 1, "", "vector_norm"]], "torch.masked": [[1864, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1867, 1, 1, "", "Aggregation"], [1867, 1, 1, "", "Event"], [1867, 1, 1, "", "EventHandlerHandle"], [1867, 1, 1, "", "Stat"], [1867, 1, 1, "", "TensorboardEventHandler"], [1867, 1, 1, "", "data_value_t"], [1867, 5, 1, "", "log_event"], [1867, 5, 1, "", "register_event_handler"], [1867, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1867, 4, 1, "", "name"]], "torch.monitor.Event": [[1867, 3, 1, "", "__init__"], [1867, 4, 1, "", "data"], [1867, 4, 1, "", "name"], [1867, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1867, 3, 1, "", "__init__"], [1867, 3, 1, "", "add"], [1867, 4, 1, "", "count"], [1867, 3, 1, "", "get"], [1867, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1867, 3, 1, "", "__init__"]], "torch.mps": [[1292, 5, 1, "", "current_allocated_memory"], [1293, 5, 1, "", "driver_allocated_memory"], [1294, 5, 1, "", "empty_cache"], [1295, 5, 1, "", "get_rng_state"], [1296, 5, 1, "", "manual_seed"], [1300, 5, 1, "", "seed"], [1301, 5, 1, "", "set_per_process_memory_fraction"], [1302, 5, 1, "", "set_rng_state"], [1303, 5, 1, "", "synchronize"]], "torch.mps.profiler": [[1297, 5, 1, "", "profile"], [1298, 5, 1, "", "start"], [1299, 5, 1, "", "stop"]], "torch.multiprocessing": [[1869, 1, 1, "", "SpawnContext"], [1869, 5, 1, "", "get_all_sharing_strategies"], [1869, 5, 1, "", "get_sharing_strategy"], [1869, 5, 1, "", "set_sharing_strategy"], [1869, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1869, 3, 1, "", "join"]], "torch.nested": [[1872, 5, 1, "", "as_nested_tensor"], [1872, 5, 1, "", "nested_tensor"], [1872, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1321, 1, 1, "", "AdaptiveAvgPool1d"], [1322, 1, 1, "", "AdaptiveAvgPool2d"], [1323, 1, 1, "", "AdaptiveAvgPool3d"], [1324, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1325, 1, 1, "", "AdaptiveMaxPool1d"], [1326, 1, 1, "", "AdaptiveMaxPool2d"], [1327, 1, 1, "", "AdaptiveMaxPool3d"], [1328, 1, 1, "", "AlphaDropout"], [1329, 1, 1, "", "AvgPool1d"], [1330, 1, 1, "", "AvgPool2d"], [1331, 1, 1, "", "AvgPool3d"], [1332, 1, 1, "", "BCELoss"], [1333, 1, 1, "", "BCEWithLogitsLoss"], [1334, 1, 1, "", "BatchNorm1d"], [1335, 1, 1, "", "BatchNorm2d"], [1336, 1, 1, "", "BatchNorm3d"], [1337, 1, 1, "", "Bilinear"], [1338, 1, 1, "", "CELU"], [1339, 1, 1, "", "CTCLoss"], [1340, 1, 1, "", "ChannelShuffle"], [1341, 1, 1, "", "ConstantPad1d"], [1342, 1, 1, "", "ConstantPad2d"], [1343, 1, 1, "", "ConstantPad3d"], [1344, 1, 1, "", "Conv1d"], [1345, 1, 1, "", "Conv2d"], [1346, 1, 1, "", "Conv3d"], [1347, 1, 1, "", "ConvTranspose1d"], [1348, 1, 1, "", "ConvTranspose2d"], [1349, 1, 1, "", "ConvTranspose3d"], [1350, 1, 1, "", "CosineEmbeddingLoss"], [1351, 1, 1, "", "CosineSimilarity"], [1352, 1, 1, "", "CrossEntropyLoss"], [1353, 1, 1, "", "DataParallel"], [1354, 1, 1, "", "Dropout"], [1355, 1, 1, "", "Dropout1d"], [1356, 1, 1, "", "Dropout2d"], [1357, 1, 1, "", "Dropout3d"], [1358, 1, 1, "", "ELU"], [1359, 1, 1, "", "Embedding"], [1360, 1, 1, "", "EmbeddingBag"], [1361, 1, 1, "", "FeatureAlphaDropout"], [1362, 1, 1, "", "Flatten"], [1363, 1, 1, "", "Fold"], [1364, 1, 1, "", "FractionalMaxPool2d"], [1365, 1, 1, "", "FractionalMaxPool3d"], [1366, 1, 1, "", "GELU"], [1367, 1, 1, "", "GLU"], [1368, 1, 1, "", "GRU"], [1369, 1, 1, "", "GRUCell"], [1370, 1, 1, "", "GaussianNLLLoss"], [1371, 1, 1, "", "GroupNorm"], [1372, 1, 1, "", "Hardshrink"], [1373, 1, 1, "", "Hardsigmoid"], [1374, 1, 1, "", "Hardswish"], [1375, 1, 1, "", "Hardtanh"], [1376, 1, 1, "", "HingeEmbeddingLoss"], [1377, 1, 1, "", "HuberLoss"], [1378, 1, 1, "", "Identity"], [1379, 1, 1, "", "InstanceNorm1d"], [1380, 1, 1, "", "InstanceNorm2d"], [1381, 1, 1, "", "InstanceNorm3d"], [1382, 1, 1, "", "KLDivLoss"], [1383, 1, 1, "", "L1Loss"], [1384, 1, 1, "", "LPPool1d"], [1385, 1, 1, "", "LPPool2d"], [1386, 1, 1, "", "LSTM"], [1387, 1, 1, "", "LSTMCell"], [1388, 1, 1, "", "LayerNorm"], [1389, 1, 1, "", "LazyBatchNorm1d"], [1390, 1, 1, "", "LazyBatchNorm2d"], [1391, 1, 1, "", "LazyBatchNorm3d"], [1392, 1, 1, "", "LazyConv1d"], [1393, 1, 1, "", "LazyConv2d"], [1394, 1, 1, "", "LazyConv3d"], [1395, 1, 1, "", "LazyConvTranspose1d"], [1396, 1, 1, "", "LazyConvTranspose2d"], [1397, 1, 1, "", "LazyConvTranspose3d"], [1398, 1, 1, "", "LazyInstanceNorm1d"], [1399, 1, 1, "", "LazyInstanceNorm2d"], [1400, 1, 1, "", "LazyInstanceNorm3d"], [1401, 1, 1, "", "LazyLinear"], [1402, 1, 1, "", "LeakyReLU"], [1403, 1, 1, "", "Linear"], [1404, 1, 1, "", "LocalResponseNorm"], [1405, 1, 1, "", "LogSigmoid"], [1406, 1, 1, "", "LogSoftmax"], [1407, 1, 1, "", "MSELoss"], [1408, 1, 1, "", "MarginRankingLoss"], [1409, 1, 1, "", "MaxPool1d"], [1410, 1, 1, "", "MaxPool2d"], [1411, 1, 1, "", "MaxPool3d"], [1412, 1, 1, "", "MaxUnpool1d"], [1413, 1, 1, "", "MaxUnpool2d"], [1414, 1, 1, "", "MaxUnpool3d"], [1415, 1, 1, "", "Mish"], [1416, 1, 1, "", "Module"], [1417, 1, 1, "", "ModuleDict"], [1418, 1, 1, "", "ModuleList"], [1419, 1, 1, "", "MultiLabelMarginLoss"], [1420, 1, 1, "", "MultiLabelSoftMarginLoss"], [1421, 1, 1, "", "MultiMarginLoss"], [1422, 1, 1, "", "MultiheadAttention"], [1423, 1, 1, "", "NLLLoss"], [1424, 1, 1, "", "PReLU"], [1425, 1, 1, "", "PairwiseDistance"], [1426, 1, 1, "", "ParameterDict"], [1427, 1, 1, "", "ParameterList"], [1428, 1, 1, "", "PixelShuffle"], [1429, 1, 1, "", "PixelUnshuffle"], [1430, 1, 1, "", "PoissonNLLLoss"], [1431, 1, 1, "", "RNN"], [1432, 1, 1, "", "RNNBase"], [1433, 1, 1, "", "RNNCell"], [1434, 1, 1, "", "RReLU"], [1435, 1, 1, "", "ReLU"], [1436, 1, 1, "", "ReLU6"], [1437, 1, 1, "", "ReflectionPad1d"], [1438, 1, 1, "", "ReflectionPad2d"], [1439, 1, 1, "", "ReflectionPad3d"], [1440, 1, 1, "", "ReplicationPad1d"], [1441, 1, 1, "", "ReplicationPad2d"], [1442, 1, 1, "", "ReplicationPad3d"], [1443, 1, 1, "", "SELU"], [1444, 1, 1, "", "Sequential"], [1445, 1, 1, "", "SiLU"], [1446, 1, 1, "", "Sigmoid"], [1447, 1, 1, "", "SmoothL1Loss"], [1448, 1, 1, "", "SoftMarginLoss"], [1449, 1, 1, "", "Softmax"], [1450, 1, 1, "", "Softmax2d"], [1451, 1, 1, "", "Softmin"], [1452, 1, 1, "", "Softplus"], [1453, 1, 1, "", "Softshrink"], [1454, 1, 1, "", "Softsign"], [1455, 1, 1, "", "SyncBatchNorm"], [1456, 1, 1, "", "Tanh"], [1457, 1, 1, "", "Tanhshrink"], [1458, 1, 1, "", "Threshold"], [1459, 1, 1, "", "Transformer"], [1460, 1, 1, "", "TransformerDecoder"], [1461, 1, 1, "", "TransformerDecoderLayer"], [1462, 1, 1, "", "TransformerEncoder"], [1463, 1, 1, "", "TransformerEncoderLayer"], [1464, 1, 1, "", "TripletMarginLoss"], [1465, 1, 1, "", "TripletMarginWithDistanceLoss"], [1466, 1, 1, "", "Unflatten"], [1467, 1, 1, "", "Unfold"], [1468, 1, 1, "", "Upsample"], [1469, 1, 1, "", "UpsamplingBilinear2d"], [1470, 1, 1, "", "UpsamplingNearest2d"], [1471, 1, 1, "", "ZeroPad1d"], [1472, 1, 1, "", "ZeroPad2d"], [1473, 1, 1, "", "ZeroPad3d"], [1873, 0, 0, "-", "backends"], [1905, 0, 0, "-", "intrinsic"], [1873, 0, 0, "-", "modules"], [1873, 0, 0, "-", "parallel"], [1905, 0, 0, "-", "qat"], [1905, 0, 0, "-", "quantizable"], [1905, 0, 0, "-", "quantized"], [1873, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1324, 3, 1, "", "log_prob"], [1324, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1359, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1360, 3, 1, "", "forward"], [1360, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1389, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1390, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1391, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1392, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1393, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1394, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1395, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1396, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1397, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1398, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1399, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1400, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1401, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1416, 3, 1, "", "add_module"], [1416, 3, 1, "", "apply"], [1416, 3, 1, "", "bfloat16"], [1416, 3, 1, "", "buffers"], [1416, 3, 1, "", "children"], [1416, 3, 1, "", "compile"], [1416, 3, 1, "", "cpu"], [1416, 3, 1, "", "cuda"], [1416, 3, 1, "", "double"], [1416, 3, 1, "", "eval"], [1416, 3, 1, "", "extra_repr"], [1416, 3, 1, "", "float"], [1416, 3, 1, "", "forward"], [1416, 3, 1, "", "get_buffer"], [1416, 3, 1, "", "get_extra_state"], [1416, 3, 1, "", "get_parameter"], [1416, 3, 1, "", "get_submodule"], [1416, 3, 1, "", "half"], [1416, 3, 1, "", "ipu"], [1416, 3, 1, "", "load_state_dict"], [1416, 3, 1, "", "modules"], [1416, 3, 1, "", "named_buffers"], [1416, 3, 1, "", "named_children"], [1416, 3, 1, "", "named_modules"], [1416, 3, 1, "", "named_parameters"], [1416, 3, 1, "", "parameters"], [1416, 3, 1, "", "register_backward_hook"], [1416, 3, 1, "", "register_buffer"], [1416, 3, 1, "", "register_forward_hook"], [1416, 3, 1, "", "register_forward_pre_hook"], [1416, 3, 1, "", "register_full_backward_hook"], [1416, 3, 1, "", "register_full_backward_pre_hook"], [1416, 3, 1, "", "register_load_state_dict_post_hook"], [1416, 3, 1, "", "register_module"], [1416, 3, 1, "", "register_parameter"], [1416, 3, 1, "", "register_state_dict_pre_hook"], [1416, 3, 1, "", "requires_grad_"], [1416, 3, 1, "", "set_extra_state"], [1416, 3, 1, "", "share_memory"], [1416, 3, 1, "", "state_dict"], [1416, 3, 1, "", "to"], [1416, 3, 1, "", "to_empty"], [1416, 3, 1, "", "train"], [1416, 3, 1, "", "type"], [1416, 3, 1, "", "xpu"], [1416, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1417, 3, 1, "", "clear"], [1417, 3, 1, "", "items"], [1417, 3, 1, "", "keys"], [1417, 3, 1, "", "pop"], [1417, 3, 1, "", "update"], [1417, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1418, 3, 1, "", "append"], [1418, 3, 1, "", "extend"], [1418, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1422, 3, 1, "", "forward"], [1422, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1426, 3, 1, "", "clear"], [1426, 3, 1, "", "copy"], [1426, 3, 1, "", "fromkeys"], [1426, 3, 1, "", "get"], [1426, 3, 1, "", "items"], [1426, 3, 1, "", "keys"], [1426, 3, 1, "", "pop"], [1426, 3, 1, "", "popitem"], [1426, 3, 1, "", "setdefault"], [1426, 3, 1, "", "update"], [1426, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1427, 3, 1, "", "append"], [1427, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1432, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1444, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1455, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1459, 3, 1, "", "forward"], [1459, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1460, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1461, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1462, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1463, 3, 1, "", "forward"]], "torch.nn.functional": [[1474, 5, 1, "", "adaptive_avg_pool1d"], [1475, 5, 1, "", "adaptive_avg_pool2d"], [1476, 5, 1, "", "adaptive_avg_pool3d"], [1477, 5, 1, "", "adaptive_max_pool1d"], [1478, 5, 1, "", "adaptive_max_pool2d"], [1479, 5, 1, "", "adaptive_max_pool3d"], [1480, 5, 1, "", "affine_grid"], [1481, 5, 1, "", "alpha_dropout"], [1482, 5, 1, "", "avg_pool1d"], [1483, 5, 1, "", "avg_pool2d"], [1484, 5, 1, "", "avg_pool3d"], [1485, 5, 1, "", "batch_norm"], [1486, 5, 1, "", "bilinear"], [1487, 5, 1, "", "binary_cross_entropy"], [1488, 5, 1, "", "binary_cross_entropy_with_logits"], [1489, 5, 1, "", "celu"], [1490, 5, 1, "", "conv1d"], [1491, 5, 1, "", "conv2d"], [1492, 5, 1, "", "conv3d"], [1493, 5, 1, "", "conv_transpose1d"], [1494, 5, 1, "", "conv_transpose2d"], [1495, 5, 1, "", "conv_transpose3d"], [1496, 5, 1, "", "cosine_embedding_loss"], [1497, 5, 1, "", "cosine_similarity"], [1498, 5, 1, "", "cross_entropy"], [1499, 5, 1, "", "ctc_loss"], [1500, 5, 1, "", "dropout"], [1501, 5, 1, "", "dropout1d"], [1502, 5, 1, "", "dropout2d"], [1503, 5, 1, "", "dropout3d"], [1504, 5, 1, "", "elu"], [1505, 5, 1, "", "elu_"], [1506, 5, 1, "", "embedding"], [1507, 5, 1, "", "embedding_bag"], [1508, 5, 1, "", "feature_alpha_dropout"], [1509, 5, 1, "", "fold"], [1510, 5, 1, "", "fractional_max_pool2d"], [1511, 5, 1, "", "fractional_max_pool3d"], [1512, 5, 1, "", "gaussian_nll_loss"], [1513, 5, 1, "", "gelu"], [1514, 5, 1, "", "glu"], [1515, 5, 1, "", "grid_sample"], [1516, 5, 1, "", "group_norm"], [1517, 5, 1, "", "gumbel_softmax"], [1518, 5, 1, "", "hardshrink"], [1519, 5, 1, "", "hardsigmoid"], [1520, 5, 1, "", "hardswish"], [1521, 5, 1, "", "hardtanh"], [1522, 5, 1, "", "hardtanh_"], [1523, 5, 1, "", "hinge_embedding_loss"], [1524, 5, 1, "", "huber_loss"], [1525, 5, 1, "", "instance_norm"], [1526, 5, 1, "", "interpolate"], [1527, 5, 1, "", "kl_div"], [1528, 5, 1, "", "l1_loss"], [1529, 5, 1, "", "layer_norm"], [1530, 5, 1, "", "leaky_relu"], [1531, 5, 1, "", "leaky_relu_"], [1532, 5, 1, "", "linear"], [1533, 5, 1, "", "local_response_norm"], [1534, 5, 1, "", "log_softmax"], [1535, 5, 1, "", "logsigmoid"], [1536, 5, 1, "", "lp_pool1d"], [1537, 5, 1, "", "lp_pool2d"], [1538, 5, 1, "", "margin_ranking_loss"], [1539, 5, 1, "", "max_pool1d"], [1540, 5, 1, "", "max_pool2d"], [1541, 5, 1, "", "max_pool3d"], [1542, 5, 1, "", "max_unpool1d"], [1543, 5, 1, "", "max_unpool2d"], [1544, 5, 1, "", "max_unpool3d"], [1545, 5, 1, "", "mish"], [1546, 5, 1, "", "mse_loss"], [1547, 5, 1, "", "multi_margin_loss"], [1548, 5, 1, "", "multilabel_margin_loss"], [1549, 5, 1, "", "multilabel_soft_margin_loss"], [1550, 5, 1, "", "nll_loss"], [1551, 5, 1, "", "normalize"], [1552, 5, 1, "", "one_hot"], [1553, 5, 1, "", "pad"], [1554, 5, 1, "", "pairwise_distance"], [1555, 5, 1, "", "pdist"], [1556, 5, 1, "", "pixel_shuffle"], [1557, 5, 1, "", "pixel_unshuffle"], [1558, 5, 1, "", "poisson_nll_loss"], [1559, 5, 1, "", "prelu"], [1560, 5, 1, "", "relu"], [1561, 5, 1, "", "relu6"], [1562, 5, 1, "", "relu_"], [1563, 5, 1, "", "rrelu"], [1564, 5, 1, "", "rrelu_"], [1565, 5, 1, "", "scaled_dot_product_attention"], [1566, 5, 1, "", "selu"], [1567, 5, 1, "", "sigmoid"], [1568, 5, 1, "", "silu"], [1569, 5, 1, "", "smooth_l1_loss"], [1570, 5, 1, "", "soft_margin_loss"], [1571, 5, 1, "", "softmax"], [1572, 5, 1, "", "softmin"], [1573, 5, 1, "", "softplus"], [1574, 5, 1, "", "softshrink"], [1575, 5, 1, "", "softsign"], [1576, 5, 1, "", "tanh"], [1577, 5, 1, "", "tanhshrink"], [1578, 5, 1, "", "threshold"], [1579, 5, 1, "", "threshold_"], [1581, 5, 1, "", "triplet_margin_loss"], [1582, 5, 1, "", "triplet_margin_with_distance_loss"], [1583, 5, 1, "", "unfold"], [1584, 5, 1, "", "upsample"], [1585, 5, 1, "", "upsample_bilinear"], [1586, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1875, 5, 1, "", "calculate_gain"], [1875, 5, 1, "", "constant_"], [1875, 5, 1, "", "dirac_"], [1875, 5, 1, "", "eye_"], [1875, 5, 1, "", "kaiming_normal_"], [1875, 5, 1, "", "kaiming_uniform_"], [1875, 5, 1, "", "normal_"], [1875, 5, 1, "", "ones_"], [1875, 5, 1, "", "orthogonal_"], [1875, 5, 1, "", "sparse_"], [1875, 5, 1, "", "trunc_normal_"], [1875, 5, 1, "", "uniform_"], [1875, 5, 1, "", "xavier_normal_"], [1875, 5, 1, "", "xavier_uniform_"], [1875, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1905, 0, 0, "-", "modules"], [1905, 0, 0, "-", "qat"], [1905, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1905, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1905, 0, 0, "-", "dynamic"], [1905, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1905, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1587, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1587, 3, 1, "", "has_uninitialized_params"], [1587, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1588, 5, 1, "", "register_module_backward_hook"], [1589, 5, 1, "", "register_module_buffer_registration_hook"], [1590, 5, 1, "", "register_module_forward_hook"], [1591, 5, 1, "", "register_module_forward_pre_hook"], [1592, 5, 1, "", "register_module_full_backward_hook"], [1593, 5, 1, "", "register_module_full_backward_pre_hook"], [1594, 5, 1, "", "register_module_module_registration_hook"], [1595, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1596, 1, 1, "", "DistributedDataParallel"], [1580, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1596, 3, 1, "", "join"], [1596, 3, 1, "", "join_hook"], [1596, 3, 1, "", "no_sync"], [1596, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1597, 1, 1, "", "Parameter"], [1598, 1, 1, "", "UninitializedBuffer"], [1599, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1599, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1905, 0, 0, "-", "dynamic"], [1905, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1905, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1905, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1905, 0, 0, "-", "dynamic"], [1905, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1905, 0, 0, "-", "modules"]], "torch.nn.utils": [[1600, 5, 1, "", "clip_grad_norm_"], [1601, 5, 1, "", "clip_grad_value_"], [1602, 5, 1, "", "parameters_to_vector"], [1627, 5, 1, "", "remove_spectral_norm"], [1628, 5, 1, "", "remove_weight_norm"], [1636, 5, 1, "", "skip_init"], [1637, 5, 1, "", "spectral_norm"], [1873, 0, 0, "-", "stateless"], [1639, 5, 1, "", "vector_to_parameters"], [1640, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1603, 5, 1, "", "orthogonal"], [1604, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1605, 1, 1, "", "ParametrizationList"], [1606, 5, 1, "", "cached"], [1607, 5, 1, "", "is_parametrized"], [1608, 5, 1, "", "register_parametrization"], [1609, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1605, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1610, 1, 1, "", "BasePruningMethod"], [1611, 1, 1, "", "CustomFromMask"], [1612, 1, 1, "", "Identity"], [1613, 1, 1, "", "L1Unstructured"], [1614, 1, 1, "", "LnStructured"], [1615, 1, 1, "", "PruningContainer"], [1616, 1, 1, "", "RandomStructured"], [1617, 1, 1, "", "RandomUnstructured"], [1618, 5, 1, "", "custom_from_mask"], [1619, 5, 1, "", "global_unstructured"], [1620, 5, 1, "", "identity"], [1621, 5, 1, "", "is_pruned"], [1622, 5, 1, "", "l1_unstructured"], [1623, 5, 1, "", "ln_structured"], [1624, 5, 1, "", "random_structured"], [1625, 5, 1, "", "random_unstructured"], [1626, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1610, 3, 1, "", "apply"], [1610, 3, 1, "", "apply_mask"], [1610, 3, 1, "", "compute_mask"], [1610, 3, 1, "", "prune"], [1610, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1611, 3, 1, "", "apply"], [1611, 3, 1, "", "apply_mask"], [1611, 3, 1, "", "prune"], [1611, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1612, 3, 1, "", "apply"], [1612, 3, 1, "", "apply_mask"], [1612, 3, 1, "", "prune"], [1612, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1613, 3, 1, "", "apply"], [1613, 3, 1, "", "apply_mask"], [1613, 3, 1, "", "prune"], [1613, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1614, 3, 1, "", "apply"], [1614, 3, 1, "", "apply_mask"], [1614, 3, 1, "", "compute_mask"], [1614, 3, 1, "", "prune"], [1614, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1615, 3, 1, "", "add_pruning_method"], [1615, 3, 1, "", "apply"], [1615, 3, 1, "", "apply_mask"], [1615, 3, 1, "", "compute_mask"], [1615, 3, 1, "", "prune"], [1615, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1616, 3, 1, "", "apply"], [1616, 3, 1, "", "apply_mask"], [1616, 3, 1, "", "compute_mask"], [1616, 3, 1, "", "prune"], [1616, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1617, 3, 1, "", "apply"], [1617, 3, 1, "", "apply_mask"], [1617, 3, 1, "", "prune"], [1617, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1629, 1, 1, "", "PackedSequence"], [1630, 5, 1, "", "pack_padded_sequence"], [1631, 5, 1, "", "pack_sequence"], [1632, 5, 1, "", "pad_packed_sequence"], [1633, 5, 1, "", "pad_sequence"], [1634, 5, 1, "", "unpack_sequence"], [1635, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1629, 2, 1, "", "batch_sizes"], [1629, 3, 1, "", "count"], [1629, 2, 1, "", "data"], [1629, 3, 1, "", "index"], [1629, 4, 1, "", "is_cuda"], [1629, 3, 1, "", "is_pinned"], [1629, 2, 1, "", "sorted_indices"], [1629, 3, 1, "", "to"], [1629, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1638, 5, 1, "", "functional_call"]], "torch.onnx": [[1649, 1, 1, "", "ExportOptions"], [1650, 1, 1, "", "ExportOutput"], [1651, 1, 1, "", "ExportOutputSerializer"], [1652, 1, 1, "", "JitScalarType"], [1895, 5, 1, "", "disable_log"], [1895, 5, 1, "", "dynamo_export"], [1895, 5, 1, "", "enable_log"], [1895, 5, 1, "", "export"], [1895, 5, 1, "", "export_to_pretty_string"], [1895, 5, 1, "", "is_in_onnx_export"], [1895, 5, 1, "", "register_custom_op_symbolic"], [1895, 5, 1, "", "select_model_mode_for_export"], [1895, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1650, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1650, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1650, 4, 1, "", "diagnostic_context"], [1650, 4, 1, "", "model_proto"], [1650, 3, 1, "", "save"]], "torch.onnx.ExportOutputSerializer": [[1651, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1652, 3, 1, "", "dtype"], [1652, 3, 1, "", "from_dtype"], [1652, 3, 1, "", "from_value"], [1652, 3, 1, "", "onnx_compatible"], [1652, 3, 1, "", "onnx_type"], [1652, 3, 1, "", "scalar_name"], [1652, 3, 1, "", "torch_name"]], "torch.onnx._internal": [[1896, 0, 0, "-", "diagnostics"]], "torch.onnx._internal.diagnostics": [[1896, 1, 1, "", "ExportDiagnostic"]], "torch.onnx._internal.diagnostics.ExportDiagnostic": [[1896, 3, 1, "", "record_cpp_call_stack"]], "torch.onnx.verification": [[1653, 1, 1, "", "GraphInfo"], [1654, 1, 1, "", "VerificationOptions"], [1895, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1653, 3, 1, "", "all_mismatch_leaf_graph_info"], [1653, 3, 1, "", "clear"], [1653, 3, 1, "", "essential_node_count"], [1653, 3, 1, "", "essential_node_kinds"], [1653, 3, 1, "", "export_repro"], [1653, 3, 1, "", "find_mismatch"], [1653, 3, 1, "", "find_partition"], [1653, 3, 1, "", "has_mismatch"], [1653, 3, 1, "", "pretty_print_mismatch"], [1653, 3, 1, "", "pretty_print_tree"], [1653, 3, 1, "", "verify_export"]], "torch.optim": [[1655, 1, 1, "", "ASGD"], [1656, 1, 1, "", "Adadelta"], [1657, 1, 1, "", "Adagrad"], [1658, 1, 1, "", "Adam"], [1659, 1, 1, "", "AdamW"], [1660, 1, 1, "", "Adamax"], [1661, 1, 1, "", "LBFGS"], [1662, 1, 1, "", "NAdam"], [1898, 1, 1, "", "Optimizer"], [1668, 1, 1, "", "RAdam"], [1669, 1, 1, "", "RMSprop"], [1670, 1, 1, "", "Rprop"], [1671, 1, 1, "", "SGD"], [1672, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1655, 3, 1, "", "add_param_group"], [1655, 3, 1, "", "load_state_dict"], [1655, 3, 1, "", "register_step_post_hook"], [1655, 3, 1, "", "register_step_pre_hook"], [1655, 3, 1, "", "state_dict"], [1655, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1656, 3, 1, "", "add_param_group"], [1656, 3, 1, "", "load_state_dict"], [1656, 3, 1, "", "register_step_post_hook"], [1656, 3, 1, "", "register_step_pre_hook"], [1656, 3, 1, "", "state_dict"], [1656, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1657, 3, 1, "", "add_param_group"], [1657, 3, 1, "", "load_state_dict"], [1657, 3, 1, "", "register_step_post_hook"], [1657, 3, 1, "", "register_step_pre_hook"], [1657, 3, 1, "", "state_dict"], [1657, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1658, 3, 1, "", "add_param_group"], [1658, 3, 1, "", "load_state_dict"], [1658, 3, 1, "", "register_step_post_hook"], [1658, 3, 1, "", "register_step_pre_hook"], [1658, 3, 1, "", "state_dict"], [1658, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1659, 3, 1, "", "add_param_group"], [1659, 3, 1, "", "load_state_dict"], [1659, 3, 1, "", "register_step_post_hook"], [1659, 3, 1, "", "register_step_pre_hook"], [1659, 3, 1, "", "state_dict"], [1659, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1660, 3, 1, "", "add_param_group"], [1660, 3, 1, "", "load_state_dict"], [1660, 3, 1, "", "register_step_post_hook"], [1660, 3, 1, "", "register_step_pre_hook"], [1660, 3, 1, "", "state_dict"], [1660, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1661, 3, 1, "", "add_param_group"], [1661, 3, 1, "", "load_state_dict"], [1661, 3, 1, "", "register_step_post_hook"], [1661, 3, 1, "", "register_step_pre_hook"], [1661, 3, 1, "", "state_dict"], [1661, 3, 1, "", "step"], [1661, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1662, 3, 1, "", "add_param_group"], [1662, 3, 1, "", "load_state_dict"], [1662, 3, 1, "", "register_step_post_hook"], [1662, 3, 1, "", "register_step_pre_hook"], [1662, 3, 1, "", "state_dict"], [1662, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1663, 3, 1, "", "add_param_group"], [1664, 3, 1, "", "load_state_dict"], [1665, 3, 1, "", "state_dict"], [1666, 3, 1, "", "step"], [1667, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1668, 3, 1, "", "add_param_group"], [1668, 3, 1, "", "load_state_dict"], [1668, 3, 1, "", "register_step_post_hook"], [1668, 3, 1, "", "register_step_pre_hook"], [1668, 3, 1, "", "state_dict"], [1668, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1669, 3, 1, "", "add_param_group"], [1669, 3, 1, "", "load_state_dict"], [1669, 3, 1, "", "register_step_post_hook"], [1669, 3, 1, "", "register_step_pre_hook"], [1669, 3, 1, "", "state_dict"], [1669, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1670, 3, 1, "", "add_param_group"], [1670, 3, 1, "", "load_state_dict"], [1670, 3, 1, "", "register_step_post_hook"], [1670, 3, 1, "", "register_step_pre_hook"], [1670, 3, 1, "", "state_dict"], [1670, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1671, 3, 1, "", "add_param_group"], [1671, 3, 1, "", "load_state_dict"], [1671, 3, 1, "", "register_step_post_hook"], [1671, 3, 1, "", "register_step_pre_hook"], [1671, 3, 1, "", "state_dict"], [1671, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1672, 3, 1, "", "add_param_group"], [1672, 3, 1, "", "load_state_dict"], [1672, 3, 1, "", "register_step_post_hook"], [1672, 3, 1, "", "register_step_pre_hook"], [1672, 3, 1, "", "state_dict"], [1672, 3, 1, "", "step"], [1672, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1673, 1, 1, "", "ChainedScheduler"], [1674, 1, 1, "", "ConstantLR"], [1675, 1, 1, "", "CosineAnnealingLR"], [1676, 1, 1, "", "CosineAnnealingWarmRestarts"], [1677, 1, 1, "", "CyclicLR"], [1678, 1, 1, "", "ExponentialLR"], [1679, 1, 1, "", "LambdaLR"], [1680, 1, 1, "", "LinearLR"], [1681, 1, 1, "", "MultiStepLR"], [1682, 1, 1, "", "MultiplicativeLR"], [1683, 1, 1, "", "OneCycleLR"], [1684, 1, 1, "", "PolynomialLR"], [1685, 1, 1, "", "ReduceLROnPlateau"], [1686, 1, 1, "", "SequentialLR"], [1687, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1673, 3, 1, "", "get_last_lr"], [1673, 3, 1, "", "load_state_dict"], [1673, 3, 1, "", "print_lr"], [1673, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1674, 3, 1, "", "get_last_lr"], [1674, 3, 1, "", "load_state_dict"], [1674, 3, 1, "", "print_lr"], [1674, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1675, 3, 1, "", "get_last_lr"], [1675, 3, 1, "", "load_state_dict"], [1675, 3, 1, "", "print_lr"], [1675, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1676, 3, 1, "", "get_last_lr"], [1676, 3, 1, "", "load_state_dict"], [1676, 3, 1, "", "print_lr"], [1676, 3, 1, "", "state_dict"], [1676, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1677, 3, 1, "", "get_last_lr"], [1677, 3, 1, "", "get_lr"], [1677, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1678, 3, 1, "", "get_last_lr"], [1678, 3, 1, "", "load_state_dict"], [1678, 3, 1, "", "print_lr"], [1678, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1679, 3, 1, "", "get_last_lr"], [1679, 3, 1, "", "load_state_dict"], [1679, 3, 1, "", "print_lr"], [1679, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1680, 3, 1, "", "get_last_lr"], [1680, 3, 1, "", "load_state_dict"], [1680, 3, 1, "", "print_lr"], [1680, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1681, 3, 1, "", "get_last_lr"], [1681, 3, 1, "", "load_state_dict"], [1681, 3, 1, "", "print_lr"], [1681, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1682, 3, 1, "", "get_last_lr"], [1682, 3, 1, "", "load_state_dict"], [1682, 3, 1, "", "print_lr"], [1682, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1683, 3, 1, "", "get_last_lr"], [1683, 3, 1, "", "load_state_dict"], [1683, 3, 1, "", "print_lr"], [1683, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1684, 3, 1, "", "get_last_lr"], [1684, 3, 1, "", "load_state_dict"], [1684, 3, 1, "", "print_lr"], [1684, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.SequentialLR": [[1686, 3, 1, "", "get_last_lr"], [1686, 3, 1, "", "load_state_dict"], [1686, 3, 1, "", "print_lr"], [1686, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1687, 3, 1, "", "get_last_lr"], [1687, 3, 1, "", "load_state_dict"], [1687, 3, 1, "", "print_lr"], [1687, 3, 1, "", "state_dict"]], "torch.overrides": [[1922, 5, 1, "", "get_ignored_functions"], [1922, 5, 1, "", "get_overridable_functions"], [1922, 5, 1, "", "get_testing_overrides"], [1922, 5, 1, "", "handle_torch_function"], [1922, 5, 1, "", "has_torch_function"], [1922, 5, 1, "", "is_tensor_like"], [1922, 5, 1, "", "is_tensor_method_or_property"], [1922, 5, 1, "", "resolve_name"], [1922, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1899, 1, 1, "", "Directory"], [1899, 1, 1, "", "EmptyMatchError"], [1899, 1, 1, "", "PackageExporter"], [1899, 1, 1, "", "PackageImporter"], [1899, 1, 1, "", "PackagingError"], [1899, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1899, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1899, 3, 1, "", "__init__"], [1899, 3, 1, "", "add_dependency"], [1899, 3, 1, "", "all_paths"], [1899, 3, 1, "", "close"], [1899, 3, 1, "", "denied_modules"], [1899, 3, 1, "", "deny"], [1899, 3, 1, "", "dependency_graph_string"], [1899, 3, 1, "", "extern"], [1899, 3, 1, "", "externed_modules"], [1899, 3, 1, "", "get_rdeps"], [1899, 3, 1, "", "get_unique_id"], [1899, 3, 1, "", "intern"], [1899, 3, 1, "", "interned_modules"], [1899, 3, 1, "", "mock"], [1899, 3, 1, "", "mocked_modules"], [1899, 3, 1, "", "register_extern_hook"], [1899, 3, 1, "", "register_intern_hook"], [1899, 3, 1, "", "register_mock_hook"], [1899, 3, 1, "", "save_binary"], [1899, 3, 1, "", "save_module"], [1899, 3, 1, "", "save_pickle"], [1899, 3, 1, "", "save_source_file"], [1899, 3, 1, "", "save_source_string"], [1899, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1899, 3, 1, "", "__init__"], [1899, 3, 1, "", "file_structure"], [1899, 3, 1, "", "id"], [1899, 3, 1, "", "import_module"], [1899, 3, 1, "", "load_binary"], [1899, 3, 1, "", "load_pickle"], [1899, 3, 1, "", "load_text"], [1899, 3, 1, "", "python_version"]], "torch.profiler": [[1901, 1, 1, "", "ProfilerAction"], [1901, 1, 1, "", "ProfilerActivity"], [1901, 1, 1, "", "_KinetoProfile"], [1901, 1, 1, "", "profile"], [1901, 5, 1, "", "schedule"], [1901, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1901, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1901, 3, 1, "", "add_metadata"], [1901, 3, 1, "", "add_metadata_json"], [1901, 3, 1, "", "events"], [1901, 3, 1, "", "export_chrome_trace"], [1901, 3, 1, "", "export_memory_timeline"], [1901, 3, 1, "", "export_stacks"], [1901, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1901, 5, 1, "", "is_available"], [1901, 5, 1, "", "mark"], [1901, 5, 1, "", "range_pop"], [1901, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1901, 3, 1, "", "step"]], "torch.quantization": [[1905, 0, 0, "-", "fx"]], "torch.quasirandom": [[1708, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1708, 3, 1, "", "draw"], [1708, 3, 1, "", "draw_base2"], [1708, 3, 1, "", "fast_forward"], [1708, 3, 1, "", "reset"]], "torch.random": [[1906, 5, 1, "", "fork_rng"], [1906, 5, 1, "", "get_rng_state"], [1906, 5, 1, "", "initial_seed"], [1906, 5, 1, "", "manual_seed"], [1906, 5, 1, "", "seed"], [1906, 5, 1, "", "set_rng_state"]], "torch.signal": [[1910, 0, 0, "-", "windows"]], "torch.signal.windows": [[1756, 5, 1, "", "bartlett"], [1757, 5, 1, "", "blackman"], [1758, 5, 1, "", "cosine"], [1759, 5, 1, "", "exponential"], [1760, 5, 1, "", "gaussian"], [1761, 5, 1, "", "general_cosine"], [1762, 5, 1, "", "general_hamming"], [1763, 5, 1, "", "hamming"], [1764, 5, 1, "", "hann"], [1765, 5, 1, "", "kaiser"], [1766, 5, 1, "", "nuttall"]], "torch.sparse": [[1776, 5, 1, "", "addmm"], [1777, 1, 1, "", "check_sparse_tensor_invariants"], [1778, 5, 1, "", "log_softmax"], [1779, 5, 1, "", "mm"], [1780, 5, 1, "", "sampled_addmm"], [1781, 5, 1, "", "softmax"], [1782, 5, 1, "", "spdiags"], [1783, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1777, 3, 1, "", "disable"], [1777, 3, 1, "", "enable"], [1777, 3, 1, "", "is_enabled"]], "torch.special": [[1912, 5, 1, "", "airy_ai"], [1912, 5, 1, "", "bessel_j0"], [1912, 5, 1, "", "bessel_j1"], [1912, 5, 1, "", "digamma"], [1912, 5, 1, "", "entr"], [1912, 5, 1, "", "erf"], [1912, 5, 1, "", "erfc"], [1912, 5, 1, "", "erfcx"], [1912, 5, 1, "", "erfinv"], [1912, 5, 1, "", "exp2"], [1912, 5, 1, "", "expit"], [1912, 5, 1, "", "expm1"], [1912, 5, 1, "", "gammainc"], [1912, 5, 1, "", "gammaincc"], [1912, 5, 1, "", "gammaln"], [1912, 5, 1, "", "i0"], [1912, 5, 1, "", "i0e"], [1912, 5, 1, "", "i1"], [1912, 5, 1, "", "i1e"], [1912, 5, 1, "", "log1p"], [1912, 5, 1, "", "log_ndtr"], [1912, 5, 1, "", "log_softmax"], [1912, 5, 1, "", "logit"], [1912, 5, 1, "", "logsumexp"], [1912, 5, 1, "", "multigammaln"], [1912, 5, 1, "", "ndtr"], [1912, 5, 1, "", "ndtri"], [1912, 5, 1, "", "polygamma"], [1912, 5, 1, "", "psi"], [1912, 5, 1, "", "round"], [1912, 5, 1, "", "scaled_modified_bessel_k0"], [1912, 5, 1, "", "scaled_modified_bessel_k1"], [1912, 5, 1, "", "sinc"], [1912, 5, 1, "", "softmax"], [1912, 5, 1, "", "spherical_bessel_j0"], [1912, 5, 1, "", "xlog1py"], [1912, 5, 1, "", "xlogy"], [1912, 5, 1, "", "zeta"]], "torch.testing": [[1918, 5, 1, "", "assert_allclose"], [1918, 5, 1, "", "assert_close"], [1918, 5, 1, "", "make_tensor"]], "torch.torch": [[1919, 2, 1, "", "default_generator"], [1923, 1, 1, "", "finfo"], [1923, 1, 1, "", "iinfo"]], "torch.utils": [[1919, 0, 0, "-", "backcompat"], [4, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "bottleneck"], [32, 0, 0, "-", "data"], [1919, 0, 0, "-", "hipify"], [1860, 0, 0, "-", "jit"], [1919, 0, 0, "-", "model_dump"], [1866, 0, 0, "-", "model_zoo"], [1916, 0, 0, "-", "tensorboard"]], "torch.utils.benchmark": [[4, 1, 1, "", "CallgrindStats"], [4, 1, 1, "", "FunctionCounts"], [4, 1, 1, "", "Measurement"], [4, 1, 1, "", "Timer"], [4, 0, 0, "-", "examples"], [4, 0, 0, "-", "op_fuzzers"], [4, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[4, 3, 1, "", "as_standardized"], [4, 3, 1, "", "counts"], [4, 3, 1, "", "delta"], [4, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[4, 3, 1, "", "denoise"], [4, 3, 1, "", "filter"], [4, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[4, 3, 1, "", "merge"], [4, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[4, 3, 1, "", "blocked_autorange"], [4, 3, 1, "", "collect_callgrind"], [4, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[4, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[6, 5, 1, "", "checkpoint"], [6, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[26, 5, 1, "", "BuildExtension"], [26, 5, 1, "", "CUDAExtension"], [26, 5, 1, "", "CppExtension"], [26, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [26, 5, 1, "", "include_paths"], [26, 5, 1, "", "is_ninja_available"], [26, 5, 1, "", "load"], [26, 5, 1, "", "load_inline"], [26, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[32, 1, 1, "", "BatchSampler"], [32, 1, 1, "", "ChainDataset"], [32, 1, 1, "", "ConcatDataset"], [32, 1, 1, "", "DataLoader"], [32, 1, 1, "", "Dataset"], [32, 1, 1, "", "IterableDataset"], [32, 1, 1, "", "RandomSampler"], [32, 1, 1, "", "Sampler"], [32, 1, 1, "", "SequentialSampler"], [32, 1, 1, "", "Subset"], [32, 1, 1, "", "SubsetRandomSampler"], [32, 1, 1, "", "TensorDataset"], [32, 1, 1, "", "WeightedRandomSampler"], [32, 0, 0, "-", "datapipes"], [32, 5, 1, "", "default_collate"], [32, 5, 1, "", "default_convert"], [32, 5, 1, "", "get_worker_info"], [32, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[32, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[32, 0, 0, "-", "dataframe"], [32, 0, 0, "-", "iter"], [32, 0, 0, "-", "map"], [32, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[32, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[42, 5, 1, "", "from_dlpack"], [42, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1865, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1866, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1916, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1916, 3, 1, "", "__init__"], [1916, 3, 1, "", "add_audio"], [1916, 3, 1, "", "add_custom_scalars"], [1916, 3, 1, "", "add_embedding"], [1916, 3, 1, "", "add_figure"], [1916, 3, 1, "", "add_graph"], [1916, 3, 1, "", "add_histogram"], [1916, 3, 1, "", "add_hparams"], [1916, 3, 1, "", "add_image"], [1916, 3, 1, "", "add_images"], [1916, 3, 1, "", "add_mesh"], [1916, 3, 1, "", "add_pr_curve"], [1916, 3, 1, "", "add_scalar"], [1916, 3, 1, "", "add_scalars"], [1916, 3, 1, "", "add_text"], [1916, 3, 1, "", "add_video"], [1916, 3, 1, "", "close"], [1916, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"torch": [0, 1, 2, 3, 4, 5, 6, 11, 15, 18, 25, 26, 28, 32, 34, 35, 37, 38, 40, 41, 42, 53, 56, 58, 59, 61, 62, 63, 64, 65, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1600, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1663, 1664, 1665, 1666, 1667, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1872, 1873, 1874, 1875, 1880, 1882, 1883, 1886, 1891, 1893, 1895, 1896, 1898, 1899, 1901, 1905, 1906, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923], "_dynamo": 0, "automat": [1, 2, 32, 1854, 1876, 1883], "mix": [1, 1854, 1876], "precis": [1, 1876, 1880, 1891], "packag": [1, 2, 27, 35, 1869, 1894, 1899], "amp": [1, 1880], "autocast": [1, 1876], "gradient": [1, 2, 63, 1137, 1876, 1877, 1883, 1919], "scale": [1, 1876, 1887], "op": [1, 1859, 1876, 1895, 1919], "refer": [1, 29, 59, 65, 1854, 1856, 1857, 1858, 1867, 1871, 1886, 1896, 1899, 1901, 1902, 1905, 1909, 1917], "elig": 1, "cuda": [1, 3, 11, 28, 29, 204, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1869, 1876, 1880, 1884, 1886, 1890, 1892, 1894], "specif": [1, 32, 1911], "behavior": [1, 32, 1877, 1885], "can": [1, 20, 1877, 1884], "float16": 1, "float32": 1, "promot": [1, 8], "widest": 1, "input": [1, 1870, 1876, 1885], "type": [1, 32, 594, 1856, 1857, 1882, 1895, 1899, 1917, 1923], "prefer": 1, "binary_cross_entropy_with_logit": [1, 1488], "over": [1, 9, 1856], "binary_cross_entropi": [1, 1487], "cpu": [1, 3, 11, 201, 1877, 1879, 1902], "bfloat16": [1, 150], "differenti": [2, 1877], "autograd": [2, 11, 24, 27, 62, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 1871, 1876, 1877, 1882, 1883, 1895, 1907, 1908], "forward": [2, 881, 1882, 1908], "mode": [2, 53, 60, 408, 1289, 1877, 1882, 1885, 1895, 1902, 1908], "function": [2, 35, 41, 56, 58, 59, 61, 63, 65, 72, 77, 80, 81, 880, 881, 882, 883, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 1114, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1854, 1855, 1856, 1857, 1859, 1862, 1864, 1870, 1872, 1873, 1874, 1876, 1877, 1883, 1885, 1895, 1905, 1911, 1912, 1922], "higher": 2, "level": [2, 11, 1905], "api": [2, 11, 27, 29, 38, 46, 59, 62, 65, 1852, 1854, 1857, 1867, 1871, 1879, 1880, 1882, 1886, 1887, 1896, 1899, 1900, 1901, 1902, 1905], "local": [2, 20, 22, 1857, 1877, 1919], "disabl": [2, 32, 1854, 1877, 1919], "comput": [2, 63, 1877, 1891, 1908, 1919], "default": [2, 32, 33, 1856, 1877, 1880, 1885, 1904], "layout": [2, 1914], "manual": 2, "In": [2, 9, 1877, 1878, 1919], "place": [2, 62, 1870, 1877, 1878, 1895, 1919], "oper": [2, 11, 33, 35, 62, 82, 1856, 1857, 1862, 1864, 1870, 1871, 1872, 1877, 1882, 1887, 1894, 1895, 1897, 1902, 1911, 1917, 1919], "tensor": [2, 24, 27, 40, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 1816, 1855, 1859, 1862, 1869, 1870, 1871, 1872, 1877, 1882, 1893, 1895, 1902, 1905, 1911, 1914, 1915, 1917, 1919], "correct": [2, 65, 1877], "check": [2, 20, 65, 1854, 1877, 1886], "variabl": [2, 17, 35, 53, 1854, 1856, 1857, 1880], "deprec": 2, "context": [2, 36, 50, 1908], "method": [2, 45, 46, 49, 54, 1855, 1856, 1859, 1895, 1905, 1911], "mixin": 2, "numer": [2, 1885, 1891, 1903], "profil": [2, 23, 35, 906, 907, 908, 909, 910, 1297, 1298, 1299, 1868, 1887, 1888, 1901], "anomali": 2, "detect": 2, "graph": [2, 14, 22, 23, 28, 65, 901, 902, 903, 904, 905, 992, 1854, 1877, 1880, 1902], "backend": [3, 12, 16, 23, 35, 52, 53, 1854, 1886, 1889, 1902, 1904, 1907], "cudnn": 3, "mp": [3, 11, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1868, 1889], "mkl": 3, "mkldnn": [3, 11], "openmp": 3, "opt_einsum": 3, "xeon": 3, "benchmark": [4, 1892], "util": [4, 5, 6, 11, 22, 26, 32, 35, 42, 59, 61, 1035, 1600, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1860, 1865, 1866, 1873, 1905, 1916, 1919, 1921], "bottleneck": 5, "checkpoint": [6, 33, 37], "pytorch": [7, 8, 9, 10, 11, 16, 19, 20, 23, 27, 34, 35, 62, 1852, 1854, 1855, 1859, 1877, 1880, 1882, 1892, 1893, 1895, 1900], "govern": [7, 10, 11], "build": [7, 8, 11, 1879, 1887, 1888, 1894], "ci": [7, 11], "how": [7, 14, 20, 33, 60, 1851, 1877, 1882, 1898, 1899], "add": [7, 10, 71, 92, 676], "new": [7, 8, 10], "maintain": [7, 10, 11], "contribut": [8, 1895], "guid": 8, "process": [8, 10, 32, 50, 1876], "get": [8, 14, 16, 38, 1895], "start": [8, 16, 38, 50, 1298], "propos": 8, "featur": [8, 1887, 1888], "report": [8, 1884], "issu": [8, 23, 1854], "implement": [8, 43, 52, 54, 1851, 1881, 1885, 1895, 1903, 1909], "fix": [8, 53, 60, 255, 1095], "bug": 8, "ad": [8, 1882, 1895], "tutori": [8, 11, 1899, 1900, 1907], "improv": [8, 1888], "document": [8, 38, 1852], "particip": 8, "onlin": 8, "discuss": 8, "submit": 8, "pull": 8, "request": 8, "open": 8, "review": 8, "code": [8, 14, 16, 65, 1854, 1880, 1899], "readabl": 8, "test": [8, 20, 1857, 1882, 1899, 1918], "case": [8, 1854], "make": [8, 10, 17, 75], "codebas": 8, "more": [8, 18, 58, 1907], "robust": 8, "triag": 8, "about": [8, 1877, 1907], "sourc": [8, 1892, 1894, 1899], "develop": [8, 1852, 1895], "common": [8, 35, 65, 1887, 1902], "mistak": 8, "To": 8, "avoid": [8, 1890, 1892, 1895, 1899], "frequent": [8, 14, 1854, 1884, 1895, 1902], "ask": [8, 14, 1854, 1884, 1895, 1902], "question": [8, 14, 1854, 1884, 1895, 1902], "On": [8, 33, 1856], "python": [8, 9, 17, 62, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1892, 1895], "doc": [8, 11, 1886], "c": [8, 11, 27, 1877, 1882, 1886, 1893, 1895], "overview": [8, 12, 17, 21, 29, 65, 1896, 1899, 1901, 1911], "design": [9, 1857, 1881, 1907, 1908, 1909], "philosophi": 9, "principl": [9, 10], "1": [9, 53, 60, 1854, 1883], "usabl": 9, "perform": [9, 11, 20, 23, 1888, 1893], "2": [9, 19, 20, 23, 60, 1854, 1880, 1883, 1884], "simpl": [9, 1856, 1857, 1888, 1908], "easi": 9, "3": [9, 53, 60], "first": [9, 1899], "best": [9, 1880, 1890, 1902], "class": [9, 45, 65, 1854, 1856, 1857, 1859, 1895, 1898, 1899, 1917], "languag": [9, 1852, 1854, 1856, 1857, 1858], "interoper": 9, "mechan": [10, 1874, 1877, 1885], "summari": [10, 17, 1902], "modul": [10, 11, 19, 59, 61, 65, 1416, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1854, 1855, 1856, 1857, 1859, 1873, 1877, 1882, 1888, 1893, 1899, 1902], "core": [10, 11, 1853], "lead": [10, 11], "bdfl": [10, 11], "nomin": [10, 1857], "confirm": 10, "remov": [10, 1626, 1870], "The": [10, 65, 1857, 1877], "re": [10, 1899], "scope": 10, "project": 10, "decis": 10, "uncontroversi": 10, "chang": [10, 14, 53, 60], "controversi": 10, "gener": [10, 28, 36, 62, 65, 83, 1878, 1883, 1892, 1902, 1903, 1919], "polici": 10, "faq": [10, 1894], "respons": 11, "nn": [11, 19, 59, 61, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1600, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1856, 1857, 1873, 1874, 1875, 1877, 1880, 1882, 1893, 1905], "optim": [11, 16, 18, 39, 1663, 1664, 1665, 1666, 1667, 1876, 1877, 1898, 1907, 1908, 1919], "compil": [11, 14, 15, 18, 23, 61, 944, 1852, 1880], "jit": [11, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1854, 1857, 1860], "torchscript": [11, 27, 1854, 1855, 1856, 1857, 1859, 1879, 1887, 1897, 1899], "fx": [11, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 1888, 1902, 1905, 1921], "torchdynamo": [11, 13, 14, 23, 1881, 1895], "distribut": [11, 14, 35, 37, 38, 39, 40, 41, 53, 1873, 1874, 1881, 1886, 1888, 1907, 1908], "rng": 11, "multiprocess": [11, 50, 1869, 1880, 1890, 1894], "dataload": [11, 1892], "linear": [11, 24, 723, 724, 747, 755, 772, 1121, 1403, 1532, 1873, 1874, 1891, 1911], "algebra": [11, 24, 1891, 1911], "linalg": [11, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1862, 1891], "spars": [11, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1873, 1874, 1911], "nestedtensor": 11, "nest": [11, 1872], "maskedtensor": [11, 1864], "mask": [11, 1864], "fast": [11, 56, 1885, 1908], "fourier": [11, 56], "transform": [11, 22, 41, 56, 58, 59, 61, 63, 65, 1459, 1873, 1882, 1888], "fft": [11, 56, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094], "inductor": [11, 14], "gpu": [11, 35, 1873, 1874, 1876, 1884, 1900], "triton": 11, "nvfuser": 11, "amd": [11, 1891], "rocm": [11, 1886], "hip": [11, 1886], "tool": [11, 28, 1903, 1911], "c10": 11, "dispatch": 11, "onnx": [11, 73, 74, 79, 1895, 1896, 1897], "export": [11, 14, 1895, 1899], "mobil": 11, "edg": [11, 1854, 1899], "model": [11, 27, 1851, 1876, 1884, 1887, 1898, 1899, 1900, 1902, 1905], "compress": [11, 1911], "window": [11, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1894, 1910], "appl": 11, "m1": 11, "powerpc": 11, "librari": [11, 1852, 1861, 1892], "xla": 11, "torchserv": 11, "torchvis": [11, 60], "torchtext": 11, "torchaudio": 11, "torchrec": 11, "torchx": 11, "torchdata": 11, "torcharrow": 11, "custom": [12, 44, 54, 65, 80, 1857, 1876, 1880, 1882, 1883, 1888, 1895, 1898, 1899, 1902], "regist": [12, 1877], "after": 12, "aotautograd": [12, 69], "exampl": [12, 47, 65, 1876, 1881, 1882, 1883, 1895, 1908], "debug": [12, 23, 33, 35, 65, 1854, 1902, 1903], "speedi": 12, "compos": [12, 58, 63], "deeper": 13, "dive": 13, "what": [13, 20, 33, 58, 60, 63, 1864, 1877, 1899], "i": [13, 14, 20, 63, 1864, 1877, 1899], "guard": [13, 17], "dynamo": [13, 14, 75], "do": [13, 14, 16, 1899], "you": [14, 16], "support": [14, 19, 82, 1855, 1857, 1864, 1870, 1871, 1872, 1883, 1895, 1897, 1902, 1911], "still": 14, "need": [14, 16, 1876], "whole": [14, 1880], "why": [14, 16, 58, 63, 1880, 1885, 1899, 1911], "my": [14, 20, 1851, 1877, 1884, 1899], "crash": 14, "error": [14, 23, 45, 1884, 1894, 1902, 1903], "torchinductor": [14, 20, 23], "slow": 14, "excess": [14, 23], "recompil": [14, 23], "ar": [14, 58, 63, 1851, 1877, 1899], "product": [14, 63, 1862], "speed": [14, 1894], "up": [14, 53], "am": 14, "see": [14, 1899], "speedup": 14, "break": [14, 23, 1856, 1857], "identifi": [14, 23, 1857], "caus": [14, 23], "didn": 14, "t": [14, 561, 1811, 1857, 1884], "when": [14, 1857, 1877, 1882, 1895, 1902, 1911], "incorrect": 14, "result": 14, "oom": 14, "exist": 16, "anoth": [16, 1883], "wai": 16, "cach": [17, 1606, 1851, 1880, 1886], "frame": 17, "evalu": [17, 1877, 1885], "pep": 17, "523": 17, "instructiontransl": 17, "troubleshoot": [18, 23], "gotcha": [18, 1883], "learn": [18, 1898], "0": [19, 20, 23], "nnmodul": 19, "hook": [19, 33, 1877, 1888], "__call__": 19, "usag": [19, 29, 38, 53, 1880, 1883, 1887, 1888, 1894], "limit": [19, 62, 65, 1851, 1883, 1895], "state_dict": [19, 1665], "dashboard": 20, "read": [20, 58, 1895], "measur": 20, "pr": 20, "affect": 20, "": [20, 60, 1899], "befor": 20, "merg": 20, "run": [20, 1851], "ani": [20, 113, 690, 1857], "technic": 21, "write": [22, 54, 65, 1877, 1882, 1895], "aten": [22, 1853, 1895], "ir": [22, 71, 1853], "pass": [22, 70, 76, 1857, 1880, 1890, 1902, 1908], "One": [22, 1894], "x": 22, "none": 22, "inform": [22, 1885, 1907], "subgraph": [22, 65], "rewrit": [22, 65], "manag": [22, 28, 36, 1869, 1880, 1886, 1899], "partition": 22, "matcher": 22, "capabl": 22, "base": [22, 1898], "titl": 23, "diagnos": 23, "runtim": [23, 1879, 1884], "minifi": 23, "access": [23, 24, 1856, 1899], "us": [23, 33, 35, 65, 1856, 1877, 1880, 1882, 1885, 1895, 1898, 1899, 1900, 1902, 1911], "torch_compile_debug": 23, "accuraci": [23, 1891, 1902, 1903], "file": [23, 35, 1869, 1899], "an": [23, 1851, 1895, 1898, 1899], "complex": [24, 946, 1877, 1885], "number": [24, 28, 53, 1877, 1879, 1884, 1892, 1919], "creat": [24, 1854, 1871], "transit": [24, 53], "from": [24, 53, 61, 65, 1851, 1870, 1894, 1895, 1899], "old": 24, "represent": 24, "real": [24, 476, 1719, 1885], "imag": [24, 305, 1154], "angl": [24, 112, 689], "ab": [24, 84, 672], "serial": [24, 1893, 1919], "__config__": 25, "cpp_extens": 26, "extend": [27, 43, 1882, 1883], "extens": [27, 28, 1882, 1887, 1894], "author": [27, 65], "random": [28, 32, 62, 1884, 1892, 1906, 1919], "commun": [28, 33, 35, 1852], "collect": [28, 35], "stream": [28, 29, 963, 1032, 1880], "event": [28, 44, 46, 960], "beta": [28, 41], "memori": [28, 32, 1880, 1884, 1886, 1888], "nvidia": [28, 1891], "nvtx": [28, 1017, 1018, 1019], "jiter": [28, 1000, 1001], "sanit": [28, 29], "prototyp": [28, 1902, 1903], "data": [32, 62, 1857, 1881, 1884, 1895, 1903, 1917], "dataset": 32, "map": [32, 1886], "style": 32, "iter": [32, 1856], "load": [32, 1191, 1255, 1851, 1893, 1899, 1902], "order": [32, 1877], "sampler": 32, "batch": [32, 60, 1891, 1898], "non": [32, 65, 1873, 1874, 1877, 1880, 1891, 1899, 1902], "work": [32, 59, 1876, 1884, 1911], "collate_fn": 32, "singl": [32, 53, 1876], "multi": [32, 35, 53, 1873, 1874], "platform": 32, "pin": [32, 1880], "ddp": 33, "doe": [33, 1877], "powersgd": 33, "state": [33, 1888, 1899], "acknowledg": [33, 1900], "deploi": 34, "ha": 34, "been": 34, "move": 34, "multipi": 34, "come": [35, 1877], "which": [35, 1877], "environ": [35, 53, 1880, 1887, 1899], "choos": 35, "network": [35, 1880, 1884, 1888], "interfac": [35, 1886], "other": [35, 1873, 1892, 1899, 1911, 1919], "nccl": [35, 1880], "basic": [35, 1857, 1871, 1883, 1907, 1917], "initi": [35, 1873, 1888, 1917], "tcp": 35, "share": [35, 1869, 1880, 1899, 1909], "system": [35, 1857, 1869, 1883], "post": [35, 1902], "kei": [35, 1894], "valu": [35, 605, 1856, 1857, 1891, 1904, 1909], "store": [35, 52], "group": 35, "point": [35, 1887], "synchron": [35, 1033, 1303], "asynchron": [35, 1857, 1880, 1890], "third": 35, "parti": 35, "launch": [35, 53], "spawn": [35, 1869], "applic": 35, "monitor": [35, 1867], "barrier": 35, "torch_distributed_debug": 35, "log": [35, 363, 1257, 1887], "join": [36, 1919], "elast": [38, 43, 53], "advanc": [38, 1888], "plugin": 38, "parallel": [40, 1580, 1880, 1881, 1884, 1900, 1919], "probabl": 41, "score": 41, "pathwis": 41, "deriv": [41, 1877], "exponentialfamili": 41, "bernoulli": [41, 148, 914], "binomi": 41, "categor": 41, "cauchi": 41, "chi2": 41, "continuousbernoulli": 41, "dirichlet": 41, "exponenti": [41, 1759], "fishersnedecor": 41, "gamma": 41, "geometr": 41, "gumbel": 41, "halfcauchi": 41, "halfnorm": 41, "independ": 41, "kumaraswami": 41, "lkjcholeski": 41, "laplac": 41, "lognorm": 41, "lowrankmultivariatenorm": 41, "mixturesamefamili": 41, "multinomi": [41, 414, 1306], "multivariatenorm": 41, "negativebinomi": 41, "normal": [41, 1551, 1644, 1873, 1898], "onehotcategor": 41, "pareto": 41, "poisson": [41, 1694], "relaxedbernoulli": 41, "logitrelaxedbernoulli": 41, "relaxedonehotcategor": 41, "studentt": 41, "transformeddistribut": 41, "uniform": 41, "vonmis": 41, "weibul": 41, "wishart": 41, "kl": 41, "diverg": [41, 1859], "constraint": [41, 1880], "registri": [41, 52], "dlpack": 42, "agent": 43, "server": [43, 52, 54], "concept": 43, "watchdog": 43, "launcher": 44, "rendezv": [44, 52, 53], "handler": [44, 49, 52, 1884], "metric": [44, 49], "propag": [45, 1871], "object": [46, 1899], "torchelast": 48, "kubernet": 48, "multipl": [50, 1876, 1880, 1882, 1900], "worker": [50, 53, 1884], "quickstart": 51, "except": [52, 1884], "dynam": [52, 62, 65, 1902, 1905], "c10d": 52, "etcd": 52, "legaci": 52, "torchrun": 53, "node": [53, 71, 74, 78, 79, 901, 902, 903, 904, 905, 1877], "stack": [53, 1795, 1902], "fault": 53, "toler": 53, "size": [53, 528, 1872], "failur": [53, 68], "min": [53, 405, 1286], "max": [53, 401, 1281], "4": [53, 60], "membership": [53, 1857], "note": [53, 1852, 1857, 1880, 1902, 1907], "definit": [53, 1857], "deploy": [53, 1887], "import": [53, 1851, 1894, 1899], "notic": [53, 1851], "expir": 54, "timer": 54, "client": 54, "train": [55, 1876, 1888, 1890, 1902], "script": [55, 1195, 1854, 1894, 1895], "helper": 56, "fullyshardeddataparallel": 57, "func": [58, 59, 61, 63, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1882, 1883], "patch": [60, 1899], "norm": [60, 446, 1240, 1643], "happen": 60, "option": [60, 1856, 1879, 1894, 1898], "batchnorm": 60, "paramet": [60, 1597, 1856, 1898], "functorch": [60, 61], "eval": [60, 1877], "migrat": [61, 1854], "make_funct": 61, "combine_state_for_ensembl": 61, "ux": 62, "vmap": [62, 63, 883, 1125, 1844, 1882, 1883], "mutat": [62, 1919], "arbitrari": [62, 1899], "structur": [62, 1857], "out": [62, 1870, 1884], "depend": [62, 1899, 1908], "control": [62, 65, 1892], "flow": [62, 65, 1902], "item": [62, 346], "shape": [62, 79, 1895], "nonzero": [62, 445, 1642], "friend": 62, "whirlwind": 63, "tour": 63, "grad": [63, 284, 898, 1115, 1877, 1880], "auto": 63, "vector": 63, "vjp": [63, 897, 1124], "jacobian": [63, 894], "jvp": [63, 882, 895, 1120, 1883], "jacrev": [63, 1119], "jacfwd": [63, 1118], "hessian": [63, 892, 1117], "futur": 64, "A": [65, 1888], "quick": 65, "primer": 65, "manipul": [65, 1871], "direct": 65, "With": [65, 1859], "replace_pattern": 65, "proxi": 65, "retrac": 65, "interpret": [65, 1854], "pattern": [65, 1856, 1895, 1899], "introduct": [65, 1864, 1872, 1902], "pitfal": [65, 1895], "pdb": 65, "print": [65, 1856, 1857], "to_fold": 65, "graphmodul": 65, "avail": 65, "debugg": 65, "symbol": [65, 72, 77, 80, 81, 1895, 1902, 1919], "trace": [65, 582, 1199, 1821, 1854, 1895, 1901, 1902], "static": [65, 1895, 1902], "tracer": [65, 67, 68, 1854], "leaf": 65, "miscellanea": 65, "diagsys0001": 66, "arg": 66, "format": [66, 1899], "too": 66, "verbos": 66, "fxe0001": 67, "success": 67, "fxe0002": 68, "fxe0003": 69, "frontend": [69, 75], "fxe0004": 70, "convert": [70, 788], "neg": [70, 433, 435, 1318, 1319], "sigmoid": [70, 517, 750, 1446, 1567, 1754], "fxe0005": 71, "fxe0006": 72, "atenlib": [72, 73], "fxe0007": 73, "fxe0008": 74, "fxe0009": 75, "fxe0010": 76, "fxe0011": 77, "call": [77, 1856, 1857, 1883], "fxe0012": 78, "unsupport": [78, 1856, 1857, 1859, 1895, 1897], "analysi": 78, "poe0001": 79, "miss": [79, 80, 81], "infer": [79, 1871, 1877, 1879, 1893], "poe0002": 80, "poe0003": 81, "standard": 81, "poe0004": 82, "newer": 82, "opset": 82, "version": [82, 1893], "abs_": 85, "absolut": [86, 673], "absolute_": 87, "aco": [88, 674], "acos_": 89, "acosh": [90, 675], "acosh_": 91, "add_": 93, "addbmm": [94, 677], "addbmm_": 95, "addcdiv": [96, 678], "addcdiv_": 97, "addcmul": [98, 679], "addcmul_": 99, "addmm": [100, 680, 1776], "addmm_": 101, "addmv": [102, 681], "addmv_": 103, "addr": [104, 682], "addr_": 105, "adjoint": [106, 683], "all": [107, 684, 1895, 1898], "allclos": [108, 685], "amax": [109, 686], "amin": [110, 687], "aminmax": [111, 688], "apply_": 114, "arcco": [115, 857], "arccos_": 116, "arccosh": [117, 858], "arccosh_": 118, "arcsin": [119, 859], "arcsin_": 120, "arcsinh": [121, 860], "arcsinh_": 122, "arctan": [123, 861], "arctan2": [124, 862], "arctan2_": 125, "arctan_": 126, "arctanh": [127, 863], "arctanh_": 128, "argmax": [129, 865], "argmin": [130, 866], "argsort": [131, 867], "argwher": [132, 868], "as_strid": [133, 869], "as_subclass": 134, "asin": [135, 872], "asin_": 136, "asinh": [137, 873], "asinh_": 138, "atan": [139, 874], "atan2": [140, 875], "atan2_": 141, "atan_": 142, "atanh": [143, 876], "atanh_": 144, "backward": [145, 880, 884, 1877, 1878, 1880, 1885, 1908], "baddbmm": [146, 912], "baddbmm_": 147, "bernoulli_": 149, "bincount": [151, 915], "bitwise_and": [152, 916], "bitwise_and_": 153, "bitwise_left_shift": [154, 917], "bitwise_left_shift_": 155, "bitwise_not": [156, 918], "bitwise_not_": 157, "bitwise_or": [158, 919], "bitwise_or_": 159, "bitwise_right_shift": [160, 920], "bitwise_right_shift_": 161, "bitwise_xor": [162, 921], "bitwise_xor_": 163, "bmm": [164, 924], "bool": 165, "broadcast_to": [166, 927], "byte": 167, "cauchy_": 168, "ccol_indic": 169, "cdoubl": 170, "ceil": [171, 933], "ceil_": 172, "cfloat": 173, "chalf": 174, "char": 175, "choleski": [176, 935, 1213], "cholesky_invers": [177, 936], "cholesky_solv": [178, 937], "chunk": [179, 938], "clamp": [180, 762, 939], "clamp_": 181, "clip": [182, 940, 1876], "clip_": 183, "clone": [184, 941], "coalesc": 185, "col_indic": 186, "conj": [187, 949], "conj_phys": [188, 950], "conj_physical_": 189, "contigu": 190, "copy_": 191, "copysign": [192, 951], "copysign_": 193, "corrcoef": [194, 952], "co": [195, 953], "cos_": 196, "cosh": [197, 954], "cosh_": 198, "count_nonzero": [199, 955], "cov": [200, 956], "cross": [202, 957, 1216, 1877], "crow_indic": 203, "cummax": [205, 1036], "cummin": [206, 1037], "cumprod": [207, 1038], "cumprod_": 208, "cumsum": [209, 1039], "cumsum_": 210, "data_ptr": 211, "deg2rad": [212, 1041], "dense_dim": 213, "dequant": [214, 1042, 1902], "det": [215, 1043, 1217], "detach": 216, "detach_": 217, "devic": [218, 979, 1880, 1891, 1914], "diag": [219, 1044], "diag_emb": [220, 1045], "diagflat": [221, 1046], "diagon": [222, 1047, 1218], "diagonal_scatt": [223, 1048], "diff": [224, 1049], "digamma": [225, 1050], "digamma_": 226, "dim": [227, 1870], "dist": [228, 1051], "div": [229, 1052, 1893], "div_": 230, "divid": [231, 1053], "divide_": 232, "dot": [233, 1054], "doubl": 234, "dsplit": [235, 1055], "element_s": 236, "eq": [237, 1062], "eq_": 238, "equal": [239, 1063], "erf": [240, 1064], "erf_": 241, "erfc": [242, 1065], "erfc_": 243, "erfinv": [244, 1066], "erfinv_": 245, "exp": [246, 1067], "exp_": 247, "expand": 248, "expand_a": 249, "expm1": [250, 1069], "expm1_": 251, "exponential_": 252, "fill_": 253, "fill_diagonal_": 254, "fix_": 256, "flatten": [257, 1096, 1362], "flip": [258, 1097], "fliplr": [259, 1098], "flipud": [260, 1099], "float": [261, 1893], "float_pow": [262, 1100], "float_power_": 263, "floor": [264, 1101], "floor_": 265, "floor_divid": [266, 1102], "floor_divide_": 267, "fmax": [268, 1103], "fmin": [269, 1104], "fmod": [270, 1105], "fmod_": 271, "frac": [272, 1106], "frac_": 273, "frexp": [274, 1107], "gather": [275, 972, 1126], "gcd": [276, 1127], "gcd_": 277, "ge": [278, 1128], "ge_": 279, "geometric_": 280, "geqrf": [281, 1129], "ger": [282, 1130], "get_devic": 283, "greater": [285, 1138], "greater_": 286, "greater_equ": [287, 1139], "greater_equal_": 288, "gt": [289, 1140], "gt_": 290, "half": 291, "hardshrink": [292, 1372, 1518], "heavisid": [293, 1143], "histc": [294, 1144], "histogram": [295, 1145], "hsplit": [296, 1147], "hypot": [297, 1150], "hypot_": 298, "i0": [299, 1151], "i0_": 300, "igamma": [301, 1152], "igamma_": 302, "igammac": [303, 1153], "igammac_": 304, "index_add": [306, 1155], "index_add_": 307, "index_copi": [308, 1156], "index_copy_": 309, "index_fil": 310, "index_fill_": 311, "index_put": 312, "index_put_": 313, "index_reduc": [314, 1157], "index_reduce_": 315, "index_select": [316, 1158], "indic": [317, 1852], "inner": [318, 1161], "int": 319, "int_repr": 320, "invers": [321, 1162, 1862], "is_coalesc": 322, "is_complex": [323, 1163], "is_conj": [324, 1164], "is_contigu": 325, "is_cuda": 326, "is_floating_point": [327, 1166], "is_infer": 328, "is_leaf": 329, "is_meta": 330, "is_pin": 331, "is_quant": 332, "is_set_to": 333, "is_shar": 334, "is_sign": 335, "is_spars": 336, "is_sparse_csr": 337, "isclos": [338, 1173], "isfinit": [339, 1174], "isinf": [340, 1176], "isnan": [341, 1177], "isneginf": [342, 1178], "isposinf": [343, 1179], "isreal": [344, 1180], "istft": [345, 1181], "items": 347, "kthvalu": [348, 1205], "lcm": [349, 1206], "lcm_": 350, "ldexp": [351, 1207], "ldexp_": 352, "le": [353, 1208], "le_": 354, "lerp": [355, 1209], "lerp_": 356, "less": [357, 1210], "less_": 358, "less_equ": [359, 1211], "less_equal_": 360, "lgamma": [361, 1212], "lgamma_": 362, "log10": [364, 1258], "log10_": 365, "log1p": [366, 1259], "log1p_": 367, "log2": [368, 1260], "log2_": 369, "log_": 370, "log_normal_": 371, "logaddexp": [372, 1261], "logaddexp2": [373, 1262], "logcumsumexp": [374, 1263], "logdet": [375, 1264], "logical_and": [376, 1265], "logical_and_": 377, "logical_not": [378, 1266], "logical_not_": 379, "logical_or": [380, 1267], "logical_or_": 381, "logical_xor": [382, 1268], "logical_xor_": 383, "logit": [384, 1269], "logit_": 385, "logsumexp": [386, 1271], "long": 387, "lt": [388, 1272], "lt_": 389, "lu": [390, 1230, 1273], "lu_solv": [391, 1233, 1274], "map_": 392, "masked_fil": 393, "masked_fill_": 394, "masked_scatt": 395, "masked_scatter_": 396, "masked_select": [397, 1277], "matmul": [398, 1234, 1278], "matrix_exp": [399, 1235, 1279], "matrix_pow": [400, 1237, 1280], "maximum": [402, 1282], "mean": [403, 1283], "median": [404, 1284], "minimum": [406, 1287], "mm": [407, 1288, 1779], "moveaxi": [409, 1290], "movedim": [410, 1291], "msort": [411, 1304], "mul": [412, 1305], "mul_": 413, "multipli": [415, 1307], "multiply_": 416, "mv": [417, 1308], "mvlgamma": [418, 1309], "mvlgamma_": 419, "nan_to_num": [420, 1310], "nan_to_num_": 421, "nanmean": [422, 1311], "nanmedian": [423, 1312], "nanquantil": [424, 1313], "nansum": [425, 1314], "narrow": [426, 1315], "narrow_copi": [427, 1316], "nbyte": 428, "ndim": 429, "ndimens": 430, "ne": [431, 1317], "ne_": 432, "neg_": 434, "negative_": 436, "nelement": 437, "new_empti": 438, "new_ful": 439, "new_on": 440, "new_tensor": 441, "new_zero": 442, "nextaft": [443, 1320], "nextafter_": 444, "normal_": 447, "not_equ": [448, 1645], "not_equal_": 449, "numel": [450, 1646], "numpi": [451, 1895], "orgqr": [452, 1688], "ormqr": [453, 1689], "outer": [454, 1690], "permut": [455, 1692, 1870], "pin_memori": 456, "pinvers": [457, 1693], "polygamma": [458, 1696], "polygamma_": 459, "posit": [460, 1697], "pow": [461, 1698], "pow_": 462, "prod": [463, 1699], "put_": 464, "q_per_channel_axi": 465, "q_per_channel_scal": 466, "q_per_channel_zero_point": 467, "q_scale": 468, "q_zero_point": 469, "qr": [470, 1242, 1701], "qscheme": 471, "quantil": [472, 1702], "rad2deg": [473, 1709], "random_": 474, "ravel": [475, 1718], "reciproc": [477, 1720], "reciprocal_": 478, "record_stream": 479, "register_hook": [480, 904], "remaind": [481, 1721], "remainder_": 482, "renorm": [483, 1722], "renorm_": 484, "repeat": 485, "repeat_interleav": [486, 1723], "requires_grad": [487, 1877], "requires_grad_": 488, "reshap": [489, 1724], "reshape_a": 490, "resize_": 491, "resize_as_": 492, "resolve_conj": [493, 1725], "resolve_neg": [494, 1726], "retain_grad": 495, "retains_grad": 496, "roll": [497, 1728], "rot90": [498, 1729], "round": [499, 1730], "round_": 500, "row_indic": 501, "rsqrt": [502, 1732], "rsqrt_": 503, "scatter": [504, 974, 1734], "scatter_": 505, "scatter_add": [506, 1735], "scatter_add_": 507, "scatter_reduc": [508, 1736], "scatter_reduce_": 509, "select": [510, 1739, 1864], "select_scatt": [511, 1740], "set_": 512, "sgn": [513, 1753], "sgn_": 514, "share_memory_": 515, "short": 516, "sigmoid_": 518, "sign": [519, 1755], "sign_": 520, "signbit": [521, 1767], "sin": [522, 1768], "sin_": 523, "sinc": [524, 1769], "sinc_": 525, "sinh": [526, 1770], "sinh_": 527, "slice_scatt": [529, 1771], "slogdet": [530, 1243, 1772], "smm": [531, 1773], "softmax": [532, 1449, 1571, 1774, 1781], "sort": [533, 1775], "sparse_dim": 534, "sparse_mask": 535, "sparse_resize_": 536, "sparse_resize_and_clear_": 537, "split": [538, 1790], "sqrt": [539, 1791], "sqrt_": 540, "squar": [541, 1792], "square_": 542, "squeez": [543, 1793], "squeeze_": 544, "sspaddmm": [545, 1794], "std": [546, 1796], "stft": [547, 1798], "storag": [548, 1913], "storage_offset": 549, "storage_typ": 550, "stride": 551, "sub": [552, 1799], "sub_": 553, "subtract": [554, 1800], "subtract_": 555, "sum": [556, 1783, 1801, 1873], "sum_to_s": 557, "svd": [558, 1247, 1802], "swapax": [559, 1804], "swapdim": [560, 1805], "t_": 562, "take": [563, 1812, 1898], "take_along_dim": [564, 1813], "tan": [565, 1814], "tan_": 566, "tanh": [567, 1456, 1576, 1815], "tanh_": 568, "tensor_split": [569, 1817], "tile": [570, 1819], "to_dens": 572, "to_mkldnn": 573, "to_spars": 574, "to_sparse_bsc": 575, "to_sparse_bsr": 576, "to_sparse_coo": 577, "to_sparse_csc": 578, "to_sparse_csr": 579, "tolist": 580, "topk": [581, 1820], "transpos": [583, 1822], "transpose_": 584, "triangular_solv": [585, 1825], "tril": [586, 1826], "tril_": 587, "triu": [588, 1828], "triu_": 589, "true_divid": [590, 1830], "true_divide_": 591, "trunc": [592, 1831], "trunc_": 593, "type_a": 595, "unbind": [596, 1832, 1872], "unflatten": [597, 1466, 1833], "unfold": [598, 1467, 1583], "uniform_": 599, "uniqu": [600, 1834], "unique_consecut": [601, 1835], "unsqueez": [602, 1836], "unsqueeze_": 603, "untyped_storag": 604, "var": [606, 1839], "vdot": [607, 1841], "view": [608, 1864, 1893, 1915], "view_a": 609, "vsplit": [610, 1845], "where": [611, 1847, 1851], "xlogi": [612, 1848], "xlogy_": 613, "zero_": 614, "_assert": 615, "_foreach_ab": 616, "_foreach_abs_": 617, "_foreach_aco": 618, "_foreach_acos_": 619, "_foreach_asin": 620, "_foreach_asin_": 621, "_foreach_atan": 622, "_foreach_atan_": 623, "_foreach_ceil": 624, "_foreach_ceil_": 625, "_foreach_co": 626, "_foreach_cos_": 627, "_foreach_cosh": 628, "_foreach_cosh_": 629, "_foreach_erf": 630, "_foreach_erf_": 631, "_foreach_erfc": 632, "_foreach_erfc_": 633, "_foreach_exp": 634, "_foreach_exp_": 635, "_foreach_expm1": 636, "_foreach_expm1_": 637, "_foreach_floor": 638, "_foreach_floor_": 639, "_foreach_frac": 640, "_foreach_frac_": 641, "_foreach_lgamma": 642, "_foreach_lgamma_": 643, "_foreach_log": 644, "_foreach_log10": 645, "_foreach_log10_": 646, "_foreach_log1p": 647, "_foreach_log1p_": 648, "_foreach_log2": 649, "_foreach_log2_": 650, "_foreach_log_": 651, "_foreach_neg": 652, "_foreach_neg_": 653, "_foreach_reciproc": 654, "_foreach_reciprocal_": 655, "_foreach_round": 656, "_foreach_round_": 657, "_foreach_sigmoid": 658, "_foreach_sigmoid_": 659, "_foreach_sin": 660, "_foreach_sin_": 661, "_foreach_sinh": 662, "_foreach_sinh_": 663, "_foreach_sqrt": 664, "_foreach_sqrt_": 665, "_foreach_tan": 666, "_foreach_tan_": 667, "_foreach_trunc": 668, "_foreach_trunc_": 669, "_foreach_zero_": 670, "_log": [671, 1863], "set_log": 671, "bnrelu2d": [691, 714], "bnrelu3d": [692, 715], "convbn1d": [693, 703], "convbn2d": [694, 704], "convbn3d": [695, 705], "convbnrelu1d": [696, 706], "convbnrelu2d": [697, 707], "convbnrelu3d": [698, 708], "convrelu1d": [699, 716], "convrelu2d": [700, 709, 717], "convrelu3d": [701, 710, 718], "linearrelu": [702, 711, 719, 720], "freeze_bn_stat": 712, "update_bn_stat": 713, "conv2d": [721, 730, 764, 1345, 1491], "conv3d": [722, 731, 765, 1346, 1492], "lstm": [725, 753, 1386, 1892], "multiheadattent": [726, 1422], "batchnorm2d": [727, 1335], "batchnorm3d": [728, 1336], "conv1d": [729, 763, 1344, 1490], "convtranspose1d": [732, 1347], "convtranspose2d": [733, 1348], "convtranspose3d": [734, 1349], "elu": [735, 766, 1358, 1504], "embed": [736, 1359, 1506], "embeddingbag": [737, 1360], "fxfloatfunct": 738, "floatfunct": 739, "groupnorm": [740, 1371], "hardswish": [741, 768, 1374, 1520], "instancenorm1d": [742, 1379], "instancenorm2d": [743, 1380], "instancenorm3d": [744, 1381], "layernorm": [745, 1388], "leakyrelu": [746, 1402], "qfunction": 748, "relu6": [749, 1436, 1561], "gru": [751, 1368], "grucel": [752, 1369], "lstmcell": [754, 1387], "rnncell": [756, 1433], "adaptive_avg_pool2d": [757, 1475], "adaptive_avg_pool3d": [758, 1476], "avg_pool2d": [759, 1483], "avg_pool3d": [760, 1484], "celu": [761, 1338, 1489], "hardsigmoid": [767, 1373, 1519], "hardtanh": [769, 1375, 1521], "interpol": [770, 1526], "leaky_relu": [771, 1530], "max_pool1d": [773, 1539], "max_pool2d": [774, 1540], "threshold": [775, 1458, 1578], "upsampl": [776, 1468, 1584], "upsample_bilinear": [777, 1585], "upsample_nearest": [778, 1586], "dequantstub": 779, "quantstub": 780, "quantwrapp": 781, "add_quant_dequ": 782, "backendconfig": 783, "backendpatternconfig": 784, "dtypeconfig": 785, "dtypewithconstraint": 786, "observationtyp": 787, "default_eval_fn": 789, "fakequant": [790, 1902], "fakequantizebas": 791, "fixedqparamsfakequant": 792, "fusedmovingavgobsfakequant": 793, "default_fake_qu": 794, "default_fused_act_fake_qu": 795, "default_fused_per_channel_wt_fake_qu": 796, "default_fused_wt_fake_qu": 797, "default_histogram_fake_qu": 798, "default_per_channel_weight_fake_qu": 799, "default_weight_fake_qu": 800, "disable_fake_qu": 801, "disable_observ": 802, "enable_fake_qu": 803, "enable_observ": 804, "fuse_modul": 805, "convertcustomconfig": 806, "fusecustomconfig": 807, "preparecustomconfig": 808, "standalonemoduleconfigentri": 809, "histogramobserv": 810, "minmaxobserv": 811, "movingaverageminmaxobserv": 812, "movingaverageperchannelminmaxobserv": 813, "noopobserv": 814, "observerbas": 815, "perchannelminmaxobserv": 816, "placeholderobserv": 817, "recordingobserv": 818, "default_debug_observ": 819, "default_dynamic_quant_observ": 820, "default_float_qparams_observ": 821, "default_histogram_observ": 822, "default_observ": 823, "default_per_channel_weight_observ": 824, "default_placeholder_observ": 825, "default_weight_observ": 826, "get_observer_state_dict": 827, "load_observer_state_dict": 828, "prepar": [829, 1902, 1905], "prepare_qat": 830, "propagate_qconfig": 831, "qconfig": [832, 1902, 1905], "default_activation_only_qconfig": 833, "default_debug_qconfig": 834, "default_dynamic_qconfig": 835, "default_per_channel_qconfig": 836, "default_qat_qconfig": 837, "default_qat_qconfig_v2": 838, "default_qconfig": 839, "default_weight_only_qconfig": 840, "float16_dynamic_qconfig": 841, "float16_static_qconfig": 842, "float_qparams_weight_only_qconfig": 843, "per_channel_dynamic_qconfig": 844, "qconfigmap": 845, "get_default_qat_qconfig_map": 846, "get_default_qconfig_map": 847, "quantiz": [848, 1873, 1888, 1895, 1902, 1903, 1904, 1905], "quantize_dynam": 849, "convert_fx": 850, "fuse_fx": 851, "prepare_fx": 852, "prepare_qat_fx": 853, "quantize_qat": 854, "swap_modul": 855, "arang": 856, "are_deterministic_algorithms_en": 864, "as_tensor": 870, "asarrai": 871, "atleast_1d": 877, "atleast_2d": 878, "atleast_3d": 879, "dual_level": 885, "forward_ad": [886, 887], "make_du": 886, "unpack_du": 887, "functionctx": [888, 889, 890, 891], "mark_dirti": 888, "mark_non_differenti": 889, "save_for_backward": 890, "set_materialize_grad": 891, "hvp": 893, "vhp": 896, "gradcheck": [899, 1885], "gradgradcheck": [900, 1885], "metadata": [901, 1887], "name": [902, 1856, 1870, 1871], "next_funct": 903, "register_prehook": 905, "load_nvprof": 906, "export_chrome_trac": 907, "key_averag": 908, "self_cpu_time_tot": 909, "total_averag": 910, "set_multithreading_en": 911, "bartlett_window": 913, "blackman_window": 922, "block_diag": 923, "broadcast_shap": 925, "broadcast_tensor": 926, "bucket": 928, "can_cast": 929, "cartesian_prod": 930, "cat": 931, "cdist": 932, "chain_matmul": 934, "column_stack": 942, "combin": [943, 1882], "compiled_with_cxx11_abi": 945, "concat": 947, "concaten": 948, "cudagraph": 958, "cudapluggablealloc": 959, "externalstream": 961, "outofmemoryerror": 962, "streamcontext": 964, "caching_allocator_alloc": 965, "caching_allocator_delet": 966, "can_device_access_p": 967, "change_current_alloc": 968, "clock_rat": 969, "comm": [970, 971, 972, 973, 974], "broadcast": [970, 1878], "broadcast_coalesc": 971, "reduce_add": 973, "current_blas_handl": 975, "current_devic": 976, "current_stream": 977, "default_stream": 978, "device_count": 980, "device_of": 981, "empty_cach": [982, 1294], "get_allocator_backend": 983, "get_arch_list": 984, "get_device_cap": 985, "get_device_nam": 986, "get_device_properti": 987, "get_gencode_flag": 988, "get_rng_stat": [989, 1136, 1295], "get_rng_state_al": 990, "get_sync_debug_mod": 991, "graph_pool_handl": 993, "init": [994, 1875], "initial_se": [995, 1160], "ipc_collect": 996, "is_avail": 997, "is_current_stream_captur": 998, "is_initi": 999, "_create_jit_fn": 1000, "_create_multi_output_jit_fn": 1001, "list_gpu_process": 1002, "make_graphed_cal": 1003, "manual_se": [1004, 1276, 1296], "manual_seed_al": 1005, "max_memory_alloc": 1006, "max_memory_cach": 1007, "max_memory_reserv": 1008, "mem_get_info": 1009, "memory_alloc": 1010, "memory_cach": 1011, "memory_reserv": 1012, "memory_snapshot": 1013, "memory_stat": 1014, "memory_summari": 1015, "memory_usag": 1016, "mark": 1017, "range_pop": 1018, "range_push": 1019, "power_draw": 1020, "reset_max_memory_alloc": 1021, "reset_max_memory_cach": 1022, "reset_peak_memory_stat": 1023, "seed": [1024, 1300, 1738], "seed_al": 1025, "set_devic": 1026, "set_per_process_memory_fract": [1027, 1301], "set_rng_stat": [1028, 1302, 1751], "set_rng_state_al": 1029, "set_stream": 1030, "set_sync_debug_mod": 1031, "temperatur": 1034, "cumulative_trapezoid": 1040, "dstack": 1056, "einsum": 1057, "empti": 1058, "empty_lik": 1059, "empty_strid": 1060, "enable_grad": 1061, "exp2": 1068, "ey": 1070, "fake_quantize_per_channel_affin": 1071, "fake_quantize_per_tensor_affin": 1072, "fft2": 1074, "fftfreq": 1075, "fftn": 1076, "fftshift": 1077, "hfft": 1078, "hfft2": 1079, "hfftn": 1080, "ifft": 1081, "ifft2": 1082, "ifftn": 1083, "ifftshift": 1084, "ihfft": 1085, "ihfft2": 1086, "ihfftn": 1087, "irfft": 1088, "irfft2": 1089, "irfftn": 1090, "rfft": 1091, "rfft2": 1092, "rfftfreq": 1093, "rfftn": 1094, "from_dlpack": 1108, "from_numpi": 1109, "frombuff": 1110, "full": [1111, 1893], "full_lik": 1112, "functional_cal": [1113, 1638], "grad_and_valu": 1116, "replace_all_batch_norm_modules_": 1122, "stack_module_st": 1123, "get_default_dtyp": 1131, "get_deterministic_debug_mod": 1132, "get_float32_matmul_precis": 1133, "get_num_interop_thread": 1134, "get_num_thread": 1135, "hamming_window": 1141, "hann_window": 1142, "histogramdd": 1146, "hspmm": 1148, "hstack": 1149, "inference_mod": 1159, "is_deterministic_algorithms_warn_only_en": 1165, "is_grad_en": 1167, "is_inference_mode_en": 1168, "is_nonzero": 1169, "is_storag": 1170, "is_tensor": 1171, "is_warn_always_en": 1172, "isin": 1175, "attribut": [1182, 1854, 1856, 1857, 1859, 1914], "scriptfunct": 1183, "scriptmodul": [1184, 1893], "annot": [1185, 1857], "enable_onednn_fus": 1186, "fork": 1187, "freez": 1188, "ignor": 1189, "isinst": 1190, "onednn_fusion_en": 1192, "optimize_for_infer": 1193, "save": [1194, 1733, 1851, 1877, 1887, 1893, 1902], "script_if_trac": 1196, "set_fusion_strategi": 1197, "strict_fus": 1198, "trace_modul": 1200, "unus": 1201, "wait": 1202, "kaiser_window": 1203, "kron": 1204, "cholesky_ex": 1214, "cond": 1215, "eig": 1219, "eigh": 1220, "eigval": 1221, "eigvalsh": 1222, "householder_product": 1223, "inv": 1224, "inv_ex": 1225, "ldl_factor": 1226, "ldl_factor_ex": 1227, "ldl_solv": 1228, "lstsq": 1229, "lu_factor": 1231, "lu_factor_ex": 1232, "matrix_norm": 1236, "matrix_rank": 1238, "multi_dot": 1239, "pinv": 1241, "solv": 1244, "solve_ex": 1245, "solve_triangular": 1246, "svdval": 1248, "tensorinv": 1249, "tensorsolv": 1250, "vander": [1251, 1838], "vecdot": 1252, "vector_norm": 1253, "linspac": 1254, "lobpcg": 1256, "logspac": 1270, "lu_unpack": 1275, "meshgrid": 1285, "current_allocated_memori": 1292, "driver_allocated_memori": 1293, "stop": 1299, "adaptiveavgpool1d": 1321, "adaptiveavgpool2d": 1322, "adaptiveavgpool3d": 1323, "adaptivelogsoftmaxwithloss": 1324, "adaptivemaxpool1d": 1325, "adaptivemaxpool2d": 1326, "adaptivemaxpool3d": 1327, "alphadropout": 1328, "avgpool1d": 1329, "avgpool2d": 1330, "avgpool3d": 1331, "bceloss": 1332, "bcewithlogitsloss": 1333, "batchnorm1d": 1334, "bilinear": [1337, 1486], "ctcloss": 1339, "channelshuffl": 1340, "constantpad1d": 1341, "constantpad2d": 1342, "constantpad3d": 1343, "cosineembeddingloss": 1350, "cosinesimilar": 1351, "crossentropyloss": 1352, "dataparallel": [1353, 1873, 1874, 1876, 1880], "dropout": [1354, 1500, 1873, 1874], "dropout1d": [1355, 1501], "dropout2d": [1356, 1502], "dropout3d": [1357, 1503], "featurealphadropout": 1361, "fold": [1363, 1509], "fractionalmaxpool2d": 1364, "fractionalmaxpool3d": 1365, "gelu": [1366, 1513], "glu": [1367, 1514], "gaussiannllloss": 1370, "hingeembeddingloss": 1376, "huberloss": 1377, "ident": [1378, 1612, 1620, 1857, 1884], "kldivloss": 1382, "l1loss": 1383, "lppool1d": 1384, "lppool2d": 1385, "lazybatchnorm1d": 1389, "lazybatchnorm2d": 1390, "lazybatchnorm3d": 1391, "lazyconv1d": 1392, "lazyconv2d": 1393, "lazyconv3d": 1394, "lazyconvtranspose1d": 1395, "lazyconvtranspose2d": 1396, "lazyconvtranspose3d": 1397, "lazyinstancenorm1d": 1398, "lazyinstancenorm2d": 1399, "lazyinstancenorm3d": 1400, "lazylinear": 1401, "localresponsenorm": 1404, "logsigmoid": [1405, 1535], "logsoftmax": 1406, "mseloss": 1407, "marginrankingloss": 1408, "maxpool1d": 1409, "maxpool2d": 1410, "maxpool3d": 1411, "maxunpool1d": 1412, "maxunpool2d": 1413, "maxunpool3d": 1414, "mish": [1415, 1545], "moduledict": [1417, 1857], "modulelist": [1418, 1856, 1857], "multilabelmarginloss": 1419, "multilabelsoftmarginloss": 1420, "multimarginloss": 1421, "nllloss": 1423, "prelu": [1424, 1559], "pairwisedist": 1425, "parameterdict": 1426, "parameterlist": 1427, "pixelshuffl": 1428, "pixelunshuffl": 1429, "poissonnllloss": 1430, "rnn": [1431, 1630, 1631, 1632, 1633, 1634, 1635, 1892], "rnnbase": 1432, "rrelu": [1434, 1563], "relu": [1435, 1560], "reflectionpad1d": 1437, "reflectionpad2d": 1438, "reflectionpad3d": 1439, "replicationpad1d": 1440, "replicationpad2d": 1441, "replicationpad3d": 1442, "selu": [1443, 1566], "sequenti": 1444, "silu": [1445, 1568], "smoothl1loss": 1447, "softmarginloss": 1448, "softmax2d": 1450, "softmin": [1451, 1572], "softplu": [1452, 1573], "softshrink": [1453, 1574], "softsign": [1454, 1575], "syncbatchnorm": 1455, "tanhshrink": [1457, 1577], "transformerdecod": 1460, "transformerdecoderlay": 1461, "transformerencod": 1462, "transformerencoderlay": 1463, "tripletmarginloss": 1464, "tripletmarginwithdistanceloss": 1465, "upsamplingbilinear2d": 1469, "upsamplingnearest2d": 1470, "zeropad1d": 1471, "zeropad2d": 1472, "zeropad3d": 1473, "adaptive_avg_pool1d": 1474, "adaptive_max_pool1d": 1477, "adaptive_max_pool2d": 1478, "adaptive_max_pool3d": 1479, "affine_grid": 1480, "alpha_dropout": 1481, "avg_pool1d": 1482, "batch_norm": 1485, "conv_transpose1d": 1493, "conv_transpose2d": 1494, "conv_transpose3d": 1495, "cosine_embedding_loss": 1496, "cosine_similar": 1497, "cross_entropi": 1498, "ctc_loss": 1499, "elu_": 1505, "embedding_bag": 1507, "feature_alpha_dropout": 1508, "fractional_max_pool2d": 1510, "fractional_max_pool3d": 1511, "gaussian_nll_loss": 1512, "grid_sampl": 1515, "group_norm": 1516, "gumbel_softmax": 1517, "hardtanh_": 1522, "hinge_embedding_loss": 1523, "huber_loss": 1524, "instance_norm": 1525, "kl_div": 1527, "l1_loss": 1528, "layer_norm": 1529, "leaky_relu_": 1531, "local_response_norm": 1533, "log_softmax": [1534, 1778], "lp_pool1d": 1536, "lp_pool2d": 1537, "margin_ranking_loss": 1538, "max_pool3d": 1541, "max_unpool1d": 1542, "max_unpool2d": 1543, "max_unpool3d": 1544, "mse_loss": 1546, "multi_margin_loss": 1547, "multilabel_margin_loss": 1548, "multilabel_soft_margin_loss": 1549, "nll_loss": 1550, "one_hot": 1552, "pad": [1553, 1873], "pairwise_dist": 1554, "pdist": 1555, "pixel_shuffl": 1556, "pixel_unshuffl": 1557, "poisson_nll_loss": 1558, "relu_": 1562, "rrelu_": 1564, "scaled_dot_product_attent": 1565, "smooth_l1_loss": 1569, "soft_margin_loss": 1570, "threshold_": 1579, "data_parallel": [1580, 1874], "triplet_margin_loss": 1581, "triplet_margin_with_distance_loss": 1582, "lazymodulemixin": 1587, "register_module_backward_hook": 1588, "register_module_buffer_registration_hook": 1589, "register_module_forward_hook": 1590, "register_module_forward_pre_hook": 1591, "register_module_full_backward_hook": 1592, "register_module_full_backward_pre_hook": 1593, "register_module_module_registration_hook": 1594, "register_module_parameter_registration_hook": 1595, "distributeddataparallel": [1596, 1876, 1880, 1881], "uninitializedbuff": 1598, "uninitializedparamet": 1599, "clip_grad_norm_": 1600, "clip_grad_value_": 1601, "parameters_to_vector": 1602, "parametr": [1603, 1604, 1606, 1607, 1608, 1609, 1888], "orthogon": 1603, "spectral_norm": [1604, 1637], "parametrizationlist": 1605, "is_parametr": 1607, "register_parametr": 1608, "remove_parametr": 1609, "basepruningmethod": 1610, "customfrommask": 1611, "l1unstructur": 1613, "lnstructur": 1614, "pruningcontain": 1615, "randomstructur": 1616, "randomunstructur": 1617, "prune": [1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1888], "custom_from_mask": 1618, "global_unstructur": 1619, "is_prun": 1621, "l1_unstructur": 1622, "ln_structur": 1623, "random_structur": 1624, "random_unstructur": 1625, "remove_spectral_norm": 1627, "remove_weight_norm": 1628, "packedsequ": 1629, "pack_padded_sequ": 1630, "pack_sequ": 1631, "pad_packed_sequ": 1632, "pad_sequ": 1633, "unpack_sequ": 1634, "unpad_sequ": 1635, "skip_init": 1636, "stateless": 1638, "vector_to_paramet": 1639, "weight_norm": 1640, "no_grad": 1641, "ones": 1647, "ones_lik": 1648, "exportopt": 1649, "exportoutput": 1650, "exportoutputseri": 1651, "jitscalartyp": 1652, "graphinfo": 1653, "verificationopt": 1654, "asgd": 1655, "adadelta": 1656, "adagrad": 1657, "adam": 1658, "adamw": 1659, "adamax": 1660, "lbfg": 1661, "nadam": 1662, "add_param_group": 1663, "load_state_dict": 1664, "step": [1666, 1898], "zero_grad": 1667, "radam": 1668, "rmsprop": 1669, "rprop": 1670, "sgd": 1671, "sparseadam": 1672, "chainedschedul": 1673, "constantlr": 1674, "cosineannealinglr": 1675, "cosineannealingwarmrestart": 1676, "cycliclr": 1677, "exponentiallr": 1678, "lambdalr": 1679, "linearlr": 1680, "multisteplr": 1681, "multiplicativelr": 1682, "onecyclelr": 1683, "polynomiallr": 1684, "reducelronplateau": 1685, "sequentiallr": 1686, "steplr": 1687, "pca_lowrank": 1691, "polar": 1695, "promote_typ": 1700, "quantize_per_channel": 1703, "quantize_per_tensor": 1704, "quantized_batch_norm": 1705, "quantized_max_pool1d": 1706, "quantized_max_pool2d": 1707, "sobolengin": 1708, "rand": 1710, "rand_lik": 1711, "randint": 1712, "randint_lik": 1713, "randn": 1714, "randn_lik": 1715, "randperm": 1716, "rang": [1717, 1856], "result_typ": 1727, "row_stack": 1731, "searchsort": 1737, "set_default_devic": 1741, "set_default_dtyp": 1742, "set_default_tensor_typ": 1743, "set_deterministic_debug_mod": 1744, "set_float32_matmul_precis": 1745, "set_flush_denorm": 1746, "set_grad_en": 1747, "set_num_interop_thread": 1748, "set_num_thread": 1749, "set_printopt": 1750, "set_warn_alwai": 1752, "signal": [1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1910], "bartlett": 1756, "blackman": 1757, "cosin": 1758, "gaussian": 1760, "general_cosin": 1761, "general_ham": 1762, "ham": 1763, "hann": 1764, "kaiser": 1765, "nuttal": 1766, "check_sparse_tensor_invari": 1777, "sampled_addmm": 1780, "spdiag": 1782, "sparse_bsc_tensor": 1784, "sparse_bsr_tensor": 1785, "sparse_compressed_tensor": 1786, "sparse_coo_tensor": 1787, "sparse_csc_tensor": 1788, "sparse_csr_tensor": 1789, "std_mean": 1797, "svd_lowrank": 1803, "sym_float": 1806, "sym_int": 1807, "sym_max": 1808, "sym_min": 1809, "sym_not": 1810, "tensordot": 1818, "trapezoid": 1823, "trapz": 1824, "tril_indic": 1827, "triu_indic": 1829, "use_deterministic_algorithm": 1837, "var_mean": 1840, "view_as_complex": 1842, "view_as_r": 1843, "vstack": 1846, "zero": 1849, "zeros_lik": 1850, "hub": 1851, "publish": 1851, "entrypoint": 1851, "download": 1851, "logic": [1851, 1856], "known": [1851, 1854], "bind": 1852, "tabl": [1852, 1893], "prim": 1853, "built": [1854, 1855, 1857, 1895], "comparison": [1854, 1856, 1857, 1919], "inspect": 1854, "warn": 1854, "appendix": [1854, 1857], "recurs": 1854, "constant": [1854, 1856], "fusion": 1854, "builtin": 1855, "math": [1855, 1919], "construct": [1856, 1857, 1859, 1872, 1898, 1911], "refin": [1856, 1857], "enum": [1856, 1857], "tupl": [1856, 1857], "express": [1856, 1857], "liter": [1856, 1857], "list": [1856, 1857, 1895], "dict": 1856, "arithmet": [1856, 1857], "subscript": [1856, 1857], "slice": [1856, 1857, 1891, 1919], "ternari": [1856, 1857], "cast": 1856, "statement": [1856, 1857], "assign": [1856, 1857], "match": [1856, 1871], "If": 1856, "while": [1856, 1857], "loop": 1856, "For": 1856, "continu": [1856, 1857], "return": [1856, 1857, 1884, 1909], "resolut": [1856, 1857], "lookup": 1856, "defin": [1856, 1882, 1883], "terminologi": 1857, "meta": 1857, "primit": 1857, "special": [1857, 1877, 1912], "instanc": 1857, "signatur": 1857, "expr": 1857, "convers": [1857, 1872], "atom": 1857, "parenthes": 1857, "form": 1857, "dictionari": 1857, "displai": 1857, "primari": 1857, "power": 1857, "unari": [1857, 1864, 1911], "bitwis": 1857, "binari": [1857, 1864], "shift": 1857, "boolean": 1857, "condit": 1857, "augment": 1857, "rais": 1857, "assert": [1857, 1886], "del": 1857, "compound": 1857, "els": 1857, "getattr": 1857, "hasattr": 1857, "zip": [1857, 1899], "enumer": 1857, "rule": [1857, 1871, 1883, 1896], "remot": [1857, 1909], "procedur": 1857, "execut": [1857, 1877, 1880, 1899, 1900], "program": 1857, "coverag": [1858, 1870, 1882], "properti": [1859, 1862], "Not": 1859, "correctli": 1859, "bound": 1859, "schema": 1859, "between": [1859, 1899], "matrix": [1862, 1902], "decomposit": 1862, "solver": 1862, "misc": 1862, "experiment": 1862, "motiv": 1864, "reduct": [1864, 1880, 1891, 1919], "mobile_optim": 1865, "model_zoo": 1866, "strategi": [1869, 1898], "descriptor": 1869, "file_descriptor": 1869, "file_system": 1869, "subprocess": 1869, "keep": [1870, 1899], "dimens": [1870, 1871], "unifi": 1870, "contract": 1870, "awai": 1870, "factori": 1870, "variant": 1870, "semant": [1871, 1878, 1880, 1886, 1893], "explicit": 1871, "align": 1871, "current": 1871, "subsystem": 1871, "constructor": 1872, "contain": 1873, "convolut": [1873, 1874, 1891, 1892], "layer": 1873, "pool": [1873, 1874], "activ": [1873, 1874], "weight": [1873, 1898], "nonlinear": 1873, "recurr": [1873, 1884], "distanc": [1873, 1874], "loss": [1873, 1874, 1876], "vision": [1873, 1874], "shuffl": 1873, "lazi": 1873, "attent": 1874, "typic": 1876, "unscal": 1876, "accumul": 1876, "penalti": 1876, "one": 1876, "per": [1876, 1898], "particular": [1876, 1877], "dtype": [1876, 1893, 1905, 1914], "encod": 1877, "histori": 1877, "set": [1877, 1895], "No": 1877, "multithread": 1877, "concurr": 1877, "determin": [1877, 1892], "retain": 1877, "thread": [1877, 1879], "safeti": 1877, "wirting": 1877, "calculu": 1877, "pictur": 1877, "conjug": 1877, "own": 1877, "formula": 1877, "domain": 1877, "whether": [1877, 1899], "fire": 1877, "differ": [1877, 1895], "modifi": 1877, "compat": 1878, "tune": 1879, "tensorfloat": [1880, 1886, 1891], "32": [1880, 1886, 1891, 1894], "tf32": [1880, 1886, 1891], "amper": [1880, 1891], "reduc": [1880, 1891], "fp16": [1880, 1891], "gemm": [1880, 1891], "bf16": [1880, 1891], "bc": 1880, "alloc": [1880, 1884], "cubla": 1880, "workspac": 1880, "cufft": 1880, "plan": [1880, 1886], "just": 1880, "time": 1880, "practic": [1880, 1890, 1902], "agnost": 1880, "buffer": [1880, 1890], "instead": 1880, "captur": 1880, "partial": 1880, "9": 1880, "6": 1880, "across": [1880, 1893], "intern": [1881, 1895, 1899], "processgroup": 1881, "ddpoptim": 1881, "separ": 1882, "setup_context": 1882, "like": [1882, 1899], "subclass": 1882, "wrapper": 1882, "__torch_function__": 1882, "overrid": [1882, 1922], "specifi": 1883, "staticmethod": 1883, "isn": 1884, "freed": 1884, "properli": 1884, "loader": 1884, "doesn": 1884, "notat": 1885, "background": [1885, 1908, 1909], "analyt": 1885, "output": 1885, "u": 1885, "reus": [1886, 1890], "hipfft": 1886, "rocfft": 1886, "enabl": 1886, "kernel": [1886, 1902], "larg": 1887, "fleet": 1887, "wide": 1887, "attach": 1887, "consider": 1887, "block": 1888, "neural": 1888, "tip": [1890, 1903], "fight": 1890, "deadlock": 1890, "through": 1890, "queue": 1890, "e": 1890, "g": 1890, "hogwild": 1890, "extrem": 1891, "finit": 1891, "instinct": 1891, "mi200": 1891, "reproduc": 1892, "nondeterminist": 1892, "algorithm": [1892, 1898, 1908], "content": [1893, 1899], "preserv": 1893, "them": [1893, 1899], "integ": 1893, "divis": 1893, "alwai": 1893, "includ": [1894, 1899], "compon": 1894, "instal": 1894, "cffi": 1894, "cpp": 1894, "found": 1894, "win": 1894, "channel": 1894, "without": 1894, "claus": 1894, "protect": 1894, "broken": 1894, "pipe": [1894, 1900], "driver": 1894, "shut": 1894, "down": 1894, "ipc": 1894, "alexnet": 1895, "v": 1895, "index": [1895, 1919], "inlin": 1895, "discov": 1895, "unconvert": 1895, "onc": 1895, "preview": 1895, "diagnost": 1896, "closur": 1898, "adjust": 1898, "rate": 1898, "averag": 1898, "swa": 1898, "ema": 1898, "schedul": 1898, "care": 1898, "put": 1898, "togeth": 1898, "your": 1899, "insid": 1899, "treat": 1899, "archiv": 1899, "file_structur": 1899, "given": 1899, "wa": 1899, "resourc": 1899, "later": 1899, "distinguish": 1899, "explan": 1899, "framework": [1899, 1907], "user": [1899, 1909], "find": 1899, "analyz": 1899, "extern": 1899, "mock": 1899, "refactor": 1899, "sharp": 1899, "global": 1899, "isol": 1899, "each": 1899, "mangl": 1899, "pipelin": 1900, "skip": 1900, "connect": 1900, "intel": 1901, "instrument": 1901, "technologi": 1901, "eager": 1902, "awar": 1902, "engin": [1902, 1919], "observ": [1902, 1905], "hardwar": 1902, "nativ": [1902, 1904], "configur": [1902, 1904, 1919], "insensit": 1903, "int8": 1903, "sensit": 1903, "ao": [1905, 1920, 1921], "top": 1905, "quantize_fx": 1905, "qconfig_map": 1905, "backend_config": 1905, "custom_config": 1905, "relat": 1905, "fake_quant": 1905, "intrins": 1905, "qat": 1905, "scheme": 1905, "rpc": 1907, "tensorpip": 1907, "rref": [1907, 1909], "remotemodul": 1907, "record": 1908, "dure": 1908, "smart": 1908, "end": 1908, "protocol": 1909, "assumpt": 1909, "lifetim": 1909, "reason": 1909, "scenario": 1909, "owner": 1909, "argument": 1909, "sparsiti": 1911, "coo": 1911, "hybrid": 1911, "uncoalesc": 1911, "csr": 1911, "csc": 1911, "bsr": 1911, "bsc": 1911, "memory_format": 1914, "tensorboard": 1916, "creation": 1919, "sampl": 1919, "quasi": 1919, "pointwis": 1919, "spectral": 1919, "bla": 1919, "lapack": 1919, "foreach": 1919, "tag": 1919, "n": [1920, 1921], "_numeric_suit": 1920, "_numeric_suite_fx": 1921, "info": 1923, "finfo": 1923, "iinfo": 1923}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.data_ptr": [[211, "torch-tensor-data-ptr"]], "torch.Tensor.device": [[218, "torch-tensor-device"]], "torch.Tensor.diagflat": [[221, "torch-tensor-diagflat"]], "torch.Tensor.divide_": [[232, "torch-tensor-divide"]], "torch.Tensor.cpu": [[201, "torch-tensor-cpu"]], "torch.Tensor.erfinv": [[244, "torch-tensor-erfinv"]], "torch.Tensor.diagonal": [[222, "torch-tensor-diagonal"]], "torch.Tensor.eq": [[237, "torch-tensor-eq"]], "torch.Tensor.cosh_": [[198, "torch-tensor-cosh"]], "torch.Tensor.dim": [[227, "torch-tensor-dim"]], "torch.Tensor.dist": [[228, "torch-tensor-dist"]], "torch.Tensor.diff": [[224, "torch-tensor-diff"]], "torch.Tensor.erf": [[240, "torch-tensor-erf"]], "torch.Tensor.divide": [[231, "torch-tensor-divide"]], "torch.Tensor.dequantize": [[214, "torch-tensor-dequantize"]], "torch.Tensor.cumsum_": [[210, "torch-tensor-cumsum"]], "torch.Tensor.cross": [[202, "torch-tensor-cross"]], "torch.Tensor.cumsum": [[209, "torch-tensor-cumsum"]], "torch.Tensor.cos_": [[196, "torch-tensor-cos"]], "torch.Tensor.cummin": [[206, "torch-tensor-cummin"]], "torch.Tensor.diag_embed": [[220, "torch-tensor-diag-embed"]], "torch.Tensor.diagonal_scatter": [[223, "torch-tensor-diagonal-scatter"]], "torch.Tensor.double": [[234, "torch-tensor-double"]], "torch.Tensor.element_size": [[236, "torch-tensor-element-size"]], "torch.Tensor.deg2rad": [[212, "torch-tensor-deg2rad"]], "torch.Tensor.digamma": [[225, "torch-tensor-digamma"]], "torch.Tensor.erf_": [[241, "torch-tensor-erf"]], "torch.Tensor.detach_": [[217, "torch-tensor-detach"]], "torch.Tensor.cumprod": [[207, "torch-tensor-cumprod"]], "torch.Tensor.erfc_": [[243, "torch-tensor-erfc"]], "torch.Tensor.digamma_": [[226, "torch-tensor-digamma"]], "torch.Tensor.dot": [[233, "torch-tensor-dot"]], "torch.Tensor.div_": [[230, "torch-tensor-div"]], "torch.Tensor.cumprod_": [[208, "torch-tensor-cumprod"]], "torch.Tensor.erfc": [[242, "torch-tensor-erfc"]], "torch.Tensor.cov": [[200, "torch-tensor-cov"]], "torch.Tensor.div": [[229, "torch-tensor-div"]], "torch.Tensor.det": [[215, "torch-tensor-det"]], "torch.Tensor.diag": [[219, "torch-tensor-diag"]], "torch.Tensor.cosh": [[197, "torch-tensor-cosh"]], "torch.Tensor.dense_dim": [[213, "torch-tensor-dense-dim"]], "torch.Tensor.count_nonzero": [[199, "torch-tensor-count-nonzero"]], "torch.Tensor.crow_indices": [[203, "torch-tensor-crow-indices"]], "torch.Tensor.equal": [[239, "torch-tensor-equal"]], "torch.Tensor.eq_": [[238, "torch-tensor-eq"]], "torch.Tensor.cummax": [[205, "torch-tensor-cummax"]], "torch.Tensor.cuda": [[204, "torch-tensor-cuda"]], "torch.Tensor.detach": [[216, "torch-tensor-detach"]], "torch.Tensor.dsplit": [[235, "torch-tensor-dsplit"]], "torch.Tensor.clamp_": [[181, "torch-tensor-clamp"]], "torch.Tensor.clip": [[182, "torch-tensor-clip"]], "torch.Tensor.corrcoef": [[194, "torch-tensor-corrcoef"]], "torch.Tensor.bitwise_or": [[158, "torch-tensor-bitwise-or"]], "torch.Tensor.baddbmm_": [[147, "torch-tensor-baddbmm"]], "torch.Tensor.clamp": [[180, "torch-tensor-clamp"]], "torch.Tensor.bitwise_xor_": [[163, "torch-tensor-bitwise-xor"]], "torch.Tensor.clone": [[184, "torch-tensor-clone"]], "torch.Tensor.conj": [[187, "torch-tensor-conj"]], "torch.Tensor.bitwise_left_shift": [[154, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.cos": [[195, "torch-tensor-cos"]], "torch.Tensor.ccol_indices": [[169, "torch-tensor-ccol-indices"]], "torch.Tensor.ceil_": [[172, "torch-tensor-ceil"]], "torch.Tensor.bitwise_right_shift_": [[161, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bernoulli_": [[149, "torch-tensor-bernoulli"]], "torch.Tensor.conj_physical_": [[189, "torch-tensor-conj-physical"]], "torch.Tensor.bitwise_xor": [[162, "torch-tensor-bitwise-xor"]], "torch.Tensor.copy_": [[191, "torch-tensor-copy"]], "torch.Tensor.cholesky": [[176, "torch-tensor-cholesky"]], "torch.Tensor.cholesky_inverse": [[177, "torch-tensor-cholesky-inverse"]], "torch.Tensor.bool": [[165, "torch-tensor-bool"]], "torch.Tensor.coalesce": [[185, "torch-tensor-coalesce"]], "torch.Tensor.bitwise_not": [[156, "torch-tensor-bitwise-not"]], "torch.Tensor.bitwise_and_": [[153, "torch-tensor-bitwise-and"]], "torch.Tensor.copysign": [[192, "torch-tensor-copysign"]], "torch.Tensor.bfloat16": [[150, "torch-tensor-bfloat16"]], "torch.Tensor.bernoulli": [[148, "torch-tensor-bernoulli"]], "torch.Tensor.broadcast_to": [[166, "torch-tensor-broadcast-to"]], "torch.Tensor.cdouble": [[170, "torch-tensor-cdouble"]], "torch.Tensor.cauchy_": [[168, "torch-tensor-cauchy"]], "torch.Tensor.char": [[175, "torch-tensor-char"]], "torch.Tensor.bmm": [[164, "torch-tensor-bmm"]], "torch.Tensor.ceil": [[171, "torch-tensor-ceil"]], "torch.Tensor.conj_physical": [[188, "torch-tensor-conj-physical"]], "torch.Tensor.bitwise_or_": [[159, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_right_shift": [[160, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.cfloat": [[173, "torch-tensor-cfloat"]], "torch.Tensor.cholesky_solve": [[178, "torch-tensor-cholesky-solve"]], "torch.Tensor.contiguous": [[190, "torch-tensor-contiguous"]], "torch.Tensor.clip_": [[183, "torch-tensor-clip"]], "torch.Tensor.byte": [[167, "torch-tensor-byte"]], "torch.Tensor.copysign_": [[193, "torch-tensor-copysign"]], "torch.Tensor.bitwise_and": [[152, "torch-tensor-bitwise-and"]], "torch.Tensor.col_indices": [[186, "torch-tensor-col-indices"]], "torch.Tensor.bitwise_not_": [[157, "torch-tensor-bitwise-not"]], "torch.Tensor.bitwise_left_shift_": [[155, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.chalf": [[174, "torch-tensor-chalf"]], "torch.Tensor.bincount": [[151, "torch-tensor-bincount"]], "torch.Tensor.chunk": [[179, "torch-tensor-chunk"]], "torch.Tensor.geometric_": [[280, "torch-tensor-geometric"]], "torch.Tensor.greater": [[285, "torch-tensor-greater"]], "torch.Tensor.gather": [[275, "torch-tensor-gather"]], "torch.Tensor.exponential_": [[252, "torch-tensor-exponential"]], "torch.Tensor.fliplr": [[259, "torch-tensor-fliplr"]], "torch.Tensor.fill_": [[253, "torch-tensor-fill"]], "torch.Tensor.flatten": [[257, "torch-tensor-flatten"]], "torch.Tensor.fmod": [[270, "torch-tensor-fmod"]], "torch.Tensor.fill_diagonal_": [[254, "torch-tensor-fill-diagonal"]], "torch.Tensor.flipud": [[260, "torch-tensor-flipud"]], "torch.Tensor.float": [[261, "torch-tensor-float"]], "torch.Tensor.gt_": [[290, "torch-tensor-gt"]], "torch.Tensor.gcd_": [[277, "torch-tensor-gcd"]], "torch.Tensor.fmin": [[269, "torch-tensor-fmin"]], "torch.Tensor.floor_divide": [[266, "torch-tensor-floor-divide"]], "torch.Tensor.float_power_": [[263, "torch-tensor-float-power"]], "torch.Tensor.frac": [[272, "torch-tensor-frac"]], "torch.Tensor.expm1_": [[251, "torch-tensor-expm1"]], "torch.Tensor.flip": [[258, "torch-tensor-flip"]], "torch.Tensor.heaviside": [[293, "torch-tensor-heaviside"]], "torch.Tensor.fmod_": [[271, "torch-tensor-fmod"]], "torch.Tensor.fix": [[255, "torch-tensor-fix"]], "torch.Tensor.float_power": [[262, "torch-tensor-float-power"]], "torch.Tensor.frac_": [[273, "torch-tensor-frac"]], "torch.Tensor.gcd": [[276, "torch-tensor-gcd"]], "torch.Tensor.ger": [[282, "torch-tensor-ger"]], "torch.Tensor.floor_": [[265, "torch-tensor-floor"]], "torch.Tensor.erfinv_": [[245, "torch-tensor-erfinv"]], "torch.Tensor.expm1": [[250, "torch-tensor-expm1"]], "torch.Tensor.expand_as": [[249, "torch-tensor-expand-as"]], "torch.Tensor.floor_divide_": [[267, "torch-tensor-floor-divide"]], "torch.Tensor.fmax": [[268, "torch-tensor-fmax"]], "torch.Tensor.fix_": [[256, "torch-tensor-fix"]], "torch.Tensor.floor": [[264, "torch-tensor-floor"]], "torch.Tensor.geqrf": [[281, "torch-tensor-geqrf"]], "torch.Tensor.expand": [[248, "torch-tensor-expand"]], "torch.Tensor.greater_": [[286, "torch-tensor-greater"]], "torch.Tensor.ge": [[278, "torch-tensor-ge"]], "torch.Tensor.greater_equal_": [[288, "torch-tensor-greater-equal"]], "torch.Tensor.half": [[291, "torch-tensor-half"]], "torch.Tensor.gt": [[289, "torch-tensor-gt"]], "torch.Tensor.grad": [[284, "torch-tensor-grad"]], "torch.Tensor.exp": [[246, "torch-tensor-exp"]], "torch.Tensor.hardshrink": [[292, "torch-tensor-hardshrink"]], "torch.Tensor.frexp": [[274, "torch-tensor-frexp"]], "torch.Tensor.get_device": [[283, "torch-tensor-get-device"]], "torch.Tensor.ge_": [[279, "torch-tensor-ge"]], "torch.Tensor.greater_equal": [[287, "torch-tensor-greater-equal"]], "torch.Tensor.exp_": [[247, "torch-tensor-exp"]], "torch.Tensor.atan_": [[142, "torch-tensor-atan"]], "torch.Tensor.argmax": [[129, "torch-tensor-argmax"]], "torch.Tensor.addr": [[104, "torch-tensor-addr"]], "torch.Tensor.addmv": [[102, "torch-tensor-addmv"]], "torch.Tensor.adjoint": [[106, "torch-tensor-adjoint"]], "torch.Tensor.arctan2": [[124, "torch-tensor-arctan2"]], "torch.Tensor.atanh": [[143, "torch-tensor-atanh"]], "torch.Tensor.baddbmm": [[146, "torch-tensor-baddbmm"]], "torch.Tensor.allclose": [[108, "torch-tensor-allclose"]], "torch.Tensor.arcsinh": [[121, "torch-tensor-arcsinh"]], "torch.Tensor.arcsinh_": [[122, "torch-tensor-arcsinh"]], "torch.Tensor.atanh_": [[144, "torch-tensor-atanh"]], "torch.Tensor.arctan2_": [[125, "torch-tensor-arctan2"]], "torch.Tensor.addmv_": [[103, "torch-tensor-addmv"]], "torch.Tensor.arctan_": [[126, "torch-tensor-arctan"]], "torch.Tensor.arctanh": [[127, "torch-tensor-arctanh"]], "torch.Tensor.arctanh_": [[128, "torch-tensor-arctanh"]], "torch.Tensor.argmin": [[130, "torch-tensor-argmin"]], "torch.Tensor.asinh_": [[138, "torch-tensor-asinh"]], "torch.Tensor.atan": [[139, "torch-tensor-atan"]], "torch.Tensor.argsort": [[131, "torch-tensor-argsort"]], "torch.Tensor.arcsin": [[119, "torch-tensor-arcsin"]], "torch.Tensor.addr_": [[105, "torch-tensor-addr"]], "torch.Tensor.apply_": [[114, "torch-tensor-apply"]], "torch.Tensor.argwhere": [[132, "torch-tensor-argwhere"]], "torch.Tensor.atan2_": [[141, "torch-tensor-atan2"]], "torch.Tensor.as_subclass": [[134, "torch-tensor-as-subclass"]], "torch.Tensor.addcmul": [[98, "torch-tensor-addcmul"]], "torch.Tensor.arccos_": [[116, "torch-tensor-arccos"]], "torch.Tensor.as_strided": [[133, "torch-tensor-as-strided"]], "torch.Tensor.atan2": [[140, "torch-tensor-atan2"]], "torch.Tensor.amax": [[109, "torch-tensor-amax"]], "torch.Tensor.arccosh": [[117, "torch-tensor-arccosh"]], "torch.Tensor.any": [[113, "torch-tensor-any"]], "torch.Tensor.aminmax": [[111, "torch-tensor-aminmax"]], "torch.Tensor.addmm_": [[101, "torch-tensor-addmm"]], "torch.Tensor.angle": [[112, "torch-tensor-angle"]], "torch.Tensor.arccosh_": [[118, "torch-tensor-arccosh"]], "torch.Tensor.arcsin_": [[120, "torch-tensor-arcsin"]], "torch.Tensor.arctan": [[123, "torch-tensor-arctan"]], "torch.Tensor.asin": [[135, "torch-tensor-asin"]], "torch.Tensor.backward": [[145, "torch-tensor-backward"]], "torch.Tensor.arccos": [[115, "torch-tensor-arccos"]], "torch.Tensor.asin_": [[136, "torch-tensor-asin"]], "torch.Tensor.all": [[107, "torch-tensor-all"]], "torch.Tensor.addmm": [[100, "torch-tensor-addmm"]], "torch.Tensor.amin": [[110, "torch-tensor-amin"]], "torch.Tensor.asinh": [[137, "torch-tensor-asinh"]], "torch.Tensor.addcmul_": [[99, "torch-tensor-addcmul"]], "torch.Tensor.index_add_": [[307, "torch-tensor-index-add"]], "torch.Tensor.hsplit": [[296, "torch-tensor-hsplit"]], "torch.Tensor.i0_": [[300, "torch-tensor-i0"]], "torch.Tensor.hypot": [[297, "torch-tensor-hypot"]], "torch.Tensor.is_sparse": [[336, "torch-tensor-is-sparse"]], "torch.Tensor.histc": [[294, "torch-tensor-histc"]], "torch.Tensor.igammac_": [[304, "torch-tensor-igammac"]], "torch.Tensor.is_shared": [[334, "torch-tensor-is-shared"]], "torch.Tensor.index_copy_": [[309, "torch-tensor-index-copy"]], "torch.Tensor.histogram": [[295, "torch-tensor-histogram"]], "torch.Tensor.is_quantized": [[332, "torch-tensor-is-quantized"]], "torch.Tensor.igamma_": [[302, "torch-tensor-igamma"]], "torch.Tensor.is_coalesced": [[322, "torch-tensor-is-coalesced"]], "torch.Tensor.is_complex": [[323, "torch-tensor-is-complex"]], "torch.Tensor.index_fill_": [[311, "torch-tensor-index-fill"]], "torch.Tensor.is_conj": [[324, "torch-tensor-is-conj"]], "torch.Tensor.is_pinned": [[331, "torch-tensor-is-pinned"]], "torch.Tensor.index_put": [[312, "torch-tensor-index-put"]], "torch.Tensor.isnan": [[341, "torch-tensor-isnan"]], "torch.Tensor.indices": [[317, "torch-tensor-indices"]], "torch.Tensor.is_contiguous": [[325, "torch-tensor-is-contiguous"]], "torch.Tensor.isfinite": [[339, "torch-tensor-isfinite"]], "torch.Tensor.index_reduce_": [[315, "torch-tensor-index-reduce"]], "torch.Tensor.is_cuda": [[326, "torch-tensor-is-cuda"]], "torch.Tensor.index_select": [[316, "torch-tensor-index-select"]], "torch.Tensor.isinf": [[340, "torch-tensor-isinf"]], "torch.Tensor.index_fill": [[310, "torch-tensor-index-fill"]], "torch.Tensor.is_inference": [[328, "torch-tensor-is-inference"]], "torch.Tensor.inner": [[318, "torch-tensor-inner"]], "torch.Tensor.int_repr": [[320, "torch-tensor-int-repr"]], "torch.Tensor.isneginf": [[342, "torch-tensor-isneginf"]], "torch.Tensor.is_floating_point": [[327, "torch-tensor-is-floating-point"]], "torch.Tensor.index_copy": [[308, "torch-tensor-index-copy"]], "torch.Tensor.igammac": [[303, "torch-tensor-igammac"]], "torch.Tensor.hypot_": [[298, "torch-tensor-hypot"]], "torch.Tensor.inverse": [[321, "torch-tensor-inverse"]], "torch.Tensor.index_add": [[306, "torch-tensor-index-add"]], "torch.Tensor.igamma": [[301, "torch-tensor-igamma"]], "torch.Tensor.isclose": [[338, "torch-tensor-isclose"]], "torch.Tensor.is_leaf": [[329, "torch-tensor-is-leaf"]], "torch.Tensor.is_signed": [[335, "torch-tensor-is-signed"]], "torch.Tensor.is_sparse_csr": [[337, "torch-tensor-is-sparse-csr"]], "torch.Tensor.index_put_": [[313, "torch-tensor-index-put"]], "torch.Tensor.is_set_to": [[333, "torch-tensor-is-set-to"]], "torch.Tensor.int": [[319, "torch-tensor-int"]], "torch.Tensor.i0": [[299, "torch-tensor-i0"]], "torch.Tensor.is_meta": [[330, "torch-tensor-is-meta"]], "torch.Tensor.imag": [[305, "torch-tensor-imag"]], "torch.Tensor.index_reduce": [[314, "torch-tensor-index-reduce"]], "torch.Tensor.item": [[346, "torch-tensor-item"]], "torch.Tensor.logical_and": [[376, "torch-tensor-logical-and"]], "torch.Tensor.log1p": [[366, "torch-tensor-log1p"]], "torch.Tensor.istft": [[345, "torch-tensor-istft"]], "torch.Tensor.lt_": [[389, "torch-tensor-lt"]], "torch.Tensor.lgamma_": [[362, "torch-tensor-lgamma"]], "torch.Tensor.logical_not_": [[379, "torch-tensor-logical-not"]], "torch.Tensor.less_": [[358, "torch-tensor-less"]], "torch.Tensor.less": [[357, "torch-tensor-less"]], "torch.Tensor.lu": [[390, "torch-tensor-lu"]], "torch.Tensor.log10_": [[365, "torch-tensor-log10"]], "torch.Tensor.logcumsumexp": [[374, "torch-tensor-logcumsumexp"]], "torch.Tensor.logical_or": [[380, "torch-tensor-logical-or"]], "torch.Tensor.ldexp": [[351, "torch-tensor-ldexp"]], "torch.Tensor.logit_": [[385, "torch-tensor-logit"]], "torch.Tensor.lgamma": [[361, "torch-tensor-lgamma"]], "torch.Tensor.lcm_": [[350, "torch-tensor-lcm"]], "torch.Tensor.logical_xor": [[382, "torch-tensor-logical-xor"]], "torch.Tensor.logical_xor_": [[383, "torch-tensor-logical-xor"]], "torch.Tensor.log_normal_": [[371, "torch-tensor-log-normal"]], "torch.Tensor.lt": [[388, "torch-tensor-lt"]], "torch.Tensor.lu_solve": [[391, "torch-tensor-lu-solve"]], "torch.Tensor.lerp": [[355, "torch-tensor-lerp"]], "torch.Tensor.less_equal_": [[360, "torch-tensor-less-equal"]], "torch.Tensor.isposinf": [[343, "torch-tensor-isposinf"]], "torch.Tensor.log_": [[370, "torch-tensor-log"]], "torch.Tensor.log2": [[368, "torch-tensor-log2"]], "torch.Tensor.isreal": [[344, "torch-tensor-isreal"]], "torch.Tensor.logical_or_": [[381, "torch-tensor-logical-or"]], "torch.Tensor.logsumexp": [[386, "torch-tensor-logsumexp"]], "torch.Tensor.log2_": [[369, "torch-tensor-log2"]], "torch.Tensor.logical_not": [[378, "torch-tensor-logical-not"]], "torch.Tensor.logaddexp": [[372, "torch-tensor-logaddexp"]], "torch.Tensor.logaddexp2": [[373, "torch-tensor-logaddexp2"]], "torch.Tensor.lcm": [[349, "torch-tensor-lcm"]], "torch.Tensor.log1p_": [[367, "torch-tensor-log1p"]], "torch.Tensor.kthvalue": [[348, "torch-tensor-kthvalue"]], "torch.Tensor.log10": [[364, "torch-tensor-log10"]], "torch.Tensor.logit": [[384, "torch-tensor-logit"]], "torch.Tensor.logdet": [[375, "torch-tensor-logdet"]], "torch.Tensor.lerp_": [[356, "torch-tensor-lerp"]], "torch.Tensor.logical_and_": [[377, "torch-tensor-logical-and"]], "torch.Tensor.le_": [[354, "torch-tensor-le"]], "torch.Tensor.long": [[387, "torch-tensor-long"]], "torch.Tensor.less_equal": [[359, "torch-tensor-less-equal"]], "torch.Tensor.itemsize": [[347, "torch-tensor-itemsize"]], "torch.Tensor.le": [[353, "torch-tensor-le"]], "torch.Tensor.log": [[363, "torch-tensor-log"]], "torch.Tensor.ldexp_": [[352, "torch-tensor-ldexp"]], "torch.sgn": [[1753, "torch-sgn"]], "torch.scatter": [[1734, "torch-scatter"]], "torch.set_flush_denormal": [[1746, "torch-set-flush-denormal"]], "torch.range": [[1717, "torch-range"]], "torch.sigmoid": [[1754, "torch-sigmoid"]], "torch.scatter_reduce": [[1736, "torch-scatter-reduce"]], "torch.resolve_neg": [[1726, "torch-resolve-neg"]], "torch.randperm": [[1716, "torch-randperm"]], "set_grad_enabled": [[1747, "set-grad-enabled"]], "torch.rsqrt": [[1732, "torch-rsqrt"]], "torch.select_scatter": [[1740, "torch-select-scatter"]], "torch.row_stack": [[1731, "torch-row-stack"]], "torch.set_num_interop_threads": [[1748, "torch-set-num-interop-threads"]], "torch.reshape": [[1724, "torch-reshape"]], "torch.sign": [[1755, "torch-sign"]], "torch.select": [[1739, "torch-select"]], "torch.signal.windows.blackman": [[1757, "torch-signal-windows-blackman"]], "torch.renorm": [[1722, "torch-renorm"]], "torch.signal.windows.general_cosine": [[1761, "torch-signal-windows-general-cosine"]], "torch.reciprocal": [[1720, "torch-reciprocal"]], "torch.signal.windows.cosine": [[1758, "torch-signal-windows-cosine"]], "torch.repeat_interleave": [[1723, "torch-repeat-interleave"]], "torch.roll": [[1728, "torch-roll"]], "torch.remainder": [[1721, "torch-remainder"]], "torch.set_default_tensor_type": [[1743, "torch-set-default-tensor-type"]], "torch.round": [[1730, "torch-round"]], "torch.signal.windows.gaussian": [[1760, "torch-signal-windows-gaussian"]], "torch.resolve_conj": [[1725, "torch-resolve-conj"]], "torch.scatter_add": [[1735, "torch-scatter-add"]], "torch.randn_like": [[1715, "torch-randn-like"]], "torch.signal.windows.bartlett": [[1756, "torch-signal-windows-bartlett"]], "torch.searchsorted": [[1737, "torch-searchsorted"]], "torch.set_num_threads": [[1749, "torch-set-num-threads"]], "torch.set_rng_state": [[1751, "torch-set-rng-state"]], "torch.rot90": [[1729, "torch-rot90"]], "torch.save": [[1733, "torch-save"]], "torch.signal.windows.general_hamming": [[1762, "torch-signal-windows-general-hamming"]], "torch.set_printoptions": [[1750, "torch-set-printoptions"]], "torch.ravel": [[1718, "torch-ravel"]], "torch.set_warn_always": [[1752, "torch-set-warn-always"]], "torch.signal.windows.hamming": [[1763, "torch-signal-windows-hamming"]], "torch.set_default_device": [[1741, "torch-set-default-device"]], "torch.signal.windows.exponential": [[1759, "torch-signal-windows-exponential"]], "torch.set_default_dtype": [[1742, "torch-set-default-dtype"]], "torch.real": [[1719, "torch-real"]], "torch.result_type": [[1727, "torch-result-type"]], "torch.set_float32_matmul_precision": [[1745, "torch-set-float32-matmul-precision"]], "torch.set_deterministic_debug_mode": [[1744, "torch-set-deterministic-debug-mode"]], "torch.seed": [[1738, "torch-seed"]], "torch.swapdims": [[1805, "torch-swapdims"]], "torch.sym_float": [[1806, "torch-sym-float"]], "torch.sym_min": [[1809, "torch-sym-min"]], "torch.sparse_csc_tensor": [[1788, "torch-sparse-csc-tensor"]], "torch.sparse_bsr_tensor": [[1785, "torch-sparse-bsr-tensor"]], "torch.sparse_compressed_tensor": [[1786, "torch-sparse-compressed-tensor"]], "torch.sym_max": [[1808, "torch-sym-max"]], "torch.t": [[1811, "torch-t"]], "torch.sparse_coo_tensor": [[1787, "torch-sparse-coo-tensor"]], "torch.squeeze": [[1793, "torch-squeeze"]], "torch.sparse.log_softmax": [[1778, "torch-sparse-log-softmax"]], "torch.signbit": [[1767, "torch-signbit"]], "torch.sparse.softmax": [[1781, "torch-sparse-softmax"]], "torch.split": [[1790, "torch-split"]], "torch.stft": [[1798, "torch-stft"]], "check_sparse_tensor_invariants": [[1777, "check-sparse-tensor-invariants"]], "torch.sin": [[1768, "torch-sin"]], "torch.take": [[1812, "torch-take"]], "torch.sort": [[1775, "torch-sort"]], "torch.sparse.mm": [[1779, "torch-sparse-mm"]], "torch.sqrt": [[1791, "torch-sqrt"]], "torch.sym_int": [[1807, "torch-sym-int"]], "torch.sinh": [[1770, "torch-sinh"]], "torch.swapaxes": [[1804, "torch-swapaxes"]], "torch.svd_lowrank": [[1803, "torch-svd-lowrank"]], "torch.signal.windows.nuttall": [[1766, "torch-signal-windows-nuttall"]], "torch.signal.windows.hann": [[1764, "torch-signal-windows-hann"]], "torch.sub": [[1799, "torch-sub"]], "torch.std": [[1796, "torch-std"]], "torch.sum": [[1801, "torch-sum"]], "torch.sspaddmm": [[1794, "torch-sspaddmm"]], "torch.signal.windows.kaiser": [[1765, "torch-signal-windows-kaiser"]], "torch.stack": [[1795, "torch-stack"]], "torch.sparse.addmm": [[1776, "torch-sparse-addmm"]], "torch.sparse_bsc_tensor": [[1784, "torch-sparse-bsc-tensor"]], "torch.std_mean": [[1797, "torch-std-mean"]], "torch.subtract": [[1800, "torch-subtract"]], "torch.sparse.sampled_addmm": [[1780, "torch-sparse-sampled-addmm"]], "torch.softmax": [[1774, "torch-softmax"]], "torch.sinc": [[1769, "torch-sinc"]], "torch.slice_scatter": [[1771, "torch-slice-scatter"]], "torch.smm": [[1773, "torch-smm"]], "torch.svd": [[1802, "torch-svd"]], "torch.slogdet": [[1772, "torch-slogdet"]], "torch.sparse.sum": [[1783, "torch-sparse-sum"]], "torch.sparse.spdiags": [[1782, "torch-sparse-spdiags"]], "torch.square": [[1792, "torch-square"]], "torch.sym_not": [[1810, "torch-sym-not"]], "torch.sparse_csr_tensor": [[1789, "torch-sparse-csr-tensor"]], "torch.positive": [[1697, "torch-positive"]], "ReduceLROnPlateau": [[1685, "reducelronplateau"]], "torch.outer": [[1690, "torch-outer"]], "ConstantLR": [[1674, "constantlr"]], "SGD": [[1671, "sgd"]], "torch.pca_lowrank": [[1691, "torch-pca-lowrank"]], "torch.rand_like": [[1711, "torch-rand-like"]], "StepLR": [[1687, "steplr"]], "torch.quantized_max_pool1d": [[1706, "torch-quantized-max-pool1d"]], "PolynomialLR": [[1684, "polynomiallr"]], "LinearLR": [[1680, "linearlr"]], "OneCycleLR": [[1683, "onecyclelr"]], "LambdaLR": [[1679, "lambdalr"]], "torch.ormqr": [[1689, "torch-ormqr"]], "torch.polar": [[1695, "torch-polar"]], "SobolEngine": [[1708, "sobolengine"]], "torch.randint_like": [[1713, "torch-randint-like"]], "MultiStepLR": [[1681, "multisteplr"]], "torch.promote_types": [[1700, "torch-promote-types"]], "RMSprop": [[1669, "rmsprop"]], "torch.quantile": [[1702, "torch-quantile"]], "SparseAdam": [[1672, "sparseadam"]], "torch.quantize_per_tensor": [[1704, "torch-quantize-per-tensor"]], "torch.prod": [[1699, "torch-prod"]], "torch.randn": [[1714, "torch-randn"]], "torch.qr": [[1701, "torch-qr"]], "torch.rand": [[1710, "torch-rand"]], "CyclicLR": [[1677, "cycliclr"]], "torch.quantized_max_pool2d": [[1707, "torch-quantized-max-pool2d"]], "torch.orgqr": [[1688, "torch-orgqr"]], "CosineAnnealingLR": [[1675, "cosineannealinglr"]], "torch.rad2deg": [[1709, "torch-rad2deg"]], "torch.pinverse": [[1693, "torch-pinverse"]], "torch.pow": [[1698, "torch-pow"]], "torch.optim.Optimizer.zero_grad": [[1667, "torch-optim-optimizer-zero-grad"]], "MultiplicativeLR": [[1682, "multiplicativelr"]], "torch.permute": [[1692, "torch-permute"]], "torch.randint": [[1712, "torch-randint"]], "RAdam": [[1668, "radam"]], "CosineAnnealingWarmRestarts": [[1676, "cosineannealingwarmrestarts"]], "torch.optim.Optimizer.step": [[1666, "torch-optim-optimizer-step"]], "Rprop": [[1670, "rprop"]], "torch.quantized_batch_norm": [[1705, "torch-quantized-batch-norm"]], "ExponentialLR": [[1678, "exponentiallr"]], "torch.polygamma": [[1696, "torch-polygamma"]], "ChainedScheduler": [[1673, "chainedscheduler"]], "torch.quantize_per_channel": [[1703, "torch-quantize-per-channel"]], "SequentialLR": [[1686, "sequentiallr"]], "torch.poisson": [[1694, "torch-poisson"]], "torch.triangular_solve": [[1825, "torch-triangular-solve"]], "torch.unsqueeze": [[1836, "torch-unsqueeze"]], "torch.vsplit": [[1845, "torch-vsplit"]], "torch.vstack": [[1846, "torch-vstack"]], "torch.trapz": [[1824, "torch-trapz"]], "TorchScript": [[1854, "torchscript"]], "Creating TorchScript Code": [[1854, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1854, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1854, "torchscript-language"]], "Built-in Functions and Modules": [[1854, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1854, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1854, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1854, "python-language-reference-comparison"]], "Debugging": [[1854, "debugging"], [65, "debugging"]], "Disable JIT for Debugging": [[1854, "disable-jit-for-debugging"]], "Inspecting Code": [[1854, "inspecting-code"]], "Interpreting Graphs": [[1854, "interpreting-graphs"]], "Tracer": [[1854, "tracer"]], "Tracing Edge Cases": [[1854, "tracing-edge-cases"]], "Automatic Trace Checking": [[1854, "automatic-trace-checking"]], "Tracer Warnings": [[1854, "tracer-warnings"]], "Frequently Asked Questions": [[1854, "frequently-asked-questions"], [14, "frequently-asked-questions"], [8, "frequently-asked-questions"], [1902, "frequently-asked-questions"], [1895, "frequently-asked-questions"], [1884, "frequently-asked-questions"]], "Known Issues": [[1854, "known-issues"]], "Appendix": [[1854, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1854, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1854, "modules"], [1888, "modules"]], "Functions": [[1854, "functions"], [1856, "functions"], [1922, "functions"], [1912, "functions"], [1895, "functions"]], "TorchScript Classes": [[1854, "torchscript-classes"], [1856, "id2"]], "Attributes": [[1854, "attributes"]], "Constants": [[1854, "constants"]], "Variables": [[1854, "variables"], [1856, "variables"], [17, "variables"]], "Fusion Backends": [[1854, "fusion-backends"]], "References": [[1854, "references"]], "torch.view_as_complex": [[1842, "torch-view-as-complex"]], "torch.tril": [[1826, "torch-tril"]], "torch.zeros": [[1849, "torch-zeros"]], "torch.library": [[1861, "torch-library"]], "torch.xlogy": [[1848, "torch-xlogy"]], "torch.tensor": [[1816, "torch-tensor"]], "TorchScript Builtins": [[1855, "torchscript-builtins"]], "Supported Tensor Methods": [[1855, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1855, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1855, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1855, "python-built-in-functions"]], "math Module": [[1855, "math-module"]], "PyTorch documentation": [[1852, "pytorch-documentation"]], "Community": [[1852, null]], "Developer Notes": [[1852, null]], "torch.compile": [[1852, null], [944, "torch-compile"], [15, "torch-compile"], [18, "torch-compile"]], "Language Bindings": [[1852, null]], "Python API": [[1852, null]], "Libraries": [[1852, null]], "Indices and tables": [[1852, "indices-and-tables"]], "torch.var_mean": [[1840, "torch-var-mean"]], "torch.true_divide": [[1830, "torch-true-divide"]], "torch.vmap": [[1844, "torch-vmap"]], "JIT Utils - torch.utils.jit": [[1860, "module-torch.utils.jit"]], "torch.trapezoid": [[1823, "torch-trapezoid"]], "torch.unique_consecutive": [[1835, "torch-unique-consecutive"]], "IRs": [[1853, "irs"]], "Core Aten IR": [[1853, "core-aten-ir"]], "Prims IR": [[1853, "prims-ir"]], "torch.unique": [[1834, "torch-unique"]], "torch.tile": [[1819, "torch-tile"]], "torch.triu": [[1828, "torch-triu"]], "torch.zeros_like": [[1850, "torch-zeros-like"]], "torch.tanh": [[1815, "torch-tanh"]], "torch.where": [[1847, "torch-where"]], "torch.take_along_dim": [[1813, "torch-take-along-dim"]], "torch.var": [[1839, "torch-var"]], "torch.tril_indices": [[1827, "torch-tril-indices"]], "torch.trunc": [[1831, "torch-trunc"]], "torch.topk": [[1820, "torch-topk"]], "torch.tan": [[1814, "torch-tan"]], "TorchScript Language Reference": [[1857, "torchscript-language-reference"], [1856, "torchscript-language-reference"]], "Terminology": [[1857, "terminology"]], "Type System": [[1857, "id1"]], "TorchScript Types": [[1857, "torchscript-types"]], "Meta Types": [[1857, "meta-types"]], "Any Type": [[1857, "any-type"]], "Operators Supported for Any Type": [[1857, "operators-supported-for-any-type"]], "Design Notes": [[1857, "design-notes"], [1907, "design-notes"]], "Primitive Types": [[1857, "primitive-types"]], "Structural Types": [[1857, "structural-types"]], "Nominal Types": [[1857, "nominal-types"]], "Built-in Class": [[1857, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1857, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1857, "custom-class"]], "Enum Type": [[1857, "enum-type"]], "TorchScript Module Class": [[1857, "torchscript-module-class"]], "Module Instance Class": [[1857, "module-instance-class"]], "Type Annotation": [[1857, "type-annotation"]], "When to Annotate Types": [[1857, "when-to-annotate-types"]], "Annotate Function Signature": [[1857, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1857, "annotate-variables-and-data-attributes"]], "Local Variables": [[1857, "local-variables"]], "Instance Data Attributes": [[1857, "instance-data-attributes"]], "Type Annotation APIs": [[1857, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1857, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1857, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1857, "torchscript-type-system-definition"]], "Unsupported Typing Constructs": [[1857, "unsupported-typing-constructs"], [1856, "unsupported-typing-constructs"]], "Expressions": [[1857, "expressions"], [1856, "expressions"]], "Arithmetic Conversions": [[1857, "arithmetic-conversions"]], "Atoms": [[1857, "atoms"]], "Identifiers": [[1857, "identifiers"]], "Literals": [[1857, "literals"], [1856, "literals"]], "Parenthesized Forms": [[1857, "parenthesized-forms"]], "List and Dictionary Displays": [[1857, "list-and-dictionary-displays"]], "Primaries": [[1857, "primaries"]], "Attribute References": [[1857, "attribute-references"]], "Subscriptions": [[1857, "subscriptions"]], "Slicings": [[1857, "slicings"]], "Calls": [[1857, "calls"]], "Power Operator": [[1857, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1857, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1857, "binary-arithmetic-operations"]], "Shifting Operations": [[1857, "shifting-operations"]], "Binary Bitwise Operations": [[1857, "binary-bitwise-operations"]], "Comparisons": [[1857, "comparisons"]], "Value Comparisons": [[1857, "value-comparisons"]], "Membership Test Operations": [[1857, "membership-test-operations"]], "Identity Comparisons": [[1857, "identity-comparisons"]], "Boolean Operations": [[1857, "boolean-operations"]], "Conditional Expressions": [[1857, "conditional-expressions"]], "Expression Lists": [[1857, "expression-lists"]], "Simple Statements": [[1857, "simple-statements"]], "Expression Statements": [[1857, "expression-statements"]], "Assignment Statements": [[1857, "assignment-statements"]], "Augmented Assignment Statements": [[1857, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1857, "annotated-assignment-statements"]], "The raise Statement": [[1857, "the-raise-statement"]], "The assert Statement": [[1857, "the-assert-statement"]], "The return Statement": [[1857, "the-return-statement"]], "The del Statement": [[1857, "the-del-statement"]], "The pass Statement": [[1857, "the-pass-statement"]], "The print Statement": [[1857, "the-print-statement"]], "The break Statement": [[1857, "the-break-statement"]], "The continue Statement:": [[1857, "the-continue-statement"]], "Compound Statements": [[1857, "compound-statements"]], "The if Statement": [[1857, "the-if-statement"]], "Basic if/else Statement": [[1857, "basic-if-else-statement"]], "Ternary if/else Statement": [[1857, "ternary-if-else-statement"]], "The while Statement": [[1857, "the-while-statement"]], "The for-in Statement": [[1857, "the-for-in-statement"]], "The with Statement": [[1857, "the-with-statement"]], "The tuple Statement": [[1857, "the-tuple-statement"]], "The getattr Statement": [[1857, "the-getattr-statement"]], "The hasattr Statement": [[1857, "the-hasattr-statement"]], "The zip Statement": [[1857, "the-zip-statement"]], "The enumerate Statement": [[1857, "the-enumerate-statement"]], "Python Values": [[1857, "python-values"]], "Resolution Rules": [[1857, "resolution-rules"]], "Python Built-in Functions Support": [[1857, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1857, "id5"]], "Python Built-in Values Support": [[1857, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1857, "id6"]], "torch.* APIs": [[1857, "torch-apis"]], "Remote Procedure Calls": [[1857, "remote-procedure-calls"]], "Asynchronous Execution": [[1857, "asynchronous-execution"]], "Type Annotations": [[1857, "type-annotations"]], "Meta Programming": [[1857, "meta-programming"]], "Type Refinement": [[1857, "type-refinement"]], "Python Language Reference Coverage": [[1858, "python-language-reference-coverage"]], "TorchScript Unsupported PyTorch Constructs": [[1859, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1859, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1859, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1859, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1859, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1859, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1859, "pytorch-unsupported-modules-and-classes"]], "torch.transpose": [[1822, "torch-transpose"]], "torch.view_as_real": [[1843, "torch-view-as-real"]], "torch.unbind": [[1832, "torch-unbind"]], "torch.use_deterministic_algorithms": [[1837, "torch-use-deterministic-algorithms"]], "torch.vdot": [[1841, "torch-vdot"]], "Types": [[1856, "supported-type"], [1895, "types"]], "Default Types": [[1856, "default-types"]], "Optional Type Refinement": [[1856, "optional-type-refinement"]], "TorchScript Enums": [[1856, "id4"]], "Named Tuples": [[1856, "named-tuples"]], "Iterables": [[1856, "iterables"]], "List Construction": [[1856, "list-construction"]], "Tuple Construction": [[1856, "tuple-construction"]], "Dict Construction": [[1856, "dict-construction"]], "Arithmetic Operators": [[1856, "arithmetic-operators"]], "Comparison Operators": [[1856, "comparison-operators"]], "Logical Operators": [[1856, "logical-operators"]], "Subscripts and Slicing": [[1856, "subscripts-and-slicing"]], "Function Calls": [[1856, "function-calls"]], "Method Calls": [[1856, "method-calls"]], "Ternary Expressions": [[1856, "ternary-expressions"]], "Casts": [[1856, "casts"]], "Accessing Module Parameters": [[1856, "accessing-module-parameters"]], "Statements": [[1856, "statements"]], "Simple Assignments": [[1856, "simple-assignments"]], "Pattern Matching Assignments": [[1856, "pattern-matching-assignments"]], "Print Statements": [[1856, "print-statements"]], "If Statements": [[1856, "if-statements"]], "While Loops": [[1856, "while-loops"]], "For loops with range": [[1856, "for-loops-with-range"]], "For loops over tuples": [[1856, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1856, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1856, "break-and-continue"]], "Return": [[1856, "return"]], "Variable Resolution": [[1856, "variable-resolution"]], "Use of Python Values": [[1856, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[1856, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1856, "python-defined-constants"]], "Module Attributes": [[1856, "module-attributes"]], "torch.tensor_split": [[1817, "torch-tensor-split"]], "torch.unflatten": [[1833, "torch-unflatten"]], "torch.vander": [[1838, "torch-vander"]], "torch.hub": [[1851, "torch-hub"]], "Publishing models": [[1851, "publishing-models"]], "How to implement an entrypoint?": [[1851, "how-to-implement-an-entrypoint"]], "Important Notice": [[1851, "important-notice"]], "Loading models from Hub": [[1851, "loading-models-from-hub"]], "Running a loaded model:": [[1851, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1851, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1851, "caching-logic"]], "Known limitations:": [[1851, "known-limitations"]], "torch.trace": [[1821, "torch-trace"]], "torch.tensordot": [[1818, "torch-tensordot"]], "torch.triu_indices": [[1829, "torch-triu-indices"]], "LazyModuleMixin": [[1587, "lazymodulemixin"]], "torch.nn.functional.unfold": [[1583, "torch-nn-functional-unfold"]], "Parameter": [[1597, "parameter"]], "BasePruningMethod": [[1610, "basepruningmethod"]], "torch.nn.functional.triplet_margin_loss": [[1581, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.functional.soft_margin_loss": [[1570, "torch-nn-functional-soft-margin-loss"]], "PruningContainer": [[1615, "pruningcontainer"]], "torch.nn.functional.upsample_bilinear": [[1585, "torch-nn-functional-upsample-bilinear"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1591, "torch-nn-modules-module-register-module-forward-pre-hook"]], "UninitializedBuffer": [[1598, "uninitializedbuffer"]], "torch.nn.functional.softplus": [[1573, "torch-nn-functional-softplus"]], "torch.nn.functional.threshold": [[1578, "torch-nn-functional-threshold"]], "torch.nn.modules.module.register_module_backward_hook": [[1588, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.functional.smooth_l1_loss": [[1569, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.silu": [[1568, "torch-nn-functional-silu"]], "torch.nn.functional.softshrink": [[1574, "torch-nn-functional-softshrink"]], "torch.nn.functional.softsign": [[1575, "torch-nn-functional-softsign"]], "torch.nn.utils.parameters_to_vector": [[1602, "torch-nn-utils-parameters-to-vector"]], "torch.nn.utils.parametrize.is_parametrized": [[1607, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1595, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.modules.module.register_module_forward_hook": [[1590, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.utils.parametrizations.orthogonal": [[1603, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.functional.tanh": [[1576, "torch-nn-functional-tanh"]], "torch.nn.utils.parametrize.cached": [[1606, "torch-nn-utils-parametrize-cached"]], "torch.nn.functional.upsample": [[1584, "torch-nn-functional-upsample"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1582, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1580, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1593, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.utils.clip_grad_norm_": [[1600, "torch-nn-utils-clip-grad-norm"]], "L1Unstructured": [[1613, "l1unstructured"]], "Identity": [[1612, "identity"], [1378, "identity"]], "torch.nn.functional.softmax": [[1571, "torch-nn-functional-softmax"]], "torch.nn.functional.upsample_nearest": [[1586, "torch-nn-functional-upsample-nearest"]], "DistributedDataParallel": [[1596, "distributeddataparallel"], [1881, "distributeddataparallel"]], "CustomFromMask": [[1611, "customfrommask"]], "RandomStructured": [[1616, "randomstructured"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1592, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1589, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.utils.clip_grad_value_": [[1601, "torch-nn-utils-clip-grad-value"]], "torch.nn.utils.parametrize.register_parametrization": [[1608, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1594, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.utils.parametrizations.spectral_norm": [[1604, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.functional.threshold_": [[1579, "torch-nn-functional-threshold"]], "UninitializedParameter": [[1599, "uninitializedparameter"]], "ParametrizationList": [[1605, "parametrizationlist"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1609, "torch-nn-utils-parametrize-remove-parametrizations"]], "LnStructured": [[1614, "lnstructured"]], "torch.nn.functional.softmin": [[1572, "torch-nn-functional-softmin"]], "torch.nn.functional.tanhshrink": [[1577, "torch-nn-functional-tanhshrink"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1632, "torch-nn-utils-rnn-pad-packed-sequence"]], "torch.normal": [[1644, "torch-normal"]], "ExportOptions": [[1649, "exportoptions"]], "torch.nn.utils.stateless.functional_call": [[1638, "torch-nn-utils-stateless-functional-call"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1630, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.not_equal": [[1645, "torch-not-equal"]], "torch.nn.utils.vector_to_parameters": [[1639, "torch-nn-utils-vector-to-parameters"]], "ASGD": [[1655, "asgd"]], "NAdam": [[1662, "nadam"]], "torch.nn.utils.remove_spectral_norm": [[1627, "torch-nn-utils-remove-spectral-norm"]], "torch.optim.Optimizer.add_param_group": [[1663, "torch-optim-optimizer-add-param-group"]], "ExportOutput": [[1650, "exportoutput"]], "torch.nn.utils.prune.identity": [[1620, "torch-nn-utils-prune-identity"]], "RandomUnstructured": [[1617, "randomunstructured"]], "torch.nn.utils.weight_norm": [[1640, "torch-nn-utils-weight-norm"]], "torch.nn.utils.prune.l1_unstructured": [[1622, "torch-nn-utils-prune-l1-unstructured"]], "torch.numel": [[1646, "torch-numel"]], "GraphInfo": [[1653, "graphinfo"]], "JitScalarType": [[1652, "jitscalartype"]], "torch.nn.utils.prune.ln_structured": [[1623, "torch-nn-utils-prune-ln-structured"]], "AdamW": [[1659, "adamw"]], "torch.nn.utils.spectral_norm": [[1637, "torch-nn-utils-spectral-norm"]], "torch.optim.Optimizer.state_dict": [[1665, "torch-optim-optimizer-state-dict"]], "VerificationOptions": [[1654, "verificationoptions"]], "Adagrad": [[1657, "adagrad"]], "Adamax": [[1660, "adamax"]], "torch.ones_like": [[1648, "torch-ones-like"]], "ExportOutputSerializer": [[1651, "exportoutputserializer"]], "torch.nonzero": [[1642, "torch-nonzero"]], "torch.nn.utils.skip_init": [[1636, "torch-nn-utils-skip-init"]], "torch.nn.utils.prune.random_unstructured": [[1625, "torch-nn-utils-prune-random-unstructured"]], "torch.norm": [[1643, "torch-norm"]], "Adam": [[1658, "adam"]], "torch.nn.utils.rnn.unpad_sequence": [[1635, "torch-nn-utils-rnn-unpad-sequence"]], "torch.nn.utils.prune.global_unstructured": [[1619, "torch-nn-utils-prune-global-unstructured"]], "LBFGS": [[1661, "lbfgs"]], "torch.nn.utils.prune.remove": [[1626, "torch-nn-utils-prune-remove"]], "torch.nn.utils.prune.custom_from_mask": [[1618, "torch-nn-utils-prune-custom-from-mask"]], "torch.nn.utils.rnn.pack_sequence": [[1631, "torch-nn-utils-rnn-pack-sequence"]], "torch.nn.utils.remove_weight_norm": [[1628, "torch-nn-utils-remove-weight-norm"]], "torch.nn.utils.prune.is_pruned": [[1621, "torch-nn-utils-prune-is-pruned"]], "no_grad": [[1641, "no-grad"]], "Adadelta": [[1656, "adadelta"]], "torch.ones": [[1647, "torch-ones"]], "torch.nn.utils.rnn.unpack_sequence": [[1634, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nn.utils.prune.random_structured": [[1624, "torch-nn-utils-prune-random-structured"]], "torch.nn.utils.rnn.pad_sequence": [[1633, "torch-nn-utils-rnn-pad-sequence"]], "PackedSequence": [[1629, "packedsequence"]], "torch.optim.Optimizer.load_state_dict": [[1664, "torch-optim-optimizer-load-state-dict"]], "torch.func Whirlwind Tour": [[63, "torch-func-whirlwind-tour"]], "What is torch.func?": [[63, "what-is-torch-func"]], "Why composable function transforms?": [[63, "why-composable-function-transforms"], [58, "why-composable-function-transforms"]], "What are the transforms?": [[63, "what-are-the-transforms"]], "grad() (gradient computation)": [[63, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[63, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[63, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[63, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[63, "jacrev-jacfwd-and-hessian"]], "torch.Tensor.addbmm_": [[95, "torch-tensor-addbmm"]], "torch.Tensor.absolute": [[86, "torch-tensor-absolute"]], "torch.func": [[58, "torch-func"]], "What are composable function transforms?": [[58, "what-are-composable-function-transforms"]], "Read More": [[58, "read-more"]], "torch.Tensor.acos": [[88, "torch-tensor-acos"]], "torch.Tensor.absolute_": [[87, "torch-tensor-absolute"]], "torch.Tensor.addcdiv_": [[97, "torch-tensor-addcdiv"]], "Quickstart": [[51, "quickstart"]], "torch.Tensor.acos_": [[89, "torch-tensor-acos"]], "FXE0003:fx-frontend-aotautograd": [[69, "fxe0003-fx-frontend-aotautograd"]], "torch.Tensor.abs_": [[85, "torch-tensor-abs"]], "torch.Tensor.addcdiv": [[96, "torch-tensor-addcdiv"]], "FXE0009:fx-frontend-dynamo-make-fx": [[75, "fxe0009-fx-frontend-dynamo-make-fx"]], "FXE0004:fx-pass-convert-neg-to-sigmoid": [[70, "fxe0004-fx-pass-convert-neg-to-sigmoid"]], "Multiprocessing": [[50, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[50, "starting-multiple-workers"]], "Process Context": [[50, "process-context"]], "torch.func API Reference": [[59, "module-torch.func"]], "Function Transforms": [[59, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[59, "utilities-for-working-with-torch-nn-modules"]], "FXE0002:fx-tracer-failure": [[68, "fxe0002-fx-tracer-failure"]], "torch.fx": [[65, "torch-fx"]], "Overview": [[65, "module-torch.fx"], [29, "module-torch.cuda._sanitizer"], [12, "overview"], [1896, "overview"], [1901, "module-torch.profiler"]], "Writing Transformations": [[65, "writing-transformations"]], "A Quick Primer on Graphs": [[65, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[65, "graph-manipulation"]], "Direct Graph Manipulation": [[65, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[65, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[65, "graph-manipulation-examples"]], "Proxy/Retracing": [[65, "proxy-retracing"]], "The Interpreter Pattern": [[65, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[65, "examples-of-the-interpreter-pattern"]], "Introduction": [[65, "introduction"], [1872, "introduction"], [1864, "introduction"]], "Common Pitfalls in Transform Authoring": [[65, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[65, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[65, "debugging-the-generated-code"]], "Use pdb": [[65, "use-pdb"]], "Print the Generated Code": [[65, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[65, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[65, "debugging-the-transformation"]], "Available Debuggers": [[65, "available-debuggers"]], "Limitations of Symbolic Tracing": [[65, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[65, "dynamic-control-flow"]], "Static Control Flow": [[65, "static-control-flow"]], "Non-torch Functions": [[65, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[65, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[65, "leaf-modules"]], "Miscellanea": [[65, "miscellanea"]], "API Reference": [[65, "api-reference"], [29, "api-reference"], [1896, "api-reference"], [1867, "module-torch.monitor"], [1901, "api-reference"], [1899, "api-reference"]], "POE0004:operator-supported-in-newer-opset-version": [[82, "poe0004-operator-supported-in-newer-opset-version"]], "torch.Tensor.acosh": [[90, "torch-tensor-acosh"]], "torch.Tensor.add_": [[93, "torch-tensor-add"]], "Expiration Timers": [[54, "module-torch.distributed.elastic.timer"]], "Client Methods": [[54, "client-methods"]], "Server/Client Implementations": [[54, "server-client-implementations"]], "Writing a custom timer server/client": [[54, "writing-a-custom-timer-server-client"]], "DIAGSYS0001:arg-format-too-verbose": [[66, "diagsys0001-arg-format-too-verbose"]], "FXE0001:fx-tracer-success": [[67, "fxe0001-fx-tracer-success"]], "Metrics": [[49, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[49, "metric-handlers"]], "Methods": [[49, "methods"]], "Train script": [[55, "train-script"]], "FXE0011:no-symbolic-function-for-call-function": [[77, "fxe0011-no-symbolic-function-for-call-function"]], "FXE0010:fx-pass": [[76, "fxe0010-fx-pass"]], "Generator": [[83, "generator"]], "torch.fft": [[56, "torch-fft"]], "Fast Fourier Transforms": [[56, "fast-fourier-transforms"]], "Helper Functions": [[56, "helper-functions"]], "FXE0006:atenlib-symbolic-function": [[72, "fxe0006-atenlib-symbolic-function"]], "FXE0008:fx-node-to-onnx": [[74, "fxe0008-fx-node-to-onnx"]], "torch.Tensor.addbmm": [[94, "torch-tensor-addbmm"]], "UX Limitations": [[62, "ux-limitations"]], "General limitations": [[62, "general-limitations"]], "torch.autograd APIs": [[62, "torch-autograd-apis"]], "vmap limitations": [[62, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[62, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[62, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[62, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[62, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[62, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[62, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[62, "randomness"]], "Rendezvous": [[52, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[52, "registry"]], "Handler": [[52, "handler"]], "Exceptions": [[52, "exceptions"]], "Implementations": [[52, "implementations"], [43, "implementations"]], "Dynamic Rendezvous": [[52, "dynamic-rendezvous"]], "C10d Backend": [[52, "c10d-backend"]], "Etcd Backend": [[52, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[52, "etcd-rendezvous-legacy"]], "Etcd Store": [[52, "etcd-store"]], "Etcd Server": [[52, "etcd-server"]], "POE0002:missing-custom-symbolic-function": [[80, "poe0002-missing-custom-symbolic-function"]], "FXE0012:unsupported-fx-node-analysis": [[78, "fxe0012-unsupported-fx-node-analysis"]], "torch.Tensor.add": [[92, "torch-tensor-add"]], "FXE0007:atenlib-fx-to-onnx": [[73, "fxe0007-atenlib-fx-to-onnx"]], "FXE0005:fx-ir-add-node": [[71, "fxe0005-fx-ir-add-node"]], "POE0003:missing-standard-symbolic-function": [[81, "poe0003-missing-standard-symbolic-function"]], "Migrating from functorch to torch.func": [[61, "migrating-from-functorch-to-torch-func"]], "function transforms": [[61, "function-transforms"]], "NN module utilities": [[61, "nn-module-utilities"]], "functorch.make_functional": [[61, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[61, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[61, "functorch-compile"]], "torchrun (Elastic Launch)": [[53, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[53, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Usage": [[53, "usage"], [38, null], [29, "usage"]], "Single-node multi-worker": [[53, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[53, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[53, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[53, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[53, "note-on-rendezvous-backend"]], "Definitions": [[53, "definitions"]], "Environment Variables": [[53, "environment-variables"]], "Deployment": [[53, "deployment"]], "Failure Modes": [[53, "failure-modes"]], "Membership Changes": [[53, "membership-changes"]], "Important Notices": [[53, "important-notices"]], "POE0001:node-missing-onnx-shape-inference": [[79, "poe0001-node-missing-onnx-shape-inference"]], "Patching Batch Norm": [[60, "patching-batch-norm"]], "What\u2019s happening?": [[60, "what-s-happening"]], "How to fix": [[60, "how-to-fix"]], "Option 1: Change the BatchNorm": [[60, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[60, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[60, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[60, "option-4-eval-mode"]], "torch.Tensor.acosh_": [[91, "torch-tensor-acosh"]], "FullyShardedDataParallel": [[57, "module-torch.distributed.fsdp"]], "torch.futures": [[64, "torch-futures"]], "torch.Tensor.abs": [[84, "torch-tensor-abs"]], "torch.nn.functional.rrelu_": [[1564, "torch-nn-functional-rrelu"]], "torch.nn.functional.margin_ranking_loss": [[1538, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.kl_div": [[1527, "torch-nn-functional-kl-div"]], "torch.nn.functional.sigmoid": [[1567, "torch-nn-functional-sigmoid"]], "torch.nn.functional.pixel_unshuffle": [[1557, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.max_pool1d": [[1539, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.nll_loss": [[1550, "torch-nn-functional-nll-loss"]], "torch.nn.functional.max_unpool1d": [[1542, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.multi_margin_loss": [[1547, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.max_unpool3d": [[1544, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.huber_loss": [[1524, "torch-nn-functional-huber-loss"]], "torch.nn.functional.selu": [[1566, "torch-nn-functional-selu"]], "torch.nn.functional.hinge_embedding_loss": [[1523, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.mish": [[1545, "torch-nn-functional-mish"]], "torch.nn.functional.scaled_dot_product_attention": [[1565, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.max_pool3d": [[1541, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.pixel_shuffle": [[1556, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.pairwise_distance": [[1554, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.logsigmoid": [[1535, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.pad": [[1553, "torch-nn-functional-pad"]], "torch.nn.functional.relu6": [[1561, "torch-nn-functional-relu6"]], "torch.nn.functional.lp_pool1d": [[1536, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.l1_loss": [[1528, "torch-nn-functional-l1-loss"]], "torch.nn.functional.pdist": [[1555, "torch-nn-functional-pdist"]], "torch.nn.functional.max_pool2d": [[1540, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.lp_pool2d": [[1537, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.hardtanh": [[1521, "torch-nn-functional-hardtanh"]], "torch.nn.functional.normalize": [[1551, "torch-nn-functional-normalize"]], "torch.nn.functional.relu_": [[1562, "torch-nn-functional-relu"]], "torch.nn.functional.hardtanh_": [[1522, "torch-nn-functional-hardtanh"]], "torch.nn.functional.log_softmax": [[1534, "torch-nn-functional-log-softmax"]], "torch.nn.functional.leaky_relu_": [[1531, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.mse_loss": [[1546, "torch-nn-functional-mse-loss"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1549, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.interpolate": [[1526, "torch-nn-functional-interpolate"]], "torch.nn.functional.poisson_nll_loss": [[1558, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.prelu": [[1559, "torch-nn-functional-prelu"]], "torch.nn.functional.rrelu": [[1563, "torch-nn-functional-rrelu"]], "torch.nn.functional.leaky_relu": [[1530, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.layer_norm": [[1529, "torch-nn-functional-layer-norm"]], "torch.nn.functional.hardsigmoid": [[1519, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.local_response_norm": [[1533, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.one_hot": [[1552, "torch-nn-functional-one-hot"]], "torch.nn.functional.relu": [[1560, "torch-nn-functional-relu"]], "torch.nn.functional.hardswish": [[1520, "torch-nn-functional-hardswish"]], "torch.nn.functional.linear": [[1532, "torch-nn-functional-linear"]], "torch.nn.functional.multilabel_margin_loss": [[1548, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.max_unpool2d": [[1543, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.instance_norm": [[1525, "torch-nn-functional-instance-norm"]], "torch.nn.functional.adaptive_max_pool1d": [[1477, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.affine_grid": [[1480, "torch-nn-functional-affine-grid"]], "torch.nn.functional.gelu": [[1513, "torch-nn-functional-gelu"]], "torch.nn.functional.elu_": [[1505, "torch-nn-functional-elu"]], "torch.nn.functional.adaptive_max_pool3d": [[1479, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.fractional_max_pool2d": [[1510, "torch-nn-functional-fractional-max-pool2d"]], "ZeroPad3d": [[1473, "zeropad3d"]], "torch.nn.functional.hardshrink": [[1518, "torch-nn-functional-hardshrink"]], "torch.nn.functional.elu": [[1504, "torch-nn-functional-elu"]], "torch.nn.functional.gumbel_softmax": [[1517, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.avg_pool2d": [[1483, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.adaptive_max_pool2d": [[1478, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.grid_sample": [[1515, "torch-nn-functional-grid-sample"]], "torch.nn.functional.glu": [[1514, "torch-nn-functional-glu"]], "torch.nn.functional.conv1d": [[1490, "torch-nn-functional-conv1d"]], "torch.nn.functional.cross_entropy": [[1498, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.fractional_max_pool3d": [[1511, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.alpha_dropout": [[1481, "torch-nn-functional-alpha-dropout"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1488, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.conv3d": [[1492, "torch-nn-functional-conv3d"]], "torch.nn.functional.bilinear": [[1486, "torch-nn-functional-bilinear"]], "torch.nn.functional.feature_alpha_dropout": [[1508, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.avg_pool3d": [[1484, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.conv2d": [[1491, "torch-nn-functional-conv2d"]], "torch.nn.functional.group_norm": [[1516, "torch-nn-functional-group-norm"]], "torch.nn.functional.cosine_embedding_loss": [[1496, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.embedding_bag": [[1507, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.batch_norm": [[1485, "torch-nn-functional-batch-norm"]], "torch.nn.functional.adaptive_avg_pool2d": [[1475, "torch-nn-functional-adaptive-avg-pool2d"]], "ZeroPad1d": [[1471, "zeropad1d"]], "torch.nn.functional.binary_cross_entropy": [[1487, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.adaptive_avg_pool1d": [[1474, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.dropout3d": [[1503, "torch-nn-functional-dropout3d"]], "torch.nn.functional.conv_transpose3d": [[1495, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.gaussian_nll_loss": [[1512, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.fold": [[1509, "torch-nn-functional-fold"]], "torch.nn.functional.dropout1d": [[1501, "torch-nn-functional-dropout1d"]], "torch.nn.functional.avg_pool1d": [[1482, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.celu": [[1489, "torch-nn-functional-celu"]], "torch.nn.functional.conv_transpose2d": [[1494, "torch-nn-functional-conv-transpose2d"]], "ZeroPad2d": [[1472, "zeropad2d"]], "torch.nn.functional.ctc_loss": [[1499, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.cosine_similarity": [[1497, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.dropout": [[1500, "torch-nn-functional-dropout"]], "torch.nn.functional.adaptive_avg_pool3d": [[1476, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.functional.conv_transpose1d": [[1493, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.dropout2d": [[1502, "torch-nn-functional-dropout2d"]], "torch.nn.functional.embedding": [[1506, "torch-nn-functional-embedding"]], "UpsamplingNearest2d": [[1470, "upsamplingnearest2d"]], "MultiMarginLoss": [[1421, "multimarginloss"]], "PairwiseDistance": [[1425, "pairwisedistance"]], "SmoothL1Loss": [[1447, "smoothl1loss"]], "Softmax": [[1449, "softmax"]], "Sequential": [[1444, "sequential"]], "TransformerDecoderLayer": [[1461, "transformerdecoderlayer"]], "Threshold": [[1458, "threshold"]], "ParameterDict": [[1426, "parameterdict"]], "PixelUnshuffle": [[1429, "pixelunshuffle"]], "ReLU": [[1435, "relu"]], "Unfold": [[1467, "unfold"]], "Softshrink": [[1453, "softshrink"]], "TripletMarginWithDistanceLoss": [[1465, "tripletmarginwithdistanceloss"]], "Sigmoid": [[1446, "sigmoid"], [750, "sigmoid"]], "ReflectionPad2d": [[1438, "reflectionpad2d"]], "SyncBatchNorm": [[1455, "syncbatchnorm"]], "ReLU6": [[1436, "relu6"], [749, "relu6"]], "UpsamplingBilinear2d": [[1469, "upsamplingbilinear2d"]], "Softmax2d": [[1450, "softmax2d"]], "Softsign": [[1454, "softsign"]], "PoissonNLLLoss": [[1430, "poissonnllloss"]], "ReflectionPad3d": [[1439, "reflectionpad3d"]], "Upsample": [[1468, "upsample"]], "NLLLoss": [[1423, "nllloss"]], "ReplicationPad1d": [[1440, "replicationpad1d"]], "TripletMarginLoss": [[1464, "tripletmarginloss"]], "Transformer": [[1459, "transformer"], [22, "transformer"]], "RNNBase": [[1432, "rnnbase"]], "MultiheadAttention": [[1422, "multiheadattention"], [726, "multiheadattention"]], "PReLU": [[1424, "prelu"]], "RNNCell": [[1433, "rnncell"], [756, "rnncell"]], "ReplicationPad2d": [[1441, "replicationpad2d"]], "Tanh": [[1456, "tanh"]], "TransformerEncoder": [[1462, "transformerencoder"]], "SiLU": [[1445, "silu"]], "SoftMarginLoss": [[1448, "softmarginloss"]], "ReplicationPad3d": [[1442, "replicationpad3d"]], "Unflatten": [[1466, "unflatten"]], "ParameterList": [[1427, "parameterlist"]], "TransformerDecoder": [[1460, "transformerdecoder"]], "TransformerEncoderLayer": [[1463, "transformerencoderlayer"]], "Softplus": [[1452, "softplus"]], "RNN": [[1431, "rnn"]], "Softmin": [[1451, "softmin"]], "PixelShuffle": [[1428, "pixelshuffle"]], "SELU": [[1443, "selu"]], "RReLU": [[1434, "rrelu"]], "Tanhshrink": [[1457, "tanhshrink"]], "ReflectionPad1d": [[1437, "reflectionpad1d"]], "torch.mul": [[1305, "torch-mul"]], "torch.maximum": [[1282, "torch-maximum"]], "torch.minimum": [[1287, "torch-minimum"]], "torch.median": [[1284, "torch-median"]], "torch.multinomial": [[1306, "torch-multinomial"]], "torch.negative": [[1319, "torch-negative"]], "torch.masked_select": [[1277, "torch-masked-select"]], "torch.mps.set_rng_state": [[1302, "torch-mps-set-rng-state"]], "torch.manual_seed": [[1276, "torch-manual-seed"]], "torch.lu_unpack": [[1275, "torch-lu-unpack"]], "torch.mps.driver_allocated_memory": [[1293, "torch-mps-driver-allocated-memory"]], "torch.nanquantile": [[1313, "torch-nanquantile"]], "torch.mps.profiler.stop": [[1299, "torch-mps-profiler-stop"]], "torch.msort": [[1304, "torch-msort"]], "torch.min": [[1286, "torch-min"]], "torch.mps.set_per_process_memory_fraction": [[1301, "torch-mps-set-per-process-memory-fraction"]], "torch.matrix_power": [[1280, "torch-matrix-power"]], "torch.matmul": [[1278, "torch-matmul"]], "torch.matrix_exp": [[1279, "torch-matrix-exp"]], "torch.nanmedian": [[1312, "torch-nanmedian"]], "AdaptiveAvgPool1d": [[1321, "adaptiveavgpool1d"]], "torch.moveaxis": [[1290, "torch-moveaxis"]], "torch.max": [[1281, "torch-max"]], "torch.mps.empty_cache": [[1294, "torch-mps-empty-cache"]], "torch.mm": [[1288, "torch-mm"]], "torch.nextafter": [[1320, "torch-nextafter"]], "torch.narrow": [[1315, "torch-narrow"]], "torch.mps.manual_seed": [[1296, "torch-mps-manual-seed"]], "torch.narrow_copy": [[1316, "torch-narrow-copy"]], "AdaptiveAvgPool2d": [[1322, "adaptiveavgpool2d"]], "torch.nan_to_num": [[1310, "torch-nan-to-num"]], "torch.mean": [[1283, "torch-mean"]], "torch.nansum": [[1314, "torch-nansum"]], "torch.ne": [[1317, "torch-ne"]], "torch.mv": [[1308, "torch-mv"]], "torch.meshgrid": [[1285, "torch-meshgrid"]], "torch.mps.seed": [[1300, "torch-mps-seed"]], "torch.mps.profiler.start": [[1298, "torch-mps-profiler-start"]], "torch.neg": [[1318, "torch-neg"]], "torch.lu_solve": [[1274, "torch-lu-solve"]], "torch.multiply": [[1307, "torch-multiply"]], "torch.movedim": [[1291, "torch-movedim"]], "torch.mps.current_allocated_memory": [[1292, "torch-mps-current-allocated-memory"]], "torch.nanmean": [[1311, "torch-nanmean"]], "torch.mps.get_rng_state": [[1295, "torch-mps-get-rng-state"]], "torch.mps.profiler.profile": [[1297, "torch-mps-profiler-profile"]], "torch.mps.synchronize": [[1303, "torch-mps-synchronize"]], "torch.mvlgamma": [[1309, "torch-mvlgamma"]], "torch.mode": [[1289, "torch-mode"]], "Embedding": [[1359, "embedding"], [736, "embedding"]], "AvgPool1d": [[1329, "avgpool1d"]], "Dropout2d": [[1356, "dropout2d"]], "GELU": [[1366, "gelu"]], "Dropout1d": [[1355, "dropout1d"]], "ConvTranspose1d": [[1347, "convtranspose1d"], [732, "convtranspose1d"]], "AdaptiveMaxPool1d": [[1325, "adaptivemaxpool1d"]], "CELU": [[1338, "celu"]], "CTCLoss": [[1339, "ctcloss"]], "GLU": [[1367, "glu"]], "Bilinear": [[1337, "bilinear"]], "BatchNorm2d": [[1335, "batchnorm2d"], [727, "batchnorm2d"]], "FractionalMaxPool3d": [[1365, "fractionalmaxpool3d"]], "ELU": [[1358, "elu"], [735, "elu"]], "GaussianNLLLoss": [[1370, "gaussiannllloss"]], "Conv3d": [[1346, "conv3d"], [722, "conv3d"], [731, "conv3d"]], "AvgPool2d": [[1330, "avgpool2d"]], "GRUCell": [[1369, "grucell"], [752, "grucell"]], "AvgPool3d": [[1331, "avgpool3d"]], "AdaptiveLogSoftmaxWithLoss": [[1324, "adaptivelogsoftmaxwithloss"]], "Dropout": [[1354, "dropout"]], "CosineSimilarity": [[1351, "cosinesimilarity"]], "AdaptiveAvgPool3d": [[1323, "adaptiveavgpool3d"]], "Conv1d": [[1344, "conv1d"], [729, "conv1d"]], "DataParallel": [[1353, "dataparallel"]], "BatchNorm3d": [[1336, "batchnorm3d"], [728, "batchnorm3d"]], "ConstantPad1d": [[1341, "constantpad1d"]], "GRU": [[1368, "gru"], [751, "gru"]], "GroupNorm": [[1371, "groupnorm"], [740, "groupnorm"]], "EmbeddingBag": [[1360, "embeddingbag"], [737, "embeddingbag"]], "ConstantPad2d": [[1342, "constantpad2d"]], "Conv2d": [[1345, "conv2d"], [730, "conv2d"], [721, "conv2d"]], "Flatten": [[1362, "flatten"]], "ConvTranspose2d": [[1348, "convtranspose2d"], [733, "convtranspose2d"]], "Dropout3d": [[1357, "dropout3d"]], "CrossEntropyLoss": [[1352, "crossentropyloss"]], "AdaptiveMaxPool3d": [[1327, "adaptivemaxpool3d"]], "ConstantPad3d": [[1343, "constantpad3d"]], "ConvTranspose3d": [[1349, "convtranspose3d"], [734, "convtranspose3d"]], "Fold": [[1363, "fold"]], "FractionalMaxPool2d": [[1364, "fractionalmaxpool2d"]], "CosineEmbeddingLoss": [[1350, "cosineembeddingloss"]], "BCELoss": [[1332, "bceloss"]], "AdaptiveMaxPool2d": [[1326, "adaptivemaxpool2d"]], "AlphaDropout": [[1328, "alphadropout"]], "BatchNorm1d": [[1334, "batchnorm1d"]], "FeatureAlphaDropout": [[1361, "featurealphadropout"]], "ChannelShuffle": [[1340, "channelshuffle"]], "BCEWithLogitsLoss": [[1333, "bcewithlogitsloss"]], "MarginRankingLoss": [[1408, "marginrankingloss"]], "MaxUnpool3d": [[1414, "maxunpool3d"]], "InstanceNorm3d": [[1381, "instancenorm3d"], [744, "instancenorm3d"]], "Hardshrink": [[1372, "hardshrink"]], "HingeEmbeddingLoss": [[1376, "hingeembeddingloss"]], "Hardswish": [[1374, "hardswish"], [741, "hardswish"]], "LSTMCell": [[1387, "lstmcell"], [754, "lstmcell"]], "MaxPool1d": [[1409, "maxpool1d"]], "LogSigmoid": [[1405, "logsigmoid"]], "MultiLabelMarginLoss": [[1419, "multilabelmarginloss"]], "Module": [[1416, "module"]], "LSTM": [[1386, "lstm"], [753, "lstm"], [725, "lstm"]], "MaxUnpool2d": [[1413, "maxunpool2d"]], "Hardtanh": [[1375, "hardtanh"]], "Hardsigmoid": [[1373, "hardsigmoid"]], "LazyConvTranspose2d": [[1396, "lazyconvtranspose2d"]], "LazyInstanceNorm2d": [[1399, "lazyinstancenorm2d"]], "MaxPool2d": [[1410, "maxpool2d"]], "InstanceNorm1d": [[1379, "instancenorm1d"], [742, "instancenorm1d"]], "MultiLabelSoftMarginLoss": [[1420, "multilabelsoftmarginloss"]], "InstanceNorm2d": [[1380, "instancenorm2d"], [743, "instancenorm2d"]], "LPPool1d": [[1384, "lppool1d"]], "LazyBatchNorm3d": [[1391, "lazybatchnorm3d"]], "LazyLinear": [[1401, "lazylinear"]], "ModuleDict": [[1417, "moduledict"]], "LazyInstanceNorm1d": [[1398, "lazyinstancenorm1d"]], "L1Loss": [[1383, "l1loss"]], "MSELoss": [[1407, "mseloss"]], "MaxPool3d": [[1411, "maxpool3d"]], "LayerNorm": [[1388, "layernorm"], [745, "layernorm"]], "LogSoftmax": [[1406, "logsoftmax"]], "HuberLoss": [[1377, "huberloss"]], "LazyBatchNorm2d": [[1390, "lazybatchnorm2d"]], "LazyConv2d": [[1393, "lazyconv2d"]], "LazyConv3d": [[1394, "lazyconv3d"]], "LocalResponseNorm": [[1404, "localresponsenorm"]], "KLDivLoss": [[1382, "kldivloss"]], "Linear": [[1403, "linear"], [755, "linear"], [747, "linear"], [724, "linear"], [723, "linear"]], "ModuleList": [[1418, "modulelist"]], "LazyInstanceNorm3d": [[1400, "lazyinstancenorm3d"]], "Mish": [[1415, "mish"]], "LazyConvTranspose1d": [[1395, "lazyconvtranspose1d"]], "LazyConv1d": [[1392, "lazyconv1d"]], "LeakyReLU": [[1402, "leakyrelu"], [746, "leakyrelu"]], "LazyConvTranspose3d": [[1397, "lazyconvtranspose3d"]], "LazyBatchNorm1d": [[1389, "lazybatchnorm1d"]], "LPPool2d": [[1385, "lppool2d"]], "MaxUnpool1d": [[1412, "maxunpool1d"]], "torch.ger": [[1130, "torch-ger"]], "torch.heaviside": [[1143, "torch-heaviside"]], "torch.hstack": [[1149, "torch-hstack"]], "torch.index_select": [[1158, "torch-index-select"]], "torch.is_grad_enabled": [[1167, "torch-is-grad-enabled"]], "torch.get_num_threads": [[1135, "torch-get-num-threads"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1165, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.greater_equal": [[1139, "torch-greater-equal"]], "torch.is_complex": [[1163, "torch-is-complex"]], "torch.hsplit": [[1147, "torch-hsplit"]], "torch.inner": [[1161, "torch-inner"]], "torch.is_floating_point": [[1166, "torch-is-floating-point"]], "torch.index_reduce": [[1157, "torch-index-reduce"]], "torch.get_num_interop_threads": [[1134, "torch-get-num-interop-threads"]], "torch.gt": [[1140, "torch-gt"]], "torch.geqrf": [[1129, "torch-geqrf"]], "torch.hamming_window": [[1141, "torch-hamming-window"]], "torch.index_copy": [[1156, "torch-index-copy"]], "torch.is_inference_mode_enabled": [[1168, "torch-is-inference-mode-enabled"]], "torch.isclose": [[1173, "torch-isclose"]], "torch.hann_window": [[1142, "torch-hann-window"]], "torch.get_default_dtype": [[1131, "torch-get-default-dtype"]], "torch.initial_seed": [[1160, "torch-initial-seed"]], "torch.is_tensor": [[1171, "torch-is-tensor"]], "torch.get_float32_matmul_precision": [[1133, "torch-get-float32-matmul-precision"]], "torch.index_add": [[1155, "torch-index-add"]], "torch.is_nonzero": [[1169, "torch-is-nonzero"]], "torch.ge": [[1128, "torch-ge"]], "torch.get_rng_state": [[1136, "torch-get-rng-state"]], "torch.isin": [[1175, "torch-isin"]], "torch.igammac": [[1153, "torch-igammac"]], "torch.hypot": [[1150, "torch-hypot"]], "torch.i0": [[1151, "torch-i0"]], "torch.histc": [[1144, "torch-histc"]], "torch.gradient": [[1137, "torch-gradient"]], "torch.inverse": [[1162, "torch-inverse"]], "torch.imag": [[1154, "torch-imag"]], "torch.isfinite": [[1174, "torch-isfinite"]], "torch.igamma": [[1152, "torch-igamma"]], "inference_mode": [[1159, "inference-mode"]], "torch.get_deterministic_debug_mode": [[1132, "torch-get-deterministic-debug-mode"]], "torch.is_storage": [[1170, "torch-is-storage"]], "torch.greater": [[1138, "torch-greater"]], "torch.is_conj": [[1164, "torch-is-conj"]], "torch.histogramdd": [[1146, "torch-histogramdd"]], "torch.histogram": [[1145, "torch-histogram"]], "torch.hspmm": [[1148, "torch-hspmm"]], "torch.gcd": [[1127, "torch-gcd"]], "torch.is_warn_always_enabled": [[1172, "torch-is-warn-always-enabled"]], "torch.linalg.matrix_exp": [[1235, "torch-linalg-matrix-exp"]], "torch.linalg.solve_ex": [[1245, "torch-linalg-solve-ex"]], "torch.log10": [[1258, "torch-log10"]], "torch.logspace": [[1270, "torch-logspace"]], "torch.linalg.ldl_solve": [[1228, "torch-linalg-ldl-solve"]], "torch.logical_and": [[1265, "torch-logical-and"]], "torch.logsumexp": [[1271, "torch-logsumexp"]], "torch.linalg.ldl_factor": [[1226, "torch-linalg-ldl-factor"]], "torch.linalg.lu": [[1230, "torch-linalg-lu"]], "torch.linalg.matmul": [[1234, "torch-linalg-matmul"]], "torch.log": [[1257, "torch-log"]], "torch.linalg.lstsq": [[1229, "torch-linalg-lstsq"]], "torch.linalg.slogdet": [[1243, "torch-linalg-slogdet"]], "torch.linalg.vecdot": [[1252, "torch-linalg-vecdot"]], "torch.logical_not": [[1266, "torch-logical-not"]], "torch.linalg.solve": [[1244, "torch-linalg-solve"]], "torch.log2": [[1260, "torch-log2"]], "torch.linalg.svd": [[1247, "torch-linalg-svd"]], "torch.linalg.svdvals": [[1248, "torch-linalg-svdvals"]], "torch.logit": [[1269, "torch-logit"]], "torch.linalg.pinv": [[1241, "torch-linalg-pinv"]], "torch.logaddexp2": [[1262, "torch-logaddexp2"]], "torch.linspace": [[1254, "torch-linspace"]], "torch.lt": [[1272, "torch-lt"]], "torch.linalg.matrix_rank": [[1238, "torch-linalg-matrix-rank"]], "torch.logical_xor": [[1268, "torch-logical-xor"]], "torch.logdet": [[1264, "torch-logdet"]], "torch.linalg.norm": [[1240, "torch-linalg-norm"]], "torch.lu": [[1273, "torch-lu"]], "torch.linalg.lu_solve": [[1233, "torch-linalg-lu-solve"]], "torch.log1p": [[1259, "torch-log1p"]], "torch.linalg.multi_dot": [[1239, "torch-linalg-multi-dot"]], "torch.linalg.qr": [[1242, "torch-linalg-qr"]], "torch.linalg.lu_factor_ex": [[1232, "torch-linalg-lu-factor-ex"]], "torch.logaddexp": [[1261, "torch-logaddexp"]], "torch.linalg.inv_ex": [[1225, "torch-linalg-inv-ex"]], "torch.linalg.matrix_power": [[1237, "torch-linalg-matrix-power"]], "torch.linalg.tensorsolve": [[1250, "torch-linalg-tensorsolve"]], "torch.linalg.lu_factor": [[1231, "torch-linalg-lu-factor"]], "torch.linalg.matrix_norm": [[1236, "torch-linalg-matrix-norm"]], "torch.linalg.vander": [[1251, "torch-linalg-vander"]], "torch.linalg.solve_triangular": [[1246, "torch-linalg-solve-triangular"]], "torch.lobpcg": [[1256, "torch-lobpcg"]], "torch.linalg.ldl_factor_ex": [[1227, "torch-linalg-ldl-factor-ex"]], "torch.logcumsumexp": [[1263, "torch-logcumsumexp"]], "torch.linalg.vector_norm": [[1253, "torch-linalg-vector-norm"]], "torch.load": [[1255, "torch-load"]], "torch.logical_or": [[1267, "torch-logical-or"]], "torch.linalg.tensorinv": [[1249, "torch-linalg-tensorinv"]], "torch.linalg.cross": [[1216, "torch-linalg-cross"]], "torch.jit.fork": [[1187, "torch-jit-fork"]], "torch.linalg.det": [[1217, "torch-linalg-det"]], "torch.linalg.inv": [[1224, "torch-linalg-inv"]], "torch.linalg.cond": [[1215, "torch-linalg-cond"]], "torch.kron": [[1204, "torch-kron"]], "torch.jit.unused": [[1201, "torch-jit-unused"]], "torch.jit.trace_module": [[1200, "torch-jit-trace-module"]], "torch.linalg.eigvalsh": [[1222, "torch-linalg-eigvalsh"]], "torch.isposinf": [[1179, "torch-isposinf"]], "torch.jit.onednn_fusion_enabled": [[1192, "torch-jit-onednn-fusion-enabled"]], "torch.ldexp": [[1207, "torch-ldexp"]], "torch.jit.save": [[1194, "torch-jit-save"]], "torch.linalg.householder_product": [[1223, "torch-linalg-householder-product"]], "torch.kthvalue": [[1205, "torch-kthvalue"]], "torch.isreal": [[1180, "torch-isreal"]], "torch.jit.optimize_for_inference": [[1193, "torch-jit-optimize-for-inference"]], "torch.jit.freeze": [[1188, "torch-jit-freeze"]], "torch.lerp": [[1209, "torch-lerp"]], "torch.jit.load": [[1191, "torch-jit-load"]], "torch.less_equal": [[1211, "torch-less-equal"]], "strict_fusion": [[1198, "strict-fusion"]], "torch.jit.script_if_tracing": [[1196, "torch-jit-script-if-tracing"]], "torch.linalg.eigh": [[1220, "torch-linalg-eigh"]], "torch.less": [[1210, "torch-less"]], "torch.jit.set_fusion_strategy": [[1197, "torch-jit-set-fusion-strategy"]], "torch.lcm": [[1206, "torch-lcm"]], "torch.kaiser_window": [[1203, "torch-kaiser-window"]], "torch.linalg.cholesky_ex": [[1214, "torch-linalg-cholesky-ex"]], "torch.jit.enable_onednn_fusion": [[1186, "torch-jit-enable-onednn-fusion"]], "torch.jit.annotate": [[1185, "torch-jit-annotate"]], "torch.linalg.diagonal": [[1218, "torch-linalg-diagonal"]], "torch.lgamma": [[1212, "torch-lgamma"]], "torch.isneginf": [[1178, "torch-isneginf"]], "torch.jit.isinstance": [[1190, "torch-jit-isinstance"]], "torch.isinf": [[1176, "torch-isinf"]], "torch.jit.ignore": [[1189, "torch-jit-ignore"]], "torch.isnan": [[1177, "torch-isnan"]], "Attribute": [[1182, "attribute"]], "torch.linalg.cholesky": [[1213, "torch-linalg-cholesky"]], "torch.jit.trace": [[1199, "torch-jit-trace"]], "torch.istft": [[1181, "torch-istft"]], "torch.linalg.eigvals": [[1221, "torch-linalg-eigvals"]], "torch.jit.script": [[1195, "torch-jit-script"]], "torch.le": [[1208, "torch-le"]], "torch.linalg.eig": [[1219, "torch-linalg-eig"]], "ScriptModule": [[1184, "scriptmodule"]], "torch.jit.wait": [[1202, "torch-jit-wait"]], "ScriptFunction": [[1183, "scriptfunction"]], "torch.func.functionalize": [[1114, "torch-func-functionalize"]], "torch.func.replace_all_batch_norm_modules_": [[1122, "torch-func-replace-all-batch-norm-modules"]], "torch.fft.ihfft2": [[1086, "torch-fft-ihfft2"]], "torch.fft.ihfftn": [[1087, "torch-fft-ihfftn"]], "torch.fft.irfftn": [[1090, "torch-fft-irfftn"]], "torch.func.grad": [[1115, "torch-func-grad"]], "torch.fliplr": [[1098, "torch-fliplr"]], "torch.fft.ifft": [[1081, "torch-fft-ifft"]], "torch.func.jvp": [[1120, "torch-func-jvp"]], "torch.flipud": [[1099, "torch-flipud"]], "torch.func.jacrev": [[1119, "torch-func-jacrev"]], "torch.fft.ihfft": [[1085, "torch-fft-ihfft"]], "torch.fft.rfftn": [[1094, "torch-fft-rfftn"]], "torch.fft.rfft2": [[1092, "torch-fft-rfft2"]], "torch.fft.hfft2": [[1079, "torch-fft-hfft2"]], "torch.fft.irfft": [[1088, "torch-fft-irfft"]], "torch.fft.rfftfreq": [[1093, "torch-fft-rfftfreq"]], "torch.fft.hfft": [[1078, "torch-fft-hfft"]], "torch.fft.ifft2": [[1082, "torch-fft-ifft2"]], "torch.from_dlpack": [[1108, "torch-from-dlpack"]], "torch.floor_divide": [[1102, "torch-floor-divide"]], "torch.gather": [[1126, "torch-gather"]], "torch.func.vmap": [[1125, "torch-func-vmap"]], "torch.full_like": [[1112, "torch-full-like"]], "torch.frexp": [[1107, "torch-frexp"]], "torch.fft.ifftn": [[1083, "torch-fft-ifftn"]], "torch.func.jacfwd": [[1118, "torch-func-jacfwd"]], "torch.full": [[1111, "torch-full"]], "torch.fmax": [[1103, "torch-fmax"]], "torch.fft.hfftn": [[1080, "torch-fft-hfftn"]], "torch.fft.rfft": [[1091, "torch-fft-rfft"]], "torch.floor": [[1101, "torch-floor"]], "torch.fmin": [[1104, "torch-fmin"]], "torch.fft.irfft2": [[1089, "torch-fft-irfft2"]], "torch.frombuffer": [[1110, "torch-frombuffer"]], "torch.float_power": [[1100, "torch-float-power"]], "torch.func.grad_and_value": [[1116, "torch-func-grad-and-value"]], "torch.flip": [[1097, "torch-flip"]], "torch.func.functional_call": [[1113, "torch-func-functional-call"]], "torch.func.vjp": [[1124, "torch-func-vjp"]], "torch.fft.ifftshift": [[1084, "torch-fft-ifftshift"]], "torch.fix": [[1095, "torch-fix"]], "torch.func.hessian": [[1117, "torch-func-hessian"]], "torch.fmod": [[1105, "torch-fmod"]], "torch.func.stack_module_state": [[1123, "torch-func-stack-module-state"]], "torch.from_numpy": [[1109, "torch-from-numpy"]], "torch.func.linearize": [[1121, "torch-func-linearize"]], "torch.flatten": [[1096, "torch-flatten"]], "torch.frac": [[1106, "torch-frac"]], "torch.overrides": [[1922, "torch-overrides"]], "torch.utils.tensorboard": [[1916, "module-torch.utils.tensorboard"]], "Type Info": [[1923, "type-info"]], "torch.finfo": [[1923, "torch-finfo"]], "torch.iinfo": [[1923, "torch-iinfo"]], "torch.ao.ns._numeric_suite": [[1920, "torch-ao-ns-numeric-suite"]], "torch.special": [[1912, "torch-special"]], "torch.Storage": [[1913, "torch-storage"]], "Tensor Attributes": [[1914, "tensor-attributes"]], "torch.dtype": [[1914, "torch-dtype"]], "torch.device": [[1914, "torch-device"]], "torch.layout": [[1914, "torch-layout"]], "torch.memory_format": [[1914, "torch-memory-format"]], "torch.Tensor": [[1917, "torch-tensor"]], "Data types": [[1917, "data-types"]], "Initializing and basic operations": [[1917, "initializing-and-basic-operations"]], "Tensor class reference": [[1917, "tensor-class-reference"]], "torch.testing": [[1918, "module-torch.testing"]], "torch": [[1919, "module-torch"]], "Tensors": [[1919, "tensors"]], "Creation Ops": [[1919, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1919, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1919, "generators"]], "Random sampling": [[1919, "random-sampling"]], "In-place random sampling": [[1919, "in-place-random-sampling"]], "Quasi-random sampling": [[1919, "quasi-random-sampling"]], "Serialization": [[1919, "serialization"], [24, "serialization"]], "Parallelism": [[1919, "parallelism"]], "Locally disabling gradient computation": [[1919, "locally-disabling-gradient-computation"], [2, "locally-disabling-gradient-computation"], [1877, "locally-disabling-gradient-computation"]], "Math operations": [[1919, "math-operations"]], "Pointwise Ops": [[1919, "pointwise-ops"]], "Reduction Ops": [[1919, "reduction-ops"]], "Comparison Ops": [[1919, "comparison-ops"]], "Spectral Ops": [[1919, "spectral-ops"]], "Other Operations": [[1919, "other-operations"]], "BLAS and LAPACK Operations": [[1919, "blas-and-lapack-operations"]], "Foreach Operations": [[1919, "foreach-operations"]], "Utilities": [[1919, "utilities"], [1873, "module-torch.nn.utils"]], "Symbolic Numbers": [[1919, "symbolic-numbers"]], "Optimizations": [[1919, "optimizations"], [18, "optimizations"]], "Operator Tags": [[1919, "operator-tags"]], "Engine Configuration": [[1919, "engine-configuration"]], "torch.ao.ns._numeric_suite_fx": [[1921, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1921, "torch-ao-ns-fx-utils"]], "Tensor Views": [[1915, "tensor-views"]], "torch.sparse": [[1911, "torch-sparse"]], "Why and when to use sparsity": [[1911, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1911, "functionality-overview"]], "Operator overview": [[1911, "operator-overview"]], "Sparse COO tensors": [[1911, "sparse-coo-tensors"]], "Construction": [[1911, "construction"], [1872, "construction"]], "Sparse hybrid COO tensors": [[1911, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1911, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1911, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1911, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1911, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1911, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1911, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1911, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1911, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1911, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1911, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1911, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1911, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1911, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1911, "construction-of-sparse-compressed-tensors"]], "Supported operations": [[1911, "supported-operations"], [1872, "supported-operations"]], "Linear Algebra operations": [[1911, "linear-algebra-operations"]], "Tensor methods and sparse": [[1911, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1911, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1911, "other-functions"]], "Unary functions": [[1911, "unary-functions"]], "torch.diag": [[1044, "torch-diag"]], "torch.cuda.synchronize": [[1033, "torch-cuda-synchronize"]], "torch.dist": [[1051, "torch-dist"]], "torch.equal": [[1063, "torch-equal"]], "torch.cuda.set_rng_state_all": [[1029, "torch-cuda-set-rng-state-all"]], "torch.cummax": [[1036, "torch-cummax"]], "torch.fft.fftfreq": [[1075, "torch-fft-fftfreq"]], "torch.cuda.set_sync_debug_mode": [[1031, "torch-cuda-set-sync-debug-mode"]], "torch.cummin": [[1037, "torch-cummin"]], "torch.digamma": [[1050, "torch-digamma"]], "torch.exp": [[1067, "torch-exp"]], "torch.einsum": [[1057, "torch-einsum"]], "torch.diagonal": [[1047, "torch-diagonal"]], "torch.fft.fftn": [[1076, "torch-fft-fftn"]], "torch.erf": [[1064, "torch-erf"]], "torch.cumprod": [[1038, "torch-cumprod"]], "torch.diagflat": [[1046, "torch-diagflat"]], "torch.empty_strided": [[1060, "torch-empty-strided"]], "torch.eye": [[1070, "torch-eye"]], "torch.cumulative_trapezoid": [[1040, "torch-cumulative-trapezoid"]], "torch.fft.fft": [[1073, "torch-fft-fft"]], "torch.dequantize": [[1042, "torch-dequantize"]], "torch.diff": [[1049, "torch-diff"]], "torch.diag_embed": [[1045, "torch-diag-embed"]], "torch.cuda.temperature": [[1034, "torch-cuda-temperature"]], "torch.div": [[1052, "torch-div"]], "torch.dstack": [[1056, "torch-dstack"]], "torch.eq": [[1062, "torch-eq"]], "torch.erfinv": [[1066, "torch-erfinv"]], "torch.cumsum": [[1039, "torch-cumsum"]], "torch.divide": [[1053, "torch-divide"]], "torch.expm1": [[1069, "torch-expm1"]], "torch.cuda.set_stream": [[1030, "torch-cuda-set-stream"]], "torch.empty_like": [[1059, "torch-empty-like"]], "enable_grad": [[1061, "enable-grad"]], "torch.erfc": [[1065, "torch-erfc"]], "torch.empty": [[1058, "torch-empty"]], "torch.diagonal_scatter": [[1048, "torch-diagonal-scatter"]], "torch.fake_quantize_per_tensor_affine": [[1072, "torch-fake-quantize-per-tensor-affine"]], "torch.fft.fft2": [[1074, "torch-fft-fft2"]], "torch.cuda.utilization": [[1035, "torch-cuda-utilization"]], "torch.det": [[1043, "torch-det"]], "torch.deg2rad": [[1041, "torch-deg2rad"]], "torch.cuda.stream": [[1032, "torch-cuda-stream"]], "torch.exp2": [[1068, "torch-exp2"]], "torch.fft.fftshift": [[1077, "torch-fft-fftshift"]], "torch.dot": [[1054, "torch-dot"]], "torch.dsplit": [[1055, "torch-dsplit"]], "torch.fake_quantize_per_channel_affine": [[1071, "torch-fake-quantize-per-channel-affine"]], "torch.cuda.list_gpu_processes": [[1002, "torch-cuda-list-gpu-processes"]], "torch.cuda.mem_get_info": [[1009, "torch-cuda-mem-get-info"]], "torch.cuda.device_count": [[980, "torch-cuda-device-count"]], "torch.cuda.get_device_capability": [[985, "torch-cuda-get-device-capability"]], "torch.cuda.memory_summary": [[1015, "torch-cuda-memory-summary"]], "torch.cuda.get_arch_list": [[984, "torch-cuda-get-arch-list"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1001, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.get_rng_state": [[989, "torch-cuda-get-rng-state"]], "torch.cuda.power_draw": [[1020, "torch-cuda-power-draw"]], "torch.cuda.empty_cache": [[982, "torch-cuda-empty-cache"]], "torch.cuda.memory_snapshot": [[1013, "torch-cuda-memory-snapshot"]], "torch.cuda.get_rng_state_all": [[990, "torch-cuda-get-rng-state-all"]], "torch.cuda.jiterator._create_jit_fn": [[1000, "torch-cuda-jiterator-create-jit-fn"]], "device_of": [[981, "device-of"]], "torch.cuda.ipc_collect": [[996, "torch-cuda-ipc-collect"]], "torch.cuda.memory_usage": [[1016, "torch-cuda-memory-usage"]], "torch.cuda.nvtx.mark": [[1017, "torch-cuda-nvtx-mark"]], "torch.cuda.reset_peak_memory_stats": [[1023, "torch-cuda-reset-peak-memory-stats"]], "torch.cuda.memory_reserved": [[1012, "torch-cuda-memory-reserved"]], "torch.cuda.memory_stats": [[1014, "torch-cuda-memory-stats"]], "torch.cuda.reset_max_memory_cached": [[1022, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.memory_cached": [[1011, "torch-cuda-memory-cached"]], "torch.cuda.nvtx.range_push": [[1019, "torch-cuda-nvtx-range-push"]], "torch.cuda.seed_all": [[1025, "torch-cuda-seed-all"]], "torch.cuda.set_rng_state": [[1028, "torch-cuda-set-rng-state"]], "torch.cuda.get_sync_debug_mode": [[991, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.memory_allocated": [[1010, "torch-cuda-memory-allocated"]], "torch.cuda.is_current_stream_capturing": [[998, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.make_graphed_callables": [[1003, "torch-cuda-make-graphed-callables"]], "torch.cuda.manual_seed": [[1004, "torch-cuda-manual-seed"]], "torch.cuda.seed": [[1024, "torch-cuda-seed"]], "torch.cuda.manual_seed_all": [[1005, "torch-cuda-manual-seed-all"]], "torch.cuda.set_device": [[1026, "torch-cuda-set-device"]], "torch.cuda.get_allocator_backend": [[983, "torch-cuda-get-allocator-backend"]], "torch.cuda.nvtx.range_pop": [[1018, "torch-cuda-nvtx-range-pop"]], "torch.cuda.is_available": [[997, "torch-cuda-is-available"]], "torch.cuda.is_initialized": [[999, "torch-cuda-is-initialized"]], "torch.cuda.reset_max_memory_allocated": [[1021, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.get_gencode_flags": [[988, "torch-cuda-get-gencode-flags"]], "torch.cuda.graph_pool_handle": [[993, "torch-cuda-graph-pool-handle"]], "torch.cuda.initial_seed": [[995, "torch-cuda-initial-seed"]], "torch.cuda.get_device_name": [[986, "torch-cuda-get-device-name"]], "torch.cuda.get_device_properties": [[987, "torch-cuda-get-device-properties"]], "torch.cuda.max_memory_cached": [[1007, "torch-cuda-max-memory-cached"]], "torch.cuda.set_per_process_memory_fraction": [[1027, "torch-cuda-set-per-process-memory-fraction"]], "graph": [[992, "graph"]], "torch.cuda.max_memory_allocated": [[1006, "torch-cuda-max-memory-allocated"]], "torch.cuda.init": [[994, "torch-cuda-init"]], "torch.cuda.max_memory_reserved": [[1008, "torch-cuda-max-memory-reserved"]], "torch.cuda.default_stream": [[978, "torch-cuda-default-stream"]], "torch.conj_physical": [[950, "torch-conj-physical"]], "torch.cuda.current_blas_handle": [[975, "torch-cuda-current-blas-handle"]], "StreamContext": [[964, "streamcontext"]], "torch.cuda.change_current_allocator": [[968, "torch-cuda-change-current-allocator"]], "torch.cuda.caching_allocator_delete": [[966, "torch-cuda-caching-allocator-delete"]], "torch.cos": [[953, "torch-cos"]], "torch.combinations": [[943, "torch-combinations"]], "torch.cuda.current_stream": [[977, "torch-cuda-current-stream"]], "torch.count_nonzero": [[955, "torch-count-nonzero"]], "CUDAGraph": [[958, "cudagraph"]], "Event": [[960, "event"]], "torch.cross": [[957, "torch-cross"]], "torch.copysign": [[951, "torch-copysign"]], "Stream": [[963, "stream"]], "torch.ceil": [[933, "torch-ceil"]], "torch.chunk": [[938, "torch-chunk"]], "torch.column_stack": [[942, "torch-column-stack"]], "CUDAPluggableAllocator": [[959, "cudapluggableallocator"]], "torch.concatenate": [[948, "torch-concatenate"]], "torch.cuda.OutOfMemoryError": [[962, "torch-cuda-outofmemoryerror"]], "torch.cov": [[956, "torch-cov"]], "torch.cholesky": [[935, "torch-cholesky"]], "torch.cuda.comm.reduce_add": [[973, "torch-cuda-comm-reduce-add"]], "torch.conj": [[949, "torch-conj"]], "torch.cuda.caching_allocator_alloc": [[965, "torch-cuda-caching-allocator-alloc"]], "torch.clone": [[941, "torch-clone"]], "torch.cuda.clock_rate": [[969, "torch-cuda-clock-rate"]], "device": [[979, "device"]], "torch.cuda.comm.broadcast_coalesced": [[971, "torch-cuda-comm-broadcast-coalesced"]], "torch.cosh": [[954, "torch-cosh"]], "torch.cuda.comm.gather": [[972, "torch-cuda-comm-gather"]], "torch.cuda.comm.scatter": [[974, "torch-cuda-comm-scatter"]], "torch.cat": [[931, "torch-cat"]], "torch.clamp": [[939, "torch-clamp"]], "torch.cuda.can_device_access_peer": [[967, "torch-cuda-can-device-access-peer"]], "torch.cuda.comm.broadcast": [[970, "torch-cuda-comm-broadcast"]], "ExternalStream": [[961, "externalstream"]], "torch.corrcoef": [[952, "torch-corrcoef"]], "torch.cuda.current_device": [[976, "torch-cuda-current-device"]], "torch.clip": [[940, "torch-clip"]], "torch.cdist": [[932, "torch-cdist"]], "torch.cholesky_inverse": [[936, "torch-cholesky-inverse"]], "torch.complex": [[946, "torch-complex"]], "torch.chain_matmul": [[934, "torch-chain-matmul"]], "torch.compiled_with_cxx11_abi": [[945, "torch-compiled-with-cxx11-abi"]], "torch.concat": [[947, "torch-concat"]], "torch.cholesky_solve": [[937, "torch-cholesky-solve"]], "PyTorch Design Philosophy": [[9, "pytorch-design-philosophy"]], "Design Principles": [[9, "design-principles"]], "Principle 1: Usability over Performance": [[9, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[9, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[9, "principle-3-python-first-with-best-in-class-language-interoperability"]], "Benchmark Utils - torch.utils.benchmark": [[4, "module-torch.utils.benchmark"]], "Automatic differentiation package - torch.autograd": [[2, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[2, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[2, "functional-higher-level-api"]], "Default gradient layouts": [[2, "default-gradient-layouts"]], "Manual gradient layouts": [[2, "manual-gradient-layouts"]], "In-place operations on Tensors": [[2, "in-place-operations-on-tensors"]], "In-place correctness checks": [[2, "in-place-correctness-checks"], [1877, "in-place-correctness-checks"]], "Variable (deprecated)": [[2, "variable-deprecated"]], "Tensor autograd functions": [[2, "tensor-autograd-functions"]], "Function": [[2, "function"]], "Context method mixins": [[2, "context-method-mixins"]], "Numerical gradient checking": [[2, "numerical-gradient-checking"]], "Profiler": [[2, "profiler"]], "Anomaly detection": [[2, "anomaly-detection"]], "Autograd graph": [[2, "autograd-graph"]], "PyTorch Governance | Maintainers": [[11, "pytorch-governance-maintainers"]], "Responsibilities": [[11, "responsibilities"]], "Lead Core Maintainer (BDFL)": [[11, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Core Maintainers": [[11, "core-maintainers"], [10, "core-maintainers"]], "Module-level maintainers": [[11, "module-level-maintainers"]], "NN APIs (torch.nn)": [[11, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[11, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[11, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[11, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[11, "distributions-rng"]], "Distributed": [[11, "distributed"]], "Multiprocessing and DataLoaders": [[11, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[11, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[11, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[11, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[11, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[11, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[11, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[11, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[11, "nvfuser"]], "AMD/ROCm/HIP": [[11, "amd-rocm-hip"]], "Build + CI": [[11, "build-ci"]], "Performance Tools": [[11, "performance-tools"]], "C++ API": [[11, "c-api"]], "C10 utils and operator dispatch": [[11, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[11, "onnx-exporter"]], "Mobile / Edge": [[11, "mobile-edge"]], "Model Compression & Optimization": [[11, "model-compression-optimization"]], "Windows": [[11, "windows"]], "Apple M1/MPS": [[11, "apple-m1-mps"]], "PowerPC": [[11, "powerpc"]], "Docs / Tutorials": [[11, "docs-tutorials"]], "Library-level maintainers": [[11, "library-level-maintainers"]], "XLA": [[11, "xla"]], "TorchServe": [[11, "torchserve"]], "TorchVision": [[11, "torchvision"]], "TorchText": [[11, "torchtext"]], "TorchAudio": [[11, "torchaudio"]], "TorchRec": [[11, "torchrec"]], "TorchX": [[11, "torchx"]], "TorchData / TorchArrow": [[11, "torchdata-torcharrow"]], "Writing Graph Transformations on ATen IR": [[22, "writing-graph-transformations-on-aten-ir"]], "Passes": [[22, "passes"]], "One-to-One Pass": [[22, "one-to-one-pass"]], "One-to-X Pass": [[22, "one-to-x-pass"]], "One-to-None Pass": [[22, "one-to-none-pass"]], "Utilizing Local Information": [[22, "utilizing-local-information"]], "Subgraph Rewriter": [[22, "subgraph-rewriter"]], "Pass Manager": [[22, "pass-manager"]], "Partitioner": [[22, "partitioner"]], "Subgraph Matcher": [[22, "subgraph-matcher"]], "Capability Based Partitioner": [[22, "capability-based-partitioner"]], "Examples": [[47, "examples"], [12, "examples"]], "PyTorch 2.0 Troubleshooting": [[23, "pytorch-2-0-troubleshooting"]], "Title": [[23, "id1"]], "Diagnosing Runtime Errors": [[23, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[23, "torchdynamo-errors"]], "TorchInductor Errors": [[23, "torchinductor-errors"], [14, "torchinductor-errors"]], "Minifying TorchInductor Errors": [[23, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[23, "minifying-backend-compiler-errors"]], "Performance Profiling": [[23, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[23, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[23, "torchinductor-debugging-using-torch-compile-debug"]], "Graph Breaks": [[23, "graph-breaks"], [14, "graph-breaks"]], "Identifying the Cause of a Graph Break": [[23, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[23, "excessive-recompilation"], [14, "excessive-recompilation"]], "Accuracy Debugging": [[23, "accuracy-debugging"]], "File an Issue": [[23, "file-an-issue"]], "torch.__config__": [[25, "module-torch.__config__"]], "torch::deploy has been moved to pytorch/multipy": [[34, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Probability distributions - torch.distributions": [[41, "module-torch.distributions"]], "Score function": [[41, "score-function"]], "Pathwise derivative": [[41, "pathwise-derivative"]], "Distribution": [[41, "distribution"]], "ExponentialFamily": [[41, "exponentialfamily"]], "Bernoulli": [[41, "bernoulli"]], "Beta": [[41, "beta"]], "Binomial": [[41, "binomial"]], "Categorical": [[41, "categorical"]], "Cauchy": [[41, "cauchy"]], "Chi2": [[41, "chi2"]], "ContinuousBernoulli": [[41, "continuousbernoulli"]], "Dirichlet": [[41, "dirichlet"]], "Exponential": [[41, "exponential"]], "FisherSnedecor": [[41, "fishersnedecor"]], "Gamma": [[41, "gamma"]], "Geometric": [[41, "geometric"]], "Gumbel": [[41, "gumbel"]], "HalfCauchy": [[41, "halfcauchy"]], "HalfNormal": [[41, "halfnormal"]], "Independent": [[41, "independent"]], "Kumaraswamy": [[41, "kumaraswamy"]], "LKJCholesky": [[41, "lkjcholesky"]], "Laplace": [[41, "laplace"]], "LogNormal": [[41, "lognormal"]], "LowRankMultivariateNormal": [[41, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[41, "mixturesamefamily"]], "Multinomial": [[41, "multinomial"]], "MultivariateNormal": [[41, "multivariatenormal"]], "NegativeBinomial": [[41, "negativebinomial"]], "Normal": [[41, "normal"]], "OneHotCategorical": [[41, "onehotcategorical"]], "Pareto": [[41, "pareto"]], "Poisson": [[41, "poisson"]], "RelaxedBernoulli": [[41, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[41, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[41, "relaxedonehotcategorical"]], "StudentT": [[41, "studentt"]], "TransformedDistribution": [[41, "transformeddistribution"]], "Uniform": [[41, "uniform"]], "VonMises": [[41, "vonmises"]], "Weibull": [[41, "weibull"]], "Wishart": [[41, "wishart"]], "KL Divergence": [[41, "module-torch.distributions.kl"]], "Transforms": [[41, "module-torch.distributions.transforms"]], "Constraints": [[41, "module-torch.distributions.constraints"], [1880, "constraints"]], "Constraint Registry": [[41, "module-torch.distributions.constraint_registry"]], "Error Propagation": [[45, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[45, "methods-and-classes"]], "Distributed communication package - torch.distributed": [[35, "distributed-communication-package-torch-distributed"]], "Backends": [[35, "backends"], [1907, "backends"]], "Backends that come with PyTorch": [[35, "backends-that-come-with-pytorch"]], "Which backend to use?": [[35, "which-backend-to-use"]], "Common environment variables": [[35, "common-environment-variables"]], "Choosing the network interface to use": [[35, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[35, "other-nccl-environment-variables"]], "Basics": [[35, "basics"], [1907, "basics"]], "Initialization": [[35, "initialization"]], "TCP initialization": [[35, "tcp-initialization"]], "Shared file-system initialization": [[35, "shared-file-system-initialization"]], "Environment variable initialization": [[35, "environment-variable-initialization"]], "Post-Initialization": [[35, "post-initialization"]], "Distributed Key-Value Store": [[35, "distributed-key-value-store"]], "Groups": [[35, "groups"]], "Point-to-point communication": [[35, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[35, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[35, "collective-functions"]], "Profiling Collective Communication": [[35, "profiling-collective-communication"]], "Multi-GPU collective functions": [[35, "multi-gpu-collective-functions"]], "Third-party backends": [[35, "third-party-backends"]], "Launch utility": [[35, "launch-utility"]], "Spawn utility": [[35, "spawn-utility"]], "Debugging torch.distributed applications": [[35, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[35, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[35, "torch-distributed-debug"]], "Logging": [[35, "logging"]], "PyTorch 2.0 NNModule Support": [[19, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[19, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[19, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[19, "state-dict-hooks"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[37, "distributed-checkpoint-torch-distributed-checkpoint"]], "Generic Join Context Manager": [[36, "generic-join-context-manager"]], "Torch Distributed Elastic": [[38, "torch-distributed-elastic"]], "Get Started": [[38, "get-started"]], "Documentation": [[38, "documentation"]], "API": [[38, null]], "Advanced": [[38, null]], "Plugins": [[38, null]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[40, "tensor-parallelism-torch-distributed-tensor-parallel"]], "CUDA Stream Sanitizer": [[29, "cuda-stream-sanitizer"]], "Customization": [[44, "customization"]], "Launcher": [[44, "launcher"]], "Rendezvous Handler": [[44, "rendezvous-handler"]], "Metric Handler": [[44, "metric-handler"]], "Events Handler": [[44, "events-handler"]], "DDP Communication Hooks": [[33, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[33, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[33, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[33, "default-communication-hooks"]], "PowerSGD Communication Hook": [[33, "powersgd-communication-hook"]], "PowerSGD State": [[33, "powersgd-state"]], "PowerSGD Hooks": [[33, "powersgd-hooks"]], "Debugging Communication Hooks": [[33, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[33, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[33, "acknowledgements"], [1900, "acknowledgements"]], "PyTorch Governance | Mechanics": [[10, "pytorch-governance-mechanics"]], "Summary": [[10, "summary"], [17, "summary"]], "Module Maintainers": [[10, "module-maintainers"]], "Nominating, Confirming and Removing Maintainers": [[10, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[10, "the-principles"]], "The Process for Nomination": [[10, "the-process-for-nomination"]], "The Process for Removal": [[10, "the-process-for-removal"]], "Nominating Core Maintainers": [[10, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[10, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[10, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[10, "decision-making"]], "Uncontroversial Changes": [[10, "uncontroversial-changes"]], "Controversial Decision Process": [[10, "controversial-decision-process"]], "General Project Policies": [[10, "general-project-policies"]], "FAQ": [[10, "faq"]], "Events": [[46, "module-torch.distributed.elastic.events"]], "API Methods": [[46, "api-methods"]], "Event Objects": [[46, "event-objects"]], "Do you support Distributed code?": [[14, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[14, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[14, "why-is-my-code-crashing"]], "TorchDynamo Errors": [[14, "torchdynamo-errors"]], "Why is compilation slow?": [[14, "why-is-compilation-slow"]], "Dynamo Compilation": [[14, "dynamo-compilation"]], "Inductor Compilation": [[14, "inductor-compilation"]], "Why are you recompiling in production?": [[14, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[14, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[14, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[14, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[14, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[14, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[14, "why-am-i-getting-ooms"]], "Guards Overview": [[17, "guards-overview"]], "Caching and Guards Overview": [[17, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[17, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[17, "instructiontranslator"]], "Making Guards": [[17, "making-guards"]], "Technical Overview": [[21, "technical-overview"]], "torch.cuda": [[28, "module-torch.cuda"]], "Random Number Generator": [[28, "random-number-generator"]], "Communication collectives": [[28, "communication-collectives"]], "Streams and events": [[28, "streams-and-events"]], "Graphs (beta)": [[28, "graphs-beta"]], "Memory management": [[28, "memory-management"], [1886, "memory-management"], [1880, "memory-management"]], "NVIDIA Tools Extension (NVTX)": [[28, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[28, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[28, "stream-sanitizer-prototype"]], "torch.utils.bottleneck": [[5, "module-torch.utils.bottleneck"]], "Elastic Agent": [[43, "module-torch.distributed.elastic.agent"]], "Server": [[43, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[43, "concepts"]], "Extending the Agent": [[43, "extending-the-agent"]], "Watchdog in the Agent": [[43, "watchdog-in-the-agent"]], "Troubleshooting and Gotchas": [[18, "troubleshooting-and-gotchas"]], "Learn more": [[18, "learn-more"]], "torch.backends": [[3, "module-torch.backends"]], "torch.backends.cpu": [[3, "module-torch.backends.cpu"]], "torch.backends.cuda": [[3, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[3, "module-torch.backends.cudnn"]], "torch.backends.mps": [[3, "module-torch.backends.mps"]], "torch.backends.mkl": [[3, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[3, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[3, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[3, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[3, "module-torch.backends.xeon"]], "torch._dynamo": [[0, "torch-dynamo"]], "torch.utils.data": [[32, "module-torch.utils.data"]], "Dataset Types": [[32, "dataset-types"]], "Map-style datasets": [[32, "map-style-datasets"]], "Iterable-style datasets": [[32, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[32, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[32, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[32, "automatic-batching-default"]], "Disable automatic batching": [[32, "disable-automatic-batching"]], "Working with collate_fn": [[32, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[32, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[32, "single-process-data-loading-default"]], "Multi-process data loading": [[32, "multi-process-data-loading"]], "Platform-specific behaviors": [[32, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[32, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[32, "memory-pinning"]], "torch.utils.dlpack": [[42, "torch-utils-dlpack"]], "TorchElastic Kubernetes": [[48, "torchelastic-kubernetes"]], "Getting Started": [[16, "getting-started"], [8, "getting-started"]], "Existing Backends": [[16, "existing-backends"]], "Why do you need another way of optimizing PyTorch code?": [[16, "why-do-you-need-another-way-of-optimizing-pytorch-code"]], "PyTorch Governance | Build + CI": [[7, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[7, "how-to-add-a-new-maintainer"]], "Custom Backends": [[12, "custom-backends"]], "Registering Custom Backends": [[12, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[12, "custom-backends-after-aotautograd"]], "Debugging Backend": [[12, "debugging-backend"]], "Speedy Backend": [[12, "speedy-backend"]], "Composable Backends": [[12, "composable-backends"]], "C++": [[27, "c"]], "TorchScript C++ API": [[27, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[27, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[27, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[27, "authoring-models-in-c"]], "Packaging for C++": [[27, "packaging-for-c"]], "Automatic Mixed Precision package - torch.amp": [[1, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[1, "autocasting"]], "Gradient Scaling": [[1, "gradient-scaling"]], "Autocast Op Reference": [[1, "autocast-op-reference"]], "Op Eligibility": [[1, "op-eligibility"]], "CUDA Op-Specific Behavior": [[1, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[1, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[1, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[1, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[1, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[1, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[1, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[1, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[1, "cpu-ops-that-promote-to-the-widest-input-type"]], "Distributed Optimizers": [[39, "distributed-optimizers"]], "PyTorch Contribution Guide": [[8, "pytorch-contribution-guide"]], "Contribution Process": [[8, "contribution-process"]], "Proposing New Features": [[8, "proposing-new-features"]], "Reporting Issues": [[8, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[8, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[8, "adding-tutorials"]], "Improving Documentation & Tutorials": [[8, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[8, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[8, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[8, "reviewing-open-pull-requests"]], "Improving Code Readability": [[8, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[8, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[8, "promoting-pytorch"]], "Triaging Issues": [[8, "triaging-issues"]], "About Open Source Development": [[8, "about-open-source-development"]], "Common Mistakes To Avoid": [[8, "common-mistakes-to-avoid"]], "On Documentation": [[8, "on-documentation"]], "Python Docs": [[8, "python-docs"]], "C++ Docs": [[8, "c-docs"]], "Tutorials": [[8, "tutorials"], [1900, "tutorials"], [1907, "tutorials"], [1899, "tutorials"]], "Tutorials Build Overview": [[8, "tutorials-build-overview"]], "Contributing a New Tutorial": [[8, "contributing-a-new-tutorial"]], "torch.utils.cpp_extension": [[26, "torch-utils-cpp-extension"]], "Complex Numbers": [[24, "complex-numbers"]], "Creating Complex Tensors": [[24, "creating-complex-tensors"]], "Transition from the old representation": [[24, "transition-from-the-old-representation"]], "Accessing real and imag": [[24, "accessing-real-and-imag"]], "Angle and abs": [[24, "angle-and-abs"]], "Linear Algebra": [[24, "linear-algebra"]], "Autograd": [[24, "autograd"]], "torch.utils.checkpoint": [[6, "torch-utils-checkpoint"]], "TorchDynamo Deeper Dive": [[13, "torchdynamo-deeper-dive"]], "What is a guard?": [[13, "what-is-a-guard"]], "What is Dynamo doing?": [[13, "what-is-dynamo-doing"]], "PyTorch 2.0 Performance Dashboard": [[20, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[20, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[20, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[20, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[20, "how-can-i-run-any-performance-test-locally"]], "torch.optim": [[1898, "module-torch.optim"]], "How to use an optimizer": [[1898, "how-to-use-an-optimizer"]], "Constructing it": [[1898, "constructing-it"]], "Per-parameter options": [[1898, "per-parameter-options"]], "Taking an optimization step": [[1898, "taking-an-optimization-step"]], "optimizer.step()": [[1898, "optimizer-step"]], "optimizer.step(closure)": [[1898, "optimizer-step-closure"]], "Base class": [[1898, "base-class"]], "Algorithms": [[1898, "algorithms"]], "How to adjust learning rate": [[1898, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1898, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1898, "constructing-averaged-models"]], "Custom averaging strategies": [[1898, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1898, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1898, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1898, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1898, "putting-it-all-together-ema"]], "HIP (ROCm) semantics": [[1886, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1886, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1886, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1886, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[1886, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1886, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1886, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1886, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1886, "enabling-kernel-asserts"]], "torch.onnx diagnostics": [[1896, "torch-onnx-diagnostics"]], "Diagnostic Rules": [[1896, "diagnostic-rules"]], "Distributed Autograd Design": [[1908, "distributed-autograd-design"]], "Background": [[1908, "background"], [1909, "background"]], "Autograd recording during the forward pass": [[1908, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1908, "distributed-autograd-context"]], "Distributed Backward Pass": [[1908, "distributed-backward-pass"]], "Computing dependencies": [[1908, "computing-dependencies"]], "FAST mode algorithm": [[1908, "fast-mode-algorithm"]], "SMART mode algorithm": [[1908, "smart-mode-algorithm"]], "Distributed Optimizer": [[1908, "distributed-optimizer"], [1907, "distributed-optimizer"]], "Simple end to end example": [[1908, "simple-end-to-end-example"]], "torch.mps": [[1868, "module-torch.mps"]], "MPS Profiler": [[1868, "mps-profiler"]], "torch.signal": [[1910, "module-torch.signal"]], "torch.signal.windows": [[1910, "module-torch.signal.windows"]], "Quantization": [[1902, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1902, "introduction-to-quantization"]], "Quantization API Summary": [[1902, "quantization-api-summary"]], "Eager Mode Quantization": [[1902, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1902, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1902, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1902, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1902, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype) FX Graph Mode Quantization": [[1902, "prototype-fx-graph-mode-quantization"]], "Quantization Stack": [[1902, "quantization-stack"]], "Quantized Model": [[1902, "quantized-model"]], "Quantized Tensor": [[1902, "quantized-tensor"]], "Quantize and Dequantize": [[1902, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1902, "quantized-operators-modules"]], "Quantized Engine": [[1902, "quantized-engine"]], "Quantization Flow": [[1902, "quantization-flow"]], "Observer and FakeQuantize": [[1902, "observer-and-fakequantize"]], "QConfig": [[1902, "qconfig"], [832, "qconfig"]], "General Quantization Flow": [[1902, "general-quantization-flow"]], "Quantization Support Matrix": [[1902, "quantization-support-matrix"]], "Quantization Mode Support": [[1902, "quantization-mode-support"]], "Quantization Flow Support": [[1902, "quantization-flow-support"]], "Backend/Hardware Support": [[1902, "backend-hardware-support"]], "Note for native CPU backends": [[1902, "note-for-native-cpu-backends"]], "Operator Support": [[1902, "operator-support"]], "Quantization API Reference": [[1902, "quantization-api-reference"], [1905, "quantization-api-reference"]], "Quantization Backend Configuration": [[1902, "quantization-backend-configuration"], [1904, "quantization-backend-configuration"]], "Quantization Accuracy Debugging": [[1902, "quantization-accuracy-debugging"], [1903, "quantization-accuracy-debugging"]], "Quantization Customizations": [[1902, "quantization-customizations"]], "Quantization Custom Module API": [[1902, "quantization-custom-module-api"]], "Best Practices": [[1902, "best-practices"]], "Common Errors": [[1902, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1902, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1902, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1902, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1902, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "torch._logging": [[1863, "torch-logging"]], "MPS backend": [[1889, "mps-backend"]], "torch.monitor": [[1867, "torch-monitor"]], "torch.ao.quantization": [[1905, "torch-ao-quantization"]], "Top level APIs": [[1905, "top-level-apis"]], "Preparing model for quantization": [[1905, "preparing-model-for-quantization"]], "Utility functions": [[1905, "utility-functions"]], "torch.ao.quantization.quantize_fx": [[1905, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1905, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1905, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1905, "torch-ao-quantization-fx-custom-config"]], "torch (quantization related functions)": [[1905, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1905, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1905, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1905, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1905, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1905, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1905, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1905, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1905, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1905, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1905, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1905, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1905, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1905, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1905, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1905, "quantized-dtypes-and-quantization-schemes"]], "torch.onnx": [[1895, "torch-onnx"]], "Example: AlexNet from PyTorch to ONNX": [[1895, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1895, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1895, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1895, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1895, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1895, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Limitations": [[1895, "limitations"]], "Differences in Operator Implementations": [[1895, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1895, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1895, "reads-gets"]], "Writes / Sets": [[1895, "writes-sets"]], "Adding support for operators": [[1895, "adding-support-for-operators"]], "ONNX exporter internals": [[1895, "onnx-exporter-internals"]], "ATen operators": [[1895, "aten-operators"]], "List of supported operators": [[1895, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1895, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1895, "torch-autograd-functions"]], "Static Symbolic Method": [[1895, "static-symbolic-method"]], "Inline Autograd Function": [[1895, "inline-autograd-function"]], "Custom operators": [[1895, "custom-operators"]], "ONNX-script functions": [[1895, "onnx-script-functions"]], "C++ Operators": [[1895, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1895, "discovering-all-unconvertible-aten-ops-at-once"]], "Contributing / developing": [[1895, "contributing-developing"]], "Classes": [[1895, "classes"]], "Preview: torch.onnx TorchDynamo Exporter": [[1895, "preview-torch-onnx-torchdynamo-exporter"]], "Numerical accuracy": [[1891, "numerical-accuracy"]], "Batched computations or slice computations": [[1891, "batched-computations-or-slice-computations"]], "Extremal values": [[1891, "extremal-values"]], "Linear algebra (torch.linalg)": [[1891, "linear-algebra-torch-linalg"]], "Non-finite values": [[1891, "non-finite-values"]], "Extremal values in linalg": [[1891, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1891, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1891, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1891, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "Features for large-scale deployments": [[1887, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1887, "fleet-wide-operator-profiling"]], "API usage logging": [[1887, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1887, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1887, "build-environment-considerations"]], "Common extension points": [[1887, "common-extension-points"]], "Windows FAQ": [[1894, "windows-faq"]], "Building from source": [[1894, "building-from-source"]], "Include optional components": [[1894, "include-optional-components"]], "Speeding CUDA build for Windows": [[1894, "speeding-cuda-build-for-windows"]], "One key install script": [[1894, "one-key-install-script"]], "Extension": [[1894, "extension"]], "CFFI Extension": [[1894, "cffi-extension"]], "Cpp Extension": [[1894, "cpp-extension"]], "Installation": [[1894, "installation"]], "Package not found in win-32 channel.": [[1894, "package-not-found-in-win-32-channel"]], "Import error": [[1894, "import-error"]], "Usage (multiprocessing)": [[1894, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1894, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1894, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1894, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1894, "cuda-ipc-operations"]], "Distributed Data Parallel": [[1881, "distributed-data-parallel"]], "Example": [[1881, "example"], [1882, "example"]], "Internal Design": [[1881, "internal-design"]], "Implementation": [[1881, "implementation"], [1909, "implementation"]], "ProcessGroup": [[1881, "processgroup"]], "TorchDynamo DDPOptimizer": [[1881, "id1"]], "CUDA semantics": [[1880, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1880, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1880, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1880, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1880, "asynchronous-execution"]], "CUDA streams": [[1880, "cuda-streams"]], "Stream semantics of backward passes": [[1880, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1880, "bc-note-using-grads-on-the-default-stream"]], "Environment variables": [[1880, "environment-variables"]], "Using custom memory allocators for CUDA": [[1880, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1880, "cublas-workspaces"]], "cuFFT plan cache": [[1880, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1880, "just-in-time-compilation"]], "Best practices": [[1880, "best-practices"]], "Device-agnostic code": [[1880, "device-agnostic-code"]], "Use pinned memory buffers": [[1880, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1880, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1880, "cuda-graphs"]], "Why CUDA Graphs?": [[1880, "why-cuda-graphs"]], "PyTorch API": [[1880, "pytorch-api"]], "Non-constraints": [[1880, "non-constraints"]], "Whole-network capture": [[1880, "whole-network-capture"]], "Partial-network capture": [[1880, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1880, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1880, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1880, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1880, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1880, "id5"]], "Graph memory management": [[1880, "graph-memory-management"]], "Sharing memory across captures": [[1880, "sharing-memory-across-captures"]], "Named Tensors": [[1871, "named-tensors"]], "Creating named tensors": [[1871, "creating-named-tensors"]], "Named dimensions": [[1871, "named-dimensions"]], "Name propagation semantics": [[1871, "name-propagation-semantics"]], "match semantics": [[1871, "match-semantics"]], "Basic name inference rules": [[1871, "basic-name-inference-rules"]], "Explicit alignment by names": [[1871, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1871, "manipulating-dimensions"]], "Autograd support": [[1871, "autograd-support"]], "Currently supported operations and subsystems": [[1871, "currently-supported-operations-and-subsystems"]], "Operators": [[1871, "operators"]], "Subsystems": [[1871, "subsystems"]], "Named tensor API reference": [[1871, "named-tensor-api-reference"]], "torch.linalg": [[1862, "torch-linalg"]], "Matrix Properties": [[1862, "matrix-properties"]], "Decompositions": [[1862, "decompositions"]], "Solvers": [[1862, "solvers"]], "Inverses": [[1862, "inverses"]], "Matrix Functions": [[1862, "matrix-functions"]], "Matrix Products": [[1862, "matrix-products"]], "Tensor Operations": [[1862, "tensor-operations"]], "Misc": [[1862, "misc"]], "Experimental Functions": [[1862, "experimental-functions"]], "torch.utils.mobile_optimizer": [[1865, "torch-utils-mobile-optimizer"]], "CUDA Automatic Mixed Precision examples": [[1876, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1876, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1876, "working-with-unscaled-gradients"]], "Gradient clipping": [[1876, "gradient-clipping"]], "Working with Scaled Gradients": [[1876, "working-with-scaled-gradients"]], "Gradient accumulation": [[1876, "gradient-accumulation"]], "Gradient penalty": [[1876, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1876, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1876, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1876, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1876, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1876, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1876, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1876, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1876, "functions-that-need-a-particular-dtype"]], "torch.nn.init": [[1875, "torch-nn-init"]], "Gradcheck mechanics": [[1885, "gradcheck-mechanics"]], "Notations and background information": [[1885, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1885, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1885, "real-to-real-functions"]], "Default real input numerical evaluation": [[1885, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1885, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1885, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1885, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1885, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1885, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1885, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1885, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1885, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1885, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1885, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1885, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1885, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1885, "gradgradcheck-implementation"]], "torch.nested": [[1872, "module-torch.nested"]], "size": [[1872, "size"]], "unbind": [[1872, "unbind"]], "Nested tensor constructor and conversion functions": [[1872, "nested-tensor-constructor-and-conversion-functions"]], "Broadcasting semantics": [[1878, "broadcasting-semantics"]], "General semantics": [[1878, "general-semantics"]], "In-place semantics": [[1878, "in-place-semantics"]], "Backwards compatibility": [[1878, "backwards-compatibility"]], "Remote Reference Protocol": [[1909, "remote-reference-protocol"]], "Assumptions": [[1909, "assumptions"]], "RRef Lifetime": [[1909, "rref-lifetime"]], "Design Reasoning": [[1909, "design-reasoning"]], "Protocol Scenarios": [[1909, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1909, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1909, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1909, "owner-share-rref-with-user"]], "User Share RRef with User": [[1909, "user-share-rref-with-user"]], "torch.utils.model_zoo": [[1866, "torch-utils-model-zoo"]], "torch.random": [[1906, "module-torch.random"]], "torch.nn": [[1873, "module-torch.nn"], [1873, "id1"]], "Containers": [[1873, "containers"]], "Convolution Layers": [[1873, "convolution-layers"]], "Pooling layers": [[1873, "pooling-layers"]], "Padding Layers": [[1873, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1873, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1873, "non-linear-activations-other"]], "Normalization Layers": [[1873, "normalization-layers"]], "Recurrent Layers": [[1873, "recurrent-layers"]], "Transformer Layers": [[1873, "transformer-layers"]], "Linear Layers": [[1873, "linear-layers"]], "Dropout Layers": [[1873, "dropout-layers"]], "Sparse Layers": [[1873, "sparse-layers"]], "Distance Functions": [[1873, "distance-functions"]], "Loss Functions": [[1873, "loss-functions"]], "Vision Layers": [[1873, "vision-layers"]], "Shuffle Layers": [[1873, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1873, "module-torch.nn.parallel"]], "Quantized Functions": [[1873, "quantized-functions"]], "Lazy Modules Initialization": [[1873, "lazy-modules-initialization"]], "Extending torch.func with autograd.Function": [[1883, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1883, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1883, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1883, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1883, "limitations-and-gotchas"]], "torch.vmap() Support": [[1883, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1883, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1883, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1883, "torch-func-jvp-support"]], "A Simple Custom Module": [[1888, "a-simple-custom-module"]], "Modules as Building Blocks": [[1888, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1888, "neural-network-training-with-modules"]], "Module State": [[1888, "module-state"]], "Module Initialization": [[1888, "module-initialization"]], "Module Hooks": [[1888, "module-hooks"]], "Advanced Features": [[1888, "advanced-features"]], "Distributed Training": [[1888, "distributed-training"]], "Profiling Performance": [[1888, "profiling-performance"]], "Improving Performance with Quantization": [[1888, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1888, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1888, "parametrizations"]], "Transforming Modules with FX": [[1888, "transforming-modules-with-fx"]], "Extending PyTorch": [[1882, "extending-pytorch"]], "Extending torch.autograd": [[1882, "extending-torch-autograd"]], "When to use": [[1882, "when-to-use"]], "When not to use": [[1882, "when-not-to-use"]], "How to use": [[1882, "how-to-use"]], "Combined or separate forward() and setup_context()": [[1882, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1882, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1882, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1882, "extending-torch-nn"]], "Adding a Module": [[1882, "adding-a-module"]], "Extending torch": [[1882, "extending-torch"]], "Extending torch with a Tensor-like type": [[1882, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1882, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1882, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1882, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1882, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Writing custom C++ extensions": [[1882, "writing-custom-c-extensions"]], "Writing custom C extensions": [[1882, "id2"]], "Named Tensors operator coverage": [[1870, "named-tensors-operator-coverage"]], "Supported Operations": [[1870, "id1"]], "Keeps input names": [[1870, "keeps-input-names"]], "Removes dimensions": [[1870, "removes-dimensions"]], "Unifies names from inputs": [[1870, "unifies-names-from-inputs"]], "Permutes dimensions": [[1870, "permutes-dimensions"]], "Contracts away dims": [[1870, "contracts-away-dims"]], "Factory functions": [[1870, "factory-functions"]], "out function and in-place variants": [[1870, "out-function-and-in-place-variants"]], "torch.masked": [[1864, "torch-masked"]], "Motivation": [[1864, "motivation"]], "What is a MaskedTensor?": [[1864, "what-is-a-maskedtensor"]], "Supported Operators": [[1864, "supported-operators"]], "Unary Operators": [[1864, "unary-operators"]], "Binary Operators": [[1864, "binary-operators"]], "Reductions": [[1864, "reductions"]], "View and select functions": [[1864, "view-and-select-functions"]], "Default values for native configurations": [[1904, "default-values-for-native-configurations"]], "Autograd mechanics": [[1877, "autograd-mechanics"]], "How autograd encodes the history": [[1877, "how-autograd-encodes-the-history"]], "Saved tensors": [[1877, "saved-tensors"]], "Gradients for non-differentiable functions": [[1877, "gradients-for-non-differentiable-functions"]], "Setting requires_grad": [[1877, "setting-requires-grad"]], "Grad Modes": [[1877, "grad-modes"]], "Default Mode (Grad Mode)": [[1877, "default-mode-grad-mode"]], "No-grad Mode": [[1877, "no-grad-mode"]], "Inference Mode": [[1877, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1877, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1877, "in-place-operations-with-autograd"]], "Multithreaded Autograd": [[1877, "multithreaded-autograd"]], "Concurrency on CPU": [[1877, "concurrency-on-cpu"]], "Non-determinism": [[1877, "non-determinism"]], "Graph retaining": [[1877, "graph-retaining"]], "Thread Safety on Autograd Node": [[1877, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1877, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1877, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1877, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1877, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1877, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1877, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1877, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1877, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1877, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1877, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1877, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1877, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1877, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1877, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1877, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1877, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "torch.profiler": [[1901, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1901, "intel-instrumentation-and-tracing-technology-apis"]], "Pipeline Parallelism": [[1900, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1900, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1900, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1900, "pipe-apis-in-pytorch"]], "Skip connections": [[1900, "skip-connections"]], "Reproducibility": [[1892, "reproducibility"]], "Controlling sources of randomness": [[1892, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1892, "pytorch-random-number-generator"]], "Python": [[1892, "python"]], "Random number generators in other libraries": [[1892, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1892, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1892, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1892, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1892, "cuda-rnn-and-lstm"]], "DataLoader": [[1892, "dataloader"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1884, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1884, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1884, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1884, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1884, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "Distributed RPC Framework": [[1907, "distributed-rpc-framework"]], "RPC": [[1907, "rpc"]], "TensorPipe Backend": [[1907, "tensorpipe-backend"]], "RRef": [[1907, "rref"]], "More Information about RRef": [[1907, null]], "RemoteModule": [[1907, "remotemodule"]], "Distributed Autograd Framework": [[1907, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1907, null]], "CPU threading and TorchScript inference": [[1879, "cpu-threading-and-torchscript-inference"]], "Build options": [[1879, "build-options"]], "Runtime API": [[1879, "runtime-api"]], "Tuning the number of threads": [[1879, "tuning-the-number-of-threads"]], "torch.package": [[1899, "torch-package"]], "Packaging your first model": [[1899, "packaging-your-first-model"]], "How do I\u2026": [[1899, "how-do-i"]], "See what is inside a package?": [[1899, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1899, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1899, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1899, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1899, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1899, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1899, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1899, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1899, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1899, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1899, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1899, "package-a-torchscript-module"]], "Explanation": [[1899, "explanation"]], "torch.package Format Overview": [[1899, "torch-package-format-overview"]], "Framework files": [[1899, "framework-files"]], "User files": [[1899, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1899, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1899, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1899, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1899, "dependency-management"]], "intern": [[1899, "intern"]], "extern": [[1899, "extern"]], "mock": [[1899, "mock"]], "Refactoring": [[1899, "refactoring"]], "Patterns": [[1899, "patterns"]], "torch.package sharp edges": [[1899, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1899, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1899, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1899, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1899, "mangling"]], "torch.nn.functional": [[1874, "torch-nn-functional"]], "Convolution functions": [[1874, "convolution-functions"]], "Pooling functions": [[1874, "pooling-functions"]], "Attention Mechanisms": [[1874, "attention-mechanisms"]], "Non-linear activation functions": [[1874, "non-linear-activation-functions"]], "Linear functions": [[1874, "linear-functions"]], "Dropout functions": [[1874, "dropout-functions"]], "Sparse functions": [[1874, "sparse-functions"]], "Distance functions": [[1874, "distance-functions"]], "Loss functions": [[1874, "loss-functions"]], "Vision functions": [[1874, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1874, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1874, "data-parallel"]], "Data insensitive error": [[1903, "data-insensitive-error"]], "General tips": [[1903, "general-tips"]], "Int8 quantization tips": [[1903, "int8-quantization-tips"]], "Data sensitive error": [[1903, "data-sensitive-error"]], "Implementation error": [[1903, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1903, "numerical-debugging-tooling-prototype"]], "Multiprocessing best practices": [[1890, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1890, "cuda-in-multiprocessing"]], "Best practices and tips": [[1890, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1890, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1890, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1890, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1890, "hogwild"]], "Multiprocessing package - torch.multiprocessing": [[1869, "module-torch.multiprocessing"]], "Strategy management": [[1869, "strategy-management"]], "Sharing CUDA tensors": [[1869, "sharing-cuda-tensors"]], "Sharing strategies": [[1869, "sharing-strategies"]], "File descriptor - file_descriptor": [[1869, "file-descriptor-file-descriptor"]], "File system - file_system": [[1869, "file-system-file-system"]], "Spawning subprocesses": [[1869, "spawning-subprocesses"]], "Serialization semantics": [[1893, "serialization-semantics"]], "Table of Contents": [[1893, "table-of-contents"]], "Saving and loading tensors": [[1893, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1893, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1893, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1893, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1893, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1893, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1893, "torch-full-always-inferring-a-float-dtype"]], "ONNX supported TorchScript operators": [[1897, "onnx-supported-torchscript-operators"]], "Supported operators": [[1897, "supported-operators"]], "ONNX support for TorchScript operators": [[1897, "id1"]], "Unsupported operators": [[1897, "unsupported-operators"], [1897, "id2"]], "torch.autograd.functional.jacobian": [[894, "torch-autograd-functional-jacobian"]], "torch.broadcast_to": [[927, "torch-broadcast-to"]], "torch.bitwise_xor": [[921, "torch-bitwise-xor"]], "torch.bitwise_right_shift": [[920, "torch-bitwise-right-shift"]], "torch.autograd.forward_ad.make_dual": [[886, "torch-autograd-forward-ad-make-dual"]], "torch.autograd.gradgradcheck": [[900, "torch-autograd-gradgradcheck"]], "torch.cartesian_prod": [[930, "torch-cartesian-prod"]], "torch.autograd.functional.hvp": [[893, "torch-autograd-functional-hvp"]], "torch.bartlett_window": [[913, "torch-bartlett-window"]], "torch.baddbmm": [[912, "torch-baddbmm"]], "torch.blackman_window": [[922, "torch-blackman-window"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[909, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.autograd.Function.jvp": [[882, "torch-autograd-function-jvp"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[889, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.autograd.functional.hessian": [[892, "torch-autograd-functional-hessian"]], "torch.broadcast_shapes": [[925, "torch-broadcast-shapes"]], "torch.autograd.graph.Node.metadata": [[901, "torch-autograd-graph-node-metadata"]], "torch.autograd.profiler.profile.export_chrome_trace": [[907, "torch-autograd-profiler-profile-export-chrome-trace"]], "set_multithreading_enabled": [[911, "set-multithreading-enabled"]], "torch.can_cast": [[929, "torch-can-cast"]], "torch.autograd.functional.vhp": [[896, "torch-autograd-functional-vhp"]], "torch.autograd.backward": [[884, "torch-autograd-backward"]], "torch.autograd.graph.Node.name": [[902, "torch-autograd-graph-node-name"]], "torch.bernoulli": [[914, "torch-bernoulli"]], "torch.block_diag": [[923, "torch-block-diag"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[891, "torch-autograd-function-functionctx-set-materialize-grads"]], "dual_level": [[885, "dual-level"]], "torch.autograd.profiler.profile.key_averages": [[908, "torch-autograd-profiler-profile-key-averages"]], "torch.autograd.graph.Node.register_hook": [[904, "torch-autograd-graph-node-register-hook"]], "torch.bitwise_not": [[918, "torch-bitwise-not"]], "torch.bucketize": [[928, "torch-bucketize"]], "torch.autograd.gradcheck": [[899, "torch-autograd-gradcheck"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[890, "torch-autograd-function-functionctx-save-for-backward"]], "torch.autograd.graph.Node.register_prehook": [[905, "torch-autograd-graph-node-register-prehook"]], "torch.autograd.Function.vmap": [[883, "torch-autograd-function-vmap"]], "torch.bitwise_left_shift": [[917, "torch-bitwise-left-shift"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[888, "torch-autograd-function-functionctx-mark-dirty"]], "torch.broadcast_tensors": [[926, "torch-broadcast-tensors"]], "torch.autograd.graph.Node.next_functions": [[903, "torch-autograd-graph-node-next-functions"]], "torch.autograd.forward_ad.unpack_dual": [[887, "torch-autograd-forward-ad-unpack-dual"]], "torch.autograd.functional.vjp": [[897, "torch-autograd-functional-vjp"]], "torch.autograd.profiler.load_nvprof": [[906, "torch-autograd-profiler-load-nvprof"]], "torch.autograd.functional.jvp": [[895, "torch-autograd-functional-jvp"]], "torch.autograd.profiler.profile.total_average": [[910, "torch-autograd-profiler-profile-total-average"]], "torch.bitwise_or": [[919, "torch-bitwise-or"]], "torch.bmm": [[924, "torch-bmm"]], "torch.bitwise_and": [[916, "torch-bitwise-and"]], "torch.autograd.grad": [[898, "torch-autograd-grad"]], "torch.bincount": [[915, "torch-bincount"]], "default_activation_only_qconfig": [[833, "default-activation-only-qconfig"]], "torch.argmax": [[865, "torch-argmax"]], "torch.atleast_1d": [[877, "torch-atleast-1d"]], "convert_fx": [[850, "convert-fx"]], "default_dynamic_qconfig": [[835, "default-dynamic-qconfig"]], "torch.argmin": [[866, "torch-argmin"]], "torch.atleast_2d": [[878, "torch-atleast-2d"]], "default_qat_qconfig": [[837, "default-qat-qconfig"]], "torch.as_tensor": [[870, "torch-as-tensor"]], "prepare_fx": [[852, "prepare-fx"]], "torch.arcsinh": [[860, "torch-arcsinh"]], "float_qparams_weight_only_qconfig": [[843, "float-qparams-weight-only-qconfig"]], "torch.arange": [[856, "torch-arange"]], "torch.arccosh": [[858, "torch-arccosh"]], "torch.atan2": [[875, "torch-atan2"]], "default_per_channel_qconfig": [[836, "default-per-channel-qconfig"]], "torch.asinh": [[873, "torch-asinh"]], "torch.atleast_3d": [[879, "torch-atleast-3d"]], "get_default_qat_qconfig_mapping": [[846, "get-default-qat-qconfig-mapping"]], "torch.arctanh": [[863, "torch-arctanh"]], "torch.autograd.Function.forward": [[881, "torch-autograd-function-forward"]], "default_weight_only_qconfig": [[840, "default-weight-only-qconfig"]], "torch.argsort": [[867, "torch-argsort"]], "quantize_qat": [[854, "quantize-qat"]], "default_qat_qconfig_v2": [[838, "default-qat-qconfig-v2"]], "torch.arctan2": [[862, "torch-arctan2"]], "torch.autograd.Function.backward": [[880, "torch-autograd-function-backward"]], "per_channel_dynamic_qconfig": [[844, "per-channel-dynamic-qconfig"]], "torch.arctan": [[861, "torch-arctan"]], "torch.atan": [[874, "torch-atan"]], "default_debug_qconfig": [[834, "default-debug-qconfig"]], "torch.asarray": [[871, "torch-asarray"]], "prepare_qat_fx": [[853, "prepare-qat-fx"]], "get_default_qconfig_mapping": [[847, "get-default-qconfig-mapping"]], "torch.arcsin": [[859, "torch-arcsin"]], "float16_dynamic_qconfig": [[841, "float16-dynamic-qconfig"]], "torch.asin": [[872, "torch-asin"]], "QConfigMapping": [[845, "qconfigmapping"]], "fuse_fx": [[851, "fuse-fx"]], "torch.atanh": [[876, "torch-atanh"]], "torch.argwhere": [[868, "torch-argwhere"]], "default_qconfig": [[839, "default-qconfig"]], "torch.arccos": [[857, "torch-arccos"]], "torch.as_strided": [[869, "torch-as-strided"]], "float16_static_qconfig": [[842, "float16-static-qconfig"]], "swap_module": [[855, "swap-module"]], "quantize_dynamic": [[849, "quantize-dynamic"]], "torch.are_deterministic_algorithms_enabled": [[864, "torch-are-deterministic-algorithms-enabled"]], "quantize": [[848, "quantize"]], "FakeQuantize": [[790, "fakequantize"]], "HistogramObserver": [[810, "histogramobserver"]], "RecordingObserver": [[818, "recordingobserver"]], "default_weight_fake_quant": [[800, "default-weight-fake-quant"]], "default_debug_observer": [[819, "default-debug-observer"]], "ObserverBase": [[815, "observerbase"]], "StandaloneModuleConfigEntry": [[809, "standalonemoduleconfigentry"]], "propagate_qconfig": [[831, "propagate-qconfig"]], "load_observer_state_dict": [[828, "load-observer-state-dict"]], "enable_fake_quant": [[803, "enable-fake-quant"]], "MovingAveragePerChannelMinMaxObserver": [[813, "movingaverageperchannelminmaxobserver"]], "default_fused_act_fake_quant": [[795, "default-fused-act-fake-quant"]], "MinMaxObserver": [[811, "minmaxobserver"]], "get_observer_state_dict": [[827, "get-observer-state-dict"]], "disable_observer": [[802, "disable-observer"]], "convert": [[788, "convert"]], "BackendPatternConfig": [[784, "backendpatternconfig"]], "default_eval_fn": [[789, "default-eval-fn"]], "default_histogram_fake_quant": [[798, "default-histogram-fake-quant"]], "default_fused_per_channel_wt_fake_quant": [[796, "default-fused-per-channel-wt-fake-quant"]], "default_placeholder_observer": [[825, "default-placeholder-observer"]], "MovingAverageMinMaxObserver": [[812, "movingaverageminmaxobserver"]], "prepare": [[829, "prepare"]], "FuseCustomConfig": [[807, "fusecustomconfig"]], "default_histogram_observer": [[822, "default-histogram-observer"]], "FusedMovingAvgObsFakeQuantize": [[793, "fusedmovingavgobsfakequantize"]], "default_fused_wt_fake_quant": [[797, "default-fused-wt-fake-quant"]], "FakeQuantizeBase": [[791, "fakequantizebase"]], "NoopObserver": [[814, "noopobserver"]], "DTypeConfig": [[785, "dtypeconfig"]], "PrepareCustomConfig": [[808, "preparecustomconfig"]], "PerChannelMinMaxObserver": [[816, "perchannelminmaxobserver"]], "default_fake_quant": [[794, "default-fake-quant"]], "disable_fake_quant": [[801, "disable-fake-quant"]], "ConvertCustomConfig": [[806, "convertcustomconfig"]], "default_dynamic_quant_observer": [[820, "default-dynamic-quant-observer"]], "default_per_channel_weight_observer": [[824, "default-per-channel-weight-observer"]], "DTypeWithConstraints": [[786, "dtypewithconstraints"]], "enable_observer": [[804, "enable-observer"]], "fuse_modules": [[805, "fuse-modules"]], "default_per_channel_weight_fake_quant": [[799, "default-per-channel-weight-fake-quant"]], "default_observer": [[823, "default-observer"]], "prepare_qat": [[830, "prepare-qat"]], "ObservationType": [[787, "observationtype"]], "FixedQParamsFakeQuantize": [[792, "fixedqparamsfakequantize"]], "PlaceholderObserver": [[817, "placeholderobserver"]], "default_weight_observer": [[826, "default-weight-observer"]], "default_float_qparams_observer": [[821, "default-float-qparams-observer"]], "FloatFunctional": [[739, "floatfunctional"]], "max_pool1d": [[773, "max-pool1d"]], "adaptive_avg_pool2d": [[757, "adaptive-avg-pool2d"]], "QuantStub": [[780, "quantstub"]], "QFunctional": [[748, "qfunctional"]], "linear": [[772, "linear"]], "FXFloatFunctional": [[738, "fxfloatfunctional"]], "upsample_bilinear": [[777, "upsample-bilinear"]], "hardswish": [[768, "hardswish"]], "hardsigmoid": [[767, "hardsigmoid"]], "QuantWrapper": [[781, "quantwrapper"]], "clamp": [[762, "clamp"]], "hardtanh": [[769, "hardtanh"]], "conv2d": [[764, "conv2d"]], "upsample": [[776, "upsample"]], "DeQuantStub": [[779, "dequantstub"]], "conv3d": [[765, "conv3d"]], "avg_pool2d": [[759, "avg-pool2d"]], "threshold": [[775, "threshold"]], "BackendConfig": [[783, "backendconfig"]], "leaky_relu": [[771, "leaky-relu"]], "max_pool2d": [[774, "max-pool2d"]], "avg_pool3d": [[760, "avg-pool3d"]], "elu": [[766, "elu"]], "interpolate": [[770, "interpolate"]], "adaptive_avg_pool3d": [[758, "adaptive-avg-pool3d"]], "conv1d": [[763, "conv1d"]], "add_quant_dequant": [[782, "add-quant-dequant"]], "upsample_nearest": [[778, "upsample-nearest"]], "celu": [[761, "celu"]], "BNReLU3d": [[692, "bnrelu3d"], [715, "bnrelu3d"]], "LinearReLU": [[711, "linearrelu"], [719, "linearrelu"], [720, "linearrelu"], [702, "linearrelu"]], "ConvBn2d": [[704, "convbn2d"], [694, "convbn2d"]], "ConvReLU3d": [[718, "convrelu3d"], [710, "convrelu3d"], [701, "convrelu3d"]], "torch.amin": [[687, "torch-amin"]], "torch.amax": [[686, "torch-amax"]], "ConvBnReLU1d": [[696, "convbnrelu1d"], [706, "convbnrelu1d"]], "ConvBn1d": [[703, "convbn1d"], [693, "convbn1d"]], "BNReLU2d": [[691, "bnrelu2d"], [714, "bnrelu2d"]], "ConvBn3d": [[695, "convbn3d"], [705, "convbn3d"]], "ConvReLU2d": [[717, "convrelu2d"], [700, "convrelu2d"], [709, "convrelu2d"]], "torch.aminmax": [[688, "torch-aminmax"]], "torch.angle": [[689, "torch-angle"]], "ConvBnReLU2d": [[697, "convbnrelu2d"], [707, "convbnrelu2d"]], "update_bn_stats": [[713, "update-bn-stats"]], "ConvReLU1d": [[716, "convrelu1d"], [699, "convrelu1d"]], "torch.any": [[690, "torch-any"]], "ConvBnReLU3d": [[698, "convbnrelu3d"], [708, "convbnrelu3d"]], "freeze_bn_stats": [[712, "freeze-bn-stats"]], "torch.allclose": [[685, "torch-allclose"]], "torch._foreach_log2": [[649, "torch-foreach-log2"]], "torch._foreach_log10_": [[646, "torch-foreach-log10"]], "torch._foreach_sqrt": [[664, "torch-foreach-sqrt"]], "torch._foreach_trunc": [[668, "torch-foreach-trunc"]], "torch.add": [[676, "torch-add"]], "torch._logging.set_logs": [[671, "torch-logging-set-logs"]], "torch.addcdiv": [[678, "torch-addcdiv"]], "torch._foreach_log2_": [[650, "torch-foreach-log2"]], "torch._foreach_frac_": [[641, "torch-foreach-frac"]], "torch._foreach_sigmoid_": [[659, "torch-foreach-sigmoid"]], "torch._foreach_log_": [[651, "torch-foreach-log"]], "torch._foreach_sqrt_": [[665, "torch-foreach-sqrt"]], "torch._foreach_expm1_": [[637, "torch-foreach-expm1"]], "torch.adjoint": [[683, "torch-adjoint"]], "torch.abs": [[672, "torch-abs"]], "torch._foreach_log": [[644, "torch-foreach-log"]], "torch.addmm": [[680, "torch-addmm"]], "torch._foreach_neg": [[652, "torch-foreach-neg"]], "torch._foreach_sinh": [[662, "torch-foreach-sinh"]], "torch._foreach_lgamma_": [[643, "torch-foreach-lgamma"]], "torch._foreach_log1p_": [[648, "torch-foreach-log1p"]], "torch.all": [[684, "torch-all"]], "torch._foreach_neg_": [[653, "torch-foreach-neg"]], "torch._foreach_sigmoid": [[658, "torch-foreach-sigmoid"]], "torch.absolute": [[673, "torch-absolute"]], "torch._foreach_tan_": [[667, "torch-foreach-tan"]], "torch._foreach_zero_": [[670, "torch-foreach-zero"]], "torch.addr": [[682, "torch-addr"]], "torch._foreach_round": [[656, "torch-foreach-round"]], "torch._foreach_floor_": [[639, "torch-foreach-floor"]], "torch._foreach_lgamma": [[642, "torch-foreach-lgamma"]], "torch._foreach_log1p": [[647, "torch-foreach-log1p"]], "torch._foreach_trunc_": [[669, "torch-foreach-trunc"]], "torch.acosh": [[675, "torch-acosh"]], "torch._foreach_reciprocal": [[654, "torch-foreach-reciprocal"]], "torch.acos": [[674, "torch-acos"]], "torch._foreach_floor": [[638, "torch-foreach-floor"]], "torch._foreach_round_": [[657, "torch-foreach-round"]], "torch._foreach_log10": [[645, "torch-foreach-log10"]], "torch._foreach_sin_": [[661, "torch-foreach-sin"]], "torch.addmv": [[681, "torch-addmv"]], "torch._foreach_frac": [[640, "torch-foreach-frac"]], "torch._foreach_tan": [[666, "torch-foreach-tan"]], "torch.addcmul": [[679, "torch-addcmul"]], "torch.addbmm": [[677, "torch-addbmm"]], "torch._foreach_reciprocal_": [[655, "torch-foreach-reciprocal"]], "torch._foreach_sin": [[660, "torch-foreach-sin"]], "torch._foreach_sinh_": [[663, "torch-foreach-sinh"]], "torch.Tensor.true_divide_": [[591, "torch-tensor-true-divide"]], "torch.Tensor.unique_consecutive": [[601, "torch-tensor-unique-consecutive"]], "torch.Tensor.xlogy": [[612, "torch-tensor-xlogy"]], "torch._foreach_ceil_": [[625, "torch-foreach-ceil"]], "torch._foreach_exp": [[634, "torch-foreach-exp"]], "torch._foreach_acos_": [[619, "torch-foreach-acos"]], "torch.Tensor.unique": [[600, "torch-tensor-unique"]], "torch.Tensor.var": [[606, "torch-tensor-var"]], "torch.Tensor.unflatten": [[597, "torch-tensor-unflatten"]], "torch._foreach_cos": [[626, "torch-foreach-cos"]], "torch.Tensor.where": [[611, "torch-tensor-where"]], "torch.Tensor.view_as": [[609, "torch-tensor-view-as"]], "torch._foreach_erf": [[630, "torch-foreach-erf"]], "torch._foreach_erf_": [[631, "torch-foreach-erf"]], "torch.Tensor.triu_": [[589, "torch-tensor-triu"]], "torch._foreach_asin_": [[621, "torch-foreach-asin"]], "torch.Tensor.unsqueeze_": [[603, "torch-tensor-unsqueeze"]], "torch._foreach_cosh_": [[629, "torch-foreach-cosh"]], "torch._foreach_erfc_": [[633, "torch-foreach-erfc"]], "torch._foreach_abs": [[616, "torch-foreach-abs"]], "torch.Tensor.vsplit": [[610, "torch-tensor-vsplit"]], "torch._foreach_atan": [[622, "torch-foreach-atan"]], "torch._foreach_erfc": [[632, "torch-foreach-erfc"]], "torch.Tensor.triu": [[588, "torch-tensor-triu"]], "torch.Tensor.vdot": [[607, "torch-tensor-vdot"]], "torch._foreach_ceil": [[624, "torch-foreach-ceil"]], "torch.Tensor.zero_": [[614, "torch-tensor-zero"]], "torch.Tensor.unsqueeze": [[602, "torch-tensor-unsqueeze"]], "torch.Tensor.xlogy_": [[613, "torch-tensor-xlogy"]], "torch._foreach_atan_": [[623, "torch-foreach-atan"]], "torch.Tensor.true_divide": [[590, "torch-tensor-true-divide"]], "torch.Tensor.trunc_": [[593, "torch-tensor-trunc"]], "torch.Tensor.type": [[594, "torch-tensor-type"]], "torch._assert": [[615, "torch-assert"]], "torch._foreach_abs_": [[617, "torch-foreach-abs"]], "torch.Tensor.type_as": [[595, "torch-tensor-type-as"]], "torch.Tensor.view": [[608, "torch-tensor-view"]], "torch.Tensor.untyped_storage": [[604, "torch-tensor-untyped-storage"]], "torch._foreach_asin": [[620, "torch-foreach-asin"]], "torch._foreach_expm1": [[636, "torch-foreach-expm1"]], "torch._foreach_acos": [[618, "torch-foreach-acos"]], "torch.Tensor.uniform_": [[599, "torch-tensor-uniform"]], "torch.Tensor.trunc": [[592, "torch-tensor-trunc"]], "torch.Tensor.unbind": [[596, "torch-tensor-unbind"]], "torch._foreach_cosh": [[628, "torch-foreach-cosh"]], "torch._foreach_exp_": [[635, "torch-foreach-exp"]], "torch.Tensor.values": [[605, "torch-tensor-values"]], "torch._foreach_cos_": [[627, "torch-foreach-cos"]], "torch.Tensor.unfold": [[598, "torch-tensor-unfold"]], "torch.Tensor.tan_": [[566, "torch-tensor-tan"]], "torch.Tensor.sqrt": [[539, "torch-tensor-sqrt"]], "torch.Tensor.t": [[561, "torch-tensor-t"]], "torch.Tensor.to_sparse_bsc": [[575, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.take": [[563, "torch-tensor-take"]], "torch.Tensor.std": [[546, "torch-tensor-std"]], "torch.Tensor.tile": [[570, "torch-tensor-tile"]], "torch.Tensor.svd": [[558, "torch-tensor-svd"]], "torch.Tensor.squeeze_": [[544, "torch-tensor-squeeze"]], "torch.Tensor.swapdims": [[560, "torch-tensor-swapdims"]], "torch.Tensor.to_sparse": [[574, "torch-tensor-to-sparse"]], "torch.Tensor.subtract": [[554, "torch-tensor-subtract"]], "torch.Tensor.to_sparse_csc": [[578, "torch-tensor-to-sparse-csc"]], "torch.Tensor.t_": [[562, "torch-tensor-t"]], "torch.Tensor.triangular_solve": [[585, "torch-tensor-triangular-solve"]], "torch.Tensor.stft": [[547, "torch-tensor-stft"]], "torch.Tensor.tanh_": [[568, "torch-tensor-tanh"]], "torch.Tensor.squeeze": [[543, "torch-tensor-squeeze"]], "torch.Tensor.sspaddmm": [[545, "torch-tensor-sspaddmm"]], "torch.Tensor.tensor_split": [[569, "torch-tensor-tensor-split"]], "torch.Tensor.take_along_dim": [[564, "torch-tensor-take-along-dim"]], "torch.Tensor.storage_offset": [[549, "torch-tensor-storage-offset"]], "torch.Tensor.square_": [[542, "torch-tensor-square"]], "torch.Tensor.square": [[541, "torch-tensor-square"]], "torch.Tensor.transpose_": [[584, "torch-tensor-transpose"]], "torch.Tensor.tolist": [[580, "torch-tensor-tolist"]], "torch.Tensor.tril": [[586, "torch-tensor-tril"]], "torch.Tensor.sub": [[552, "torch-tensor-sub"]], "torch.Tensor.to_sparse_bsr": [[576, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.sqrt_": [[540, "torch-tensor-sqrt"]], "torch.Tensor.to_sparse_csr": [[579, "torch-tensor-to-sparse-csr"]], "torch.Tensor.topk": [[581, "torch-tensor-topk"]], "torch.Tensor.to_sparse_coo": [[577, "torch-tensor-to-sparse-coo"]], "torch.Tensor.stride": [[551, "torch-tensor-stride"]], "torch.Tensor.tril_": [[587, "torch-tensor-tril"]], "torch.Tensor.sub_": [[553, "torch-tensor-sub"]], "torch.Tensor.sum_to_size": [[557, "torch-tensor-sum-to-size"]], "torch.Tensor.subtract_": [[555, "torch-tensor-subtract"]], "torch.Tensor.to": [[571, "torch-tensor-to"]], "torch.Tensor.storage_type": [[550, "torch-tensor-storage-type"]], "torch.Tensor.tanh": [[567, "torch-tensor-tanh"]], "torch.Tensor.swapaxes": [[559, "torch-tensor-swapaxes"]], "torch.Tensor.to_dense": [[572, "torch-tensor-to-dense"]], "torch.Tensor.to_mkldnn": [[573, "torch-tensor-to-mkldnn"]], "torch.Tensor.trace": [[582, "torch-tensor-trace"]], "torch.Tensor.sum": [[556, "torch-tensor-sum"]], "torch.Tensor.tan": [[565, "torch-tensor-tan"]], "torch.Tensor.storage": [[548, "torch-tensor-storage"]], "torch.Tensor.transpose": [[583, "torch-tensor-transpose"]], "torch.Tensor.slogdet": [[530, "torch-tensor-slogdet"]], "torch.Tensor.roll": [[497, "torch-tensor-roll"]], "torch.Tensor.retain_grad": [[495, "torch-tensor-retain-grad"]], "torch.Tensor.sinc_": [[525, "torch-tensor-sinc"]], "torch.Tensor.signbit": [[521, "torch-tensor-signbit"]], "torch.Tensor.row_indices": [[501, "torch-tensor-row-indices"]], "torch.Tensor.sparse_resize_": [[536, "torch-tensor-sparse-resize"]], "torch.Tensor.reshape_as": [[490, "torch-tensor-reshape-as"]], "torch.Tensor.select_scatter": [[511, "torch-tensor-select-scatter"]], "torch.Tensor.set_": [[512, "torch-tensor-set"]], "torch.Tensor.sparse_dim": [[534, "torch-tensor-sparse-dim"]], "torch.Tensor.sigmoid_": [[518, "torch-tensor-sigmoid"]], "torch.Tensor.sinh": [[526, "torch-tensor-sinh"]], "torch.Tensor.slice_scatter": [[529, "torch-tensor-slice-scatter"]], "torch.Tensor.rsqrt": [[502, "torch-tensor-rsqrt"]], "torch.Tensor.short": [[516, "torch-tensor-short"]], "torch.Tensor.split": [[538, "torch-tensor-split"]], "torch.Tensor.sin": [[522, "torch-tensor-sin"]], "torch.Tensor.sign": [[519, "torch-tensor-sign"]], "torch.Tensor.sigmoid": [[517, "torch-tensor-sigmoid"]], "torch.Tensor.sign_": [[520, "torch-tensor-sign"]], "torch.Tensor.sparse_resize_and_clear_": [[537, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.rot90": [[498, "torch-tensor-rot90"]], "torch.Tensor.round_": [[500, "torch-tensor-round"]], "torch.Tensor.scatter_add": [[506, "torch-tensor-scatter-add"]], "torch.Tensor.sinc": [[524, "torch-tensor-sinc"]], "torch.Tensor.sgn": [[513, "torch-tensor-sgn"]], "torch.Tensor.scatter_": [[505, "torch-tensor-scatter"]], "torch.Tensor.select": [[510, "torch-tensor-select"]], "torch.Tensor.smm": [[531, "torch-tensor-smm"]], "torch.Tensor.resolve_neg": [[494, "torch-tensor-resolve-neg"]], "torch.Tensor.sinh_": [[527, "torch-tensor-sinh"]], "torch.Tensor.sparse_mask": [[535, "torch-tensor-sparse-mask"]], "torch.Tensor.scatter_reduce_": [[509, "torch-tensor-scatter-reduce"]], "torch.Tensor.resize_": [[491, "torch-tensor-resize"]], "torch.Tensor.sgn_": [[514, "torch-tensor-sgn"]], "torch.Tensor.round": [[499, "torch-tensor-round"]], "torch.Tensor.sin_": [[523, "torch-tensor-sin"]], "torch.Tensor.scatter": [[504, "torch-tensor-scatter"]], "torch.Tensor.size": [[528, "torch-tensor-size"]], "torch.Tensor.rsqrt_": [[503, "torch-tensor-rsqrt"]], "torch.Tensor.softmax": [[532, "torch-tensor-softmax"]], "torch.Tensor.retains_grad": [[496, "torch-tensor-retains-grad"]], "torch.Tensor.sort": [[533, "torch-tensor-sort"]], "torch.Tensor.resize_as_": [[492, "torch-tensor-resize-as"]], "torch.Tensor.resolve_conj": [[493, "torch-tensor-resolve-conj"]], "torch.Tensor.scatter_add_": [[507, "torch-tensor-scatter-add"]], "torch.Tensor.scatter_reduce": [[508, "torch-tensor-scatter-reduce"]], "torch.Tensor.share_memory_": [[515, "torch-tensor-share-memory"]], "torch.Tensor.orgqr": [[452, "torch-tensor-orgqr"]], "torch.Tensor.q_scale": [[468, "torch-tensor-q-scale"]], "torch.Tensor.remainder": [[481, "torch-tensor-remainder"]], "torch.Tensor.not_equal": [[448, "torch-tensor-not-equal"]], "torch.Tensor.qr": [[470, "torch-tensor-qr"]], "torch.Tensor.norm": [[446, "torch-tensor-norm"]], "torch.Tensor.outer": [[454, "torch-tensor-outer"]], "torch.Tensor.pin_memory": [[456, "torch-tensor-pin-memory"]], "torch.Tensor.qscheme": [[471, "torch-tensor-qscheme"]], "torch.Tensor.remainder_": [[482, "torch-tensor-remainder"]], "torch.Tensor.q_zero_point": [[469, "torch-tensor-q-zero-point"]], "torch.Tensor.quantile": [[472, "torch-tensor-quantile"]], "torch.Tensor.numel": [[450, "torch-tensor-numel"]], "torch.Tensor.random_": [[474, "torch-tensor-random"]], "torch.Tensor.register_hook": [[480, "torch-tensor-register-hook"]], "torch.Tensor.put_": [[464, "torch-tensor-put"]], "torch.Tensor.polygamma": [[458, "torch-tensor-polygamma"]], "torch.Tensor.ormqr": [[453, "torch-tensor-ormqr"]], "torch.Tensor.repeat": [[485, "torch-tensor-repeat"]], "torch.Tensor.renorm": [[483, "torch-tensor-renorm"]], "torch.Tensor.reciprocal_": [[478, "torch-tensor-reciprocal"]], "torch.Tensor.repeat_interleave": [[486, "torch-tensor-repeat-interleave"]], "torch.Tensor.pow": [[461, "torch-tensor-pow"]], "torch.Tensor.pow_": [[462, "torch-tensor-pow"]], "torch.Tensor.reciprocal": [[477, "torch-tensor-reciprocal"]], "torch.Tensor.requires_grad_": [[488, "torch-tensor-requires-grad"]], "torch.Tensor.nextafter": [[443, "torch-tensor-nextafter"]], "torch.Tensor.prod": [[463, "torch-tensor-prod"]], "torch.Tensor.normal_": [[447, "torch-tensor-normal"]], "torch.Tensor.polygamma_": [[459, "torch-tensor-polygamma"]], "torch.Tensor.positive": [[460, "torch-tensor-positive"]], "torch.Tensor.rad2deg": [[473, "torch-tensor-rad2deg"]], "torch.Tensor.nonzero": [[445, "torch-tensor-nonzero"]], "torch.Tensor.requires_grad": [[487, "torch-tensor-requires-grad"]], "torch.Tensor.q_per_channel_axis": [[465, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.q_per_channel_scales": [[466, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.record_stream": [[479, "torch-tensor-record-stream"]], "torch.Tensor.q_per_channel_zero_points": [[467, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.permute": [[455, "torch-tensor-permute"]], "torch.Tensor.real": [[476, "torch-tensor-real"]], "torch.Tensor.not_equal_": [[449, "torch-tensor-not-equal"]], "torch.Tensor.new_zeros": [[442, "torch-tensor-new-zeros"]], "torch.Tensor.ravel": [[475, "torch-tensor-ravel"]], "torch.Tensor.renorm_": [[484, "torch-tensor-renorm"]], "torch.Tensor.nextafter_": [[444, "torch-tensor-nextafter"]], "torch.Tensor.reshape": [[489, "torch-tensor-reshape"]], "torch.Tensor.new_tensor": [[441, "torch-tensor-new-tensor"]], "torch.Tensor.numpy": [[451, "torch-tensor-numpy"]], "torch.Tensor.pinverse": [[457, "torch-tensor-pinverse"]], "torch.Tensor.ne_": [[432, "torch-tensor-ne"]], "torch.Tensor.maximum": [[402, "torch-tensor-maximum"]], "torch.Tensor.neg_": [[434, "torch-tensor-neg"]], "torch.Tensor.movedim": [[410, "torch-tensor-movedim"]], "torch.Tensor.moveaxis": [[409, "torch-tensor-moveaxis"]], "torch.Tensor.new_ones": [[440, "torch-tensor-new-ones"]], "torch.Tensor.map_": [[392, "torch-tensor-map"]], "torch.Tensor.matrix_exp": [[399, "torch-tensor-matrix-exp"]], "torch.Tensor.ne": [[431, "torch-tensor-ne"]], "torch.Tensor.masked_fill": [[393, "torch-tensor-masked-fill"]], "torch.Tensor.mul": [[412, "torch-tensor-mul"]], "torch.Tensor.matrix_power": [[400, "torch-tensor-matrix-power"]], "torch.Tensor.mean": [[403, "torch-tensor-mean"]], "torch.Tensor.mvlgamma": [[418, "torch-tensor-mvlgamma"]], "torch.Tensor.new_empty": [[438, "torch-tensor-new-empty"]], "torch.Tensor.mv": [[417, "torch-tensor-mv"]], "torch.Tensor.min": [[405, "torch-tensor-min"]], "torch.Tensor.multiply_": [[416, "torch-tensor-multiply"]], "torch.Tensor.ndimension": [[430, "torch-tensor-ndimension"]], "torch.Tensor.nbytes": [[428, "torch-tensor-nbytes"]], "torch.Tensor.mm": [[407, "torch-tensor-mm"]], "torch.Tensor.nanquantile": [[424, "torch-tensor-nanquantile"]], "torch.Tensor.msort": [[411, "torch-tensor-msort"]], "torch.Tensor.multiply": [[415, "torch-tensor-multiply"]], "torch.Tensor.narrow": [[426, "torch-tensor-narrow"]], "torch.Tensor.nanmean": [[422, "torch-tensor-nanmean"]], "torch.Tensor.masked_scatter_": [[396, "torch-tensor-masked-scatter"]], "torch.Tensor.negative_": [[436, "torch-tensor-negative"]], "torch.Tensor.masked_select": [[397, "torch-tensor-masked-select"]], "torch.Tensor.nanmedian": [[423, "torch-tensor-nanmedian"]], "torch.Tensor.new_full": [[439, "torch-tensor-new-full"]], "torch.Tensor.matmul": [[398, "torch-tensor-matmul"]], "torch.Tensor.nan_to_num": [[420, "torch-tensor-nan-to-num"]], "torch.Tensor.mvlgamma_": [[419, "torch-tensor-mvlgamma"]], "torch.Tensor.narrow_copy": [[427, "torch-tensor-narrow-copy"]], "torch.Tensor.mode": [[408, "torch-tensor-mode"]], "torch.Tensor.ndim": [[429, "torch-tensor-ndim"]], "torch.Tensor.median": [[404, "torch-tensor-median"]], "torch.Tensor.minimum": [[406, "torch-tensor-minimum"]], "torch.Tensor.masked_scatter": [[395, "torch-tensor-masked-scatter"]], "torch.Tensor.nelement": [[437, "torch-tensor-nelement"]], "torch.Tensor.max": [[401, "torch-tensor-max"]], "torch.Tensor.nansum": [[425, "torch-tensor-nansum"]], "torch.Tensor.mul_": [[413, "torch-tensor-mul"]], "torch.Tensor.neg": [[433, "torch-tensor-neg"]], "torch.Tensor.multinomial": [[414, "torch-tensor-multinomial"]], "torch.Tensor.nan_to_num_": [[421, "torch-tensor-nan-to-num"]], "torch.Tensor.masked_fill_": [[394, "torch-tensor-masked-fill"]], "torch.Tensor.negative": [[435, "torch-tensor-negative"]]}, "indexentries": {"optimizedmodule (class in torch._dynamo)": [[0, "torch._dynamo.OptimizedModule"]], "allow_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.allow_in_graph"]], "disable() (in module torch._dynamo)": [[0, "torch._dynamo.disable"]], "disallow_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.disallow_in_graph"]], "export() (in module torch._dynamo)": [[0, "torch._dynamo.export"]], "forbid_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.forbid_in_graph"]], "graph_break() (in module torch._dynamo)": [[0, "torch._dynamo.graph_break"]], "list_backends() (in module torch._dynamo)": [[0, "torch._dynamo.list_backends"]], "mark_dynamic() (in module torch._dynamo)": [[0, "torch._dynamo.mark_dynamic"]], "mark_static() (in module torch._dynamo)": [[0, "torch._dynamo.mark_static"]], "module": [[0, "module-torch._dynamo"], [1, "module-torch.amp"], [1, "module-torch.cpu"], [1, "module-torch.cpu.amp"], [1, "module-torch.cuda.amp"], [2, "module-torch.autograd"], [3, "module-torch.backends"], [3, "module-torch.backends.cpu"], [3, "module-torch.backends.cuda"], [3, "module-torch.backends.cudnn"], [3, "module-torch.backends.mkl"], [3, "module-torch.backends.mkldnn"], [3, "module-torch.backends.mps"], [3, "module-torch.backends.openmp"], [3, "module-torch.backends.opt_einsum"], [3, "module-torch.backends.quantized"], [3, "module-torch.backends.xeon"], [3, "module-torch.backends.xnnpack"], [4, "module-torch.utils.benchmark"], [4, "module-torch.utils.benchmark.examples"], [4, "module-torch.utils.benchmark.op_fuzzers"], [4, "module-torch.utils.benchmark.utils"], [4, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [5, "module-torch.utils.bottleneck"], [25, "module-torch.__config__"], [28, "module-torch.cuda"], [29, "module-torch.cuda._sanitizer"], [32, "module-torch.utils.data"], [32, "module-torch.utils.data.datapipes"], [32, "module-torch.utils.data.datapipes.dataframe"], [32, "module-torch.utils.data.datapipes.iter"], [32, "module-torch.utils.data.datapipes.map"], [32, "module-torch.utils.data.datapipes.utils"], [35, "module-torch.distributed"], [35, "module-torch.distributed.algorithms"], [35, "module-torch.distributed.algorithms.ddp_comm_hooks"], [35, "module-torch.distributed.algorithms.model_averaging"], [35, "module-torch.distributed.elastic"], [35, "module-torch.distributed.elastic.utils"], [35, "module-torch.distributed.elastic.utils.data"], [35, "module-torch.distributed.launch"], [35, "module-torch.distributed.launcher"], [35, "module-torch.distributed.nn"], [35, "module-torch.distributed.nn.api"], [35, "module-torch.distributed.nn.jit"], [35, "module-torch.distributed.nn.jit.templates"], [35, "module-torch.distributed.pipeline"], [35, "module-torch.distributed.pipeline.sync"], [35, "module-torch.distributed.pipeline.sync.skip"], [35, "module-torch.distributed.tensor"], [37, "module-torch.distributed.checkpoint"], [39, "module-torch.distributed.optim"], [40, "module-torch.distributed.tensor.parallel"], [41, "module-torch.distributions"], [41, "module-torch.distributions.constraint_registry"], [41, "module-torch.distributions.constraints"], [41, "module-torch.distributions.kl"], [41, "module-torch.distributions.transforms"], [43, "module-torch.distributed.elastic.agent"], [43, "module-torch.distributed.elastic.agent.server"], [45, "module-torch.distributed.elastic.multiprocessing.errors"], [46, "module-torch.distributed.elastic.events"], [49, "module-torch.distributed.elastic.metrics"], [50, "module-torch.distributed.elastic.multiprocessing"], [52, "module-torch.distributed.elastic.rendezvous"], [52, "module-torch.distributed.elastic.rendezvous.registry"], [53, "module-torch.distributed.run"], [54, "module-torch.distributed.elastic.timer"], [56, "module-torch.fft"], [57, "module-torch.distributed.fsdp"], [59, "module-torch.func"], [64, "module-torch.futures"], [65, "module-torch.fx"], [65, "module-torch.fx.experimental"], [65, "module-torch.fx.experimental.migrate_gradual_types"], [65, "module-torch.fx.experimental.unification"], [65, "module-torch.fx.experimental.unification.multipledispatch"], [65, "module-torch.fx.passes"], [65, "module-torch.fx.passes.backends"], [65, "module-torch.fx.passes.dialect"], [65, "module-torch.fx.passes.dialect.common"], [65, "module-torch.fx.passes.infra"], [65, "module-torch.fx.passes.tests"], [65, "module-torch.fx.passes.utils"], [1851, "module-torch.hub"], [1854, "module-torch.jit"], [1854, "module-torch.jit.mobile"], [1855, "module-torch.jit.supported_ops"], [1859, "module-torch.jit.unsupported_tensor_ops"], [1860, "module-torch.utils.jit"], [1862, "module-torch.linalg"], [1863, "module-torch._logging"], [1864, "module-torch.masked"], [1864, "module-torch.masked.maskedtensor"], [1866, "module-torch.utils.model_zoo"], [1867, "module-torch.monitor"], [1868, "module-torch.mps"], [1869, "module-torch.multiprocessing"], [1872, "module-torch.nested"], [1873, "module-torch.nn"], [1873, "module-torch.nn.backends"], [1873, "module-torch.nn.modules"], [1873, "module-torch.nn.parallel"], [1873, "module-torch.nn.utils"], [1873, "module-torch.nn.utils.stateless"], [1895, "module-torch.onnx"], [1896, "module-torch.onnx._internal.diagnostics"], [1898, "module-torch.optim"], [1899, "module-torch.package"], [1899, "module-torch.package.analyze"], [1901, "module-torch.profiler"], [1902, "module-torch.ao"], [1902, "module-torch.ao.nn"], [1902, "module-torch.ao.nn.quantizable"], [1902, "module-torch.ao.nn.quantizable.modules"], [1902, "module-torch.ao.nn.quantized"], [1902, "module-torch.ao.nn.quantized.reference"], [1902, "module-torch.ao.nn.quantized.reference.modules"], [1902, "module-torch.ao.nn.sparse"], [1902, "module-torch.ao.nn.sparse.quantized"], [1902, "module-torch.ao.nn.sparse.quantized.dynamic"], [1902, "module-torch.ao.ns"], [1902, "module-torch.ao.ns.fx"], [1902, "module-torch.ao.pruning"], [1902, "module-torch.ao.pruning.scheduler"], [1902, "module-torch.ao.pruning.sparsifier"], [1902, "module-torch.ao.quantization"], [1902, "module-torch.ao.quantization.backend_config"], [1902, "module-torch.ao.quantization.fx"], [1905, "module-torch.ao.nn.intrinsic"], [1905, "module-torch.ao.nn.intrinsic.modules"], [1905, "module-torch.ao.nn.intrinsic.qat"], [1905, "module-torch.ao.nn.intrinsic.qat.modules"], [1905, "module-torch.ao.nn.intrinsic.quantized"], [1905, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1905, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1905, "module-torch.ao.nn.intrinsic.quantized.modules"], [1905, "module-torch.ao.nn.qat"], [1905, "module-torch.ao.nn.qat.dynamic"], [1905, "module-torch.ao.nn.qat.dynamic.modules"], [1905, "module-torch.ao.nn.qat.modules"], [1905, "module-torch.ao.nn.quantized.dynamic"], [1905, "module-torch.ao.nn.quantized.dynamic.modules"], [1905, "module-torch.ao.nn.quantized.functional"], [1905, "module-torch.ao.nn.quantized.modules"], [1905, "module-torch.nn.intrinsic"], [1905, "module-torch.nn.intrinsic.modules"], [1905, "module-torch.nn.intrinsic.qat"], [1905, "module-torch.nn.intrinsic.qat.modules"], [1905, "module-torch.nn.intrinsic.quantized"], [1905, "module-torch.nn.intrinsic.quantized.dynamic"], [1905, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1905, "module-torch.nn.intrinsic.quantized.modules"], [1905, "module-torch.nn.qat"], [1905, "module-torch.nn.qat.dynamic"], [1905, "module-torch.nn.qat.dynamic.modules"], [1905, "module-torch.nn.qat.modules"], [1905, "module-torch.nn.quantizable"], [1905, "module-torch.nn.quantizable.modules"], [1905, "module-torch.nn.quantized"], [1905, "module-torch.nn.quantized.dynamic"], [1905, "module-torch.nn.quantized.dynamic.modules"], [1905, "module-torch.nn.quantized.modules"], [1905, "module-torch.quantization"], [1905, "module-torch.quantization.fx"], [1906, "module-torch.random"], [1907, "module-torch.distributed.autograd"], [1907, "module-torch.distributed.rpc"], [1910, "module-torch.signal"], [1910, "module-torch.signal.windows"], [1911, "module-torch.sparse"], [1912, "module-torch.special"], [1916, "module-torch.utils.tensorboard"], [1918, "module-torch.testing"], [1919, "module-torch"], [1919, "module-torch.autograd"], [1919, "module-torch.contrib"], [1919, "module-torch.utils"], [1919, "module-torch.utils.backcompat"], [1919, "module-torch.utils.hipify"], [1919, "module-torch.utils.model_dump"], [1920, "module-torch.ao.ns._numeric_suite"], [1921, "module-torch.ao.ns._numeric_suite_fx"]], "optimize() (in module torch._dynamo)": [[0, "torch._dynamo.optimize"]], "optimize_assert() (in module torch._dynamo)": [[0, "torch._dynamo.optimize_assert"]], "register_backend() (in module torch._dynamo)": [[0, "torch._dynamo.register_backend"]], "reset() (in module torch._dynamo)": [[0, "torch._dynamo.reset"]], "run() (in module torch._dynamo)": [[0, "torch._dynamo.run"]], "torch._dynamo": [[0, "module-torch._dynamo"]], "gradscaler (class in torch.cuda.amp)": [[1, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[1, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[1, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[1, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[1, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[1, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.load_state_dict"]], "scale() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[1, "module-torch.amp"]], "torch.cpu": [[1, "module-torch.cpu"]], "torch.cpu.amp": [[1, "module-torch.cpu.amp"]], "torch.cuda.amp": [[1, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[2, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[2, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[2, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[2, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[2, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[2, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[2, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[2, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[2, "module-torch.autograd"], [1919, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[3, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (torch.backends.cuda.torch.backends.cuda.matmul attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (torch.backends.cuda.torch.backends.cuda.matmul attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (torch.backends.cuda.torch.backends.cuda.matmul attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.allow_tf32"]], "benchmark (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.benchmark"]], "benchmark_limit (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.clear"]], "cufft_plan_cache (torch.backends.cuda.torch.backends.cuda attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.cufft_plan_cache"]], "deterministic (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.enabled"]], "enabled (torch.backends.opt_einsum.torch.backends.opt_einsum attribute)": [[3, "torch.backends.opt_einsum.torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[3, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[3, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[3, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[3, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[3, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[3, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[3, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[3, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda)": [[3, "torch.backends.cuda.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.sdp_kernel"]], "size (torch.backends.cuda.torch.backends.cuda attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.size"]], "strategy (torch.backends.opt_einsum.torch.backends.opt_einsum attribute)": [[3, "torch.backends.opt_einsum.torch.backends.opt_einsum.strategy"]], "torch.backends": [[3, "module-torch.backends"]], "torch.backends.cpu": [[3, "module-torch.backends.cpu"]], "torch.backends.cuda": [[3, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[3, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[3, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[3, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[3, "module-torch.backends.mps"]], "torch.backends.openmp": [[3, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[3, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[3, "module-torch.backends.quantized"]], "torch.backends.xeon": [[3, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[3, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[3, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[3, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[4, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[4, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[4, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[4, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[4, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[4, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[4, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[5, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[6, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[6, "torch.utils.checkpoint.checkpoint_sequential"]], "compile() (in module torch)": [[15, "torch.compile"], [944, "torch.compile"]], "parallel_info() (in module torch.__config__)": [[25, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[25, "torch.__config__.show"]], "torch.__config__": [[25, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cuda": [[28, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[29, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[29, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[32, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[32, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[32, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[32, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[32, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[32, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[32, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[32, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[32, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[32, "torch.utils.data.SequentialSampler"]], "subset (class in torch.utils.data)": [[32, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[32, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[32, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[32, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[32, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[32, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[32, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[32, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[32, "torch.utils.data.random_split"]], "torch.utils.data": [[32, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[32, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[32, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[32, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[32, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[32, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[33, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[35, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[35, "torch.distributed.DistBackendError"]], "filestore (class in torch.distributed)": [[35, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[35, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[35, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[35, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[35, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[35, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[35, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[35, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[35, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[35, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[35, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[35, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[35, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[35, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[35, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[35, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[35, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[35, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[35, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[35, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[35, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[35, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[35, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[35, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[35, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[35, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[35, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[35, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[35, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[35, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[35, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[35, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[35, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[35, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[35, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[35, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[35, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[35, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[35, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[35, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[35, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[35, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[35, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[35, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[35, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[35, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[35, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[35, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[35, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[35, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[35, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[35, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[35, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[35, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[35, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[35, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[35, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[35, "module-torch.distributed"]], "torch.distributed.algorithms": [[35, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[35, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[35, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[35, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[35, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[35, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[35, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[35, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[35, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[35, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[35, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[35, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[35, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[35, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[35, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[35, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[35, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[36, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[36, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[36, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[36, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[36, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[36, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[36, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[36, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[36, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[37, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[37, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[37, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[37, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[37, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[37, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[37, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[37, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[37, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[37, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[37, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[37, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[37, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[37, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[37, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[37, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[37, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[37, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[37, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[37, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[39, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[39, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[39, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[39, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[39, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[39, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[39, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "tensorparallelmultiheadattention (class in torch.distributed.tensor.parallel.multihead_attention_tp)": [[40, "torch.distributed.tensor.parallel.multihead_attention_tp.TensorParallelMultiheadAttention"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[40, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[40, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[40, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[41, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[41, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[41, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[41, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[41, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[41, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[41, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[41, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[41, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[41, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[41, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[41, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[41, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[41, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[41, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[41, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[41, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[41, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[41, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[41, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[41, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[41, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[41, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[41, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[41, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[41, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[41, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[41, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[41, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[41, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[41, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[41, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[41, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[41, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[41, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[41, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[41, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[41, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[41, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[41, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[41, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[41, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[41, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[41, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[41, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[41, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[41, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[41, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[41, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[41, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[41, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[41, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[41, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[41, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[41, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[41, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[41, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[41, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[41, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[41, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[41, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[41, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[41, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[41, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[41, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[41, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[41, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[41, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[41, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[41, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[41, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[41, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[41, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[41, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[41, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[41, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[41, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[41, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[41, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[41, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[41, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[41, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[41, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[41, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[41, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[41, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[41, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[41, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[41, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[41, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[41, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[41, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[41, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[41, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[41, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[41, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[41, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[41, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[41, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[41, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[41, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[41, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[41, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[41, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[41, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[41, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[41, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[41, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[41, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[41, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[41, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[41, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[41, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[41, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[41, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[41, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[41, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[41, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[41, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[41, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[41, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[41, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[41, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[41, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[41, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[41, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[41, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[41, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[41, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[41, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[41, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[41, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[41, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[41, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[41, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[41, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[41, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[41, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[41, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[41, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[41, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[41, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[41, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[41, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[41, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[41, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[41, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[41, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[41, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[41, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[41, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[41, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[41, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[41, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[41, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[41, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[41, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[41, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[41, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[41, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[41, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[41, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[41, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[41, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[41, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[41, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[41, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[41, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[41, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[41, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[41, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[41, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[41, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[41, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[41, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[41, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[41, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[41, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[41, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[41, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[41, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[41, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[41, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[41, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[41, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[41, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[41, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[41, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[41, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[41, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[41, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[41, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[41, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[41, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[41, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[41, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[41, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[41, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[41, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[41, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[41, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[41, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[41, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[41, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[41, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[41, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[41, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[41, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[41, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[41, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[41, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[41, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[41, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[41, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[41, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[41, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[41, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[41, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[41, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[41, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[41, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[41, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[41, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[41, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[41, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[41, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[41, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[41, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[41, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[41, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[41, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[41, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[41, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[41, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[41, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[41, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[41, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[41, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[41, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[41, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[41, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[41, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[41, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[41, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[41, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[41, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[41, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[42, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[42, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[43, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[43, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[43, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[43, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[43, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[43, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[43, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[43, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[45, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[45, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[45, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[45, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[45, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[46, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[46, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[46, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[46, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[46, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[46, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[49, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[49, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[49, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[49, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[49, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[49, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[49, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[50, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[50, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[50, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[50, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[50, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[50, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[52, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[52, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[52, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[52, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[52, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[52, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[53, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[54, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[54, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[54, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[54, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[54, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[54, "module-torch.distributed.elastic.timer"]], "torch.fft": [[56, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[57, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[57, "torch.distributed.fsdp.CPUOffload"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel"]], "mixedprecision (class in torch.distributed.fsdp)": [[57, "torch.distributed.fsdp.MixedPrecision"]], "shardingstrategy (class in torch.distributed.fsdp)": [[57, "torch.distributed.fsdp.ShardingStrategy"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "load_optim_state_dict_pre_hook() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.load_optim_state_dict_pre_hook"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_post_hook() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_post_hook"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[57, "module-torch.distributed.fsdp"]], "torch.func": [[59, "module-torch.func"]], "future (class in torch.futures)": [[64, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[64, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[64, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[64, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[64, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[64, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[64, "torch.futures.Future.then"]], "torch.futures": [[64, "module-torch.futures"]], "value() (torch.futures.future method)": [[64, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[64, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[64, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[65, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[65, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[65, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[65, "torch.fx.Node"]], "proxy (class in torch.fx)": [[65, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[65, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[65, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[65, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[65, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[65, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[65, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[65, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[65, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[65, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[65, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[65, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[65, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[65, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[65, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[65, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[65, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[65, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[65, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[65, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[65, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[65, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[65, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[65, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[65, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[65, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[65, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[65, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[65, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[65, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[65, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[65, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[65, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[65, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[65, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[65, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[65, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[65, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[65, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[65, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[65, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[65, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[65, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[65, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[65, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[65, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[65, "module-torch.fx"]], "torch.fx.experimental": [[65, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[65, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[65, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[65, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[65, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[65, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[65, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[65, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[65, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[65, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[65, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[65, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[65, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[65, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[65, "torch.fx.wrap"]], "generator (class in torch)": [[83, "torch.Generator"]], "device (torch.generator attribute)": [[83, "torch.Generator.device"]], "get_state() (torch.generator method)": [[83, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[83, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[83, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[83, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[83, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[84, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[85, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[86, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[87, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[88, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[89, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[90, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[91, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[92, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[93, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[94, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[95, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[96, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[97, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[98, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[99, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[100, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[101, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[102, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[103, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[104, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[105, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[106, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[107, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[108, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[109, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[110, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[111, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[112, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[113, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[114, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[115, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[116, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[117, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[118, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[119, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[120, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[121, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[122, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[123, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[124, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[125, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[126, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[127, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[128, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[129, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[130, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[131, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[132, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[133, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[134, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[135, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[136, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[137, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[138, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[139, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[140, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[141, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[142, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[143, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[144, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[145, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[146, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[147, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[148, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[149, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[150, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[151, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[152, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[153, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[154, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[155, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[156, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[157, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[158, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[159, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[160, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[161, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[162, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[163, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[164, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[165, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[166, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[167, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[168, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[169, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[170, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[171, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[172, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[173, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[174, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[175, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[176, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[177, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[178, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[179, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[180, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[181, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[182, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[183, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[184, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[185, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[186, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[187, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[188, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[189, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[190, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[191, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[192, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[193, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[194, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[195, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[196, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[197, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[198, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[199, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[200, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[201, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[202, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[203, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[204, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[205, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[206, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[207, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[208, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[209, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[210, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[211, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[212, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[213, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[214, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[215, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[216, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[217, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[218, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[219, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[220, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[221, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[222, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[223, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[224, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[225, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[226, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[227, "torch.Tensor.dim"]], "dist() (torch.tensor method)": [[228, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[229, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[230, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[231, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[232, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[233, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[234, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[235, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[236, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[237, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[238, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[239, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[240, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[241, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[242, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[243, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[244, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[245, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[246, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[247, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[248, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[249, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[250, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[251, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[252, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[253, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[254, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[255, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[256, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[257, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[258, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[259, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[260, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[261, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[262, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[263, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[264, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[265, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[266, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[267, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[268, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[269, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[270, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[271, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[272, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[273, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[274, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[275, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[276, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[277, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[278, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[279, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[280, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[281, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[282, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[283, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[284, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[285, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[286, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[287, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[288, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[289, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[290, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[291, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[292, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[293, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[294, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[295, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[296, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[297, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[298, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[299, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[300, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[301, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[302, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[303, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[304, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[305, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[306, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[307, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[308, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[309, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[310, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[311, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[312, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[313, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[314, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[315, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[316, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[317, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[318, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[319, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[320, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[321, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[322, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[323, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[324, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[325, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[326, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[327, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[328, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[329, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[330, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[331, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[332, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[333, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[334, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[335, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[336, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[337, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[338, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[339, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[340, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[341, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[342, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[343, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[344, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[345, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[346, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[347, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[348, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[349, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[350, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[351, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[352, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[353, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[354, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[355, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[356, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[357, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[358, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[359, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[360, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[361, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[362, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[363, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[364, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[365, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[366, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[367, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[368, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[369, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[370, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[371, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[372, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[373, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[374, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[375, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[376, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[377, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[378, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[379, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[380, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[381, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[382, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[383, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[384, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[385, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[386, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[387, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[388, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[389, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[390, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[391, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[392, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[393, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[394, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[395, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[396, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[397, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[398, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[399, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[400, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[401, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[402, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[403, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[404, "torch.Tensor.median"]], "min() (torch.tensor method)": [[405, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[406, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[407, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[408, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[409, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[410, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[411, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[412, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[413, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[414, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[415, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[416, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[417, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[418, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[419, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[420, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[421, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[422, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[423, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[424, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[425, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[426, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[427, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[428, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[429, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[430, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[431, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[432, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[433, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[434, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[435, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[436, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[437, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[438, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[439, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[440, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[441, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[442, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[443, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[444, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[445, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[446, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[447, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[448, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[449, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[450, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[451, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[452, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[453, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[454, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[455, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[456, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[457, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[458, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[459, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[460, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[461, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[462, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[463, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[464, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[465, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[466, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[467, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[468, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[469, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[470, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[471, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[472, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[473, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[474, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[475, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[476, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[477, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[478, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[479, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[480, "torch.Tensor.register_hook"]], "remainder() (torch.tensor method)": [[481, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[482, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[483, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[484, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[485, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[486, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[487, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[488, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[489, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[490, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[491, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[492, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[493, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[494, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[495, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[496, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[497, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[498, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[499, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[500, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[501, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[502, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[503, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[504, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[505, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[506, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[507, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[508, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[509, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[510, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[511, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[512, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[513, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[514, "torch.Tensor.sgn_"]], "share_memory_() (torch.tensor method)": [[515, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[516, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[517, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[518, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[519, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[520, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[521, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[522, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[523, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[524, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[525, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[526, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[527, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[528, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[529, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[530, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[531, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[532, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[533, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[534, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[535, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[536, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[537, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[538, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[539, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[540, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[541, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[542, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[543, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[544, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[545, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[546, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[547, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[548, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[549, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[550, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[551, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[552, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[553, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[554, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[555, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[556, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[557, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[558, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[559, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[560, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[561, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[562, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[563, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[564, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[565, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[566, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[567, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[568, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[569, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[570, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[571, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[572, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[573, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[574, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[575, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[576, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[577, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[578, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[579, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[580, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[581, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[582, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[583, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[584, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[585, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[586, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[587, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[588, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[589, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[590, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[591, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[592, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[593, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[594, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[595, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[596, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[597, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[598, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[599, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[600, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[601, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[602, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[603, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[604, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[605, "torch.Tensor.values"]], "var() (torch.tensor method)": [[606, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[607, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[608, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[609, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[610, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[611, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[612, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[613, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[614, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[615, "torch._assert"]], "_foreach_abs() (in module torch)": [[616, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[617, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[618, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[619, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[620, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[621, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[622, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[623, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[624, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[625, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[626, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[627, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[628, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[629, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[630, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[631, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[632, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[633, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[634, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[635, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[636, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[637, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[638, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[639, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[640, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[641, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[642, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[643, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[644, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[645, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[646, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[647, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[648, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[649, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[650, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[651, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[652, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[653, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[654, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[655, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[656, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[657, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[658, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[659, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[660, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[661, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[662, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[663, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[664, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[665, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[666, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[667, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[668, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[669, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[670, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[671, "torch._logging.set_logs"]], "abs() (in module torch)": [[672, "torch.abs"]], "absolute() (in module torch)": [[673, "torch.absolute"]], "acos() (in module torch)": [[674, "torch.acos"]], "acosh() (in module torch)": [[675, "torch.acosh"]], "add() (in module torch)": [[676, "torch.add"]], "addbmm() (in module torch)": [[677, "torch.addbmm"]], "addcdiv() (in module torch)": [[678, "torch.addcdiv"]], "addcmul() (in module torch)": [[679, "torch.addcmul"]], "addmm() (in module torch)": [[680, "torch.addmm"]], "addmv() (in module torch)": [[681, "torch.addmv"]], "addr() (in module torch)": [[682, "torch.addr"]], "adjoint() (in module torch)": [[683, "torch.adjoint"]], "all() (in module torch)": [[684, "torch.all"]], "allclose() (in module torch)": [[685, "torch.allclose"]], "amax() (in module torch)": [[686, "torch.amax"]], "amin() (in module torch)": [[687, "torch.amin"]], "aminmax() (in module torch)": [[688, "torch.aminmax"]], "angle() (in module torch)": [[689, "torch.angle"]], "any() (in module torch)": [[690, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[691, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[692, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[693, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[694, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[695, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[701, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[702, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[703, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[704, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[705, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[706, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[707, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[712, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[713, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[714, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[715, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[716, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[717, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[718, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[719, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[720, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[721, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[722, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[723, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[723, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[724, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[725, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[726, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[726, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[726, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[727, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[728, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[729, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[729, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[730, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[730, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[731, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[731, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[736, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[737, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[747, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[747, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[751, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[752, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[753, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[754, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[755, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[755, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[755, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[756, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[757, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[758, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[759, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[760, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[761, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[778, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[779, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[780, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[781, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[782, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[783, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[783, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[783, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[783, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[783, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[783, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[783, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[784, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[785, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[785, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[785, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[786, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[787, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[787, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[787, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[787, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[788, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[789, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[790, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[791, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[792, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[793, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[794, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[803, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[804, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[805, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[806, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[806, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[807, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[807, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[807, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[807, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[808, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[808, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[808, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[808, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[808, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[808, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[808, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[808, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[808, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[808, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[808, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[809, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[810, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[811, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[811, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[811, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[811, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[812, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[813, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[814, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[815, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[815, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[816, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[827, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[828, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[829, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[830, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[831, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[832, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[833, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[834, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[835, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[836, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[843, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[844, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[845, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[845, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[845, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[845, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[845, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[845, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[845, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[845, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[846, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[847, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[848, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[849, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[850, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[851, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[852, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[853, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[854, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[855, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[856, "torch.arange"]], "arccos() (in module torch)": [[857, "torch.arccos"]], "arccosh() (in module torch)": [[858, "torch.arccosh"]], "arcsin() (in module torch)": [[859, "torch.arcsin"]], "arcsinh() (in module torch)": [[860, "torch.arcsinh"]], "arctan() (in module torch)": [[861, "torch.arctan"]], "arctan2() (in module torch)": [[862, "torch.arctan2"]], "arctanh() (in module torch)": [[863, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[864, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[865, "torch.argmax"]], "argmin() (in module torch)": [[866, "torch.argmin"]], "argsort() (in module torch)": [[867, "torch.argsort"]], "argwhere() (in module torch)": [[868, "torch.argwhere"]], "as_strided() (in module torch)": [[869, "torch.as_strided"]], "as_tensor() (in module torch)": [[870, "torch.as_tensor"]], "asarray() (in module torch)": [[871, "torch.asarray"]], "asin() (in module torch)": [[872, "torch.asin"]], "asinh() (in module torch)": [[873, "torch.asinh"]], "atan() (in module torch)": [[874, "torch.atan"]], "atan2() (in module torch)": [[875, "torch.atan2"]], "atanh() (in module torch)": [[876, "torch.atanh"]], "atleast_1d() (in module torch)": [[877, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[878, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[879, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[880, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[881, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[882, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[883, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[884, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[885, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[886, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[887, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[888, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[889, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[890, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[891, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[892, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[893, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[894, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[895, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[896, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[897, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[898, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[899, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[900, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[901, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[902, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[903, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[904, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[905, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[906, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[907, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[908, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[909, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[910, "torch.autograd.profiler.profile.total_average"]], "set_multithreading_enabled (class in torch.autograd)": [[911, "torch.autograd.set_multithreading_enabled"]], "baddbmm() (in module torch)": [[912, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[913, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[914, "torch.bernoulli"]], "bincount() (in module torch)": [[915, "torch.bincount"]], "bitwise_and() (in module torch)": [[916, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[917, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[918, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[919, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[920, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[921, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[922, "torch.blackman_window"]], "block_diag() (in module torch)": [[923, "torch.block_diag"]], "bmm() (in module torch)": [[924, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[925, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[926, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[927, "torch.broadcast_to"]], "bucketize() (in module torch)": [[928, "torch.bucketize"]], "can_cast() (in module torch)": [[929, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[930, "torch.cartesian_prod"]], "cat() (in module torch)": [[931, "torch.cat"]], "cdist() (in module torch)": [[932, "torch.cdist"]], "ceil() (in module torch)": [[933, "torch.ceil"]], "chain_matmul() (in module torch)": [[934, "torch.chain_matmul"]], "cholesky() (in module torch)": [[935, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[936, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[937, "torch.cholesky_solve"]], "chunk() (in module torch)": [[938, "torch.chunk"]], "clamp() (in module torch)": [[939, "torch.clamp"]], "clip() (in module torch)": [[940, "torch.clip"]], "clone() (in module torch)": [[941, "torch.clone"]], "column_stack() (in module torch)": [[942, "torch.column_stack"]], "combinations() (in module torch)": [[943, "torch.combinations"]], "compiled_with_cxx11_abi() (in module torch)": [[945, "torch.compiled_with_cxx11_abi"]], "complex() (in module torch)": [[946, "torch.complex"]], "concat() (in module torch)": [[947, "torch.concat"]], "concatenate() (in module torch)": [[948, "torch.concatenate"]], "conj() (in module torch)": [[949, "torch.conj"]], "conj_physical() (in module torch)": [[950, "torch.conj_physical"]], "copysign() (in module torch)": [[951, "torch.copysign"]], "corrcoef() (in module torch)": [[952, "torch.corrcoef"]], "cos() (in module torch)": [[953, "torch.cos"]], "cosh() (in module torch)": [[954, "torch.cosh"]], "count_nonzero() (in module torch)": [[955, "torch.count_nonzero"]], "cov() (in module torch)": [[956, "torch.cov"]], "cross() (in module torch)": [[957, "torch.cross"]], "cudagraph (class in torch.cuda)": [[958, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[958, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[958, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[958, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[958, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[958, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[958, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[958, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[959, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[960, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[960, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[960, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[960, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[960, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[960, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[960, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[960, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[961, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[961, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[961, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[961, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[961, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[961, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[962, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[963, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[963, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[963, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[963, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[963, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[963, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[964, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[965, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[966, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[967, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[968, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[969, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[970, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[971, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[972, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[973, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[974, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[975, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[976, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[977, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[978, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[979, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[980, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[981, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[982, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[983, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[984, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[985, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[986, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[987, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[988, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[989, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[990, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[991, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[992, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[993, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[994, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[995, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[996, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[997, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[998, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[999, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1000, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1001, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1002, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1003, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1004, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1005, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1006, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1007, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1008, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1009, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1010, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1011, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1012, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1013, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1014, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1015, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1016, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1017, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1018, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1019, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1020, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1021, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1022, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1023, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1024, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1025, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1026, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1027, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1028, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1029, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1030, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1031, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1032, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1033, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1034, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1035, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1036, "torch.cummax"]], "cummin() (in module torch)": [[1037, "torch.cummin"]], "cumprod() (in module torch)": [[1038, "torch.cumprod"]], "cumsum() (in module torch)": [[1039, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1040, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1041, "torch.deg2rad"]], "dequantize() (in module torch)": [[1042, "torch.dequantize"]], "det() (in module torch)": [[1043, "torch.det"]], "diag() (in module torch)": [[1044, "torch.diag"]], "diag_embed() (in module torch)": [[1045, "torch.diag_embed"]], "diagflat() (in module torch)": [[1046, "torch.diagflat"]], "diagonal() (in module torch)": [[1047, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1048, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1049, "torch.diff"]], "digamma() (in module torch)": [[1050, "torch.digamma"]], "dist() (in module torch)": [[1051, "torch.dist"]], "div() (in module torch)": [[1052, "torch.div"]], "divide() (in module torch)": [[1053, "torch.divide"]], "dot() (in module torch)": [[1054, "torch.dot"]], "dsplit() (in module torch)": [[1055, "torch.dsplit"]], "dstack() (in module torch)": [[1056, "torch.dstack"]], "einsum() (in module torch)": [[1057, "torch.einsum"]], "empty() (in module torch)": [[1058, "torch.empty"]], "empty_like() (in module torch)": [[1059, "torch.empty_like"]], "empty_strided() (in module torch)": [[1060, "torch.empty_strided"]], "enable_grad (class in torch)": [[1061, "torch.enable_grad"]], "eq() (in module torch)": [[1062, "torch.eq"]], "equal() (in module torch)": [[1063, "torch.equal"]], "erf() (in module torch)": [[1064, "torch.erf"]], "erfc() (in module torch)": [[1065, "torch.erfc"]], "erfinv() (in module torch)": [[1066, "torch.erfinv"]], "exp() (in module torch)": [[1067, "torch.exp"]], "exp2() (in module torch)": [[1068, "torch.exp2"]], "expm1() (in module torch)": [[1069, "torch.expm1"]], "eye() (in module torch)": [[1070, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1071, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1072, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1073, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1074, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1075, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1076, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1077, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1078, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1079, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1080, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1081, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1082, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1083, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1084, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1085, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1086, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1087, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1088, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1089, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1090, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1091, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1092, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1093, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1094, "torch.fft.rfftn"]], "fix() (in module torch)": [[1095, "torch.fix"]], "flatten() (in module torch)": [[1096, "torch.flatten"]], "flip() (in module torch)": [[1097, "torch.flip"]], "fliplr() (in module torch)": [[1098, "torch.fliplr"]], "flipud() (in module torch)": [[1099, "torch.flipud"]], "float_power() (in module torch)": [[1100, "torch.float_power"]], "floor() (in module torch)": [[1101, "torch.floor"]], "floor_divide() (in module torch)": [[1102, "torch.floor_divide"]], "fmax() (in module torch)": [[1103, "torch.fmax"]], "fmin() (in module torch)": [[1104, "torch.fmin"]], "fmod() (in module torch)": [[1105, "torch.fmod"]], "frac() (in module torch)": [[1106, "torch.frac"]], "frexp() (in module torch)": [[1107, "torch.frexp"]], "from_dlpack() (in module torch)": [[1108, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1109, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1110, "torch.frombuffer"]], "full() (in module torch)": [[1111, "torch.full"]], "full_like() (in module torch)": [[1112, "torch.full_like"]], "functional_call() (in module torch.func)": [[1113, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1114, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1115, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1116, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1117, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1118, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1119, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1120, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1121, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1122, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1123, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1124, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1125, "torch.func.vmap"]], "gather() (in module torch)": [[1126, "torch.gather"]], "gcd() (in module torch)": [[1127, "torch.gcd"]], "ge() (in module torch)": [[1128, "torch.ge"]], "geqrf() (in module torch)": [[1129, "torch.geqrf"]], "ger() (in module torch)": [[1130, "torch.ger"]], "get_default_dtype() (in module torch)": [[1131, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1132, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1133, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1134, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1135, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1136, "torch.get_rng_state"]], "gradient() (in module torch)": [[1137, "torch.gradient"]], "greater() (in module torch)": [[1138, "torch.greater"]], "greater_equal() (in module torch)": [[1139, "torch.greater_equal"]], "gt() (in module torch)": [[1140, "torch.gt"]], "hamming_window() (in module torch)": [[1141, "torch.hamming_window"]], "hann_window() (in module torch)": [[1142, "torch.hann_window"]], "heaviside() (in module torch)": [[1143, "torch.heaviside"]], "histc() (in module torch)": [[1144, "torch.histc"]], "histogram() (in module torch)": [[1145, "torch.histogram"]], "histogramdd() (in module torch)": [[1146, "torch.histogramdd"]], "hsplit() (in module torch)": [[1147, "torch.hsplit"]], "hspmm() (in module torch)": [[1148, "torch.hspmm"]], "hstack() (in module torch)": [[1149, "torch.hstack"]], "hypot() (in module torch)": [[1150, "torch.hypot"]], "i0() (in module torch)": [[1151, "torch.i0"]], "igamma() (in module torch)": [[1152, "torch.igamma"]], "igammac() (in module torch)": [[1153, "torch.igammac"]], "imag() (in module torch)": [[1154, "torch.imag"]], "index_add() (in module torch)": [[1155, "torch.index_add"]], "index_copy() (in module torch)": [[1156, "torch.index_copy"]], "index_reduce() (in module torch)": [[1157, "torch.index_reduce"]], "index_select() (in module torch)": [[1158, "torch.index_select"]], "inference_mode (class in torch)": [[1159, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1160, "torch.initial_seed"]], "inner() (in module torch)": [[1161, "torch.inner"]], "inverse() (in module torch)": [[1162, "torch.inverse"]], "is_complex() (in module torch)": [[1163, "torch.is_complex"]], "is_conj() (in module torch)": [[1164, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1165, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1166, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1167, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1168, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1169, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1170, "torch.is_storage"]], "is_tensor() (in module torch)": [[1171, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1172, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1173, "torch.isclose"]], "isfinite() (in module torch)": [[1174, "torch.isfinite"]], "isin() (in module torch)": [[1175, "torch.isin"]], "isinf() (in module torch)": [[1176, "torch.isinf"]], "isnan() (in module torch)": [[1177, "torch.isnan"]], "isneginf() (in module torch)": [[1178, "torch.isneginf"]], "isposinf() (in module torch)": [[1179, "torch.isposinf"]], "isreal() (in module torch)": [[1180, "torch.isreal"]], "istft() (in module torch)": [[1181, "torch.istft"]], "attribute (class in torch.jit)": [[1182, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1182, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1182, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1182, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1182, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1183, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1183, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1183, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1183, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1184, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1184, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1184, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1184, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1184, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1184, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1185, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1186, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1187, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1188, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1189, "torch.jit.ignore"]], "isinstance() (in module torch.jit)": [[1190, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1191, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1192, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1193, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1194, "torch.jit.save"]], "script() (in module torch.jit)": [[1195, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1196, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1197, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1198, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1199, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1200, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1201, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1202, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1203, "torch.kaiser_window"]], "kron() (in module torch)": [[1204, "torch.kron"]], "kthvalue() (in module torch)": [[1205, "torch.kthvalue"]], "lcm() (in module torch)": [[1206, "torch.lcm"]], "ldexp() (in module torch)": [[1207, "torch.ldexp"]], "le() (in module torch)": [[1208, "torch.le"]], "lerp() (in module torch)": [[1209, "torch.lerp"]], "less() (in module torch)": [[1210, "torch.less"]], "less_equal() (in module torch)": [[1211, "torch.less_equal"]], "lgamma() (in module torch)": [[1212, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1213, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1214, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1215, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1216, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1217, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1218, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1219, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1220, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1221, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1222, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1223, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1224, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1225, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1226, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1227, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1228, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1229, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1230, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1231, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1232, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1233, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1234, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1235, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1236, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1237, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1238, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1239, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1240, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1241, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1242, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1243, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1244, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1245, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1246, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1247, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1248, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1249, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1250, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1251, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1252, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1253, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1254, "torch.linspace"]], "load() (in module torch)": [[1255, "torch.load"]], "lobpcg() (in module torch)": [[1256, "torch.lobpcg"]], "log() (in module torch)": [[1257, "torch.log"]], "log10() (in module torch)": [[1258, "torch.log10"]], "log1p() (in module torch)": [[1259, "torch.log1p"]], "log2() (in module torch)": [[1260, "torch.log2"]], "logaddexp() (in module torch)": [[1261, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1262, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1263, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1264, "torch.logdet"]], "logical_and() (in module torch)": [[1265, "torch.logical_and"]], "logical_not() (in module torch)": [[1266, "torch.logical_not"]], "logical_or() (in module torch)": [[1267, "torch.logical_or"]], "logical_xor() (in module torch)": [[1268, "torch.logical_xor"]], "logit() (in module torch)": [[1269, "torch.logit"]], "logspace() (in module torch)": [[1270, "torch.logspace"]], "logsumexp() (in module torch)": [[1271, "torch.logsumexp"]], "lt() (in module torch)": [[1272, "torch.lt"]], "lu() (in module torch)": [[1273, "torch.lu"]], "lu_solve() (in module torch)": [[1274, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1275, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1276, "torch.manual_seed"]], "masked_select() (in module torch)": [[1277, "torch.masked_select"]], "matmul() (in module torch)": [[1278, "torch.matmul"]], "matrix_exp() (in module torch)": [[1279, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1280, "torch.matrix_power"]], "max() (in module torch)": [[1281, "torch.max"]], "maximum() (in module torch)": [[1282, "torch.maximum"]], "mean() (in module torch)": [[1283, "torch.mean"]], "median() (in module torch)": [[1284, "torch.median"]], "meshgrid() (in module torch)": [[1285, "torch.meshgrid"]], "min() (in module torch)": [[1286, "torch.min"]], "minimum() (in module torch)": [[1287, "torch.minimum"]], "mm() (in module torch)": [[1288, "torch.mm"]], "mode() (in module torch)": [[1289, "torch.mode"]], "moveaxis() (in module torch)": [[1290, "torch.moveaxis"]], "movedim() (in module torch)": [[1291, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1292, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1293, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1294, "torch.mps.empty_cache"]], "get_rng_state() (in module torch.mps)": [[1295, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1296, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1297, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1298, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1299, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1300, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1301, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1302, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1303, "torch.mps.synchronize"]], "msort() (in module torch)": [[1304, "torch.msort"]], "mul() (in module torch)": [[1305, "torch.mul"]], "multinomial() (in module torch)": [[1306, "torch.multinomial"]], "multiply() (in module torch)": [[1307, "torch.multiply"]], "mv() (in module torch)": [[1308, "torch.mv"]], "mvlgamma() (in module torch)": [[1309, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1310, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1311, "torch.nanmean"]], "nanmedian() (in module torch)": [[1312, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1313, "torch.nanquantile"]], "nansum() (in module torch)": [[1314, "torch.nansum"]], "narrow() (in module torch)": [[1315, "torch.narrow"]], "narrow_copy() (in module torch)": [[1316, "torch.narrow_copy"]], "ne() (in module torch)": [[1317, "torch.ne"]], "neg() (in module torch)": [[1318, "torch.neg"]], "negative() (in module torch)": [[1319, "torch.negative"]], "nextafter() (in module torch)": [[1320, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1321, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1322, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1323, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1324, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1324, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1324, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1325, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1326, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1327, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1328, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1329, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1330, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1331, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1332, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1333, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1334, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1335, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1336, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1337, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1338, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1339, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1340, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1341, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1342, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1343, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1344, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1345, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1346, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1347, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1348, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1349, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1350, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1351, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1352, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1353, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1354, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1355, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1356, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1357, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1358, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1359, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1359, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1360, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1360, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1360, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1361, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1362, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1363, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1364, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1365, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1366, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1367, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1368, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1369, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1370, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1371, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1372, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1373, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1374, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1375, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1376, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1377, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1378, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1379, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1380, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1381, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1382, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1383, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1384, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1385, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1386, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1387, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1388, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1389, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1389, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1390, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1390, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1391, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1391, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1392, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1392, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1393, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1393, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1394, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1394, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1395, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1395, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1396, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1396, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1397, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1397, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1398, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1398, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1399, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1399, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1400, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1400, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1401, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1401, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1402, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1403, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1404, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1405, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1406, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1407, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1408, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1409, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1410, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1411, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1412, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1413, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1414, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1415, "torch.nn.Mish"]], "module (class in torch.nn)": [[1416, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1416, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1416, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1416, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1416, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1416, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1416, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1416, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1416, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1416, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1416, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1416, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1416, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1416, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1416, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1416, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1416, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1416, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1416, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1416, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1416, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1416, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1416, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1416, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1416, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1416, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1416, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1416, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1416, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1416, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1416, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1416, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1416, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1416, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1416, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1416, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1416, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1416, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1416, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1416, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1416, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1416, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1416, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1416, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1416, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1416, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1416, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1417, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1417, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1417, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1417, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1417, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1417, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1417, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1418, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1418, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1418, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1418, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1419, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1420, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1421, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1422, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1422, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1422, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1423, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1424, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1425, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1426, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1426, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1426, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1426, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1426, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1426, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1426, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1426, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1426, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1426, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1426, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1426, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1427, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1427, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1427, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1428, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1429, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1430, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1431, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1432, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1432, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1433, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1434, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1435, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1436, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1437, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1438, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1439, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1440, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1441, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1442, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1443, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1444, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1444, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1445, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1446, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1447, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1448, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1449, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1450, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1451, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1452, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1453, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1454, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1455, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1455, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1456, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1457, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1458, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1459, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1459, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1459, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1460, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1460, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1461, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1461, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1462, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1462, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1463, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1463, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1464, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1465, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1466, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1467, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1468, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1469, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1470, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1471, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1472, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1473, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1474, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1475, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1476, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1477, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1478, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1479, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1480, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1481, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1482, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1483, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1484, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1485, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1486, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1487, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1488, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1489, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1490, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1491, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1492, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1493, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1494, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1495, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1496, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1497, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1498, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1499, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1500, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1501, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1502, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1503, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1504, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1505, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1506, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1507, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1508, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1509, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1510, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1511, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1512, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1513, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1514, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1515, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1516, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1517, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1518, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1519, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1520, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1521, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1522, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1523, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1524, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1525, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1526, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1527, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1528, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1529, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1530, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1531, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1532, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1533, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1534, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1535, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1536, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1537, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1538, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1539, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1540, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1541, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1542, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1543, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1544, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1545, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1546, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1547, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1548, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1549, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1550, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1551, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1552, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1553, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1554, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1555, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1556, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1557, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1558, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1559, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1560, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1561, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1562, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1563, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1564, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1565, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1566, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1567, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1568, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1569, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1570, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1571, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1572, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1573, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1574, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1575, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1576, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1577, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1578, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1579, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1580, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1581, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1582, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1583, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1584, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1585, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1586, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1587, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1587, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1587, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1588, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1589, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1590, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1591, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1592, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1593, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1594, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1595, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1596, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1596, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1596, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1596, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1596, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1597, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1598, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1599, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1599, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1600, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1601, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1602, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1603, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1604, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1605, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1605, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1606, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1607, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1608, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1609, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1610, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1610, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1610, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1610, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1610, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1610, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1611, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1611, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1611, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1611, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1611, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1612, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1612, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1612, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1612, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1612, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1613, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1613, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1613, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1613, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1613, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1614, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1614, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1614, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1614, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1614, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1614, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1615, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1615, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1615, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1615, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1615, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1615, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1615, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1616, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1616, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1616, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1616, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1616, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1616, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1617, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1617, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1617, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1617, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1617, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1618, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1619, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1620, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1621, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1622, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1623, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1624, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1625, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1626, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1627, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1628, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1629, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1629, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1629, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1629, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1629, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1629, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1629, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1629, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1629, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1629, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1630, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1631, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1632, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1633, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1634, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1635, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1636, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1637, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1638, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1639, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1640, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1641, "torch.no_grad"]], "nonzero() (in module torch)": [[1642, "torch.nonzero"]], "norm() (in module torch)": [[1643, "torch.norm"]], "normal() (in module torch)": [[1644, "torch.normal"]], "not_equal() (in module torch)": [[1645, "torch.not_equal"]], "numel() (in module torch)": [[1646, "torch.numel"]], "ones() (in module torch)": [[1647, "torch.ones"]], "ones_like() (in module torch)": [[1648, "torch.ones_like"]], "exportoptions (class in torch.onnx)": [[1649, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1650, "torch.onnx.ExportOutput"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1650, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1650, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1650, "torch.onnx.ExportOutput.diagnostic_context"]], "model_proto (torch.onnx.exportoutput property)": [[1650, "torch.onnx.ExportOutput.model_proto"]], "save() (torch.onnx.exportoutput method)": [[1650, "torch.onnx.ExportOutput.save"]], "exportoutputserializer (class in torch.onnx)": [[1651, "torch.onnx.ExportOutputSerializer"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1651, "torch.onnx.ExportOutputSerializer.serialize"]], "jitscalartype (class in torch.onnx)": [[1652, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1652, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1652, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1652, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1652, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1652, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1652, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1652, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1653, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1653, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1653, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1653, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1653, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1653, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1653, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1653, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1653, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1653, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1653, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1653, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1654, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1655, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1655, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1655, "torch.optim.ASGD.load_state_dict"]], "register_step_post_hook() (torch.optim.asgd method)": [[1655, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1655, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1655, "torch.optim.ASGD.state_dict"]], "zero_grad() (torch.optim.asgd method)": [[1655, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1656, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1656, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1656, "torch.optim.Adadelta.load_state_dict"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1656, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1656, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1656, "torch.optim.Adadelta.state_dict"]], "zero_grad() (torch.optim.adadelta method)": [[1656, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1657, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1657, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1657, "torch.optim.Adagrad.load_state_dict"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1657, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1657, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1657, "torch.optim.Adagrad.state_dict"]], "zero_grad() (torch.optim.adagrad method)": [[1657, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1658, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1658, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1658, "torch.optim.Adam.load_state_dict"]], "register_step_post_hook() (torch.optim.adam method)": [[1658, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1658, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1658, "torch.optim.Adam.state_dict"]], "zero_grad() (torch.optim.adam method)": [[1658, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1659, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1659, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1659, "torch.optim.AdamW.load_state_dict"]], "register_step_post_hook() (torch.optim.adamw method)": [[1659, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1659, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1659, "torch.optim.AdamW.state_dict"]], "zero_grad() (torch.optim.adamw method)": [[1659, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1660, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1660, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1660, "torch.optim.Adamax.load_state_dict"]], "register_step_post_hook() (torch.optim.adamax method)": [[1660, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1660, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1660, "torch.optim.Adamax.state_dict"]], "zero_grad() (torch.optim.adamax method)": [[1660, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1661, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1661, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1661, "torch.optim.LBFGS.load_state_dict"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1661, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1661, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1661, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1661, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1661, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1662, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1662, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1662, "torch.optim.NAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.nadam method)": [[1662, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1662, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1662, "torch.optim.NAdam.state_dict"]], "zero_grad() (torch.optim.nadam method)": [[1662, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1663, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1664, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1665, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1666, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1667, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1668, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1668, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1668, "torch.optim.RAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.radam method)": [[1668, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1668, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1668, "torch.optim.RAdam.state_dict"]], "zero_grad() (torch.optim.radam method)": [[1668, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1669, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1669, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1669, "torch.optim.RMSprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1669, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1669, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1669, "torch.optim.RMSprop.state_dict"]], "zero_grad() (torch.optim.rmsprop method)": [[1669, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1670, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1670, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1670, "torch.optim.Rprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rprop method)": [[1670, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1670, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1670, "torch.optim.Rprop.state_dict"]], "zero_grad() (torch.optim.rprop method)": [[1670, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1671, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1671, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1671, "torch.optim.SGD.load_state_dict"]], "register_step_post_hook() (torch.optim.sgd method)": [[1671, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1671, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1671, "torch.optim.SGD.state_dict"]], "zero_grad() (torch.optim.sgd method)": [[1671, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1672, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1672, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1672, "torch.optim.SparseAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1672, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1672, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1672, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1672, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1672, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1673, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1673, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1673, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1673, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1673, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1674, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1674, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1674, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1674, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1674, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1675, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1675, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1675, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1675, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1675, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1676, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1676, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1676, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1676, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1676, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1676, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1677, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1677, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1677, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1677, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1678, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1678, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1678, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1678, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1678, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1679, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1679, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1679, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1679, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1679, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1680, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1680, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1680, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1680, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1680, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1681, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1681, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1681, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1681, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1681, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1682, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1682, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1682, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1682, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1682, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1683, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1683, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1683, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1683, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1683, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1684, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1684, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1684, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1684, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1684, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1685, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1686, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1686, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1686, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1686, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1686, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1687, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1687, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1687, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1687, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1687, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1688, "torch.orgqr"]], "ormqr() (in module torch)": [[1689, "torch.ormqr"]], "outer() (in module torch)": [[1690, "torch.outer"]], "pca_lowrank() (in module torch)": [[1691, "torch.pca_lowrank"]], "permute() (in module torch)": [[1692, "torch.permute"]], "pinverse() (in module torch)": [[1693, "torch.pinverse"]], "poisson() (in module torch)": [[1694, "torch.poisson"]], "polar() (in module torch)": [[1695, "torch.polar"]], "polygamma() (in module torch)": [[1696, "torch.polygamma"]], "positive() (in module torch)": [[1697, "torch.positive"]], "pow() (in module torch)": [[1698, "torch.pow"]], "prod() (in module torch)": [[1699, "torch.prod"]], "promote_types() (in module torch)": [[1700, "torch.promote_types"]], "qr() (in module torch)": [[1701, "torch.qr"]], "quantile() (in module torch)": [[1702, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1703, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1704, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1705, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1706, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1707, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1708, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1708, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1708, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1708, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1708, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1709, "torch.rad2deg"]], "rand() (in module torch)": [[1710, "torch.rand"]], "rand_like() (in module torch)": [[1711, "torch.rand_like"]], "randint() (in module torch)": [[1712, "torch.randint"]], "randint_like() (in module torch)": [[1713, "torch.randint_like"]], "randn() (in module torch)": [[1714, "torch.randn"]], "randn_like() (in module torch)": [[1715, "torch.randn_like"]], "randperm() (in module torch)": [[1716, "torch.randperm"]], "range() (in module torch)": [[1717, "torch.range"]], "ravel() (in module torch)": [[1718, "torch.ravel"]], "real() (in module torch)": [[1719, "torch.real"]], "reciprocal() (in module torch)": [[1720, "torch.reciprocal"]], "remainder() (in module torch)": [[1721, "torch.remainder"]], "renorm() (in module torch)": [[1722, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1723, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1724, "torch.reshape"]], "resolve_conj() (in module torch)": [[1725, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1726, "torch.resolve_neg"]], "result_type() (in module torch)": [[1727, "torch.result_type"]], "roll() (in module torch)": [[1728, "torch.roll"]], "rot90() (in module torch)": [[1729, "torch.rot90"]], "round() (in module torch)": [[1730, "torch.round"]], "row_stack() (in module torch)": [[1731, "torch.row_stack"]], "rsqrt() (in module torch)": [[1732, "torch.rsqrt"]], "save() (in module torch)": [[1733, "torch.save"]], "scatter() (in module torch)": [[1734, "torch.scatter"]], "scatter_add() (in module torch)": [[1735, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1736, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1737, "torch.searchsorted"]], "seed() (in module torch)": [[1738, "torch.seed"]], "select() (in module torch)": [[1739, "torch.select"]], "select_scatter() (in module torch)": [[1740, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1741, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1742, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1743, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1744, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1745, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1746, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1747, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1748, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1749, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1750, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1751, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1752, "torch.set_warn_always"]], "sgn() (in module torch)": [[1753, "torch.sgn"]], "sigmoid() (in module torch)": [[1754, "torch.sigmoid"]], "sign() (in module torch)": [[1755, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1756, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1757, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1758, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1759, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1760, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1761, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1762, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1763, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1764, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1765, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1766, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1767, "torch.signbit"]], "sin() (in module torch)": [[1768, "torch.sin"]], "sinc() (in module torch)": [[1769, "torch.sinc"]], "sinh() (in module torch)": [[1770, "torch.sinh"]], "slice_scatter() (in module torch)": [[1771, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1772, "torch.slogdet"]], "smm() (in module torch)": [[1773, "torch.smm"]], "softmax() (in module torch)": [[1774, "torch.softmax"]], "sort() (in module torch)": [[1775, "torch.sort"]], "addmm() (in module torch.sparse)": [[1776, "torch.sparse.addmm"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1777, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1777, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1777, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1777, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1778, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1779, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1780, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1781, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1782, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1783, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1784, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1785, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1786, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1787, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1788, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1789, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1790, "torch.split"]], "sqrt() (in module torch)": [[1791, "torch.sqrt"]], "square() (in module torch)": [[1792, "torch.square"]], "squeeze() (in module torch)": [[1793, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1794, "torch.sspaddmm"]], "stack() (in module torch)": [[1795, "torch.stack"]], "std() (in module torch)": [[1796, "torch.std"]], "std_mean() (in module torch)": [[1797, "torch.std_mean"]], "stft() (in module torch)": [[1798, "torch.stft"]], "sub() (in module torch)": [[1799, "torch.sub"]], "subtract() (in module torch)": [[1800, "torch.subtract"]], "sum() (in module torch)": [[1801, "torch.sum"]], "svd() (in module torch)": [[1802, "torch.svd"]], "svd_lowrank() (in module torch)": [[1803, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1804, "torch.swapaxes"]], "swapdims() (in module torch)": [[1805, "torch.swapdims"]], "sym_float() (in module torch)": [[1806, "torch.sym_float"]], "sym_int() (in module torch)": [[1807, "torch.sym_int"]], "sym_max() (in module torch)": [[1808, "torch.sym_max"]], "sym_min() (in module torch)": [[1809, "torch.sym_min"]], "sym_not() (in module torch)": [[1810, "torch.sym_not"]], "t() (in module torch)": [[1811, "torch.t"]], "take() (in module torch)": [[1812, "torch.take"]], "take_along_dim() (in module torch)": [[1813, "torch.take_along_dim"]], "tan() (in module torch)": [[1814, "torch.tan"]], "tanh() (in module torch)": [[1815, "torch.tanh"]], "tensor() (in module torch)": [[1816, "torch.tensor"]], "tensor_split() (in module torch)": [[1817, "torch.tensor_split"]], "tensordot() (in module torch)": [[1818, "torch.tensordot"]], "tile() (in module torch)": [[1819, "torch.tile"]], "topk() (in module torch)": [[1820, "torch.topk"]], "trace() (in module torch)": [[1821, "torch.trace"]], "transpose() (in module torch)": [[1822, "torch.transpose"]], "trapezoid() (in module torch)": [[1823, "torch.trapezoid"]], "trapz() (in module torch)": [[1824, "torch.trapz"]], "triangular_solve() (in module torch)": [[1825, "torch.triangular_solve"]], "tril() (in module torch)": [[1826, "torch.tril"]], "tril_indices() (in module torch)": [[1827, "torch.tril_indices"]], "triu() (in module torch)": [[1828, "torch.triu"]], "triu_indices() (in module torch)": [[1829, "torch.triu_indices"]], "true_divide() (in module torch)": [[1830, "torch.true_divide"]], "trunc() (in module torch)": [[1831, "torch.trunc"]], "unbind() (in module torch)": [[1832, "torch.unbind"]], "unflatten() (in module torch)": [[1833, "torch.unflatten"]], "unique() (in module torch)": [[1834, "torch.unique"]], "unique_consecutive() (in module torch)": [[1835, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1836, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1837, "torch.use_deterministic_algorithms"]], "vander() (in module torch)": [[1838, "torch.vander"]], "var() (in module torch)": [[1839, "torch.var"]], "var_mean() (in module torch)": [[1840, "torch.var_mean"]], "vdot() (in module torch)": [[1841, "torch.vdot"]], "view_as_complex() (in module torch)": [[1842, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1843, "torch.view_as_real"]], "vmap() (in module torch)": [[1844, "torch.vmap"]], "vsplit() (in module torch)": [[1845, "torch.vsplit"]], "vstack() (in module torch)": [[1846, "torch.vstack"]], "where() (in module torch)": [[1847, "torch.where"]], "xlogy() (in module torch)": [[1848, "torch.xlogy"]], "zeros() (in module torch)": [[1849, "torch.zeros"]], "zeros_like() (in module torch)": [[1850, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1851, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1851, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1851, "torch.hub.help"]], "list() (in module torch.hub)": [[1851, "torch.hub.list"]], "load() (in module torch.hub)": [[1851, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1851, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1851, "torch.hub.set_dir"]], "torch.hub": [[1851, "module-torch.hub"]], "pytorch_jit": [[1854, "envvar-PYTORCH_JIT"]], "environment variable": [[1854, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1854, "torch.jit.export"]], "torch.jit": [[1854, "module-torch.jit"]], "torch.jit.mobile": [[1854, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1855, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1856, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1856, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1859, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1860, "module-torch.utils.jit"]], "library (class in torch.library)": [[1861, "torch.library.Library"]], "define() (torch.library.library method)": [[1861, "torch.library.Library.define"]], "impl() (torch.library.library method)": [[1861, "torch.library.Library.impl"]], "torch.linalg": [[1862, "module-torch.linalg"]], "torch._logging": [[1863, "module-torch._logging"]], "torch.masked": [[1864, "module-torch.masked"]], "torch.masked.maskedtensor": [[1864, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1865, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1866, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1866, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1867, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1867, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1867, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1867, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1867, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1867, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1867, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1867, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1867, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1867, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1867, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1867, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1867, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1867, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1867, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1867, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1867, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1867, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1867, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1867, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1867, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1868, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1869, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1869, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1869, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1869, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1869, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1869, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1869, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1871, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1871, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1871, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1871, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1871, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1871, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1872, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1872, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1872, "torch.nested.to_padded_tensor"]], "torch.nested": [[1872, "module-torch.nested"]], "torch.nn": [[1873, "module-torch.nn"]], "torch.nn.backends": [[1873, "module-torch.nn.backends"]], "torch.nn.modules": [[1873, "module-torch.nn.modules"]], "torch.nn.parallel": [[1873, "module-torch.nn.parallel"]], "torch.nn.utils": [[1873, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1873, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1875, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1875, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1875, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1875, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1875, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1875, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1875, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1875, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1875, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1875, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1875, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1875, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1875, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1875, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1875, "torch.nn.init.zeros_"]], "disable_log() (in module torch.onnx)": [[1895, "torch.onnx.disable_log"]], "dynamo_export() (in module torch.onnx)": [[1895, "torch.onnx.dynamo_export"]], "enable_log() (in module torch.onnx)": [[1895, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1895, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1895, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1895, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1895, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1895, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1895, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1895, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1895, "torch.onnx.unregister_custom_op_symbolic"]], "exportdiagnostic (class in torch.onnx._internal.diagnostics)": [[1896, "torch.onnx._internal.diagnostics.ExportDiagnostic"]], "record_cpp_call_stack() (torch.onnx._internal.diagnostics.exportdiagnostic method)": [[1896, "torch.onnx._internal.diagnostics.ExportDiagnostic.record_cpp_call_stack"]], "torch.onnx._internal.diagnostics": [[1896, "module-torch.onnx._internal.diagnostics"]], "optimizer (class in torch.optim)": [[1898, "torch.optim.Optimizer"]], "torch.optim": [[1898, "module-torch.optim"]], "directory (class in torch.package)": [[1899, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1899, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1899, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1899, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1899, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1899, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1899, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1899, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1899, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1899, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1899, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1899, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1899, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1899, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1899, "torch.package.PackageExporter.save_text"]], "torch.package": [[1899, "module-torch.package"]], "torch.package.analyze": [[1899, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1900, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1900, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1900, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1900, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1900, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1900, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1901, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1901, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1901, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1901, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1901, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1901, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1901, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1901, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1901, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1901, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1901, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1901, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1901, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1901, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1901, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1901, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1901, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1901, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1901, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1901, "module-torch.profiler"]], "torch.ao": [[1902, "module-torch.ao"]], "torch.ao.nn": [[1902, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1902, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1902, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1902, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1902, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1902, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1902, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1902, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1902, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1902, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1902, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1902, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1902, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1902, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1902, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1902, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1902, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1905, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1905, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1905, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1905, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1905, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1905, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1905, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1905, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1905, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1905, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1905, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1905, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1905, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1905, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1905, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1905, "module-torch.ao.nn.quantized.modules"]], "torch.nn.intrinsic": [[1905, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1905, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1905, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1905, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1905, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1905, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1905, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1905, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1905, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1905, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1905, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1905, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1905, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1905, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1905, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1905, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1905, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1905, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1905, "module-torch.quantization"]], "torch.quantization.fx": [[1905, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1906, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1906, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1906, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1906, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1906, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1906, "torch.random.set_rng_state"]], "torch.random": [[1906, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1907, "torch.distributed.rpc.BackendType"]], "rref (class in torch.distributed.rpc)": [[1907, "torch.distributed.rpc.RRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1907, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1907, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1907, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1907, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1907, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1907, "torch.distributed.autograd.backward"]], "context (class in torch.distributed.autograd)": [[1907, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1907, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1907, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1907, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1907, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1907, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1907, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1907, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1907, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1907, "torch.distributed.rpc.init_rpc"]], "name (torch.distributed.rpc.workerinfo property)": [[1907, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1907, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "remote() (in module torch.distributed.rpc)": [[1907, "torch.distributed.rpc.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1907, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1907, "torch.distributed.rpc.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1907, "torch.distributed.rpc.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1907, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1907, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1907, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1907, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1907, "torch.distributed.rpc.shutdown"]], "torch.distributed.autograd": [[1907, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1907, "module-torch.distributed.rpc"]], "torch.signal": [[1910, "module-torch.signal"]], "torch.signal.windows": [[1910, "module-torch.signal.windows"]], "torch.sparse": [[1911, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1912, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1912, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1912, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1912, "torch.special.digamma"]], "entr() (in module torch.special)": [[1912, "torch.special.entr"]], "erf() (in module torch.special)": [[1912, "torch.special.erf"]], "erfc() (in module torch.special)": [[1912, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1912, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1912, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1912, "torch.special.exp2"]], "expit() (in module torch.special)": [[1912, "torch.special.expit"]], "expm1() (in module torch.special)": [[1912, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1912, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1912, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1912, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1912, "torch.special.i0"]], "i0e() (in module torch.special)": [[1912, "torch.special.i0e"]], "i1() (in module torch.special)": [[1912, "torch.special.i1"]], "i1e() (in module torch.special)": [[1912, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1912, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1912, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1912, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1912, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1912, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1912, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1912, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1912, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1912, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1912, "torch.special.psi"]], "round() (in module torch.special)": [[1912, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1912, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1912, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1912, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1912, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1912, "torch.special.spherical_bessel_j0"]], "torch.special": [[1912, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1912, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1912, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1912, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1913, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1913, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1913, "torch.ByteStorage"]], "charstorage (class in torch)": [[1913, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1913, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1913, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1913, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1913, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1913, "torch.HalfStorage"]], "intstorage (class in torch)": [[1913, "torch.IntStorage"]], "longstorage (class in torch)": [[1913, "torch.LongStorage"]], "qint32storage (class in torch)": [[1913, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1913, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1913, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1913, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1913, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1913, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1913, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1913, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1913, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1913, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1913, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1913, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1913, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1913, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1913, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1913, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1913, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1913, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1913, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1913, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1913, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1913, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1913, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1913, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1913, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1913, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1913, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1913, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1913, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1913, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1913, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1913, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1913, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1913, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1913, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1913, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1913, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1913, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1913, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1913, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1913, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1913, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1913, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1913, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1913, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1913, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1913, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1913, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1913, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.half"]], "int() (torch.typedstorage method)": [[1913, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1913, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1913, "torch.UntypedStorage.is_cuda"]], "is_pinned() (torch.typedstorage method)": [[1913, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1913, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1913, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1913, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1913, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1913, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1913, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1913, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1913, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1913, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1913, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1913, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1913, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1913, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1913, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1913, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1913, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1914, "torch.device"]], "dtype (class in torch)": [[1914, "torch.dtype"]], "layout (class in torch)": [[1914, "torch.layout"]], "memory_format (class in torch)": [[1914, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1916, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1916, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1917, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1917, "torch.Tensor.T"]], "tensor (class in torch)": [[1917, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1917, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1917, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1918, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1918, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1918, "torch.testing.make_tensor"]], "torch.testing": [[1918, "module-torch.testing"]], "symbool (class in torch)": [[1919, "torch.SymBool"]], "symfloat (class in torch)": [[1919, "torch.SymFloat"]], "symint (class in torch)": [[1919, "torch.SymInt"]], "tag (class in torch)": [[1919, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1919, "torch.torch.default_generator"]], "name (torch.tag property)": [[1919, "torch.Tag.name"]], "torch": [[1919, "module-torch"]], "torch.contrib": [[1919, "module-torch.contrib"]], "torch.utils": [[1919, "module-torch.utils"]], "torch.utils.backcompat": [[1919, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1919, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1919, "module-torch.utils.model_dump"]], "logger (class in torch.ao.ns._numeric_suite)": [[1920, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1920, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1920, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1920, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1920, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1920, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1920, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1920, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1920, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1920, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1920, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1920, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1920, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1920, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1920, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1920, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1920, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1920, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1920, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1920, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1920, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1920, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1921, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1921, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1921, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1921, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1921, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1921, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1921, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1921, "module-torch.ao.ns._numeric_suite_fx"]], "get_ignored_functions() (in module torch.overrides)": [[1922, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1922, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1922, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1922, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1922, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1922, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1922, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1922, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1922, "torch.overrides.wrap_torch_function"]], "torch.finfo (class in torch)": [[1923, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1923, "torch.torch.iinfo"]]}})