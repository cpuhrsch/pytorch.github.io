Search.setIndex({"docnames": ["_dynamo", "amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "compile/custom-backends", "compile/deep-dive", "compile/faq", "compile/generated/torch.compile", "compile/get-started", "compile/guards-overview", "compile/index", "compile/nn-module", "compile/performance-dashboard", "compile/technical-overview", "compile/transformations", "compile/troubleshooting", "complex_numbers", "config_mod", "cpp_extension", "cpp_index", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx", "generated/onnx_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.set_multithreading_enabled", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.ExportOptions", "generated/torch.onnx.ExportOutput", "generated/torch.onnx.ExportOutputSerializer", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "ir", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_diagnostics", "onnx_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "type_info"], "filenames": ["_dynamo.rst", "amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "compile/custom-backends.rst", "compile/deep-dive.rst", "compile/faq.rst", "compile/generated/torch.compile.rst", "compile/get-started.rst", "compile/guards-overview.rst", "compile/index.rst", "compile/nn-module.rst", "compile/performance-dashboard.rst", "compile/technical-overview.rst", "compile/transformations.rst", "compile/troubleshooting.rst", "complex_numbers.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose.md", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success.md", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure.md", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd.md", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid.md", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node.md", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx.md", "generated/onnx_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference.md", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.set_multithreading_enabled.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.ExportOptions.rst", "generated/torch.onnx.ExportOutput.rst", "generated/torch.onnx.ExportOutputSerializer.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "ir.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_diagnostics.rst", "onnx_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.overrides.rst", "type_info.rst"], "titles": ["torch._dynamo", "Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Custom Backends", "TorchDynamo Deeper Dive", "Frequently Asked Questions", "torch.compile", "Getting Started", "Guards Overview", "torch.compile", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Technical Overview", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "Complex Numbers", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "DIAGSYS0001:arg-format-too-verbose", "FXE0001:fx-tracer-success", "FXE0002:fx-tracer-failure", "FXE0003:fx-frontend-aotautograd", "FXE0004:fx-pass-convert-neg-to-sigmoid", "FXE0005:fx-ir-add-node", "FXE0006:atenlib-symbolic-function", "FXE0007:atenlib-fx-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0009:fx-frontend-dynamo-make-fx", "FXE0010:fx-pass", "POE0001:node-missing-onnx-shape-inference", "POE0002:missing-custom-symbolic-function", "POE0003:missing-standard-symbolic-function", "POE0004:operator-supported-in-newer-opset-version", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "set_multithreading_enabled", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "ExportOptions", "ExportOutput", "ExportOutputSerializer", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "IRs", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "torch.onnx diagnostics", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "Type Info"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 64, 65, 77, 112, 143, 147, 188, 189, 199, 202, 214, 215, 216, 247, 252, 281, 282, 305, 313, 315, 327, 329, 332, 344, 436, 437, 438, 439, 440, 449, 477, 478, 483, 485, 486, 487, 488, 489, 490, 493, 494, 503, 505, 507, 513, 545, 555, 572, 573, 574, 576, 577, 578, 592, 593, 603, 606, 607, 669, 673, 675, 678, 682, 683, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 724, 725, 726, 733, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748, 749, 764, 765, 766, 767, 768, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 791, 799, 800, 801, 802, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 843, 848, 850, 851, 863, 864, 865, 866, 867, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 906, 909, 910, 913, 915, 918, 922, 923, 930, 932, 933, 936, 937, 939, 947, 948, 950, 955, 956, 957, 958, 959, 961, 962, 963, 966, 977, 979, 982, 983, 984, 986, 987, 990, 991, 992, 993, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1008, 1011, 1012, 1013, 1019, 1020, 1022, 1023, 1024, 1028, 1029, 1030, 1036, 1037, 1038, 1043, 1045, 1046, 1050, 1053, 1054, 1055, 1059, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1106, 1108, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1125, 1127, 1128, 1129, 1135, 1139, 1145, 1147, 1157, 1169, 1179, 1180, 1182, 1183, 1185, 1187, 1188, 1189, 1191, 1192, 1193, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1257, 1259, 1262, 1271, 1272, 1276, 1279, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1295, 1296, 1306, 1309, 1310, 1311, 1312, 1314, 1322, 1326, 1330, 1331, 1332, 1333, 1334, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1362, 1363, 1366, 1367, 1369, 1374, 1375, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1399, 1401, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1420, 1421, 1424, 1426, 1429, 1430, 1442, 1445, 1447, 1450, 1453, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1478, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1508, 1509, 1513, 1515, 1517, 1524, 1530, 1532, 1537, 1538, 1539, 1549, 1551, 1553, 1563, 1569, 1570, 1578, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1627, 1628, 1629, 1630, 1631, 1634, 1635, 1636, 1638, 1639, 1641, 1642, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1678, 1679, 1681, 1683, 1685, 1687, 1688, 1689, 1693, 1697, 1699, 1706, 1710, 1715, 1719, 1721, 1728, 1735, 1737, 1738, 1739, 1741, 1742, 1743, 1745, 1748, 1750, 1751, 1769, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1792, 1794, 1795, 1796, 1799, 1800, 1802, 1803, 1809, 1811, 1815, 1817, 1821, 1823, 1831, 1832, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "modul": [0, 1, 2, 4, 6, 7, 9, 12, 14, 15, 18, 22, 23, 24, 26, 29, 33, 35, 37, 39, 40, 44, 46, 49, 52, 53, 57, 58, 60, 478, 669, 675, 678, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 727, 728, 729, 734, 735, 736, 745, 750, 751, 752, 753, 754, 777, 778, 779, 780, 781, 782, 786, 788, 789, 791, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 827, 828, 829, 843, 846, 847, 848, 849, 850, 851, 853, 902, 903, 910, 922, 942, 1001, 1111, 1120, 1121, 1123, 1157, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1197, 1198, 1199, 1253, 1276, 1286, 1322, 1326, 1332, 1333, 1334, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1367, 1369, 1377, 1378, 1379, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1415, 1416, 1424, 1425, 1430, 1442, 1447, 1453, 1457, 1504, 1505, 1578, 1585, 1594, 1595, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1634, 1635, 1636, 1638, 1731, 1775, 1842, 1849, 1850, 1856, 1861, 1863, 1865, 1867, 1869, 1870, 1873, 1877, 1878, 1879, 1882, 1885, 1887, 1888, 1890, 1892, 1893, 1896, 1898, 1899, 1902, 1903, 1905, 1908, 1909, 1910, 1914, 1917, 1918, 1919, 1920], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 77, 80, 81, 90, 143, 146, 147, 148, 163, 165, 168, 171, 172, 173, 183, 184, 188, 189, 199, 201, 202, 211, 216, 232, 246, 247, 259, 282, 289, 303, 305, 307, 311, 313, 315, 317, 320, 321, 322, 323, 324, 325, 327, 328, 330, 332, 333, 334, 335, 344, 385, 392, 394, 398, 439, 449, 462, 463, 472, 474, 477, 478, 483, 485, 486, 487, 488, 489, 490, 493, 494, 503, 505, 507, 510, 513, 514, 526, 532, 533, 534, 546, 549, 569, 570, 572, 573, 574, 576, 577, 578, 592, 593, 596, 603, 606, 607, 609, 613, 669, 670, 672, 673, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 752, 753, 754, 757, 758, 761, 762, 763, 764, 765, 766, 767, 768, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 788, 790, 791, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 813, 815, 816, 822, 827, 828, 829, 846, 847, 848, 850, 851, 854, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 906, 909, 910, 911, 912, 913, 915, 918, 920, 922, 923, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 939, 940, 941, 942, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 967, 968, 970, 972, 975, 976, 977, 979, 983, 984, 987, 990, 991, 992, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1042, 1043, 1044, 1045, 1046, 1047, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1065, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1135, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1201, 1202, 1203, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1264, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1302, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1445, 1446, 1447, 1449, 1450, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1478, 1481, 1482, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1524, 1525, 1530, 1532, 1534, 1535, 1537, 1538, 1539, 1548, 1549, 1551, 1553, 1554, 1555, 1556, 1557, 1563, 1566, 1569, 1570, 1578, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1627, 1628, 1629, 1630, 1631, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1642, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1708, 1709, 1710, 1712, 1713, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1730, 1731, 1735, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1766, 1768, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1794, 1795, 1796, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1861, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "an": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 17, 18, 20, 21, 22, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 81, 143, 147, 183, 214, 234, 246, 305, 307, 313, 315, 320, 327, 503, 505, 507, 526, 534, 549, 596, 603, 606, 669, 676, 677, 724, 730, 731, 732, 745, 749, 754, 768, 774, 776, 778, 781, 785, 804, 806, 812, 815, 843, 850, 851, 853, 867, 868, 869, 878, 880, 881, 882, 884, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 904, 905, 906, 913, 929, 939, 942, 947, 948, 950, 956, 958, 959, 961, 968, 969, 970, 971, 972, 990, 991, 998, 999, 1001, 1013, 1015, 1025, 1029, 1030, 1040, 1053, 1055, 1057, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1095, 1098, 1106, 1108, 1111, 1112, 1115, 1116, 1117, 1119, 1121, 1123, 1124, 1127, 1135, 1143, 1144, 1145, 1179, 1180, 1182, 1185, 1186, 1189, 1192, 1193, 1195, 1197, 1198, 1199, 1200, 1211, 1212, 1217, 1218, 1223, 1225, 1227, 1230, 1231, 1235, 1238, 1240, 1243, 1244, 1251, 1253, 1254, 1271, 1273, 1276, 1282, 1299, 1304, 1313, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1362, 1363, 1366, 1374, 1378, 1379, 1382, 1383, 1384, 1386, 1396, 1397, 1398, 1399, 1401, 1402, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1433, 1442, 1445, 1447, 1448, 1449, 1453, 1458, 1460, 1461, 1462, 1465, 1467, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1488, 1489, 1490, 1491, 1492, 1493, 1498, 1504, 1505, 1507, 1508, 1509, 1513, 1524, 1531, 1532, 1534, 1535, 1537, 1538, 1539, 1563, 1567, 1582, 1584, 1585, 1588, 1594, 1598, 1599, 1600, 1601, 1604, 1605, 1606, 1613, 1630, 1637, 1639, 1641, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1699, 1704, 1705, 1706, 1725, 1727, 1731, 1739, 1742, 1751, 1757, 1777, 1780, 1781, 1785, 1788, 1796, 1800, 1814, 1815, 1831, 1832, 1833, 1835, 1840, 1841, 1842, 1843, 1848, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "earli": [0, 17, 29, 33, 43, 64, 1353, 1354, 1355, 1359, 1850, 1900, 1901, 1918, 1919], "prototyp": [0, 29, 35, 669, 890, 892, 896, 897, 898, 1191, 1850, 1861, 1862, 1865, 1869, 1870, 1886, 1891, 1903, 1905, 1912, 1918, 1919], "subject": [0, 3, 4, 18, 20, 24, 29, 35, 39, 40, 57, 64, 65, 854, 1563, 1594, 1855, 1868, 1869, 1875, 1880, 1893, 1894, 1898, 1899, 1900, 1901, 1905, 1912, 1917, 1918, 1919], "chang": [0, 1, 2, 3, 4, 8, 16, 17, 18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 40, 41, 43, 51, 57, 58, 61, 62, 64, 65, 132, 214, 246, 313, 449, 486, 489, 507, 510, 545, 606, 669, 808, 866, 897, 898, 947, 948, 955, 956, 957, 966, 977, 979, 990, 991, 998, 999, 1001, 1043, 1091, 1111, 1129, 1135, 1156, 1179, 1182, 1192, 1193, 1212, 1223, 1225, 1226, 1227, 1230, 1243, 1283, 1354, 1357, 1375, 1384, 1414, 1445, 1466, 1478, 1513, 1537, 1538, 1539, 1563, 1585, 1586, 1594, 1596, 1597, 1603, 1606, 1607, 1636, 1640, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1675, 1678, 1679, 1681, 1683, 1685, 1699, 1739, 1743, 1780, 1791, 1794, 1795, 1796, 1820, 1837, 1838, 1849, 1850, 1852, 1861, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1883, 1884, 1886, 1889, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1907, 1909, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919], "allow_in_graph": [0, 1850], "fn": [0, 2, 12, 16, 17, 18, 22, 23, 43, 44, 45, 49, 54, 57, 65, 902, 903, 1113, 1119, 1123, 1182, 1183, 1194, 1199, 1414, 1842, 1852, 1854, 1855, 1859, 1867, 1875, 1885, 1905], "sourc": [0, 1, 2, 3, 4, 5, 6, 10, 14, 15, 17, 23, 25, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 54, 57, 64, 65, 143, 189, 202, 304, 305, 313, 332, 343, 388, 393, 394, 407, 408, 444, 462, 478, 503, 505, 507, 510, 513, 536, 545, 546, 548, 575, 592, 595, 598, 599, 613, 669, 684, 685, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 825, 826, 827, 828, 829, 830, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 862, 875, 876, 877, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 908, 909, 921, 923, 924, 928, 930, 932, 942, 943, 956, 957, 958, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1055, 1059, 1106, 1108, 1124, 1130, 1131, 1134, 1153, 1154, 1155, 1157, 1158, 1163, 1168, 1169, 1170, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1253, 1254, 1274, 1283, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1478, 1479, 1483, 1485, 1486, 1487, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1510, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1531, 1532, 1534, 1535, 1536, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1556, 1558, 1559, 1561, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1573, 1574, 1575, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1689, 1706, 1731, 1736, 1739, 1740, 1741, 1742, 1743, 1745, 1748, 1749, 1750, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1775, 1781, 1788, 1796, 1801, 1804, 1805, 1806, 1807, 1808, 1816, 1835, 1849, 1852, 1853, 1854, 1859, 1861, 1862, 1863, 1864, 1865, 1867, 1869, 1870, 1873, 1882, 1884, 1885, 1889, 1893, 1894, 1896, 1898, 1899, 1900, 1904, 1905, 1906, 1911, 1914, 1916, 1917, 1918, 1919, 1920], "custom": [0, 1, 2, 4, 6, 15, 17, 21, 26, 27, 32, 35, 36, 37, 38, 39, 40, 45, 48, 49, 51, 57, 489, 782, 786, 803, 804, 805, 806, 827, 829, 848, 849, 850, 851, 888, 942, 957, 966, 1030, 1182, 1414, 1457, 1462, 1463, 1608, 1617, 1634, 1675, 1850, 1856, 1859, 1861, 1867, 1868, 1875, 1885, 1890, 1891, 1892, 1894, 1903, 1904, 1918], "which": [0, 1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 36, 37, 39, 40, 41, 42, 43, 45, 50, 51, 52, 53, 54, 57, 61, 62, 64, 65, 81, 143, 281, 305, 307, 309, 311, 313, 327, 463, 477, 478, 489, 503, 505, 507, 526, 549, 593, 596, 606, 613, 673, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 749, 753, 770, 779, 780, 786, 788, 808, 812, 815, 827, 843, 846, 847, 848, 850, 865, 869, 874, 881, 882, 883, 884, 890, 891, 892, 893, 894, 895, 896, 902, 903, 906, 913, 926, 929, 932, 936, 942, 952, 953, 954, 955, 956, 961, 968, 969, 970, 971, 972, 983, 984, 985, 1012, 1014, 1019, 1020, 1031, 1033, 1038, 1042, 1043, 1044, 1045, 1046, 1055, 1071, 1076, 1079, 1083, 1086, 1089, 1094, 1095, 1096, 1097, 1098, 1103, 1106, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1127, 1144, 1156, 1167, 1173, 1179, 1180, 1182, 1183, 1185, 1191, 1192, 1193, 1197, 1214, 1217, 1218, 1227, 1231, 1233, 1234, 1237, 1238, 1242, 1244, 1245, 1247, 1250, 1251, 1253, 1259, 1275, 1282, 1287, 1304, 1310, 1313, 1314, 1320, 1321, 1322, 1324, 1325, 1326, 1328, 1329, 1332, 1333, 1334, 1337, 1343, 1344, 1346, 1347, 1350, 1351, 1358, 1365, 1366, 1375, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1400, 1404, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1419, 1420, 1442, 1445, 1447, 1449, 1453, 1462, 1463, 1495, 1512, 1513, 1515, 1525, 1532, 1550, 1551, 1569, 1570, 1578, 1585, 1594, 1601, 1603, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1636, 1638, 1641, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1689, 1701, 1715, 1719, 1721, 1722, 1726, 1728, 1735, 1739, 1748, 1750, 1768, 1773, 1776, 1777, 1779, 1780, 1788, 1791, 1815, 1820, 1821, 1824, 1825, 1826, 1827, 1831, 1832, 1834, 1835, 1842, 1849, 1852, 1854, 1855, 1857, 1861, 1862, 1863, 1864, 1865, 1867, 1869, 1870, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "function": [0, 1, 3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 37, 39, 40, 42, 43, 45, 49, 50, 52, 53, 57, 60, 62, 64, 81, 112, 143, 188, 252, 281, 290, 313, 478, 483, 486, 507, 530, 545, 669, 678, 682, 683, 687, 688, 737, 746, 747, 749, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 782, 786, 787, 789, 803, 804, 805, 806, 813, 815, 827, 830, 843, 846, 848, 850, 851, 852, 866, 867, 882, 883, 884, 885, 896, 897, 898, 902, 903, 906, 909, 911, 920, 922, 930, 932, 936, 939, 942, 947, 948, 955, 956, 957, 959, 961, 963, 966, 983, 984, 987, 992, 993, 998, 999, 1001, 1002, 1003, 1004, 1006, 1011, 1012, 1019, 1020, 1022, 1023, 1024, 1028, 1038, 1043, 1045, 1046, 1053, 1055, 1059, 1071, 1072, 1074, 1094, 1098, 1101, 1102, 1103, 1106, 1108, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1127, 1128, 1135, 1139, 1140, 1141, 1143, 1145, 1153, 1154, 1155, 1157, 1169, 1179, 1180, 1181, 1182, 1183, 1185, 1187, 1188, 1192, 1193, 1194, 1195, 1197, 1199, 1201, 1202, 1203, 1205, 1210, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1233, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1257, 1259, 1268, 1271, 1272, 1276, 1279, 1282, 1284, 1286, 1287, 1288, 1306, 1309, 1310, 1326, 1330, 1336, 1337, 1339, 1340, 1341, 1348, 1352, 1356, 1359, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1380, 1382, 1383, 1384, 1385, 1400, 1403, 1404, 1406, 1413, 1414, 1419, 1420, 1422, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1459, 1461, 1462, 1463, 1465, 1467, 1469, 1470, 1471, 1586, 1590, 1591, 1594, 1601, 1602, 1606, 1617, 1627, 1628, 1629, 1631, 1634, 1635, 1636, 1639, 1641, 1642, 1646, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1664, 1666, 1667, 1668, 1669, 1671, 1674, 1675, 1677, 1680, 1681, 1682, 1687, 1688, 1689, 1693, 1699, 1706, 1710, 1715, 1728, 1737, 1738, 1739, 1742, 1745, 1751, 1759, 1763, 1764, 1769, 1772, 1774, 1775, 1776, 1777, 1779, 1785, 1792, 1796, 1802, 1803, 1811, 1815, 1817, 1821, 1831, 1832, 1833, 1835, 1839, 1840, 1841, 1842, 1843, 1848, 1849, 1850, 1851, 1856, 1859, 1861, 1864, 1865, 1867, 1869, 1873, 1876, 1878, 1879, 1880, 1882, 1885, 1886, 1889, 1891, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1912, 1914, 1916, 1917, 1918, 1919], "torchdynamo": [0, 9, 12, 15, 16, 17, 21, 669, 942, 1647, 1850, 1861], "includ": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 16, 19, 20, 23, 26, 27, 32, 33, 35, 37, 49, 52, 53, 57, 65, 313, 507, 572, 757, 758, 848, 850, 1083, 1085, 1143, 1180, 1182, 1183, 1211, 1290, 1291, 1327, 1328, 1329, 1335, 1337, 1351, 1360, 1368, 1401, 1410, 1411, 1412, 1414, 1420, 1458, 1459, 1460, 1461, 1464, 1480, 1481, 1482, 1497, 1510, 1530, 1594, 1628, 1629, 1631, 1764, 1824, 1825, 1826, 1827, 1849, 1852, 1854, 1855, 1862, 1863, 1865, 1867, 1875, 1877, 1878, 1882, 1885, 1886, 1891, 1893, 1899, 1900, 1905, 1907, 1914, 1917, 1920], "gener": [0, 2, 3, 4, 8, 9, 12, 13, 14, 16, 17, 19, 22, 23, 26, 32, 33, 35, 41, 45, 46, 53, 57, 58, 59, 146, 147, 166, 250, 278, 369, 412, 445, 472, 597, 669, 898, 912, 987, 990, 998, 999, 1002, 1003, 1022, 1023, 1025, 1026, 1027, 1055, 1077, 1078, 1112, 1123, 1134, 1139, 1158, 1186, 1191, 1202, 1213, 1218, 1227, 1244, 1245, 1249, 1254, 1274, 1282, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1304, 1350, 1361, 1375, 1457, 1465, 1466, 1478, 1585, 1602, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1635, 1642, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1687, 1689, 1692, 1706, 1708, 1710, 1711, 1712, 1714, 1736, 1749, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1801, 1816, 1820, 1836, 1842, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1861, 1863, 1868, 1873, 1875, 1878, 1880, 1882, 1883, 1885, 1886, 1892, 1893, 1896, 1897, 1899, 1904, 1905, 1906, 1909, 1912, 1914, 1916, 1918, 1920], "graph": [0, 6, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 35, 37, 41, 57, 132, 143, 214, 215, 669, 736, 781, 782, 804, 805, 806, 812, 815, 882, 888, 896, 942, 956, 991, 996, 1001, 1112, 1182, 1185, 1186, 1191, 1193, 1197, 1594, 1649, 1651, 1656, 1657, 1850, 1855, 1861, 1863, 1871, 1874, 1879, 1880, 1883, 1886, 1887, 1893, 1897, 1901, 1902, 1903, 1905, 1906, 1907, 1909, 1914, 1919], "similar": [0, 8, 10, 14, 17, 19, 23, 32, 35, 41, 49, 57, 62, 64, 65, 483, 505, 701, 702, 703, 704, 705, 706, 709, 719, 720, 721, 722, 734, 735, 745, 753, 791, 866, 881, 923, 928, 941, 1101, 1102, 1182, 1348, 1349, 1361, 1374, 1377, 1378, 1379, 1414, 1462, 1495, 1627, 1641, 1642, 1693, 1721, 1728, 1777, 1811, 1817, 1833, 1854, 1855, 1867, 1868, 1870, 1875, 1877, 1878, 1880, 1881, 1883, 1889, 1893, 1897, 1898, 1900, 1905, 1906, 1909, 1910, 1915, 1921], "fx": [0, 9, 12, 13, 14, 16, 17, 21, 22, 23, 736, 804, 805, 806, 807, 849, 1112, 1850, 1894, 1901, 1902], "wrap": [0, 1, 2, 12, 14, 17, 21, 23, 27, 32, 33, 35, 39, 45, 54, 57, 61, 62, 65, 252, 779, 780, 959, 1112, 1182, 1197, 1351, 1414, 1453, 1589, 1594, 1604, 1630, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1852, 1853, 1855, 1862, 1874, 1875, 1878, 1879, 1880, 1881, 1886, 1892, 1893, 1898, 1899, 1900, 1905, 1906, 1917, 1919, 1920], "my_custom_funct": [0, 65], "optim": [0, 1, 2, 3, 8, 9, 12, 14, 15, 17, 21, 23, 24, 26, 27, 33, 35, 36, 37, 41, 57, 65, 808, 897, 906, 942, 1055, 1121, 1182, 1186, 1191, 1193, 1197, 1198, 1237, 1254, 1332, 1333, 1334, 1350, 1357, 1377, 1378, 1379, 1414, 1417, 1418, 1419, 1420, 1446, 1453, 1461, 1563, 1585, 1594, 1601, 1606, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1689, 1850, 1852, 1854, 1863, 1869, 1873, 1877, 1878, 1879, 1880, 1882, 1883, 1886, 1888, 1893, 1899, 1900, 1909], "def": [0, 1, 2, 12, 14, 15, 16, 17, 18, 22, 23, 32, 33, 35, 36, 37, 41, 43, 44, 45, 49, 50, 53, 54, 55, 57, 59, 61, 62, 63, 64, 65, 390, 781, 782, 850, 851, 879, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 942, 1059, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1157, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1192, 1193, 1196, 1197, 1198, 1199, 1414, 1415, 1416, 1424, 1425, 1463, 1585, 1594, 1606, 1639, 1648, 1649, 1775, 1842, 1849, 1852, 1854, 1855, 1859, 1869, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1886, 1888, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1905, 1906, 1907, 1920], "x": [0, 1, 2, 4, 12, 13, 14, 15, 16, 17, 18, 23, 24, 26, 32, 33, 35, 41, 43, 49, 57, 59, 60, 62, 63, 64, 65, 166, 246, 250, 278, 281, 303, 305, 307, 309, 313, 344, 369, 439, 474, 483, 489, 547, 549, 572, 596, 597, 606, 681, 747, 749, 759, 768, 769, 773, 774, 785, 788, 791, 809, 810, 850, 851, 867, 873, 875, 876, 877, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 924, 925, 926, 929, 930, 942, 947, 950, 953, 954, 998, 999, 1038, 1045, 1049, 1050, 1055, 1059, 1069, 1070, 1071, 1072, 1074, 1075, 1080, 1081, 1083, 1085, 1089, 1090, 1092, 1095, 1096, 1097, 1105, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1135, 1152, 1156, 1157, 1169, 1187, 1188, 1192, 1193, 1196, 1197, 1198, 1199, 1203, 1213, 1226, 1227, 1231, 1234, 1238, 1242, 1244, 1247, 1248, 1249, 1250, 1251, 1254, 1259, 1260, 1261, 1269, 1272, 1275, 1276, 1283, 1308, 1309, 1313, 1314, 1320, 1321, 1330, 1331, 1332, 1333, 1334, 1336, 1348, 1350, 1356, 1362, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1403, 1404, 1405, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1429, 1431, 1432, 1433, 1434, 1441, 1443, 1444, 1445, 1446, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1462, 1463, 1466, 1487, 1511, 1513, 1517, 1518, 1524, 1528, 1532, 1543, 1548, 1553, 1557, 1559, 1564, 1565, 1566, 1570, 1571, 1573, 1574, 1575, 1582, 1585, 1602, 1604, 1606, 1627, 1628, 1629, 1630, 1631, 1636, 1639, 1640, 1641, 1648, 1651, 1654, 1675, 1689, 1690, 1701, 1703, 1717, 1720, 1721, 1723, 1724, 1726, 1727, 1731, 1735, 1745, 1773, 1777, 1791, 1794, 1795, 1796, 1802, 1803, 1809, 1815, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1833, 1834, 1836, 1837, 1838, 1840, 1841, 1842, 1845, 1849, 1852, 1853, 1854, 1855, 1856, 1867, 1868, 1869, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1886, 1887, 1892, 1893, 1897, 1900, 1905, 1909, 1910, 1912, 1914, 1915, 1917, 1918, 1919], "add": [0, 1, 2, 4, 8, 12, 13, 22, 23, 27, 28, 32, 35, 37, 39, 49, 52, 57, 63, 64, 65, 91, 282, 305, 503, 505, 675, 676, 677, 680, 736, 737, 746, 779, 782, 827, 848, 850, 851, 971, 1001, 1012, 1055, 1112, 1182, 1193, 1322, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1390, 1391, 1392, 1393, 1394, 1395, 1414, 1416, 1420, 1421, 1425, 1428, 1515, 1556, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1792, 1849, 1851, 1852, 1853, 1854, 1855, 1859, 1863, 1865, 1868, 1870, 1874, 1876, 1877, 1880, 1881, 1884, 1885, 1886, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1909, 1912, 1913, 1914, 1918, 1919, 1920], "1": [0, 1, 2, 4, 12, 13, 14, 16, 17, 22, 23, 24, 26, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 50, 52, 55, 57, 61, 62, 63, 64, 65, 81, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 129, 144, 145, 166, 184, 198, 201, 218, 220, 221, 222, 234, 246, 250, 255, 278, 281, 303, 304, 305, 307, 309, 313, 344, 369, 393, 394, 436, 438, 439, 445, 462, 472, 474, 478, 483, 486, 489, 503, 505, 507, 526, 527, 531, 533, 543, 544, 545, 547, 549, 550, 551, 552, 553, 570, 572, 573, 574, 576, 577, 596, 597, 604, 606, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 701, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 719, 720, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 740, 741, 742, 745, 746, 747, 749, 759, 761, 762, 763, 764, 767, 771, 772, 774, 785, 797, 798, 808, 809, 810, 811, 814, 816, 844, 850, 851, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 883, 886, 888, 889, 890, 891, 892, 893, 894, 895, 902, 903, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 940, 941, 943, 944, 947, 948, 949, 950, 951, 952, 953, 954, 955, 961, 967, 998, 999, 1014, 1018, 1025, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1125, 1126, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1152, 1153, 1156, 1157, 1159, 1167, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1186, 1192, 1193, 1197, 1198, 1201, 1202, 1203, 1205, 1206, 1207, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1299, 1302, 1303, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1452, 1453, 1456, 1457, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1478, 1480, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1511, 1512, 1513, 1515, 1517, 1519, 1520, 1521, 1522, 1523, 1531, 1533, 1537, 1538, 1539, 1545, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1557, 1561, 1562, 1563, 1564, 1565, 1567, 1569, 1570, 1571, 1573, 1578, 1579, 1580, 1581, 1582, 1585, 1594, 1601, 1602, 1606, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1690, 1692, 1693, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1735, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1768, 1769, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1851, 1853, 1854, 1855, 1856, 1859, 1862, 1863, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1876, 1877, 1878, 1880, 1882, 1883, 1884, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921], "return": [0, 1, 2, 3, 4, 6, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 52, 54, 57, 58, 59, 61, 62, 63, 64, 65, 81, 112, 146, 148, 163, 165, 168, 171, 172, 173, 183, 184, 188, 189, 199, 201, 202, 209, 211, 212, 214, 225, 232, 234, 246, 252, 259, 281, 289, 303, 311, 315, 317, 318, 320, 321, 322, 323, 325, 329, 331, 333, 344, 369, 385, 426, 436, 437, 438, 439, 440, 449, 463, 464, 465, 466, 467, 469, 474, 478, 486, 487, 488, 503, 505, 514, 526, 532, 533, 545, 546, 547, 548, 549, 569, 570, 571, 572, 578, 592, 593, 596, 598, 602, 603, 606, 673, 681, 682, 684, 685, 686, 687, 688, 724, 755, 756, 759, 760, 764, 765, 766, 767, 770, 773, 780, 781, 782, 783, 803, 804, 805, 806, 825, 829, 830, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 906, 907, 908, 911, 912, 913, 920, 921, 923, 926, 928, 930, 931, 932, 933, 934, 935, 936, 937, 939, 941, 942, 943, 947, 948, 950, 951, 952, 954, 955, 956, 958, 959, 961, 965, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 995, 996, 997, 998, 999, 1000, 1001, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1126, 1127, 1130, 1131, 1132, 1133, 1134, 1138, 1139, 1140, 1142, 1143, 1144, 1148, 1152, 1156, 1157, 1158, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1178, 1179, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1206, 1207, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1262, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1290, 1291, 1293, 1299, 1304, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1322, 1323, 1324, 1325, 1330, 1331, 1348, 1349, 1350, 1351, 1358, 1362, 1363, 1374, 1380, 1381, 1404, 1405, 1406, 1407, 1408, 1409, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1428, 1442, 1445, 1446, 1447, 1448, 1449, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1483, 1485, 1486, 1487, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1556, 1558, 1559, 1561, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1576, 1578, 1579, 1580, 1581, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1598, 1600, 1601, 1602, 1603, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1648, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1689, 1690, 1692, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1735, 1736, 1737, 1738, 1744, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1769, 1773, 1775, 1776, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1799, 1800, 1801, 1809, 1810, 1811, 1812, 1813, 1814, 1816, 1818, 1819, 1820, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1838, 1840, 1841, 1842, 1845, 1847, 1848, 1849, 1852, 1856, 1859, 1863, 1864, 1865, 1867, 1869, 1870, 1873, 1874, 1875, 1877, 1878, 1880, 1881, 1883, 1884, 1885, 1886, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "Will": [0, 11, 19, 35, 57, 65, 1785, 1854, 1869, 1893], "captur": [0, 2, 13, 14, 17, 23, 27, 65, 669, 956, 958, 990, 996, 1001, 1185, 1656, 1657, 1852, 1856, 1861, 1880, 1881, 1884, 1893, 1897, 1900, 1919], "singl": [0, 3, 4, 6, 14, 16, 17, 18, 21, 22, 23, 26, 33, 35, 37, 39, 40, 41, 43, 45, 51, 52, 57, 58, 60, 61, 62, 63, 64, 65, 246, 669, 684, 685, 755, 756, 757, 758, 761, 762, 763, 803, 883, 890, 891, 892, 893, 894, 895, 896, 911, 920, 924, 950, 954, 998, 1001, 1111, 1113, 1114, 1117, 1119, 1123, 1139, 1140, 1144, 1167, 1181, 1182, 1197, 1198, 1201, 1259, 1283, 1295, 1296, 1320, 1321, 1324, 1325, 1328, 1329, 1331, 1342, 1343, 1344, 1346, 1347, 1350, 1351, 1362, 1363, 1369, 1382, 1383, 1386, 1408, 1409, 1414, 1422, 1426, 1427, 1442, 1453, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1508, 1509, 1510, 1537, 1538, 1539, 1581, 1587, 1589, 1592, 1593, 1594, 1598, 1599, 1600, 1636, 1637, 1656, 1657, 1659, 1664, 1670, 1675, 1696, 1722, 1788, 1794, 1795, 1832, 1833, 1835, 1837, 1838, 1842, 1850, 1852, 1854, 1855, 1862, 1863, 1867, 1869, 1870, 1875, 1877, 1878, 1880, 1881, 1883, 1886, 1888, 1889, 1890, 1891, 1893, 1896, 1897, 1898, 1899, 1900, 1906, 1907, 1909, 1912, 1915, 1916, 1919], "contain": [0, 1, 2, 3, 4, 6, 12, 17, 20, 22, 23, 24, 26, 27, 32, 35, 36, 39, 40, 41, 43, 45, 46, 50, 53, 57, 64, 65, 81, 143, 147, 184, 188, 201, 282, 303, 305, 307, 311, 313, 462, 474, 533, 592, 596, 675, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 749, 803, 826, 830, 866, 881, 882, 890, 891, 892, 893, 894, 895, 896, 906, 910, 911, 912, 920, 922, 926, 949, 950, 954, 957, 968, 969, 970, 971, 972, 1001, 1055, 1089, 1090, 1092, 1098, 1118, 1119, 1122, 1123, 1139, 1140, 1143, 1144, 1152, 1156, 1173, 1180, 1182, 1183, 1188, 1189, 1192, 1197, 1198, 1201, 1212, 1218, 1219, 1220, 1221, 1223, 1225, 1227, 1228, 1244, 1253, 1271, 1275, 1282, 1304, 1310, 1322, 1331, 1350, 1351, 1357, 1358, 1361, 1366, 1367, 1369, 1374, 1384, 1385, 1406, 1414, 1415, 1416, 1421, 1424, 1429, 1431, 1442, 1446, 1453, 1465, 1496, 1504, 1505, 1507, 1578, 1585, 1588, 1589, 1594, 1602, 1603, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1634, 1635, 1638, 1640, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1689, 1692, 1717, 1731, 1735, 1795, 1796, 1800, 1816, 1823, 1825, 1827, 1832, 1833, 1838, 1842, 1850, 1852, 1854, 1855, 1856, 1862, 1865, 1869, 1870, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1889, 1891, 1893, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1905, 1907, 1909, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920], "disallow_in_graph": [0, 1850], "exclud": [0, 6, 10, 13, 33, 52, 65, 1144, 1358, 1505, 1553, 1651, 1824, 1825, 1826, 1827, 1884, 1897, 1906], "forc": [0, 1, 2, 13, 26, 29, 57, 449, 869, 994, 1185, 1196, 1200, 1750, 1849, 1852, 1855, 1874, 1878, 1914, 1917], "break": [0, 8, 13, 15, 17, 19, 41, 60, 65, 669, 882, 942, 1182, 1227, 1414, 1728, 1748, 1850, 1856, 1861, 1879, 1896], "sub": [0, 22, 45, 57, 64, 551, 803, 850, 851, 1193, 1197, 1198, 1279, 1282, 1284, 1426, 1427, 1457, 1458, 1460, 1720, 1798, 1815, 1849, 1851, 1852, 1853, 1868, 1870, 1875, 1893, 1895, 1909, 1912], "give": [0, 1, 4, 5, 8, 10, 16, 18, 20, 23, 29, 32, 33, 37, 39, 51, 57, 65, 897, 898, 954, 1073, 1075, 1076, 1078, 1082, 1091, 1115, 1116, 1117, 1195, 1211, 1218, 1342, 1343, 1344, 1419, 1465, 1466, 1601, 1640, 1656, 1657, 1796, 1835, 1849, 1852, 1867, 1869, 1873, 1875, 1878, 1880, 1881, 1883, 1884, 1886, 1890, 1893, 1896, 1898, 1909, 1920], "two": [0, 1, 2, 4, 5, 6, 7, 9, 12, 16, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 41, 43, 49, 50, 52, 53, 57, 61, 62, 65, 572, 573, 574, 576, 577, 596, 606, 669, 681, 683, 749, 782, 876, 879, 892, 897, 930, 932, 961, 965, 1004, 1006, 1034, 1035, 1043, 1052, 1055, 1061, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1101, 1102, 1111, 1121, 1143, 1145, 1171, 1180, 1182, 1192, 1195, 1202, 1205, 1207, 1212, 1214, 1217, 1218, 1223, 1224, 1229, 1234, 1237, 1238, 1240, 1241, 1243, 1245, 1250, 1253, 1276, 1279, 1282, 1284, 1287, 1311, 1328, 1330, 1331, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1361, 1366, 1374, 1375, 1381, 1383, 1384, 1405, 1406, 1408, 1414, 1417, 1418, 1419, 1421, 1422, 1428, 1429, 1445, 1446, 1461, 1462, 1463, 1465, 1485, 1486, 1496, 1515, 1525, 1532, 1548, 1556, 1563, 1601, 1606, 1628, 1638, 1640, 1641, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1674, 1675, 1677, 1681, 1700, 1715, 1728, 1780, 1785, 1800, 1816, 1820, 1821, 1823, 1839, 1843, 1849, 1851, 1852, 1854, 1855, 1859, 1861, 1862, 1868, 1869, 1870, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1886, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1901, 1905, 1906, 1907, 1909, 1910, 1914, 1915, 1916, 1918, 1919], "each": [0, 1, 2, 3, 6, 10, 13, 14, 15, 16, 17, 19, 20, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 50, 53, 54, 55, 57, 58, 60, 62, 63, 65, 90, 112, 146, 147, 390, 394, 483, 503, 505, 507, 534, 596, 606, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 675, 682, 684, 685, 688, 724, 749, 781, 829, 830, 848, 850, 851, 854, 866, 875, 876, 877, 878, 880, 881, 882, 887, 896, 910, 913, 922, 926, 930, 931, 933, 936, 940, 942, 954, 967, 968, 972, 1001, 1004, 1006, 1012, 1014, 1018, 1021, 1027, 1032, 1033, 1034, 1035, 1038, 1039, 1050, 1053, 1055, 1072, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1090, 1092, 1096, 1097, 1099, 1104, 1108, 1113, 1114, 1118, 1122, 1123, 1124, 1135, 1141, 1143, 1144, 1145, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1182, 1197, 1198, 1203, 1235, 1253, 1254, 1269, 1271, 1279, 1281, 1282, 1283, 1284, 1287, 1289, 1295, 1296, 1304, 1310, 1312, 1322, 1327, 1330, 1331, 1335, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1366, 1367, 1369, 1374, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1394, 1395, 1399, 1401, 1405, 1406, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1428, 1429, 1431, 1442, 1445, 1446, 1448, 1453, 1456, 1462, 1463, 1465, 1483, 1485, 1486, 1491, 1492, 1493, 1496, 1497, 1499, 1500, 1501, 1504, 1505, 1506, 1510, 1513, 1523, 1525, 1548, 1549, 1551, 1553, 1556, 1563, 1576, 1585, 1590, 1591, 1594, 1627, 1628, 1630, 1640, 1641, 1642, 1648, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1692, 1696, 1697, 1700, 1707, 1715, 1720, 1721, 1726, 1730, 1735, 1748, 1759, 1765, 1781, 1782, 1783, 1784, 1786, 1787, 1788, 1799, 1800, 1815, 1817, 1818, 1821, 1832, 1833, 1836, 1842, 1843, 1849, 1854, 1855, 1861, 1868, 1869, 1870, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1896, 1898, 1899, 1900, 1905, 1906, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1919], "op": [0, 2, 5, 12, 14, 15, 16, 17, 22, 23, 35, 65, 143, 493, 513, 593, 746, 781, 782, 783, 812, 815, 843, 850, 851, 882, 888, 896, 932, 942, 962, 977, 979, 983, 984, 998, 999, 1024, 1028, 1030, 1112, 1132, 1183, 1195, 1197, 1198, 1259, 1430, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1687, 1746, 1823, 1850, 1851, 1855, 1859, 1861, 1862, 1863, 1865, 1868, 1869, 1877, 1878, 1879, 1880, 1888, 1897, 1899, 1900, 1901, 1902, 1903, 1911, 1913, 1915, 1919], "forbid_in_graph": [0, 1850], "assert": [0, 22, 23, 32, 33, 41, 59, 61, 62, 63, 65, 613, 900, 902, 903, 1113, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1180, 1185, 1186, 1191, 1650, 1842, 1854, 1856, 1880, 1881, 1886, 1897, 1900, 1916], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 81, 90, 143, 246, 311, 313, 327, 328, 331, 369, 394, 439, 462, 472, 477, 489, 503, 507, 533, 569, 578, 606, 669, 678, 679, 680, 686, 724, 745, 749, 750, 752, 753, 754, 768, 771, 772, 774, 775, 776, 781, 782, 783, 784, 785, 788, 803, 804, 805, 806, 808, 809, 810, 811, 814, 829, 843, 847, 848, 849, 850, 851, 854, 863, 864, 875, 876, 877, 879, 882, 888, 890, 891, 892, 893, 894, 895, 897, 898, 911, 920, 921, 923, 924, 926, 929, 935, 942, 944, 949, 950, 953, 954, 957, 958, 959, 961, 962, 964, 969, 981, 992, 998, 1001, 1002, 1012, 1022, 1029, 1038, 1043, 1047, 1050, 1055, 1071, 1072, 1073, 1074, 1076, 1078, 1083, 1085, 1091, 1094, 1096, 1097, 1101, 1102, 1103, 1111, 1112, 1117, 1119, 1121, 1122, 1123, 1127, 1135, 1139, 1140, 1142, 1144, 1157, 1159, 1171, 1172, 1174, 1175, 1178, 1179, 1180, 1182, 1183, 1186, 1188, 1189, 1192, 1195, 1197, 1198, 1203, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1234, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1248, 1251, 1252, 1253, 1254, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1273, 1274, 1276, 1279, 1282, 1283, 1284, 1287, 1289, 1304, 1308, 1309, 1310, 1311, 1312, 1322, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1358, 1359, 1361, 1366, 1367, 1368, 1369, 1374, 1377, 1378, 1379, 1380, 1381, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1431, 1442, 1445, 1446, 1447, 1453, 1457, 1459, 1461, 1462, 1463, 1465, 1466, 1478, 1484, 1485, 1486, 1496, 1497, 1504, 1505, 1506, 1507, 1513, 1524, 1525, 1548, 1551, 1553, 1556, 1563, 1581, 1582, 1583, 1584, 1585, 1590, 1591, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1606, 1613, 1627, 1631, 1634, 1635, 1636, 1637, 1639, 1641, 1642, 1648, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1677, 1680, 1681, 1693, 1699, 1700, 1706, 1715, 1718, 1719, 1726, 1728, 1739, 1740, 1743, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1792, 1795, 1796, 1799, 1800, 1809, 1811, 1815, 1817, 1818, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1835, 1836, 1837, 1838, 1842, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1861, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 1921], "present": [0, 4, 10, 19, 32, 35, 52, 57, 1180, 1271, 1322, 1384, 1424, 1627, 1650, 1796, 1849, 1864, 1867, 1868, 1869, 1874, 1875, 1878, 1880, 1883, 1886, 1893, 1897, 1906, 1909, 1912], "while": [0, 1, 3, 4, 6, 8, 9, 14, 16, 17, 23, 24, 26, 32, 33, 35, 36, 37, 41, 54, 57, 62, 64, 65, 684, 685, 724, 843, 873, 881, 959, 1030, 1112, 1144, 1182, 1185, 1197, 1198, 1254, 1310, 1322, 1338, 1375, 1377, 1378, 1379, 1384, 1414, 1420, 1432, 1445, 1453, 1457, 1532, 1594, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1641, 1735, 1856, 1861, 1862, 1869, 1870, 1874, 1875, 1878, 1881, 1882, 1883, 1886, 1888, 1890, 1893, 1896, 1898, 1900, 1903, 1905, 1907, 1909, 1910, 1913, 1914, 1915], "trace": [0, 1, 2, 12, 14, 15, 16, 17, 19, 23, 27, 29, 32, 33, 35, 45, 67, 68, 69, 904, 905, 906, 942, 1055, 1185, 1193, 1194, 1198, 1254, 1295, 1296, 1297, 1652, 1850, 1853, 1854, 1855, 1857, 1875, 1878, 1879, 1891, 1895, 1897, 1914], "If": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 26, 27, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 64, 65, 90, 143, 147, 188, 199, 202, 246, 307, 311, 313, 436, 437, 438, 439, 440, 449, 462, 472, 486, 489, 507, 510, 526, 534, 569, 570, 572, 573, 574, 576, 577, 592, 596, 606, 669, 675, 678, 679, 680, 682, 684, 685, 686, 688, 724, 745, 749, 753, 768, 770, 774, 783, 784, 806, 809, 810, 811, 814, 843, 847, 850, 854, 863, 864, 865, 866, 867, 868, 869, 878, 880, 881, 882, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 910, 911, 913, 920, 922, 923, 924, 926, 930, 932, 933, 934, 935, 936, 937, 944, 947, 948, 949, 953, 954, 955, 958, 959, 961, 963, 966, 968, 970, 972, 979, 990, 996, 1001, 1002, 1022, 1025, 1036, 1037, 1038, 1042, 1043, 1044, 1045, 1046, 1055, 1056, 1057, 1058, 1068, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1098, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1122, 1123, 1124, 1135, 1139, 1140, 1142, 1143, 1144, 1145, 1156, 1159, 1173, 1179, 1182, 1185, 1186, 1187, 1189, 1191, 1193, 1194, 1197, 1198, 1201, 1202, 1203, 1207, 1211, 1212, 1217, 1218, 1220, 1221, 1223, 1224, 1225, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1244, 1245, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1264, 1268, 1269, 1271, 1273, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1299, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1322, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1362, 1363, 1366, 1367, 1368, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1399, 1401, 1405, 1406, 1407, 1408, 1409, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1445, 1446, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1469, 1470, 1471, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1508, 1509, 1513, 1515, 1517, 1524, 1525, 1530, 1532, 1534, 1535, 1537, 1538, 1539, 1548, 1549, 1550, 1553, 1556, 1557, 1563, 1569, 1570, 1581, 1582, 1594, 1595, 1598, 1599, 1601, 1602, 1603, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1622, 1623, 1627, 1628, 1629, 1630, 1634, 1635, 1636, 1639, 1640, 1641, 1645, 1646, 1648, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1687, 1688, 1693, 1697, 1699, 1700, 1704, 1705, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1720, 1721, 1726, 1728, 1731, 1735, 1737, 1739, 1742, 1743, 1748, 1750, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1773, 1776, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1791, 1794, 1795, 1796, 1799, 1800, 1814, 1815, 1817, 1818, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1832, 1833, 1835, 1836, 1837, 1838, 1842, 1847, 1848, 1849, 1852, 1855, 1857, 1859, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1920], "you": [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 35, 39, 40, 41, 43, 44, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 143, 246, 327, 439, 489, 669, 678, 723, 724, 737, 746, 770, 878, 879, 880, 881, 882, 887, 888, 890, 891, 892, 896, 924, 942, 956, 979, 990, 992, 1001, 1002, 1022, 1055, 1111, 1112, 1115, 1116, 1117, 1118, 1123, 1157, 1182, 1186, 1187, 1194, 1197, 1198, 1199, 1227, 1245, 1253, 1276, 1283, 1286, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1384, 1410, 1411, 1412, 1414, 1419, 1420, 1421, 1429, 1448, 1457, 1459, 1461, 1466, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1524, 1530, 1563, 1581, 1582, 1585, 1594, 1602, 1628, 1636, 1639, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1681, 1699, 1722, 1731, 1739, 1782, 1783, 1784, 1786, 1787, 1791, 1842, 1849, 1852, 1854, 1855, 1857, 1859, 1862, 1863, 1865, 1867, 1868, 1870, 1873, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1920], "want": [0, 1, 2, 8, 9, 10, 12, 13, 14, 16, 18, 19, 22, 26, 32, 35, 40, 41, 49, 57, 59, 60, 61, 62, 64, 65, 439, 486, 489, 770, 780, 827, 994, 1111, 1112, 1194, 1197, 1198, 1283, 1362, 1363, 1466, 1508, 1509, 1524, 1582, 1594, 1595, 1636, 1639, 1656, 1657, 1731, 1849, 1859, 1862, 1874, 1875, 1877, 1878, 1880, 1881, 1883, 1886, 1893, 1896, 1897, 1900, 1909, 1914, 1915, 1918], "instead": [0, 2, 4, 6, 9, 10, 12, 14, 17, 19, 22, 23, 26, 32, 33, 35, 37, 40, 41, 43, 49, 52, 53, 57, 60, 61, 62, 65, 214, 398, 449, 489, 503, 737, 746, 757, 758, 782, 806, 815, 869, 879, 890, 891, 892, 893, 896, 897, 926, 932, 1090, 1092, 1116, 1117, 1118, 1119, 1122, 1123, 1128, 1169, 1180, 1182, 1183, 1187, 1211, 1212, 1218, 1220, 1236, 1239, 1245, 1251, 1282, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1348, 1350, 1351, 1353, 1354, 1355, 1359, 1366, 1374, 1380, 1381, 1382, 1383, 1384, 1405, 1406, 1407, 1408, 1409, 1414, 1417, 1418, 1419, 1421, 1428, 1429, 1441, 1445, 1446, 1447, 1453, 1462, 1480, 1481, 1482, 1485, 1486, 1496, 1506, 1513, 1525, 1537, 1538, 1539, 1548, 1556, 1569, 1594, 1636, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1675, 1681, 1704, 1705, 1715, 1735, 1739, 1781, 1796, 1800, 1835, 1842, 1852, 1854, 1855, 1862, 1869, 1873, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1888, 1890, 1891, 1892, 1893, 1896, 1897, 1899, 1900, 1903, 1906, 1909, 1916, 1917, 1919, 1920], "us": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 30, 32, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 81, 90, 112, 143, 147, 184, 201, 311, 313, 327, 334, 335, 398, 426, 439, 449, 477, 478, 486, 489, 503, 507, 510, 533, 546, 572, 573, 574, 576, 577, 606, 669, 675, 678, 701, 702, 703, 704, 705, 706, 709, 718, 719, 720, 721, 722, 724, 737, 746, 749, 757, 758, 761, 762, 763, 768, 770, 774, 775, 776, 779, 782, 783, 784, 785, 788, 791, 796, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 820, 821, 822, 823, 826, 843, 847, 848, 850, 851, 854, 867, 868, 869, 878, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 893, 896, 897, 898, 902, 903, 906, 909, 910, 911, 912, 920, 922, 923, 930, 932, 934, 942, 947, 950, 952, 955, 956, 957, 958, 959, 961, 963, 964, 966, 969, 979, 980, 983, 984, 990, 994, 998, 1000, 1001, 1002, 1004, 1006, 1007, 1012, 1013, 1022, 1024, 1025, 1031, 1036, 1037, 1038, 1047, 1055, 1056, 1058, 1068, 1069, 1070, 1073, 1075, 1083, 1085, 1089, 1091, 1098, 1100, 1103, 1109, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1127, 1128, 1132, 1133, 1135, 1139, 1140, 1141, 1142, 1156, 1157, 1169, 1179, 1180, 1182, 1183, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1201, 1203, 1205, 1213, 1217, 1218, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1234, 1235, 1236, 1238, 1239, 1245, 1246, 1247, 1251, 1252, 1253, 1254, 1259, 1262, 1268, 1271, 1272, 1275, 1276, 1281, 1282, 1283, 1286, 1292, 1304, 1309, 1311, 1312, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1374, 1375, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1400, 1401, 1402, 1407, 1408, 1409, 1410, 1411, 1414, 1416, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1447, 1450, 1453, 1461, 1462, 1463, 1464, 1466, 1469, 1470, 1471, 1478, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1508, 1509, 1513, 1515, 1522, 1524, 1525, 1532, 1537, 1538, 1539, 1549, 1551, 1557, 1563, 1567, 1569, 1570, 1578, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1628, 1629, 1630, 1634, 1635, 1636, 1638, 1639, 1641, 1642, 1645, 1648, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1678, 1679, 1681, 1682, 1684, 1685, 1687, 1697, 1699, 1700, 1701, 1704, 1705, 1706, 1708, 1710, 1712, 1714, 1715, 1721, 1728, 1731, 1736, 1737, 1739, 1740, 1741, 1743, 1745, 1746, 1747, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1768, 1773, 1775, 1776, 1778, 1779, 1782, 1783, 1784, 1785, 1786, 1787, 1796, 1799, 1800, 1801, 1814, 1818, 1821, 1825, 1827, 1832, 1834, 1835, 1839, 1842, 1847, 1849, 1850, 1851, 1852, 1853, 1855, 1856, 1857, 1859, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1877, 1879, 1881, 1882, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1894, 1899, 1901, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920], "todo": [0, 19, 66, 71, 72, 73, 74, 75, 76, 815, 848, 850, 851, 1919], "voz": 0, "we": [0, 1, 2, 3, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 32, 33, 35, 37, 39, 40, 41, 42, 43, 52, 53, 55, 57, 58, 59, 60, 61, 62, 64, 65, 486, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 768, 774, 777, 778, 780, 782, 783, 827, 846, 848, 850, 851, 854, 882, 883, 886, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 911, 920, 955, 961, 1012, 1055, 1073, 1075, 1076, 1077, 1078, 1085, 1090, 1091, 1092, 1106, 1115, 1116, 1118, 1123, 1135, 1139, 1140, 1156, 1180, 1182, 1185, 1186, 1193, 1195, 1197, 1237, 1240, 1245, 1253, 1254, 1273, 1304, 1322, 1330, 1331, 1380, 1414, 1466, 1513, 1515, 1524, 1582, 1589, 1594, 1601, 1603, 1612, 1614, 1617, 1621, 1622, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1672, 1678, 1683, 1700, 1842, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1862, 1863, 1867, 1868, 1869, 1870, 1875, 1878, 1880, 1881, 1882, 1883, 1884, 1886, 1888, 1889, 1892, 1893, 1896, 1897, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1912, 1914, 1917, 1918, 1919], "now": [0, 1, 2, 16, 17, 22, 23, 35, 40, 42, 49, 53, 54, 57, 62, 65, 214, 486, 889, 896, 970, 998, 1019, 1020, 1106, 1129, 1179, 1180, 1186, 1197, 1231, 1411, 1430, 1466, 1585, 1606, 1617, 1659, 1740, 1791, 1796, 1852, 1862, 1868, 1869, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1886, 1887, 1893, 1897, 1900, 1906, 1907, 1909, 1917, 1920], "have": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 32, 35, 36, 37, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 65, 81, 146, 147, 214, 215, 305, 307, 313, 327, 390, 394, 439, 449, 462, 477, 478, 493, 503, 505, 507, 510, 533, 606, 669, 678, 682, 684, 685, 686, 688, 804, 806, 830, 869, 878, 882, 890, 892, 902, 903, 911, 912, 920, 929, 930, 954, 961, 970, 971, 1001, 1012, 1046, 1054, 1061, 1075, 1085, 1090, 1092, 1106, 1111, 1112, 1123, 1124, 1125, 1139, 1140, 1143, 1144, 1156, 1157, 1179, 1181, 1182, 1185, 1186, 1189, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1203, 1204, 1213, 1217, 1218, 1234, 1241, 1242, 1245, 1247, 1253, 1262, 1264, 1269, 1276, 1279, 1281, 1282, 1283, 1284, 1286, 1287, 1304, 1309, 1310, 1312, 1314, 1322, 1326, 1330, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1351, 1357, 1358, 1362, 1363, 1368, 1373, 1377, 1378, 1379, 1406, 1414, 1417, 1418, 1419, 1420, 1421, 1461, 1463, 1495, 1504, 1505, 1508, 1509, 1513, 1530, 1548, 1550, 1553, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1598, 1599, 1601, 1603, 1606, 1630, 1634, 1639, 1641, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1697, 1723, 1724, 1738, 1751, 1774, 1777, 1781, 1782, 1783, 1784, 1786, 1787, 1794, 1795, 1796, 1799, 1800, 1811, 1815, 1821, 1823, 1835, 1837, 1838, 1840, 1842, 1844, 1849, 1852, 1853, 1854, 1855, 1857, 1859, 1861, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1901, 1904, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1920], "some": [0, 1, 2, 4, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26, 31, 32, 33, 35, 37, 40, 41, 43, 45, 53, 54, 57, 60, 62, 63, 64, 65, 468, 486, 556, 678, 737, 942, 1008, 1012, 1015, 1055, 1076, 1078, 1086, 1087, 1088, 1103, 1112, 1123, 1157, 1179, 1180, 1182, 1183, 1192, 1195, 1197, 1227, 1245, 1251, 1276, 1283, 1286, 1322, 1326, 1330, 1331, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1374, 1377, 1378, 1379, 1380, 1381, 1384, 1405, 1406, 1414, 1417, 1418, 1419, 1421, 1428, 1429, 1445, 1446, 1462, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1498, 1525, 1530, 1548, 1551, 1556, 1563, 1585, 1594, 1595, 1596, 1597, 1601, 1634, 1669, 1675, 1681, 1699, 1719, 1743, 1750, 1764, 1800, 1842, 1849, 1852, 1853, 1854, 1855, 1856, 1859, 1860, 1861, 1862, 1863, 1867, 1868, 1869, 1874, 1875, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1914], "more": [0, 1, 2, 3, 4, 5, 9, 10, 12, 14, 16, 17, 21, 23, 24, 26, 27, 28, 31, 32, 33, 35, 36, 41, 42, 43, 44, 48, 51, 52, 53, 54, 57, 60, 61, 62, 63, 65, 143, 246, 247, 305, 313, 478, 483, 485, 488, 503, 505, 507, 534, 607, 669, 724, 760, 769, 773, 782, 843, 848, 849, 850, 862, 875, 876, 877, 879, 881, 882, 888, 890, 892, 896, 897, 898, 902, 903, 913, 921, 924, 926, 932, 933, 934, 935, 958, 959, 961, 963, 964, 980, 999, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1019, 1020, 1021, 1025, 1033, 1038, 1044, 1053, 1055, 1059, 1071, 1072, 1074, 1076, 1095, 1096, 1097, 1098, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1130, 1131, 1135, 1144, 1145, 1157, 1163, 1167, 1169, 1170, 1182, 1195, 1198, 1211, 1212, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1251, 1254, 1257, 1260, 1262, 1272, 1273, 1295, 1296, 1299, 1310, 1322, 1326, 1331, 1336, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1357, 1358, 1359, 1375, 1384, 1410, 1411, 1412, 1414, 1420, 1426, 1427, 1428, 1429, 1441, 1453, 1461, 1478, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1502, 1504, 1505, 1513, 1516, 1517, 1518, 1519, 1524, 1528, 1532, 1533, 1543, 1550, 1557, 1558, 1559, 1561, 1563, 1564, 1565, 1566, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1581, 1582, 1583, 1584, 1585, 1594, 1595, 1601, 1603, 1604, 1639, 1640, 1641, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1687, 1698, 1699, 1725, 1731, 1735, 1745, 1775, 1776, 1800, 1821, 1823, 1835, 1842, 1843, 1849, 1850, 1851, 1852, 1854, 1855, 1861, 1862, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1873, 1875, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1889, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1906, 1907, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1920, 1921], "robust": [0, 4, 1254, 1867, 1886], "document": [0, 9, 10, 11, 12, 14, 17, 19, 22, 28, 32, 35, 57, 58, 65, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 862, 863, 864, 865, 927, 958, 959, 961, 1012, 1055, 1127, 1130, 1131, 1163, 1170, 1182, 1295, 1296, 1311, 1322, 1357, 1358, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1414, 1603, 1612, 1621, 1641, 1698, 1725, 1742, 1835, 1849, 1852, 1854, 1855, 1867, 1868, 1869, 1871, 1874, 1880, 1882, 1886, 1890, 1891, 1893, 1896, 1897, 1900, 1901, 1902, 1905, 1909, 1913, 1917], "would": [0, 3, 4, 6, 9, 10, 12, 14, 16, 19, 22, 23, 24, 26, 32, 35, 41, 43, 45, 52, 53, 57, 59, 62, 65, 143, 436, 437, 438, 439, 440, 687, 749, 783, 843, 882, 886, 896, 932, 1056, 1058, 1076, 1116, 1117, 1180, 1182, 1183, 1187, 1189, 1197, 1198, 1295, 1296, 1327, 1328, 1329, 1330, 1331, 1366, 1380, 1384, 1407, 1408, 1409, 1414, 1424, 1429, 1513, 1524, 1585, 1594, 1595, 1627, 1639, 1708, 1712, 1714, 1725, 1735, 1814, 1815, 1820, 1852, 1854, 1855, 1868, 1869, 1870, 1871, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1891, 1893, 1896, 1897, 1898, 1900, 1905, 1906, 1907, 1909], "amiss": 0, "graph_break": [0, 1850], "mark_dynam": [0, 1850], "t": [0, 1, 2, 3, 4, 5, 8, 9, 10, 16, 17, 18, 23, 24, 32, 33, 35, 37, 41, 42, 45, 49, 51, 52, 58, 60, 62, 63, 64, 65, 143, 305, 307, 313, 449, 526, 560, 676, 677, 686, 749, 770, 774, 784, 812, 815, 866, 867, 868, 869, 878, 880, 882, 883, 886, 888, 891, 896, 933, 934, 935, 940, 954, 956, 959, 980, 998, 999, 1029, 1053, 1071, 1076, 1077, 1078, 1079, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1106, 1107, 1108, 1111, 1112, 1113, 1123, 1124, 1135, 1145, 1179, 1180, 1182, 1183, 1185, 1188, 1189, 1193, 1195, 1197, 1200, 1202, 1211, 1212, 1218, 1220, 1221, 1224, 1231, 1239, 1240, 1245, 1253, 1254, 1262, 1275, 1288, 1289, 1302, 1311, 1331, 1335, 1337, 1342, 1343, 1344, 1351, 1357, 1358, 1366, 1375, 1377, 1378, 1379, 1380, 1384, 1401, 1414, 1429, 1445, 1447, 1457, 1465, 1466, 1484, 1488, 1489, 1490, 1497, 1504, 1505, 1525, 1530, 1549, 1569, 1582, 1585, 1588, 1589, 1594, 1595, 1601, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1628, 1630, 1631, 1642, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1673, 1683, 1689, 1695, 1699, 1716, 1741, 1742, 1751, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1774, 1777, 1796, 1800, 1801, 1811, 1814, 1820, 1823, 1842, 1843, 1849, 1851, 1852, 1853, 1854, 1856, 1865, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1920], "index": [0, 4, 23, 27, 32, 33, 37, 41, 50, 65, 184, 201, 273, 304, 305, 306, 307, 308, 309, 311, 313, 314, 462, 463, 502, 503, 504, 505, 506, 507, 508, 509, 684, 685, 806, 843, 866, 881, 926, 974, 977, 1034, 1035, 1075, 1115, 1116, 1117, 1121, 1123, 1124, 1153, 1154, 1155, 1156, 1180, 1198, 1203, 1211, 1229, 1247, 1261, 1269, 1271, 1275, 1279, 1282, 1283, 1284, 1287, 1304, 1310, 1313, 1314, 1322, 1337, 1350, 1357, 1358, 1415, 1416, 1421, 1424, 1425, 1463, 1465, 1504, 1505, 1550, 1612, 1614, 1621, 1622, 1627, 1640, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1684, 1685, 1700, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1769, 1779, 1780, 1782, 1783, 1784, 1786, 1787, 1796, 1810, 1831, 1834, 1835, 1842, 1850, 1851, 1852, 1853, 1855, 1862, 1867, 1868, 1869, 1870, 1875, 1878, 1879, 1881, 1884, 1890, 1895, 1907, 1909, 1912, 1913, 1914, 1915, 1916], "mark": [0, 14, 37, 52, 64, 65, 815, 886, 887, 1295, 1296, 1594, 1651, 1852, 1854, 1875, 1879, 1880, 1886, 1897, 1899, 1906, 1915], "tensor": [0, 1, 3, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 22, 23, 26, 28, 29, 32, 33, 35, 36, 37, 39, 41, 42, 57, 60, 61, 62, 63, 64, 65, 81, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 709, 721, 723, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 739, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 773, 774, 775, 776, 777, 778, 779, 783, 787, 788, 789, 790, 791, 808, 809, 810, 811, 813, 814, 816, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 902, 903, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 968, 969, 970, 971, 972, 979, 987, 988, 994, 998, 1001, 1004, 1008, 1019, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1164, 1167, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1185, 1186, 1188, 1189, 1192, 1193, 1195, 1197, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1293, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1322, 1326, 1327, 1330, 1331, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1366, 1367, 1368, 1374, 1380, 1381, 1384, 1385, 1401, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1446, 1447, 1448, 1449, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1590, 1591, 1594, 1595, 1596, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851, 1852, 1854, 1855, 1859, 1862, 1871, 1873, 1874, 1876, 1877, 1878, 1879, 1881, 1882, 1884, 1886, 1887, 1888, 1889, 1890, 1892, 1895, 1896, 1897, 1898, 1899, 1901, 1904, 1905, 1906, 1910, 1911, 1914, 1916, 1918, 1919, 1920], "dynam": [0, 1, 13, 14, 15, 18, 20, 21, 23, 26, 27, 32, 669, 718, 722, 749, 750, 751, 752, 753, 754, 783, 804, 815, 818, 833, 839, 840, 841, 842, 847, 848, 942, 957, 1189, 1195, 1197, 1253, 1601, 1854, 1855, 1856, 1873, 1878, 1886, 1889, 1893, 1896, 1897, 1901], "dim": [0, 35, 40, 41, 62, 63, 65, 105, 107, 108, 109, 111, 127, 128, 129, 177, 197, 200, 203, 204, 205, 206, 207, 208, 222, 252, 256, 273, 304, 305, 306, 307, 308, 309, 313, 314, 346, 372, 384, 399, 401, 402, 403, 406, 420, 421, 422, 423, 427, 428, 444, 453, 461, 470, 481, 482, 484, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 526, 527, 530, 531, 533, 536, 541, 542, 544, 549, 554, 562, 567, 572, 573, 574, 576, 577, 579, 594, 595, 598, 599, 600, 601, 604, 606, 682, 684, 685, 686, 688, 863, 864, 865, 892, 893, 895, 929, 936, 945, 953, 955, 970, 972, 1034, 1035, 1036, 1037, 1038, 1047, 1053, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1095, 1113, 1123, 1124, 1135, 1145, 1153, 1154, 1155, 1156, 1159, 1203, 1213, 1214, 1234, 1238, 1248, 1250, 1251, 1261, 1269, 1279, 1281, 1282, 1284, 1287, 1289, 1302, 1309, 1310, 1311, 1312, 1313, 1314, 1322, 1349, 1350, 1351, 1354, 1358, 1360, 1365, 1380, 1385, 1404, 1420, 1421, 1422, 1447, 1449, 1461, 1463, 1464, 1495, 1496, 1512, 1515, 1524, 1532, 1537, 1538, 1539, 1548, 1549, 1551, 1553, 1557, 1563, 1569, 1570, 1578, 1594, 1602, 1608, 1612, 1614, 1621, 1622, 1635, 1638, 1641, 1690, 1697, 1700, 1720, 1721, 1726, 1727, 1732, 1733, 1734, 1737, 1738, 1769, 1772, 1773, 1776, 1779, 1781, 1788, 1791, 1793, 1794, 1795, 1796, 1799, 1811, 1815, 1816, 1817, 1818, 1821, 1822, 1830, 1831, 1832, 1833, 1834, 1837, 1838, 1842, 1843, 1850, 1851, 1852, 1853, 1869, 1870, 1881, 1882, 1891, 1893, 1895, 1909, 1910, 1912, 1918], "note": [0, 2, 3, 4, 6, 9, 14, 16, 22, 23, 24, 26, 27, 29, 31, 32, 33, 35, 37, 39, 40, 41, 42, 43, 50, 52, 54, 57, 61, 63, 64, 65, 143, 214, 369, 489, 490, 503, 505, 507, 724, 730, 731, 732, 780, 782, 783, 784, 788, 830, 850, 854, 873, 882, 888, 890, 891, 892, 893, 894, 895, 896, 898, 932, 955, 1030, 1038, 1043, 1055, 1076, 1106, 1108, 1123, 1124, 1135, 1157, 1169, 1179, 1180, 1182, 1183, 1188, 1254, 1276, 1295, 1296, 1330, 1331, 1337, 1345, 1346, 1347, 1348, 1350, 1357, 1358, 1366, 1368, 1374, 1380, 1381, 1384, 1405, 1406, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1428, 1429, 1445, 1446, 1453, 1457, 1462, 1466, 1485, 1486, 1496, 1504, 1505, 1513, 1524, 1525, 1548, 1551, 1556, 1557, 1570, 1585, 1594, 1595, 1641, 1649, 1650, 1667, 1673, 1675, 1681, 1683, 1699, 1706, 1781, 1782, 1783, 1784, 1786, 1787, 1792, 1796, 1800, 1821, 1835, 1842, 1849, 1852, 1853, 1856, 1862, 1867, 1870, 1871, 1875, 1876, 1877, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1899, 1901, 1903, 1904, 1906, 1907, 1909, 1913, 1914, 1921], "state": [0, 1, 2, 3, 6, 10, 13, 14, 19, 32, 35, 37, 39, 41, 43, 45, 52, 55, 57, 65, 81, 737, 749, 825, 987, 988, 992, 997, 1001, 1011, 1026, 1027, 1112, 1121, 1134, 1182, 1185, 1197, 1254, 1293, 1300, 1366, 1367, 1384, 1385, 1414, 1429, 1431, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1706, 1749, 1775, 1863, 1874, 1875, 1878, 1879, 1880, 1884, 1888, 1891, 1893, 1896, 1904, 1918], "The": [0, 1, 2, 3, 4, 6, 8, 9, 12, 13, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 61, 62, 63, 64, 67, 68, 69, 81, 143, 184, 189, 201, 202, 214, 247, 282, 303, 305, 307, 311, 313, 390, 392, 393, 394, 439, 449, 474, 477, 478, 483, 485, 488, 489, 503, 505, 507, 526, 533, 572, 592, 606, 607, 669, 673, 676, 677, 678, 679, 683, 684, 685, 686, 724, 737, 746, 749, 755, 756, 757, 758, 761, 762, 763, 768, 769, 771, 772, 774, 775, 776, 781, 782, 783, 784, 788, 791, 804, 806, 808, 809, 810, 811, 814, 816, 826, 827, 843, 848, 853, 866, 867, 869, 873, 874, 878, 879, 881, 882, 883, 884, 885, 890, 891, 893, 894, 895, 896, 897, 898, 902, 903, 905, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 927, 928, 934, 941, 944, 950, 954, 957, 958, 964, 971, 987, 998, 999, 1001, 1002, 1003, 1012, 1025, 1026, 1027, 1038, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1055, 1056, 1060, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1103, 1105, 1106, 1107, 1108, 1109, 1112, 1115, 1118, 1121, 1122, 1123, 1126, 1127, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1148, 1152, 1156, 1159, 1179, 1182, 1185, 1187, 1189, 1192, 1193, 1195, 1197, 1198, 1201, 1202, 1206, 1207, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1227, 1228, 1229, 1231, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1248, 1251, 1253, 1254, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1282, 1290, 1291, 1294, 1295, 1296, 1299, 1300, 1304, 1310, 1313, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1357, 1358, 1359, 1361, 1362, 1363, 1366, 1367, 1368, 1369, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1404, 1405, 1406, 1407, 1408, 1409, 1414, 1417, 1419, 1421, 1428, 1429, 1431, 1432, 1442, 1443, 1445, 1453, 1456, 1457, 1462, 1463, 1465, 1466, 1478, 1481, 1482, 1496, 1497, 1504, 1505, 1506, 1508, 1509, 1512, 1513, 1515, 1524, 1525, 1537, 1538, 1539, 1548, 1551, 1563, 1566, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1620, 1621, 1624, 1630, 1634, 1635, 1638, 1640, 1641, 1642, 1648, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1689, 1690, 1693, 1696, 1699, 1704, 1705, 1706, 1708, 1710, 1712, 1717, 1719, 1721, 1723, 1724, 1726, 1731, 1738, 1739, 1740, 1741, 1748, 1749, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1769, 1775, 1777, 1778, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1794, 1795, 1796, 1800, 1801, 1810, 1816, 1817, 1818, 1820, 1821, 1824, 1825, 1826, 1827, 1834, 1835, 1836, 1837, 1838, 1840, 1842, 1845, 1849, 1852, 1853, 1854, 1856, 1857, 1861, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1921], "behavior": [0, 2, 3, 8, 17, 23, 26, 31, 33, 35, 36, 37, 39, 41, 42, 45, 50, 53, 57, 61, 62, 64, 65, 246, 311, 462, 503, 533, 606, 676, 774, 782, 815, 867, 881, 924, 928, 941, 1050, 1055, 1058, 1100, 1107, 1108, 1112, 1182, 1192, 1195, 1197, 1227, 1234, 1238, 1251, 1252, 1253, 1268, 1276, 1283, 1351, 1354, 1375, 1384, 1414, 1429, 1453, 1466, 1478, 1513, 1581, 1582, 1585, 1586, 1594, 1595, 1640, 1641, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1693, 1699, 1715, 1722, 1764, 1800, 1821, 1835, 1849, 1852, 1856, 1857, 1859, 1861, 1868, 1870, 1876, 1878, 1880, 1881, 1889, 1890, 1891, 1893, 1896, 1897, 1898, 1901, 1902, 1905, 1910, 1913], "dimens": [0, 2, 24, 32, 35, 40, 41, 57, 62, 63, 65, 211, 225, 246, 252, 305, 307, 309, 313, 424, 425, 463, 464, 465, 483, 503, 505, 507, 526, 532, 534, 535, 549, 572, 573, 574, 576, 577, 596, 606, 675, 681, 682, 684, 685, 686, 688, 724, 747, 768, 770, 774, 863, 864, 865, 866, 875, 876, 877, 881, 896, 921, 929, 932, 933, 934, 935, 936, 955, 970, 972, 1034, 1035, 1036, 1037, 1038, 1043, 1044, 1045, 1046, 1047, 1053, 1055, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1123, 1124, 1135, 1144, 1145, 1156, 1159, 1179, 1202, 1203, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1261, 1262, 1269, 1272, 1276, 1279, 1281, 1282, 1283, 1284, 1287, 1289, 1302, 1309, 1310, 1311, 1312, 1313, 1314, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1354, 1356, 1357, 1358, 1360, 1361, 1364, 1365, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1386, 1394, 1395, 1400, 1401, 1402, 1403, 1404, 1405, 1408, 1409, 1413, 1420, 1421, 1422, 1423, 1426, 1427, 1428, 1432, 1433, 1434, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1461, 1462, 1463, 1464, 1465, 1478, 1484, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1512, 1513, 1514, 1515, 1524, 1527, 1530, 1531, 1532, 1549, 1550, 1551, 1563, 1569, 1570, 1582, 1601, 1602, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1628, 1629, 1631, 1633, 1635, 1638, 1640, 1641, 1687, 1690, 1697, 1699, 1700, 1701, 1706, 1720, 1721, 1722, 1726, 1735, 1737, 1738, 1748, 1769, 1773, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1791, 1793, 1794, 1795, 1796, 1799, 1800, 1809, 1811, 1815, 1816, 1817, 1818, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1830, 1831, 1832, 1833, 1834, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1850, 1851, 1853, 1854, 1855, 1870, 1873, 1876, 1878, 1881, 1882, 1883, 1889, 1898, 1900, 1909, 1910, 1912, 1914, 1915], "govern": [0, 8, 9, 1850, 1900], "few": [0, 2, 8, 9, 14, 16, 17, 18, 23, 33, 37, 43, 1055, 1112, 1358, 1594, 1849, 1855, 1875, 1878, 1880, 1882, 1884, 1889, 1892, 1893, 1896, 1898, 1900, 1903, 1913, 1915, 1917], "factor": [0, 1, 4, 14, 33, 41, 65, 678, 679, 680, 788, 808, 910, 933, 934, 935, 1224, 1225, 1226, 1229, 1231, 1271, 1272, 1273, 1352, 1375, 1402, 1426, 1427, 1554, 1555, 1563, 1667, 1668, 1669, 1671, 1672, 1674, 1676, 1677, 1678, 1679, 1680, 1683, 1684, 1685, 1699, 1757, 1778, 1800, 1873, 1874, 1900], "config": [0, 13, 14, 15, 16, 17, 19, 23, 33, 57, 65, 781, 782, 783, 784, 848, 850, 942, 1879, 1892, 1903], "dynamic_shap": [0, 13, 20, 1647], "true": [0, 1, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 54, 57, 62, 63, 64, 65, 143, 189, 202, 252, 311, 313, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 343, 388, 392, 394, 439, 449, 451, 462, 468, 478, 485, 486, 494, 506, 507, 545, 556, 569, 570, 579, 583, 592, 598, 606, 669, 676, 681, 682, 683, 684, 685, 686, 688, 707, 708, 709, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 735, 738, 743, 745, 749, 750, 753, 754, 757, 758, 768, 774, 775, 786, 803, 815, 848, 862, 864, 865, 869, 878, 881, 882, 883, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 902, 903, 909, 911, 914, 917, 919, 920, 926, 927, 933, 934, 935, 941, 942, 947, 958, 996, 1050, 1059, 1060, 1061, 1077, 1078, 1084, 1085, 1108, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1122, 1123, 1124, 1126, 1138, 1139, 1140, 1143, 1144, 1155, 1157, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1186, 1187, 1188, 1191, 1197, 1198, 1199, 1201, 1203, 1206, 1211, 1212, 1223, 1224, 1225, 1228, 1229, 1230, 1231, 1234, 1236, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1251, 1253, 1254, 1263, 1264, 1265, 1266, 1269, 1270, 1271, 1273, 1275, 1279, 1281, 1282, 1283, 1284, 1287, 1304, 1309, 1312, 1315, 1318, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1362, 1363, 1366, 1367, 1368, 1369, 1374, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1423, 1428, 1429, 1430, 1431, 1445, 1446, 1453, 1457, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1478, 1480, 1481, 1482, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1508, 1509, 1513, 1515, 1517, 1523, 1524, 1525, 1537, 1538, 1539, 1548, 1556, 1563, 1582, 1583, 1585, 1594, 1595, 1597, 1598, 1601, 1602, 1605, 1606, 1607, 1619, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1687, 1689, 1697, 1699, 1700, 1704, 1705, 1706, 1723, 1724, 1731, 1734, 1735, 1743, 1744, 1745, 1748, 1750, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1773, 1775, 1777, 1794, 1795, 1796, 1799, 1800, 1814, 1818, 1823, 1832, 1833, 1835, 1836, 1837, 1838, 1842, 1845, 1849, 1851, 1853, 1854, 1855, 1862, 1864, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1920], "fals": [0, 1, 2, 4, 6, 14, 15, 17, 19, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 57, 60, 65, 105, 106, 107, 108, 109, 111, 127, 128, 129, 143, 174, 175, 176, 189, 202, 252, 293, 310, 311, 313, 320, 324, 327, 328, 330, 334, 335, 336, 343, 346, 384, 388, 399, 401, 402, 403, 406, 412, 420, 421, 422, 423, 436, 437, 438, 439, 440, 444, 449, 451, 461, 462, 470, 485, 486, 494, 507, 531, 544, 545, 554, 569, 583, 592, 598, 599, 604, 606, 669, 682, 683, 684, 685, 686, 688, 701, 702, 703, 704, 705, 706, 723, 724, 734, 735, 740, 741, 742, 744, 747, 749, 757, 758, 765, 767, 768, 769, 771, 772, 774, 786, 803, 808, 809, 810, 811, 813, 814, 815, 827, 828, 846, 847, 852, 854, 863, 864, 865, 869, 882, 883, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 906, 909, 911, 914, 917, 919, 920, 926, 927, 933, 934, 935, 941, 942, 947, 958, 996, 1001, 1013, 1055, 1056, 1057, 1058, 1060, 1061, 1068, 1072, 1073, 1074, 1075, 1080, 1081, 1086, 1087, 1088, 1090, 1091, 1092, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1117, 1118, 1120, 1122, 1124, 1126, 1138, 1139, 1140, 1143, 1144, 1157, 1167, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1187, 1188, 1189, 1197, 1198, 1199, 1201, 1203, 1206, 1211, 1212, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1234, 1236, 1238, 1239, 1242, 1243, 1244, 1245, 1246, 1251, 1252, 1253, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1273, 1275, 1279, 1281, 1282, 1284, 1287, 1295, 1296, 1304, 1309, 1310, 1311, 1312, 1315, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1348, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1362, 1363, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1399, 1400, 1401, 1405, 1406, 1407, 1408, 1409, 1413, 1414, 1417, 1418, 1419, 1420, 1421, 1423, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1441, 1443, 1445, 1446, 1453, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1466, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1508, 1509, 1510, 1513, 1515, 1517, 1518, 1519, 1524, 1525, 1528, 1534, 1535, 1537, 1538, 1539, 1543, 1548, 1552, 1556, 1558, 1559, 1561, 1562, 1563, 1564, 1566, 1576, 1579, 1580, 1582, 1594, 1596, 1598, 1601, 1603, 1606, 1607, 1619, 1628, 1629, 1630, 1631, 1633, 1636, 1639, 1640, 1641, 1645, 1646, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1697, 1699, 1700, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1723, 1724, 1731, 1735, 1743, 1744, 1745, 1748, 1750, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1773, 1782, 1783, 1784, 1785, 1786, 1787, 1794, 1795, 1796, 1799, 1800, 1814, 1818, 1823, 1832, 1835, 1836, 1837, 1838, 1845, 1847, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1861, 1862, 1863, 1864, 1867, 1869, 1870, 1874, 1875, 1878, 1879, 1880, 1882, 1886, 1889, 1890, 1893, 1894, 1897, 1898, 1899, 1901, 1904, 1905, 1909, 1910, 1911, 1913, 1914, 1916, 1917, 1919, 1920], "must": [0, 1, 4, 6, 7, 10, 12, 17, 22, 23, 26, 32, 35, 37, 39, 41, 42, 43, 50, 53, 54, 57, 60, 62, 64, 65, 81, 90, 132, 146, 147, 189, 252, 305, 307, 313, 390, 392, 394, 503, 533, 534, 555, 572, 573, 574, 576, 577, 606, 675, 676, 677, 678, 679, 680, 686, 737, 746, 761, 762, 763, 782, 804, 806, 848, 849, 867, 873, 878, 879, 880, 881, 883, 889, 891, 893, 894, 895, 897, 898, 910, 912, 914, 915, 916, 917, 918, 919, 922, 926, 929, 944, 954, 957, 958, 968, 969, 970, 972, 998, 999, 1001, 1043, 1045, 1046, 1047, 1049, 1052, 1053, 1055, 1076, 1077, 1078, 1083, 1085, 1086, 1087, 1088, 1089, 1096, 1097, 1106, 1108, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1135, 1144, 1145, 1148, 1159, 1179, 1182, 1192, 1197, 1204, 1207, 1236, 1237, 1238, 1239, 1245, 1247, 1248, 1251, 1254, 1272, 1274, 1275, 1276, 1282, 1289, 1304, 1310, 1313, 1314, 1318, 1331, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1357, 1358, 1361, 1368, 1369, 1375, 1407, 1414, 1417, 1420, 1445, 1451, 1466, 1486, 1495, 1497, 1505, 1524, 1537, 1538, 1539, 1557, 1594, 1617, 1627, 1628, 1634, 1636, 1641, 1649, 1679, 1681, 1688, 1689, 1692, 1693, 1696, 1704, 1705, 1726, 1735, 1738, 1747, 1763, 1774, 1777, 1778, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1796, 1801, 1811, 1815, 1816, 1820, 1825, 1827, 1831, 1835, 1839, 1840, 1842, 1843, 1845, 1852, 1853, 1854, 1855, 1862, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1884, 1888, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1916, 1920], "work": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 23, 24, 26, 27, 28, 35, 36, 37, 39, 40, 41, 42, 43, 52, 53, 54, 55, 57, 58, 62, 65, 112, 143, 344, 436, 437, 438, 439, 440, 477, 576, 577, 810, 850, 851, 882, 896, 956, 958, 959, 961, 990, 1001, 1002, 1022, 1056, 1058, 1075, 1095, 1096, 1097, 1112, 1182, 1186, 1193, 1194, 1217, 1218, 1245, 1246, 1254, 1351, 1411, 1414, 1430, 1447, 1551, 1569, 1594, 1651, 1681, 1708, 1712, 1714, 1740, 1746, 1811, 1814, 1849, 1852, 1855, 1856, 1867, 1868, 1869, 1870, 1873, 1875, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1886, 1888, 1891, 1892, 1893, 1897, 1898, 1900, 1903, 1905, 1906, 1915, 1917, 1920], "rais": [0, 1, 2, 6, 8, 17, 22, 23, 26, 35, 39, 41, 43, 45, 52, 57, 62, 64, 65, 81, 305, 307, 313, 686, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 923, 932, 960, 1025, 1098, 1103, 1180, 1182, 1187, 1189, 1197, 1199, 1211, 1213, 1221, 1222, 1225, 1229, 1230, 1235, 1242, 1243, 1247, 1248, 1253, 1274, 1299, 1414, 1563, 1606, 1607, 1612, 1614, 1617, 1627, 1650, 1651, 1737, 1835, 1849, 1856, 1862, 1867, 1875, 1878, 1880, 1882, 1889, 1893, 1897, 1898, 1904, 1905, 1916, 1920], "except": [0, 4, 6, 8, 10, 12, 22, 26, 35, 36, 40, 41, 43, 44, 45, 49, 53, 57, 64, 65, 572, 576, 577, 606, 673, 682, 684, 685, 688, 749, 874, 897, 898, 929, 936, 940, 960, 970, 972, 1000, 1013, 1047, 1053, 1055, 1101, 1102, 1121, 1123, 1145, 1189, 1197, 1199, 1203, 1237, 1253, 1269, 1279, 1281, 1282, 1284, 1287, 1309, 1312, 1314, 1366, 1384, 1429, 1466, 1550, 1594, 1602, 1627, 1634, 1635, 1639, 1641, 1697, 1721, 1737, 1774, 1792, 1794, 1795, 1799, 1821, 1837, 1838, 1842, 1843, 1850, 1852, 1854, 1855, 1856, 1857, 1862, 1867, 1870, 1878, 1880, 1886, 1889, 1892, 1897, 1898, 1905, 1907, 1909, 1911, 1912, 1916], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 19, 22, 23, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 77, 90, 143, 184, 201, 252, 305, 313, 439, 478, 487, 488, 503, 505, 507, 533, 549, 569, 606, 675, 678, 724, 757, 758, 768, 774, 780, 782, 813, 829, 847, 854, 866, 869, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 910, 913, 922, 930, 933, 941, 942, 947, 948, 952, 958, 960, 970, 972, 994, 1000, 1001, 1013, 1038, 1055, 1094, 1098, 1103, 1108, 1112, 1113, 1118, 1121, 1122, 1123, 1135, 1157, 1171, 1172, 1174, 1175, 1178, 1182, 1183, 1185, 1193, 1194, 1195, 1197, 1198, 1202, 1203, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1251, 1252, 1253, 1254, 1262, 1268, 1271, 1276, 1282, 1283, 1286, 1304, 1309, 1310, 1311, 1322, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1357, 1358, 1361, 1364, 1366, 1367, 1369, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1428, 1429, 1441, 1442, 1445, 1446, 1447, 1448, 1450, 1453, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1478, 1480, 1481, 1482, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1505, 1511, 1513, 1524, 1525, 1548, 1551, 1553, 1556, 1557, 1563, 1571, 1582, 1583, 1584, 1585, 1590, 1591, 1594, 1595, 1596, 1597, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1630, 1635, 1639, 1640, 1641, 1642, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1687, 1689, 1696, 1699, 1700, 1722, 1728, 1735, 1740, 1743, 1750, 1768, 1774, 1777, 1779, 1780, 1781, 1791, 1796, 1800, 1809, 1814, 1816, 1821, 1825, 1827, 1832, 1835, 1842, 1845, 1849, 1850, 1852, 1854, 1861, 1863, 1865, 1867, 1868, 1869, 1873, 1876, 1877, 1878, 1879, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1896, 1897, 1898, 1899, 1904, 1905, 1906, 1907, 1910, 1912, 1913, 1914, 1915, 1916], "conjunct": [0, 4, 32, 35, 39, 57, 813, 1478, 1513, 1594, 1903, 1905], "mark_dyam": 0, "eventu": [0, 2, 8, 52, 57, 1849, 1898], "support": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33, 35, 37, 39, 40, 41, 42, 44, 45, 52, 53, 57, 60, 61, 62, 64, 65, 303, 313, 449, 572, 606, 674, 675, 676, 678, 682, 684, 685, 688, 718, 727, 728, 729, 761, 762, 763, 768, 774, 775, 776, 781, 782, 783, 784, 790, 806, 822, 848, 850, 851, 881, 883, 888, 897, 898, 910, 911, 915, 918, 920, 922, 934, 935, 942, 949, 955, 957, 961, 998, 999, 1001, 1018, 1050, 1052, 1055, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1118, 1122, 1139, 1140, 1152, 1179, 1186, 1193, 1197, 1201, 1202, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1272, 1276, 1280, 1285, 1286, 1303, 1342, 1343, 1344, 1345, 1346, 1347, 1354, 1357, 1358, 1361, 1381, 1401, 1419, 1420, 1453, 1463, 1465, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1505, 1507, 1513, 1524, 1530, 1563, 1581, 1582, 1584, 1594, 1641, 1646, 1648, 1656, 1657, 1659, 1687, 1699, 1718, 1719, 1740, 1743, 1744, 1774, 1777, 1780, 1797, 1800, 1823, 1825, 1827, 1839, 1840, 1841, 1848, 1849, 1850, 1852, 1854, 1856, 1857, 1859, 1863, 1865, 1867, 1871, 1875, 1876, 1877, 1878, 1879, 1880, 1884, 1886, 1888, 1889, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1920], "2": [0, 1, 2, 4, 12, 13, 14, 16, 17, 18, 22, 24, 26, 29, 30, 31, 32, 33, 35, 36, 39, 41, 42, 43, 45, 50, 52, 57, 61, 62, 63, 64, 65, 166, 184, 201, 218, 226, 246, 252, 305, 307, 309, 313, 327, 369, 393, 394, 436, 437, 438, 439, 440, 472, 478, 483, 486, 489, 503, 505, 507, 533, 547, 549, 569, 570, 572, 573, 574, 576, 577, 578, 596, 606, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 682, 684, 686, 687, 688, 723, 727, 728, 729, 730, 731, 732, 734, 735, 744, 747, 749, 751, 782, 785, 809, 854, 863, 864, 865, 866, 867, 868, 869, 873, 875, 876, 877, 879, 888, 890, 891, 892, 893, 894, 895, 902, 903, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 928, 929, 930, 932, 933, 934, 935, 936, 940, 941, 944, 947, 948, 949, 950, 953, 954, 955, 1029, 1034, 1037, 1038, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1116, 1117, 1118, 1122, 1123, 1124, 1125, 1126, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1156, 1157, 1159, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1185, 1186, 1191, 1193, 1195, 1197, 1201, 1202, 1203, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1268, 1270, 1271, 1272, 1273, 1275, 1276, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1299, 1302, 1303, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1321, 1326, 1327, 1328, 1329, 1330, 1331, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1366, 1368, 1370, 1371, 1372, 1373, 1375, 1382, 1383, 1384, 1385, 1386, 1400, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1419, 1420, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1478, 1480, 1485, 1486, 1497, 1504, 1505, 1511, 1513, 1515, 1517, 1524, 1530, 1537, 1538, 1539, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1563, 1579, 1585, 1594, 1598, 1601, 1602, 1606, 1618, 1619, 1620, 1621, 1623, 1624, 1627, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1648, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1682, 1683, 1684, 1688, 1689, 1690, 1692, 1693, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1710, 1712, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1731, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1748, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1769, 1773, 1774, 1775, 1777, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1795, 1796, 1797, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1847, 1848, 1850, 1851, 1853, 1854, 1855, 1856, 1862, 1863, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1876, 1877, 1879, 1880, 1883, 1884, 1886, 1887, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1919], "fulli": [0, 17, 24, 26, 32, 35, 39, 40, 61, 65, 669, 1018, 1182, 1410, 1411, 1412, 1414, 1851, 1855, 1861, 1880, 1897, 1900], "constrain": [0, 41, 1450, 1855, 1886], "doe": [0, 1, 2, 4, 5, 6, 8, 9, 10, 16, 17, 23, 26, 35, 39, 41, 43, 45, 49, 51, 52, 54, 57, 60, 61, 62, 64, 65, 143, 246, 327, 426, 449, 572, 606, 669, 684, 685, 737, 746, 749, 779, 783, 850, 869, 909, 922, 992, 996, 1046, 1055, 1059, 1108, 1111, 1123, 1156, 1181, 1183, 1186, 1192, 1197, 1207, 1212, 1224, 1225, 1229, 1230, 1237, 1243, 1245, 1251, 1254, 1271, 1275, 1276, 1282, 1286, 1290, 1306, 1332, 1333, 1334, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1354, 1357, 1358, 1361, 1366, 1367, 1377, 1378, 1379, 1384, 1385, 1387, 1388, 1389, 1396, 1397, 1398, 1408, 1409, 1415, 1421, 1424, 1429, 1431, 1453, 1465, 1496, 1548, 1594, 1595, 1603, 1606, 1610, 1636, 1639, 1641, 1646, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1684, 1688, 1693, 1735, 1738, 1739, 1743, 1745, 1769, 1774, 1800, 1820, 1823, 1835, 1842, 1848, 1849, 1850, 1852, 1854, 1855, 1857, 1863, 1867, 1868, 1869, 1870, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1886, 1888, 1889, 1890, 1893, 1897, 1898, 1900, 1905, 1907, 1909, 1912, 1916], "allow": [0, 1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 16, 17, 19, 22, 23, 24, 26, 27, 32, 33, 35, 36, 41, 43, 44, 52, 53, 57, 58, 60, 61, 62, 63, 65, 143, 503, 669, 724, 782, 786, 788, 813, 882, 884, 896, 897, 927, 941, 998, 1001, 1025, 1055, 1116, 1182, 1187, 1199, 1237, 1259, 1299, 1313, 1327, 1328, 1329, 1350, 1351, 1368, 1407, 1408, 1409, 1414, 1417, 1420, 1442, 1457, 1594, 1599, 1640, 1648, 1652, 1668, 1777, 1835, 1849, 1854, 1855, 1862, 1868, 1869, 1870, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1891, 1893, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1909, 1912, 1913, 1914, 1916], "than": [0, 1, 4, 5, 6, 7, 9, 10, 12, 14, 16, 19, 23, 24, 26, 32, 33, 35, 36, 37, 41, 42, 43, 45, 49, 52, 53, 54, 57, 62, 65, 143, 246, 489, 534, 606, 669, 682, 688, 768, 774, 882, 891, 892, 906, 913, 924, 931, 932, 936, 937, 961, 970, 1008, 1012, 1025, 1043, 1044, 1095, 1096, 1097, 1099, 1103, 1108, 1119, 1126, 1138, 1142, 1156, 1167, 1179, 1180, 1183, 1193, 1202, 1203, 1206, 1211, 1212, 1218, 1222, 1227, 1235, 1236, 1238, 1239, 1242, 1247, 1257, 1270, 1273, 1279, 1282, 1284, 1287, 1299, 1304, 1314, 1330, 1331, 1342, 1343, 1344, 1351, 1357, 1358, 1375, 1406, 1420, 1428, 1445, 1451, 1461, 1462, 1463, 1478, 1488, 1489, 1490, 1504, 1505, 1513, 1524, 1550, 1563, 1581, 1582, 1585, 1594, 1601, 1602, 1603, 1604, 1630, 1635, 1641, 1656, 1657, 1681, 1683, 1697, 1698, 1719, 1720, 1748, 1781, 1782, 1783, 1784, 1786, 1787, 1817, 1825, 1827, 1835, 1849, 1851, 1852, 1854, 1855, 1857, 1869, 1870, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1886, 1888, 1889, 1890, 1891, 1893, 1896, 1897, 1898, 1900, 1901, 1905, 1909, 1910, 1912, 1914, 1915, 1916], "valu": [0, 1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 17, 22, 23, 24, 26, 29, 32, 33, 36, 37, 39, 41, 43, 44, 46, 49, 50, 52, 53, 57, 59, 62, 64, 65, 81, 94, 95, 96, 97, 112, 143, 147, 214, 227, 228, 229, 230, 246, 251, 252, 264, 265, 291, 303, 305, 307, 308, 309, 310, 311, 313, 315, 318, 344, 391, 392, 410, 411, 413, 414, 462, 472, 474, 503, 505, 507, 526, 533, 549, 572, 573, 574, 576, 577, 588, 589, 669, 670, 673, 676, 677, 680, 684, 685, 686, 724, 745, 753, 759, 760, 768, 773, 774, 776, 782, 784, 785, 788, 791, 808, 809, 810, 811, 814, 815, 816, 843, 848, 854, 863, 864, 865, 869, 874, 878, 880, 882, 884, 885, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 911, 912, 913, 920, 926, 930, 935, 937, 949, 950, 953, 959, 989, 998, 999, 1012, 1025, 1034, 1035, 1038, 1046, 1047, 1060, 1069, 1070, 1072, 1074, 1076, 1077, 1078, 1083, 1085, 1086, 1087, 1088, 1089, 1098, 1103, 1109, 1111, 1112, 1113, 1114, 1118, 1119, 1121, 1122, 1124, 1126, 1130, 1131, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1152, 1167, 1172, 1173, 1174, 1175, 1178, 1179, 1180, 1182, 1183, 1185, 1188, 1189, 1197, 1200, 1202, 1203, 1206, 1210, 1211, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1231, 1234, 1236, 1238, 1239, 1241, 1245, 1246, 1251, 1252, 1253, 1254, 1257, 1262, 1268, 1270, 1271, 1274, 1279, 1281, 1282, 1284, 1287, 1299, 1302, 1304, 1308, 1309, 1310, 1311, 1314, 1315, 1318, 1322, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1356, 1357, 1358, 1359, 1361, 1368, 1369, 1370, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1399, 1400, 1401, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1442, 1445, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1457, 1459, 1461, 1462, 1463, 1465, 1466, 1485, 1486, 1488, 1489, 1490, 1495, 1496, 1505, 1506, 1510, 1513, 1515, 1524, 1525, 1526, 1537, 1538, 1539, 1548, 1549, 1550, 1551, 1553, 1556, 1563, 1576, 1577, 1582, 1584, 1585, 1587, 1589, 1592, 1593, 1594, 1599, 1601, 1602, 1603, 1604, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1620, 1621, 1627, 1630, 1631, 1634, 1636, 1640, 1641, 1645, 1646, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1675, 1681, 1689, 1693, 1696, 1700, 1702, 1703, 1715, 1717, 1719, 1720, 1721, 1726, 1727, 1728, 1735, 1738, 1748, 1751, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1769, 1773, 1777, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1796, 1800, 1801, 1811, 1815, 1818, 1821, 1824, 1825, 1826, 1827, 1829, 1832, 1833, 1834, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1856, 1862, 1864, 1865, 1867, 1870, 1873, 1874, 1875, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1886, 1890, 1891, 1893, 1895, 1896, 1897, 1899, 1900, 1903, 1904, 1905, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919], "both": [0, 2, 3, 4, 13, 14, 16, 17, 18, 20, 21, 23, 26, 32, 33, 35, 36, 37, 40, 41, 45, 50, 51, 52, 53, 57, 64, 65, 90, 331, 718, 757, 758, 761, 762, 763, 782, 840, 881, 885, 891, 892, 893, 894, 895, 910, 954, 979, 1050, 1071, 1101, 1102, 1103, 1111, 1125, 1127, 1135, 1142, 1159, 1172, 1173, 1179, 1182, 1195, 1203, 1204, 1252, 1268, 1276, 1282, 1295, 1296, 1327, 1328, 1332, 1333, 1334, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1369, 1375, 1377, 1378, 1379, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1407, 1408, 1409, 1414, 1420, 1453, 1465, 1466, 1469, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1537, 1538, 1539, 1563, 1594, 1606, 1636, 1656, 1657, 1681, 1704, 1705, 1774, 1775, 1777, 1796, 1800, 1820, 1821, 1852, 1854, 1855, 1862, 1868, 1869, 1871, 1874, 1875, 1876, 1880, 1881, 1883, 1886, 1889, 1890, 1891, 1893, 1897, 1898, 1900, 1903, 1905, 1907, 1909, 1910, 1916, 1918, 1919], "eager": [0, 2, 9, 14, 16, 20, 23, 1030, 1180, 1183, 1193, 1747, 1855, 1878, 1899, 1901, 1903], "compil": [0, 12, 13, 16, 19, 20, 21, 26, 27, 57, 58, 65, 669, 957, 982, 986, 998, 999, 1112, 1180, 1182, 1183, 1186, 1187, 1193, 1194, 1195, 1197, 1198, 1199, 1414, 1851, 1852, 1854, 1855, 1856, 1857, 1861, 1874, 1877, 1879, 1885, 1892, 1893, 1917], "mode": [0, 5, 9, 13, 14, 15, 16, 18, 23, 32, 33, 35, 37, 41, 52, 54, 62, 63, 65, 214, 215, 735, 736, 761, 762, 763, 768, 774, 775, 776, 804, 806, 812, 815, 848, 849, 878, 880, 883, 884, 885, 890, 891, 892, 893, 897, 909, 942, 956, 989, 1029, 1030, 1059, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1112, 1115, 1116, 1117, 1118, 1121, 1122, 1130, 1157, 1165, 1166, 1180, 1182, 1183, 1186, 1197, 1199, 1240, 1253, 1283, 1295, 1296, 1332, 1333, 1334, 1342, 1343, 1344, 1358, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1414, 1430, 1453, 1466, 1467, 1488, 1489, 1490, 1505, 1513, 1524, 1551, 1582, 1583, 1584, 1595, 1602, 1606, 1639, 1675, 1683, 1699, 1742, 1744, 1745, 1835, 1850, 1853, 1863, 1868, 1873, 1878, 1879, 1881, 1882, 1886, 1895, 1899, 1901, 1902, 1903, 1905, 1917, 1920], "export": [0, 18, 22, 27, 29, 35, 42, 55, 80, 905, 958, 1185, 1187, 1193, 1199, 1628, 1629, 1647, 1648, 1649, 1651, 1652, 1850, 1852, 1854, 1855, 1880, 1894, 1895, 1899, 1900, 1905], "error": [0, 1, 2, 6, 9, 16, 26, 28, 29, 32, 33, 35, 36, 38, 41, 50, 52, 53, 57, 60, 62, 64, 65, 183, 214, 305, 307, 313, 315, 320, 534, 545, 603, 606, 669, 808, 854, 867, 869, 888, 890, 891, 892, 893, 894, 895, 896, 966, 1001, 1012, 1025, 1029, 1053, 1111, 1115, 1116, 1118, 1123, 1145, 1182, 1187, 1196, 1211, 1212, 1221, 1223, 1225, 1228, 1229, 1230, 1240, 1243, 1253, 1271, 1299, 1304, 1330, 1331, 1364, 1375, 1381, 1405, 1414, 1443, 1445, 1511, 1522, 1544, 1563, 1566, 1567, 1594, 1596, 1597, 1598, 1636, 1641, 1651, 1652, 1695, 1735, 1742, 1791, 1796, 1835, 1842, 1843, 1849, 1850, 1852, 1854, 1855, 1861, 1862, 1867, 1868, 1869, 1870, 1874, 1875, 1878, 1880, 1881, 1883, 1884, 1890, 1893, 1897, 1903, 1905, 1910, 1915, 1916, 1918, 1919], "3": [0, 1, 2, 4, 5, 7, 10, 13, 14, 16, 17, 20, 22, 23, 24, 29, 30, 32, 33, 35, 37, 39, 41, 42, 43, 45, 50, 52, 57, 59, 61, 62, 63, 64, 65, 184, 201, 246, 252, 281, 305, 307, 309, 313, 393, 394, 436, 437, 438, 439, 440, 462, 478, 483, 486, 489, 503, 505, 507, 526, 533, 547, 549, 570, 572, 573, 574, 576, 577, 596, 606, 669, 670, 674, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 688, 723, 727, 728, 729, 730, 731, 732, 735, 737, 746, 749, 750, 751, 752, 754, 761, 762, 763, 774, 782, 813, 850, 851, 854, 864, 865, 867, 868, 869, 876, 877, 890, 891, 892, 893, 894, 895, 910, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 925, 926, 928, 929, 930, 932, 933, 934, 935, 936, 940, 941, 944, 947, 948, 953, 954, 955, 998, 999, 1001, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1068, 1071, 1076, 1079, 1083, 1089, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1118, 1119, 1121, 1123, 1124, 1125, 1126, 1135, 1138, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1156, 1157, 1159, 1167, 1169, 1171, 1173, 1182, 1186, 1188, 1191, 1193, 1197, 1198, 1202, 1203, 1204, 1205, 1206, 1207, 1211, 1213, 1214, 1215, 1217, 1218, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1259, 1262, 1264, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1302, 1303, 1304, 1306, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1327, 1328, 1329, 1330, 1331, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1350, 1357, 1358, 1361, 1362, 1363, 1364, 1366, 1367, 1369, 1371, 1372, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1417, 1419, 1421, 1426, 1427, 1429, 1431, 1432, 1435, 1436, 1437, 1438, 1439, 1440, 1447, 1448, 1449, 1453, 1461, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1478, 1480, 1485, 1486, 1489, 1490, 1492, 1493, 1496, 1504, 1505, 1508, 1509, 1511, 1513, 1517, 1518, 1524, 1532, 1548, 1550, 1551, 1554, 1555, 1561, 1562, 1569, 1570, 1582, 1594, 1602, 1616, 1618, 1620, 1621, 1622, 1623, 1627, 1629, 1630, 1631, 1632, 1635, 1640, 1641, 1642, 1644, 1645, 1646, 1648, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1681, 1682, 1684, 1688, 1690, 1692, 1696, 1697, 1699, 1700, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1712, 1714, 1715, 1716, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1731, 1735, 1739, 1740, 1741, 1748, 1751, 1753, 1755, 1757, 1758, 1759, 1763, 1764, 1765, 1773, 1775, 1777, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1791, 1799, 1800, 1802, 1803, 1809, 1810, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1842, 1843, 1844, 1845, 1847, 1848, 1851, 1852, 1853, 1854, 1855, 1856, 1862, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1886, 1887, 1891, 1892, 1893, 1896, 1897, 1900, 1902, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917], "partial": [0, 16, 19, 41, 43, 52, 57, 60, 65, 830, 1001, 1045, 1122, 1135, 1228, 1229, 1230, 1272, 1410, 1411, 1412, 1540, 1541, 1542, 1594, 1613, 1780, 1855, 1856, 1869, 1875, 1880, 1883, 1893, 1907, 1916], "least": [0, 2, 6, 7, 9, 14, 23, 33, 37, 41, 51, 52, 57, 252, 394, 686, 913, 1043, 1045, 1046, 1055, 1096, 1097, 1135, 1143, 1144, 1179, 1204, 1227, 1254, 1276, 1308, 1322, 1594, 1628, 1849, 1855, 1869, 1873, 1875, 1876, 1878, 1882, 1898, 1901, 1907, 1909, 1910, 1911, 1916], "full": [0, 4, 8, 9, 13, 14, 15, 17, 18, 23, 27, 32, 33, 35, 39, 41, 52, 55, 57, 58, 62, 65, 503, 889, 911, 920, 942, 1083, 1084, 1085, 1089, 1090, 1092, 1110, 1122, 1123, 1139, 1140, 1186, 1219, 1220, 1227, 1228, 1229, 1240, 1245, 1246, 1254, 1271, 1331, 1337, 1368, 1428, 1457, 1488, 1489, 1490, 1497, 1510, 1556, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1748, 1800, 1801, 1842, 1849, 1851, 1852, 1853, 1854, 1855, 1857, 1869, 1874, 1878, 1879, 1880, 1883, 1886, 1889, 1890, 1895, 1897, 1900, 1903, 1906, 1913, 1916], "unbound": 0, "rang": [0, 1, 2, 4, 12, 17, 23, 32, 35, 36, 39, 41, 52, 53, 55, 61, 65, 81, 293, 472, 673, 750, 752, 754, 784, 808, 809, 810, 811, 812, 814, 815, 816, 874, 912, 937, 1016, 1017, 1025, 1055, 1105, 1121, 1142, 1143, 1144, 1248, 1259, 1274, 1283, 1299, 1311, 1322, 1350, 1360, 1362, 1363, 1367, 1373, 1385, 1404, 1416, 1421, 1425, 1431, 1447, 1448, 1449, 1453, 1508, 1509, 1513, 1569, 1594, 1599, 1671, 1672, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1700, 1779, 1834, 1852, 1853, 1855, 1875, 1877, 1878, 1882, 1886, 1888, 1889, 1893, 1895, 1896, 1899, 1900, 1903, 1904, 1910, 1912, 1914, 1915, 1916, 1917], "shape": [0, 2, 9, 13, 14, 15, 18, 22, 23, 24, 33, 35, 41, 57, 59, 61, 63, 65, 90, 164, 184, 201, 211, 392, 394, 436, 438, 440, 462, 487, 488, 503, 505, 507, 533, 555, 606, 669, 674, 676, 677, 686, 724, 734, 735, 745, 747, 749, 753, 755, 756, 757, 758, 761, 762, 763, 770, 785, 867, 873, 887, 891, 893, 894, 895, 906, 912, 913, 915, 918, 923, 925, 929, 930, 942, 949, 971, 1045, 1046, 1047, 1049, 1050, 1055, 1056, 1058, 1060, 1075, 1076, 1077, 1078, 1086, 1087, 1088, 1094, 1100, 1101, 1102, 1103, 1109, 1116, 1117, 1121, 1122, 1123, 1124, 1126, 1138, 1143, 1144, 1148, 1156, 1159, 1173, 1179, 1195, 1197, 1198, 1201, 1206, 1207, 1211, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1270, 1271, 1275, 1283, 1288, 1289, 1303, 1304, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1504, 1505, 1509, 1513, 1515, 1524, 1525, 1530, 1537, 1538, 1539, 1549, 1550, 1553, 1554, 1555, 1557, 1563, 1582, 1585, 1594, 1596, 1597, 1601, 1603, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1642, 1645, 1650, 1652, 1687, 1696, 1700, 1704, 1705, 1708, 1710, 1711, 1712, 1719, 1721, 1722, 1726, 1735, 1738, 1763, 1777, 1778, 1780, 1783, 1785, 1791, 1796, 1797, 1800, 1810, 1817, 1821, 1831, 1832, 1833, 1842, 1845, 1847, 1851, 1852, 1853, 1855, 1868, 1869, 1870, 1875, 1876, 1878, 1880, 1881, 1882, 1894, 1895, 1899, 1902, 1905, 1909, 1910, 1914, 1915, 1916, 1917], "pass": [0, 1, 2, 4, 6, 7, 8, 12, 14, 15, 17, 18, 20, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 64, 65, 143, 246, 439, 503, 505, 507, 533, 549, 782, 783, 812, 815, 848, 850, 869, 878, 879, 880, 881, 882, 888, 896, 926, 942, 956, 990, 1001, 1045, 1076, 1077, 1078, 1086, 1087, 1088, 1094, 1108, 1111, 1112, 1116, 1117, 1118, 1121, 1122, 1144, 1180, 1182, 1183, 1186, 1191, 1193, 1197, 1198, 1226, 1242, 1244, 1253, 1299, 1322, 1323, 1324, 1325, 1333, 1351, 1357, 1358, 1362, 1363, 1414, 1419, 1420, 1442, 1458, 1459, 1460, 1461, 1466, 1478, 1508, 1509, 1513, 1524, 1525, 1551, 1563, 1585, 1588, 1589, 1590, 1591, 1594, 1604, 1606, 1608, 1613, 1627, 1630, 1634, 1636, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1731, 1735, 1739, 1800, 1849, 1852, 1856, 1859, 1863, 1865, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1883, 1885, 1886, 1889, 1893, 1894, 1896, 1897, 1898, 1905, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1919, 1920], "through": [0, 1, 6, 8, 10, 12, 14, 17, 21, 22, 23, 27, 32, 35, 37, 41, 45, 57, 62, 64, 65, 486, 781, 829, 843, 850, 851, 888, 897, 898, 963, 1001, 1082, 1115, 1123, 1180, 1183, 1185, 1197, 1198, 1200, 1217, 1218, 1239, 1245, 1262, 1421, 1458, 1459, 1460, 1461, 1515, 1585, 1594, 1606, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1699, 1842, 1849, 1850, 1854, 1855, 1859, 1861, 1865, 1867, 1868, 1869, 1875, 1878, 1880, 1882, 1883, 1885, 1886, 1892, 1893, 1897, 1898, 1900, 1903, 1905, 1906, 1907, 1909, 1913, 1917, 1919, 1921], "4": [0, 2, 4, 13, 14, 17, 23, 24, 29, 30, 32, 33, 35, 37, 39, 41, 42, 43, 50, 52, 62, 65, 184, 201, 234, 246, 281, 303, 305, 307, 309, 313, 393, 394, 436, 437, 462, 474, 478, 483, 486, 489, 503, 507, 526, 533, 545, 547, 549, 573, 574, 596, 606, 672, 673, 674, 675, 678, 680, 681, 682, 684, 685, 686, 688, 728, 730, 731, 732, 735, 737, 746, 749, 762, 763, 813, 854, 863, 864, 865, 869, 870, 871, 872, 873, 874, 876, 877, 888, 890, 893, 894, 895, 910, 913, 916, 920, 921, 922, 926, 928, 931, 932, 935, 936, 937, 940, 944, 949, 950, 951, 952, 955, 1035, 1038, 1045, 1047, 1049, 1050, 1053, 1054, 1055, 1058, 1060, 1070, 1071, 1073, 1075, 1083, 1089, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1105, 1106, 1108, 1111, 1113, 1121, 1122, 1123, 1124, 1125, 1126, 1135, 1138, 1142, 1143, 1144, 1145, 1147, 1148, 1152, 1156, 1159, 1171, 1173, 1179, 1188, 1193, 1195, 1202, 1203, 1204, 1205, 1206, 1207, 1211, 1213, 1214, 1220, 1222, 1224, 1225, 1226, 1229, 1231, 1234, 1236, 1238, 1240, 1242, 1244, 1247, 1248, 1249, 1251, 1252, 1255, 1257, 1258, 1263, 1265, 1266, 1268, 1270, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1302, 1303, 1304, 1312, 1313, 1314, 1315, 1322, 1327, 1338, 1339, 1340, 1343, 1344, 1346, 1347, 1355, 1357, 1358, 1359, 1361, 1365, 1366, 1384, 1385, 1410, 1411, 1417, 1419, 1421, 1426, 1427, 1429, 1435, 1436, 1437, 1438, 1439, 1453, 1465, 1466, 1467, 1468, 1469, 1470, 1478, 1480, 1489, 1492, 1504, 1505, 1513, 1524, 1548, 1551, 1554, 1555, 1581, 1582, 1583, 1584, 1585, 1594, 1601, 1606, 1617, 1629, 1630, 1632, 1634, 1640, 1641, 1642, 1644, 1646, 1648, 1653, 1666, 1671, 1672, 1678, 1682, 1683, 1684, 1688, 1692, 1693, 1696, 1697, 1699, 1700, 1702, 1706, 1708, 1710, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1721, 1722, 1726, 1727, 1728, 1730, 1731, 1735, 1748, 1755, 1757, 1758, 1763, 1764, 1766, 1768, 1773, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1796, 1799, 1802, 1803, 1810, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1843, 1844, 1848, 1851, 1852, 1853, 1854, 1855, 1856, 1862, 1867, 1869, 1870, 1873, 1875, 1876, 1878, 1879, 1880, 1886, 1888, 1891, 1892, 1893, 1897, 1898, 1900, 1902, 1905, 1909, 1910, 1912, 1913, 1914, 1915, 1916], "attempt": [0, 2, 9, 14, 23, 26, 35, 52, 53, 62, 936, 950, 1186, 1192, 1271, 1563, 1596, 1597, 1656, 1657, 1835, 1852, 1855, 1868, 1869, 1874, 1878, 1880, 1892, 1896, 1897, 1905], "explicitli": [0, 1, 9, 26, 35, 40, 45, 57, 992, 1043, 1045, 1055, 1144, 1222, 1235, 1239, 1247, 1289, 1524, 1582, 1681, 1796, 1852, 1854, 1855, 1856, 1861, 1878, 1880, 1883, 1885, 1891, 1893, 1897, 1898, 1904, 1905, 1909], "As": [0, 1, 2, 9, 12, 17, 23, 33, 35, 37, 41, 57, 60, 61, 65, 246, 924, 1055, 1186, 1213, 1217, 1218, 1228, 1229, 1240, 1245, 1353, 1354, 1355, 1359, 1380, 1414, 1445, 1581, 1640, 1646, 1848, 1852, 1854, 1855, 1862, 1870, 1875, 1878, 1880, 1882, 1886, 1889, 1892, 1893, 1897, 1898, 1904, 1905, 1906, 1907, 1909, 1917], "all": [0, 1, 2, 3, 4, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 41, 43, 45, 49, 50, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 70, 81, 143, 252, 305, 307, 313, 327, 477, 503, 505, 507, 535, 549, 596, 599, 606, 669, 675, 676, 681, 683, 687, 688, 724, 749, 780, 782, 783, 803, 829, 843, 847, 850, 863, 866, 878, 879, 880, 882, 883, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 906, 907, 908, 912, 921, 923, 928, 929, 933, 936, 937, 941, 953, 958, 959, 961, 962, 970, 971, 980, 988, 992, 998, 1002, 1003, 1011, 1012, 1019, 1020, 1022, 1023, 1027, 1029, 1031, 1072, 1073, 1074, 1075, 1078, 1081, 1082, 1085, 1088, 1090, 1092, 1108, 1111, 1112, 1118, 1119, 1121, 1122, 1124, 1144, 1147, 1178, 1179, 1182, 1189, 1192, 1193, 1196, 1197, 1217, 1244, 1253, 1269, 1271, 1279, 1281, 1284, 1292, 1301, 1309, 1310, 1311, 1312, 1322, 1329, 1331, 1335, 1337, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1357, 1358, 1361, 1366, 1367, 1368, 1369, 1374, 1380, 1381, 1384, 1385, 1401, 1405, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1429, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1453, 1457, 1459, 1461, 1462, 1465, 1470, 1471, 1478, 1484, 1504, 1505, 1510, 1515, 1534, 1535, 1563, 1569, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1598, 1601, 1606, 1613, 1617, 1627, 1631, 1639, 1640, 1641, 1642, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1682, 1683, 1684, 1685, 1697, 1775, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1793, 1794, 1795, 1796, 1799, 1815, 1817, 1824, 1825, 1826, 1827, 1830, 1833, 1837, 1838, 1840, 1844, 1849, 1852, 1853, 1854, 1855, 1861, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1886, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920], "call": [0, 1, 2, 3, 4, 9, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 52, 54, 57, 58, 59, 61, 62, 63, 64, 65, 70, 143, 282, 315, 327, 449, 477, 478, 545, 569, 603, 606, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 770, 779, 786, 813, 846, 850, 851, 882, 886, 887, 888, 889, 890, 892, 893, 896, 902, 903, 925, 942, 956, 959, 961, 990, 992, 1002, 1003, 1012, 1019, 1020, 1022, 1023, 1053, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1111, 1112, 1123, 1127, 1145, 1157, 1167, 1182, 1185, 1187, 1192, 1193, 1194, 1201, 1237, 1245, 1249, 1251, 1253, 1254, 1283, 1326, 1332, 1333, 1334, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1361, 1399, 1410, 1411, 1412, 1414, 1421, 1422, 1442, 1453, 1465, 1491, 1492, 1493, 1499, 1500, 1501, 1506, 1524, 1563, 1582, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1603, 1606, 1613, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1629, 1635, 1636, 1638, 1639, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1712, 1739, 1746, 1747, 1775, 1794, 1795, 1796, 1816, 1835, 1837, 1838, 1842, 1843, 1849, 1852, 1856, 1859, 1865, 1867, 1869, 1870, 1871, 1874, 1875, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1920, 1921], "made": [0, 10, 17, 23, 37, 39, 40, 53, 65, 888, 898, 1182, 1414, 1459, 1461, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1716, 1854, 1862, 1875, 1892, 1897, 1914, 1916, 1920], "befor": [0, 1, 2, 4, 7, 8, 12, 17, 19, 21, 23, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 44, 49, 51, 52, 53, 54, 57, 65, 90, 143, 736, 749, 777, 778, 779, 882, 886, 888, 940, 958, 1036, 1037, 1038, 1047, 1055, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1096, 1097, 1100, 1108, 1111, 1182, 1193, 1195, 1234, 1238, 1251, 1281, 1309, 1312, 1351, 1357, 1358, 1361, 1366, 1414, 1415, 1416, 1453, 1457, 1465, 1513, 1532, 1569, 1570, 1585, 1588, 1589, 1590, 1591, 1594, 1602, 1635, 1638, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1683, 1697, 1700, 1726, 1735, 1746, 1747, 1776, 1779, 1782, 1783, 1784, 1786, 1787, 1796, 1799, 1821, 1832, 1852, 1854, 1855, 1867, 1874, 1875, 1878, 1879, 1880, 1883, 1885, 1886, 1889, 1891, 1892, 1896, 1897, 1898, 1900, 1905, 1906, 1907, 1909, 1910, 1914, 1916], "mark_stat": [0, 1850], "none": [0, 1, 2, 3, 4, 6, 12, 15, 17, 23, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 49, 50, 52, 54, 57, 61, 62, 63, 64, 65, 105, 107, 108, 109, 111, 127, 128, 131, 143, 146, 147, 149, 166, 178, 179, 180, 181, 197, 198, 200, 202, 205, 206, 207, 208, 222, 227, 228, 229, 230, 250, 278, 282, 293, 327, 343, 346, 369, 399, 401, 402, 403, 406, 412, 418, 419, 420, 421, 422, 423, 436, 437, 438, 439, 440, 444, 445, 461, 470, 472, 478, 484, 493, 503, 510, 526, 527, 541, 542, 544, 545, 554, 569, 570, 572, 577, 579, 592, 597, 598, 599, 604, 615, 617, 619, 621, 623, 625, 627, 629, 631, 633, 635, 637, 639, 641, 644, 646, 648, 649, 651, 653, 655, 657, 659, 661, 663, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 738, 739, 740, 741, 742, 743, 744, 755, 756, 757, 758, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 782, 783, 784, 786, 788, 803, 806, 808, 809, 810, 811, 814, 815, 827, 828, 829, 846, 847, 848, 849, 850, 851, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 867, 868, 869, 870, 871, 872, 873, 874, 878, 879, 880, 881, 882, 883, 884, 885, 888, 889, 891, 893, 894, 895, 896, 897, 898, 902, 903, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 926, 929, 931, 932, 933, 934, 935, 937, 938, 940, 942, 944, 945, 946, 948, 949, 951, 952, 953, 954, 955, 956, 958, 959, 961, 962, 963, 967, 968, 970, 971, 972, 975, 976, 977, 983, 984, 990, 1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1025, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1042, 1047, 1048, 1050, 1051, 1052, 1054, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1109, 1110, 1111, 1112, 1113, 1117, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1159, 1160, 1176, 1177, 1179, 1181, 1182, 1186, 1189, 1191, 1192, 1193, 1195, 1197, 1198, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1320, 1321, 1322, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1357, 1358, 1360, 1362, 1363, 1364, 1367, 1368, 1369, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1428, 1430, 1431, 1445, 1446, 1447, 1448, 1449, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1473, 1474, 1478, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1504, 1505, 1508, 1509, 1510, 1511, 1513, 1514, 1521, 1523, 1524, 1525, 1526, 1527, 1530, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1553, 1556, 1563, 1567, 1568, 1569, 1570, 1578, 1579, 1580, 1582, 1583, 1584, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1627, 1629, 1630, 1631, 1632, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1687, 1688, 1689, 1692, 1693, 1694, 1696, 1697, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1719, 1720, 1721, 1726, 1728, 1729, 1730, 1735, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1773, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1811, 1812, 1813, 1814, 1816, 1818, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1832, 1833, 1836, 1837, 1838, 1839, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1873, 1875, 1878, 1880, 1881, 1886, 1888, 1891, 1893, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1910, 1911, 1912, 1914, 1916, 1918, 1919, 1920], "static": [0, 2, 4, 9, 13, 17, 26, 36, 41, 43, 57, 783, 804, 806, 815, 821, 846, 848, 850, 878, 879, 880, 881, 1195, 1457, 1594, 1775, 1852, 1853, 1854, 1855, 1878, 1885, 1894, 1898, 1901, 1905, 1911], "prevent": [0, 1, 8, 9, 17, 32, 33, 35, 36, 43, 57, 65, 724, 888, 958, 1036, 1037, 1179, 1281, 1309, 1312, 1352, 1420, 1445, 1532, 1569, 1570, 1585, 1594, 1697, 1776, 1779, 1799, 1825, 1827, 1835, 1867, 1874, 1875, 1878, 1879, 1882, 1886, 1897, 1899, 1907, 1909, 1910], "u": [0, 8, 9, 14, 17, 23, 58, 63, 65, 749, 890, 933, 934, 935, 1218, 1220, 1224, 1228, 1229, 1245, 1271, 1273, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1366, 1367, 1384, 1385, 1399, 1401, 1429, 1431, 1432, 1453, 1464, 1606, 1689, 1800, 1801, 1851, 1852, 1853, 1862, 1869, 1873, 1875, 1878, 1879, 1880, 1881, 1886, 1897, 1899, 1909, 1913, 1914], "from": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 49, 50, 52, 54, 55, 57, 58, 60, 62, 63, 64, 81, 146, 147, 166, 189, 214, 215, 250, 278, 305, 307, 311, 313, 369, 394, 439, 445, 462, 464, 465, 472, 477, 478, 483, 503, 505, 507, 533, 535, 549, 569, 596, 597, 599, 606, 669, 701, 702, 703, 704, 705, 706, 709, 717, 718, 721, 724, 727, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 761, 762, 763, 770, 777, 778, 781, 782, 783, 786, 789, 804, 805, 806, 813, 815, 829, 843, 847, 849, 850, 851, 853, 854, 868, 869, 880, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 902, 903, 911, 912, 920, 921, 926, 927, 939, 957, 958, 961, 970, 971, 972, 990, 994, 1012, 1039, 1055, 1075, 1077, 1078, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1139, 1140, 1144, 1159, 1179, 1180, 1182, 1183, 1185, 1187, 1188, 1189, 1192, 1193, 1205, 1221, 1225, 1234, 1237, 1238, 1251, 1252, 1253, 1254, 1268, 1272, 1273, 1286, 1291, 1295, 1296, 1297, 1299, 1304, 1313, 1314, 1322, 1326, 1332, 1333, 1334, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1366, 1367, 1368, 1369, 1375, 1377, 1378, 1379, 1380, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1414, 1415, 1416, 1420, 1424, 1425, 1429, 1431, 1432, 1453, 1458, 1459, 1463, 1465, 1466, 1478, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1510, 1513, 1515, 1524, 1537, 1538, 1539, 1551, 1581, 1585, 1594, 1598, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1621, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1642, 1648, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1689, 1692, 1700, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1721, 1722, 1725, 1727, 1728, 1735, 1748, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1796, 1797, 1801, 1811, 1814, 1823, 1825, 1827, 1832, 1833, 1835, 1836, 1845, 1850, 1852, 1853, 1854, 1855, 1857, 1859, 1861, 1862, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1896, 1898, 1899, 1900, 1901, 1905, 1906, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920], "can": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 143, 147, 246, 315, 327, 449, 478, 503, 505, 534, 603, 606, 669, 676, 718, 730, 731, 732, 737, 746, 747, 749, 757, 758, 761, 762, 763, 774, 780, 781, 782, 783, 786, 788, 803, 809, 812, 813, 815, 826, 830, 843, 847, 848, 850, 851, 852, 868, 869, 878, 879, 880, 882, 883, 884, 885, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 905, 909, 912, 929, 935, 942, 947, 956, 958, 961, 968, 970, 972, 979, 980, 998, 1000, 1004, 1006, 1008, 1012, 1013, 1038, 1055, 1056, 1059, 1060, 1073, 1075, 1076, 1077, 1078, 1091, 1094, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1121, 1122, 1123, 1126, 1127, 1135, 1138, 1143, 1144, 1157, 1173, 1179, 1180, 1182, 1183, 1185, 1186, 1188, 1192, 1193, 1195, 1197, 1198, 1203, 1206, 1213, 1221, 1224, 1228, 1229, 1234, 1237, 1240, 1241, 1245, 1251, 1253, 1270, 1271, 1273, 1283, 1292, 1311, 1313, 1314, 1315, 1320, 1321, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1351, 1352, 1356, 1357, 1358, 1359, 1362, 1363, 1366, 1371, 1372, 1373, 1375, 1381, 1383, 1384, 1387, 1388, 1389, 1400, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1419, 1420, 1421, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1441, 1442, 1445, 1450, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1466, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1508, 1509, 1524, 1537, 1538, 1539, 1557, 1563, 1582, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1606, 1627, 1628, 1634, 1639, 1641, 1645, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1678, 1679, 1681, 1685, 1687, 1696, 1700, 1708, 1712, 1722, 1728, 1731, 1743, 1745, 1746, 1748, 1773, 1775, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1794, 1795, 1796, 1800, 1814, 1818, 1821, 1823, 1831, 1834, 1837, 1838, 1842, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1859, 1861, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1871, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "improv": [0, 1, 2, 4, 10, 19, 23, 26, 30, 33, 35, 57, 65, 749, 793, 794, 795, 890, 892, 896, 950, 1135, 1352, 1366, 1384, 1429, 1460, 1563, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1683, 1850, 1852, 1874, 1879, 1880, 1881, 1889, 1890, 1894, 1900, 1901, 1905], "time": [0, 2, 4, 5, 8, 9, 10, 12, 13, 14, 17, 19, 20, 21, 22, 23, 26, 32, 33, 35, 36, 37, 39, 41, 42, 43, 49, 52, 53, 54, 62, 64, 65, 81, 282, 305, 478, 483, 606, 669, 674, 675, 676, 677, 678, 679, 680, 683, 734, 735, 745, 749, 753, 757, 758, 788, 790, 813, 830, 866, 896, 902, 903, 907, 910, 922, 930, 932, 947, 954, 958, 959, 961, 1001, 1014, 1033, 1036, 1047, 1076, 1077, 1078, 1084, 1095, 1096, 1097, 1105, 1108, 1117, 1118, 1119, 1122, 1123, 1171, 1179, 1182, 1189, 1194, 1197, 1198, 1202, 1207, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1226, 1227, 1228, 1231, 1233, 1237, 1240, 1242, 1244, 1245, 1253, 1254, 1276, 1286, 1303, 1304, 1306, 1316, 1324, 1325, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1358, 1361, 1362, 1363, 1366, 1377, 1378, 1379, 1384, 1386, 1400, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1426, 1427, 1429, 1450, 1453, 1465, 1466, 1467, 1468, 1478, 1481, 1482, 1508, 1509, 1553, 1554, 1555, 1571, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1601, 1602, 1604, 1606, 1640, 1656, 1657, 1677, 1687, 1688, 1699, 1721, 1727, 1777, 1791, 1796, 1797, 1816, 1842, 1850, 1854, 1855, 1856, 1861, 1863, 1867, 1873, 1875, 1877, 1879, 1880, 1882, 1883, 1885, 1886, 1888, 1890, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1906, 1907, 1909, 1914, 1919], "perform": [0, 1, 2, 3, 4, 5, 6, 12, 14, 15, 16, 17, 18, 19, 21, 24, 26, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 52, 53, 57, 61, 64, 65, 112, 199, 202, 449, 569, 592, 606, 675, 676, 677, 678, 679, 680, 749, 770, 793, 794, 795, 836, 847, 850, 883, 888, 890, 892, 893, 896, 897, 910, 922, 942, 947, 948, 957, 963, 1012, 1036, 1037, 1050, 1075, 1098, 1100, 1111, 1112, 1115, 1146, 1157, 1182, 1191, 1192, 1197, 1225, 1227, 1230, 1234, 1237, 1238, 1242, 1243, 1251, 1252, 1254, 1259, 1268, 1281, 1286, 1295, 1296, 1306, 1309, 1312, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1354, 1357, 1358, 1366, 1384, 1414, 1420, 1422, 1429, 1442, 1457, 1460, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1532, 1549, 1563, 1569, 1570, 1585, 1594, 1596, 1597, 1602, 1606, 1627, 1634, 1636, 1641, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1689, 1697, 1725, 1739, 1743, 1771, 1776, 1777, 1778, 1779, 1799, 1801, 1835, 1850, 1852, 1855, 1865, 1867, 1868, 1869, 1871, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1887, 1889, 1890, 1893, 1896, 1897, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1920], "ha": [0, 1, 2, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 23, 24, 26, 27, 28, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 49, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 81, 143, 189, 202, 247, 252, 327, 436, 437, 438, 439, 440, 464, 465, 486, 488, 533, 569, 570, 592, 593, 607, 669, 678, 682, 684, 685, 686, 688, 724, 749, 768, 770, 774, 776, 780, 786, 827, 829, 836, 847, 853, 863, 864, 866, 878, 881, 882, 884, 886, 892, 897, 898, 912, 930, 933, 934, 947, 948, 949, 955, 958, 959, 961, 966, 994, 997, 998, 1043, 1045, 1059, 1091, 1103, 1111, 1112, 1115, 1116, 1119, 1123, 1135, 1144, 1145, 1156, 1179, 1182, 1186, 1189, 1192, 1193, 1194, 1197, 1202, 1203, 1211, 1212, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1233, 1235, 1236, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1248, 1249, 1253, 1262, 1269, 1271, 1276, 1279, 1281, 1282, 1283, 1284, 1286, 1287, 1309, 1310, 1311, 1312, 1330, 1331, 1332, 1333, 1334, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1351, 1352, 1358, 1361, 1362, 1363, 1366, 1369, 1374, 1377, 1378, 1379, 1384, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1418, 1419, 1420, 1421, 1422, 1429, 1445, 1447, 1453, 1461, 1465, 1466, 1478, 1488, 1489, 1490, 1496, 1505, 1508, 1509, 1513, 1524, 1548, 1550, 1551, 1553, 1557, 1563, 1569, 1582, 1584, 1585, 1588, 1589, 1594, 1601, 1603, 1605, 1608, 1612, 1614, 1617, 1627, 1628, 1635, 1636, 1640, 1642, 1648, 1651, 1653, 1656, 1657, 1673, 1674, 1675, 1677, 1681, 1683, 1687, 1697, 1699, 1700, 1701, 1702, 1719, 1721, 1731, 1743, 1765, 1778, 1779, 1780, 1791, 1793, 1794, 1795, 1796, 1799, 1800, 1817, 1823, 1837, 1838, 1842, 1852, 1854, 1855, 1861, 1862, 1865, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1884, 1885, 1886, 1888, 1889, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1905, 1906, 1907, 1909, 1911, 1912, 1914, 1915, 1916, 1917], "lower": [0, 1, 2, 9, 14, 23, 33, 35, 41, 57, 782, 784, 848, 921, 926, 933, 934, 935, 937, 1069, 1070, 1142, 1143, 1211, 1218, 1220, 1228, 1229, 1236, 1239, 1244, 1282, 1304, 1311, 1322, 1432, 1488, 1489, 1490, 1561, 1562, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1681, 1683, 1698, 1700, 1720, 1735, 1743, 1780, 1823, 1824, 1825, 1851, 1852, 1853, 1855, 1871, 1873, 1875, 1886, 1895, 1900, 1910, 1916], "preced": [0, 39, 43, 57, 669, 1589, 1681, 1820, 1856, 1877, 1896, 1900], "backend": [0, 2, 13, 14, 15, 17, 18, 20, 21, 26, 51, 55, 57, 730, 731, 732, 781, 782, 822, 844, 845, 848, 850, 851, 890, 896, 942, 981, 1012, 1055, 1112, 1195, 1225, 1227, 1245, 1295, 1296, 1297, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1513, 1551, 1563, 1594, 1651, 1652, 1743, 1850, 1851, 1853, 1854, 1859, 1863, 1866, 1877, 1878, 1889, 1890, 1893, 1901, 1903, 1909, 1911], "inductor": [0, 12, 15, 16, 18, 20, 23, 669, 942, 1861], "nopython": [0, 14, 16, 17, 23], "guard_export_fn": 0, "guard_fail_fn": 0, "disabl": [0, 1, 3, 6, 13, 14, 15, 20, 23, 36, 41, 57, 65, 799, 800, 909, 942, 1001, 1055, 1059, 1111, 1157, 1182, 1184, 1197, 1198, 1414, 1420, 1453, 1461, 1563, 1594, 1595, 1636, 1639, 1744, 1745, 1748, 1775, 1850, 1854, 1861, 1874, 1877, 1878, 1879, 1880, 1884, 1889, 1890, 1893, 1898, 1904, 1909, 1916], "main": [0, 4, 8, 12, 14, 17, 22, 32, 33, 35, 36, 41, 43, 44, 45, 50, 52, 53, 54, 55, 65, 252, 486, 1042, 1043, 1044, 1045, 1046, 1244, 1515, 1780, 1824, 1825, 1826, 1827, 1849, 1852, 1865, 1867, 1869, 1870, 1874, 1875, 1878, 1879, 1880, 1881, 1886, 1892, 1905, 1906, 1914, 1915], "entrypoint": [0, 37, 40, 43, 45, 50, 53, 1867], "do": [0, 1, 2, 5, 8, 9, 10, 17, 18, 19, 20, 22, 23, 24, 26, 27, 32, 33, 35, 39, 40, 42, 43, 45, 52, 53, 54, 57, 58, 59, 62, 63, 64, 65, 485, 503, 505, 507, 747, 812, 815, 852, 881, 883, 888, 897, 928, 941, 1001, 1034, 1035, 1036, 1037, 1106, 1108, 1117, 1124, 1144, 1157, 1169, 1179, 1185, 1193, 1197, 1227, 1245, 1254, 1261, 1271, 1273, 1282, 1304, 1314, 1326, 1336, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1371, 1372, 1373, 1400, 1432, 1433, 1434, 1441, 1456, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1515, 1517, 1532, 1585, 1594, 1642, 1650, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1687, 1693, 1835, 1849, 1850, 1852, 1853, 1855, 1857, 1859, 1867, 1868, 1869, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1899, 1900, 1901, 1905, 1907, 1910, 1911, 1912, 1913, 1914, 1916], "extract": [0, 12, 21, 29, 65, 825, 1357, 1361, 1465, 1504, 1581, 1899, 1905, 1919], "paramet": [0, 1, 2, 3, 4, 6, 13, 14, 15, 18, 22, 24, 26, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 46, 50, 52, 54, 57, 59, 61, 64, 65, 81, 143, 148, 163, 165, 168, 171, 172, 173, 188, 189, 199, 202, 232, 246, 247, 252, 259, 289, 305, 307, 309, 311, 313, 317, 323, 385, 392, 394, 436, 437, 438, 439, 440, 449, 462, 483, 486, 487, 488, 489, 490, 503, 505, 507, 510, 514, 526, 533, 534, 535, 549, 555, 572, 573, 574, 576, 577, 592, 593, 596, 606, 607, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 739, 744, 745, 747, 748, 749, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 780, 782, 784, 786, 788, 789, 790, 803, 808, 809, 810, 811, 812, 813, 814, 815, 816, 827, 828, 829, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 904, 905, 906, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 939, 940, 941, 942, 944, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 963, 964, 966, 967, 968, 969, 970, 971, 972, 975, 976, 977, 979, 983, 984, 985, 987, 990, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1010, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1159, 1161, 1162, 1164, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1192, 1193, 1194, 1195, 1197, 1198, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1294, 1295, 1296, 1299, 1300, 1302, 1303, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1508, 1509, 1510, 1512, 1513, 1515, 1517, 1524, 1525, 1532, 1537, 1538, 1539, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1563, 1569, 1570, 1578, 1582, 1583, 1584, 1585, 1593, 1594, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1690, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1730, 1731, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1769, 1771, 1773, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1804, 1805, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1852, 1855, 1857, 1859, 1863, 1864, 1867, 1869, 1870, 1871, 1873, 1874, 1875, 1878, 1879, 1880, 1884, 1885, 1886, 1888, 1890, 1891, 1893, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1909, 1910, 1911, 1914, 1916, 1918, 1919, 1920], "One": [0, 4, 9, 12, 26, 35, 37, 57, 60, 62, 65, 572, 921, 1112, 1123, 1173, 1466, 1550, 1601, 1604, 1675, 1683, 1710, 1711, 1831, 1842, 1852, 1854, 1855, 1869, 1870, 1876, 1877, 1878, 1880, 1885, 1898, 1907, 1914], "thing": [0, 2, 4, 8, 9, 14, 17, 23, 35, 62, 65, 1112, 1191, 1283, 1330, 1515, 1774, 1854, 1875, 1878, 1880, 1881, 1882, 1883, 1888, 1893, 1897, 1900, 1901, 1907], "either": [0, 2, 9, 10, 14, 15, 16, 18, 26, 29, 32, 33, 35, 39, 40, 41, 43, 45, 50, 52, 53, 54, 57, 62, 64, 65, 147, 214, 305, 313, 503, 505, 606, 669, 721, 727, 728, 729, 734, 735, 745, 753, 768, 774, 780, 847, 879, 881, 888, 897, 898, 929, 942, 961, 969, 1055, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1108, 1112, 1135, 1159, 1175, 1182, 1197, 1237, 1252, 1253, 1268, 1283, 1320, 1321, 1324, 1325, 1328, 1329, 1330, 1331, 1342, 1343, 1344, 1346, 1347, 1348, 1350, 1358, 1368, 1374, 1381, 1383, 1405, 1406, 1408, 1409, 1414, 1417, 1418, 1419, 1420, 1421, 1428, 1429, 1431, 1445, 1446, 1461, 1462, 1464, 1466, 1467, 1468, 1485, 1486, 1496, 1524, 1525, 1548, 1556, 1582, 1589, 1594, 1619, 1641, 1656, 1657, 1659, 1681, 1696, 1698, 1740, 1796, 1800, 1845, 1849, 1852, 1854, 1855, 1857, 1861, 1869, 1873, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1888, 1890, 1893, 1896, 1897, 1898, 1900, 1906, 1907, 1909, 1910, 1913, 1916, 1921], "callabl": [0, 4, 6, 12, 15, 17, 22, 32, 33, 35, 39, 41, 43, 45, 50, 52, 54, 57, 64, 65, 67, 68, 69, 112, 390, 830, 942, 998, 999, 1001, 1112, 1113, 1114, 1119, 1122, 1123, 1182, 1185, 1193, 1197, 1253, 1254, 1414, 1457, 1459, 1461, 1463, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1664, 1666, 1667, 1668, 1669, 1670, 1677, 1680, 1842, 1849, 1852, 1854, 1855, 1856, 1865, 1878, 1886, 1893, 1897, 1898, 1899, 1905, 1916, 1918, 1919, 1920], "take": [0, 1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 17, 22, 26, 32, 33, 35, 37, 39, 41, 43, 51, 52, 53, 54, 57, 59, 60, 62, 63, 64, 65, 749, 782, 787, 803, 809, 815, 851, 890, 891, 892, 893, 894, 895, 897, 898, 935, 955, 992, 1043, 1045, 1046, 1071, 1073, 1076, 1079, 1083, 1084, 1086, 1089, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1214, 1236, 1239, 1322, 1331, 1358, 1362, 1363, 1366, 1384, 1408, 1409, 1410, 1411, 1412, 1414, 1422, 1429, 1457, 1467, 1468, 1508, 1509, 1526, 1550, 1563, 1594, 1639, 1667, 1671, 1696, 1823, 1842, 1849, 1852, 1853, 1855, 1862, 1863, 1867, 1868, 1869, 1870, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1886, 1890, 1892, 1893, 1895, 1897, 1899, 1900, 1905, 1906, 1907, 1909, 1912, 1913, 1914, 1918], "graphmodul": [0, 12, 17, 22, 23, 67, 68, 69, 70, 848, 849, 850, 851, 1919], "example_input": [0, 12, 17, 806, 807, 850, 851, 1193, 1197, 1900, 1919], "python": [0, 1, 2, 4, 5, 10, 12, 13, 14, 15, 16, 19, 20, 21, 23, 26, 27, 29, 32, 35, 39, 41, 42, 43, 45, 46, 49, 50, 52, 53, 57, 65, 344, 578, 613, 669, 770, 869, 890, 891, 892, 893, 894, 895, 897, 898, 928, 929, 941, 942, 992, 998, 999, 1001, 1050, 1055, 1073, 1075, 1103, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1158, 1180, 1182, 1183, 1185, 1186, 1187, 1192, 1193, 1197, 1253, 1415, 1416, 1424, 1425, 1563, 1594, 1693, 1715, 1719, 1739, 1740, 1775, 1842, 1849, 1859, 1861, 1866, 1867, 1869, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1885, 1888, 1891, 1892, 1897, 1900, 1904, 1905, 1906, 1907, 1912, 1915, 1916], "run": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 16, 17, 18, 19, 22, 23, 26, 27, 29, 32, 33, 35, 36, 39, 41, 43, 44, 45, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 143, 781, 787, 806, 808, 809, 810, 811, 814, 846, 850, 851, 852, 882, 896, 897, 898, 1000, 1001, 1112, 1117, 1123, 1157, 1182, 1183, 1185, 1186, 1189, 1191, 1193, 1195, 1197, 1198, 1227, 1253, 1254, 1282, 1332, 1333, 1334, 1351, 1377, 1378, 1379, 1387, 1388, 1389, 1396, 1397, 1398, 1414, 1442, 1453, 1563, 1585, 1594, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1670, 1743, 1747, 1779, 1825, 1827, 1835, 1842, 1850, 1852, 1855, 1863, 1865, 1867, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1903, 1904, 1905, 1906, 1907, 1909, 1914, 1917, 1918, 1919], "faster": [0, 1, 3, 9, 14, 16, 19, 21, 24, 32, 33, 35, 57, 891, 897, 898, 1111, 1211, 1212, 1217, 1218, 1222, 1227, 1235, 1237, 1239, 1242, 1245, 1247, 1251, 1254, 1430, 1447, 1553, 1569, 1594, 1598, 1599, 1601, 1656, 1657, 1668, 1782, 1783, 1784, 1786, 1787, 1863, 1875, 1878, 1883, 1896, 1900, 1909, 1914], "also": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 19, 20, 22, 23, 24, 26, 27, 29, 32, 33, 35, 39, 40, 41, 42, 49, 52, 57, 61, 62, 63, 64, 65, 147, 211, 214, 215, 246, 315, 503, 505, 507, 532, 603, 730, 731, 732, 749, 789, 803, 850, 869, 878, 879, 888, 911, 920, 934, 942, 955, 998, 1001, 1012, 1036, 1037, 1055, 1059, 1075, 1106, 1112, 1118, 1122, 1123, 1124, 1127, 1129, 1139, 1140, 1144, 1157, 1182, 1185, 1186, 1188, 1191, 1195, 1197, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1283, 1289, 1302, 1310, 1322, 1330, 1332, 1333, 1334, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1358, 1361, 1366, 1380, 1384, 1414, 1421, 1429, 1443, 1445, 1453, 1462, 1463, 1465, 1491, 1492, 1493, 1513, 1550, 1566, 1585, 1594, 1604, 1606, 1616, 1618, 1620, 1621, 1622, 1623, 1639, 1671, 1677, 1681, 1684, 1687, 1712, 1719, 1731, 1741, 1756, 1757, 1774, 1777, 1791, 1800, 1809, 1811, 1814, 1820, 1821, 1832, 1833, 1842, 1845, 1849, 1850, 1852, 1854, 1855, 1859, 1861, 1862, 1863, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1905, 1906, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920], "provid": [0, 1, 2, 4, 8, 9, 10, 12, 14, 17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 50, 52, 53, 54, 55, 57, 61, 64, 65, 143, 592, 669, 678, 724, 727, 728, 729, 734, 735, 737, 745, 746, 749, 753, 777, 778, 788, 789, 803, 813, 830, 847, 882, 891, 893, 894, 895, 921, 926, 929, 934, 935, 954, 966, 1012, 1055, 1075, 1111, 1123, 1135, 1143, 1144, 1179, 1182, 1188, 1189, 1193, 1195, 1197, 1212, 1229, 1254, 1286, 1345, 1346, 1347, 1350, 1366, 1367, 1375, 1380, 1384, 1385, 1410, 1411, 1412, 1414, 1420, 1421, 1424, 1429, 1431, 1442, 1457, 1458, 1459, 1460, 1461, 1485, 1486, 1563, 1594, 1608, 1628, 1636, 1651, 1652, 1681, 1684, 1689, 1725, 1735, 1782, 1783, 1784, 1785, 1786, 1787, 1825, 1827, 1842, 1849, 1852, 1854, 1855, 1859, 1861, 1862, 1863, 1865, 1867, 1868, 1869, 1878, 1879, 1880, 1881, 1883, 1886, 1887, 1889, 1893, 1896, 1897, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1921], "addit": [0, 1, 2, 4, 6, 8, 10, 14, 19, 20, 23, 26, 27, 32, 35, 36, 37, 41, 46, 52, 53, 57, 64, 65, 327, 503, 596, 738, 740, 741, 742, 743, 747, 749, 770, 784, 803, 848, 1012, 1179, 1182, 1186, 1191, 1196, 1322, 1333, 1334, 1335, 1345, 1346, 1347, 1358, 1365, 1366, 1368, 1375, 1378, 1379, 1393, 1394, 1395, 1399, 1400, 1401, 1402, 1404, 1410, 1411, 1412, 1414, 1420, 1422, 1447, 1449, 1453, 1457, 1461, 1463, 1484, 1491, 1492, 1493, 1530, 1594, 1659, 1832, 1833, 1840, 1852, 1854, 1855, 1861, 1865, 1868, 1869, 1870, 1875, 1877, 1878, 1880, 1881, 1885, 1888, 1889, 1892, 1893, 1894, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1913, 1916], "context": [0, 1, 3, 6, 17, 32, 39, 43, 52, 53, 57, 65, 143, 781, 878, 879, 880, 882, 883, 896, 897, 909, 962, 977, 979, 990, 996, 1001, 1008, 1028, 1030, 1059, 1113, 1117, 1122, 1157, 1182, 1295, 1414, 1563, 1585, 1594, 1595, 1604, 1606, 1639, 1648, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1745, 1775, 1850, 1855, 1856, 1867, 1874, 1875, 1878, 1880, 1884, 1885, 1888, 1893, 1897, 1899, 1904, 1905, 1907, 1909, 1912, 1917], "like": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 32, 33, 35, 40, 41, 50, 52, 53, 57, 58, 59, 60, 61, 62, 63, 65, 328, 578, 606, 749, 782, 830, 849, 867, 888, 897, 898, 911, 920, 998, 999, 1008, 1050, 1055, 1056, 1076, 1098, 1101, 1102, 1108, 1112, 1115, 1116, 1117, 1123, 1139, 1140, 1180, 1182, 1183, 1189, 1192, 1197, 1201, 1228, 1229, 1240, 1253, 1322, 1330, 1358, 1361, 1377, 1378, 1379, 1414, 1415, 1416, 1424, 1425, 1442, 1465, 1507, 1525, 1581, 1585, 1594, 1595, 1596, 1597, 1602, 1627, 1645, 1693, 1708, 1712, 1731, 1740, 1743, 1800, 1811, 1842, 1847, 1849, 1850, 1852, 1854, 1855, 1862, 1867, 1868, 1869, 1874, 1875, 1878, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1893, 1896, 1898, 1899, 1900, 1903, 1905, 1906, 1909, 1911, 1912, 1916, 1917, 1919, 1920], "jit": [0, 1, 12, 16, 21, 24, 26, 998, 999, 1030, 1132, 1180, 1181, 1182, 1196, 1650, 1651, 1746, 1747, 1850, 1854, 1857, 1863, 1869, 1877, 1885, 1891, 1893, 1900, 1905, 1914], "fuser": [0, 782, 1195, 1852], "fuser2": 0, "set": [0, 1, 2, 3, 4, 6, 9, 10, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 31, 32, 33, 35, 36, 37, 39, 41, 43, 45, 50, 52, 53, 54, 55, 57, 60, 61, 64, 65, 81, 143, 147, 246, 322, 436, 437, 438, 439, 440, 449, 486, 510, 569, 570, 669, 724, 730, 732, 749, 768, 774, 781, 782, 783, 786, 804, 805, 806, 809, 810, 811, 814, 815, 830, 843, 847, 848, 850, 851, 854, 867, 879, 881, 882, 889, 890, 891, 892, 893, 894, 895, 896, 909, 921, 926, 937, 941, 942, 948, 966, 981, 990, 1002, 1003, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1056, 1058, 1111, 1120, 1129, 1144, 1162, 1163, 1182, 1186, 1189, 1191, 1193, 1195, 1197, 1198, 1217, 1218, 1221, 1227, 1234, 1236, 1238, 1239, 1251, 1252, 1253, 1254, 1268, 1271, 1274, 1294, 1298, 1299, 1300, 1322, 1326, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1359, 1366, 1369, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1399, 1401, 1405, 1406, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1424, 1428, 1429, 1445, 1446, 1453, 1462, 1463, 1478, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1498, 1499, 1500, 1501, 1506, 1513, 1517, 1524, 1525, 1534, 1535, 1548, 1550, 1556, 1563, 1582, 1594, 1596, 1597, 1602, 1607, 1636, 1648, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1699, 1706, 1708, 1712, 1714, 1715, 1723, 1724, 1735, 1736, 1739, 1740, 1741, 1742, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1765, 1780, 1794, 1795, 1814, 1824, 1825, 1826, 1827, 1835, 1837, 1838, 1849, 1851, 1852, 1854, 1855, 1856, 1859, 1861, 1863, 1864, 1865, 1867, 1870, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1892, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1911, 1914, 1916, 1918, 1919, 1920], "backend_ctx_ctor": 0, "attribut": [0, 1, 2, 17, 22, 24, 32, 33, 35, 36, 42, 65, 143, 282, 485, 486, 716, 727, 728, 729, 730, 731, 732, 734, 735, 745, 753, 780, 791, 804, 805, 806, 827, 828, 829, 847, 848, 878, 882, 884, 888, 1106, 1181, 1182, 1183, 1185, 1186, 1192, 1193, 1254, 1351, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1414, 1457, 1594, 1595, 1605, 1606, 1607, 1628, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1850, 1853, 1856, 1870, 1874, 1875, 1878, 1880, 1881, 1886, 1891, 1893, 1897, 1900, 1905, 1915, 1916, 1920, 1921], "see": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 22, 23, 26, 27, 28, 31, 32, 35, 36, 41, 44, 52, 53, 55, 57, 62, 63, 64, 65, 82, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 119, 121, 122, 125, 127, 128, 129, 130, 131, 133, 135, 137, 138, 141, 143, 144, 146, 147, 148, 149, 150, 152, 154, 156, 158, 160, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185, 186, 190, 192, 193, 195, 197, 198, 200, 203, 204, 205, 207, 210, 211, 213, 217, 218, 219, 220, 221, 222, 223, 226, 227, 229, 231, 232, 233, 235, 237, 238, 240, 242, 244, 247, 248, 253, 255, 256, 257, 258, 259, 260, 262, 264, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 297, 299, 301, 305, 313, 314, 315, 316, 317, 319, 320, 326, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 351, 353, 355, 357, 359, 361, 362, 364, 366, 370, 371, 372, 373, 374, 376, 378, 380, 382, 384, 385, 386, 388, 389, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 418, 420, 421, 422, 423, 424, 425, 429, 431, 433, 441, 443, 444, 446, 448, 450, 451, 452, 453, 455, 456, 458, 459, 461, 468, 470, 471, 473, 475, 478, 479, 481, 483, 484, 485, 487, 488, 489, 491, 492, 495, 496, 497, 500, 505, 507, 508, 509, 511, 514, 515, 517, 519, 520, 522, 524, 527, 528, 529, 531, 532, 536, 537, 539, 541, 543, 544, 545, 550, 552, 554, 556, 557, 558, 559, 561, 562, 563, 565, 567, 568, 579, 580, 581, 583, 584, 586, 588, 590, 594, 595, 598, 599, 600, 603, 604, 605, 607, 608, 609, 610, 669, 682, 684, 685, 688, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 734, 735, 737, 745, 746, 749, 750, 751, 752, 753, 754, 755, 756, 757, 760, 761, 762, 763, 768, 769, 770, 771, 772, 773, 774, 782, 829, 848, 849, 850, 851, 854, 863, 864, 865, 868, 879, 881, 882, 883, 884, 885, 887, 888, 892, 896, 897, 902, 903, 906, 911, 913, 920, 922, 925, 939, 942, 952, 956, 957, 958, 959, 961, 963, 964, 966, 980, 981, 990, 991, 1001, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1019, 1020, 1021, 1050, 1053, 1055, 1056, 1058, 1059, 1068, 1073, 1091, 1094, 1109, 1114, 1115, 1116, 1118, 1127, 1135, 1139, 1140, 1144, 1145, 1153, 1154, 1155, 1157, 1182, 1186, 1193, 1197, 1198, 1200, 1201, 1203, 1213, 1221, 1224, 1227, 1229, 1236, 1238, 1239, 1247, 1251, 1252, 1254, 1260, 1262, 1268, 1269, 1271, 1279, 1281, 1282, 1283, 1284, 1286, 1287, 1295, 1296, 1302, 1309, 1311, 1312, 1322, 1330, 1331, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1357, 1358, 1360, 1366, 1368, 1374, 1375, 1380, 1381, 1384, 1405, 1406, 1410, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1421, 1426, 1427, 1428, 1429, 1432, 1441, 1443, 1445, 1446, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1550, 1551, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1561, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1579, 1580, 1581, 1582, 1583, 1584, 1594, 1595, 1601, 1602, 1603, 1606, 1612, 1621, 1630, 1635, 1638, 1639, 1640, 1641, 1645, 1687, 1697, 1698, 1708, 1710, 1712, 1714, 1715, 1719, 1722, 1725, 1731, 1740, 1743, 1745, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1768, 1775, 1776, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1794, 1795, 1796, 1799, 1809, 1811, 1814, 1820, 1821, 1825, 1827, 1835, 1837, 1838, 1843, 1845, 1847, 1849, 1850, 1852, 1853, 1854, 1855, 1856, 1860, 1861, 1862, 1864, 1867, 1868, 1869, 1870, 1871, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1898, 1899, 1900, 1901, 1904, 1905, 1906, 1909, 1910, 1912, 1913, 1915, 1916, 1917, 1920, 1921], "aotautogradmemoryefficientfusionwithcontext": 0, "usag": [0, 1, 2, 5, 8, 10, 14, 23, 27, 32, 35, 39, 41, 42, 43, 46, 49, 50, 52, 54, 57, 65, 737, 746, 781, 782, 783, 799, 800, 801, 802, 804, 805, 806, 843, 847, 879, 1004, 1024, 1028, 1055, 1106, 1111, 1115, 1116, 1117, 1195, 1254, 1594, 1649, 1852, 1855, 1865, 1869, 1874, 1875, 1880, 1882, 1893, 1899, 1907, 1914, 1915, 1917, 1918, 1919], "Or": [0, 8, 17, 43, 65, 937, 1884, 1887, 1893, 1909], "string": [0, 3, 4, 12, 14, 17, 23, 25, 26, 32, 35, 43, 49, 50, 52, 65, 592, 803, 843, 981, 998, 999, 1055, 1112, 1182, 1189, 1192, 1253, 1342, 1343, 1344, 1414, 1415, 1424, 1457, 1459, 1461, 1488, 1489, 1490, 1617, 1699, 1731, 1739, 1741, 1849, 1853, 1854, 1855, 1856, 1869, 1875, 1880, 1885, 1886, 1893, 1897, 1899, 1905, 1911, 1912, 1914, 1919, 1920], "name": [0, 2, 3, 4, 12, 13, 14, 17, 20, 22, 23, 26, 33, 35, 40, 41, 43, 45, 46, 49, 50, 52, 54, 57, 65, 669, 686, 736, 737, 746, 781, 803, 804, 805, 806, 813, 829, 843, 847, 906, 957, 984, 1111, 1121, 1180, 1182, 1183, 1189, 1192, 1197, 1198, 1212, 1217, 1218, 1224, 1225, 1227, 1228, 1229, 1230, 1240, 1241, 1243, 1245, 1246, 1253, 1414, 1464, 1587, 1592, 1593, 1594, 1601, 1602, 1603, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1636, 1638, 1650, 1651, 1731, 1741, 1836, 1849, 1850, 1852, 1853, 1855, 1856, 1859, 1861, 1864, 1865, 1867, 1873, 1875, 1878, 1879, 1880, 1883, 1885, 1886, 1893, 1895, 1897, 1898, 1899, 1905, 1906, 1911, 1914, 1916, 1917, 1918, 1919, 1920, 1921], "list_backend": [0, 12, 15, 16, 18, 942, 1850], "whole": [0, 17, 19, 20, 32, 35, 37, 1123, 1182, 1414, 1442, 1453, 1594, 1842, 1875, 1879, 1888, 1889, 1897], "program": [0, 2, 4, 5, 9, 14, 16, 18, 19, 21, 23, 29, 32, 35, 44, 53, 55, 57, 65, 606, 947, 948, 1004, 1006, 1112, 1743, 1852, 1854, 1856, 1875, 1878, 1882, 1885, 1887, 1888, 1891, 1892, 1914], "turn": [0, 15, 16, 17, 26, 32, 62, 65, 669, 862, 942, 1170, 1197, 1458, 1460, 1782, 1783, 1784, 1785, 1786, 1787, 1862, 1875, 1878, 1889, 1890, 1893, 1899, 1900, 1906, 1909], "decor": [0, 1, 2, 12, 21, 41, 45, 49, 53, 65, 888, 1059, 1157, 1187, 1193, 1199, 1639, 1775, 1852, 1854, 1855, 1859, 1874, 1875, 1880, 1898, 1905, 1920], "exampl": [0, 1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 26, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 80, 81, 184, 201, 234, 246, 252, 281, 303, 305, 307, 309, 313, 327, 344, 393, 394, 436, 437, 438, 439, 440, 462, 472, 474, 478, 483, 486, 489, 503, 505, 507, 526, 533, 547, 549, 569, 570, 572, 573, 574, 575, 576, 577, 578, 596, 606, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 709, 717, 718, 723, 727, 728, 729, 730, 731, 732, 734, 735, 737, 745, 746, 747, 749, 750, 751, 752, 753, 754, 761, 762, 763, 774, 781, 782, 783, 785, 786, 799, 800, 801, 802, 803, 804, 805, 806, 813, 827, 843, 848, 849, 850, 851, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 900, 902, 903, 910, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 940, 941, 942, 944, 947, 948, 949, 950, 951, 952, 953, 954, 955, 998, 999, 1004, 1006, 1034, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1119, 1121, 1123, 1124, 1125, 1126, 1129, 1135, 1138, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1152, 1156, 1157, 1159, 1167, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1302, 1303, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1478, 1480, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1504, 1505, 1508, 1509, 1513, 1515, 1548, 1550, 1551, 1554, 1555, 1563, 1582, 1585, 1594, 1601, 1602, 1604, 1606, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1688, 1690, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1735, 1737, 1738, 1739, 1740, 1741, 1744, 1745, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1769, 1773, 1775, 1777, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1795, 1797, 1799, 1800, 1802, 1803, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1856, 1859, 1861, 1862, 1864, 1865, 1868, 1869, 1870, 1873, 1875, 1876, 1877, 1878, 1882, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920], "toy_exampl": [0, 12, 13, 14, 17, 23], "b": [0, 1, 2, 4, 12, 13, 14, 16, 17, 22, 23, 24, 32, 35, 37, 41, 50, 65, 252, 327, 390, 606, 674, 675, 737, 746, 770, 813, 869, 886, 888, 889, 900, 902, 903, 910, 921, 922, 924, 928, 930, 932, 935, 940, 949, 955, 998, 999, 1047, 1050, 1054, 1055, 1100, 1101, 1102, 1103, 1108, 1112, 1125, 1147, 1159, 1179, 1185, 1192, 1193, 1201, 1202, 1204, 1213, 1214, 1222, 1226, 1227, 1231, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1247, 1248, 1251, 1254, 1263, 1265, 1266, 1272, 1280, 1285, 1287, 1303, 1335, 1357, 1358, 1365, 1401, 1484, 1505, 1512, 1530, 1601, 1628, 1629, 1630, 1631, 1632, 1633, 1641, 1648, 1667, 1669, 1700, 1706, 1719, 1722, 1738, 1750, 1769, 1777, 1782, 1783, 1784, 1786, 1787, 1791, 1796, 1797, 1799, 1806, 1807, 1816, 1823, 1824, 1826, 1839, 1844, 1851, 1852, 1853, 1854, 1855, 1868, 1869, 1870, 1873, 1874, 1876, 1878, 1882, 1883, 1884, 1889, 1891, 1899, 1900, 1906, 1907, 1909, 1910, 1913, 1914, 1919], "optimize_assert": [0, 1850], "hook": [0, 2, 14, 17, 21, 36, 39, 57, 478, 737, 746, 888, 902, 903, 1001, 1182, 1351, 1414, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1624, 1635, 1638, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1850, 1871, 1879, 1880, 1885, 1897, 1900], "export_constraint": 0, "same": [0, 1, 2, 4, 8, 12, 14, 17, 19, 22, 23, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 41, 43, 49, 50, 52, 53, 54, 55, 57, 60, 62, 64, 65, 132, 146, 188, 214, 247, 303, 305, 307, 311, 313, 331, 436, 437, 438, 439, 440, 462, 474, 487, 488, 490, 503, 505, 507, 510, 533, 569, 606, 607, 675, 678, 682, 684, 685, 686, 688, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 747, 750, 751, 752, 753, 754, 768, 774, 777, 778, 782, 783, 785, 789, 791, 803, 808, 811, 813, 814, 848, 850, 867, 868, 869, 881, 884, 887, 890, 891, 892, 893, 894, 895, 897, 898, 910, 912, 913, 922, 924, 926, 929, 934, 936, 944, 955, 956, 958, 969, 971, 990, 1001, 1038, 1043, 1045, 1046, 1052, 1055, 1057, 1058, 1061, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1103, 1107, 1108, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1124, 1127, 1135, 1143, 1144, 1152, 1156, 1173, 1179, 1182, 1192, 1193, 1197, 1198, 1202, 1203, 1211, 1212, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1249, 1269, 1273, 1275, 1276, 1279, 1281, 1282, 1283, 1284, 1287, 1309, 1312, 1313, 1314, 1320, 1321, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1358, 1359, 1361, 1364, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1386, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1422, 1423, 1428, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1465, 1466, 1469, 1470, 1471, 1478, 1484, 1485, 1486, 1488, 1489, 1490, 1496, 1505, 1513, 1515, 1524, 1525, 1563, 1582, 1594, 1601, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1627, 1631, 1636, 1641, 1642, 1646, 1648, 1652, 1666, 1687, 1692, 1693, 1696, 1697, 1709, 1711, 1713, 1717, 1719, 1721, 1722, 1726, 1735, 1738, 1751, 1774, 1782, 1783, 1784, 1786, 1787, 1793, 1794, 1795, 1799, 1800, 1810, 1821, 1832, 1833, 1834, 1835, 1837, 1838, 1839, 1842, 1848, 1849, 1852, 1854, 1855, 1865, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1888, 1889, 1890, 1891, 1893, 1896, 1897, 1898, 1900, 1903, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1920], "f": [0, 2, 11, 12, 17, 22, 33, 35, 41, 43, 44, 49, 50, 58, 59, 62, 63, 64, 65, 166, 250, 278, 327, 369, 884, 885, 1073, 1075, 1082, 1091, 1112, 1113, 1115, 1116, 1117, 1118, 1122, 1123, 1135, 1182, 1189, 1192, 1193, 1253, 1380, 1382, 1383, 1385, 1414, 1463, 1480, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1504, 1505, 1508, 1509, 1515, 1548, 1550, 1551, 1563, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1731, 1842, 1852, 1854, 1855, 1868, 1869, 1875, 1878, 1880, 1882, 1883, 1884, 1886, 1892, 1893, 1897, 1898, 1909, 1914, 1916, 1920], "arg": [0, 1, 2, 4, 5, 6, 12, 13, 17, 22, 23, 26, 32, 33, 35, 39, 40, 41, 43, 44, 50, 51, 53, 54, 55, 57, 64, 65, 80, 569, 592, 669, 721, 736, 738, 740, 741, 742, 743, 749, 751, 752, 813, 850, 879, 881, 886, 887, 1001, 1111, 1115, 1116, 1117, 1123, 1182, 1185, 1271, 1330, 1331, 1348, 1350, 1366, 1374, 1376, 1381, 1384, 1403, 1405, 1406, 1414, 1417, 1418, 1419, 1421, 1428, 1429, 1442, 1444, 1445, 1446, 1448, 1452, 1453, 1454, 1455, 1462, 1485, 1486, 1496, 1525, 1548, 1556, 1585, 1594, 1608, 1613, 1627, 1634, 1636, 1649, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1801, 1833, 1839, 1842, 1849, 1853, 1855, 1856, 1867, 1869, 1875, 1878, 1879, 1880, 1881, 1888, 1893, 1894, 1897, 1898, 1905, 1906, 1907, 1911, 1919, 1920], "aten_graph": 0, "pre_autograd": 0, "decomposition_t": 0, "tracing_mod": 0, "symbol": [0, 26, 31, 613, 806, 1196, 1250, 1384, 1429, 1823, 1839, 1850, 1855, 1894], "constraint": [0, 35, 40, 783, 784, 891, 990, 1001, 1117, 1594, 1602, 1627, 1850, 1855, 1870, 1881, 1883, 1886, 1909], "assume_static_by_default": 0, "kwarg": [0, 1, 2, 6, 12, 13, 22, 23, 26, 35, 36, 39, 52, 57, 65, 569, 592, 736, 749, 751, 752, 810, 811, 813, 816, 879, 959, 961, 998, 999, 1111, 1122, 1123, 1182, 1185, 1187, 1245, 1271, 1366, 1376, 1384, 1403, 1414, 1429, 1444, 1448, 1452, 1454, 1455, 1585, 1590, 1594, 1608, 1613, 1617, 1627, 1634, 1636, 1639, 1649, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1731, 1833, 1842, 1849, 1855, 1856, 1880, 1881, 1886, 1894, 1896, 1905, 1911, 1919, 1920], "input": [0, 2, 3, 4, 6, 10, 22, 23, 24, 27, 30, 32, 33, 35, 36, 39, 40, 41, 42, 45, 57, 58, 59, 60, 61, 62, 63, 65, 81, 143, 252, 272, 293, 393, 474, 507, 598, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 709, 717, 718, 723, 724, 727, 728, 729, 730, 731, 732, 734, 735, 745, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 791, 803, 806, 808, 826, 827, 828, 829, 846, 847, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 906, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 930, 931, 933, 934, 935, 936, 937, 938, 939, 941, 944, 947, 948, 949, 950, 951, 952, 953, 954, 955, 971, 998, 999, 1001, 1034, 1035, 1036, 1037, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1123, 1124, 1125, 1126, 1127, 1128, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1162, 1164, 1167, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1185, 1186, 1188, 1189, 1193, 1195, 1197, 1198, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1272, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1604, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1620, 1621, 1622, 1623, 1627, 1628, 1629, 1631, 1636, 1639, 1640, 1641, 1643, 1644, 1646, 1648, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1674, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1709, 1711, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1732, 1733, 1734, 1737, 1738, 1740, 1751, 1752, 1753, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1776, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1811, 1812, 1813, 1815, 1817, 1818, 1819, 1820, 1823, 1824, 1826, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1848, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1862, 1863, 1869, 1870, 1871, 1873, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1885, 1886, 1889, 1890, 1891, 1893, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1909, 1910, 1912, 1913, 1916, 1918, 1919, 1920], "format": [0, 2, 23, 30, 33, 35, 37, 45, 54, 65, 148, 163, 165, 168, 171, 172, 173, 188, 199, 202, 232, 259, 289, 317, 323, 385, 489, 490, 514, 569, 572, 573, 574, 575, 576, 577, 669, 724, 749, 781, 782, 939, 1001, 1055, 1056, 1057, 1110, 1179, 1182, 1195, 1224, 1337, 1358, 1366, 1384, 1414, 1429, 1594, 1628, 1630, 1646, 1648, 1649, 1651, 1709, 1711, 1713, 1731, 1774, 1777, 1782, 1783, 1784, 1785, 1786, 1787, 1796, 1848, 1849, 1852, 1855, 1856, 1861, 1878, 1880, 1886, 1891, 1893, 1894, 1895, 1899, 1900, 1905, 1906, 1909, 1912, 1914, 1916], "execut": [0, 1, 2, 3, 4, 5, 6, 8, 13, 14, 17, 19, 21, 22, 23, 26, 27, 32, 35, 37, 39, 43, 44, 46, 53, 57, 62, 64, 65, 478, 902, 903, 961, 972, 1033, 1112, 1182, 1183, 1185, 1197, 1198, 1253, 1295, 1296, 1351, 1414, 1420, 1458, 1459, 1460, 1461, 1588, 1590, 1594, 1746, 1850, 1852, 1854, 1856, 1863, 1874, 1876, 1877, 1882, 1885, 1886, 1888, 1890, 1892, 1893, 1899, 1900, 1905, 1906, 1909], "outsid": [0, 1, 6, 10, 19, 32, 45, 57, 62, 673, 784, 874, 1111, 1113, 1117, 1122, 1183, 1513, 1594, 1672, 1673, 1678, 1679, 1685, 1854, 1855, 1873, 1875, 1878, 1881, 1882, 1916], "pytorch": [0, 1, 2, 3, 4, 5, 6, 12, 14, 15, 17, 18, 21, 22, 24, 25, 26, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 57, 58, 61, 63, 65, 78, 79, 143, 503, 572, 669, 687, 719, 720, 721, 722, 734, 735, 745, 749, 750, 751, 752, 753, 754, 781, 782, 799, 800, 801, 802, 869, 882, 927, 932, 933, 942, 943, 955, 961, 980, 981, 992, 997, 1055, 1100, 1106, 1112, 1113, 1117, 1122, 1123, 1128, 1168, 1169, 1192, 1212, 1223, 1225, 1226, 1227, 1230, 1243, 1252, 1268, 1271, 1272, 1283, 1330, 1337, 1366, 1380, 1410, 1411, 1412, 1457, 1563, 1594, 1627, 1635, 1636, 1641, 1648, 1652, 1699, 1731, 1739, 1740, 1750, 1796, 1800, 1823, 1835, 1842, 1849, 1851, 1854, 1855, 1859, 1861, 1862, 1864, 1865, 1869, 1870, 1871, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1896, 1897, 1899, 1900, 1901, 1902, 1905, 1906, 1909, 1910, 1912, 1913, 1914, 1920, 1921], "A": [0, 2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 22, 23, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 49, 52, 53, 54, 57, 58, 63, 64, 70, 81, 549, 569, 572, 573, 574, 583, 613, 669, 681, 686, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 734, 735, 745, 750, 751, 752, 753, 754, 779, 781, 803, 847, 848, 850, 851, 908, 911, 920, 921, 923, 928, 933, 934, 941, 942, 950, 954, 958, 959, 961, 969, 971, 972, 1040, 1055, 1060, 1068, 1069, 1070, 1082, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1126, 1135, 1138, 1139, 1140, 1144, 1172, 1173, 1174, 1175, 1178, 1180, 1182, 1185, 1189, 1192, 1194, 1197, 1198, 1202, 1206, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1251, 1254, 1262, 1270, 1271, 1272, 1273, 1277, 1315, 1331, 1335, 1337, 1350, 1357, 1358, 1367, 1368, 1376, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1404, 1413, 1414, 1420, 1442, 1447, 1449, 1457, 1462, 1463, 1478, 1484, 1496, 1504, 1515, 1525, 1532, 1543, 1563, 1569, 1570, 1585, 1594, 1595, 1596, 1597, 1601, 1603, 1606, 1628, 1629, 1632, 1648, 1649, 1650, 1651, 1656, 1658, 1659, 1664, 1668, 1670, 1674, 1675, 1677, 1680, 1681, 1683, 1689, 1699, 1701, 1702, 1703, 1704, 1705, 1716, 1722, 1728, 1731, 1764, 1773, 1775, 1776, 1779, 1791, 1795, 1796, 1800, 1801, 1818, 1823, 1824, 1825, 1826, 1827, 1831, 1832, 1833, 1834, 1835, 1838, 1842, 1845, 1849, 1851, 1852, 1853, 1854, 1855, 1859, 1862, 1863, 1868, 1869, 1873, 1874, 1877, 1878, 1880, 1881, 1882, 1888, 1889, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1919, 1920, 1921], "variabl": [0, 3, 4, 6, 14, 16, 23, 26, 29, 31, 33, 41, 43, 45, 50, 55, 57, 62, 65, 439, 669, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 717, 718, 719, 720, 721, 723, 727, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 788, 886, 950, 954, 1024, 1056, 1123, 1195, 1197, 1254, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1357, 1358, 1366, 1367, 1384, 1385, 1386, 1399, 1401, 1414, 1417, 1422, 1429, 1431, 1594, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1645, 1652, 1654, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1708, 1710, 1712, 1835, 1842, 1847, 1849, 1850, 1861, 1862, 1869, 1870, 1875, 1877, 1879, 1882, 1883, 1889, 1890, 1892, 1893, 1896, 1900, 1905, 1914], "length": [0, 14, 23, 32, 33, 35, 37, 41, 252, 305, 307, 313, 343, 424, 425, 572, 573, 574, 724, 749, 803, 882, 896, 941, 972, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1108, 1123, 1156, 1179, 1197, 1201, 1313, 1314, 1331, 1332, 1337, 1342, 1351, 1358, 1361, 1366, 1382, 1384, 1420, 1429, 1457, 1465, 1486, 1488, 1489, 1490, 1497, 1505, 1524, 1563, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1706, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1780, 1782, 1783, 1784, 1786, 1787, 1796, 1821, 1842, 1851, 1853, 1855, 1862, 1869, 1870, 1876, 1882, 1909, 1916], "argument": [0, 1, 2, 4, 5, 6, 9, 10, 22, 26, 29, 32, 35, 36, 37, 39, 41, 43, 50, 53, 55, 57, 61, 62, 64, 65, 81, 143, 189, 202, 305, 313, 436, 437, 438, 439, 440, 478, 503, 507, 549, 569, 570, 572, 573, 574, 576, 577, 592, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 723, 727, 728, 729, 730, 731, 732, 782, 783, 788, 808, 809, 810, 813, 814, 815, 830, 846, 847, 850, 852, 854, 869, 870, 871, 872, 873, 874, 878, 879, 880, 881, 882, 886, 887, 888, 891, 893, 894, 895, 896, 897, 902, 903, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 922, 926, 929, 931, 932, 933, 934, 935, 937, 939, 940, 944, 948, 949, 951, 952, 954, 955, 977, 979, 983, 984, 990, 998, 999, 1001, 1024, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1060, 1065, 1068, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1156, 1159, 1176, 1177, 1179, 1182, 1185, 1193, 1197, 1198, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1272, 1273, 1275, 1276, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1302, 1303, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1318, 1332, 1333, 1334, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1358, 1361, 1364, 1366, 1373, 1376, 1377, 1378, 1379, 1380, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1410, 1411, 1412, 1414, 1415, 1420, 1421, 1422, 1429, 1453, 1461, 1465, 1467, 1468, 1511, 1513, 1549, 1585, 1588, 1589, 1590, 1591, 1594, 1605, 1606, 1608, 1612, 1613, 1617, 1621, 1627, 1636, 1640, 1642, 1645, 1646, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1675, 1687, 1688, 1692, 1693, 1696, 1697, 1699, 1700, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1719, 1720, 1721, 1728, 1730, 1735, 1739, 1745, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1773, 1775, 1777, 1778, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1811, 1812, 1813, 1814, 1816, 1817, 1818, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1829, 1832, 1835, 1837, 1838, 1842, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1857, 1859, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1890, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1909, 1910, 1911, 1912, 1914, 1916, 1920, 1921], "list": [0, 1, 2, 4, 6, 7, 8, 10, 12, 15, 16, 17, 18, 22, 23, 26, 27, 29, 32, 33, 35, 36, 37, 39, 41, 43, 52, 54, 57, 62, 64, 65, 177, 233, 294, 436, 438, 440, 567, 572, 573, 574, 578, 608, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 781, 782, 787, 803, 804, 805, 806, 827, 843, 850, 868, 875, 876, 877, 924, 925, 928, 932, 936, 941, 942, 982, 988, 1040, 1053, 1055, 1056, 1095, 1109, 1121, 1135, 1145, 1182, 1186, 1188, 1193, 1195, 1197, 1198, 1281, 1283, 1312, 1351, 1357, 1386, 1414, 1416, 1425, 1442, 1453, 1464, 1504, 1578, 1594, 1595, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1624, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1641, 1645, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1675, 1677, 1679, 1680, 1681, 1683, 1684, 1702, 1704, 1705, 1708, 1712, 1727, 1764, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1794, 1795, 1799, 1814, 1815, 1816, 1832, 1833, 1835, 1837, 1838, 1843, 1847, 1849, 1852, 1853, 1856, 1857, 1861, 1863, 1865, 1868, 1869, 1870, 1880, 1884, 1886, 1889, 1890, 1891, 1895, 1896, 1897, 1898, 1899, 1900, 1905, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920], "bool": [0, 1, 2, 3, 4, 6, 15, 22, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 46, 52, 54, 57, 64, 65, 143, 189, 202, 237, 252, 311, 313, 320, 321, 322, 323, 325, 326, 331, 333, 436, 437, 438, 439, 440, 449, 462, 486, 507, 570, 592, 669, 682, 683, 684, 685, 686, 688, 724, 747, 768, 769, 774, 783, 803, 854, 863, 864, 865, 869, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 909, 911, 914, 916, 917, 919, 920, 926, 927, 933, 934, 935, 941, 942, 958, 965, 995, 1001, 1013, 1056, 1057, 1058, 1061, 1068, 1073, 1091, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1117, 1118, 1122, 1124, 1139, 1140, 1143, 1144, 1157, 1167, 1171, 1173, 1179, 1182, 1186, 1188, 1189, 1197, 1198, 1201, 1203, 1211, 1212, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1234, 1236, 1238, 1239, 1242, 1243, 1244, 1245, 1251, 1252, 1253, 1254, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1273, 1279, 1281, 1282, 1284, 1287, 1295, 1296, 1304, 1309, 1310, 1311, 1312, 1313, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1362, 1363, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1400, 1401, 1405, 1406, 1407, 1408, 1409, 1414, 1417, 1418, 1419, 1420, 1421, 1423, 1428, 1431, 1432, 1433, 1434, 1441, 1445, 1446, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1478, 1485, 1486, 1496, 1497, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1510, 1513, 1515, 1517, 1524, 1525, 1548, 1556, 1563, 1582, 1594, 1595, 1598, 1599, 1601, 1603, 1605, 1606, 1607, 1628, 1629, 1630, 1631, 1633, 1636, 1641, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1689, 1695, 1697, 1699, 1700, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1735, 1740, 1744, 1745, 1750, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1773, 1782, 1783, 1784, 1785, 1786, 1787, 1794, 1795, 1796, 1799, 1800, 1808, 1814, 1818, 1823, 1832, 1833, 1835, 1836, 1837, 1838, 1847, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1864, 1865, 1867, 1868, 1869, 1870, 1884, 1891, 1893, 1895, 1897, 1898, 1899, 1904, 1905, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920], "aten": [0, 2, 3, 4, 12, 18, 23, 26, 29, 998, 1112, 1304, 1650, 1651, 1775, 1852, 1853, 1859, 1877, 1892, 1895, 1899, 1900], "oper": [0, 1, 3, 5, 6, 8, 9, 13, 14, 16, 17, 21, 22, 23, 24, 27, 29, 32, 37, 41, 42, 49, 50, 52, 53, 58, 63, 64, 65, 77, 78, 79, 246, 305, 313, 327, 344, 394, 436, 437, 438, 439, 440, 483, 486, 503, 505, 507, 578, 675, 678, 730, 731, 732, 736, 737, 746, 747, 757, 758, 768, 774, 781, 782, 784, 785, 788, 812, 815, 848, 850, 851, 854, 878, 880, 886, 888, 910, 911, 913, 915, 918, 920, 922, 924, 929, 932, 935, 939, 948, 959, 961, 989, 998, 1029, 1034, 1035, 1036, 1037, 1050, 1055, 1056, 1057, 1058, 1068, 1073, 1091, 1103, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1123, 1130, 1133, 1139, 1140, 1157, 1182, 1192, 1193, 1197, 1198, 1201, 1211, 1224, 1234, 1237, 1238, 1251, 1252, 1261, 1268, 1276, 1281, 1286, 1295, 1296, 1309, 1312, 1326, 1331, 1336, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1371, 1372, 1373, 1374, 1376, 1381, 1400, 1405, 1410, 1411, 1412, 1414, 1427, 1432, 1433, 1434, 1441, 1456, 1457, 1459, 1461, 1465, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1498, 1499, 1500, 1501, 1505, 1506, 1508, 1509, 1513, 1517, 1524, 1530, 1532, 1538, 1539, 1549, 1551, 1555, 1563, 1569, 1570, 1581, 1582, 1583, 1584, 1594, 1596, 1597, 1630, 1636, 1641, 1645, 1646, 1667, 1673, 1683, 1687, 1696, 1697, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1719, 1725, 1742, 1743, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1776, 1777, 1778, 1779, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1799, 1814, 1835, 1842, 1845, 1847, 1848, 1850, 1851, 1852, 1856, 1859, 1874, 1876, 1877, 1878, 1879, 1881, 1882, 1886, 1887, 1888, 1889, 1890, 1894, 1896, 1899, 1901, 1903, 1904, 1905, 1906, 1910, 1912, 1913, 1916], "default": [0, 1, 3, 4, 6, 10, 12, 14, 15, 18, 19, 20, 22, 23, 24, 26, 29, 35, 36, 37, 39, 40, 41, 43, 44, 49, 50, 51, 52, 53, 55, 57, 60, 61, 62, 63, 65, 143, 148, 163, 165, 168, 171, 172, 173, 188, 199, 202, 232, 259, 282, 289, 317, 323, 385, 436, 437, 438, 439, 440, 449, 486, 489, 490, 510, 514, 569, 570, 572, 669, 683, 686, 701, 702, 703, 704, 705, 706, 709, 719, 720, 721, 722, 724, 744, 747, 749, 757, 758, 759, 761, 762, 763, 768, 774, 782, 787, 792, 797, 798, 803, 806, 808, 809, 810, 811, 814, 817, 818, 819, 820, 821, 822, 823, 824, 830, 831, 832, 833, 834, 835, 837, 838, 843, 844, 845, 847, 854, 868, 869, 882, 883, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 911, 920, 926, 930, 933, 934, 935, 939, 942, 954, 955, 958, 961, 963, 967, 970, 971, 972, 975, 976, 983, 984, 987, 998, 1000, 1001, 1004, 1006, 1007, 1008, 1010, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1025, 1026, 1029, 1031, 1032, 1033, 1036, 1037, 1038, 1043, 1044, 1045, 1046, 1047, 1050, 1055, 1056, 1057, 1058, 1068, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1122, 1123, 1127, 1129, 1135, 1139, 1140, 1143, 1144, 1171, 1173, 1179, 1182, 1183, 1186, 1193, 1197, 1198, 1201, 1202, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1268, 1271, 1273, 1279, 1281, 1282, 1283, 1287, 1308, 1309, 1311, 1312, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1431, 1432, 1433, 1434, 1441, 1445, 1446, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1510, 1512, 1513, 1515, 1517, 1524, 1525, 1532, 1537, 1538, 1539, 1548, 1549, 1551, 1556, 1563, 1569, 1570, 1578, 1582, 1594, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1645, 1646, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1689, 1697, 1699, 1700, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1721, 1727, 1728, 1731, 1735, 1739, 1740, 1741, 1742, 1743, 1748, 1750, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1794, 1795, 1796, 1799, 1800, 1801, 1814, 1815, 1821, 1823, 1825, 1827, 1832, 1833, 1835, 1836, 1837, 1838, 1842, 1847, 1848, 1849, 1850, 1852, 1855, 1859, 1861, 1863, 1864, 1867, 1870, 1873, 1874, 1877, 1879, 1880, 1881, 1882, 1884, 1886, 1889, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1904, 1905, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1921], "tranform": 0, "autograd": [0, 1, 5, 6, 8, 9, 14, 19, 23, 35, 39, 41, 57, 58, 61, 132, 327, 436, 437, 438, 439, 440, 486, 678, 854, 868, 869, 883, 909, 911, 920, 939, 1001, 1056, 1057, 1058, 1068, 1073, 1091, 1108, 1109, 1110, 1111, 1112, 1121, 1123, 1139, 1140, 1157, 1182, 1201, 1221, 1252, 1268, 1276, 1286, 1368, 1414, 1420, 1461, 1515, 1530, 1594, 1645, 1646, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1747, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1782, 1783, 1784, 1785, 1786, 1787, 1814, 1842, 1847, 1848, 1850, 1853, 1857, 1862, 1870, 1873, 1878, 1879, 1882, 1883, 1885, 1886, 1899, 1915, 1916, 1917, 1920], "appli": [0, 1, 2, 4, 6, 9, 13, 22, 33, 37, 39, 40, 41, 43, 45, 52, 57, 61, 62, 63, 65, 112, 313, 390, 463, 503, 507, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 724, 727, 728, 729, 730, 731, 732, 747, 749, 755, 756, 757, 758, 759, 760, 761, 762, 763, 769, 770, 771, 772, 773, 799, 800, 801, 802, 829, 847, 886, 888, 889, 897, 909, 915, 918, 949, 1043, 1045, 1050, 1059, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1103, 1111, 1112, 1119, 1122, 1123, 1182, 1186, 1231, 1254, 1271, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1356, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1413, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1428, 1429, 1432, 1433, 1434, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1467, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1506, 1508, 1509, 1510, 1511, 1514, 1516, 1517, 1518, 1519, 1523, 1524, 1525, 1527, 1528, 1530, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1543, 1548, 1556, 1557, 1558, 1559, 1563, 1564, 1565, 1566, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1585, 1590, 1591, 1594, 1601, 1602, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1627, 1628, 1635, 1636, 1638, 1639, 1641, 1654, 1666, 1670, 1683, 1696, 1701, 1702, 1703, 1704, 1705, 1745, 1776, 1777, 1779, 1796, 1832, 1833, 1834, 1842, 1852, 1855, 1862, 1867, 1869, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1886, 1889, 1893, 1896, 1897, 1898, 1900, 1903, 1906, 1909, 1910], "further": [0, 1, 2, 5, 10, 23, 26, 33, 35, 57, 64, 1127, 1186, 1221, 1322, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1594, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1687, 1851, 1855, 1862, 1886, 1888, 1897, 1899, 1907, 1914, 1919], "flag": [0, 2, 3, 14, 15, 22, 23, 26, 35, 36, 42, 53, 55, 57, 60, 62, 65, 724, 862, 890, 892, 909, 911, 920, 933, 934, 942, 986, 1106, 1111, 1113, 1114, 1116, 1117, 1118, 1122, 1123, 1139, 1140, 1157, 1163, 1170, 1273, 1420, 1524, 1525, 1594, 1603, 1606, 1636, 1656, 1657, 1743, 1745, 1750, 1775, 1823, 1835, 1842, 1850, 1852, 1855, 1867, 1875, 1878, 1880, 1889, 1890, 1893, 1897, 1900, 1914, 1915], "onli": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 16, 17, 19, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 50, 52, 53, 57, 61, 62, 64, 65, 112, 246, 303, 313, 315, 327, 344, 436, 437, 438, 439, 440, 449, 472, 477, 503, 505, 507, 546, 572, 573, 574, 576, 577, 603, 606, 684, 685, 724, 727, 728, 729, 730, 732, 761, 762, 763, 768, 774, 775, 776, 780, 782, 790, 803, 806, 809, 810, 813, 817, 831, 838, 847, 867, 883, 886, 887, 888, 889, 890, 892, 897, 911, 912, 920, 957, 958, 959, 961, 968, 970, 972, 998, 999, 1001, 1022, 1052, 1056, 1058, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1101, 1102, 1106, 1107, 1112, 1123, 1135, 1139, 1140, 1144, 1152, 1163, 1171, 1180, 1182, 1185, 1186, 1193, 1197, 1198, 1201, 1212, 1217, 1218, 1220, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1240, 1242, 1243, 1245, 1246, 1253, 1254, 1271, 1276, 1322, 1345, 1346, 1347, 1350, 1351, 1357, 1358, 1361, 1384, 1414, 1417, 1419, 1420, 1422, 1430, 1453, 1465, 1466, 1496, 1505, 1507, 1513, 1524, 1551, 1581, 1582, 1585, 1588, 1589, 1590, 1591, 1594, 1596, 1597, 1607, 1627, 1628, 1629, 1641, 1648, 1652, 1656, 1657, 1659, 1670, 1673, 1677, 1680, 1681, 1683, 1687, 1699, 1708, 1712, 1714, 1716, 1739, 1743, 1744, 1746, 1750, 1777, 1781, 1791, 1796, 1800, 1814, 1825, 1827, 1832, 1833, 1835, 1839, 1840, 1841, 1842, 1849, 1853, 1854, 1855, 1859, 1861, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1903, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917], "valid": [0, 2, 17, 19, 23, 35, 41, 50, 52, 65, 77, 736, 737, 746, 780, 933, 998, 1055, 1180, 1182, 1183, 1203, 1217, 1218, 1227, 1228, 1229, 1240, 1245, 1276, 1342, 1343, 1344, 1488, 1489, 1490, 1513, 1585, 1612, 1617, 1621, 1650, 1651, 1671, 1672, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1699, 1852, 1853, 1854, 1855, 1869, 1870, 1875, 1878, 1880, 1884, 1893, 1896, 1899, 1905, 1906], "dict": [0, 1, 4, 6, 15, 19, 22, 32, 33, 35, 36, 37, 39, 40, 41, 43, 46, 50, 54, 57, 59, 61, 65, 669, 781, 782, 783, 804, 805, 806, 825, 843, 899, 942, 998, 999, 1012, 1021, 1111, 1121, 1123, 1180, 1181, 1182, 1183, 1188, 1193, 1197, 1198, 1253, 1254, 1351, 1361, 1414, 1415, 1424, 1465, 1585, 1594, 1617, 1636, 1648, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1842, 1849, 1852, 1853, 1855, 1856, 1864, 1865, 1880, 1886, 1891, 1893, 1895, 1896, 1905, 1906, 1914, 1918, 1919, 1920], "dictionari": [0, 4, 15, 19, 26, 32, 33, 41, 61, 65, 669, 781, 782, 783, 786, 804, 805, 806, 827, 828, 829, 843, 847, 853, 942, 1012, 1111, 1121, 1182, 1183, 1189, 1193, 1197, 1198, 1253, 1254, 1357, 1358, 1414, 1415, 1424, 1504, 1617, 1854, 1856, 1880, 1886, 1893, 1896, 1905, 1914, 1918, 1920], "map": [0, 4, 17, 22, 26, 35, 41, 43, 49, 50, 52, 53, 57, 62, 63, 65, 673, 724, 781, 782, 786, 788, 803, 804, 806, 828, 829, 843, 844, 845, 846, 847, 853, 874, 923, 1112, 1123, 1135, 1144, 1189, 1192, 1253, 1254, 1345, 1346, 1347, 1353, 1354, 1355, 1359, 1361, 1410, 1411, 1412, 1415, 1424, 1499, 1500, 1501, 1506, 1601, 1617, 1700, 1702, 1832, 1833, 1842, 1856, 1869, 1871, 1875, 1879, 1880, 1881, 1887, 1892, 1897, 1900, 1903, 1905, 1906, 1907, 1911, 1916, 1920], "decomposit": [0, 22, 41, 65, 933, 1127, 1211, 1212, 1217, 1218, 1219, 1220, 1221, 1223, 1228, 1229, 1230, 1231, 1236, 1240, 1241, 1245, 1246, 1271, 1273, 1601, 1687, 1689, 1693, 1699, 1800, 1801, 1850, 1889], "requir": [0, 1, 2, 6, 9, 10, 12, 13, 14, 15, 16, 19, 26, 27, 32, 33, 35, 36, 37, 39, 41, 43, 51, 52, 57, 60, 62, 64, 65, 112, 143, 214, 327, 449, 486, 503, 505, 507, 549, 782, 784, 812, 815, 869, 878, 882, 887, 890, 891, 892, 893, 894, 895, 896, 942, 955, 956, 1011, 1055, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1096, 1097, 1123, 1124, 1195, 1221, 1252, 1254, 1268, 1350, 1357, 1358, 1457, 1458, 1459, 1460, 1461, 1463, 1505, 1563, 1585, 1594, 1595, 1604, 1606, 1608, 1648, 1659, 1669, 1687, 1784, 1796, 1835, 1842, 1849, 1852, 1855, 1857, 1862, 1863, 1867, 1869, 1870, 1874, 1875, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1891, 1893, 1897, 1898, 1900, 1901, 1905, 1906, 1907, 1909, 1914, 1916, 1917, 1919, 1920], "specifi": [0, 2, 3, 4, 6, 9, 12, 15, 22, 26, 32, 33, 35, 39, 40, 41, 43, 45, 50, 51, 52, 53, 57, 65, 90, 143, 188, 251, 311, 323, 462, 472, 483, 487, 489, 490, 503, 505, 507, 526, 534, 535, 549, 569, 572, 573, 574, 576, 577, 592, 669, 724, 730, 731, 732, 757, 758, 782, 783, 784, 788, 803, 812, 815, 829, 843, 847, 848, 850, 867, 869, 881, 882, 896, 913, 936, 942, 953, 954, 955, 958, 959, 968, 969, 970, 972, 987, 990, 1001, 1026, 1036, 1037, 1038, 1042, 1043, 1045, 1055, 1058, 1069, 1072, 1074, 1075, 1077, 1078, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1090, 1092, 1113, 1114, 1117, 1123, 1124, 1135, 1143, 1144, 1182, 1186, 1197, 1198, 1224, 1234, 1236, 1238, 1239, 1248, 1251, 1253, 1254, 1264, 1281, 1283, 1289, 1308, 1309, 1312, 1328, 1329, 1330, 1331, 1337, 1346, 1348, 1350, 1351, 1357, 1358, 1361, 1368, 1374, 1375, 1380, 1381, 1384, 1405, 1406, 1411, 1414, 1417, 1418, 1419, 1420, 1421, 1428, 1445, 1446, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1481, 1482, 1485, 1486, 1496, 1497, 1504, 1505, 1510, 1513, 1525, 1532, 1548, 1549, 1556, 1563, 1569, 1570, 1594, 1599, 1601, 1602, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1622, 1623, 1638, 1641, 1648, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1664, 1666, 1667, 1668, 1669, 1670, 1675, 1680, 1681, 1689, 1697, 1706, 1722, 1727, 1728, 1731, 1748, 1776, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1794, 1795, 1799, 1815, 1817, 1821, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1842, 1849, 1852, 1854, 1855, 1859, 1861, 1862, 1864, 1865, 1868, 1869, 1875, 1878, 1880, 1884, 1886, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1904, 1905, 1909, 1910, 1911, 1912, 1914, 1916], "str": [0, 1, 2, 3, 4, 14, 15, 17, 22, 23, 26, 32, 33, 35, 37, 39, 40, 41, 43, 46, 50, 52, 54, 57, 65, 313, 503, 507, 592, 768, 774, 781, 782, 783, 804, 805, 806, 843, 890, 892, 900, 904, 905, 930, 942, 957, 968, 969, 970, 972, 981, 982, 984, 985, 986, 998, 999, 1000, 1012, 1013, 1015, 1017, 1029, 1050, 1055, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1111, 1112, 1116, 1121, 1123, 1131, 1180, 1181, 1182, 1183, 1185, 1186, 1188, 1191, 1227, 1240, 1245, 1246, 1253, 1254, 1283, 1295, 1296, 1311, 1330, 1331, 1337, 1342, 1343, 1344, 1348, 1350, 1358, 1364, 1368, 1374, 1375, 1380, 1381, 1390, 1391, 1392, 1405, 1406, 1414, 1415, 1417, 1418, 1419, 1421, 1424, 1428, 1431, 1442, 1445, 1446, 1457, 1459, 1461, 1462, 1463, 1464, 1466, 1485, 1486, 1496, 1497, 1505, 1510, 1513, 1524, 1525, 1548, 1556, 1582, 1594, 1601, 1602, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1636, 1638, 1648, 1651, 1659, 1675, 1681, 1683, 1700, 1731, 1735, 1742, 1743, 1777, 1796, 1842, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1863, 1864, 1865, 1867, 1869, 1873, 1875, 1893, 1895, 1897, 1898, 1899, 1904, 1905, 1911, 1914, 1916, 1918, 1919, 1920], "result": [0, 2, 4, 5, 6, 8, 9, 10, 12, 17, 18, 20, 22, 23, 26, 29, 32, 33, 35, 37, 41, 43, 45, 50, 53, 57, 62, 63, 64, 65, 146, 214, 215, 246, 247, 307, 327, 390, 486, 488, 545, 572, 573, 574, 576, 577, 607, 675, 676, 677, 678, 679, 682, 684, 685, 686, 688, 749, 782, 866, 868, 884, 885, 890, 891, 892, 893, 894, 895, 897, 898, 910, 913, 924, 928, 933, 939, 941, 950, 952, 968, 970, 972, 998, 999, 1012, 1034, 1035, 1036, 1037, 1038, 1050, 1055, 1073, 1076, 1082, 1091, 1098, 1100, 1103, 1107, 1108, 1111, 1112, 1113, 1116, 1117, 1122, 1123, 1127, 1143, 1144, 1146, 1159, 1173, 1182, 1185, 1186, 1193, 1197, 1198, 1200, 1202, 1203, 1207, 1221, 1223, 1225, 1226, 1234, 1238, 1240, 1242, 1243, 1244, 1251, 1261, 1262, 1269, 1279, 1281, 1282, 1283, 1284, 1286, 1287, 1309, 1312, 1351, 1353, 1354, 1355, 1359, 1361, 1366, 1380, 1384, 1414, 1420, 1429, 1458, 1459, 1460, 1461, 1465, 1495, 1513, 1524, 1578, 1581, 1582, 1594, 1601, 1603, 1636, 1639, 1640, 1641, 1642, 1651, 1681, 1687, 1689, 1696, 1697, 1700, 1706, 1719, 1725, 1740, 1768, 1778, 1780, 1781, 1792, 1794, 1795, 1796, 1799, 1800, 1801, 1810, 1814, 1815, 1820, 1821, 1823, 1824, 1826, 1837, 1838, 1842, 1852, 1853, 1854, 1855, 1862, 1863, 1868, 1869, 1870, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1886, 1889, 1890, 1893, 1894, 1896, 1898, 1899, 1901, 1902, 1905, 1906, 1909, 1912, 1914, 1915, 1916, 1919, 1920], "need": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 17, 19, 23, 26, 27, 32, 33, 35, 36, 37, 39, 40, 41, 44, 45, 50, 52, 53, 55, 57, 59, 60, 62, 65, 143, 246, 462, 485, 489, 572, 669, 723, 724, 808, 809, 810, 813, 814, 815, 830, 847, 878, 882, 886, 887, 896, 923, 924, 932, 992, 1001, 1008, 1043, 1045, 1055, 1076, 1078, 1098, 1111, 1182, 1275, 1304, 1350, 1357, 1410, 1411, 1412, 1414, 1420, 1457, 1459, 1461, 1488, 1489, 1490, 1581, 1594, 1606, 1608, 1612, 1614, 1642, 1716, 1721, 1735, 1793, 1821, 1850, 1852, 1854, 1855, 1862, 1863, 1867, 1869, 1870, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1903, 1905, 1906, 1907, 1909, 1911, 1912, 1916, 1917, 1919, 1920], "effect": [0, 1, 4, 8, 26, 32, 33, 35, 41, 54, 62, 65, 189, 202, 592, 724, 768, 774, 990, 1038, 1123, 1182, 1224, 1225, 1226, 1227, 1283, 1322, 1337, 1345, 1346, 1347, 1352, 1353, 1354, 1355, 1359, 1414, 1420, 1466, 1524, 1551, 1582, 1588, 1594, 1595, 1613, 1667, 1675, 1775, 1780, 1800, 1821, 1842, 1849, 1852, 1863, 1873, 1874, 1875, 1878, 1880, 1900, 1903, 1911, 1912, 1914], "By": [0, 2, 3, 4, 6, 13, 14, 19, 23, 26, 32, 35, 44, 49, 65, 436, 437, 438, 439, 440, 869, 954, 961, 1004, 1006, 1038, 1050, 1073, 1075, 1076, 1077, 1078, 1086, 1087, 1088, 1113, 1114, 1116, 1117, 1123, 1135, 1143, 1144, 1186, 1234, 1245, 1253, 1282, 1287, 1308, 1330, 1331, 1332, 1333, 1334, 1348, 1350, 1368, 1374, 1377, 1378, 1379, 1380, 1381, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1453, 1462, 1485, 1486, 1496, 1525, 1548, 1556, 1638, 1689, 1700, 1721, 1775, 1821, 1842, 1849, 1854, 1859, 1862, 1875, 1878, 1880, 1882, 1886, 1889, 1891, 1893, 1896, 1904, 1905, 1909, 1916], "arbitrari": [0, 2, 4, 14, 19, 23, 35, 39, 246, 879, 1038, 1245, 1253, 1351, 1357, 1381, 1405, 1465, 1485, 1486, 1504, 1525, 1551, 1627, 1800, 1821, 1855, 1861, 1875, 1881, 1885, 1886, 1896, 1898, 1900, 1909, 1917, 1920], "keyword": [0, 1, 2, 6, 32, 35, 36, 39, 57, 62, 65, 81, 305, 313, 436, 437, 438, 439, 440, 570, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 850, 854, 869, 870, 871, 872, 873, 874, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 922, 926, 929, 931, 933, 934, 935, 937, 939, 940, 944, 948, 949, 951, 952, 954, 955, 968, 970, 972, 998, 999, 1034, 1035, 1036, 1037, 1038, 1039, 1042, 1047, 1050, 1052, 1054, 1056, 1057, 1058, 1060, 1065, 1068, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1108, 1109, 1110, 1111, 1124, 1125, 1126, 1127, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1156, 1159, 1176, 1177, 1182, 1185, 1197, 1198, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1272, 1273, 1275, 1276, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1302, 1303, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1318, 1351, 1373, 1376, 1414, 1588, 1589, 1594, 1606, 1608, 1613, 1617, 1636, 1640, 1642, 1645, 1646, 1648, 1687, 1688, 1692, 1693, 1696, 1697, 1699, 1700, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1719, 1720, 1721, 1728, 1730, 1735, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1773, 1775, 1778, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1790, 1792, 1793, 1794, 1795, 1797, 1799, 1800, 1811, 1812, 1813, 1814, 1818, 1821, 1823, 1824, 1825, 1826, 1827, 1829, 1835, 1837, 1838, 1839, 1844, 1845, 1847, 1848, 1849, 1855, 1856, 1869, 1870, 1880, 1889, 1893, 1896, 1905, 1909, 1910, 1914, 1917, 1920], "tupl": [0, 4, 6, 17, 22, 26, 32, 37, 43, 49, 50, 52, 57, 65, 311, 436, 438, 440, 487, 510, 526, 549, 572, 573, 574, 684, 685, 686, 724, 755, 756, 757, 758, 761, 762, 763, 768, 774, 775, 776, 782, 806, 807, 843, 850, 851, 867, 868, 875, 876, 877, 878, 879, 881, 890, 891, 892, 893, 894, 895, 896, 897, 898, 901, 902, 903, 925, 953, 968, 969, 972, 983, 1001, 1007, 1034, 1035, 1053, 1056, 1058, 1072, 1074, 1075, 1077, 1078, 1080, 1081, 1082, 1084, 1085, 1087, 1088, 1090, 1092, 1095, 1105, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1127, 1143, 1145, 1182, 1188, 1193, 1197, 1198, 1203, 1212, 1217, 1218, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1234, 1238, 1240, 1241, 1243, 1245, 1248, 1251, 1269, 1271, 1273, 1279, 1281, 1283, 1284, 1287, 1289, 1309, 1312, 1319, 1320, 1321, 1323, 1324, 1325, 1327, 1328, 1329, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1361, 1362, 1363, 1382, 1383, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1420, 1424, 1435, 1436, 1437, 1438, 1439, 1440, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1476, 1477, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1508, 1509, 1524, 1537, 1538, 1539, 1549, 1551, 1582, 1583, 1584, 1589, 1590, 1591, 1594, 1606, 1617, 1630, 1636, 1640, 1641, 1645, 1648, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1689, 1690, 1699, 1708, 1710, 1712, 1722, 1726, 1727, 1773, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1794, 1795, 1799, 1800, 1801, 1814, 1815, 1816, 1817, 1818, 1823, 1830, 1831, 1832, 1833, 1837, 1838, 1842, 1843, 1845, 1847, 1852, 1853, 1856, 1867, 1870, 1875, 1878, 1880, 1881, 1886, 1891, 1893, 1896, 1897, 1900, 1905, 1909, 1914, 1916, 1919, 1920], "guard": [0, 14, 19, 21, 23, 43, 669, 1850, 1861, 1888, 1895, 1897, 1917, 1920], "repres": [0, 2, 9, 17, 24, 32, 33, 41, 42, 43, 45, 46, 52, 54, 57, 65, 749, 781, 782, 785, 878, 950, 954, 956, 988, 991, 1055, 1076, 1078, 1083, 1085, 1086, 1087, 1088, 1112, 1135, 1142, 1171, 1172, 1175, 1178, 1181, 1197, 1198, 1229, 1271, 1322, 1337, 1414, 1420, 1461, 1463, 1465, 1594, 1600, 1603, 1608, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1622, 1623, 1627, 1637, 1649, 1651, 1675, 1681, 1687, 1689, 1700, 1782, 1783, 1784, 1786, 1787, 1796, 1800, 1832, 1833, 1840, 1841, 1852, 1854, 1855, 1862, 1865, 1870, 1875, 1880, 1881, 1883, 1885, 1886, 1889, 1893, 1894, 1898, 1900, 1901, 1903, 1905, 1909, 1912, 1921], "option": [0, 1, 2, 4, 6, 13, 14, 15, 16, 17, 18, 20, 22, 23, 26, 32, 35, 39, 40, 41, 43, 46, 50, 51, 52, 54, 55, 57, 65, 81, 143, 148, 163, 165, 168, 171, 172, 173, 188, 199, 202, 232, 259, 289, 317, 323, 385, 436, 437, 438, 439, 440, 478, 489, 490, 503, 510, 514, 526, 549, 569, 570, 572, 573, 574, 576, 577, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 724, 747, 768, 769, 774, 781, 783, 788, 807, 843, 848, 851, 854, 865, 867, 868, 869, 870, 871, 872, 873, 874, 881, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 901, 902, 903, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 926, 929, 931, 932, 933, 934, 935, 937, 939, 940, 941, 942, 948, 949, 951, 952, 953, 954, 955, 956, 958, 959, 961, 963, 967, 968, 970, 971, 972, 975, 976, 983, 984, 987, 990, 998, 999, 1000, 1004, 1006, 1007, 1008, 1010, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1025, 1026, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1052, 1054, 1055, 1056, 1057, 1058, 1060, 1065, 1068, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1124, 1125, 1126, 1127, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1156, 1159, 1171, 1173, 1176, 1177, 1179, 1180, 1182, 1183, 1186, 1188, 1195, 1197, 1198, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1295, 1296, 1302, 1303, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1318, 1320, 1321, 1322, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1336, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1368, 1371, 1372, 1373, 1374, 1375, 1380, 1381, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1400, 1405, 1406, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1428, 1432, 1433, 1434, 1441, 1445, 1446, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1478, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1504, 1505, 1508, 1509, 1510, 1513, 1515, 1524, 1525, 1532, 1537, 1538, 1539, 1548, 1549, 1556, 1563, 1569, 1570, 1582, 1590, 1591, 1594, 1595, 1601, 1602, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1635, 1636, 1638, 1640, 1641, 1642, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1664, 1666, 1667, 1668, 1669, 1670, 1674, 1687, 1688, 1689, 1692, 1696, 1697, 1699, 1700, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1719, 1720, 1721, 1728, 1730, 1735, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1769, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1801, 1811, 1812, 1813, 1814, 1815, 1818, 1820, 1823, 1824, 1825, 1826, 1827, 1829, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1844, 1845, 1847, 1848, 1849, 1852, 1853, 1855, 1857, 1859, 1861, 1863, 1864, 1865, 1870, 1873, 1878, 1880, 1881, 1882, 1885, 1886, 1890, 1893, 1897, 1899, 1900, 1905, 1909, 1910, 1912, 1914, 1916, 1919], "accumul": [0, 1, 2, 3, 14, 23, 57, 143, 282, 305, 310, 311, 313, 462, 675, 882, 896, 1251, 1594, 1654, 1655, 1835, 1852, 1853, 1865, 1875, 1878, 1879, 1882, 1889, 1896, 1901, 1905, 1906, 1909], "dure": [0, 1, 2, 6, 12, 14, 16, 17, 20, 22, 23, 26, 29, 33, 35, 37, 43, 44, 46, 52, 57, 64, 65, 327, 493, 494, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 782, 816, 878, 879, 888, 1000, 1001, 1013, 1014, 1033, 1192, 1194, 1195, 1197, 1253, 1326, 1332, 1333, 1334, 1351, 1352, 1357, 1358, 1377, 1378, 1379, 1432, 1453, 1459, 1461, 1498, 1504, 1505, 1585, 1594, 1596, 1597, 1634, 1648, 1651, 1684, 1781, 1825, 1827, 1854, 1862, 1863, 1865, 1868, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1889, 1890, 1893, 1897, 1899, 1900, 1903, 1905, 1907, 1916], "abov": [0, 2, 4, 12, 13, 14, 16, 17, 18, 23, 27, 35, 41, 45, 52, 54, 57, 58, 63, 65, 606, 669, 781, 782, 869, 911, 920, 935, 1012, 1038, 1042, 1043, 1044, 1045, 1046, 1055, 1127, 1139, 1140, 1182, 1183, 1202, 1213, 1217, 1218, 1236, 1238, 1239, 1242, 1245, 1248, 1251, 1254, 1330, 1361, 1414, 1442, 1450, 1465, 1563, 1585, 1642, 1675, 1699, 1710, 1711, 1743, 1748, 1761, 1780, 1821, 1824, 1825, 1826, 1827, 1849, 1852, 1854, 1855, 1862, 1875, 1876, 1877, 1878, 1880, 1881, 1883, 1886, 1890, 1891, 1893, 1897, 1900, 1905, 1906, 1907, 1909, 1910, 1916], "assertionerror": [0, 23, 65, 723, 1651, 1916], "without": [0, 1, 2, 4, 6, 8, 9, 10, 14, 16, 23, 26, 29, 32, 33, 35, 36, 37, 39, 41, 45, 52, 57, 58, 63, 64, 65, 246, 606, 939, 959, 961, 996, 1076, 1077, 1078, 1086, 1087, 1088, 1179, 1180, 1182, 1183, 1228, 1229, 1244, 1251, 1304, 1332, 1333, 1334, 1354, 1358, 1377, 1378, 1379, 1411, 1414, 1422, 1453, 1461, 1505, 1585, 1594, 1618, 1634, 1675, 1706, 1722, 1739, 1740, 1830, 1849, 1854, 1855, 1862, 1863, 1865, 1867, 1869, 1874, 1875, 1876, 1878, 1879, 1880, 1883, 1884, 1886, 1888, 1890, 1891, 1893, 1897, 1898, 1900, 1904, 1905, 1909, 1914, 1919, 1921], "dynamo": [0, 12, 15, 16, 17, 19, 20, 23, 65, 669, 942, 1861, 1894], "output": [0, 1, 2, 5, 6, 8, 12, 13, 14, 16, 17, 22, 23, 29, 32, 33, 35, 39, 40, 41, 43, 49, 50, 61, 62, 63, 65, 132, 305, 313, 436, 437, 438, 440, 503, 507, 555, 606, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 709, 717, 718, 723, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 761, 762, 763, 764, 766, 768, 769, 770, 771, 772, 774, 775, 776, 781, 782, 783, 785, 788, 791, 803, 806, 847, 850, 851, 852, 854, 863, 864, 867, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 910, 912, 913, 914, 915, 916, 917, 918, 919, 922, 926, 929, 930, 931, 932, 933, 934, 935, 937, 940, 948, 949, 951, 952, 955, 968, 970, 971, 972, 998, 999, 1001, 1011, 1012, 1034, 1035, 1036, 1037, 1039, 1042, 1043, 1045, 1047, 1050, 1052, 1054, 1055, 1056, 1057, 1058, 1060, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1135, 1138, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1156, 1159, 1176, 1177, 1179, 1182, 1186, 1193, 1197, 1198, 1202, 1203, 1204, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1302, 1303, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1504, 1505, 1507, 1508, 1509, 1510, 1513, 1515, 1524, 1525, 1530, 1532, 1537, 1538, 1539, 1548, 1549, 1553, 1554, 1555, 1556, 1563, 1578, 1582, 1583, 1584, 1588, 1590, 1591, 1594, 1602, 1603, 1604, 1607, 1628, 1630, 1631, 1635, 1638, 1640, 1641, 1642, 1645, 1646, 1648, 1651, 1652, 1674, 1687, 1688, 1696, 1697, 1700, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1719, 1720, 1721, 1723, 1724, 1728, 1730, 1735, 1743, 1748, 1751, 1753, 1765, 1766, 1768, 1773, 1777, 1778, 1780, 1781, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1811, 1812, 1813, 1818, 1821, 1823, 1824, 1826, 1829, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1842, 1844, 1845, 1847, 1848, 1849, 1852, 1853, 1855, 1861, 1863, 1868, 1869, 1870, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1886, 1889, 1893, 1896, 1897, 1898, 1899, 1900, 1902, 1906, 1909, 1910, 1912, 1913, 1914, 1916, 1918, 1919], "consist": [0, 12, 14, 23, 32, 35, 37, 40, 41, 52, 53, 65, 897, 933, 934, 1182, 1211, 1217, 1218, 1220, 1222, 1223, 1224, 1225, 1249, 1251, 1414, 1461, 1603, 1606, 1652, 1699, 1800, 1852, 1855, 1862, 1869, 1870, 1881, 1886, 1890, 1893, 1896, 1899, 1909], "type": [0, 2, 3, 4, 6, 12, 13, 15, 16, 17, 22, 26, 27, 28, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 52, 53, 54, 57, 62, 64, 65, 81, 143, 184, 189, 201, 318, 321, 325, 333, 436, 437, 438, 439, 440, 472, 548, 593, 669, 674, 675, 676, 677, 678, 679, 723, 724, 727, 728, 729, 738, 740, 741, 742, 743, 745, 753, 755, 756, 759, 760, 761, 762, 763, 764, 765, 766, 767, 770, 773, 781, 782, 783, 786, 804, 805, 806, 808, 809, 810, 811, 812, 814, 816, 829, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 868, 878, 879, 880, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 926, 927, 928, 929, 930, 932, 941, 942, 965, 967, 974, 975, 976, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 993, 995, 998, 999, 1000, 1001, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1018, 1030, 1032, 1033, 1036, 1037, 1050, 1055, 1056, 1057, 1058, 1068, 1069, 1070, 1073, 1091, 1098, 1100, 1101, 1102, 1103, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1119, 1120, 1121, 1123, 1125, 1129, 1130, 1131, 1134, 1139, 1140, 1142, 1143, 1144, 1158, 1161, 1164, 1167, 1178, 1179, 1180, 1182, 1183, 1185, 1188, 1191, 1193, 1195, 1197, 1198, 1200, 1201, 1204, 1213, 1217, 1234, 1238, 1245, 1251, 1252, 1253, 1254, 1268, 1271, 1274, 1281, 1283, 1290, 1291, 1293, 1303, 1309, 1312, 1322, 1326, 1342, 1343, 1344, 1351, 1358, 1404, 1414, 1415, 1416, 1420, 1424, 1425, 1442, 1447, 1448, 1449, 1457, 1458, 1459, 1460, 1461, 1473, 1474, 1478, 1479, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1510, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1531, 1532, 1534, 1535, 1536, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1556, 1558, 1559, 1561, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1576, 1579, 1580, 1581, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1598, 1599, 1600, 1601, 1602, 1603, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1625, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1638, 1640, 1641, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1689, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1719, 1721, 1724, 1725, 1735, 1736, 1739, 1740, 1741, 1743, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1796, 1797, 1799, 1800, 1801, 1814, 1823, 1825, 1827, 1832, 1833, 1835, 1836, 1842, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1856, 1863, 1864, 1865, 1868, 1870, 1873, 1874, 1875, 1877, 1878, 1883, 1884, 1885, 1886, 1889, 1892, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1909, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920], "headerdoc": 0, "wa": [0, 1, 2, 4, 8, 17, 18, 22, 29, 33, 35, 40, 50, 51, 52, 53, 57, 64, 65, 327, 477, 486, 669, 774, 781, 843, 932, 943, 958, 959, 982, 986, 1001, 1014, 1033, 1075, 1123, 1179, 1188, 1197, 1212, 1223, 1225, 1229, 1253, 1271, 1304, 1384, 1410, 1411, 1412, 1443, 1466, 1478, 1513, 1566, 1582, 1594, 1595, 1630, 1675, 1681, 1794, 1795, 1832, 1833, 1837, 1838, 1842, 1849, 1852, 1854, 1855, 1856, 1859, 1861, 1862, 1865, 1867, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1885, 1887, 1893, 1896, 1898, 1900, 1904, 1905, 1916], "author": [0, 13, 14, 16, 19, 20, 23, 33, 52, 53, 57, 1123, 1666, 1706, 1842, 1874], "chatgpt": 0, "slight": [0, 1739, 1909, 1912], "modif": [0, 14, 16, 27, 57, 65, 214, 769, 886, 1107, 1108, 1182, 1414, 1594, 1875, 1880, 1886, 1897, 1900], "don": [0, 1, 2, 5, 8, 10, 14, 17, 18, 24, 35, 51, 58, 60, 62, 65, 143, 774, 784, 882, 883, 896, 1029, 1111, 1197, 1275, 1377, 1378, 1379, 1466, 1582, 1585, 1594, 1642, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1742, 1849, 1852, 1856, 1867, 1868, 1869, 1875, 1878, 1880, 1882, 1886, 1888, 1892, 1893, 1896, 1897, 1898, 1900, 1905, 1906, 1909, 1920], "ani": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 16, 17, 19, 22, 23, 24, 26, 29, 32, 33, 35, 36, 37, 39, 41, 43, 45, 46, 50, 51, 52, 53, 55, 57, 62, 64, 65, 143, 246, 489, 534, 606, 686, 747, 770, 781, 782, 783, 789, 799, 800, 801, 802, 804, 805, 806, 807, 812, 813, 815, 843, 854, 878, 879, 880, 882, 888, 890, 896, 897, 898, 924, 928, 929, 947, 958, 994, 1001, 1012, 1071, 1072, 1074, 1075, 1076, 1078, 1082, 1086, 1087, 1088, 1103, 1111, 1112, 1119, 1120, 1121, 1123, 1144, 1181, 1182, 1186, 1188, 1192, 1193, 1195, 1197, 1203, 1211, 1213, 1217, 1218, 1222, 1227, 1228, 1229, 1234, 1235, 1238, 1242, 1245, 1251, 1253, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1330, 1331, 1335, 1336, 1342, 1343, 1344, 1351, 1352, 1356, 1360, 1361, 1364, 1365, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1380, 1381, 1400, 1401, 1403, 1404, 1405, 1413, 1414, 1422, 1424, 1425, 1428, 1432, 1433, 1434, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1463, 1464, 1465, 1484, 1488, 1489, 1490, 1530, 1549, 1550, 1563, 1585, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1618, 1628, 1629, 1631, 1634, 1636, 1641, 1648, 1651, 1675, 1715, 1731, 1746, 1748, 1800, 1842, 1849, 1852, 1853, 1854, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1874, 1875, 1877, 1878, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1893, 1895, 1896, 1897, 1898, 1900, 1905, 1906, 1907, 1909, 1911, 1914, 1916, 1918, 1919, 1920], "just": [0, 2, 3, 8, 12, 13, 14, 17, 21, 22, 26, 33, 35, 40, 41, 43, 50, 65, 578, 676, 686, 779, 812, 815, 878, 880, 906, 947, 948, 1197, 1198, 1236, 1239, 1244, 1245, 1271, 1353, 1354, 1355, 1359, 1594, 1606, 1607, 1671, 1739, 1824, 1825, 1826, 1827, 1849, 1852, 1867, 1874, 1875, 1880, 1881, 1883, 1885, 1886, 1887, 1891, 1897, 1898, 1905, 1906, 1912, 1913, 1915, 1919], "prior": [0, 10, 14, 33, 35, 37, 43, 889, 1254, 1459, 1461, 1563, 1617, 1876, 1878, 1880, 1896, 1900], "recurs": [0, 2, 13, 17, 41, 57, 65, 1047, 1182, 1193, 1195, 1414, 1673, 1854, 1880, 1886, 1897, 1905], "manag": [0, 1, 2, 3, 6, 8, 14, 17, 35, 39, 41, 43, 50, 52, 53, 54, 57, 65, 81, 477, 883, 909, 956, 957, 959, 962, 963, 964, 966, 977, 979, 980, 981, 990, 991, 1001, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1019, 1020, 1021, 1028, 1030, 1059, 1113, 1117, 1122, 1157, 1295, 1563, 1594, 1603, 1604, 1606, 1639, 1745, 1775, 1850, 1855, 1856, 1875, 1882, 1885, 1893, 1898, 1899, 1904, 1905, 1906, 1909, 1912, 1917], "complet": [0, 8, 17, 20, 26, 32, 35, 37, 43, 44, 50, 52, 54, 62, 64, 477, 669, 850, 958, 959, 961, 1031, 1111, 1112, 1185, 1193, 1195, 1200, 1212, 1240, 1295, 1296, 1301, 1478, 1594, 1603, 1636, 1699, 1850, 1854, 1855, 1856, 1861, 1867, 1874, 1875, 1878, 1881, 1884, 1890, 1897, 1898, 1905, 1906], "skip": [0, 1, 17, 52, 848, 1055, 1108, 1211, 1212, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1769, 1852, 1874, 1875, 1878, 1879, 1880, 1886, 1896, 1899], "frame": [0, 9, 13, 14, 21, 23, 65, 1179, 1796, 1882, 1914], "well": [0, 2, 4, 8, 10, 12, 18, 19, 26, 33, 35, 52, 57, 62, 63, 65, 606, 780, 811, 814, 850, 998, 1116, 1117, 1182, 1186, 1192, 1197, 1217, 1218, 1219, 1221, 1227, 1240, 1245, 1291, 1332, 1333, 1334, 1350, 1384, 1414, 1453, 1534, 1535, 1594, 1651, 1699, 1852, 1855, 1862, 1868, 1870, 1874, 1875, 1878, 1880, 1881, 1883, 1886, 1888, 1890, 1893, 1897, 1900, 1903, 1905, 1907, 1909, 1913, 1914, 1917], "invok": [0, 1, 3, 9, 17, 27, 29, 32, 35, 50, 52, 53, 64, 65, 890, 892, 998, 999, 1182, 1185, 1191, 1351, 1414, 1587, 1589, 1592, 1593, 1675, 1681, 1852, 1855, 1856, 1863, 1874, 1877, 1878, 1879, 1880, 1881, 1885, 1886, 1897, 1905, 1906], "associ": [0, 2, 9, 10, 14, 17, 23, 35, 37, 46, 884, 964, 1015, 1017, 1143, 1144, 1182, 1231, 1242, 1244, 1253, 1337, 1414, 1424, 1497, 1594, 1602, 1648, 1757, 1759, 1852, 1855, 1861, 1868, 1869, 1875, 1883, 1886, 1889, 1897, 1898, 1899, 1905, 1906, 1912, 1915], "code": [0, 2, 4, 5, 9, 10, 12, 13, 17, 18, 19, 21, 22, 23, 24, 26, 27, 32, 33, 35, 41, 43, 53, 54, 62, 63, 64, 112, 669, 998, 999, 1012, 1112, 1157, 1182, 1186, 1187, 1192, 1193, 1194, 1197, 1198, 1199, 1212, 1223, 1225, 1253, 1430, 1442, 1594, 1747, 1849, 1850, 1854, 1855, 1861, 1869, 1875, 1876, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1891, 1892, 1893, 1896, 1904, 1905, 1906, 1907, 1912, 1913, 1917, 1920], "still": [0, 1, 2, 3, 8, 9, 16, 17, 18, 19, 23, 32, 35, 40, 41, 43, 52, 64, 65, 783, 788, 887, 892, 1186, 1191, 1199, 1381, 1405, 1594, 1595, 1596, 1597, 1683, 1731, 1851, 1852, 1855, 1867, 1868, 1869, 1870, 1874, 1875, 1878, 1879, 1880, 1882, 1884, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1905, 1906, 1907, 1909], "process": [0, 1, 2, 4, 14, 17, 23, 24, 26, 33, 35, 36, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 65, 958, 994, 1000, 1025, 1182, 1192, 1254, 1291, 1299, 1330, 1331, 1348, 1350, 1357, 1358, 1374, 1381, 1405, 1406, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1453, 1457, 1459, 1461, 1462, 1485, 1486, 1496, 1525, 1548, 1556, 1594, 1678, 1684, 1750, 1764, 1849, 1850, 1852, 1865, 1867, 1868, 1869, 1875, 1877, 1878, 1879, 1880, 1885, 1886, 1888, 1890, 1892, 1893, 1897, 1898, 1899, 1900, 1903, 1905, 1907, 1909, 1911, 1918], "reset": [0, 2, 749, 809, 814, 882, 956, 1004, 1006, 1019, 1020, 1021, 1182, 1366, 1414, 1430, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1689, 1706, 1801, 1850, 1865, 1893, 1904], "clear": [0, 2, 3, 9, 10, 54, 65, 1182, 1414, 1415, 1424, 1651, 1849, 1875, 1878, 1886, 1891, 1895, 1896], "cach": [0, 1, 3, 4, 14, 23, 41, 65, 477, 980, 981, 998, 1001, 1006, 1008, 1010, 1012, 1020, 1025, 1290, 1291, 1292, 1595, 1606, 1867, 1882], "restor": [0, 3, 6, 13, 39, 65, 81, 1100, 1252, 1268, 1726, 1748, 1886, 1891], "initi": [0, 2, 4, 5, 9, 17, 22, 28, 29, 32, 33, 37, 39, 43, 45, 52, 53, 55, 57, 81, 486, 569, 701, 702, 703, 704, 705, 706, 709, 719, 720, 721, 722, 734, 735, 745, 749, 753, 850, 851, 868, 958, 966, 987, 992, 993, 996, 997, 1022, 1129, 1158, 1180, 1182, 1194, 1195, 1253, 1254, 1271, 1332, 1333, 1334, 1335, 1337, 1345, 1346, 1347, 1351, 1357, 1358, 1366, 1367, 1369, 1377, 1378, 1379, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1414, 1422, 1429, 1431, 1453, 1463, 1504, 1585, 1594, 1596, 1597, 1601, 1603, 1606, 1634, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1739, 1740, 1741, 1782, 1783, 1784, 1785, 1786, 1787, 1814, 1850, 1853, 1854, 1855, 1865, 1870, 1873, 1875, 1878, 1879, 1880, 1885, 1892, 1893, 1896, 1897, 1898, 1904, 1905, 1906], "class": [0, 1, 2, 3, 4, 12, 13, 17, 19, 22, 23, 27, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 46, 49, 50, 52, 54, 57, 62, 64, 81, 546, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 825, 826, 827, 828, 829, 830, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 883, 886, 887, 888, 889, 909, 956, 957, 958, 959, 961, 962, 977, 979, 990, 1030, 1059, 1121, 1157, 1180, 1181, 1182, 1185, 1187, 1188, 1192, 1193, 1196, 1197, 1198, 1199, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1486, 1496, 1504, 1548, 1550, 1585, 1594, 1595, 1596, 1597, 1603, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1627, 1634, 1639, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1706, 1745, 1775, 1850, 1853, 1856, 1859, 1862, 1865, 1867, 1869, 1874, 1875, 1878, 1880, 1881, 1882, 1886, 1888, 1891, 1894, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1909, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921], "optimizedmodul": [0, 1850], "mod": [0, 12, 23, 65, 710, 711, 721, 727, 728, 729, 734, 735, 745, 753, 799, 800, 801, 802, 825, 826, 853, 1111, 1185, 1186, 1191, 1198, 1636, 1854, 1855, 1897, 1918], "dynamo_ctx": 0, "origin": [0, 2, 12, 13, 14, 17, 22, 23, 24, 29, 32, 33, 35, 37, 45, 57, 60, 64, 65, 199, 202, 214, 477, 534, 592, 596, 606, 669, 749, 786, 827, 828, 843, 846, 847, 927, 932, 959, 1075, 1076, 1078, 1082, 1086, 1087, 1088, 1094, 1111, 1121, 1156, 1179, 1189, 1193, 1194, 1197, 1198, 1275, 1289, 1322, 1326, 1338, 1350, 1351, 1366, 1443, 1453, 1496, 1566, 1601, 1602, 1603, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1627, 1630, 1633, 1635, 1636, 1638, 1651, 1681, 1690, 1726, 1737, 1773, 1788, 1821, 1832, 1833, 1852, 1855, 1861, 1867, 1869, 1875, 1878, 1880, 1882, 1885, 1888, 1889, 1891, 1893, 1897, 1898, 1900, 1901, 1911, 1918, 1919, 1920], "nn": [0, 1, 4, 6, 12, 17, 22, 23, 27, 32, 33, 35, 36, 39, 40, 53, 57, 58, 65, 290, 530, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 781, 782, 803, 843, 848, 849, 850, 851, 853, 998, 1001, 1055, 1111, 1120, 1121, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1191, 1192, 1193, 1197, 1198, 1199, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1585, 1594, 1595, 1596, 1597, 1603, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1627, 1639, 1772, 1796, 1835, 1849, 1850, 1852, 1853, 1857, 1869, 1870, 1874, 1879, 1882, 1886, 1888, 1889, 1890, 1893, 1896, 1897, 1898, 1900, 1902, 1905, 1914, 1916, 1919], "object": [0, 1, 2, 4, 6, 7, 9, 12, 13, 17, 19, 22, 26, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 52, 54, 57, 64, 65, 70, 81, 199, 202, 592, 782, 783, 843, 850, 869, 879, 880, 881, 906, 908, 979, 990, 1030, 1055, 1094, 1106, 1108, 1113, 1114, 1116, 1117, 1118, 1122, 1168, 1169, 1182, 1188, 1189, 1192, 1193, 1197, 1198, 1213, 1234, 1238, 1251, 1253, 1254, 1274, 1351, 1353, 1354, 1355, 1359, 1377, 1378, 1379, 1414, 1424, 1453, 1594, 1604, 1619, 1628, 1629, 1632, 1633, 1634, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1731, 1804, 1805, 1808, 1849, 1854, 1855, 1856, 1859, 1863, 1864, 1867, 1871, 1875, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1888, 1890, 1891, 1892, 1893, 1896, 1900, 1902, 1903, 1904, 1905, 1907, 1911, 1912, 1914, 1916, 1920, 1921], "later": [0, 1, 2, 4, 8, 17, 19, 31, 33, 35, 57, 64, 65, 734, 735, 745, 753, 905, 990, 1253, 1384, 1407, 1408, 1409, 1429, 1443, 1537, 1538, 1539, 1566, 1594, 1800, 1852, 1875, 1877, 1878, 1879, 1886, 1891, 1906, 1907], "patch": [0, 8, 59, 1361, 1465], "its": [0, 1, 2, 5, 6, 8, 9, 10, 13, 14, 16, 17, 19, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 52, 53, 54, 57, 64, 65, 143, 449, 478, 494, 503, 505, 507, 572, 573, 574, 606, 669, 812, 815, 863, 864, 865, 867, 868, 869, 882, 885, 897, 902, 903, 909, 934, 935, 944, 950, 954, 962, 990, 992, 1001, 1038, 1042, 1045, 1055, 1058, 1103, 1108, 1112, 1113, 1114, 1117, 1122, 1143, 1144, 1148, 1162, 1182, 1192, 1217, 1218, 1222, 1227, 1234, 1236, 1239, 1240, 1245, 1251, 1276, 1302, 1330, 1332, 1333, 1334, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1377, 1378, 1379, 1414, 1415, 1424, 1445, 1453, 1513, 1524, 1551, 1557, 1585, 1590, 1591, 1595, 1596, 1597, 1602, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1628, 1634, 1638, 1642, 1651, 1656, 1657, 1658, 1660, 1666, 1667, 1670, 1690, 1715, 1719, 1723, 1724, 1740, 1741, 1745, 1765, 1801, 1820, 1821, 1823, 1831, 1840, 1852, 1854, 1855, 1859, 1863, 1865, 1867, 1874, 1875, 1876, 1878, 1879, 1880, 1882, 1883, 1886, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1905, 1906, 1907, 1909, 1912, 1913, 1915, 1918, 1919], "forward": [0, 1, 6, 8, 9, 12, 14, 17, 19, 22, 23, 26, 33, 35, 36, 39, 41, 57, 58, 59, 61, 63, 65, 143, 214, 215, 669, 724, 737, 746, 749, 789, 804, 805, 806, 809, 813, 850, 851, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 896, 897, 909, 1001, 1047, 1059, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1112, 1114, 1115, 1116, 1118, 1121, 1157, 1182, 1185, 1186, 1187, 1188, 1192, 1193, 1197, 1198, 1199, 1326, 1330, 1333, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1366, 1384, 1399, 1410, 1411, 1412, 1414, 1415, 1416, 1420, 1421, 1424, 1425, 1429, 1442, 1457, 1458, 1459, 1460, 1461, 1499, 1500, 1501, 1506, 1551, 1585, 1588, 1589, 1590, 1591, 1594, 1604, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1624, 1635, 1638, 1639, 1706, 1745, 1774, 1835, 1850, 1851, 1852, 1854, 1855, 1861, 1863, 1867, 1869, 1873, 1874, 1875, 1877, 1878, 1879, 1881, 1882, 1883, 1885, 1886, 1889, 1891, 1893, 1896, 1897, 1898, 1899, 1900, 1905, 1917, 1918, 1919], "method": [0, 1, 4, 8, 10, 12, 13, 16, 17, 23, 26, 27, 29, 32, 35, 36, 37, 39, 41, 42, 43, 44, 50, 52, 57, 64, 65, 214, 215, 315, 477, 478, 487, 488, 489, 510, 603, 782, 786, 788, 804, 805, 806, 827, 830, 843, 863, 864, 865, 882, 886, 887, 888, 889, 902, 903, 992, 1106, 1135, 1180, 1182, 1183, 1185, 1186, 1187, 1192, 1193, 1197, 1198, 1199, 1227, 1245, 1246, 1253, 1254, 1311, 1314, 1322, 1330, 1357, 1414, 1415, 1416, 1424, 1425, 1442, 1513, 1585, 1594, 1602, 1603, 1606, 1608, 1610, 1613, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1630, 1635, 1648, 1649, 1654, 1655, 1656, 1658, 1668, 1700, 1781, 1796, 1800, 1849, 1850, 1852, 1855, 1856, 1863, 1865, 1867, 1868, 1869, 1873, 1874, 1875, 1878, 1880, 1881, 1882, 1883, 1886, 1888, 1891, 1894, 1896, 1897, 1900, 1902, 1905, 1907, 1911, 1912, 1914, 1915, 1917, 1920], "self": [0, 1, 2, 10, 12, 17, 22, 23, 29, 32, 33, 35, 37, 40, 43, 44, 49, 54, 57, 62, 65, 90, 132, 143, 146, 147, 148, 163, 165, 168, 171, 172, 173, 183, 184, 188, 189, 201, 209, 211, 225, 232, 246, 247, 250, 251, 259, 278, 282, 289, 303, 305, 307, 309, 311, 313, 315, 317, 318, 320, 321, 322, 323, 325, 333, 369, 385, 390, 392, 393, 394, 445, 462, 472, 474, 487, 488, 489, 490, 503, 505, 507, 510, 514, 526, 532, 533, 534, 535, 547, 549, 569, 570, 572, 573, 574, 576, 577, 593, 596, 597, 603, 606, 607, 609, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 850, 851, 907, 1111, 1112, 1121, 1152, 1180, 1181, 1182, 1185, 1186, 1187, 1188, 1192, 1193, 1197, 1198, 1199, 1322, 1326, 1359, 1413, 1414, 1415, 1416, 1420, 1424, 1425, 1441, 1443, 1453, 1459, 1461, 1543, 1566, 1585, 1603, 1604, 1606, 1612, 1614, 1627, 1636, 1649, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1696, 1717, 1851, 1852, 1853, 1854, 1855, 1859, 1865, 1868, 1869, 1873, 1875, 1876, 1877, 1880, 1882, 1886, 1891, 1893, 1897, 1898, 1900, 1905, 1911], "register_backend": [0, 12, 35, 1850, 1905], "compiler_fn": [0, 17], "tag": [0, 2, 4, 8, 35, 1253, 1849, 1850, 1885, 1897, 1914], "given": [0, 1, 2, 3, 4, 8, 10, 14, 15, 17, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 50, 52, 54, 57, 63, 64, 65, 70, 143, 212, 305, 307, 309, 313, 318, 369, 390, 394, 463, 464, 465, 466, 467, 469, 503, 505, 507, 573, 574, 593, 596, 669, 682, 684, 685, 687, 688, 724, 749, 768, 774, 781, 782, 783, 784, 788, 789, 791, 809, 813, 826, 829, 843, 847, 854, 865, 878, 880, 882, 884, 886, 888, 890, 891, 892, 893, 894, 895, 898, 912, 913, 916, 924, 928, 929, 935, 936, 941, 942, 948, 950, 953, 954, 955, 958, 959, 961, 962, 963, 967, 975, 976, 979, 983, 984, 1000, 1004, 1006, 1007, 1008, 1010, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1030, 1031, 1032, 1033, 1040, 1042, 1047, 1055, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1095, 1111, 1121, 1122, 1148, 1179, 1182, 1189, 1197, 1198, 1203, 1207, 1217, 1219, 1220, 1229, 1231, 1237, 1245, 1254, 1261, 1263, 1264, 1265, 1266, 1269, 1279, 1281, 1283, 1284, 1287, 1312, 1322, 1330, 1331, 1337, 1342, 1343, 1344, 1346, 1347, 1348, 1350, 1351, 1357, 1358, 1362, 1363, 1366, 1374, 1384, 1406, 1410, 1411, 1412, 1414, 1416, 1418, 1419, 1421, 1423, 1425, 1429, 1442, 1448, 1462, 1463, 1466, 1467, 1468, 1478, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1504, 1505, 1508, 1509, 1513, 1524, 1548, 1563, 1578, 1582, 1583, 1584, 1588, 1589, 1590, 1602, 1627, 1634, 1635, 1638, 1641, 1642, 1651, 1677, 1680, 1682, 1684, 1687, 1692, 1697, 1700, 1701, 1702, 1715, 1721, 1726, 1737, 1738, 1769, 1773, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1791, 1796, 1799, 1801, 1810, 1811, 1816, 1818, 1820, 1830, 1835, 1849, 1850, 1852, 1855, 1859, 1861, 1862, 1864, 1867, 1870, 1871, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1890, 1891, 1893, 1896, 1899, 1900, 1905, 1906, 1909, 1910, 1911, 1914, 1916, 1919, 1920], "registri": [0, 32, 1850, 1893], "shorthand": [0, 449, 1201], "project": [0, 8, 22, 37, 1283, 1384, 1420, 1606, 1689, 1849, 1884], "import": [0, 2, 3, 4, 6, 8, 10, 12, 13, 14, 16, 17, 18, 22, 23, 26, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 44, 46, 49, 50, 54, 57, 60, 61, 62, 63, 64, 65, 214, 669, 723, 730, 731, 732, 761, 762, 763, 781, 849, 850, 851, 900, 902, 921, 928, 954, 1106, 1108, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1121, 1157, 1179, 1180, 1183, 1185, 1187, 1188, 1189, 1191, 1192, 1193, 1197, 1198, 1199, 1233, 1234, 1237, 1238, 1251, 1283, 1380, 1414, 1594, 1604, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1633, 1634, 1641, 1648, 1669, 1693, 1852, 1854, 1855, 1856, 1865, 1867, 1870, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1900, 1903, 1905, 1906, 1907, 1909, 1912, 1914, 1915, 1916, 1919, 1920], "might": [0, 2, 4, 5, 10, 14, 16, 17, 22, 23, 26, 27, 29, 35, 37, 39, 41, 52, 62, 64, 65, 143, 477, 533, 882, 955, 1197, 1198, 1513, 1594, 1595, 1849, 1852, 1865, 1870, 1875, 1877, 1878, 1879, 1880, 1883, 1885, 1890, 1893, 1897, 1898, 1900, 1905, 1906, 1907, 1909, 1913, 1915, 1916], "easier": [0, 3, 8, 14, 23, 32, 65, 1852, 1854, 1870, 1875, 1876, 1880, 1881], "directli": [0, 1, 2, 4, 8, 10, 14, 16, 22, 23, 26, 27, 32, 33, 35, 37, 41, 42, 43, 51, 57, 61, 65, 546, 721, 736, 879, 888, 1038, 1106, 1112, 1119, 1121, 1127, 1212, 1420, 1447, 1466, 1524, 1569, 1628, 1821, 1852, 1854, 1855, 1865, 1875, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1891, 1897, 1899, 1900, 1905, 1909, 1914, 1916], "compiledfn": 0, "fake": [0, 65, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 782, 788, 789, 799, 801, 827, 850, 851, 1069, 1070, 1897, 1900, 1903], "__name__": [0, 32, 33, 35, 44, 45, 53, 1879, 1880, 1888, 1892, 1897, 1906], "sequenc": [0, 2, 14, 21, 22, 23, 32, 37, 39, 40, 41, 143, 555, 724, 749, 803, 869, 882, 896, 926, 928, 929, 932, 940, 961, 968, 969, 972, 1040, 1054, 1056, 1123, 1143, 1144, 1147, 1197, 1237, 1283, 1322, 1332, 1337, 1342, 1351, 1358, 1366, 1384, 1420, 1429, 1442, 1457, 1458, 1459, 1460, 1461, 1505, 1563, 1603, 1606, 1613, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1642, 1645, 1648, 1652, 1667, 1706, 1708, 1712, 1735, 1793, 1796, 1842, 1844, 1847, 1852, 1853, 1854, 1870, 1878, 1882, 1893, 1897, 1898, 1905, 1915, 1916], "categor": [0, 8, 22, 45, 1515, 1850, 1856, 1901, 1905], "exclude_tag": 0, "debug": [0, 2, 3, 5, 9, 14, 15, 19, 32, 49, 669, 816, 817, 821, 832, 897, 898, 942, 956, 989, 1029, 1130, 1211, 1588, 1589, 1590, 1591, 1742, 1750, 1850, 1854, 1861, 1875, 1877, 1878, 1879, 1884, 1885, 1886, 1890, 1892, 1893, 1894, 1897, 1918], "experiment": [0, 2, 3, 15, 18, 23, 33, 35, 39, 40, 57, 65, 890, 892, 896, 942, 1029, 1112, 1212, 1223, 1225, 1226, 1230, 1243, 1594, 1648, 1850, 1852, 1854, 1868, 1869, 1879, 1890, 1892, 1893, 1897, 1898, 1899], "conveni": [1, 4, 8, 17, 21, 26, 49, 52, 53, 63, 1123, 1239, 1585, 1842, 1849, 1854, 1859, 1874, 1875, 1878, 1880, 1885, 1886, 1897, 1904], "where": [1, 2, 3, 4, 5, 8, 9, 10, 14, 16, 17, 23, 24, 26, 27, 32, 33, 35, 39, 40, 41, 43, 45, 52, 53, 54, 55, 57, 59, 60, 62, 65, 146, 216, 246, 392, 394, 477, 669, 682, 684, 685, 688, 724, 747, 749, 770, 809, 810, 822, 866, 885, 890, 892, 905, 911, 920, 926, 933, 934, 935, 950, 954, 959, 970, 972, 1034, 1035, 1038, 1042, 1060, 1071, 1072, 1074, 1077, 1078, 1080, 1081, 1083, 1084, 1085, 1087, 1088, 1090, 1092, 1116, 1117, 1118, 1122, 1123, 1126, 1138, 1139, 1140, 1141, 1171, 1172, 1174, 1175, 1178, 1179, 1180, 1183, 1195, 1201, 1202, 1203, 1206, 1211, 1212, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1253, 1254, 1259, 1262, 1269, 1270, 1271, 1272, 1276, 1279, 1281, 1282, 1283, 1284, 1287, 1304, 1309, 1310, 1312, 1315, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1484, 1496, 1497, 1504, 1509, 1511, 1512, 1530, 1531, 1548, 1550, 1551, 1554, 1555, 1557, 1563, 1566, 1594, 1596, 1597, 1601, 1628, 1629, 1630, 1631, 1640, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1673, 1674, 1675, 1687, 1697, 1699, 1700, 1720, 1721, 1757, 1763, 1764, 1769, 1773, 1777, 1778, 1779, 1782, 1783, 1784, 1785, 1786, 1787, 1794, 1795, 1796, 1799, 1800, 1814, 1823, 1824, 1825, 1826, 1827, 1832, 1833, 1837, 1838, 1839, 1840, 1841, 1842, 1851, 1852, 1853, 1855, 1856, 1861, 1862, 1864, 1867, 1870, 1873, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1886, 1889, 1890, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1905, 1907, 1909, 1910, 1912, 1914, 1919, 1920], "float": [1, 2, 4, 16, 22, 24, 32, 33, 35, 39, 41, 43, 46, 54, 57, 65, 146, 147, 212, 305, 307, 309, 313, 325, 392, 466, 472, 503, 674, 676, 681, 683, 687, 721, 724, 727, 728, 729, 733, 734, 735, 737, 744, 745, 750, 751, 752, 753, 754, 759, 760, 761, 762, 763, 764, 766, 768, 769, 770, 774, 781, 782, 783, 788, 806, 808, 819, 827, 828, 841, 846, 847, 850, 851, 854, 869, 897, 898, 911, 912, 920, 927, 930, 934, 944, 949, 950, 954, 955, 1025, 1038, 1049, 1050, 1060, 1073, 1091, 1100, 1101, 1102, 1103, 1105, 1126, 1129, 1138, 1139, 1140, 1143, 1144, 1164, 1171, 1172, 1174, 1175, 1176, 1177, 1180, 1182, 1197, 1198, 1201, 1205, 1207, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1259, 1268, 1270, 1272, 1299, 1303, 1304, 1308, 1310, 1311, 1312, 1315, 1318, 1322, 1326, 1332, 1333, 1334, 1336, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1362, 1363, 1368, 1369, 1370, 1373, 1374, 1375, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1400, 1402, 1406, 1414, 1419, 1420, 1422, 1423, 1428, 1432, 1435, 1436, 1437, 1438, 1439, 1445, 1451, 1453, 1456, 1457, 1459, 1461, 1462, 1463, 1466, 1467, 1468, 1495, 1496, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1510, 1515, 1524, 1549, 1556, 1563, 1582, 1594, 1598, 1599, 1602, 1611, 1612, 1614, 1615, 1617, 1620, 1621, 1622, 1623, 1630, 1631, 1635, 1641, 1642, 1648, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1681, 1683, 1685, 1687, 1693, 1696, 1700, 1701, 1702, 1703, 1715, 1719, 1720, 1740, 1741, 1744, 1748, 1757, 1758, 1760, 1761, 1763, 1797, 1800, 1804, 1821, 1823, 1835, 1851, 1852, 1853, 1854, 1855, 1856, 1862, 1865, 1867, 1868, 1870, 1871, 1873, 1874, 1878, 1880, 1882, 1886, 1889, 1893, 1895, 1897, 1899, 1900, 1901, 1905, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1921], "datatyp": [1, 65, 869, 1179, 1182, 1414, 1596, 1597, 1743, 1889, 1893], "other": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 16, 17, 18, 22, 23, 26, 27, 29, 32, 33, 36, 39, 41, 42, 43, 45, 49, 50, 52, 53, 57, 58, 60, 62, 63, 64, 65, 90, 91, 106, 122, 123, 126, 138, 139, 142, 143, 152, 153, 158, 159, 189, 190, 191, 200, 226, 231, 235, 236, 237, 247, 266, 267, 274, 275, 276, 277, 283, 284, 285, 286, 287, 288, 295, 296, 299, 300, 301, 302, 305, 307, 313, 316, 336, 344, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 370, 371, 386, 387, 400, 404, 429, 430, 441, 442, 446, 447, 478, 488, 510, 550, 551, 552, 553, 569, 572, 605, 606, 607, 610, 611, 674, 683, 727, 728, 729, 730, 731, 732, 749, 803, 815, 850, 854, 860, 867, 868, 873, 879, 882, 883, 896, 897, 898, 902, 903, 909, 914, 915, 917, 918, 919, 921, 926, 949, 955, 956, 959, 961, 963, 970, 980, 1001, 1043, 1049, 1050, 1051, 1052, 1059, 1060, 1061, 1075, 1082, 1100, 1101, 1102, 1103, 1106, 1112, 1113, 1114, 1115, 1118, 1122, 1124, 1125, 1126, 1136, 1137, 1138, 1147, 1148, 1150, 1151, 1156, 1157, 1159, 1171, 1180, 1182, 1186, 1193, 1202, 1204, 1205, 1206, 1208, 1209, 1214, 1232, 1234, 1237, 1238, 1251, 1259, 1260, 1261, 1263, 1265, 1266, 1269, 1270, 1276, 1279, 1280, 1284, 1285, 1289, 1292, 1303, 1305, 1315, 1318, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1351, 1361, 1366, 1368, 1380, 1414, 1415, 1424, 1442, 1457, 1461, 1465, 1488, 1489, 1490, 1515, 1524, 1563, 1582, 1585, 1594, 1598, 1599, 1617, 1639, 1643, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1678, 1679, 1685, 1687, 1715, 1719, 1735, 1740, 1743, 1745, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1797, 1798, 1814, 1820, 1824, 1826, 1839, 1840, 1845, 1846, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1863, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1891, 1893, 1896, 1900, 1901, 1905, 1906, 1907, 1910, 1911, 1914, 1915, 1916, 1920], "point": [1, 2, 8, 9, 10, 12, 13, 14, 16, 17, 19, 22, 24, 32, 33, 36, 39, 43, 49, 52, 53, 57, 65, 81, 146, 147, 313, 325, 331, 472, 687, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750, 751, 752, 753, 754, 764, 766, 768, 769, 770, 774, 784, 788, 808, 809, 810, 811, 814, 819, 841, 850, 851, 854, 869, 891, 893, 894, 895, 897, 898, 911, 912, 920, 949, 950, 954, 1004, 1006, 1015, 1019, 1020, 1101, 1102, 1103, 1129, 1135, 1139, 1140, 1144, 1164, 1179, 1182, 1197, 1198, 1205, 1207, 1228, 1229, 1252, 1254, 1259, 1268, 1311, 1318, 1327, 1328, 1329, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1407, 1408, 1409, 1414, 1465, 1466, 1478, 1504, 1513, 1524, 1563, 1582, 1594, 1641, 1653, 1684, 1700, 1701, 1702, 1706, 1715, 1728, 1740, 1741, 1748, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1835, 1850, 1852, 1854, 1855, 1856, 1859, 1865, 1871, 1873, 1874, 1875, 1879, 1883, 1886, 1889, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1909, 1912, 1914, 1915, 1916, 1917, 1918, 1921], "lower_precision_fp": 1, "half": [1, 2, 11, 33, 41, 606, 944, 1069, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1182, 1244, 1250, 1342, 1343, 1344, 1345, 1346, 1347, 1362, 1363, 1365, 1414, 1508, 1509, 1512, 1650, 1675, 1728, 1796, 1868, 1886, 1889, 1911, 1912, 1915, 1917], "linear": [1, 3, 10, 23, 33, 35, 36, 39, 41, 57, 59, 61, 63, 65, 422, 463, 464, 465, 466, 467, 470, 700, 709, 717, 718, 754, 781, 782, 783, 785, 803, 843, 847, 848, 850, 851, 892, 935, 961, 1055, 1111, 1113, 1121, 1123, 1135, 1182, 1186, 1193, 1207, 1213, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1242, 1244, 1272, 1311, 1330, 1336, 1356, 1364, 1365, 1373, 1399, 1414, 1416, 1429, 1431, 1433, 1441, 1443, 1450, 1453, 1464, 1466, 1502, 1511, 1512, 1524, 1558, 1566, 1571, 1582, 1585, 1594, 1601, 1602, 1606, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1634, 1635, 1638, 1678, 1681, 1689, 1700, 1835, 1842, 1850, 1853, 1854, 1860, 1863, 1870, 1873, 1878, 1879, 1880, 1882, 1886, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1902, 1903, 1905], "layer": [1, 9, 14, 33, 35, 37, 39, 40, 57, 60, 723, 724, 749, 830, 847, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1353, 1354, 1355, 1359, 1366, 1367, 1369, 1377, 1378, 1379, 1384, 1385, 1386, 1399, 1401, 1407, 1408, 1409, 1420, 1421, 1429, 1431, 1442, 1453, 1457, 1458, 1459, 1460, 1461, 1527, 1594, 1601, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1850, 1873, 1878, 1880, 1882, 1885, 1886, 1891, 1893, 1896, 1898, 1900, 1901, 1903, 1919], "convolut": [1, 2, 3, 15, 727, 728, 729, 730, 731, 732, 761, 762, 763, 942, 1191, 1342, 1343, 1344, 1345, 1346, 1347, 1353, 1354, 1355, 1359, 1390, 1391, 1392, 1393, 1394, 1395, 1426, 1427, 1432, 1462, 1463, 1465, 1488, 1489, 1490, 1491, 1492, 1493, 1512, 1513, 1743, 1850, 1851, 1853, 1863, 1873, 1877, 1878, 1883, 1886, 1895, 1899, 1900, 1903], "much": [1, 5, 8, 10, 14, 17, 18, 27, 32, 33, 143, 882, 891, 896, 1012, 1217, 1218, 1245, 1254, 1358, 1594, 1617, 1681, 1852, 1875, 1878, 1883, 1886, 1891, 1897, 1898, 1905, 1906, 1909], "reduct": [1, 3, 23, 35, 57, 313, 503, 507, 1227, 1259, 1311, 1330, 1331, 1337, 1348, 1350, 1358, 1368, 1374, 1375, 1380, 1381, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1463, 1485, 1486, 1494, 1496, 1497, 1505, 1510, 1521, 1522, 1525, 1526, 1536, 1544, 1545, 1546, 1547, 1548, 1556, 1567, 1568, 1579, 1580, 1594, 1700, 1777, 1853, 1868, 1879, 1883, 1897, 1900], "often": [1, 3, 5, 8, 9, 14, 18, 23, 26, 32, 35, 41, 53, 60, 65, 143, 882, 896, 1197, 1228, 1229, 1238, 1287, 1357, 1377, 1378, 1379, 1478, 1486, 1504, 1513, 1585, 1601, 1648, 1683, 1855, 1875, 1878, 1882, 1885, 1886, 1889, 1890, 1897, 1905, 1914], "tri": [1, 3, 4, 8, 14, 32, 41, 45, 65, 569, 1182, 1414, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1854, 1855, 1867, 1882, 1893, 1897], "match": [1, 2, 4, 14, 17, 22, 35, 37, 39, 41, 52, 65, 143, 305, 307, 313, 464, 465, 489, 490, 569, 572, 682, 688, 768, 782, 783, 784, 843, 867, 882, 896, 897, 898, 955, 958, 970, 971, 972, 1001, 1047, 1055, 1111, 1123, 1159, 1182, 1195, 1197, 1214, 1253, 1275, 1349, 1358, 1414, 1420, 1466, 1485, 1486, 1524, 1550, 1557, 1563, 1582, 1594, 1606, 1636, 1642, 1701, 1735, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1816, 1842, 1852, 1855, 1862, 1868, 1870, 1875, 1876, 1878, 1880, 1886, 1891, 1893, 1896, 1897, 1898, 1900, 1901, 1902, 1905, 1912, 1916, 1918], "appropri": [1, 8, 9, 10, 14, 17, 19, 35, 36, 41, 57, 64, 65, 883, 1001, 1197, 1855, 1856, 1859, 1869, 1883, 1898, 1900, 1903, 1905, 1906, 1907, 1911, 1920], "ordinarili": [1, 1874], "train": [1, 2, 12, 14, 16, 18, 20, 21, 23, 27, 32, 33, 35, 36, 38, 39, 43, 50, 51, 52, 53, 57, 60, 61, 65, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 788, 790, 827, 828, 844, 845, 846, 848, 850, 851, 852, 1000, 1001, 1004, 1006, 1013, 1121, 1157, 1182, 1187, 1193, 1196, 1197, 1322, 1326, 1332, 1333, 1334, 1350, 1351, 1352, 1357, 1358, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1414, 1420, 1421, 1432, 1453, 1461, 1479, 1483, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1561, 1562, 1594, 1602, 1604, 1606, 1635, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1849, 1851, 1852, 1853, 1863, 1865, 1873, 1875, 1878, 1879, 1882, 1887, 1889, 1891, 1893, 1896, 1897, 1898, 1899, 1903, 1905, 1907, 1914], "gradscal": [1, 1874, 1878], "togeth": [1, 4, 10, 12, 14, 19, 32, 35, 40, 41, 58, 63, 65, 749, 998, 1055, 1111, 1113, 1117, 1121, 1122, 1127, 1221, 1366, 1384, 1429, 1524, 1594, 1598, 1821, 1863, 1874, 1880, 1881, 1882, 1885, 1886, 1900, 1905, 1906, 1907, 1914], "shown": [1, 12, 33, 44, 53, 998, 1008, 1386, 1606, 1651, 1681, 1748, 1852, 1855, 1874, 1878, 1880, 1882, 1886, 1898, 1900, 1909], "recip": [1, 4, 39, 1414, 1594, 1608, 1874, 1886], "howev": [1, 3, 4, 5, 6, 8, 10, 14, 26, 27, 32, 33, 35, 39, 41, 43, 49, 57, 58, 59, 61, 62, 64, 65, 472, 534, 883, 890, 958, 980, 1001, 1043, 1045, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1111, 1112, 1116, 1117, 1119, 1122, 1123, 1182, 1185, 1186, 1192, 1194, 1221, 1236, 1237, 1239, 1253, 1254, 1271, 1330, 1333, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1358, 1414, 1488, 1489, 1490, 1513, 1585, 1594, 1627, 1641, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1782, 1783, 1784, 1785, 1786, 1787, 1842, 1850, 1855, 1870, 1874, 1875, 1878, 1880, 1884, 1886, 1888, 1890, 1891, 1892, 1893, 1897, 1898, 1905, 1907, 1909], "modular": [1, 1874], "mai": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 17, 23, 26, 31, 32, 33, 35, 39, 41, 42, 43, 45, 49, 51, 52, 57, 58, 62, 64, 65, 189, 214, 246, 305, 313, 449, 505, 507, 545, 592, 606, 669, 678, 804, 805, 806, 850, 881, 888, 890, 892, 896, 897, 906, 913, 924, 936, 947, 948, 950, 952, 955, 956, 958, 959, 967, 980, 990, 991, 992, 998, 999, 1001, 1012, 1014, 1018, 1032, 1033, 1055, 1094, 1098, 1103, 1106, 1108, 1115, 1116, 1118, 1144, 1179, 1182, 1185, 1186, 1191, 1192, 1194, 1195, 1197, 1203, 1212, 1213, 1217, 1218, 1219, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1237, 1239, 1240, 1243, 1244, 1245, 1251, 1253, 1254, 1259, 1276, 1286, 1299, 1322, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1380, 1384, 1410, 1411, 1412, 1414, 1421, 1429, 1459, 1461, 1466, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1505, 1513, 1515, 1524, 1530, 1551, 1563, 1581, 1582, 1583, 1584, 1585, 1594, 1601, 1603, 1604, 1606, 1641, 1675, 1699, 1719, 1722, 1740, 1743, 1750, 1768, 1780, 1796, 1800, 1823, 1835, 1849, 1850, 1852, 1854, 1855, 1859, 1861, 1862, 1863, 1865, 1869, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1886, 1889, 1890, 1891, 1892, 1893, 1897, 1899, 1900, 1901, 1903, 1905, 1907, 1909, 1911, 1917, 1920], "separ": [1, 2, 4, 10, 23, 26, 32, 35, 39, 52, 53, 57, 58, 60, 63, 64, 65, 724, 749, 879, 1055, 1072, 1074, 1080, 1081, 1084, 1085, 1090, 1092, 1111, 1192, 1227, 1242, 1369, 1377, 1378, 1379, 1420, 1422, 1532, 1642, 1849, 1853, 1855, 1861, 1874, 1875, 1877, 1878, 1881, 1891, 1896, 1897, 1906, 1909, 1910, 1914], "desir": [1, 2, 4, 23, 32, 35, 41, 57, 65, 81, 148, 163, 165, 168, 171, 172, 173, 188, 199, 202, 232, 246, 259, 289, 317, 385, 436, 437, 438, 439, 440, 487, 489, 490, 510, 514, 533, 534, 535, 549, 569, 572, 592, 593, 606, 782, 854, 868, 911, 920, 939, 1002, 1003, 1026, 1027, 1036, 1037, 1056, 1057, 1058, 1068, 1073, 1091, 1108, 1109, 1110, 1139, 1140, 1182, 1201, 1252, 1268, 1274, 1281, 1294, 1300, 1309, 1311, 1312, 1330, 1414, 1464, 1532, 1569, 1570, 1585, 1627, 1641, 1645, 1646, 1690, 1697, 1700, 1701, 1702, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1749, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1776, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1814, 1825, 1827, 1847, 1848, 1868, 1869, 1870, 1874, 1875, 1878, 1881, 1884, 1886, 1891, 1898, 1904, 1905, 1910, 1911, 1912], "section": [1, 2, 8, 12, 17, 23, 32, 41, 43, 44, 61, 65, 112, 1012, 1055, 1135, 1351, 1366, 1384, 1412, 1429, 1496, 1630, 1815, 1852, 1853, 1854, 1855, 1856, 1867, 1869, 1870, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1884, 1886, 1888, 1906, 1914], "infer": [1, 2, 3, 4, 6, 14, 16, 18, 20, 24, 27, 41, 52, 569, 606, 850, 851, 854, 868, 869, 972, 1108, 1109, 1144, 1157, 1166, 1180, 1183, 1191, 1196, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1420, 1466, 1524, 1550, 1585, 1639, 1681, 1715, 1722, 1740, 1741, 1782, 1783, 1784, 1785, 1786, 1787, 1814, 1831, 1850, 1852, 1854, 1855, 1859, 1868, 1870, 1886, 1893, 1894, 1899, 1900, 1901, 1903, 1909], "For": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19, 20, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 41, 43, 49, 50, 52, 53, 55, 57, 58, 59, 61, 62, 63, 64, 65, 189, 214, 246, 281, 305, 307, 313, 327, 344, 462, 472, 483, 489, 503, 505, 507, 572, 578, 592, 606, 675, 676, 677, 678, 679, 682, 688, 723, 727, 728, 729, 730, 731, 732, 749, 781, 782, 783, 803, 847, 848, 881, 897, 910, 914, 916, 917, 919, 922, 931, 935, 942, 990, 1004, 1006, 1012, 1036, 1037, 1038, 1055, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1099, 1121, 1123, 1124, 1135, 1144, 1159, 1182, 1192, 1193, 1195, 1197, 1198, 1213, 1217, 1218, 1221, 1224, 1225, 1226, 1227, 1229, 1238, 1239, 1241, 1245, 1254, 1261, 1269, 1276, 1282, 1286, 1322, 1326, 1330, 1331, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1357, 1358, 1360, 1361, 1366, 1368, 1375, 1380, 1384, 1386, 1414, 1417, 1418, 1419, 1420, 1428, 1429, 1435, 1436, 1437, 1438, 1439, 1440, 1445, 1450, 1464, 1465, 1469, 1470, 1471, 1488, 1489, 1490, 1513, 1549, 1551, 1563, 1571, 1585, 1590, 1591, 1594, 1604, 1627, 1628, 1629, 1631, 1641, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1683, 1728, 1737, 1775, 1785, 1791, 1800, 1815, 1817, 1821, 1829, 1840, 1841, 1842, 1849, 1850, 1852, 1855, 1857, 1859, 1861, 1862, 1863, 1865, 1868, 1869, 1870, 1871, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1886, 1888, 1889, 1890, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1920], "api": [1, 3, 4, 6, 9, 10, 18, 21, 33, 35, 36, 40, 43, 44, 45, 49, 50, 51, 52, 53, 57, 58, 61, 64, 789, 813, 850, 883, 884, 885, 893, 909, 931, 956, 990, 991, 992, 998, 999, 1001, 1028, 1059, 1099, 1112, 1115, 1116, 1118, 1123, 1192, 1193, 1195, 1299, 1594, 1636, 1639, 1648, 1650, 1728, 1739, 1745, 1829, 1842, 1849, 1859, 1861, 1862, 1863, 1867, 1868, 1870, 1875, 1879, 1891, 1893, 1901, 1905, 1906, 1909, 1912, 1914, 1917, 1920], "equival": [1, 4, 6, 12, 17, 32, 33, 39, 40, 41, 45, 52, 53, 61, 62, 65, 148, 163, 165, 168, 171, 172, 173, 232, 247, 259, 289, 311, 317, 385, 439, 449, 488, 490, 514, 593, 599, 606, 607, 609, 681, 733, 737, 744, 746, 748, 774, 775, 776, 865, 879, 923, 925, 928, 930, 933, 940, 941, 1043, 1047, 1050, 1053, 1054, 1055, 1057, 1072, 1074, 1077, 1080, 1081, 1084, 1085, 1087, 1090, 1092, 1110, 1112, 1115, 1117, 1123, 1145, 1147, 1159, 1181, 1182, 1192, 1197, 1198, 1201, 1213, 1234, 1238, 1246, 1251, 1283, 1288, 1302, 1309, 1322, 1332, 1333, 1334, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1357, 1358, 1369, 1375, 1377, 1378, 1379, 1380, 1384, 1386, 1414, 1445, 1453, 1465, 1467, 1532, 1553, 1563, 1582, 1583, 1584, 1594, 1646, 1706, 1709, 1713, 1737, 1743, 1751, 1773, 1779, 1792, 1802, 1803, 1809, 1814, 1833, 1842, 1843, 1844, 1848, 1852, 1854, 1855, 1875, 1893, 1897, 1901, 1909, 1910, 1912, 1915, 1916, 1920, 1921], "device_typ": [1, 35, 1874, 1904], "dtype": [1, 2, 13, 23, 24, 29, 30, 32, 35, 37, 40, 57, 65, 146, 147, 184, 201, 205, 206, 207, 208, 234, 303, 305, 307, 309, 311, 313, 401, 420, 423, 436, 437, 438, 439, 440, 444, 449, 461, 472, 474, 503, 505, 554, 569, 570, 592, 606, 676, 678, 681, 682, 686, 688, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 747, 749, 750, 753, 754, 761, 762, 763, 783, 784, 788, 808, 809, 810, 811, 812, 813, 814, 815, 816, 830, 847, 848, 850, 851, 854, 868, 869, 886, 888, 890, 892, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 927, 934, 944, 947, 948, 954, 955, 971, 1036, 1037, 1056, 1057, 1058, 1068, 1072, 1073, 1074, 1080, 1081, 1091, 1098, 1103, 1105, 1107, 1108, 1109, 1110, 1129, 1139, 1140, 1152, 1182, 1186, 1195, 1201, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1263, 1264, 1265, 1266, 1268, 1271, 1272, 1276, 1280, 1281, 1282, 1285, 1286, 1304, 1308, 1309, 1310, 1312, 1322, 1331, 1332, 1333, 1334, 1335, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1357, 1358, 1361, 1366, 1367, 1369, 1377, 1378, 1379, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1414, 1420, 1421, 1422, 1429, 1430, 1431, 1435, 1436, 1437, 1438, 1439, 1453, 1457, 1459, 1461, 1465, 1466, 1467, 1468, 1480, 1496, 1497, 1530, 1532, 1563, 1569, 1570, 1585, 1596, 1597, 1603, 1606, 1607, 1627, 1641, 1645, 1646, 1650, 1652, 1687, 1693, 1697, 1698, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1725, 1728, 1740, 1741, 1743, 1744, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1772, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1800, 1811, 1814, 1825, 1827, 1832, 1835, 1840, 1841, 1845, 1847, 1848, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1862, 1869, 1870, 1878, 1880, 1886, 1889, 1893, 1895, 1900, 1901, 1902, 1909, 1910, 1911, 1914, 1915, 1916, 1921], "enabl": [1, 2, 3, 6, 9, 12, 14, 15, 17, 18, 23, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 43, 53, 57, 493, 494, 669, 749, 801, 802, 883, 888, 909, 942, 956, 1001, 1055, 1059, 1157, 1165, 1166, 1184, 1190, 1295, 1296, 1366, 1384, 1429, 1430, 1460, 1563, 1594, 1603, 1604, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1639, 1669, 1744, 1745, 1748, 1775, 1835, 1855, 1861, 1862, 1863, 1866, 1870, 1874, 1875, 1876, 1877, 1878, 1885, 1887, 1889, 1890, 1893, 1898, 1899, 1904, 1905, 1906, 1909, 1917, 1919, 1920], "cache_en": [1, 1001], "instanc": [1, 4, 17, 22, 32, 35, 36, 37, 39, 41, 42, 43, 49, 52, 53, 54, 57, 62, 65, 132, 606, 669, 723, 737, 746, 782, 785, 813, 815, 830, 847, 956, 1055, 1106, 1180, 1182, 1193, 1197, 1254, 1357, 1358, 1361, 1377, 1378, 1379, 1386, 1414, 1424, 1458, 1460, 1461, 1465, 1523, 1594, 1602, 1613, 1627, 1635, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1785, 1815, 1852, 1854, 1856, 1861, 1863, 1867, 1869, 1874, 1875, 1878, 1879, 1880, 1882, 1886, 1890, 1897, 1900, 1905, 1906, 1907, 1909, 1911, 1916, 1920], "serv": [1, 8, 9, 12, 14, 27, 35, 1851, 1862, 1894, 1896, 1905, 1906], "region": [1, 4, 6, 14, 41, 49, 757, 758, 1327, 1328, 1329, 1362, 1363, 1373, 1375, 1407, 1408, 1409, 1481, 1482, 1508, 1509, 1538, 1539, 1852, 1867, 1874, 1878], "your": [1, 2, 3, 5, 8, 9, 10, 12, 14, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 35, 39, 40, 41, 44, 45, 49, 51, 52, 53, 54, 55, 57, 61, 62, 64, 65, 882, 888, 890, 891, 896, 942, 1157, 1182, 1186, 1187, 1191, 1194, 1197, 1198, 1199, 1414, 1421, 1594, 1603, 1606, 1639, 1744, 1832, 1852, 1854, 1855, 1859, 1861, 1867, 1868, 1869, 1871, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1889, 1890, 1892, 1893, 1896, 1898, 1901, 1904, 1906, 1909, 1914, 1915, 1917, 1920], "script": [1, 5, 12, 16, 20, 23, 29, 32, 35, 38, 43, 45, 51, 53, 54, 1183, 1185, 1186, 1187, 1188, 1191, 1192, 1194, 1196, 1197, 1199, 1849, 1850, 1854, 1855, 1863, 1877, 1885, 1887, 1891, 1897, 1900, 1905], "In": [1, 3, 4, 5, 8, 10, 12, 13, 14, 17, 20, 22, 23, 27, 29, 32, 35, 37, 39, 41, 45, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 114, 116, 118, 120, 123, 124, 126, 134, 136, 139, 140, 142, 145, 147, 151, 153, 155, 157, 159, 161, 170, 179, 187, 191, 194, 196, 206, 208, 214, 224, 228, 230, 236, 239, 241, 243, 245, 249, 254, 261, 263, 265, 269, 271, 275, 277, 284, 286, 288, 296, 298, 300, 302, 348, 350, 352, 354, 356, 358, 360, 363, 365, 367, 368, 375, 377, 379, 381, 383, 387, 411, 414, 417, 419, 430, 432, 434, 442, 447, 457, 460, 476, 480, 482, 498, 501, 512, 516, 518, 521, 523, 525, 538, 540, 542, 551, 553, 560, 564, 566, 582, 585, 587, 589, 591, 601, 611, 669, 749, 789, 813, 843, 888, 926, 947, 948, 955, 1001, 1012, 1024, 1025, 1029, 1030, 1055, 1076, 1078, 1086, 1087, 1088, 1103, 1113, 1117, 1120, 1122, 1180, 1182, 1191, 1194, 1195, 1197, 1213, 1222, 1227, 1228, 1229, 1237, 1240, 1245, 1250, 1254, 1259, 1262, 1271, 1276, 1282, 1283, 1309, 1327, 1328, 1329, 1331, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1353, 1354, 1355, 1359, 1361, 1366, 1375, 1384, 1399, 1407, 1408, 1409, 1414, 1420, 1457, 1459, 1461, 1465, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1503, 1513, 1520, 1529, 1557, 1560, 1562, 1563, 1577, 1594, 1601, 1606, 1607, 1639, 1670, 1681, 1683, 1719, 1735, 1737, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1800, 1801, 1823, 1835, 1839, 1840, 1849, 1850, 1851, 1852, 1854, 1855, 1861, 1862, 1867, 1868, 1869, 1870, 1873, 1874, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1896, 1897, 1899, 1900, 1901, 1902, 1905, 1906, 1907, 1909, 1914, 1916], "chosen": [1, 14, 23, 62, 1043, 1203, 1563, 1748, 1773, 1818, 1870, 1874, 1878, 1880, 1893, 1900], "maintain": [1, 8, 9, 17, 18, 32, 33, 35, 41, 57, 61, 65, 1326, 1354, 1359, 1506, 1594, 1627, 1641, 1850, 1870, 1874, 1875, 1878, 1880, 1886, 1900], "accuraci": [1, 14, 15, 33, 942, 1245, 1563, 1850, 1865, 1874, 1886, 1914, 1918], "detail": [1, 2, 3, 4, 8, 9, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 32, 35, 36, 37, 41, 43, 53, 57, 63, 65, 143, 315, 485, 603, 724, 727, 728, 729, 730, 731, 732, 749, 755, 756, 757, 760, 761, 762, 763, 768, 769, 771, 772, 773, 774, 782, 848, 849, 850, 851, 862, 879, 881, 882, 883, 884, 885, 888, 897, 925, 952, 957, 961, 963, 964, 966, 980, 981, 990, 1001, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1019, 1020, 1021, 1038, 1055, 1094, 1116, 1127, 1130, 1131, 1135, 1163, 1170, 1182, 1186, 1197, 1221, 1239, 1246, 1254, 1260, 1262, 1282, 1322, 1326, 1336, 1345, 1346, 1347, 1351, 1357, 1358, 1359, 1360, 1362, 1363, 1366, 1384, 1414, 1420, 1426, 1427, 1429, 1441, 1462, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1514, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1561, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1579, 1580, 1581, 1585, 1594, 1595, 1630, 1640, 1651, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1675, 1687, 1699, 1731, 1742, 1768, 1776, 1821, 1835, 1849, 1852, 1853, 1854, 1855, 1862, 1864, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1889, 1890, 1891, 1893, 1897, 1898, 1900, 1902, 1904, 1905, 1906, 1907, 1909, 1913, 1914, 1916, 1917, 1920], "enter": [1, 35, 883, 1157], "should": [1, 2, 4, 5, 6, 10, 12, 14, 16, 17, 19, 22, 23, 26, 27, 29, 32, 33, 35, 36, 37, 39, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 57, 61, 62, 64, 65, 112, 143, 147, 305, 313, 390, 394, 436, 437, 438, 439, 440, 478, 486, 503, 505, 507, 572, 573, 574, 576, 577, 675, 678, 679, 724, 749, 761, 762, 763, 782, 785, 789, 806, 813, 827, 828, 843, 844, 845, 848, 854, 878, 879, 880, 881, 882, 886, 887, 888, 889, 890, 891, 892, 896, 902, 903, 910, 911, 912, 913, 920, 933, 954, 958, 971, 972, 990, 992, 1001, 1046, 1056, 1057, 1058, 1068, 1073, 1076, 1077, 1078, 1086, 1087, 1088, 1091, 1106, 1108, 1109, 1110, 1112, 1113, 1117, 1121, 1122, 1123, 1139, 1140, 1143, 1144, 1179, 1180, 1182, 1183, 1187, 1191, 1193, 1194, 1197, 1198, 1199, 1201, 1226, 1251, 1252, 1253, 1259, 1268, 1271, 1272, 1273, 1322, 1330, 1331, 1335, 1348, 1350, 1351, 1353, 1354, 1355, 1358, 1359, 1380, 1406, 1414, 1420, 1421, 1422, 1441, 1462, 1466, 1478, 1484, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1505, 1513, 1563, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1622, 1623, 1627, 1628, 1629, 1632, 1634, 1645, 1646, 1649, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1699, 1701, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1722, 1738, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1782, 1783, 1784, 1785, 1786, 1787, 1800, 1814, 1823, 1842, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1859, 1861, 1862, 1864, 1865, 1867, 1869, 1870, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1886, 1888, 1889, 1890, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1907, 1909, 1913, 1914, 1916, 1917, 1920], "model": [1, 2, 3, 4, 5, 6, 9, 10, 12, 14, 15, 16, 17, 18, 19, 23, 33, 35, 36, 37, 39, 40, 41, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 65, 80, 781, 782, 783, 786, 787, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 813, 814, 815, 825, 826, 827, 828, 843, 846, 847, 848, 849, 850, 851, 852, 942, 1002, 1022, 1111, 1112, 1113, 1121, 1123, 1157, 1182, 1186, 1187, 1191, 1193, 1197, 1199, 1253, 1322, 1351, 1368, 1379, 1380, 1414, 1420, 1442, 1453, 1457, 1459, 1460, 1461, 1512, 1594, 1595, 1600, 1602, 1604, 1617, 1636, 1637, 1648, 1649, 1651, 1652, 1659, 1664, 1669, 1670, 1675, 1681, 1683, 1796, 1842, 1850, 1852, 1854, 1855, 1856, 1863, 1864, 1870, 1875, 1877, 1878, 1879, 1880, 1884, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1899, 1901, 1905, 1906, 1908, 1909, 1910, 1914, 1918, 1919], "": [1, 2, 3, 4, 5, 8, 9, 10, 12, 14, 16, 17, 18, 19, 22, 23, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 57, 59, 61, 62, 64, 65, 454, 472, 483, 486, 503, 533, 547, 570, 613, 669, 678, 683, 684, 685, 724, 749, 782, 783, 784, 804, 805, 806, 809, 812, 815, 843, 850, 851, 864, 866, 867, 868, 869, 885, 886, 887, 891, 892, 894, 898, 926, 928, 941, 947, 948, 949, 954, 956, 958, 962, 977, 981, 990, 992, 997, 998, 1001, 1002, 1003, 1022, 1023, 1024, 1030, 1047, 1050, 1052, 1053, 1055, 1069, 1070, 1072, 1073, 1074, 1077, 1078, 1080, 1081, 1084, 1085, 1087, 1088, 1089, 1090, 1092, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1123, 1127, 1135, 1143, 1144, 1145, 1169, 1171, 1179, 1180, 1182, 1186, 1192, 1193, 1197, 1212, 1213, 1223, 1224, 1225, 1227, 1230, 1234, 1236, 1238, 1239, 1243, 1244, 1245, 1246, 1251, 1253, 1254, 1269, 1276, 1281, 1283, 1286, 1288, 1289, 1295, 1296, 1299, 1308, 1309, 1312, 1314, 1320, 1321, 1322, 1330, 1331, 1332, 1333, 1334, 1337, 1351, 1357, 1368, 1414, 1415, 1420, 1424, 1430, 1442, 1445, 1447, 1453, 1457, 1459, 1461, 1467, 1468, 1485, 1486, 1497, 1510, 1513, 1524, 1525, 1530, 1563, 1569, 1582, 1585, 1590, 1591, 1594, 1595, 1606, 1617, 1630, 1634, 1641, 1642, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1687, 1689, 1693, 1700, 1715, 1718, 1719, 1722, 1723, 1724, 1726, 1728, 1735, 1742, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1794, 1795, 1796, 1799, 1800, 1801, 1802, 1803, 1811, 1815, 1817, 1823, 1837, 1838, 1839, 1842, 1843, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1859, 1861, 1862, 1864, 1865, 1867, 1868, 1869, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1891, 1892, 1893, 1895, 1896, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920], "e": [1, 2, 3, 4, 6, 8, 17, 23, 24, 26, 27, 32, 33, 35, 36, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 55, 57, 60, 62, 64, 65, 81, 143, 250, 327, 369, 569, 606, 724, 737, 746, 749, 782, 783, 804, 806, 843, 847, 848, 850, 851, 869, 878, 882, 887, 897, 898, 921, 923, 926, 987, 1001, 1026, 1055, 1065, 1106, 1112, 1117, 1121, 1132, 1157, 1161, 1162, 1164, 1167, 1179, 1182, 1188, 1189, 1197, 1217, 1218, 1233, 1245, 1253, 1254, 1255, 1257, 1259, 1276, 1287, 1330, 1331, 1332, 1333, 1334, 1337, 1342, 1343, 1344, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1366, 1369, 1374, 1377, 1378, 1379, 1380, 1381, 1384, 1386, 1387, 1388, 1389, 1405, 1414, 1415, 1420, 1421, 1423, 1424, 1428, 1429, 1445, 1453, 1457, 1461, 1462, 1463, 1465, 1488, 1489, 1490, 1497, 1499, 1500, 1501, 1504, 1505, 1506, 1513, 1524, 1556, 1563, 1582, 1584, 1585, 1590, 1594, 1595, 1596, 1597, 1602, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1627, 1628, 1634, 1638, 1641, 1648, 1649, 1656, 1657, 1692, 1703, 1721, 1728, 1735, 1739, 1746, 1751, 1796, 1800, 1849, 1852, 1854, 1855, 1856, 1859, 1862, 1863, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1884, 1885, 1886, 1889, 1891, 1893, 1896, 1897, 1899, 1900, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1916, 1920, 1921], "network": [1, 2, 8, 9, 27, 39, 41, 52, 830, 1001, 1182, 1197, 1198, 1326, 1332, 1333, 1334, 1337, 1345, 1346, 1347, 1351, 1352, 1353, 1354, 1355, 1356, 1359, 1368, 1380, 1384, 1414, 1421, 1426, 1427, 1432, 1441, 1443, 1453, 1457, 1459, 1461, 1478, 1512, 1513, 1566, 1585, 1602, 1604, 1630, 1635, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1675, 1681, 1852, 1854, 1855, 1873, 1874, 1889, 1890, 1893, 1896, 1900, 1905, 1906, 1907], "loss": [1, 2, 33, 35, 36, 39, 41, 57, 1113, 1179, 1217, 1218, 1227, 1245, 1322, 1330, 1331, 1337, 1348, 1350, 1357, 1368, 1374, 1375, 1380, 1381, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1463, 1485, 1486, 1496, 1497, 1510, 1525, 1548, 1556, 1594, 1628, 1659, 1664, 1670, 1674, 1683, 1743, 1849, 1850, 1865, 1869, 1875, 1878, 1879, 1882, 1883, 1886, 1896, 1900, 1901, 1905, 1906, 1914], "comput": [1, 4, 6, 8, 9, 14, 16, 22, 24, 26, 28, 32, 33, 35, 37, 41, 43, 45, 57, 58, 59, 61, 143, 282, 478, 485, 670, 672, 686, 687, 749, 757, 758, 789, 791, 808, 809, 810, 811, 813, 814, 878, 882, 883, 884, 886, 887, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 909, 914, 915, 916, 917, 918, 919, 930, 932, 933, 934, 941, 948, 950, 955, 998, 1001, 1038, 1047, 1049, 1052, 1055, 1059, 1060, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1098, 1100, 1101, 1102, 1104, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1125, 1126, 1127, 1135, 1138, 1141, 1142, 1143, 1144, 1157, 1159, 1182, 1185, 1193, 1201, 1202, 1204, 1206, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1254, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1280, 1281, 1282, 1285, 1309, 1311, 1315, 1322, 1326, 1327, 1328, 1329, 1332, 1333, 1334, 1345, 1346, 1347, 1349, 1350, 1352, 1357, 1358, 1366, 1369, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1420, 1421, 1423, 1428, 1429, 1447, 1449, 1453, 1462, 1463, 1466, 1480, 1481, 1482, 1495, 1496, 1504, 1505, 1512, 1513, 1515, 1524, 1532, 1537, 1538, 1539, 1540, 1541, 1542, 1553, 1556, 1563, 1569, 1570, 1585, 1588, 1590, 1591, 1594, 1595, 1598, 1601, 1604, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1620, 1621, 1628, 1634, 1638, 1639, 1641, 1654, 1656, 1657, 1658, 1660, 1666, 1667, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1687, 1693, 1699, 1700, 1704, 1705, 1719, 1720, 1743, 1745, 1751, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1774, 1776, 1777, 1778, 1779, 1796, 1800, 1801, 1816, 1821, 1839, 1842, 1850, 1852, 1855, 1862, 1865, 1868, 1869, 1871, 1874, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1886, 1887, 1893, 1896, 1900, 1903, 1905, 1909, 1910, 1915, 1918], "backward": [1, 2, 6, 10, 12, 14, 19, 22, 23, 35, 36, 37, 39, 41, 57, 61, 62, 65, 282, 327, 478, 486, 493, 494, 503, 505, 507, 570, 669, 675, 678, 749, 804, 805, 806, 879, 884, 885, 886, 887, 888, 889, 891, 893, 896, 897, 902, 903, 909, 910, 922, 1001, 1059, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1111, 1112, 1182, 1254, 1262, 1276, 1286, 1330, 1331, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1351, 1357, 1366, 1367, 1368, 1381, 1384, 1385, 1401, 1405, 1406, 1414, 1420, 1421, 1428, 1429, 1458, 1459, 1460, 1461, 1462, 1463, 1485, 1486, 1496, 1497, 1513, 1524, 1548, 1551, 1586, 1590, 1591, 1594, 1606, 1639, 1648, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1687, 1699, 1774, 1777, 1781, 1800, 1835, 1849, 1850, 1853, 1855, 1861, 1869, 1870, 1873, 1874, 1879, 1880, 1881, 1882, 1885, 1886, 1888, 1889, 1896, 1897, 1899, 1900, 1905, 1909, 1910, 1915], "under": [1, 2, 4, 5, 6, 10, 14, 17, 23, 32, 35, 52, 57, 58, 60, 62, 64, 77, 897, 905, 927, 1157, 1182, 1337, 1414, 1478, 1504, 1505, 1601, 1603, 1606, 1651, 1720, 1851, 1867, 1874, 1875, 1878, 1879, 1881, 1883, 1888, 1893, 1897, 1898, 1900, 1903, 1904, 1907, 1910, 1914, 1917, 1919], "recommend": [1, 2, 6, 14, 32, 33, 35, 37, 41, 43, 52, 53, 57, 61, 64, 65, 81, 439, 882, 947, 948, 955, 1076, 1077, 1078, 1086, 1087, 1088, 1169, 1185, 1227, 1254, 1299, 1322, 1351, 1525, 1594, 1706, 1832, 1849, 1852, 1864, 1867, 1869, 1873, 1874, 1875, 1877, 1878, 1880, 1881, 1886, 1888, 1889, 1891, 1893, 1897, 1900], "correspond": [1, 2, 8, 20, 23, 29, 32, 33, 35, 39, 40, 41, 52, 57, 65, 464, 465, 503, 505, 507, 533, 534, 669, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 724, 782, 786, 825, 827, 846, 847, 848, 853, 869, 878, 880, 881, 882, 887, 890, 892, 897, 934, 949, 1001, 1021, 1050, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1135, 1144, 1171, 1182, 1198, 1212, 1217, 1218, 1223, 1226, 1245, 1252, 1254, 1268, 1283, 1304, 1351, 1357, 1384, 1414, 1420, 1460, 1504, 1513, 1550, 1590, 1594, 1602, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1635, 1641, 1675, 1692, 1693, 1703, 1726, 1735, 1751, 1794, 1795, 1800, 1831, 1834, 1837, 1838, 1849, 1852, 1853, 1855, 1859, 1865, 1868, 1869, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1890, 1893, 1897, 1899, 1900, 1905, 1906, 1909, 1910, 1911, 1914, 1916, 1918, 1919], "devic": [1, 2, 3, 6, 9, 13, 16, 20, 23, 26, 29, 32, 33, 35, 36, 37, 40, 53, 54, 57, 61, 64, 65, 81, 189, 199, 202, 281, 305, 313, 327, 436, 437, 438, 439, 440, 505, 507, 569, 675, 678, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 741, 742, 743, 744, 854, 866, 868, 869, 890, 892, 910, 911, 913, 920, 922, 957, 958, 959, 961, 962, 963, 964, 965, 967, 968, 969, 970, 971, 972, 974, 975, 976, 979, 983, 984, 985, 987, 988, 996, 998, 999, 1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1032, 1033, 1056, 1057, 1058, 1068, 1073, 1091, 1109, 1110, 1139, 1140, 1182, 1186, 1189, 1192, 1195, 1201, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1228, 1229, 1230, 1236, 1239, 1240, 1242, 1243, 1245, 1246, 1252, 1253, 1268, 1271, 1276, 1282, 1286, 1299, 1301, 1322, 1332, 1333, 1334, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1357, 1358, 1367, 1369, 1377, 1378, 1379, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1414, 1420, 1422, 1430, 1431, 1453, 1457, 1459, 1461, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1505, 1524, 1530, 1563, 1578, 1582, 1583, 1584, 1585, 1594, 1596, 1597, 1598, 1599, 1627, 1634, 1640, 1642, 1645, 1646, 1659, 1699, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1739, 1743, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1777, 1778, 1782, 1783, 1784, 1785, 1786, 1787, 1800, 1814, 1816, 1825, 1827, 1835, 1847, 1848, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1863, 1868, 1870, 1874, 1879, 1881, 1882, 1884, 1886, 1887, 1890, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1905, 1909, 1911, 1915, 1916], "creat": [1, 2, 4, 6, 7, 8, 10, 12, 14, 17, 21, 22, 23, 26, 32, 33, 35, 37, 39, 41, 43, 44, 50, 52, 53, 54, 55, 57, 64, 65, 81, 143, 215, 246, 327, 569, 570, 572, 573, 574, 576, 577, 721, 727, 728, 729, 734, 735, 745, 753, 781, 782, 783, 803, 804, 805, 806, 808, 813, 843, 867, 868, 869, 882, 884, 896, 921, 923, 939, 940, 949, 957, 966, 998, 999, 1008, 1043, 1058, 1107, 1108, 1109, 1179, 1182, 1185, 1194, 1200, 1205, 1211, 1212, 1218, 1220, 1239, 1252, 1268, 1283, 1304, 1330, 1348, 1357, 1358, 1361, 1375, 1381, 1405, 1406, 1414, 1417, 1418, 1419, 1442, 1445, 1446, 1453, 1462, 1463, 1465, 1594, 1606, 1627, 1634, 1639, 1650, 1651, 1738, 1769, 1780, 1785, 1814, 1821, 1850, 1855, 1856, 1859, 1863, 1867, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1886, 1887, 1888, 1891, 1893, 1896, 1897, 1899, 1900, 1905, 1906, 1907, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921], "net": [1, 7, 27, 43, 60, 65, 1182, 1197, 1198, 1351, 1414, 1594, 1617, 1674, 1854, 1855, 1874, 1875, 1878, 1886, 1914], "sgd": [1, 32, 33, 39, 1357, 1585, 1594, 1675, 1681, 1683, 1874, 1878, 1879, 1886, 1896, 1905, 1906], "target": [1, 12, 13, 17, 22, 23, 26, 39, 57, 61, 63, 64, 65, 489, 724, 755, 756, 781, 786, 848, 850, 851, 927, 1113, 1182, 1191, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1330, 1331, 1337, 1348, 1350, 1362, 1363, 1368, 1374, 1375, 1380, 1381, 1405, 1406, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1428, 1445, 1446, 1457, 1466, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1485, 1486, 1494, 1496, 1497, 1508, 1509, 1510, 1521, 1522, 1525, 1526, 1536, 1544, 1545, 1546, 1547, 1548, 1556, 1563, 1567, 1568, 1594, 1669, 1835, 1853, 1855, 1874, 1875, 1878, 1888, 1893, 1896, 1897, 1900, 1901, 1905, 1914, 1918], "data": [1, 2, 3, 4, 8, 14, 16, 17, 24, 29, 30, 33, 35, 37, 39, 41, 42, 43, 46, 49, 52, 54, 57, 61, 65, 132, 143, 188, 189, 318, 321, 325, 328, 333, 436, 439, 472, 483, 487, 489, 606, 727, 728, 729, 749, 761, 762, 763, 770, 781, 782, 783, 787, 808, 809, 810, 811, 812, 814, 816, 854, 868, 869, 879, 882, 911, 920, 926, 959, 1036, 1037, 1056, 1057, 1058, 1068, 1069, 1070, 1073, 1075, 1076, 1078, 1086, 1087, 1088, 1091, 1094, 1095, 1096, 1097, 1106, 1108, 1109, 1110, 1112, 1121, 1139, 1140, 1142, 1161, 1164, 1189, 1193, 1197, 1201, 1252, 1253, 1254, 1268, 1273, 1281, 1283, 1295, 1296, 1309, 1311, 1312, 1335, 1337, 1342, 1343, 1344, 1351, 1366, 1369, 1377, 1378, 1379, 1384, 1386, 1401, 1421, 1429, 1430, 1466, 1478, 1483, 1484, 1488, 1489, 1490, 1523, 1530, 1532, 1569, 1570, 1594, 1595, 1596, 1597, 1627, 1628, 1629, 1630, 1632, 1641, 1645, 1646, 1650, 1651, 1675, 1681, 1689, 1697, 1700, 1701, 1702, 1706, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1722, 1735, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1800, 1814, 1823, 1825, 1827, 1834, 1835, 1847, 1848, 1850, 1852, 1853, 1856, 1862, 1863, 1865, 1867, 1870, 1874, 1875, 1876, 1878, 1880, 1881, 1885, 1888, 1890, 1891, 1892, 1895, 1896, 1897, 1898, 1900, 1903, 1905, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919], "zero_grad": [1, 2, 39, 1182, 1414, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1674, 1874, 1878, 1882, 1886, 1888, 1896], "loss_fn": [1, 39, 1669, 1874, 1878, 1879, 1888, 1896], "exit": [1, 2, 3, 5, 17, 29, 35, 43, 52, 57, 64, 65, 883, 1594, 1855, 1867, 1875, 1888, 1893, 1907], "step": [1, 2, 3, 5, 10, 14, 17, 23, 26, 32, 33, 35, 36, 37, 39, 41, 53, 57, 61, 65, 527, 596, 675, 757, 758, 846, 854, 883, 884, 885, 913, 937, 1141, 1229, 1252, 1254, 1268, 1271, 1283, 1362, 1363, 1384, 1481, 1482, 1508, 1509, 1594, 1627, 1648, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1706, 1715, 1769, 1851, 1852, 1853, 1869, 1874, 1875, 1878, 1879, 1880, 1882, 1886, 1888, 1890, 1892, 1893, 1897, 1899, 1900, 1905, 1906, 1909, 1914], "along": [1, 26, 29, 32, 35, 41, 45, 52, 305, 307, 309, 313, 483, 503, 505, 507, 675, 686, 808, 864, 865, 936, 953, 955, 970, 972, 1038, 1046, 1047, 1054, 1055, 1071, 1076, 1079, 1083, 1086, 1089, 1095, 1123, 1124, 1147, 1156, 1159, 1203, 1214, 1250, 1302, 1309, 1313, 1314, 1323, 1324, 1325, 1349, 1362, 1363, 1404, 1407, 1408, 1409, 1447, 1449, 1478, 1495, 1508, 1509, 1512, 1515, 1532, 1537, 1538, 1539, 1549, 1569, 1570, 1612, 1614, 1621, 1622, 1631, 1640, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1681, 1700, 1720, 1721, 1726, 1737, 1773, 1776, 1779, 1780, 1788, 1793, 1811, 1815, 1818, 1821, 1830, 1839, 1842, 1844, 1849, 1854, 1859, 1870, 1876, 1880, 1882, 1885, 1886, 1897, 1900, 1910], "complex": [1, 2, 4, 8, 9, 16, 33, 35, 65, 303, 321, 474, 674, 681, 897, 898, 935, 947, 948, 1050, 1076, 1098, 1103, 1135, 1152, 1161, 1172, 1174, 1175, 1178, 1179, 1182, 1202, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1231, 1234, 1236, 1238, 1239, 1240, 1241, 1245, 1246, 1250, 1251, 1252, 1254, 1262, 1268, 1280, 1285, 1303, 1342, 1343, 1344, 1381, 1414, 1488, 1489, 1490, 1601, 1641, 1693, 1706, 1719, 1740, 1751, 1796, 1797, 1800, 1835, 1839, 1840, 1841, 1849, 1850, 1853, 1855, 1856, 1864, 1888, 1895, 1911, 1912, 1915, 1916, 1917], "scenario": [1, 14, 32, 35, 52, 1649, 1650, 1878, 1883, 1893, 1899, 1905], "g": [1, 2, 3, 4, 6, 8, 12, 23, 24, 26, 27, 32, 33, 35, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 55, 57, 60, 62, 64, 65, 569, 606, 737, 746, 749, 782, 783, 804, 806, 843, 848, 850, 851, 878, 887, 897, 898, 923, 1001, 1055, 1106, 1112, 1116, 1117, 1132, 1135, 1157, 1179, 1182, 1188, 1189, 1197, 1253, 1337, 1338, 1351, 1353, 1354, 1355, 1359, 1361, 1366, 1374, 1380, 1384, 1385, 1414, 1415, 1424, 1429, 1445, 1497, 1499, 1500, 1501, 1506, 1513, 1594, 1595, 1596, 1597, 1638, 1641, 1648, 1649, 1654, 1655, 1656, 1657, 1660, 1666, 1667, 1668, 1669, 1721, 1728, 1739, 1746, 1764, 1796, 1849, 1852, 1854, 1855, 1856, 1859, 1862, 1867, 1874, 1875, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1889, 1890, 1893, 1896, 1897, 1899, 1900, 1905, 1909, 1912, 1913, 1914, 1920], "penalti": [1, 19, 770, 1012, 1653, 1654, 1655, 1656, 1658, 1660, 1666, 1667, 1669, 1901], "multipl": [1, 2, 3, 4, 6, 14, 15, 22, 32, 33, 35, 36, 37, 41, 42, 45, 52, 53, 54, 57, 62, 64, 65, 184, 201, 307, 503, 675, 677, 678, 684, 685, 749, 830, 863, 864, 867, 896, 930, 932, 942, 950, 954, 970, 971, 972, 998, 1053, 1055, 1058, 1108, 1116, 1117, 1118, 1119, 1122, 1123, 1127, 1131, 1145, 1146, 1195, 1198, 1203, 1204, 1219, 1220, 1221, 1237, 1242, 1247, 1248, 1276, 1279, 1284, 1286, 1330, 1331, 1345, 1346, 1347, 1348, 1350, 1358, 1361, 1366, 1374, 1380, 1381, 1402, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1465, 1485, 1486, 1496, 1505, 1525, 1548, 1556, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1668, 1676, 1677, 1678, 1679, 1680, 1685, 1687, 1743, 1771, 1777, 1778, 1782, 1783, 1784, 1786, 1787, 1815, 1816, 1823, 1831, 1835, 1842, 1843, 1849, 1850, 1854, 1855, 1867, 1868, 1869, 1870, 1875, 1877, 1879, 1881, 1883, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1899, 1900, 1901, 1905, 1906, 1907, 1909, 1919], "autocastmodel": 1, "produc": [1, 8, 12, 14, 16, 17, 19, 23, 26, 32, 35, 37, 42, 44, 46, 49, 54, 62, 63, 64, 65, 81, 721, 727, 728, 729, 734, 735, 745, 753, 781, 782, 913, 933, 994, 1086, 1087, 1088, 1106, 1116, 1117, 1123, 1135, 1193, 1197, 1198, 1201, 1217, 1218, 1221, 1228, 1229, 1240, 1245, 1279, 1282, 1283, 1284, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1390, 1391, 1392, 1393, 1394, 1395, 1420, 1497, 1505, 1513, 1524, 1582, 1583, 1584, 1641, 1699, 1706, 1715, 1800, 1835, 1842, 1852, 1854, 1855, 1867, 1868, 1874, 1875, 1876, 1878, 1880, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1909, 1913], "after": [1, 2, 8, 10, 13, 14, 15, 17, 19, 22, 23, 26, 32, 33, 35, 36, 37, 39, 40, 52, 54, 57, 64, 65, 252, 749, 779, 846, 848, 850, 851, 882, 883, 886, 942, 956, 958, 994, 1001, 1054, 1112, 1167, 1182, 1186, 1237, 1276, 1318, 1351, 1366, 1399, 1414, 1417, 1457, 1459, 1461, 1478, 1513, 1585, 1588, 1594, 1606, 1608, 1612, 1614, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1674, 1675, 1681, 1683, 1739, 1796, 1821, 1844, 1849, 1854, 1855, 1865, 1867, 1873, 1874, 1875, 1878, 1879, 1880, 1882, 1883, 1885, 1886, 1888, 1889, 1893, 1896, 1897, 1899, 1900, 1905, 1906, 1907, 1908, 1910, 1912, 1914], "them": [1, 2, 4, 6, 8, 9, 10, 14, 16, 17, 19, 20, 22, 23, 24, 26, 27, 32, 35, 37, 43, 44, 49, 52, 54, 57, 61, 62, 64, 65, 143, 214, 246, 723, 882, 888, 892, 924, 1001, 1040, 1043, 1055, 1203, 1212, 1223, 1237, 1249, 1253, 1281, 1312, 1338, 1357, 1414, 1447, 1449, 1569, 1613, 1628, 1631, 1671, 1779, 1781, 1799, 1849, 1854, 1855, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1884, 1885, 1886, 1890, 1892, 1896, 1898, 1899, 1900, 1901, 1905, 1906, 1907, 1909, 1910, 1914, 1915, 1918], "differ": [1, 2, 4, 6, 9, 14, 16, 17, 19, 20, 21, 23, 26, 29, 32, 35, 37, 39, 40, 41, 43, 44, 45, 49, 50, 52, 53, 55, 57, 58, 61, 62, 63, 65, 189, 477, 483, 606, 669, 675, 678, 684, 685, 724, 749, 782, 785, 786, 811, 813, 814, 850, 851, 854, 868, 869, 897, 898, 910, 922, 923, 954, 1038, 1043, 1045, 1047, 1055, 1095, 1096, 1097, 1101, 1102, 1108, 1111, 1116, 1117, 1123, 1135, 1156, 1182, 1192, 1197, 1211, 1217, 1218, 1228, 1229, 1237, 1240, 1245, 1249, 1276, 1286, 1322, 1332, 1333, 1334, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1366, 1367, 1375, 1377, 1378, 1379, 1380, 1384, 1385, 1401, 1414, 1417, 1420, 1435, 1436, 1438, 1439, 1440, 1442, 1445, 1453, 1459, 1461, 1463, 1466, 1469, 1470, 1471, 1478, 1504, 1513, 1524, 1526, 1537, 1538, 1539, 1563, 1585, 1594, 1596, 1597, 1601, 1636, 1641, 1648, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1683, 1689, 1699, 1721, 1794, 1795, 1800, 1821, 1832, 1833, 1835, 1837, 1838, 1842, 1849, 1852, 1854, 1855, 1857, 1861, 1862, 1867, 1868, 1870, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1886, 1888, 1889, 1890, 1892, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1907, 1909, 1912, 1914, 1915, 1916, 1919], "caus": [1, 2, 3, 4, 6, 26, 29, 32, 35, 39, 45, 51, 52, 53, 62, 65, 545, 606, 866, 869, 882, 1108, 1193, 1197, 1217, 1218, 1245, 1299, 1524, 1525, 1582, 1585, 1594, 1640, 1652, 1739, 1750, 1796, 1835, 1852, 1855, 1867, 1876, 1878, 1880, 1882, 1888, 1890, 1892, 1893, 1897, 1900, 1901, 1907, 1909, 1912], "mismatch": [1, 35, 65, 869, 1183, 1651, 1652, 1854, 1874, 1879, 1880, 1882, 1893, 1916], "so": [1, 2, 3, 4, 8, 10, 14, 16, 17, 18, 19, 22, 23, 26, 28, 32, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 52, 53, 55, 57, 60, 61, 62, 64, 65, 327, 449, 486, 669, 848, 883, 888, 890, 891, 896, 939, 957, 980, 1043, 1045, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1106, 1108, 1111, 1115, 1116, 1118, 1119, 1169, 1179, 1182, 1185, 1186, 1191, 1193, 1195, 1237, 1239, 1249, 1254, 1259, 1271, 1292, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1358, 1361, 1368, 1414, 1430, 1447, 1449, 1465, 1478, 1488, 1489, 1490, 1513, 1569, 1570, 1585, 1594, 1640, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1765, 1779, 1791, 1796, 1800, 1820, 1832, 1836, 1852, 1854, 1855, 1861, 1863, 1865, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1900, 1904, 1905, 1909, 1910, 1912, 1914, 1915, 1917], "cast": [1, 7, 33, 50, 57, 327, 592, 593, 927, 1036, 1037, 1182, 1234, 1238, 1251, 1281, 1309, 1312, 1414, 1532, 1569, 1570, 1641, 1697, 1776, 1779, 1785, 1799, 1804, 1805, 1852, 1874, 1889, 1893, 1910, 1911, 1912], "back": [1, 2, 3, 16, 17, 26, 32, 33, 35, 37, 41, 52, 57, 62, 65, 724, 826, 897, 939, 1075, 1112, 1183, 1195, 1247, 1253, 1460, 1598, 1599, 1781, 1849, 1852, 1855, 1875, 1880, 1881, 1888, 1889, 1890, 1893, 1896, 1897, 1900, 1905, 1909, 1920], "alreadi": [1, 2, 24, 32, 33, 35, 36, 52, 53, 57, 64, 65, 188, 199, 202, 454, 477, 513, 569, 592, 593, 781, 829, 843, 847, 868, 966, 992, 1182, 1191, 1253, 1414, 1589, 1594, 1627, 1830, 1832, 1849, 1852, 1862, 1864, 1868, 1869, 1874, 1875, 1878, 1880, 1883, 1888, 1893, 1896, 1897, 1900, 1906, 1907, 1911, 1913], "incur": [1, 6, 33, 35, 57, 932, 1888, 1905], "overhead": [1, 2, 4, 5, 9, 14, 15, 16, 17, 33, 35, 57, 770, 942, 1012, 1193, 1594, 1877, 1878, 1879, 1884, 1885, 1898, 1899, 1906, 1909, 1915], "here": [1, 2, 8, 9, 10, 14, 16, 17, 18, 20, 23, 27, 29, 32, 33, 35, 36, 41, 51, 53, 59, 60, 61, 62, 64, 65, 569, 782, 783, 952, 964, 1055, 1072, 1074, 1075, 1080, 1081, 1082, 1084, 1085, 1090, 1092, 1111, 1121, 1180, 1193, 1332, 1333, 1334, 1345, 1346, 1347, 1377, 1378, 1379, 1422, 1453, 1513, 1515, 1603, 1667, 1681, 1768, 1849, 1852, 1854, 1855, 1857, 1868, 1869, 1870, 1874, 1875, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1893, 1896, 1897, 1898, 1900, 1903, 1909, 1913, 1914, 1916], "assum": [1, 13, 19, 24, 32, 35, 40, 41, 43, 45, 52, 53, 57, 60, 63, 65, 806, 1038, 1073, 1076, 1078, 1086, 1087, 1088, 1091, 1173, 1179, 1180, 1183, 1197, 1217, 1218, 1220, 1227, 1236, 1239, 1242, 1244, 1254, 1337, 1406, 1466, 1497, 1563, 1594, 1603, 1606, 1631, 1671, 1672, 1677, 1678, 1679, 1682, 1684, 1685, 1689, 1801, 1821, 1823, 1849, 1852, 1854, 1855, 1868, 1875, 1878, 1880, 1881, 1883, 1885, 1889, 1893, 1896, 1897, 1898, 1905, 1906, 1907, 1909], "a_float32": 1, "rand": [1, 2, 29, 41, 65, 327, 682, 688, 890, 891, 892, 893, 894, 895, 954, 998, 999, 1072, 1074, 1077, 1078, 1080, 1081, 1084, 1085, 1087, 1088, 1090, 1092, 1113, 1188, 1193, 1197, 1198, 1199, 1255, 1256, 1258, 1330, 1380, 1457, 1458, 1459, 1460, 1461, 1485, 1504, 1505, 1563, 1594, 1606, 1639, 1692, 1703, 1704, 1705, 1709, 1851, 1852, 1853, 1854, 1855, 1857, 1868, 1869, 1893, 1895, 1898, 1900, 1905, 1906, 1910, 1913, 1914, 1917], "8": [1, 2, 13, 17, 23, 26, 31, 32, 33, 35, 41, 43, 305, 307, 309, 313, 393, 394, 462, 503, 507, 549, 596, 606, 674, 675, 686, 687, 734, 735, 750, 752, 754, 762, 763, 809, 810, 811, 814, 893, 913, 921, 932, 935, 936, 940, 998, 999, 1034, 1038, 1053, 1058, 1071, 1087, 1088, 1094, 1095, 1098, 1105, 1135, 1144, 1145, 1205, 1234, 1237, 1238, 1239, 1247, 1249, 1252, 1253, 1313, 1314, 1319, 1320, 1321, 1323, 1324, 1325, 1338, 1349, 1384, 1410, 1411, 1417, 1419, 1421, 1428, 1429, 1432, 1435, 1436, 1437, 1438, 1439, 1440, 1453, 1457, 1458, 1459, 1460, 1461, 1465, 1489, 1492, 1495, 1551, 1556, 1561, 1562, 1563, 1641, 1642, 1648, 1656, 1657, 1658, 1660, 1666, 1667, 1670, 1675, 1683, 1688, 1692, 1696, 1716, 1726, 1727, 1728, 1735, 1748, 1755, 1758, 1763, 1769, 1773, 1780, 1782, 1783, 1788, 1796, 1800, 1810, 1815, 1816, 1817, 1819, 1821, 1830, 1835, 1836, 1843, 1852, 1856, 1862, 1878, 1880, 1891, 1893, 1895, 1897, 1898, 1899, 1900, 1903, 1905, 1909, 1910, 1912, 1913, 1915], "b_float32": 1, "c_float32": 1, "d_float32": 1, "mm": [1, 934, 935, 1186, 1237, 1276, 1424, 1425, 1699, 1800, 1835, 1851, 1853, 1854, 1868, 1874, 1877, 1880, 1889, 1895, 1909], "No": [1, 10, 55, 64, 889, 1594, 1639, 1854, 1878, 1893, 1903, 1913, 1916], "manual": [1, 20, 32, 35, 50, 52, 53, 55, 57, 65, 786, 827, 867, 896, 1144, 1186, 1330, 1331, 1350, 1418, 1419, 1421, 1442, 1461, 1485, 1486, 1496, 1548, 1606, 1627, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1852, 1855, 1867, 1874, 1878, 1880, 1881, 1882, 1883, 1886, 1892, 1893, 1900, 1901, 1914], "e_float16": 1, "handl": [1, 2, 6, 10, 14, 16, 17, 19, 24, 26, 32, 33, 35, 36, 37, 39, 43, 44, 45, 52, 53, 57, 64, 65, 478, 829, 879, 889, 902, 903, 949, 958, 973, 1000, 1013, 1055, 1101, 1102, 1123, 1182, 1212, 1351, 1414, 1463, 1513, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1719, 1765, 1801, 1842, 1849, 1865, 1867, 1869, 1878, 1880, 1881, 1882, 1883, 1888, 1893, 1897, 1900, 1905, 1907, 1916, 1917], "f_float16": 1, "g_float32": 1, "epoch": [1, 32, 45, 55, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1865, 1874, 1896, 1914], "eval": [1, 65, 803, 849, 850, 1121, 1182, 1186, 1191, 1197, 1332, 1333, 1334, 1377, 1378, 1379, 1387, 1388, 1389, 1396, 1397, 1398, 1414, 1420, 1453, 1461, 1602, 1855, 1863, 1886, 1893, 1900, 1919, 1920], "testmodel": 1, "__init__": [1, 2, 12, 22, 23, 32, 33, 35, 41, 57, 65, 850, 851, 1121, 1180, 1183, 1185, 1188, 1193, 1197, 1198, 1199, 1414, 1415, 1416, 1424, 1425, 1585, 1852, 1854, 1855, 1865, 1875, 1880, 1882, 1886, 1891, 1893, 1897, 1900, 1914], "input_s": [1, 723, 749, 750, 754, 1366, 1367, 1384, 1385, 1429, 1430, 1431, 1853], "num_class": [1, 16, 1550, 1853], "super": [1, 10, 12, 22, 23, 32, 33, 35, 37, 65, 850, 851, 1121, 1180, 1185, 1188, 1193, 1197, 1198, 1199, 1414, 1415, 1416, 1424, 1425, 1426, 1427, 1585, 1681, 1852, 1854, 1855, 1856, 1875, 1880, 1886, 1891, 1893, 1897, 1900], "fc1": [1, 33, 1585, 1898], "suggest": [1, 10, 23, 33, 58, 1348, 1849, 1857, 1874, 1875, 1882, 1909], "issu": [1, 3, 4, 6, 10, 11, 14, 15, 18, 24, 26, 31, 32, 35, 42, 57, 58, 60, 62, 65, 890, 896, 942, 1106, 1117, 1119, 1123, 1227, 1271, 1283, 1380, 1384, 1410, 1411, 1412, 1429, 1466, 1524, 1525, 1739, 1842, 1849, 1850, 1855, 1857, 1862, 1867, 1868, 1869, 1870, 1874, 1875, 1878, 1880, 1888, 1889, 1890, 1892, 1893, 1897, 1900, 1901, 1905, 1909, 1910, 1912], "http": [1, 3, 4, 5, 8, 10, 15, 16, 22, 26, 27, 33, 34, 35, 40, 41, 52, 53, 57, 143, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 781, 782, 882, 942, 1055, 1112, 1254, 1283, 1337, 1384, 1410, 1411, 1412, 1432, 1433, 1457, 1460, 1463, 1638, 1689, 1706, 1739, 1764, 1835, 1849, 1856, 1864, 1875, 1876, 1883, 1884, 1886, 1890, 1892, 1893, 1897, 1899, 1912, 1914, 1921], "github": [1, 8, 10, 14, 22, 23, 26, 34, 35, 48, 57, 58, 62, 143, 781, 782, 882, 896, 1112, 1283, 1410, 1411, 1412, 1457, 1675, 1739, 1849, 1857, 1862, 1880, 1883, 1890, 1893, 1899, 1900, 1909, 1910, 1912], "com": [1, 8, 22, 26, 34, 35, 51, 53, 57, 143, 781, 782, 882, 1112, 1283, 1410, 1411, 1412, 1457, 1739, 1835, 1849, 1864, 1883, 1884, 1890, 1892, 1893, 1899, 1912], "75956": 1, "_c": [1, 32, 33, 35, 64, 890, 896, 1181, 1193, 1650, 1853, 1855, 1865, 1878, 1885, 1889, 1892, 1893], "_jit_set_autocast_mod": 1, "randn": [1, 2, 12, 14, 16, 17, 18, 23, 24, 35, 41, 59, 61, 62, 63, 65, 281, 303, 474, 533, 569, 573, 574, 575, 576, 577, 578, 606, 672, 673, 674, 675, 676, 677, 678, 679, 684, 685, 688, 709, 717, 718, 723, 727, 728, 729, 730, 731, 732, 745, 747, 749, 750, 751, 752, 753, 754, 761, 762, 763, 850, 851, 863, 864, 865, 867, 870, 871, 872, 873, 874, 910, 922, 929, 931, 932, 933, 934, 935, 937, 949, 950, 951, 952, 953, 955, 1034, 1035, 1036, 1037, 1042, 1043, 1044, 1045, 1049, 1055, 1069, 1070, 1099, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1152, 1156, 1159, 1193, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1235, 1236, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1257, 1261, 1262, 1269, 1271, 1272, 1273, 1275, 1276, 1279, 1281, 1282, 1284, 1286, 1287, 1288, 1289, 1302, 1303, 1306, 1316, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1412, 1413, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1440, 1441, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1462, 1464, 1465, 1469, 1470, 1471, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1508, 1509, 1515, 1548, 1554, 1555, 1644, 1648, 1690, 1695, 1696, 1697, 1699, 1700, 1713, 1717, 1718, 1730, 1766, 1768, 1773, 1778, 1781, 1789, 1790, 1799, 1800, 1809, 1812, 1813, 1816, 1820, 1823, 1824, 1826, 1829, 1831, 1835, 1840, 1841, 1842, 1845, 1851, 1853, 1854, 1855, 1857, 1868, 1869, 1870, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1884, 1886, 1890, 1891, 1893, 1895, 1897, 1900, 1905, 1909, 1910, 1912, 1914, 1917, 1919], "freez": [1, 1182, 1191, 1357, 1358, 1414, 1875], "_": [1, 2, 4, 12, 17, 23, 32, 33, 35, 36, 39, 45, 63, 65, 670, 672, 673, 687, 854, 870, 871, 872, 873, 874, 883, 889, 912, 931, 948, 949, 951, 952, 954, 1099, 1104, 1118, 1122, 1148, 1202, 1210, 1261, 1269, 1332, 1333, 1334, 1377, 1378, 1379, 1453, 1594, 1602, 1635, 1667, 1669, 1689, 1712, 1715, 1718, 1730, 1745, 1751, 1753, 1759, 1766, 1768, 1789, 1800, 1812, 1813, 1875, 1878, 1881, 1882, 1886, 1892, 1896, 1897, 1899, 1910], "bug": [1, 14, 23, 26, 29, 35, 65, 1115, 1116, 1118, 1271, 1874, 1888, 1909], "what": [1, 2, 4, 6, 8, 9, 10, 12, 14, 17, 18, 23, 35, 40, 41, 45, 49, 50, 57, 59, 61, 62, 65, 881, 1116, 1197, 1198, 1271, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1408, 1409, 1442, 1465, 1537, 1538, 1539, 1563, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1700, 1849, 1850, 1852, 1854, 1855, 1868, 1880, 1881, 1883, 1886, 1893, 1896, 1899, 1900, 1905, 1906, 1909], "observ": [1, 14, 23, 33, 43, 52, 745, 778, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 797, 798, 800, 802, 804, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 848, 850, 851, 853, 950, 954, 1195, 1283, 1330, 1331, 1332, 1333, 1334, 1348, 1350, 1374, 1377, 1378, 1379, 1380, 1381, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1453, 1462, 1485, 1486, 1496, 1525, 1548, 1556, 1874, 1875, 1878, 1879, 1885, 1901, 1919], "pleas": [1, 2, 5, 6, 7, 8, 9, 10, 12, 18, 20, 23, 24, 27, 33, 35, 41, 44, 47, 48, 52, 53, 57, 58, 59, 60, 61, 62, 63, 65, 246, 247, 488, 503, 607, 678, 719, 720, 721, 722, 723, 724, 730, 731, 732, 734, 735, 745, 750, 751, 752, 753, 754, 850, 851, 881, 883, 884, 885, 890, 892, 893, 896, 924, 1038, 1111, 1115, 1116, 1117, 1118, 1119, 1123, 1182, 1245, 1276, 1286, 1337, 1345, 1380, 1414, 1513, 1525, 1530, 1551, 1563, 1581, 1594, 1635, 1636, 1677, 1739, 1842, 1857, 1862, 1868, 1869, 1870, 1871, 1874, 1875, 1880, 1881, 1884, 1889, 1890, 1892, 1893, 1896, 1897, 1900, 1903, 1905, 1906, 1909, 1910, 1912, 1913, 1914, 1916], "file": [1, 2, 4, 7, 8, 10, 12, 14, 20, 24, 26, 29, 32, 37, 43, 45, 50, 52, 54, 60, 62, 65, 890, 896, 904, 905, 957, 994, 1115, 1116, 1118, 1119, 1157, 1189, 1192, 1253, 1651, 1731, 1775, 1849, 1852, 1855, 1856, 1857, 1864, 1868, 1869, 1870, 1875, 1878, 1880, 1885, 1890, 1891, 1892, 1893, 1899, 1903, 1906, 1909, 1911, 1914], "subregion": 1, "nest": [1, 2, 6, 26, 37, 57, 65, 578, 782, 804, 806, 883, 892, 1016, 1017, 1113, 1123, 1182, 1185, 1197, 1414, 1420, 1460, 1648, 1652, 1842, 1850, 1881, 1893, 1899, 1905], "local": [1, 13, 14, 17, 23, 35, 37, 39, 40, 43, 50, 52, 53, 54, 55, 57, 65, 909, 998, 1059, 1112, 1157, 1182, 1254, 1353, 1354, 1355, 1359, 1361, 1402, 1414, 1465, 1507, 1531, 1581, 1594, 1595, 1639, 1745, 1775, 1849, 1850, 1854, 1867, 1874, 1878, 1879, 1882, 1893, 1897, 1898, 1902, 1905, 1906, 1907, 1914], "particular": [1, 4, 8, 14, 23, 32, 37, 43, 49, 52, 53, 57, 65, 549, 669, 850, 851, 1029, 1123, 1182, 1276, 1351, 1414, 1648, 1842, 1852, 1854, 1862, 1870, 1878, 1880, 1882, 1885, 1886, 1889, 1893, 1896, 1909, 1911, 1917, 1920], "explicit": [1, 9, 35, 57, 61, 65, 990, 1135, 1169, 1525, 1739, 1816, 1849, 1850, 1851, 1855, 1856, 1868, 1874, 1878, 1880, 1897, 1912, 1913], "control": [1, 2, 3, 12, 16, 17, 26, 32, 33, 35, 36, 37, 41, 43, 48, 51, 52, 744, 788, 847, 850, 865, 869, 883, 911, 920, 1042, 1043, 1044, 1045, 1046, 1139, 1140, 1193, 1194, 1195, 1197, 1212, 1218, 1220, 1223, 1225, 1228, 1230, 1234, 1240, 1243, 1245, 1251, 1271, 1322, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1400, 1408, 1409, 1465, 1563, 1594, 1687, 1743, 1744, 1758, 1773, 1775, 1780, 1796, 1800, 1818, 1824, 1825, 1826, 1827, 1852, 1861, 1875, 1877, 1878, 1879, 1886, 1888, 1889, 1891, 1893, 1896, 1900, 1907, 1909], "surround": [1, 65, 779, 1854, 1874, 1878], "ensur": [1, 2, 5, 7, 8, 10, 14, 23, 32, 35, 36, 37, 39, 43, 52, 53, 55, 57, 64, 65, 472, 477, 724, 808, 886, 888, 1112, 1182, 1326, 1407, 1414, 1417, 1418, 1457, 1513, 1537, 1538, 1539, 1563, 1594, 1747, 1849, 1852, 1854, 1862, 1864, 1867, 1874, 1875, 1878, 1880, 1881, 1883, 1888, 1890, 1897, 1900, 1901, 1905, 1906], "necessari": [1, 2, 4, 10, 14, 23, 26, 32, 37, 43, 52, 53, 57, 64, 81, 184, 201, 549, 578, 889, 1112, 1156, 1193, 1420, 1628, 1629, 1852, 1855, 1869, 1873, 1875, 1876, 1878, 1879, 1884, 1886, 1889, 1892, 1897, 1900, 1905, 1906, 1907, 1912], "becaus": [1, 2, 4, 5, 6, 8, 9, 14, 16, 17, 23, 26, 32, 33, 35, 39, 41, 45, 57, 61, 62, 64, 65, 486, 892, 897, 898, 1076, 1077, 1078, 1086, 1087, 1088, 1113, 1117, 1122, 1123, 1179, 1183, 1186, 1189, 1228, 1229, 1253, 1271, 1332, 1333, 1334, 1351, 1453, 1585, 1594, 1595, 1673, 1715, 1796, 1842, 1850, 1852, 1855, 1857, 1867, 1868, 1869, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1893, 1897, 1900, 1901, 1905, 1907, 1909, 1914, 1916, 1919, 1920], "f_float32": 1, "re": [1, 2, 5, 6, 8, 14, 16, 18, 22, 23, 26, 32, 35, 39, 42, 49, 52, 57, 58, 59, 60, 61, 62, 64, 65, 922, 1106, 1182, 1186, 1414, 1569, 1595, 1630, 1726, 1779, 1852, 1855, 1862, 1867, 1874, 1875, 1878, 1880, 1881, 1883, 1888, 1900, 1906, 1907, 1910, 1920], "again": [1, 17, 29, 32, 35, 39, 43, 60, 1304, 1875, 1881, 1886], "regardless": [1, 14, 32, 51, 57, 948, 1186, 1191, 1832, 1874, 1878, 1891, 1905, 1916], "g_float16": 1, "thread": [1, 2, 4, 13, 32, 35, 37, 43, 54, 57, 64, 909, 958, 1059, 1132, 1133, 1157, 1351, 1639, 1745, 1746, 1747, 1850, 1852, 1865, 1874, 1878, 1885, 1888, 1905, 1907, 1917], "new": [1, 2, 6, 9, 13, 14, 17, 22, 23, 26, 29, 32, 34, 35, 37, 41, 43, 52, 53, 57, 58, 61, 62, 63, 64, 65, 214, 246, 303, 439, 474, 478, 486, 489, 533, 569, 572, 606, 669, 673, 749, 780, 803, 808, 843, 868, 870, 871, 872, 873, 874, 884, 902, 903, 925, 926, 931, 940, 949, 951, 952, 959, 961, 1039, 1043, 1065, 1069, 1070, 1096, 1097, 1099, 1112, 1121, 1123, 1152, 1156, 1157, 1171, 1172, 1175, 1178, 1182, 1188, 1193, 1195, 1255, 1256, 1257, 1258, 1275, 1313, 1316, 1332, 1333, 1334, 1366, 1377, 1378, 1379, 1414, 1415, 1420, 1424, 1453, 1464, 1466, 1524, 1587, 1590, 1591, 1592, 1593, 1594, 1602, 1606, 1608, 1612, 1613, 1614, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1631, 1635, 1639, 1656, 1657, 1683, 1707, 1717, 1718, 1722, 1723, 1724, 1730, 1731, 1735, 1740, 1741, 1751, 1753, 1764, 1766, 1768, 1789, 1790, 1793, 1810, 1812, 1813, 1829, 1831, 1834, 1840, 1841, 1842, 1849, 1852, 1854, 1855, 1859, 1862, 1863, 1867, 1868, 1869, 1870, 1871, 1875, 1878, 1880, 1881, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1903, 1907, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1919], "affect": [1, 2, 3, 8, 10, 19, 29, 31, 42, 57, 214, 215, 774, 909, 959, 961, 1059, 1106, 1129, 1157, 1182, 1295, 1296, 1384, 1414, 1429, 1466, 1582, 1595, 1639, 1739, 1742, 1743, 1745, 1874, 1875, 1878, 1883, 1886, 1889, 1890, 1911], "dataparallel": [1, 35, 1578, 1594, 1630, 1850, 1875, 1882, 1888, 1905], "parallel": [1, 14, 25, 26, 32, 33, 35, 36, 37, 39, 52, 53, 57, 1132, 1133, 1185, 1351, 1420, 1453, 1513, 1594, 1746, 1747, 1850, 1855, 1874, 1875, 1877, 1888, 1892, 1905, 1907], "distributeddataparallel": [1, 32, 33, 35, 36, 39, 53, 57, 1351, 1453, 1888, 1898, 1905], "one": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 16, 17, 20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 49, 52, 54, 55, 57, 61, 62, 63, 64, 65, 67, 69, 143, 214, 246, 344, 394, 477, 503, 510, 534, 549, 686, 737, 746, 782, 843, 844, 845, 869, 875, 881, 882, 883, 884, 886, 892, 913, 924, 926, 936, 940, 959, 961, 966, 968, 972, 999, 1022, 1033, 1044, 1055, 1059, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1085, 1086, 1087, 1088, 1089, 1091, 1094, 1098, 1101, 1102, 1103, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1135, 1144, 1145, 1157, 1161, 1164, 1167, 1186, 1191, 1195, 1201, 1202, 1212, 1213, 1223, 1224, 1225, 1226, 1227, 1229, 1234, 1238, 1240, 1242, 1245, 1251, 1252, 1268, 1276, 1280, 1285, 1304, 1310, 1322, 1327, 1330, 1331, 1332, 1333, 1334, 1337, 1342, 1345, 1346, 1347, 1358, 1362, 1363, 1368, 1377, 1378, 1379, 1381, 1382, 1383, 1393, 1394, 1395, 1405, 1414, 1418, 1420, 1453, 1461, 1466, 1478, 1488, 1491, 1492, 1493, 1508, 1509, 1510, 1515, 1550, 1563, 1581, 1585, 1594, 1595, 1600, 1602, 1603, 1607, 1617, 1628, 1637, 1638, 1639, 1640, 1641, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1677, 1679, 1680, 1681, 1701, 1702, 1719, 1735, 1743, 1745, 1748, 1751, 1791, 1800, 1815, 1820, 1821, 1823, 1831, 1834, 1835, 1842, 1850, 1852, 1855, 1859, 1861, 1863, 1865, 1867, 1868, 1869, 1870, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1892, 1893, 1896, 1897, 1898, 1900, 1901, 1905, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916], "gpu": [1, 2, 3, 4, 5, 8, 14, 15, 16, 18, 20, 21, 23, 26, 28, 30, 32, 33, 37, 43, 53, 54, 57, 64, 189, 202, 281, 324, 592, 749, 942, 963, 964, 967, 968, 969, 970, 971, 972, 978, 979, 980, 987, 993, 994, 1000, 1002, 1003, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1032, 1033, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1103, 1182, 1191, 1228, 1253, 1282, 1290, 1291, 1292, 1295, 1296, 1322, 1351, 1366, 1384, 1414, 1429, 1430, 1453, 1578, 1594, 1627, 1800, 1850, 1852, 1863, 1878, 1884, 1886, 1887, 1889, 1890, 1892, 1900, 1905, 1909, 1911, 1915, 1917], "per": [1, 26, 32, 33, 35, 36, 37, 39, 40, 42, 43, 45, 51, 53, 54, 57, 58, 63, 463, 464, 465, 723, 724, 790, 797, 808, 811, 814, 822, 834, 842, 881, 890, 892, 962, 1038, 1069, 1113, 1123, 1254, 1330, 1331, 1332, 1333, 1334, 1348, 1350, 1351, 1358, 1369, 1374, 1377, 1378, 1379, 1380, 1381, 1386, 1405, 1406, 1414, 1417, 1418, 1419, 1420, 1421, 1428, 1445, 1446, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1485, 1486, 1496, 1525, 1548, 1556, 1594, 1638, 1642, 1659, 1675, 1681, 1689, 1701, 1748, 1750, 1801, 1817, 1821, 1842, 1865, 1869, 1871, 1877, 1878, 1879, 1881, 1885, 1898, 1900, 1901, 1903, 1906, 1909, 1914], "whether": [1, 2, 3, 8, 14, 15, 17, 23, 26, 32, 33, 35, 36, 37, 40, 41, 43, 51, 52, 57, 65, 311, 313, 462, 507, 606, 669, 682, 684, 685, 688, 863, 864, 869, 878, 886, 889, 890, 892, 897, 898, 909, 911, 920, 933, 934, 935, 941, 942, 943, 997, 1013, 1111, 1123, 1139, 1140, 1157, 1179, 1182, 1189, 1190, 1198, 1203, 1211, 1212, 1218, 1220, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1236, 1238, 1239, 1242, 1243, 1244, 1245, 1253, 1269, 1271, 1279, 1281, 1282, 1284, 1287, 1304, 1309, 1310, 1311, 1312, 1337, 1348, 1374, 1380, 1414, 1423, 1428, 1463, 1475, 1476, 1477, 1497, 1525, 1556, 1594, 1601, 1603, 1606, 1619, 1633, 1636, 1641, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1675, 1687, 1697, 1700, 1744, 1745, 1794, 1795, 1796, 1799, 1800, 1818, 1823, 1832, 1833, 1835, 1837, 1838, 1842, 1849, 1855, 1861, 1862, 1864, 1870, 1874, 1878, 1880, 1884, 1893, 1898, 1900, 1905, 1909, 1911, 1913, 1914, 1919], "torch_dtyp": 1, "weight": [1, 14, 32, 35, 41, 57, 63, 65, 149, 293, 353, 354, 486, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 734, 735, 738, 740, 741, 742, 743, 745, 749, 750, 752, 753, 754, 761, 762, 763, 770, 781, 782, 783, 797, 798, 822, 824, 830, 834, 838, 839, 840, 841, 842, 847, 848, 850, 851, 913, 954, 1111, 1113, 1121, 1123, 1143, 1144, 1182, 1186, 1191, 1193, 1198, 1207, 1304, 1330, 1331, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1357, 1358, 1366, 1367, 1369, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1414, 1418, 1419, 1420, 1421, 1422, 1429, 1431, 1443, 1457, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1504, 1505, 1514, 1523, 1527, 1530, 1545, 1547, 1548, 1557, 1566, 1585, 1594, 1601, 1602, 1604, 1606, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1634, 1635, 1636, 1638, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1669, 1703, 1842, 1849, 1850, 1851, 1853, 1854, 1855, 1863, 1864, 1869, 1870, 1873, 1880, 1882, 1886, 1891, 1900, 1901, 1902, 1903, 1909, 1914, 1918, 1919], "insid": [1, 2, 8, 17, 23, 32, 52, 57, 62, 64, 65, 886, 887, 888, 889, 964, 1001, 1113, 1117, 1122, 1193, 1594, 1852, 1854, 1855, 1863, 1874, 1878, 1880, 1881, 1885, 1893, 1918], "custom_fwd": [1, 1874], "fwd": 1, "cast_input": [1, 1874], "helper": [1, 4, 6, 22, 35, 61, 65, 1453, 1849, 1850, 1854, 1878, 1879, 1893, 1897, 1905, 1920], "subclass": [1, 2, 13, 17, 26, 32, 37, 41, 45, 62, 65, 132, 526, 878, 879, 880, 1180, 1183, 1192, 1414, 1595, 1608, 1613, 1634, 1852, 1855, 1856, 1862, 1874, 1886, 1893, 1894, 1905, 1920], "page": [1, 7, 8, 10, 20, 32, 36, 53, 55, 1254, 1457, 1459, 1461, 1878, 1879, 1886, 1895, 1905], "incom": [1, 35, 54, 770, 808, 809, 810, 811, 814, 1335, 1401, 1484, 1530, 1867, 1875], "non": [1, 2, 4, 6, 14, 15, 16, 22, 26, 31, 33, 35, 36, 37, 40, 41, 43, 45, 52, 54, 55, 57, 64, 81, 143, 327, 494, 503, 507, 534, 687, 723, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 754, 761, 762, 763, 827, 854, 866, 878, 880, 882, 887, 889, 897, 898, 913, 926, 929, 942, 947, 948, 953, 1012, 1101, 1102, 1108, 1112, 1117, 1123, 1159, 1182, 1185, 1194, 1197, 1198, 1217, 1218, 1225, 1229, 1230, 1243, 1245, 1254, 1264, 1271, 1276, 1281, 1304, 1309, 1310, 1314, 1327, 1328, 1329, 1343, 1344, 1346, 1347, 1350, 1360, 1366, 1383, 1384, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1417, 1419, 1421, 1429, 1431, 1445, 1496, 1515, 1543, 1548, 1590, 1591, 1594, 1640, 1692, 1735, 1736, 1751, 1763, 1777, 1778, 1782, 1783, 1784, 1785, 1786, 1787, 1816, 1832, 1842, 1849, 1850, 1852, 1854, 1855, 1857, 1867, 1870, 1873, 1876, 1880, 1881, 1882, 1886, 1890, 1893, 1898, 1899, 1904, 1905, 1907, 1909, 1910, 1912, 1913, 1914, 1916, 1920], "intern": [1, 4, 9, 10, 14, 17, 18, 23, 26, 32, 33, 35, 37, 41, 43, 49, 57, 62, 65, 956, 990, 1011, 1112, 1182, 1218, 1220, 1236, 1239, 1262, 1332, 1333, 1334, 1368, 1453, 1488, 1489, 1490, 1513, 1603, 1650, 1743, 1785, 1835, 1856, 1874, 1875, 1877, 1878, 1883, 1889, 1890, 1906, 1907, 1911, 1913], "current": [1, 2, 3, 4, 6, 7, 8, 10, 14, 17, 19, 20, 23, 24, 26, 32, 35, 37, 39, 40, 41, 43, 45, 52, 53, 57, 58, 64, 65, 81, 143, 202, 214, 477, 487, 488, 489, 730, 732, 770, 782, 784, 806, 848, 850, 851, 854, 879, 882, 883, 890, 891, 892, 897, 911, 920, 956, 957, 958, 959, 961, 966, 967, 970, 971, 973, 974, 975, 976, 979, 980, 981, 983, 984, 987, 989, 990, 993, 995, 996, 1000, 1001, 1002, 1004, 1006, 1007, 1008, 1010, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1022, 1024, 1026, 1028, 1031, 1032, 1033, 1056, 1058, 1068, 1073, 1091, 1107, 1109, 1129, 1130, 1131, 1139, 1140, 1165, 1166, 1182, 1186, 1197, 1201, 1252, 1254, 1268, 1283, 1290, 1292, 1354, 1357, 1361, 1414, 1453, 1465, 1507, 1513, 1524, 1563, 1581, 1582, 1584, 1594, 1607, 1611, 1612, 1613, 1614, 1615, 1620, 1621, 1622, 1623, 1645, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1699, 1708, 1710, 1712, 1714, 1715, 1739, 1743, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1775, 1782, 1783, 1784, 1785, 1786, 1787, 1825, 1827, 1832, 1847, 1850, 1852, 1854, 1855, 1856, 1857, 1859, 1862, 1865, 1867, 1870, 1874, 1875, 1878, 1879, 1884, 1885, 1886, 1887, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1900, 1903, 1905, 1906, 1909, 1911, 1912, 1914, 1915, 1918, 1920], "custom_bwd": [1, 1874], "bwd": 1, "small": [1, 4, 8, 10, 15, 23, 32, 33, 35, 41, 52, 854, 897, 898, 942, 969, 1012, 1244, 1245, 1257, 1259, 1322, 1349, 1423, 1428, 1442, 1466, 1495, 1549, 1556, 1594, 1672, 1678, 1687, 1800, 1852, 1854, 1855, 1878, 1880, 1882, 1886, 1889, 1891, 1893, 1897, 1900, 1901, 1910, 1916], "magnitud": [1, 949, 1638, 1751, 1873, 1874, 1878], "represent": [1, 4, 14, 23, 26, 32, 35, 37, 50, 65, 472, 747, 815, 959, 1071, 1072, 1074, 1098, 1127, 1182, 1221, 1224, 1226, 1229, 1308, 1414, 1420, 1648, 1687, 1850, 1852, 1855, 1870, 1880, 1889, 1893, 1897, 1900, 1909, 1916, 1921], "These": [1, 2, 3, 4, 9, 14, 17, 19, 23, 26, 27, 32, 35, 36, 41, 58, 60, 63, 65, 783, 869, 954, 1055, 1119, 1179, 1182, 1224, 1289, 1322, 1414, 1585, 1602, 1850, 1852, 1853, 1854, 1855, 1865, 1868, 1869, 1871, 1874, 1875, 1878, 1879, 1880, 1886, 1889, 1891, 1893, 1897, 1903, 1905, 1906, 1912, 1917, 1920], "flush": [1, 2, 37, 1012, 1192, 1731, 1744, 1889, 1914], "zero": [1, 2, 3, 16, 33, 35, 36, 39, 41, 54, 57, 62, 65, 143, 252, 307, 503, 505, 533, 534, 573, 574, 576, 577, 612, 668, 680, 687, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 749, 753, 757, 758, 761, 762, 763, 764, 766, 769, 770, 784, 788, 808, 809, 810, 811, 814, 819, 866, 875, 876, 877, 882, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 912, 913, 933, 934, 935, 940, 949, 953, 1001, 1012, 1016, 1017, 1046, 1050, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1103, 1108, 1111, 1119, 1141, 1142, 1145, 1167, 1179, 1182, 1193, 1211, 1212, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1254, 1262, 1263, 1264, 1265, 1266, 1271, 1272, 1304, 1308, 1312, 1326, 1327, 1328, 1329, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1366, 1367, 1369, 1382, 1383, 1384, 1385, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1420, 1423, 1426, 1427, 1428, 1429, 1431, 1451, 1465, 1466, 1469, 1470, 1471, 1480, 1481, 1482, 1491, 1492, 1493, 1495, 1497, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1513, 1534, 1535, 1549, 1550, 1551, 1611, 1612, 1613, 1614, 1629, 1636, 1640, 1644, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1687, 1699, 1701, 1702, 1703, 1719, 1728, 1738, 1765, 1769, 1778, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1800, 1814, 1815, 1817, 1823, 1848, 1852, 1853, 1855, 1857, 1865, 1867, 1868, 1869, 1870, 1873, 1875, 1878, 1880, 1886, 1889, 1892, 1893, 1895, 1897, 1899, 1900, 1903, 1909, 1910, 1912, 1914, 1915, 1916, 1917], "underflow": [1, 1380, 1874], "updat": [1, 10, 22, 24, 32, 33, 37, 39, 43, 52, 57, 60, 61, 65, 214, 503, 505, 749, 788, 789, 813, 1111, 1120, 1182, 1332, 1333, 1334, 1351, 1357, 1358, 1366, 1377, 1378, 1379, 1414, 1415, 1424, 1453, 1504, 1505, 1602, 1606, 1636, 1653, 1659, 1664, 1666, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1849, 1852, 1863, 1874, 1875, 1878, 1879, 1880, 1886, 1888, 1891, 1892, 1893, 1895, 1896, 1898, 1900, 1905, 1906, 1907, 1914], "lost": [1, 43, 53, 55, 1351, 1410, 1411, 1412], "To": [1, 2, 3, 4, 5, 6, 7, 10, 12, 14, 15, 17, 18, 22, 23, 26, 27, 32, 33, 35, 36, 39, 40, 41, 43, 44, 50, 51, 53, 54, 57, 62, 65, 327, 489, 546, 723, 883, 896, 939, 942, 957, 1002, 1022, 1043, 1045, 1055, 1083, 1085, 1089, 1100, 1182, 1183, 1185, 1186, 1192, 1193, 1227, 1249, 1254, 1282, 1322, 1354, 1380, 1410, 1411, 1412, 1414, 1467, 1468, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1638, 1681, 1689, 1700, 1739, 1747, 1801, 1849, 1852, 1854, 1855, 1859, 1867, 1868, 1869, 1871, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1886, 1887, 1891, 1893, 1896, 1897, 1898, 1899, 1900, 1905, 1906, 1907, 1909, 1912, 1913, 1914, 1915], "multipli": [1, 14, 35, 305, 313, 414, 503, 674, 675, 676, 677, 678, 679, 680, 749, 768, 774, 775, 776, 910, 922, 1025, 1038, 1055, 1135, 1146, 1205, 1217, 1218, 1222, 1235, 1237, 1239, 1245, 1247, 1276, 1286, 1299, 1303, 1306, 1330, 1342, 1343, 1344, 1347, 1366, 1384, 1466, 1467, 1468, 1524, 1582, 1583, 1584, 1606, 1672, 1678, 1680, 1687, 1771, 1774, 1777, 1778, 1792, 1796, 1797, 1800, 1821, 1853, 1868, 1878, 1883, 1886, 1889, 1895, 1909, 1910], "flow": [1, 12, 16, 17, 939, 1194, 1197, 1478, 1513, 1594, 1852, 1873, 1875, 1878, 1880, 1891, 1893, 1907], "word": [1, 2, 9, 35, 52, 53, 60, 64, 65, 926, 1322, 1342, 1343, 1344, 1357, 1358, 1457, 1504, 1505, 1524, 1582, 1594, 1601, 1735, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1854, 1875, 1882, 1897, 1906], "larger": [1, 10, 17, 20, 22, 35, 41, 65, 246, 489, 898, 913, 1012, 1112, 1236, 1239, 1322, 1351, 1357, 1358, 1406, 1463, 1466, 1504, 1505, 1875, 1878, 1882, 1883, 1885, 1889, 1891, 1909, 1914], "thei": [1, 2, 4, 6, 8, 10, 14, 16, 19, 23, 24, 28, 29, 32, 35, 37, 41, 42, 52, 57, 60, 61, 64, 65, 313, 327, 328, 675, 678, 679, 686, 789, 804, 805, 806, 813, 830, 843, 848, 879, 888, 898, 910, 1001, 1059, 1106, 1111, 1121, 1157, 1171, 1172, 1179, 1182, 1189, 1194, 1203, 1217, 1218, 1224, 1245, 1253, 1275, 1279, 1282, 1284, 1287, 1304, 1327, 1328, 1329, 1345, 1346, 1347, 1361, 1399, 1407, 1408, 1409, 1414, 1420, 1430, 1442, 1465, 1513, 1515, 1585, 1594, 1595, 1598, 1601, 1603, 1604, 1627, 1630, 1639, 1677, 1680, 1739, 1745, 1796, 1800, 1835, 1836, 1849, 1852, 1854, 1855, 1857, 1859, 1861, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1884, 1886, 1888, 1889, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1905, 1909, 1914, 1916, 1917, 1918, 1920], "grad": [1, 2, 6, 19, 35, 41, 58, 61, 62, 65, 143, 327, 449, 478, 485, 486, 493, 494, 570, 869, 878, 882, 883, 889, 890, 892, 897, 898, 902, 903, 1001, 1059, 1111, 1112, 1114, 1118, 1122, 1123, 1157, 1165, 1182, 1254, 1414, 1594, 1639, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1745, 1777, 1835, 1842, 1850, 1852, 1853, 1868, 1869, 1870, 1874, 1879, 1880, 1881, 1883, 1886, 1888, 1895, 1905, 1906, 1909, 1915], "unscal": 1, "interfer": [1, 14, 1865, 1878, 1893], "learn": [1, 8, 9, 12, 17, 27, 41, 51, 65, 1335, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1374, 1399, 1401, 1422, 1443, 1462, 1463, 1566, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1850, 1859, 1871, 1873, 1884, 1886, 1887, 1893, 1897, 1900, 1905, 1907], "rate": [1, 9, 20, 33, 41, 1353, 1354, 1355, 1359, 1460, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1692, 1850, 1885, 1914], "init_scal": 1, "65536": 1, "0": [1, 2, 4, 12, 13, 14, 16, 17, 18, 22, 24, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 52, 53, 54, 57, 60, 61, 62, 63, 64, 65, 81, 147, 149, 166, 177, 184, 201, 217, 218, 219, 220, 221, 246, 252, 255, 281, 290, 292, 303, 305, 307, 309, 313, 344, 393, 394, 418, 419, 436, 439, 440, 445, 472, 474, 478, 486, 497, 498, 503, 505, 507, 510, 527, 532, 533, 536, 545, 547, 549, 567, 569, 570, 572, 573, 574, 576, 577, 578, 584, 585, 586, 587, 594, 596, 597, 606, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 701, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 740, 741, 742, 744, 745, 746, 747, 749, 757, 758, 759, 761, 762, 763, 764, 767, 769, 771, 772, 774, 783, 785, 788, 791, 806, 809, 810, 811, 814, 843, 845, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 887, 890, 891, 892, 894, 897, 898, 900, 902, 903, 906, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 940, 945, 946, 949, 950, 951, 952, 953, 954, 955, 961, 970, 972, 998, 999, 1025, 1029, 1034, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1053, 1055, 1057, 1058, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1111, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1135, 1139, 1141, 1142, 1143, 1144, 1145, 1148, 1152, 1156, 1159, 1167, 1178, 1179, 1180, 1182, 1186, 1188, 1189, 1193, 1201, 1202, 1203, 1204, 1205, 1207, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1271, 1275, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1299, 1302, 1303, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1318, 1320, 1321, 1322, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1400, 1402, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1445, 1447, 1448, 1449, 1451, 1453, 1456, 1457, 1459, 1461, 1462, 1463, 1465, 1466, 1469, 1470, 1471, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1513, 1516, 1517, 1518, 1521, 1522, 1523, 1524, 1528, 1529, 1531, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1548, 1549, 1550, 1551, 1552, 1553, 1556, 1557, 1559, 1563, 1564, 1567, 1569, 1572, 1578, 1579, 1580, 1581, 1582, 1585, 1594, 1598, 1601, 1602, 1606, 1611, 1612, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1627, 1628, 1630, 1631, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1646, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1690, 1692, 1693, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1726, 1727, 1728, 1730, 1731, 1735, 1737, 1738, 1739, 1742, 1744, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1769, 1773, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1802, 1803, 1809, 1810, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1862, 1868, 1869, 1870, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 1921], "growth_factor": 1, "backoff_factor": 1, "5": [1, 2, 11, 13, 14, 22, 23, 24, 26, 29, 30, 32, 33, 35, 41, 50, 61, 62, 63, 64, 65, 147, 184, 201, 252, 281, 290, 305, 307, 309, 313, 393, 394, 436, 462, 489, 503, 505, 507, 526, 533, 547, 549, 573, 574, 575, 576, 577, 596, 674, 675, 679, 686, 723, 728, 729, 730, 731, 732, 734, 735, 749, 751, 762, 763, 850, 851, 854, 869, 875, 876, 877, 890, 893, 895, 910, 913, 920, 921, 922, 926, 928, 932, 935, 936, 937, 940, 949, 953, 1034, 1036, 1038, 1045, 1047, 1049, 1050, 1053, 1054, 1055, 1058, 1071, 1073, 1075, 1076, 1082, 1083, 1086, 1091, 1094, 1095, 1098, 1101, 1103, 1104, 1105, 1113, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1125, 1135, 1141, 1143, 1145, 1147, 1148, 1159, 1167, 1171, 1188, 1192, 1193, 1202, 1203, 1204, 1207, 1210, 1211, 1228, 1231, 1234, 1237, 1238, 1239, 1240, 1245, 1246, 1249, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1264, 1268, 1275, 1276, 1282, 1283, 1287, 1311, 1313, 1314, 1316, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1331, 1332, 1333, 1334, 1338, 1339, 1340, 1341, 1343, 1344, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1368, 1369, 1370, 1375, 1377, 1378, 1379, 1380, 1381, 1384, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1402, 1405, 1410, 1411, 1414, 1421, 1424, 1428, 1429, 1435, 1436, 1437, 1438, 1439, 1442, 1445, 1451, 1453, 1457, 1459, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1479, 1480, 1488, 1489, 1491, 1492, 1496, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1508, 1509, 1511, 1513, 1516, 1524, 1548, 1550, 1556, 1572, 1582, 1583, 1584, 1594, 1606, 1616, 1619, 1621, 1622, 1624, 1629, 1630, 1632, 1634, 1640, 1641, 1642, 1644, 1645, 1648, 1651, 1666, 1668, 1672, 1678, 1682, 1688, 1690, 1692, 1693, 1695, 1696, 1699, 1700, 1703, 1704, 1705, 1706, 1710, 1715, 1716, 1719, 1720, 1726, 1727, 1728, 1735, 1748, 1755, 1757, 1758, 1759, 1760, 1763, 1764, 1773, 1778, 1780, 1781, 1782, 1783, 1785, 1788, 1796, 1799, 1800, 1801, 1802, 1803, 1810, 1812, 1814, 1815, 1816, 1818, 1819, 1821, 1830, 1831, 1835, 1836, 1842, 1843, 1844, 1847, 1852, 1853, 1854, 1855, 1856, 1862, 1869, 1870, 1873, 1874, 1875, 1876, 1878, 1880, 1882, 1883, 1886, 1887, 1891, 1892, 1893, 1896, 1898, 1900, 1905, 1909, 1910, 1912, 1914, 1915, 1916], "growth_interv": 1, "2000": [1, 35, 39, 1073, 1075, 1082, 1091, 1104, 1259, 1466, 1675, 1703, 1753, 1754, 1814], "get_backoff_factor": 1, "backoff": [1, 1905], "get_growth_factor": 1, "growth": [1, 9], "get_growth_interv": 1, "int": [1, 3, 4, 17, 22, 29, 32, 33, 35, 37, 39, 40, 41, 43, 46, 49, 50, 52, 53, 55, 57, 65, 81, 209, 211, 225, 234, 246, 305, 307, 309, 313, 428, 435, 436, 438, 440, 448, 463, 467, 483, 487, 489, 503, 505, 507, 510, 526, 532, 534, 535, 547, 549, 555, 572, 573, 574, 576, 577, 596, 606, 669, 682, 684, 685, 686, 688, 744, 745, 764, 766, 768, 769, 774, 775, 776, 808, 863, 864, 865, 867, 881, 888, 901, 911, 913, 920, 927, 929, 936, 941, 953, 954, 955, 957, 959, 961, 963, 964, 967, 968, 969, 970, 971, 972, 974, 975, 976, 977, 978, 983, 984, 985, 987, 989, 993, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1024, 1025, 1026, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1042, 1043, 1044, 1045, 1046, 1047, 1053, 1056, 1058, 1068, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1108, 1109, 1113, 1114, 1115, 1116, 1117, 1123, 1124, 1130, 1132, 1133, 1135, 1139, 1140, 1142, 1143, 1144, 1145, 1156, 1158, 1179, 1180, 1182, 1183, 1185, 1188, 1193, 1201, 1203, 1213, 1214, 1234, 1235, 1238, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1261, 1268, 1269, 1274, 1279, 1281, 1282, 1284, 1287, 1289, 1290, 1291, 1294, 1304, 1309, 1310, 1311, 1312, 1313, 1314, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1367, 1369, 1377, 1378, 1379, 1382, 1383, 1385, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1399, 1401, 1402, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1416, 1419, 1421, 1422, 1425, 1426, 1427, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1447, 1449, 1450, 1453, 1457, 1459, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1495, 1496, 1497, 1504, 1505, 1512, 1515, 1524, 1532, 1548, 1549, 1550, 1554, 1555, 1569, 1570, 1578, 1582, 1583, 1584, 1594, 1602, 1611, 1612, 1614, 1615, 1617, 1620, 1621, 1622, 1623, 1628, 1630, 1635, 1638, 1641, 1642, 1644, 1645, 1648, 1650, 1651, 1652, 1659, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1689, 1690, 1697, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1710, 1711, 1712, 1714, 1720, 1721, 1722, 1725, 1726, 1727, 1728, 1731, 1736, 1737, 1738, 1742, 1746, 1747, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1769, 1773, 1776, 1779, 1780, 1781, 1788, 1791, 1793, 1794, 1795, 1796, 1799, 1801, 1805, 1811, 1815, 1816, 1818, 1820, 1821, 1824, 1825, 1826, 1827, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1842, 1843, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1865, 1867, 1868, 1870, 1873, 1878, 1881, 1893, 1895, 1898, 1899, 1900, 1904, 1905, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1921], "interv": [1, 41, 54, 854, 950, 1105, 1295, 1296, 1684, 1708, 1709, 1757, 1865, 1878, 1899], "get_scal": [1, 1874], "sync": [1, 35, 39, 57, 64, 65, 1594, 1878, 1879, 1898], "is_en": [1, 1775, 1782, 1783, 1784, 1785, 1786, 1787], "indic": [1, 2, 3, 4, 17, 23, 32, 33, 35, 36, 40, 41, 52, 184, 201, 214, 305, 307, 309, 310, 311, 313, 462, 503, 505, 507, 533, 561, 562, 572, 603, 684, 685, 724, 734, 735, 863, 864, 865, 866, 867, 887, 897, 898, 926, 933, 934, 956, 958, 959, 961, 995, 1034, 1035, 1058, 1113, 1114, 1116, 1117, 1118, 1122, 1123, 1124, 1135, 1156, 1180, 1182, 1187, 1195, 1198, 1199, 1203, 1212, 1223, 1225, 1236, 1239, 1253, 1261, 1269, 1271, 1273, 1279, 1282, 1284, 1287, 1304, 1310, 1314, 1322, 1323, 1324, 1325, 1350, 1357, 1358, 1362, 1363, 1408, 1409, 1410, 1411, 1412, 1417, 1419, 1420, 1475, 1476, 1477, 1496, 1504, 1505, 1508, 1509, 1525, 1540, 1541, 1542, 1550, 1563, 1578, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1620, 1621, 1640, 1641, 1679, 1681, 1700, 1735, 1773, 1777, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1810, 1811, 1815, 1818, 1824, 1825, 1826, 1827, 1832, 1833, 1835, 1842, 1845, 1851, 1852, 1853, 1855, 1859, 1868, 1869, 1880, 1893, 1895, 1905, 1909, 1913, 1914, 1916], "load_state_dict": [1, 33, 37, 39, 57, 1182, 1253, 1414, 1585, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1849, 1850, 1886, 1891, 1900], "state_dict": [1, 33, 37, 39, 57, 825, 826, 1182, 1414, 1585, 1620, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1849, 1864, 1879, 1886, 1888, 1891, 1893, 1900, 1918], "load": [1, 2, 15, 16, 23, 24, 26, 27, 33, 37, 39, 57, 826, 851, 905, 942, 957, 1186, 1192, 1197, 1358, 1585, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1731, 1850, 1852, 1863, 1864, 1869, 1875, 1878, 1885, 1886, 1890, 1892, 1893, 1914], "scaler": [1, 1874, 1878], "unmodifi": [1, 21, 35], "iter": [1, 2, 3, 4, 8, 14, 17, 22, 23, 33, 35, 36, 37, 39, 41, 53, 55, 57, 65, 968, 969, 970, 971, 972, 1001, 1004, 1006, 1027, 1182, 1254, 1414, 1415, 1416, 1424, 1425, 1594, 1595, 1598, 1599, 1600, 1602, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1635, 1637, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1673, 1674, 1675, 1678, 1689, 1759, 1801, 1853, 1855, 1856, 1867, 1869, 1874, 1875, 1876, 1878, 1879, 1880, 1883, 1886, 1896, 1899, 1904, 1914, 1920], "set_backoff_factor": 1, "new_factor": 1, "new_scal": 1, "set_growth_factor": 1, "set_growth_interv": 1, "new_interv": 1, "It": [1, 2, 4, 5, 6, 8, 9, 12, 14, 16, 17, 21, 22, 23, 28, 29, 32, 33, 35, 36, 37, 40, 41, 43, 45, 49, 50, 51, 52, 53, 54, 57, 59, 61, 62, 63, 64, 65, 81, 143, 189, 464, 465, 503, 505, 507, 533, 546, 878, 879, 880, 881, 882, 886, 909, 947, 948, 972, 977, 983, 984, 1002, 1003, 1022, 1023, 1031, 1078, 1107, 1112, 1115, 1123, 1124, 1143, 1179, 1182, 1183, 1188, 1192, 1214, 1218, 1222, 1225, 1227, 1229, 1230, 1235, 1239, 1240, 1242, 1243, 1245, 1247, 1250, 1251, 1253, 1254, 1262, 1322, 1331, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1351, 1361, 1408, 1409, 1410, 1411, 1412, 1414, 1421, 1442, 1445, 1465, 1467, 1515, 1525, 1569, 1587, 1588, 1589, 1592, 1593, 1594, 1602, 1603, 1606, 1627, 1630, 1631, 1639, 1648, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1687, 1706, 1719, 1735, 1745, 1751, 1758, 1779, 1831, 1842, 1849, 1854, 1855, 1865, 1867, 1869, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1896, 1897, 1898, 1900, 1905, 1906, 1907, 1910, 1911, 1913, 1917], "five": [1, 1855, 1891], "entri": [1, 4, 12, 17, 35, 36, 39, 41, 50, 52, 53, 307, 724, 847, 848, 906, 998, 999, 1045, 1096, 1097, 1156, 1182, 1202, 1357, 1358, 1414, 1420, 1504, 1505, 1590, 1591, 1612, 1613, 1621, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1779, 1852, 1855, 1856, 1862, 1870, 1875, 1879, 1880, 1883, 1886, 1903, 1909, 1914, 1918], "_growth_track": 1, "number": [1, 2, 3, 4, 5, 6, 8, 14, 16, 20, 23, 26, 32, 33, 35, 39, 40, 41, 43, 50, 51, 52, 55, 57, 58, 60, 63, 65, 81, 147, 166, 211, 225, 246, 305, 344, 369, 390, 394, 426, 437, 462, 464, 465, 472, 483, 487, 489, 503, 505, 507, 532, 534, 535, 547, 572, 573, 574, 576, 577, 578, 597, 606, 674, 675, 676, 677, 678, 679, 680, 687, 747, 749, 757, 758, 761, 762, 763, 770, 808, 854, 866, 879, 897, 910, 912, 913, 922, 924, 928, 936, 937, 941, 949, 953, 954, 963, 969, 978, 987, 988, 999, 1001, 1002, 1003, 1012, 1022, 1023, 1026, 1027, 1047, 1050, 1052, 1055, 1056, 1060, 1068, 1098, 1100, 1103, 1108, 1110, 1124, 1126, 1132, 1133, 1134, 1138, 1142, 1143, 1144, 1156, 1158, 1179, 1180, 1182, 1195, 1202, 1205, 1206, 1213, 1227, 1236, 1245, 1249, 1254, 1259, 1270, 1274, 1282, 1293, 1294, 1298, 1300, 1303, 1304, 1308, 1312, 1315, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1335, 1336, 1337, 1338, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1356, 1357, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1381, 1384, 1385, 1390, 1391, 1392, 1393, 1394, 1395, 1400, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1413, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1428, 1429, 1431, 1432, 1433, 1434, 1441, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1480, 1481, 1482, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1504, 1505, 1508, 1509, 1514, 1524, 1525, 1527, 1530, 1537, 1538, 1539, 1548, 1550, 1556, 1557, 1563, 1585, 1594, 1602, 1606, 1611, 1612, 1614, 1615, 1617, 1620, 1621, 1622, 1623, 1627, 1628, 1629, 1631, 1635, 1640, 1641, 1642, 1644, 1645, 1651, 1659, 1672, 1673, 1674, 1675, 1678, 1679, 1681, 1682, 1683, 1689, 1692, 1696, 1706, 1708, 1709, 1710, 1712, 1713, 1714, 1719, 1721, 1722, 1725, 1726, 1727, 1728, 1736, 1740, 1744, 1746, 1747, 1748, 1749, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1774, 1778, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1792, 1793, 1794, 1795, 1796, 1797, 1801, 1815, 1816, 1817, 1825, 1827, 1832, 1833, 1836, 1837, 1838, 1839, 1840, 1841, 1847, 1850, 1853, 1854, 1855, 1856, 1857, 1862, 1865, 1867, 1870, 1873, 1876, 1878, 1880, 1883, 1886, 1889, 1891, 1893, 1896, 1897, 1898, 1899, 1901, 1904, 1905, 1906, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1921], "recent": [1, 2, 8, 9, 20, 23, 55, 64, 1157, 1167, 1775, 1854, 1855, 1870, 1880, 1889, 1890, 1909, 1916], "consecut": [1, 35, 599, 1629, 1671, 1821, 1832, 1833, 1869, 1893], "unskip": 1, "empti": [1, 4, 35, 37, 43, 50, 57, 62, 65, 313, 503, 505, 526, 534, 806, 912, 913, 923, 929, 1055, 1057, 1180, 1183, 1207, 1227, 1228, 1233, 1240, 1263, 1264, 1265, 1266, 1273, 1331, 1350, 1358, 1421, 1486, 1505, 1551, 1634, 1646, 1650, 1785, 1800, 1814, 1848, 1851, 1852, 1853, 1854, 1855, 1857, 1863, 1868, 1869, 1870, 1873, 1876, 1878, 1880, 1893, 1895, 1897, 1909, 1910, 1917], "wish": [1, 1118, 1791, 1874, 1878, 1880, 1881], "checkpoint": [1, 39, 53, 55, 57, 905, 1253, 1594, 1849, 1850, 1864, 1882, 1898, 1907], "carri": [1, 61, 328, 786, 827, 828, 846, 847, 1876, 1900], "out": [1, 2, 3, 4, 8, 9, 10, 14, 15, 16, 17, 18, 22, 24, 27, 29, 32, 35, 37, 40, 41, 49, 50, 53, 58, 61, 65, 304, 306, 308, 310, 391, 393, 439, 486, 502, 504, 506, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 745, 749, 753, 761, 762, 763, 768, 770, 774, 786, 825, 827, 828, 846, 847, 854, 855, 856, 857, 858, 859, 860, 861, 866, 870, 871, 872, 873, 874, 883, 884, 885, 888, 897, 910, 912, 913, 914, 915, 916, 917, 918, 919, 922, 926, 929, 931, 932, 933, 934, 935, 937, 938, 940, 942, 944, 945, 946, 948, 949, 951, 952, 955, 960, 968, 970, 972, 999, 1000, 1012, 1013, 1025, 1029, 1034, 1035, 1036, 1037, 1039, 1042, 1047, 1048, 1050, 1051, 1052, 1054, 1055, 1056, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1112, 1113, 1115, 1116, 1118, 1123, 1124, 1125, 1126, 1127, 1128, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1176, 1177, 1182, 1193, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1314, 1315, 1316, 1317, 1318, 1319, 1323, 1324, 1325, 1327, 1328, 1329, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1352, 1353, 1354, 1355, 1357, 1359, 1362, 1363, 1366, 1367, 1382, 1383, 1384, 1399, 1401, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1426, 1427, 1429, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1457, 1458, 1459, 1460, 1461, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1484, 1488, 1489, 1490, 1491, 1492, 1493, 1499, 1500, 1501, 1506, 1509, 1513, 1524, 1530, 1549, 1551, 1582, 1594, 1611, 1612, 1613, 1614, 1640, 1641, 1642, 1643, 1645, 1646, 1687, 1688, 1692, 1693, 1694, 1696, 1699, 1700, 1706, 1707, 1708, 1710, 1712, 1714, 1715, 1718, 1719, 1720, 1724, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1751, 1752, 1753, 1765, 1766, 1767, 1768, 1773, 1777, 1778, 1789, 1790, 1792, 1793, 1794, 1795, 1797, 1798, 1800, 1811, 1812, 1813, 1816, 1818, 1820, 1823, 1824, 1826, 1828, 1829, 1835, 1837, 1838, 1839, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1855, 1862, 1865, 1867, 1869, 1870, 1875, 1876, 1878, 1879, 1880, 1881, 1886, 1888, 1893, 1896, 1897, 1900, 1901, 1903, 1905, 1906, 1907, 1910, 1912, 1914, 1915, 1919, 1920], "follow": [1, 2, 3, 4, 6, 8, 10, 12, 13, 14, 17, 18, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 37, 39, 40, 41, 43, 49, 50, 51, 52, 53, 57, 59, 61, 62, 65, 478, 606, 669, 749, 768, 774, 781, 782, 783, 789, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 843, 850, 851, 878, 879, 880, 884, 902, 903, 926, 931, 998, 1012, 1055, 1073, 1075, 1099, 1108, 1121, 1135, 1182, 1183, 1191, 1195, 1202, 1213, 1224, 1234, 1237, 1238, 1251, 1254, 1273, 1276, 1322, 1331, 1337, 1350, 1358, 1361, 1366, 1384, 1414, 1429, 1445, 1461, 1465, 1532, 1563, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1601, 1641, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1678, 1681, 1689, 1700, 1728, 1735, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1775, 1776, 1777, 1778, 1785, 1796, 1821, 1829, 1835, 1849, 1852, 1853, 1854, 1855, 1856, 1857, 1861, 1862, 1863, 1864, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1915, 1916, 1920, 1921], "unscale_": [1, 1874], "unless": [1, 2, 5, 8, 33, 35, 54, 57, 58, 65, 143, 489, 829, 847, 886, 913, 1111, 1182, 1225, 1230, 1243, 1253, 1282, 1368, 1414, 1461, 1589, 1617, 1636, 1664, 1735, 1835, 1855, 1861, 1875, 1878, 1890, 1893, 1897, 1901], "earlier": [1, 2, 7, 1800, 1875, 1878, 1882, 1885, 1891, 1893, 1899], "part": [1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 22, 23, 26, 27, 29, 33, 35, 37, 41, 52, 53, 57, 61, 62, 65, 830, 896, 944, 1055, 1172, 1174, 1175, 1178, 1182, 1192, 1194, 1197, 1198, 1212, 1218, 1220, 1229, 1236, 1239, 1414, 1453, 1563, 1594, 1604, 1673, 1700, 1781, 1821, 1824, 1825, 1826, 1827, 1849, 1850, 1852, 1854, 1855, 1863, 1864, 1874, 1875, 1878, 1880, 1882, 1883, 1886, 1891, 1893, 1897, 1898, 1900, 1905, 1906, 1907, 1909, 1914, 1916], "check": [1, 5, 13, 14, 17, 18, 22, 23, 24, 26, 32, 35, 36, 41, 43, 52, 57, 214, 332, 489, 683, 850, 886, 888, 889, 897, 898, 958, 959, 961, 965, 994, 1012, 1169, 1179, 1182, 1197, 1198, 1211, 1212, 1217, 1218, 1220, 1223, 1225, 1230, 1236, 1239, 1243, 1245, 1246, 1271, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1414, 1585, 1594, 1603, 1606, 1619, 1629, 1651, 1652, 1775, 1782, 1783, 1784, 1785, 1786, 1787, 1849, 1850, 1854, 1855, 1856, 1868, 1869, 1874, 1878, 1880, 1881, 1882, 1885, 1886, 1887, 1890, 1893, 1896, 1897, 1898, 1899, 1905, 1909, 1914, 1916, 1920], "inf": [1, 23, 41, 57, 673, 675, 678, 679, 680, 874, 910, 926, 1171, 1172, 1174, 1176, 1177, 1213, 1228, 1234, 1238, 1241, 1251, 1262, 1308, 1404, 1447, 1457, 1563, 1598, 1612, 1621, 1641, 1728, 1735, 1874, 1875, 1881, 1889, 1910, 1916], "nan": [1, 2, 41, 418, 419, 673, 675, 678, 679, 680, 683, 686, 687, 870, 874, 910, 926, 1101, 1102, 1103, 1142, 1171, 1172, 1174, 1175, 1221, 1228, 1241, 1244, 1257, 1262, 1280, 1281, 1285, 1308, 1309, 1310, 1311, 1312, 1513, 1598, 1693, 1730, 1735, 1789, 1823, 1853, 1862, 1874, 1875, 1881, 1889, 1910, 1916], "found": [1, 8, 12, 16, 20, 22, 27, 29, 52, 65, 926, 955, 1034, 1035, 1182, 1186, 1203, 1279, 1282, 1284, 1287, 1310, 1326, 1336, 1359, 1414, 1441, 1735, 1849, 1852, 1855, 1870, 1874, 1880, 1883, 1886, 1888, 1893, 1897, 1899, 1900, 1905, 1914, 1920], "otherwis": [1, 2, 4, 6, 8, 10, 24, 26, 32, 35, 36, 42, 45, 57, 58, 62, 65, 81, 202, 313, 320, 324, 328, 330, 334, 335, 485, 494, 549, 569, 570, 572, 592, 606, 669, 675, 676, 677, 678, 679, 682, 684, 685, 686, 688, 724, 749, 757, 758, 773, 783, 806, 809, 810, 850, 851, 854, 881, 884, 892, 897, 910, 926, 996, 1055, 1061, 1094, 1106, 1173, 1179, 1182, 1185, 1188, 1194, 1203, 1227, 1242, 1251, 1253, 1254, 1269, 1274, 1279, 1281, 1282, 1284, 1286, 1287, 1309, 1312, 1328, 1329, 1348, 1350, 1353, 1354, 1355, 1359, 1366, 1370, 1371, 1372, 1373, 1375, 1384, 1400, 1414, 1418, 1419, 1420, 1421, 1422, 1424, 1429, 1430, 1432, 1445, 1451, 1453, 1456, 1457, 1459, 1461, 1462, 1463, 1481, 1482, 1515, 1517, 1518, 1522, 1557, 1567, 1594, 1601, 1606, 1627, 1631, 1639, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1664, 1666, 1667, 1668, 1669, 1687, 1689, 1697, 1699, 1706, 1715, 1722, 1735, 1743, 1751, 1794, 1795, 1796, 1799, 1831, 1832, 1833, 1837, 1838, 1845, 1849, 1852, 1854, 1855, 1862, 1863, 1868, 1874, 1880, 1881, 1888, 1893, 1901, 1903, 1904, 1905, 1907, 1910, 1911, 1912, 1913, 1914, 1916, 1920], "avoid": [1, 6, 9, 10, 14, 17, 32, 35, 41, 50, 53, 57, 65, 81, 184, 201, 439, 770, 854, 882, 923, 1012, 1182, 1227, 1253, 1349, 1380, 1381, 1405, 1414, 1423, 1428, 1465, 1495, 1525, 1549, 1556, 1594, 1602, 1721, 1750, 1796, 1814, 1832, 1850, 1865, 1869, 1875, 1877, 1878, 1882, 1883, 1886, 1898, 1905, 1906, 1913, 1914, 1915], "corrupt": [1, 35, 52, 1351, 1878, 1888], "param": [1, 2, 39, 41, 44, 52, 57, 59, 61, 65, 753, 784, 1111, 1121, 1182, 1200, 1414, 1420, 1424, 1425, 1593, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1683, 1724, 1853, 1863, 1873, 1874, 1878, 1879, 1896, 1920], "closur": [1, 39, 1659, 1664, 1670], "divid": [1, 6, 33, 35, 39, 230, 572, 573, 574, 972, 1050, 1053, 1073, 1091, 1100, 1144, 1145, 1192, 1330, 1331, 1337, 1338, 1348, 1374, 1375, 1381, 1405, 1406, 1417, 1418, 1419, 1428, 1445, 1446, 1462, 1463, 1485, 1486, 1496, 1497, 1525, 1548, 1556, 1594, 1800, 1843, 1853, 1895], "case": [1, 2, 4, 5, 9, 10, 14, 17, 19, 22, 23, 24, 26, 27, 32, 33, 35, 37, 39, 40, 41, 43, 44, 45, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 143, 147, 189, 344, 486, 489, 669, 749, 773, 780, 783, 809, 810, 812, 815, 847, 854, 882, 890, 892, 896, 911, 913, 949, 955, 980, 1002, 1003, 1022, 1023, 1024, 1055, 1076, 1078, 1086, 1087, 1088, 1103, 1113, 1117, 1122, 1141, 1167, 1180, 1183, 1191, 1194, 1195, 1197, 1211, 1213, 1217, 1218, 1222, 1227, 1228, 1229, 1231, 1237, 1240, 1245, 1247, 1251, 1253, 1254, 1259, 1262, 1271, 1282, 1304, 1322, 1327, 1328, 1329, 1330, 1331, 1342, 1343, 1344, 1346, 1347, 1348, 1350, 1353, 1354, 1355, 1356, 1358, 1359, 1361, 1370, 1371, 1372, 1373, 1374, 1375, 1381, 1382, 1383, 1400, 1405, 1407, 1408, 1409, 1420, 1421, 1422, 1432, 1445, 1451, 1456, 1461, 1463, 1465, 1478, 1496, 1505, 1513, 1517, 1518, 1548, 1550, 1557, 1594, 1596, 1597, 1601, 1603, 1606, 1607, 1640, 1641, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1681, 1719, 1722, 1735, 1737, 1751, 1754, 1800, 1801, 1831, 1835, 1845, 1849, 1855, 1860, 1867, 1868, 1869, 1873, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1886, 1888, 1889, 1891, 1893, 1896, 1897, 1898, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1920, 1921], "modifi": [1, 2, 13, 14, 19, 21, 23, 29, 32, 33, 35, 36, 37, 39, 57, 65, 252, 478, 780, 827, 828, 829, 886, 888, 889, 902, 903, 947, 948, 1135, 1179, 1182, 1185, 1186, 1201, 1357, 1414, 1457, 1459, 1461, 1504, 1505, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1598, 1599, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1664, 1666, 1667, 1668, 1669, 1670, 1673, 1681, 1763, 1852, 1855, 1868, 1874, 1878, 1880, 1881, 1886, 1891, 1897, 1898, 1900, 1905, 1910, 1913, 1915, 1919], "inspect": [1, 2, 14, 16, 35, 57, 65, 905, 1182, 1193, 1874, 1880, 1885, 1897, 1901, 1912, 1920], "between": [1, 2, 3, 4, 8, 14, 15, 17, 23, 28, 29, 33, 35, 41, 42, 52, 53, 54, 57, 64, 65, 189, 503, 572, 573, 574, 576, 577, 596, 606, 678, 679, 680, 684, 685, 749, 761, 762, 763, 791, 846, 854, 873, 882, 884, 891, 893, 894, 895, 897, 898, 930, 942, 954, 958, 965, 967, 1014, 1018, 1032, 1033, 1038, 1055, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1106, 1135, 1142, 1179, 1182, 1193, 1217, 1218, 1240, 1245, 1311, 1330, 1331, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1353, 1354, 1355, 1359, 1361, 1366, 1375, 1381, 1390, 1391, 1392, 1393, 1394, 1395, 1405, 1407, 1408, 1409, 1414, 1417, 1418, 1419, 1423, 1442, 1445, 1446, 1447, 1462, 1463, 1465, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1512, 1537, 1538, 1539, 1553, 1569, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1622, 1623, 1648, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1674, 1675, 1681, 1683, 1692, 1700, 1704, 1705, 1710, 1711, 1715, 1740, 1793, 1794, 1795, 1796, 1800, 1820, 1821, 1837, 1838, 1852, 1854, 1855, 1856, 1862, 1867, 1870, 1874, 1875, 1877, 1878, 1879, 1883, 1884, 1886, 1888, 1890, 1891, 1893, 1896, 1898, 1900, 1901, 1905, 1907, 1909, 1911, 1914, 1918], "simpl": [1, 16, 17, 27, 29, 33, 45, 52, 61, 63, 65, 954, 1012, 1113, 1121, 1122, 1123, 1182, 1186, 1193, 1332, 1333, 1334, 1357, 1387, 1388, 1389, 1414, 1453, 1504, 1649, 1756, 1842, 1849, 1852, 1856, 1870, 1877, 1878, 1879, 1880, 1882, 1883, 1885, 1893, 1897, 1905, 1909], "clip": [1, 57, 950, 1598, 1599, 1853, 1881, 1893, 1895], "util": [1, 8, 14, 18, 23, 28, 53, 57, 58, 64, 65, 721, 724, 727, 728, 729, 734, 735, 745, 749, 753, 779, 787, 972, 1106, 1182, 1366, 1384, 1414, 1429, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1603, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1627, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1675, 1681, 1804, 1805, 1806, 1807, 1808, 1850, 1855, 1865, 1874, 1876, 1877, 1878, 1880, 1882, 1883, 1885, 1886, 1893, 1896, 1897, 1898], "clip_grad_norm_": [1, 57, 1874], "max_norm": [1, 57, 734, 735, 1357, 1358, 1504, 1505, 1598, 1853, 1874], "own": [1, 8, 10, 16, 35, 36, 39, 41, 44, 52, 54, 57, 65, 669, 990, 1089, 1108, 1144, 1182, 1253, 1342, 1343, 1344, 1345, 1346, 1347, 1414, 1603, 1606, 1855, 1871, 1874, 1878, 1897, 1900, 1901, 1905, 1907, 1909], "onc": [1, 2, 8, 10, 13, 14, 17, 20, 27, 32, 33, 35, 36, 37, 39, 41, 42, 44, 45, 52, 57, 60, 62, 64, 65, 886, 887, 888, 890, 892, 1055, 1182, 1186, 1253, 1351, 1414, 1594, 1604, 1606, 1679, 1683, 1699, 1746, 1750, 1852, 1855, 1863, 1865, 1867, 1874, 1875, 1877, 1878, 1880, 1883, 1885, 1886, 1896, 1897, 1914], "assign": [1, 2, 8, 10, 11, 32, 35, 43, 52, 53, 62, 65, 669, 827, 828, 829, 1180, 1183, 1322, 1350, 1414, 1421, 1424, 1425, 1595, 1606, 1852, 1856, 1874, 1880, 1881, 1882, 1893, 1900, 1906, 1907, 1913, 1914], "been": [1, 2, 6, 10, 12, 14, 19, 23, 24, 32, 33, 35, 36, 39, 40, 41, 43, 45, 52, 55, 57, 60, 61, 65, 669, 749, 886, 959, 961, 966, 994, 997, 1054, 1059, 1112, 1185, 1186, 1191, 1196, 1253, 1366, 1373, 1384, 1429, 1478, 1513, 1594, 1603, 1608, 1612, 1614, 1634, 1635, 1648, 1653, 1673, 1674, 1675, 1681, 1683, 1699, 1796, 1844, 1861, 1865, 1867, 1868, 1869, 1874, 1875, 1877, 1878, 1883, 1884, 1886, 1888, 1890, 1892, 1893, 1896, 1897, 1905, 1907, 1909, 1914], "twice": [1, 64, 606, 891, 1119, 1874, 1875, 1882, 1883], "trigger": [1, 8, 10, 13, 14, 19, 20, 23, 35, 52, 57, 64, 214, 1029, 1748, 1874, 1878, 1879, 1885, 1891, 1905], "runtimeerror": [1, 2, 26, 35, 39, 62, 65, 81, 572, 686, 886, 923, 1103, 1157, 1167, 1182, 1211, 1212, 1213, 1221, 1222, 1223, 1225, 1229, 1235, 1242, 1247, 1248, 1274, 1304, 1414, 1650, 1737, 1775, 1835, 1852, 1854, 1855, 1868, 1870, 1874, 1876, 1882, 1890, 1892, 1893, 1900, 1904, 1909, 1912], "spars": [1, 2, 24, 183, 184, 201, 211, 214, 315, 320, 334, 335, 426, 532, 533, 534, 535, 570, 572, 573, 574, 575, 576, 577, 603, 678, 734, 735, 897, 898, 1029, 1124, 1146, 1167, 1254, 1276, 1286, 1314, 1357, 1358, 1447, 1504, 1505, 1530, 1670, 1689, 1737, 1771, 1775, 1782, 1783, 1784, 1785, 1786, 1787, 1792, 1801, 1820, 1835, 1850, 1853, 1857, 1862, 1873, 1889, 1890, 1895, 1902, 1912, 1913, 1916], "place": [1, 4, 8, 17, 20, 22, 24, 32, 33, 35, 37, 42, 43, 57, 60, 61, 65, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 114, 116, 118, 120, 123, 124, 126, 134, 136, 139, 140, 142, 145, 151, 153, 155, 157, 159, 161, 170, 179, 187, 191, 194, 196, 206, 208, 214, 215, 224, 228, 230, 236, 239, 241, 243, 245, 246, 249, 252, 254, 261, 263, 265, 269, 271, 275, 277, 284, 286, 288, 296, 298, 300, 302, 304, 306, 308, 310, 348, 350, 352, 354, 356, 358, 360, 363, 365, 367, 368, 375, 377, 379, 381, 383, 387, 391, 393, 411, 414, 417, 419, 430, 432, 434, 442, 447, 457, 460, 476, 478, 480, 482, 486, 489, 498, 501, 502, 504, 506, 512, 516, 518, 521, 523, 525, 538, 540, 542, 551, 553, 560, 564, 566, 582, 585, 587, 589, 591, 592, 601, 611, 747, 782, 786, 803, 827, 828, 846, 847, 886, 888, 902, 903, 924, 968, 969, 971, 972, 992, 1055, 1106, 1111, 1112, 1120, 1182, 1226, 1244, 1304, 1326, 1336, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1371, 1372, 1373, 1400, 1414, 1431, 1432, 1433, 1434, 1441, 1456, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1517, 1520, 1529, 1560, 1562, 1577, 1581, 1585, 1590, 1591, 1594, 1598, 1599, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1636, 1726, 1728, 1732, 1733, 1734, 1780, 1816, 1850, 1852, 1854, 1855, 1862, 1869, 1874, 1878, 1880, 1885, 1896, 1897, 1898, 1905, 1906, 1911, 1913, 1915], "replac": [1, 2, 12, 16, 22, 26, 32, 33, 35, 37, 51, 53, 57, 59, 60, 61, 62, 63, 65, 112, 412, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 736, 803, 828, 847, 933, 1001, 1055, 1111, 1112, 1187, 1189, 1199, 1271, 1272, 1304, 1308, 1445, 1456, 1585, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1636, 1638, 1699, 1796, 1800, 1823, 1852, 1853, 1855, 1863, 1878, 1881, 1883, 1885, 1888, 1892, 1893, 1895, 1897, 1900, 1916], "were": [1, 2, 3, 4, 14, 19, 22, 23, 29, 35, 43, 52, 55, 57, 62, 64, 65, 143, 313, 327, 462, 843, 878, 880, 882, 896, 1001, 1112, 1123, 1189, 1253, 1478, 1594, 1598, 1603, 1613, 1630, 1666, 1735, 1739, 1810, 1817, 1842, 1854, 1862, 1874, 1878, 1880, 1891, 1893, 1897], "reduc": [1, 3, 4, 14, 15, 19, 23, 26, 33, 35, 36, 37, 39, 57, 313, 503, 506, 507, 675, 682, 684, 685, 686, 688, 808, 809, 810, 811, 814, 816, 863, 864, 942, 969, 980, 1012, 1155, 1234, 1238, 1240, 1245, 1251, 1269, 1279, 1281, 1282, 1284, 1287, 1309, 1310, 1311, 1312, 1330, 1331, 1332, 1333, 1334, 1348, 1350, 1358, 1374, 1380, 1381, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1453, 1462, 1485, 1486, 1494, 1496, 1505, 1521, 1524, 1525, 1526, 1536, 1544, 1545, 1546, 1547, 1548, 1549, 1556, 1567, 1568, 1579, 1582, 1594, 1602, 1639, 1659, 1683, 1697, 1699, 1700, 1734, 1777, 1781, 1794, 1795, 1799, 1800, 1821, 1835, 1837, 1838, 1851, 1853, 1867, 1868, 1875, 1877, 1879, 1880, 1886, 1890, 1891, 1892, 1895, 1896, 1897, 1898, 1900, 1909, 1920], "occur": [1, 14, 16, 19, 23, 24, 32, 35, 45, 46, 52, 57, 62, 189, 307, 1015, 1055, 1179, 1185, 1195, 1225, 1337, 1453, 1497, 1641, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1854, 1865, 1869, 1874, 1875, 1878, 1882, 1889, 1893, 1899, 1905, 1907, 1913, 1916, 1920], "increas": [1, 2, 4, 8, 14, 33, 35, 41, 49, 57, 669, 843, 887, 926, 980, 1012, 1055, 1143, 1144, 1322, 1331, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1426, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1554, 1555, 1563, 1668, 1674, 1675, 1679, 1681, 1683, 1735, 1743, 1821, 1836, 1853, 1861, 1877, 1878, 1884, 1901, 1909], "fill": [1, 17, 35, 147, 166, 250, 251, 252, 278, 309, 313, 369, 392, 436, 437, 438, 440, 445, 472, 597, 612, 913, 1043, 1056, 1058, 1109, 1110, 1212, 1223, 1225, 1358, 1457, 1505, 1551, 1645, 1646, 1708, 1709, 1710, 1711, 1712, 1713, 1800, 1847, 1848, 1851, 1853, 1859, 1869, 1870, 1873, 1878, 1880, 1891, 1895, 1909, 1916], "floattensor": [1, 35, 313, 478, 675, 676, 677, 678, 679, 724, 897, 898, 910, 1129, 1357, 1358, 1417, 1457, 1741, 1912, 1915], "end": [1, 8, 9, 10, 23, 32, 33, 35, 41, 45, 49, 60, 65, 353, 354, 527, 749, 773, 786, 809, 810, 854, 911, 949, 956, 1016, 1045, 1055, 1094, 1108, 1135, 1141, 1142, 1179, 1182, 1202, 1207, 1237, 1247, 1249, 1252, 1254, 1268, 1313, 1314, 1329, 1330, 1331, 1348, 1350, 1356, 1360, 1366, 1367, 1370, 1371, 1372, 1373, 1374, 1375, 1381, 1384, 1385, 1400, 1405, 1408, 1409, 1414, 1416, 1421, 1422, 1425, 1429, 1432, 1442, 1445, 1451, 1456, 1463, 1496, 1505, 1517, 1518, 1594, 1601, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1673, 1678, 1715, 1748, 1751, 1754, 1769, 1821, 1832, 1833, 1845, 1851, 1852, 1853, 1854, 1855, 1867, 1874, 1875, 1878, 1879, 1880, 1882, 1883, 1889, 1892, 1893, 1896, 1899, 1900, 1903, 1905, 1910], "float64": [1, 24, 232, 437, 440, 569, 869, 944, 1098, 1107, 1129, 1164, 1182, 1211, 1217, 1218, 1220, 1222, 1238, 1414, 1563, 1656, 1657, 1693, 1701, 1740, 1741, 1744, 1782, 1783, 1784, 1785, 1786, 1787, 1814, 1840, 1845, 1886, 1889, 1909, 1911, 1912, 1915, 1916, 1921], "variant": [1, 6, 19, 22, 33, 847, 1212, 1223, 1236, 1239, 1311, 1314, 1656, 1657, 1658, 1670, 1823, 1850, 1851, 1885, 1903, 1915], "suppli": [1, 6, 8, 14, 23, 26, 27, 35, 990, 1420, 1652, 1855, 1878, 1909], "won": [1, 9, 14, 17, 23, 33, 37, 52, 60, 449, 1182, 1193, 1414, 1549, 1588, 1589, 1849, 1875, 1880, 1905, 1917], "go": [1, 2, 8, 12, 14, 17, 18, 27, 32, 35, 49, 54, 61, 65, 489, 490, 549, 887, 902, 1254, 1327, 1328, 1329, 1407, 1408, 1409, 1854, 1855, 1862, 1867, 1868, 1869, 1875, 1877, 1878, 1880, 1881, 1885, 1886, 1888, 1892, 1893, 1897, 1912, 1914], "addmm": [1, 22, 99, 1792, 1851, 1853, 1868, 1889, 1895, 1909], "c": [1, 2, 4, 9, 10, 14, 16, 17, 21, 22, 23, 26, 32, 35, 41, 50, 60, 65, 252, 327, 489, 510, 606, 674, 810, 866, 869, 888, 921, 932, 935, 950, 992, 998, 1032, 1047, 1050, 1055, 1101, 1102, 1103, 1112, 1113, 1117, 1122, 1125, 1135, 1182, 1192, 1204, 1211, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1227, 1228, 1231, 1233, 1237, 1238, 1240, 1242, 1244, 1245, 1303, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1350, 1353, 1354, 1355, 1359, 1361, 1362, 1363, 1369, 1377, 1378, 1379, 1382, 1383, 1385, 1386, 1396, 1397, 1398, 1402, 1407, 1408, 1409, 1410, 1411, 1412, 1417, 1418, 1419, 1421, 1426, 1427, 1435, 1436, 1437, 1438, 1439, 1440, 1448, 1453, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1478, 1496, 1497, 1509, 1513, 1548, 1554, 1555, 1563, 1601, 1629, 1631, 1632, 1633, 1640, 1641, 1687, 1703, 1719, 1757, 1777, 1791, 1796, 1816, 1833, 1850, 1851, 1852, 1853, 1854, 1855, 1859, 1868, 1869, 1877, 1878, 1879, 1881, 1883, 1885, 1892, 1894, 1897, 1906, 1907, 1909, 1910, 1913, 1914, 1920], "addmm_": [1, 1853, 1868, 1909], "d": [1, 2, 14, 16, 23, 24, 32, 33, 35, 40, 41, 58, 65, 305, 313, 327, 462, 503, 505, 507, 533, 572, 606, 675, 679, 854, 869, 888, 910, 911, 913, 920, 921, 922, 926, 932, 1042, 1044, 1054, 1055, 1068, 1072, 1073, 1074, 1075, 1080, 1081, 1084, 1085, 1090, 1091, 1092, 1095, 1096, 1097, 1123, 1124, 1139, 1140, 1147, 1156, 1179, 1183, 1187, 1224, 1225, 1275, 1286, 1306, 1321, 1329, 1330, 1334, 1344, 1348, 1349, 1353, 1354, 1355, 1357, 1359, 1361, 1366, 1368, 1379, 1384, 1386, 1398, 1409, 1423, 1429, 1453, 1462, 1463, 1465, 1478, 1513, 1524, 1530, 1557, 1581, 1582, 1602, 1635, 1640, 1641, 1668, 1688, 1706, 1715, 1727, 1735, 1740, 1791, 1796, 1809, 1810, 1816, 1819, 1824, 1825, 1826, 1827, 1836, 1842, 1844, 1849, 1853, 1862, 1868, 1869, 1870, 1873, 1875, 1878, 1880, 1881, 1883, 1884, 1891, 1893, 1905, 1906, 1909, 1910, 1914, 1915], "cannot": [1, 4, 9, 10, 16, 32, 33, 35, 41, 42, 45, 52, 57, 58, 62, 63, 64, 65, 78, 79, 215, 246, 513, 534, 869, 1076, 1078, 1086, 1087, 1088, 1094, 1111, 1179, 1187, 1304, 1337, 1357, 1466, 1497, 1563, 1594, 1650, 1801, 1849, 1852, 1853, 1854, 1855, 1856, 1857, 1865, 1869, 1870, 1875, 1879, 1880, 1891, 1892, 1893, 1900, 1905, 1907, 1909, 1911, 1912, 1920], "best": [1, 2, 8, 14, 15, 21, 27, 29, 32, 35, 41, 53, 57, 60, 850, 851, 906, 929, 942, 1197, 1198, 1227, 1420, 1683, 1850, 1852, 1854, 1867, 1873, 1874, 1875, 1880, 1882, 1897, 1905, 1909], "stabil": [1, 14, 23, 1213, 1269, 1331, 1332, 1333, 1334, 1368, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1450, 1453, 1510, 1571, 1602, 1635, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1670, 1703, 1881], "respect": [1, 2, 6, 9, 35, 36, 39, 41, 50, 52, 57, 63, 64, 65, 189, 202, 478, 569, 592, 678, 679, 680, 749, 784, 808, 830, 874, 880, 882, 896, 898, 902, 903, 937, 954, 1043, 1045, 1046, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1122, 1135, 1182, 1213, 1217, 1218, 1227, 1237, 1240, 1242, 1245, 1254, 1286, 1308, 1330, 1337, 1345, 1346, 1347, 1351, 1366, 1368, 1384, 1414, 1415, 1429, 1459, 1461, 1462, 1463, 1464, 1466, 1504, 1513, 1590, 1591, 1608, 1612, 1614, 1636, 1669, 1683, 1774, 1777, 1800, 1816, 1869, 1874, 1875, 1878, 1880, 1883, 1886, 1887, 1898, 1903, 1909, 1910, 1911, 1916], "describ": [1, 6, 8, 9, 10, 19, 32, 33, 37, 39, 40, 43, 44, 50, 52, 57, 65, 503, 781, 782, 783, 804, 805, 806, 830, 848, 927, 981, 998, 1015, 1055, 1135, 1202, 1242, 1322, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1352, 1353, 1354, 1355, 1356, 1359, 1361, 1362, 1363, 1369, 1372, 1375, 1377, 1378, 1379, 1381, 1386, 1405, 1407, 1408, 1409, 1420, 1421, 1428, 1432, 1445, 1453, 1461, 1462, 1463, 1465, 1496, 1508, 1509, 1518, 1551, 1681, 1821, 1850, 1852, 1854, 1855, 1873, 1874, 1875, 1878, 1879, 1882, 1883, 1885, 1886, 1891, 1893, 1897, 1899, 1900, 1903, 1906, 1907, 1916], "alwai": [1, 6, 8, 26, 28, 32, 33, 35, 50, 54, 57, 61, 65, 332, 439, 449, 783, 869, 887, 890, 896, 911, 920, 930, 936, 1001, 1012, 1042, 1050, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1086, 1087, 1088, 1089, 1091, 1094, 1098, 1139, 1140, 1182, 1192, 1197, 1212, 1217, 1218, 1219, 1220, 1222, 1223, 1235, 1238, 1239, 1240, 1241, 1245, 1247, 1310, 1330, 1332, 1333, 1334, 1351, 1377, 1378, 1379, 1387, 1388, 1389, 1396, 1397, 1398, 1414, 1450, 1453, 1585, 1594, 1627, 1723, 1724, 1750, 1796, 1800, 1832, 1835, 1855, 1856, 1867, 1870, 1875, 1876, 1877, 1878, 1879, 1880, 1883, 1885, 1886, 1897, 1898, 1904, 1905, 1907, 1909, 1912, 1915, 1916], "expos": [1, 2, 9, 18, 35, 39, 57, 64, 65, 784, 1108, 1875, 1878, 1885, 1897, 1900, 1920], "namespac": [1, 65, 1029, 1852, 1856, 1859, 1880, 1886, 1893, 1898, 1903, 1920], "below": [1, 2, 6, 10, 12, 14, 16, 17, 18, 19, 23, 26, 32, 33, 35, 41, 43, 44, 49, 52, 53, 54, 55, 65, 669, 723, 737, 746, 784, 803, 998, 1042, 1043, 1044, 1045, 1046, 1055, 1083, 1085, 1089, 1127, 1135, 1182, 1198, 1238, 1239, 1244, 1251, 1283, 1345, 1346, 1347, 1366, 1368, 1375, 1384, 1386, 1410, 1411, 1412, 1414, 1429, 1445, 1466, 1496, 1522, 1567, 1594, 1606, 1640, 1740, 1780, 1811, 1821, 1824, 1825, 1826, 1827, 1852, 1854, 1855, 1857, 1861, 1862, 1867, 1868, 1874, 1875, 1878, 1879, 1880, 1883, 1884, 1886, 1888, 1890, 1891, 1893, 1896, 1897, 1898, 1900, 1902, 1905, 1906, 1907, 1910, 1913, 1916], "defin": [1, 2, 3, 4, 6, 10, 12, 17, 20, 26, 27, 32, 33, 35, 36, 37, 40, 41, 43, 44, 50, 52, 53, 57, 62, 65, 426, 436, 438, 440, 507, 555, 781, 786, 788, 827, 848, 849, 850, 851, 878, 879, 880, 881, 1012, 1038, 1055, 1056, 1075, 1103, 1109, 1125, 1127, 1141, 1143, 1144, 1171, 1182, 1204, 1211, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1227, 1228, 1231, 1233, 1234, 1238, 1239, 1240, 1242, 1244, 1245, 1251, 1287, 1351, 1356, 1370, 1371, 1372, 1373, 1380, 1382, 1383, 1414, 1420, 1432, 1447, 1449, 1454, 1456, 1478, 1513, 1563, 1569, 1585, 1594, 1612, 1614, 1621, 1622, 1642, 1645, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1675, 1678, 1681, 1699, 1708, 1710, 1712, 1719, 1748, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1777, 1779, 1821, 1824, 1825, 1826, 1827, 1845, 1847, 1849, 1852, 1855, 1857, 1859, 1867, 1868, 1870, 1875, 1878, 1879, 1883, 1884, 1886, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1903, 1905, 1909, 1910, 1915, 1916, 1917, 1920], "unlist": 1, "downstream": [1, 4, 14, 17, 23, 1865], "numer": [1, 14, 23, 32, 41, 58, 63, 676, 782, 897, 898, 926, 1186, 1197, 1198, 1213, 1217, 1218, 1222, 1227, 1235, 1236, 1239, 1242, 1245, 1247, 1269, 1271, 1331, 1332, 1333, 1334, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1447, 1450, 1453, 1504, 1525, 1532, 1563, 1569, 1571, 1602, 1635, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1670, 1703, 1735, 1800, 1850, 1855, 1856, 1860, 1863, 1878, 1880, 1881, 1893, 1900, 1910, 1915, 1921], "stabl": [1, 2, 3, 35, 41, 52, 53, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 865, 1055, 1217, 1218, 1222, 1227, 1235, 1239, 1242, 1245, 1247, 1254, 1331, 1773, 1850, 1853, 1873, 1876, 1890, 1905], "believ": [1, 9], "unstabl": [1, 41, 1217, 1218, 1245, 1262, 1271, 1532, 1800, 1910], "__matmul__": 1, "addbmm": [1, 93, 910, 1853, 1889, 1895], "addmv": [1, 101, 1853, 1868, 1895], "addr": [1, 35, 103, 1853, 1895], "baddbmm": [1, 145, 1853, 1889, 1895], "bmm": [1, 1835, 1851, 1853, 1868, 1870, 1889, 1890, 1895, 1909], "chain_matmul": [1, 1853, 1895], "multi_dot": [1, 932], "conv1d": [1, 697, 701, 704, 714, 730, 1345, 1353, 1390, 1835, 1853, 1895, 1900, 1902], "conv2d": [1, 698, 702, 705, 707, 715, 731, 781, 803, 1182, 1191, 1193, 1197, 1198, 1346, 1354, 1391, 1414, 1415, 1421, 1442, 1465, 1621, 1835, 1852, 1853, 1863, 1893, 1895, 1900, 1902, 1903, 1914, 1919], "conv3d": [1, 699, 703, 706, 708, 716, 732, 1347, 1355, 1392, 1835, 1853, 1895, 1900, 1902], "conv_transpose1d": [1, 1853, 1895, 1902], "conv_transpose2d": [1, 1853, 1895, 1902], "conv_transpose3d": [1, 1853, 1895, 1902], "grucel": [1, 1889, 1900, 1902, 1903], "lstmcell": [1, 1889, 1900, 1902, 1903], "matmul": [1, 3, 15, 24, 922, 942, 1122, 1286, 1465, 1689, 1699, 1743, 1800, 1853, 1868, 1870, 1878, 1889, 1895, 1902, 1909], "mv": [1, 24, 1193, 1835, 1853, 1868, 1895, 1909], "prelu": [1, 1415, 1853, 1895, 1902], "rnncell": [1, 1900, 1902, 1903], "__pow__": 1, "__rdiv__": 1, "__rpow__": 1, "__rtruediv__": 1, "aco": [1, 87, 616, 617, 855, 1851, 1853, 1868, 1895, 1916], "asin": [1, 134, 618, 619, 857, 1851, 1853, 1868, 1895, 1909], "cosh": [1, 196, 626, 627, 673, 1851, 1853, 1868, 1895], "cosine_embedding_loss": [1, 1853, 1895], "cdist": [1, 1878, 1895], "cosine_similar": [1, 1463, 1853, 1895], "cross_entropi": [1, 1853], "cumprod": [1, 206, 1853, 1868, 1895], "cumsum": [1, 208, 1038, 1835, 1853, 1868, 1895], "dist": [1, 33, 35, 36, 39, 41, 53, 57, 933, 934, 1211, 1217, 1218, 1219, 1221, 1222, 1223, 1227, 1228, 1239, 1240, 1243, 1245, 1246, 1269, 1272, 1423, 1453, 1594, 1601, 1800, 1853, 1879, 1895, 1905, 1907], "erfinv": [1, 243, 1853, 1868, 1895, 1909, 1910], "exp": [1, 2, 41, 245, 632, 633, 759, 892, 893, 895, 1098, 1241, 1261, 1269, 1331, 1336, 1350, 1356, 1380, 1403, 1404, 1418, 1428, 1441, 1444, 1446, 1447, 1449, 1450, 1454, 1487, 1533, 1556, 1564, 1565, 1569, 1571, 1574, 1601, 1696, 1757, 1758, 1779, 1796, 1851, 1853, 1868, 1875, 1893, 1895, 1910], "expm1": [1, 249, 634, 635, 1851, 1853, 1868, 1895, 1909, 1910], "group_norm": [1, 1853, 1895, 1902], "hinge_embedding_loss": [1, 1853, 1895], "kl_div": [1, 1853, 1895], "l1_loss": [1, 1853, 1895], "layer_norm": [1, 1386, 1853, 1895, 1902], "log": [1, 13, 14, 17, 20, 23, 26, 32, 33, 41, 43, 45, 46, 49, 50, 54, 368, 369, 642, 649, 669, 1065, 1257, 1259, 1261, 1262, 1269, 1296, 1322, 1330, 1331, 1350, 1368, 1380, 1403, 1404, 1418, 1421, 1428, 1446, 1447, 1450, 1510, 1515, 1525, 1532, 1533, 1548, 1556, 1569, 1571, 1594, 1850, 1851, 1853, 1861, 1865, 1868, 1875, 1878, 1880, 1893, 1895, 1899, 1910, 1914, 1917, 1918, 1919], "log_softmax": [1, 1337, 1380, 1497, 1548, 1569, 1853, 1869, 1895, 1910], "log10": [1, 363, 643, 644, 1851, 1853, 1868, 1895], "log1p": [1, 365, 645, 646, 1851, 1853, 1868, 1895, 1909, 1910], "log2": [1, 367, 647, 648, 1851, 1853, 1868, 1895, 1910], "margin_ranking_loss": [1, 1853, 1895], "mse_loss": [1, 61, 1111, 1853, 1895], "multilabel_margin_loss": [1, 1853, 1895], "multi_margin_loss": [1, 1853, 1895], "nll_loss": [1, 1853, 1895], "norm": [1, 41, 57, 59, 65, 691, 692, 693, 694, 695, 696, 930, 1049, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1213, 1217, 1226, 1227, 1234, 1239, 1251, 1357, 1358, 1405, 1423, 1458, 1459, 1460, 1461, 1462, 1504, 1505, 1549, 1553, 1598, 1602, 1611, 1612, 1617, 1620, 1621, 1635, 1638, 1658, 1720, 1853, 1857, 1874, 1875, 1883, 1886, 1889, 1895], "normal": [1, 2, 33, 39, 52, 57, 65, 328, 343, 369, 445, 545, 954, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1143, 1179, 1182, 1187, 1217, 1259, 1326, 1332, 1333, 1334, 1353, 1354, 1355, 1359, 1369, 1377, 1378, 1379, 1386, 1396, 1397, 1398, 1402, 1441, 1453, 1457, 1458, 1459, 1460, 1461, 1483, 1513, 1514, 1523, 1527, 1531, 1557, 1598, 1599, 1602, 1617, 1625, 1626, 1635, 1638, 1667, 1683, 1703, 1712, 1713, 1720, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1796, 1835, 1849, 1850, 1851, 1852, 1853, 1857, 1868, 1870, 1873, 1875, 1878, 1881, 1893, 1895, 1897, 1902, 1905, 1910, 1914, 1916, 1917, 1921], "pdist": [1, 1423, 1853, 1895], "poisson_nll_loss": [1, 1853, 1895], "pow": [1, 2, 460, 486, 890, 891, 894, 1098, 1851, 1853, 1855, 1868, 1874, 1875, 1895, 1909, 1915], "prod": [1, 49, 313, 507, 1072, 1074, 1077, 1078, 1080, 1081, 1084, 1085, 1087, 1088, 1090, 1092, 1247, 1248, 1357, 1361, 1465, 1835, 1851, 1853, 1868, 1895, 1909], "reciproc": [1, 476, 652, 653, 1730, 1851, 1853, 1868, 1895], "rsqrt": [1, 501, 1851, 1853, 1868, 1895], "sinh": [1, 525, 660, 661, 871, 1851, 1853, 1868, 1895, 1909], "smooth_l1_loss": [1, 1853, 1895], "soft_margin_loss": [1, 1853, 1895], "softmax": [1, 41, 785, 1322, 1350, 1380, 1404, 1448, 1496, 1515, 1525, 1532, 1563, 1570, 1776, 1853, 1868, 1869, 1870, 1878, 1895, 1902, 1909, 1910], "softmin": [1, 1853], "softplu": [1, 41, 1413, 1543, 1853, 1895], "sum": [1, 2, 12, 13, 14, 17, 23, 32, 35, 36, 39, 41, 43, 57, 62, 63, 65, 486, 507, 555, 735, 882, 890, 891, 892, 893, 894, 895, 896, 902, 903, 907, 954, 970, 971, 972, 1037, 1038, 1055, 1115, 1116, 1117, 1122, 1159, 1213, 1234, 1238, 1251, 1259, 1260, 1261, 1269, 1304, 1312, 1330, 1331, 1337, 1347, 1348, 1350, 1351, 1358, 1361, 1368, 1374, 1375, 1380, 1381, 1382, 1383, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1447, 1449, 1462, 1463, 1465, 1485, 1486, 1496, 1497, 1505, 1510, 1515, 1525, 1534, 1535, 1548, 1556, 1569, 1570, 1594, 1617, 1622, 1623, 1641, 1675, 1721, 1759, 1777, 1779, 1819, 1821, 1835, 1850, 1851, 1853, 1855, 1859, 1865, 1868, 1874, 1875, 1878, 1879, 1880, 1881, 1886, 1889, 1893, 1895, 1905, 1906, 1909, 1910, 1915], "renorm": [1, 482, 1357, 1358, 1504, 1505, 1853, 1895], "tan": [1, 564, 664, 665, 872, 1851, 1853, 1868, 1895, 1909, 1914], "triplet_margin_loss": [1, 1853, 1895], "addcdiv": [1, 95, 1853, 1895], "addcmul": [1, 97, 1853, 1895], "atan2": [1, 139, 860, 1851, 1853, 1868, 1895], "bilinear": [1, 768, 774, 775, 1055, 1466, 1467, 1513, 1524, 1582, 1583, 1835, 1853, 1895], "cross": [1, 8, 9, 17, 37, 41, 43, 1330, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1485, 1486, 1496, 1853, 1878, 1892, 1895], "dot": [1, 3, 26, 62, 63, 606, 891, 893, 894, 895, 1034, 1035, 1036, 1037, 1113, 1123, 1159, 1202, 1249, 1250, 1276, 1330, 1331, 1350, 1361, 1374, 1381, 1405, 1420, 1421, 1463, 1563, 1796, 1839, 1840, 1841, 1842, 1853, 1868, 1883, 1895, 1897], "grid_sampl": [1, 1478, 1835, 1853, 1895], "index_put": [1, 1835, 1853, 1895], "scatter_add": [1, 1851, 1853, 1895], "tensordot": [1, 1159, 1247, 1248, 1857, 1878, 1895], "binari": [1, 3, 26, 27, 33, 41, 43, 45, 50, 52, 65, 147, 724, 912, 1275, 1330, 1331, 1420, 1485, 1486, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1649, 1651, 1850, 1856, 1868, 1869, 1885, 1893, 1897, 1914], "nativ": [1, 3, 24, 33, 40, 57, 65, 981, 1112, 1192, 1598, 1599, 1743, 1852, 1855, 1867, 1878, 1880, 1896, 1897, 1905], "intervent": [1, 9, 1905], "mixtur": [1, 41, 1350, 1496], "bceloss": [1, 1331, 1485], "aren": [1, 9, 62, 65, 1112, 1868, 1875, 1906, 1920], "mean": [1, 3, 4, 6, 8, 9, 14, 17, 19, 20, 27, 29, 32, 33, 35, 37, 39, 41, 52, 54, 57, 58, 60, 63, 64, 65, 246, 313, 327, 369, 445, 485, 507, 747, 749, 770, 783, 785, 850, 851, 910, 923, 954, 1111, 1113, 1192, 1282, 1299, 1304, 1309, 1313, 1314, 1320, 1321, 1322, 1324, 1325, 1326, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1348, 1350, 1352, 1356, 1358, 1359, 1360, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1384, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1400, 1401, 1403, 1404, 1405, 1406, 1413, 1417, 1418, 1419, 1421, 1422, 1428, 1429, 1432, 1433, 1434, 1441, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1462, 1463, 1464, 1484, 1485, 1486, 1494, 1496, 1497, 1505, 1506, 1510, 1521, 1522, 1525, 1526, 1530, 1536, 1544, 1545, 1546, 1547, 1548, 1556, 1567, 1568, 1579, 1580, 1594, 1642, 1703, 1712, 1713, 1757, 1777, 1794, 1795, 1801, 1835, 1837, 1838, 1849, 1851, 1852, 1853, 1854, 1865, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1878, 1879, 1880, 1882, 1883, 1886, 1892, 1893, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1905, 1906, 1907, 1909], "doesn": [1, 2, 3, 8, 9, 23, 24, 32, 35, 37, 60, 62, 64, 65, 812, 815, 869, 886, 896, 959, 980, 1112, 1123, 1189, 1195, 1221, 1245, 1253, 1262, 1342, 1343, 1344, 1351, 1380, 1447, 1488, 1489, 1490, 1525, 1569, 1594, 1595, 1617, 1659, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1774, 1777, 1842, 1851, 1852, 1855, 1856, 1868, 1870, 1875, 1876, 1878, 1880, 1881, 1885, 1888, 1892, 1896, 1898, 1906, 1909], "help": [1, 2, 5, 8, 9, 16, 17, 23, 24, 26, 32, 33, 35, 49, 52, 57, 62, 65, 897, 898, 906, 980, 1012, 1112, 1113, 1123, 1182, 1183, 1201, 1283, 1295, 1296, 1353, 1354, 1355, 1359, 1414, 1601, 1750, 1842, 1849, 1855, 1862, 1868, 1869, 1874, 1875, 1876, 1878, 1879, 1881, 1884, 1886, 1889, 1893, 1894, 1897, 1905, 1906, 1909, 1917], "revers": [1, 41, 63, 65, 503, 723, 782, 890, 892, 1073, 1075, 1095, 1115, 1117, 1122, 1249, 1384, 1427, 1555, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1624, 1823, 1836, 1853, 1854, 1855, 1875, 1879, 1881, 1895, 1915], "therefor": [1, 4, 6, 17, 32, 33, 35, 41, 42, 50, 57, 60, 439, 533, 896, 911, 920, 1001, 1089, 1106, 1108, 1111, 1139, 1140, 1194, 1197, 1227, 1240, 1357, 1358, 1465, 1504, 1505, 1513, 1636, 1675, 1855, 1874, 1875, 1878, 1880, 1882, 1885, 1893, 1907], "mani": [1, 4, 8, 12, 14, 16, 17, 19, 22, 23, 24, 26, 32, 33, 35, 41, 52, 57, 61, 62, 65, 81, 394, 669, 878, 880, 890, 892, 1055, 1194, 1337, 1769, 1817, 1824, 1825, 1826, 1827, 1852, 1854, 1868, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1885, 1886, 1889, 1893, 1896, 1900, 1907, 1909, 1912, 1914, 1915, 1917], "sigmoid": [1, 41, 65, 516, 656, 657, 749, 784, 1330, 1331, 1357, 1366, 1367, 1384, 1385, 1443, 1485, 1512, 1566, 1851, 1853, 1868, 1869, 1873, 1894, 1895, 1902, 1910], "right": [1, 3, 8, 10, 14, 18, 21, 35, 37, 41, 57, 65, 809, 854, 911, 918, 920, 921, 926, 931, 1049, 1055, 1096, 1099, 1100, 1104, 1135, 1139, 1140, 1144, 1148, 1179, 1201, 1226, 1231, 1242, 1244, 1245, 1253, 1259, 1260, 1304, 1322, 1327, 1328, 1329, 1330, 1331, 1342, 1343, 1344, 1361, 1368, 1381, 1382, 1383, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1417, 1418, 1419, 1423, 1424, 1430, 1462, 1465, 1466, 1467, 1468, 1513, 1533, 1551, 1599, 1606, 1659, 1673, 1674, 1715, 1735, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1796, 1816, 1821, 1823, 1836, 1849, 1853, 1855, 1867, 1868, 1869, 1875, 1880, 1883, 1893, 1896, 1903, 1907, 1910], "entropi": [1, 41, 1330, 1350, 1418, 1485, 1486, 1496, 1910], "combin": [1, 4, 12, 17, 32, 33, 35, 52, 63, 64, 606, 678, 701, 702, 703, 704, 705, 706, 707, 708, 782, 843, 879, 1012, 1084, 1085, 1090, 1092, 1144, 1276, 1286, 1331, 1361, 1375, 1420, 1465, 1507, 1530, 1613, 1852, 1853, 1854, 1874, 1878, 1881, 1893, 1895, 1896, 1898, 1900, 1903, 1905], "bcewithlogitsloss": [1, 1486], "bcewithlogit": 1, "safe": [1, 14, 17, 23, 35, 52, 64, 65, 1002, 1003, 1022, 1023, 1594, 1656, 1657, 1852, 1855, 1874, 1875, 1878, 1881, 1885, 1905], "_convolut": [1, 1895], "avg_pool3d": [1, 1853, 1895, 1902], "grid_sampler_2d": [1, 1851, 1853, 1895], "_grid_sampler_2d_cpu_fallback": [1, 1895], "grid_sampler_3d": [1, 1853, 1895], "polar": [1, 41, 1241, 1853, 1895], "quantil": [1, 1282, 1311, 1853, 1895, 1910], "nanquantil": [1, 1853, 1895], "stft": [1, 911, 920, 1139, 1140, 1179, 1201, 1853, 1895], "view_as_complex": [1, 24, 1853, 1895], "choleski": [1, 3, 41, 934, 935, 1212, 1218, 1254, 1853, 1895], "cholesky_invers": [1, 3, 1853, 1895], "cholesky_solv": [1, 3, 1853, 1895], "invers": [1, 41, 672, 673, 871, 874, 929, 934, 935, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1179, 1222, 1223, 1235, 1239, 1242, 1247, 1248, 1345, 1346, 1347, 1357, 1358, 1361, 1410, 1411, 1412, 1465, 1504, 1505, 1540, 1541, 1542, 1603, 1606, 1630, 1675, 1681, 1831, 1850, 1853, 1855, 1889, 1895, 1910], "lu_solv": [1, 3, 1229, 1853, 1895], "orgqr": [1, 1853, 1895], "ormqr": [1, 1127, 1221, 1853, 1895], "pinvers": [1, 1227, 1853, 1895], "max_pool3d": [1, 1853, 1895, 1902], "max_unpool2d": [1, 1508, 1538, 1853, 1895], "max_unpool3d": [1, 1509, 1539, 1853, 1895], "adaptive_avg_pool3d": [1, 1853, 1880, 1895, 1902], "reflection_pad1d": [1, 1853, 1895], "reflection_pad2d": [1, 1851, 1853, 1895], "replication_pad1d": [1, 1853, 1895], "replication_pad2d": [1, 1851, 1853, 1895], "replication_pad3d": [1, 1851, 1853, 1895], "ctc_loss": [1, 1337, 1853, 1895], "fft_fft": [1, 1853, 1895], "fft_ifft": [1, 1853, 1895], "fft_fft2": [1, 1853, 1895], "fft_ifft2": [1, 1853, 1895], "fft_fftn": [1, 1853, 1895], "fft_ifftn": [1, 1853, 1895], "fft_rfft": [1, 1853, 1895], "fft_irfft": [1, 1853, 1895], "fft_rfft2": [1, 1853, 1895], "fft_irfft2": [1, 1853, 1895], "fft_rfftn": [1, 1853, 1895], "fft_irfftn": [1, 1853, 1895], "fft_hfft": [1, 1853, 1895], "fft_ihfft": [1, 1853, 1895], "linalg_matrix_norm": [1, 1853, 1895], "linalg_cond": [1, 1853, 1895], "linalg_matrix_rank": [1, 1853, 1895], "linalg_solv": [1, 1853, 1895], "linalg_choleski": [1, 1853, 1895], "linalg_svdv": [1, 1853, 1895], "linalg_eigv": [1, 1853, 1895], "linalg_eigvalsh": [1, 1853, 1895], "linalg_inv": [1, 1853, 1895], "linalg_householder_product": [1, 1853, 1895], "linalg_tensorinv": [1, 1853, 1895], "linalg_tensorsolv": [1, 1853, 1895], "fake_quantize_per_tensor_affin": [1, 1853, 1895], "eig": [1, 1218, 1219, 1245, 1889], "geqrf": [1, 1221, 1687, 1853, 1895], "lstsq": [1, 1127, 1213, 1239], "_lu_with_info": [1, 1895], "qr": [1, 3, 1127, 1217, 1218, 1221, 1227, 1245, 1601, 1687, 1853, 1895], "solv": [1, 8, 14, 18, 24, 935, 1127, 1135, 1213, 1222, 1224, 1225, 1228, 1229, 1231, 1235, 1243, 1244, 1248, 1254, 1272, 1823, 1875, 1883, 1889, 1892], "svd": [1, 3, 24, 1217, 1218, 1227, 1239, 1246, 1262, 1606, 1689, 1801, 1851, 1853, 1889, 1895, 1909], "symeig": 1, "triangular_solv": [1, 1853, 1895], "fractional_max_pool2d": [1, 1853, 1895], "fractional_max_pool3d": [1, 1853, 1895], "adaptive_max_pool3d": [1, 1853, 1895], "multilabel_margin_loss_forward": [1, 1895], "linalg_qr": [1, 1853, 1895], "linalg_cholesky_ex": [1, 1853, 1895], "linalg_svd": [1, 1853, 1895], "linalg_eig": [1, 1853, 1895], "linalg_eigh": [1, 1853, 1895], "linalg_lstsq": [1, 1853, 1895], "linalg_inv_ex": [1, 1853, 1895], "cat": [1, 35, 41, 65, 533, 736, 737, 746, 782, 785, 945, 946, 1283, 1433, 1781, 1851, 1852, 1853, 1868, 1893, 1895, 1897, 1900, 1902, 1909, 1918], "stack": [1, 9, 13, 14, 17, 18, 23, 29, 32, 33, 35, 41, 45, 61, 62, 65, 749, 906, 940, 1016, 1017, 1054, 1121, 1123, 1147, 1283, 1337, 1366, 1384, 1385, 1429, 1458, 1460, 1631, 1842, 1844, 1850, 1853, 1870, 1878, 1879, 1882, 1894, 1895, 1897, 1899, 1902, 1909], "index_copi": [1, 1835, 1853, 1895], "implement": [2, 3, 6, 9, 17, 19, 28, 32, 33, 35, 36, 37, 39, 40, 41, 44, 49, 50, 53, 57, 62, 65, 143, 503, 505, 507, 676, 727, 728, 729, 730, 731, 732, 749, 768, 770, 774, 782, 789, 808, 809, 810, 813, 814, 815, 867, 869, 882, 891, 897, 898, 952, 1055, 1098, 1103, 1108, 1115, 1116, 1118, 1119, 1182, 1189, 1191, 1192, 1195, 1237, 1240, 1253, 1254, 1282, 1322, 1337, 1351, 1366, 1382, 1383, 1414, 1420, 1426, 1433, 1450, 1459, 1461, 1513, 1551, 1563, 1571, 1594, 1598, 1599, 1601, 1602, 1606, 1617, 1630, 1634, 1635, 1638, 1649, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1673, 1675, 1681, 1699, 1706, 1719, 1728, 1731, 1768, 1777, 1800, 1801, 1816, 1832, 1835, 1854, 1855, 1856, 1859, 1862, 1867, 1870, 1871, 1873, 1874, 1875, 1877, 1878, 1880, 1881, 1882, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1896, 1897, 1898, 1900, 1903, 1905, 1906, 1909, 1910, 1913, 1915, 1917, 1920], "scalar": [2, 22, 35, 41, 90, 143, 147, 252, 305, 437, 578, 676, 677, 727, 728, 729, 730, 731, 732, 868, 869, 882, 890, 891, 894, 896, 915, 918, 926, 950, 954, 1050, 1055, 1070, 1103, 1109, 1135, 1142, 1159, 1173, 1206, 1207, 1276, 1283, 1311, 1322, 1330, 1331, 1337, 1348, 1350, 1351, 1368, 1374, 1375, 1380, 1381, 1386, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1463, 1515, 1557, 1640, 1645, 1646, 1650, 1683, 1696, 1698, 1700, 1718, 1719, 1735, 1783, 1784, 1785, 1786, 1787, 1814, 1832, 1833, 1845, 1847, 1848, 1851, 1853, 1854, 1855, 1865, 1870, 1873, 1875, 1880, 1883, 1893, 1905, 1909, 1912, 1914, 1916, 1917], "minim": [2, 8, 9, 14, 23, 808, 864, 1284, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1667, 1668, 1669, 1670, 1683, 1849, 1865, 1874, 1878, 1886, 1888, 1891, 1893, 1898, 1900, 1917], "exist": [2, 8, 9, 10, 12, 24, 26, 32, 35, 36, 37, 41, 43, 45, 50, 52, 53, 57, 61, 65, 246, 489, 781, 843, 867, 890, 891, 892, 893, 894, 895, 896, 897, 996, 1182, 1186, 1197, 1217, 1222, 1228, 1229, 1254, 1311, 1414, 1415, 1424, 1775, 1849, 1851, 1852, 1859, 1862, 1867, 1868, 1870, 1871, 1875, 1876, 1878, 1880, 1881, 1884, 1885, 1886, 1887, 1889, 1893, 1897, 1898, 1899, 1900, 1905, 1907, 1909, 1913, 1915, 1917], "declar": [2, 10, 26, 32, 53, 1854, 1855, 1856, 1880, 1893, 1897, 1898, 1917], "requires_grad": [2, 6, 13, 41, 63, 327, 436, 437, 438, 439, 440, 478, 486, 854, 869, 886, 888, 889, 897, 898, 900, 902, 903, 911, 920, 1001, 1056, 1057, 1058, 1059, 1068, 1073, 1091, 1108, 1109, 1110, 1113, 1123, 1139, 1140, 1157, 1182, 1201, 1252, 1268, 1330, 1331, 1350, 1357, 1358, 1368, 1380, 1381, 1405, 1406, 1414, 1420, 1421, 1428, 1461, 1462, 1485, 1486, 1496, 1548, 1594, 1595, 1596, 1597, 1634, 1639, 1645, 1646, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1745, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1777, 1782, 1783, 1784, 1785, 1786, 1787, 1814, 1835, 1842, 1847, 1848, 1851, 1853, 1857, 1868, 1869, 1870, 1878, 1880, 1881, 1886, 1891, 1893, 1895, 1905, 1906, 1915, 1916, 1917], "doubl": [2, 4, 43, 472, 478, 606, 738, 740, 741, 742, 743, 745, 755, 756, 770, 886, 888, 893, 897, 898, 927, 934, 944, 955, 1001, 1070, 1098, 1135, 1182, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1262, 1263, 1264, 1265, 1266, 1272, 1358, 1414, 1473, 1476, 1505, 1585, 1650, 1687, 1693, 1782, 1783, 1784, 1786, 1787, 1800, 1814, 1823, 1845, 1855, 1868, 1878, 1880, 1881, 1889, 1893, 1897, 1911, 1912, 1915, 1917], "bfloat16": [2, 33, 57, 1164, 1182, 1233, 1250, 1414, 1650, 1656, 1657, 1743, 1868, 1878, 1911, 1912, 1915, 1916, 1917, 1921], "cfloat": [2, 24, 35, 303, 474, 606, 934, 955, 1152, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1272, 1687, 1717, 1800, 1823, 1841, 1912, 1915, 1917], "cdoubl": [2, 24, 934, 955, 1182, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1272, 1414, 1687, 1800, 1823, 1912, 1915, 1917], "beta": [2, 3, 24, 58, 64, 92, 93, 98, 99, 100, 101, 102, 103, 144, 145, 313, 507, 543, 675, 678, 679, 680, 910, 956, 990, 991, 998, 999, 1001, 1139, 1201, 1276, 1286, 1332, 1333, 1334, 1369, 1375, 1377, 1378, 1379, 1386, 1402, 1445, 1450, 1453, 1530, 1531, 1563, 1567, 1571, 1656, 1657, 1658, 1660, 1666, 1670, 1703, 1761, 1763, 1774, 1778, 1792, 1850, 1851, 1853, 1863, 1878, 1893, 1900, 1905, 1909, 1912, 1917], "even": [2, 9, 16, 17, 32, 33, 35, 40, 43, 57, 64, 65, 533, 569, 804, 805, 806, 882, 954, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1086, 1087, 1088, 1091, 1122, 1167, 1194, 1211, 1213, 1217, 1218, 1219, 1220, 1234, 1238, 1240, 1241, 1245, 1246, 1251, 1276, 1282, 1351, 1453, 1488, 1489, 1490, 1551, 1594, 1601, 1639, 1641, 1681, 1728, 1739, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1800, 1840, 1852, 1855, 1856, 1865, 1870, 1874, 1875, 1878, 1880, 1882, 1884, 1886, 1888, 1889, 1890, 1891, 1896, 1897, 1898, 1907, 1912], "though": [2, 35, 65, 143, 783, 879, 882, 892, 1071, 1072, 1074, 1180, 1183, 1276, 1641, 1852, 1856, 1869, 1870, 1875, 1881, 1888, 1889, 1896, 1900], "signatur": [2, 16, 17, 32, 45, 57, 65, 390, 478, 545, 902, 903, 957, 1182, 1414, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1606, 1627, 1641, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1796, 1878, 1880, 1881, 1893, 1897, 1898, 1905, 1909, 1920], "veri": [2, 5, 8, 9, 14, 16, 17, 18, 22, 23, 29, 32, 33, 35, 61, 63, 65, 952, 1113, 1121, 1123, 1244, 1377, 1378, 1379, 1594, 1595, 1601, 1659, 1681, 1687, 1764, 1768, 1823, 1842, 1854, 1867, 1875, 1880, 1882, 1883, 1884, 1886, 1888, 1889, 1892, 1896, 1897, 1904, 1905, 1906, 1909], "unlik": [2, 4, 8, 41, 57, 63, 483, 1052, 1091, 1094, 1098, 1157, 1217, 1218, 1237, 1240, 1245, 1249, 1279, 1282, 1284, 1386, 1596, 1597, 1718, 1740, 1839, 1854, 1855, 1867, 1870, 1878, 1888, 1890, 1912, 1917], "coverag": [2, 8, 16, 58, 65, 1115, 1116, 1850, 1852, 1857, 1869, 1900, 1909, 1920], "plan": [2, 3, 8, 10, 22, 23, 35, 37, 40, 883, 1594, 1699, 1870, 1875, 1880, 1897, 1909], "consid": [2, 6, 9, 22, 33, 35, 43, 52, 57, 62, 64, 65, 683, 768, 774, 783, 890, 892, 893, 897, 935, 954, 1042, 1043, 1044, 1045, 1046, 1076, 1111, 1171, 1175, 1178, 1182, 1222, 1224, 1225, 1226, 1227, 1235, 1236, 1239, 1244, 1247, 1350, 1361, 1414, 1417, 1465, 1478, 1513, 1524, 1582, 1595, 1601, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1636, 1669, 1737, 1757, 1791, 1824, 1825, 1826, 1827, 1849, 1852, 1855, 1859, 1862, 1874, 1875, 1876, 1880, 1882, 1883, 1886, 1889, 1897, 1899, 1901, 1906, 1907, 1909, 1912, 1915, 1916, 1920], "ad": [2, 4, 10, 12, 14, 16, 19, 22, 26, 32, 33, 35, 39, 41, 49, 57, 60, 62, 63, 64, 65, 214, 215, 305, 311, 462, 505, 669, 675, 676, 677, 678, 679, 680, 724, 883, 884, 885, 890, 891, 892, 893, 897, 909, 910, 1055, 1059, 1115, 1116, 1118, 1157, 1182, 1195, 1259, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1420, 1421, 1423, 1428, 1442, 1453, 1457, 1465, 1491, 1492, 1493, 1510, 1537, 1538, 1539, 1563, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1606, 1613, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1639, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1703, 1704, 1705, 1745, 1774, 1778, 1792, 1849, 1850, 1851, 1852, 1854, 1859, 1865, 1869, 1874, 1881, 1883, 1885, 1886, 1897, 1900, 1903, 1909, 1914, 1917], "tutori": [2, 4, 10, 16, 18, 27, 35, 36, 39, 65, 883, 884, 885, 888, 1850, 1852, 1859, 1862, 1871, 1880, 1885, 1886, 1891, 1893, 1900], "how": [2, 4, 6, 8, 9, 10, 16, 17, 18, 27, 28, 32, 35, 37, 40, 44, 52, 53, 54, 57, 58, 59, 61, 62, 65, 478, 774, 781, 782, 785, 830, 848, 850, 851, 883, 884, 885, 888, 902, 903, 1038, 1059, 1112, 1121, 1135, 1157, 1182, 1192, 1253, 1361, 1414, 1465, 1466, 1551, 1582, 1594, 1627, 1639, 1719, 1743, 1745, 1758, 1769, 1850, 1852, 1854, 1855, 1859, 1862, 1864, 1867, 1868, 1869, 1871, 1874, 1877, 1879, 1881, 1882, 1883, 1886, 1888, 1890, 1891, 1893, 1898, 1900, 1903, 1905, 1906, 1907, 1914], "major": [2, 7, 8, 9, 10, 14, 16, 983, 1800, 1850, 1855, 1896], "build": [2, 9, 10, 16, 23, 26, 27, 35, 41, 65, 1182, 1191, 1414, 1460, 1478, 1513, 1850, 1852, 1862, 1871, 1875, 1893, 1898, 1900, 1906, 1914, 1915], "basic": [2, 4, 8, 10, 14, 17, 37, 52, 65, 1115, 1116, 1117, 1188, 1254, 1594, 1675, 1850, 1856, 1871, 1876, 1878, 1879, 1883, 1897, 1906, 1913, 1914], "jacobian": [2, 41, 58, 59, 61, 62, 882, 884, 890, 893, 895, 896, 897, 898, 1116, 1117, 1118, 1122, 1123, 1842, 1875, 1880, 1883], "hessian": [2, 58, 61, 62, 891, 894, 1116, 1117, 1873, 1881], "etc": [2, 4, 6, 13, 17, 24, 32, 33, 35, 41, 43, 52, 53, 57, 848, 849, 850, 1179, 1182, 1350, 1414, 1594, 1648, 1721, 1849, 1854, 1855, 1862, 1880, 1881, 1882, 1886, 1888, 1893, 1896, 1897, 1900, 1905, 1909, 1911, 1914, 1917], "user": [2, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 23, 24, 27, 32, 33, 35, 36, 37, 40, 41, 42, 43, 45, 49, 52, 53, 55, 57, 58, 61, 62, 64, 65, 143, 327, 721, 727, 728, 729, 734, 735, 745, 753, 783, 786, 788, 827, 843, 850, 851, 882, 888, 896, 959, 992, 1106, 1111, 1112, 1182, 1253, 1414, 1457, 1459, 1460, 1461, 1563, 1589, 1594, 1603, 1617, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1849, 1850, 1852, 1854, 1855, 1859, 1862, 1867, 1869, 1870, 1874, 1875, 1876, 1878, 1880, 1883, 1884, 1885, 1886, 1888, 1893, 1894, 1896, 1898, 1899, 1900, 1902, 1905, 1906, 1909, 1913, 1914, 1916, 1920], "lambda": [2, 32, 37, 41, 60, 63, 64, 65, 250, 478, 902, 903, 930, 1113, 1118, 1122, 1123, 1217, 1218, 1219, 1220, 1253, 1370, 1451, 1463, 1553, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1669, 1675, 1677, 1680, 1842, 1856, 1875, 1880, 1881, 1896, 1897, 1905, 1916, 1920], "three": [2, 3, 7, 10, 20, 35, 39, 40, 57, 59, 62, 65, 877, 1053, 1055, 1135, 1144, 1225, 1228, 1229, 1230, 1245, 1273, 1329, 1344, 1347, 1386, 1409, 1563, 1601, 1641, 1675, 1743, 1855, 1875, 1878, 1879, 1880, 1893, 1897, 1898, 1900, 1905, 1907, 1909, 1914], "anoth": [2, 6, 8, 12, 14, 17, 19, 22, 32, 33, 35, 37, 41, 42, 43, 54, 57, 65, 477, 956, 958, 959, 961, 1106, 1191, 1217, 1218, 1221, 1245, 1357, 1358, 1415, 1424, 1585, 1602, 1739, 1852, 1854, 1855, 1861, 1874, 1875, 1877, 1878, 1880, 1886, 1888, 1892, 1897, 1898, 1906, 1907, 1909, 1915, 1917], "constant": [2, 16, 17, 32, 65, 733, 764, 810, 811, 1038, 1095, 1096, 1097, 1179, 1182, 1186, 1197, 1229, 1254, 1339, 1340, 1341, 1358, 1361, 1368, 1423, 1445, 1465, 1510, 1513, 1551, 1602, 1651, 1667, 1672, 1675, 1821, 1853, 1855, 1874, 1880, 1886, 1890, 1893, 1896, 1909], "boolean": [2, 26, 41, 52, 65, 392, 394, 878, 914, 916, 917, 919, 958, 959, 961, 1060, 1126, 1138, 1171, 1172, 1173, 1174, 1175, 1178, 1206, 1254, 1270, 1275, 1315, 1332, 1333, 1334, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1414, 1453, 1563, 1603, 1606, 1699, 1794, 1795, 1818, 1837, 1838, 1854, 1856, 1880, 1912, 1914, 1915, 1916, 1917], "inform": [2, 3, 4, 5, 8, 9, 10, 17, 23, 28, 29, 31, 32, 33, 35, 36, 39, 43, 44, 45, 48, 52, 53, 57, 59, 65, 184, 201, 247, 305, 313, 478, 488, 505, 507, 607, 669, 724, 892, 897, 898, 902, 903, 913, 1059, 1090, 1092, 1112, 1157, 1179, 1182, 1198, 1211, 1218, 1227, 1342, 1343, 1344, 1345, 1346, 1347, 1375, 1384, 1410, 1411, 1412, 1414, 1420, 1429, 1441, 1457, 1459, 1461, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1505, 1524, 1563, 1582, 1583, 1584, 1594, 1627, 1639, 1651, 1698, 1725, 1745, 1750, 1775, 1835, 1852, 1855, 1861, 1862, 1870, 1871, 1875, 1877, 1878, 1879, 1880, 1885, 1886, 1889, 1893, 1894, 1897, 1899, 1900, 1912, 1914, 1915, 1916, 1919, 1921], "relat": [2, 7, 8, 10, 32, 35, 43, 56, 57, 62, 669, 1135, 1221, 1361, 1445, 1465, 1594, 1689, 1870, 1875, 1897, 1905, 1909, 1910, 1916, 1920], "mechan": [2, 9, 35, 46, 50, 52, 65, 868, 1059, 1157, 1182, 1414, 1563, 1639, 1745, 1814, 1850, 1867, 1870, 1879, 1880, 1885, 1886, 1903, 1905, 1906], "confus": [2, 9, 17, 1182, 1414, 1875, 1878, 1897, 1909], "receiv": [2, 8, 10, 17, 23, 32, 35, 39, 41, 62, 64, 1012, 1182, 1414, 1590, 1591, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1684, 1855, 1865, 1867, 1874, 1875, 1888, 1898, 1905, 1906, 1907, 1909], "memori": [2, 3, 4, 6, 14, 16, 18, 20, 22, 24, 33, 37, 39, 41, 42, 57, 61, 65, 143, 148, 163, 165, 168, 171, 172, 173, 188, 199, 202, 232, 246, 259, 289, 317, 323, 329, 331, 332, 385, 436, 437, 438, 439, 440, 449, 454, 477, 489, 490, 513, 514, 569, 592, 606, 723, 752, 867, 869, 882, 888, 897, 898, 924, 939, 956, 957, 960, 963, 964, 966, 980, 981, 990, 991, 994, 998, 1000, 1001, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1019, 1020, 1021, 1025, 1055, 1056, 1057, 1058, 1106, 1107, 1108, 1110, 1111, 1112, 1117, 1119, 1123, 1182, 1199, 1227, 1290, 1291, 1292, 1299, 1358, 1384, 1385, 1414, 1457, 1458, 1459, 1461, 1563, 1581, 1594, 1601, 1627, 1639, 1646, 1648, 1649, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1708, 1709, 1711, 1712, 1713, 1714, 1814, 1835, 1842, 1848, 1850, 1852, 1863, 1867, 1869, 1870, 1875, 1880, 1888, 1893, 1898, 1899, 1900, 1905, 1909, 1911, 1912, 1913, 1915, 1916], "overlap": [2, 14, 22, 32, 33, 35, 39, 57, 65, 867, 897, 898, 1058, 1112, 1179, 1361, 1465, 1594, 1796, 1835, 1878, 1879, 1912], "dens": [2, 39, 211, 534, 535, 572, 573, 574, 575, 576, 577, 911, 920, 1139, 1140, 1201, 1254, 1771, 1774, 1777, 1778, 1781, 1782, 1783, 1784, 1786, 1787, 1792, 1801, 1835, 1870, 1890, 1909, 1912], "stride": [2, 13, 23, 24, 131, 214, 246, 331, 436, 437, 438, 439, 440, 489, 510, 533, 570, 572, 573, 574, 576, 577, 606, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 757, 758, 761, 762, 763, 771, 772, 854, 867, 911, 920, 1056, 1058, 1068, 1073, 1091, 1109, 1110, 1139, 1140, 1146, 1182, 1191, 1195, 1201, 1252, 1268, 1286, 1327, 1328, 1329, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1382, 1383, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1426, 1465, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1507, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1581, 1594, 1645, 1704, 1705, 1708, 1710, 1711, 1712, 1714, 1715, 1722, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1777, 1820, 1825, 1827, 1840, 1847, 1851, 1853, 1856, 1868, 1893, 1895, 1905, 1909, 1911, 1912, 1914, 1915, 1916], "thu": [2, 24, 32, 35, 41, 53, 57, 65, 774, 811, 814, 843, 1055, 1076, 1245, 1276, 1354, 1466, 1582, 1594, 1656, 1657, 1667, 1785, 1852, 1855, 1862, 1863, 1875, 1877, 1882, 1883, 1885, 1886, 1893, 1900, 1905, 1909, 1913, 1915, 1916], "rowmajor": [2, 1594], "contigu": [2, 24, 33, 37, 323, 489, 510, 606, 1360, 1417, 1553, 1594, 1716, 1722, 1800, 1853, 1869, 1870, 1895, 1902, 1909, 1911, 1913], "create_graph": [2, 143, 882, 890, 891, 892, 893, 894, 895, 896, 1853, 1874], "preserv": [2, 32, 41, 57, 65, 489, 768, 774, 843, 865, 868, 1096, 1097, 1112, 1186, 1192, 1415, 1424, 1466, 1524, 1582, 1652, 1731, 1735, 1773, 1814, 1852, 1863, 1868, 1870, 1873, 1878, 1881, 1890, 1893, 1905, 1909, 1912], "guarante": [2, 6, 10, 32, 35, 37, 39, 41, 52, 54, 62, 64, 65, 865, 1182, 1191, 1351, 1414, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1773, 1835, 1875, 1877, 1878, 1889, 1890, 1897, 1899, 1901, 1905, 1907], "preexist": 2, "let": [2, 8, 9, 12, 16, 17, 22, 23, 32, 33, 40, 41, 53, 62, 65, 477, 486, 937, 1135, 1182, 1201, 1211, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1227, 1228, 1231, 1233, 1240, 1242, 1244, 1245, 1414, 1594, 1601, 1814, 1859, 1868, 1869, 1875, 1878, 1879, 1880, 1881, 1886, 1888, 1889, 1890, 1891, 1892, 1897, 1906, 1907, 1909, 1914], "first": [2, 5, 6, 8, 10, 12, 13, 14, 17, 22, 23, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 49, 52, 53, 57, 63, 65, 209, 246, 282, 578, 599, 675, 678, 680, 683, 749, 782, 783, 803, 843, 846, 848, 863, 864, 873, 878, 879, 880, 881, 896, 897, 910, 914, 915, 917, 918, 919, 922, 924, 926, 940, 955, 958, 969, 1043, 1045, 1046, 1047, 1052, 1055, 1060, 1073, 1075, 1094, 1108, 1113, 1114, 1116, 1117, 1118, 1122, 1123, 1126, 1135, 1138, 1146, 1147, 1148, 1159, 1171, 1180, 1189, 1194, 1195, 1201, 1206, 1211, 1214, 1221, 1237, 1240, 1247, 1248, 1250, 1253, 1254, 1270, 1276, 1279, 1282, 1283, 1284, 1286, 1302, 1304, 1310, 1315, 1318, 1322, 1328, 1329, 1335, 1343, 1344, 1346, 1347, 1357, 1358, 1360, 1365, 1366, 1380, 1383, 1384, 1399, 1406, 1408, 1409, 1429, 1442, 1495, 1581, 1585, 1594, 1603, 1604, 1606, 1617, 1627, 1633, 1656, 1657, 1658, 1659, 1660, 1666, 1669, 1674, 1678, 1681, 1683, 1689, 1699, 1700, 1726, 1727, 1735, 1763, 1777, 1780, 1785, 1815, 1816, 1820, 1825, 1827, 1833, 1836, 1839, 1842, 1844, 1849, 1852, 1854, 1855, 1862, 1864, 1867, 1868, 1870, 1874, 1875, 1878, 1880, 1882, 1883, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1898, 1899, 1900, 1905, 1906, 1907, 1909, 1910, 1914, 1918, 1920], "accord": [2, 10, 23, 43, 786, 850, 851, 869, 912, 924, 1053, 1145, 1242, 1275, 1304, 1322, 1358, 1585, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1675, 1681, 1700, 1764, 1788, 1815, 1843, 1855, 1865, 1869, 1870, 1873, 1886, 1890, 1892, 1897, 1907, 1916], "retain": [2, 10, 35, 682, 684, 685, 688, 863, 864, 869, 1186, 1203, 1234, 1238, 1251, 1269, 1279, 1281, 1282, 1284, 1287, 1309, 1310, 1311, 1312, 1641, 1697, 1700, 1731, 1794, 1795, 1799, 1824, 1825, 1826, 1827, 1837, 1838, 1867, 1888], "over": [2, 10, 14, 17, 18, 23, 32, 33, 35, 36, 40, 41, 43, 50, 53, 57, 58, 59, 60, 61, 62, 63, 65, 472, 669, 686, 727, 728, 729, 730, 731, 732, 755, 756, 761, 762, 763, 771, 772, 881, 906, 929, 967, 1012, 1014, 1018, 1032, 1033, 1034, 1035, 1036, 1037, 1055, 1111, 1115, 1117, 1121, 1123, 1135, 1143, 1182, 1197, 1214, 1234, 1238, 1250, 1251, 1253, 1261, 1281, 1283, 1312, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1358, 1361, 1362, 1363, 1369, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1386, 1402, 1405, 1406, 1407, 1408, 1409, 1414, 1417, 1418, 1419, 1421, 1428, 1442, 1445, 1446, 1448, 1453, 1462, 1465, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1508, 1509, 1525, 1531, 1534, 1535, 1537, 1538, 1539, 1548, 1549, 1556, 1563, 1589, 1598, 1638, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1704, 1705, 1720, 1779, 1781, 1794, 1795, 1796, 1799, 1816, 1831, 1837, 1838, 1842, 1855, 1865, 1867, 1868, 1869, 1874, 1876, 1877, 1879, 1880, 1881, 1883, 1886, 1888, 1889, 1896, 1905, 1906, 1909, 1917], "fact": [2, 4, 9, 57, 485, 911, 920, 948, 1135, 1139, 1140, 1217, 1218, 1245, 1852, 1880, 1883, 1893, 1906, 1909], "phase": [2, 14, 23, 33, 782, 1217, 1218, 1681, 1800, 1853, 1892], "recreat": [2, 22, 1875], "everi": [2, 3, 9, 10, 14, 17, 20, 22, 23, 32, 33, 35, 37, 39, 41, 43, 57, 62, 65, 472, 478, 599, 669, 770, 808, 886, 902, 903, 1038, 1055, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1112, 1135, 1144, 1182, 1213, 1227, 1237, 1240, 1271, 1326, 1352, 1353, 1354, 1355, 1359, 1407, 1414, 1447, 1449, 1453, 1499, 1500, 1501, 1506, 1537, 1538, 1539, 1553, 1570, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1602, 1635, 1638, 1639, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1739, 1800, 1833, 1855, 1861, 1865, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1887, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1906, 1907, 1911, 1912, 1914, 1916], "altern": [2, 10, 14, 32, 35, 65, 669, 803, 1115, 1116, 1144, 1189, 1253, 1442, 1459, 1461, 1532, 1594, 1646, 1742, 1835, 1848, 1849, 1856, 1875, 1884, 1886, 1889, 1890, 1892], "never": [2, 6, 8, 33, 35, 52, 53, 214, 215, 785, 868, 930, 1179, 1228, 1229, 1240, 1253, 1594, 1627, 1875, 1878, 1880, 1897, 1898, 1905, 1916], "long": [2, 8, 10, 14, 23, 32, 52, 64, 723, 738, 740, 741, 742, 743, 745, 752, 770, 1112, 1158, 1282, 1287, 1310, 1337, 1350, 1358, 1384, 1385, 1421, 1497, 1650, 1698, 1811, 1815, 1825, 1827, 1832, 1850, 1855, 1862, 1867, 1868, 1869, 1875, 1876, 1878, 1880, 1882, 1888, 1890, 1893, 1897, 1899, 1904, 1911, 1912, 1914, 1915], "hard": [2, 8, 9, 14, 16, 35, 40, 53, 1055, 1254, 1370, 1515, 1516, 1852, 1853, 1854, 1875, 1893, 1897], "matter": [2, 5, 35, 57, 886, 1043, 1055, 1189, 1192, 1197, 1594, 1870, 1875, 1897], "discourag": [2, 1024, 1028, 1875, 1905], "most": [2, 4, 5, 8, 9, 13, 14, 15, 16, 17, 18, 22, 23, 27, 32, 35, 37, 39, 41, 42, 43, 44, 51, 52, 54, 55, 62, 63, 64, 65, 489, 782, 886, 887, 888, 893, 897, 906, 942, 1024, 1038, 1055, 1112, 1157, 1167, 1180, 1183, 1287, 1322, 1461, 1513, 1563, 1594, 1606, 1664, 1775, 1821, 1849, 1852, 1854, 1855, 1857, 1862, 1867, 1869, 1870, 1875, 1878, 1880, 1888, 1889, 1890, 1896, 1899, 1900, 1906, 1907, 1909, 1912, 1914, 1916], "aggress": [2, 14, 1179, 1875, 1905], "buffer": [2, 5, 14, 32, 33, 35, 57, 61, 869, 969, 1001, 1108, 1111, 1121, 1182, 1189, 1192, 1203, 1253, 1332, 1333, 1334, 1351, 1387, 1388, 1389, 1414, 1453, 1587, 1594, 1596, 1603, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1634, 1636, 1649, 1667, 1669, 1731, 1773, 1818, 1854, 1871, 1875, 1879, 1880, 1886, 1891, 1893, 1898], "free": [2, 8, 35, 37, 41, 43, 52, 53, 57, 65, 1007, 1025, 1185, 1197, 1254, 1863, 1873, 1875, 1878, 1880, 1882, 1888, 1892, 1893], "reus": [2, 14, 23, 35, 40, 65, 477, 1851, 1875, 1878, 1905], "make": [2, 3, 4, 5, 6, 9, 14, 16, 18, 19, 21, 22, 23, 26, 27, 32, 33, 35, 37, 38, 40, 41, 43, 44, 49, 52, 53, 54, 55, 61, 62, 65, 132, 215, 486, 768, 774, 850, 851, 882, 933, 934, 935, 958, 959, 961, 1043, 1059, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1095, 1096, 1097, 1157, 1182, 1186, 1191, 1192, 1211, 1212, 1224, 1225, 1226, 1254, 1330, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1375, 1414, 1424, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1513, 1515, 1524, 1563, 1582, 1594, 1601, 1617, 1634, 1639, 1677, 1740, 1773, 1782, 1783, 1784, 1786, 1787, 1818, 1835, 1849, 1852, 1854, 1855, 1859, 1865, 1867, 1868, 1870, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1888, 1890, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1905, 1906, 1907, 1909, 1912, 1914, 1918, 1920], "effici": [2, 3, 4, 9, 24, 32, 41, 57, 58, 63, 143, 749, 882, 887, 896, 932, 1119, 1127, 1199, 1237, 1254, 1273, 1322, 1353, 1354, 1355, 1358, 1359, 1366, 1420, 1426, 1427, 1461, 1563, 1863, 1870, 1875, 1879, 1880, 1883, 1887, 1889, 1896, 1898, 1900, 1905, 1906, 1909, 1912, 1913, 1917], "occas": [2, 8, 1875], "actual": [2, 9, 14, 16, 17, 18, 37, 43, 45, 57, 62, 65, 779, 947, 1073, 1091, 1193, 1197, 1345, 1346, 1347, 1513, 1594, 1618, 1648, 1675, 1849, 1854, 1855, 1868, 1875, 1878, 1879, 1880, 1883, 1888, 1892, 1900, 1905, 1911, 1916], "signific": [2, 4, 16, 19, 37, 1683, 1875, 1878, 1909], "amount": [2, 3, 4, 5, 8, 23, 32, 35, 37, 43, 52, 65, 898, 980, 1006, 1008, 1012, 1179, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1361, 1402, 1417, 1465, 1496, 1611, 1612, 1614, 1615, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1869, 1875, 1877, 1878, 1881, 1882, 1884, 1905, 1909], "heavi": [2, 35, 1875, 1892], "pressur": [2, 1875], "keep": [2, 4, 8, 17, 32, 33, 37, 39, 43, 52, 57, 959, 1253, 1332, 1333, 1334, 1338, 1357, 1377, 1378, 1379, 1423, 1453, 1513, 1524, 1594, 1613, 1652, 1720, 1849, 1850, 1852, 1867, 1869, 1870, 1875, 1878, 1879, 1881, 1882, 1883, 1888, 1894, 1896, 1900, 1905, 1906, 1907], "track": [2, 14, 17, 20, 43, 327, 964, 1004, 1006, 1019, 1020, 1021, 1111, 1112, 1157, 1283, 1332, 1333, 1334, 1377, 1378, 1379, 1387, 1388, 1389, 1396, 1397, 1398, 1453, 1594, 1613, 1865, 1867, 1869, 1870, 1875, 1878, 1880, 1881, 1882, 1885, 1886, 1894, 1896, 1898, 1899, 1906, 1907, 1909], "save": [2, 6, 8, 14, 24, 27, 33, 35, 37, 39, 57, 486, 826, 878, 879, 888, 1119, 1181, 1182, 1187, 1189, 1197, 1199, 1253, 1414, 1594, 1648, 1649, 1671, 1677, 1680, 1684, 1852, 1853, 1864, 1869, 1880, 1881, 1886, 1888, 1890, 1893, 1895, 1896, 1897, 1899, 1909, 1914, 1918], "afterward": [2, 1414, 1585, 1594], "start": [2, 4, 5, 9, 10, 14, 18, 20, 32, 33, 35, 37, 43, 49, 51, 52, 53, 54, 57, 61, 64, 65, 394, 424, 425, 486, 527, 687, 854, 1004, 1006, 1017, 1019, 1020, 1077, 1078, 1094, 1108, 1180, 1194, 1207, 1252, 1268, 1313, 1314, 1322, 1327, 1328, 1329, 1358, 1360, 1407, 1408, 1409, 1415, 1417, 1505, 1551, 1594, 1608, 1612, 1614, 1627, 1653, 1675, 1681, 1715, 1746, 1769, 1782, 1783, 1784, 1786, 1787, 1849, 1850, 1851, 1853, 1854, 1859, 1862, 1867, 1869, 1875, 1876, 1878, 1879, 1882, 1886, 1887, 1888, 1892, 1893, 1896, 1899, 1905, 1906, 1907, 1909], "sure": [2, 8, 10, 14, 16, 23, 32, 35, 37, 42, 44, 53, 55, 60, 65, 850, 851, 882, 1059, 1106, 1157, 1186, 1197, 1198, 1254, 1594, 1639, 1677, 1818, 1855, 1868, 1875, 1879, 1882, 1883, 1892, 1893, 1899, 1900, 1905, 1906, 1907, 1909, 1914], "longer": [2, 23, 35, 54, 61, 62, 676, 879, 897, 898, 1179, 1186, 1594, 1641, 1865, 1875, 1878, 1905, 1907], "find": [2, 8, 14, 17, 18, 22, 23, 26, 35, 52, 62, 65, 1055, 1135, 1203, 1254, 1345, 1346, 1347, 1384, 1651, 1689, 1700, 1735, 1801, 1849, 1863, 1867, 1869, 1875, 1877, 1878, 1879, 1880, 1882, 1883, 1888, 1890, 1893, 1895, 1900, 1905, 1909, 1912, 1914, 1916, 1918, 1920], "quick": [2, 8, 60, 1862, 1886], "guid": [2, 9, 10, 17, 18, 32, 1193, 1850, 1878, 1881, 1897, 1900], "expect": [2, 4, 6, 8, 10, 12, 14, 19, 23, 32, 33, 35, 37, 39, 43, 50, 52, 54, 57, 62, 63, 65, 669, 686, 749, 843, 890, 891, 892, 893, 894, 895, 1001, 1076, 1078, 1095, 1096, 1097, 1116, 1117, 1156, 1179, 1182, 1197, 1198, 1226, 1247, 1248, 1282, 1333, 1334, 1350, 1366, 1367, 1368, 1369, 1378, 1379, 1380, 1384, 1385, 1386, 1396, 1397, 1398, 1414, 1420, 1421, 1429, 1431, 1447, 1453, 1457, 1459, 1461, 1466, 1504, 1510, 1524, 1548, 1556, 1557, 1569, 1582, 1583, 1584, 1585, 1594, 1628, 1684, 1740, 1809, 1840, 1849, 1850, 1857, 1875, 1878, 1879, 1882, 1883, 1886, 1893, 1896, 1897, 1900, 1901, 1902, 1909, 1914, 1916], "var": [2, 17, 23, 45, 50, 52, 55, 1332, 1333, 1334, 1368, 1369, 1377, 1378, 1379, 1386, 1453, 1510, 1703, 1838, 1851, 1853, 1855, 1868, 1895], "detach": [2, 6, 22, 215, 439, 449, 939, 1111, 1182, 1337, 1414, 1497, 1515, 1777, 1814, 1852, 1853, 1868, 1870, 1882, 1893, 1895, 1902, 1909, 1913, 1915], "register_hook": [2, 1868, 1875], "factori": [2, 3, 24, 41, 43, 46, 50, 62, 813, 1055, 1639, 1651, 1739, 1850, 1853, 1869, 1878, 1895, 1912], "ones": [2, 14, 15, 22, 23, 32, 35, 39, 41, 57, 62, 63, 64, 65, 143, 246, 305, 394, 436, 437, 439, 505, 783, 848, 882, 891, 893, 894, 895, 896, 897, 912, 924, 942, 1038, 1046, 1068, 1111, 1118, 1119, 1122, 1157, 1179, 1182, 1193, 1202, 1228, 1244, 1253, 1331, 1357, 1361, 1368, 1369, 1386, 1414, 1418, 1419, 1421, 1423, 1465, 1504, 1563, 1581, 1585, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1631, 1633, 1636, 1646, 1650, 1703, 1720, 1738, 1769, 1817, 1821, 1845, 1853, 1855, 1857, 1868, 1869, 1875, 1876, 1878, 1880, 1887, 1889, 1890, 1893, 1895, 1896, 1897, 1900, 1905, 1907, 1910, 1912, 1915], "autograd_tensor": 2, "base": [2, 4, 8, 10, 13, 14, 15, 16, 17, 26, 27, 32, 35, 36, 37, 39, 40, 41, 43, 45, 50, 52, 53, 54, 57, 62, 65, 70, 780, 785, 789, 791, 809, 810, 811, 813, 814, 850, 851, 888, 909, 942, 954, 1016, 1017, 1053, 1055, 1098, 1135, 1145, 1184, 1195, 1207, 1245, 1256, 1258, 1260, 1268, 1351, 1414, 1417, 1418, 1419, 1423, 1457, 1459, 1461, 1530, 1563, 1594, 1598, 1599, 1601, 1608, 1612, 1614, 1653, 1654, 1655, 1656, 1657, 1658, 1667, 1668, 1669, 1670, 1696, 1706, 1731, 1745, 1800, 1801, 1815, 1825, 1827, 1843, 1850, 1853, 1855, 1877, 1878, 1879, 1880, 1886, 1894, 1898, 1899, 1900, 1905, 1906, 1909, 1910, 1913, 1914, 1916, 1918, 1919], "Then": [2, 35, 53, 65, 1361, 1465, 1603, 1651, 1875, 1876, 1879, 1880, 1881, 1889, 1890, 1893, 1896, 1897, 1905, 1906, 1918], "ctx": [2, 50, 878, 879, 880, 886, 887, 888, 889, 1874, 1880, 1881, 1893], "gradcheck": [2, 898, 1850, 1880], "extend": [2, 32, 35, 37, 41, 44, 54, 65, 850, 879, 881, 888, 1416, 1425, 1850, 1859, 1870, 1875, 1885, 1887, 1888, 1893, 1895, 1897, 1903, 1909, 1920], "staticmethod": [2, 879, 881, 886, 887, 888, 889, 1855, 1874, 1880, 1893, 1905], "save_for_backward": [2, 879, 887, 889, 1874, 1875, 1880, 1881, 1893], "grad_output": [2, 878, 886, 896, 898, 902, 903, 1182, 1414, 1590, 1591, 1851, 1853, 1875, 1878, 1880, 1881, 1886], "saved_tensor": [2, 887, 888, 889, 1874, 1875, 1880, 1881], "avail": [2, 3, 6, 9, 10, 14, 16, 18, 23, 26, 27, 32, 35, 43, 52, 53, 978, 980, 981, 992, 995, 1002, 1003, 1022, 1023, 1025, 1055, 1188, 1245, 1246, 1271, 1457, 1466, 1524, 1563, 1582, 1689, 1743, 1796, 1801, 1835, 1849, 1850, 1852, 1854, 1855, 1859, 1862, 1867, 1875, 1878, 1880, 1884, 1886, 1887, 1890, 1892, 1896, 1897, 1899, 1900, 1901, 1905, 1919, 1920], "cost": [2, 4, 5, 9, 10, 19, 23, 33, 57, 932, 1237, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1563, 1739, 1878, 1890, 1901, 1906, 1912], "cpu": [2, 5, 6, 16, 20, 21, 23, 26, 28, 32, 35, 37, 57, 81, 112, 189, 281, 318, 327, 436, 437, 438, 439, 440, 449, 569, 578, 854, 868, 869, 907, 911, 920, 952, 958, 968, 969, 970, 972, 1056, 1058, 1068, 1073, 1091, 1103, 1108, 1109, 1132, 1133, 1139, 1140, 1182, 1189, 1191, 1192, 1201, 1211, 1213, 1217, 1218, 1219, 1220, 1222, 1224, 1227, 1229, 1230, 1236, 1239, 1242, 1245, 1246, 1252, 1253, 1268, 1271, 1282, 1351, 1357, 1414, 1457, 1578, 1594, 1598, 1599, 1627, 1628, 1642, 1645, 1699, 1708, 1710, 1712, 1714, 1715, 1739, 1744, 1746, 1747, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1768, 1777, 1782, 1783, 1784, 1785, 1786, 1787, 1800, 1814, 1815, 1816, 1825, 1827, 1832, 1835, 1847, 1850, 1852, 1853, 1855, 1859, 1863, 1867, 1868, 1870, 1878, 1881, 1884, 1886, 1888, 1889, 1890, 1892, 1893, 1895, 1898, 1899, 1901, 1904, 1905, 1909, 1911, 1912, 1915, 1916, 1917], "There": [2, 6, 7, 8, 10, 14, 17, 18, 22, 23, 26, 31, 35, 37, 52, 58, 62, 63, 65, 669, 723, 782, 879, 1112, 1351, 1384, 1429, 1563, 1594, 1634, 1639, 1849, 1852, 1854, 1855, 1861, 1862, 1869, 1875, 1878, 1880, 1881, 1882, 1885, 1888, 1892, 1893, 1897, 1900, 1901, 1905, 1907, 1915, 1917], "moment": [2, 17, 20, 761, 762, 763, 950, 1656, 1657, 1658, 1660, 1666, 1670, 1863, 1867, 1870, 1899, 1905], "nvprof": [2, 5, 904, 1878], "regist": [2, 15, 16, 19, 27, 33, 35, 39, 40, 41, 52, 54, 57, 65, 478, 669, 781, 782, 843, 902, 903, 942, 1001, 1182, 1253, 1414, 1415, 1416, 1424, 1425, 1442, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1601, 1602, 1603, 1604, 1606, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1859, 1865, 1867, 1879, 1880, 1885, 1886, 1893, 1897, 1905], "activ": [2, 6, 8, 10, 23, 54, 57, 63, 781, 783, 785, 792, 796, 830, 831, 840, 850, 851, 957, 966, 981, 994, 1012, 1111, 1113, 1123, 1254, 1326, 1353, 1354, 1355, 1359, 1369, 1386, 1413, 1415, 1432, 1443, 1457, 1459, 1461, 1506, 1543, 1566, 1594, 1604, 1605, 1606, 1636, 1641, 1842, 1850, 1851, 1863, 1867, 1878, 1880, 1881, 1886, 1893, 1896, 1898, 1899, 1900, 1901, 1902, 1905, 1909, 1918, 1919], "emit_nvtx": [2, 5], "vtune": [2, 5], "emit_itt": [2, 5], "use_cuda": [2, 1899], "record_shap": [2, 1899], "with_flop": [2, 1899], "profile_memori": [2, 1899], "with_stack": [2, 1899], "with_modul": [2, 1899], "use_kineto": 2, "use_cpu": 2, "experimental_config": [2, 1899], "hold": [2, 17, 35, 50, 52, 54, 55, 57, 61, 64, 65, 526, 1254, 1361, 1415, 1416, 1424, 1425, 1465, 1585, 1594, 1596, 1597, 1603, 1613, 1627, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1782, 1783, 1784, 1785, 1786, 1787, 1876, 1878, 1880, 1882, 1885, 1888, 1896, 1899, 1905, 1906, 1907, 1909, 1911, 1912, 1914, 1915], "summari": [2, 4, 23, 53, 1013, 1748, 1850, 1865, 1914, 1919], "hood": [2, 17, 64, 1867, 1875, 1878, 1879, 1888, 1897, 1907], "record": [2, 6, 14, 23, 39, 44, 45, 46, 50, 53, 64, 65, 436, 437, 438, 439, 440, 486, 808, 809, 810, 811, 814, 816, 854, 911, 920, 958, 959, 961, 1056, 1057, 1058, 1068, 1073, 1091, 1108, 1109, 1110, 1139, 1140, 1182, 1197, 1201, 1252, 1268, 1295, 1296, 1351, 1414, 1645, 1646, 1648, 1651, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1782, 1783, 1784, 1785, 1786, 1787, 1814, 1847, 1848, 1852, 1854, 1870, 1874, 1875, 1878, 1880, 1893, 1894, 1899, 1905, 1914, 1915, 1916, 1917, 1918, 1919], "event": [2, 38, 41, 43, 51, 54, 64, 906, 907, 908, 959, 961, 1012, 1015, 1197, 1198, 1259, 1295, 1296, 1563, 1850, 1865, 1867, 1878, 1899, 1914], "being": [2, 4, 6, 10, 14, 16, 17, 23, 32, 35, 37, 39, 41, 43, 45, 52, 53, 54, 57, 61, 62, 64, 65, 90, 394, 749, 782, 788, 881, 890, 896, 940, 959, 967, 1014, 1018, 1032, 1033, 1068, 1101, 1102, 1112, 1121, 1122, 1171, 1182, 1186, 1271, 1280, 1285, 1330, 1331, 1348, 1350, 1357, 1358, 1362, 1363, 1368, 1374, 1381, 1405, 1406, 1414, 1417, 1418, 1419, 1420, 1421, 1428, 1445, 1446, 1462, 1478, 1485, 1486, 1496, 1508, 1509, 1513, 1525, 1548, 1556, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1620, 1621, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1699, 1700, 1794, 1795, 1796, 1837, 1838, 1852, 1855, 1862, 1865, 1868, 1869, 1870, 1874, 1875, 1878, 1880, 1881, 1882, 1883, 1886, 1888, 1889, 1893, 1897, 1900, 1903, 1905, 1906, 1909, 1916, 1918, 1920], "those": [2, 3, 5, 13, 14, 16, 17, 20, 23, 26, 32, 33, 35, 37, 39, 41, 57, 62, 64, 65, 813, 897, 970, 980, 1043, 1045, 1123, 1197, 1239, 1245, 1253, 1292, 1322, 1330, 1331, 1348, 1350, 1358, 1374, 1381, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1466, 1485, 1486, 1496, 1505, 1525, 1548, 1556, 1651, 1670, 1743, 1800, 1821, 1842, 1854, 1868, 1869, 1874, 1875, 1878, 1880, 1881, 1884, 1886, 1890, 1891, 1893, 1896, 1903, 1905, 1907], "report": [2, 4, 5, 14, 20, 23, 29, 35, 45, 53, 64, 65, 1012, 1115, 1116, 1118, 1874, 1878, 1898, 1909], "runtim": [2, 4, 6, 14, 19, 26, 35, 65, 816, 867, 906, 1053, 1055, 1145, 1182, 1197, 1414, 1596, 1597, 1652, 1695, 1835, 1843, 1855, 1868, 1869, 1875, 1878, 1880, 1888, 1893], "propag": [2, 17, 22, 37, 38, 41, 43, 52, 65, 503, 675, 678, 679, 680, 684, 685, 686, 687, 755, 756, 757, 758, 768, 771, 772, 774, 775, 776, 827, 829, 910, 1101, 1102, 1309, 1781, 1850, 1867, 1868, 1874, 1878, 1880, 1883, 1885, 1905, 1918, 1919], "async": [2, 35, 36, 64, 592, 1594, 1856, 1878, 1885, 1911], "task": [2, 4, 8, 33, 58, 63, 1185, 1200, 1377, 1378, 1379, 1855, 1877, 1885, 1886, 1892], "cuda": [2, 4, 5, 6, 14, 15, 16, 18, 20, 23, 26, 31, 32, 33, 35, 37, 39, 57, 81, 143, 281, 305, 313, 327, 332, 505, 507, 513, 569, 854, 866, 868, 882, 896, 911, 913, 920, 942, 956, 957, 958, 959, 961, 962, 977, 979, 990, 1056, 1057, 1058, 1068, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1109, 1139, 1140, 1182, 1201, 1203, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1236, 1239, 1242, 1243, 1245, 1246, 1252, 1253, 1268, 1271, 1287, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1357, 1384, 1414, 1429, 1453, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1505, 1513, 1524, 1551, 1563, 1582, 1583, 1584, 1585, 1594, 1596, 1597, 1598, 1599, 1640, 1642, 1645, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1699, 1708, 1710, 1712, 1714, 1715, 1739, 1743, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1778, 1782, 1783, 1784, 1785, 1786, 1787, 1800, 1814, 1816, 1825, 1827, 1832, 1835, 1847, 1850, 1853, 1859, 1868, 1870, 1880, 1881, 1886, 1889, 1893, 1895, 1896, 1898, 1899, 1904, 1905, 1911, 1912, 1915, 1916, 1917], "cudaev": 2, "approxim": [2, 4, 33, 39, 52, 65, 1119, 1135, 1245, 1254, 1322, 1364, 1428, 1443, 1450, 1511, 1556, 1566, 1602, 1653, 1689, 1801, 1821, 1851, 1853, 1855, 1878, 1879, 1880, 1883, 1893, 1921], "4u": 2, "about": [2, 9, 10, 12, 14, 17, 18, 19, 23, 28, 32, 35, 36, 39, 43, 45, 49, 51, 53, 58, 62, 65, 247, 488, 607, 897, 898, 963, 964, 980, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1019, 1020, 1021, 1112, 1211, 1218, 1358, 1627, 1681, 1742, 1849, 1852, 1854, 1855, 1859, 1862, 1877, 1878, 1879, 1880, 1882, 1885, 1888, 1889, 1891, 1897, 1899, 1900, 1903, 1906, 1907, 1909, 1913, 1915], "collect": [2, 4, 8, 14, 17, 20, 22, 23, 32, 36, 37, 39, 43, 52, 57, 64, 65, 788, 789, 813, 850, 851, 930, 994, 1056, 1144, 1283, 1594, 1617, 1645, 1708, 1712, 1847, 1850, 1853, 1854, 1855, 1865, 1878, 1879, 1881, 1896, 1899, 1900, 1903, 1907, 1909, 1914, 1916], "group": [2, 4, 10, 12, 14, 23, 32, 33, 36, 37, 39, 43, 49, 52, 53, 54, 55, 57, 60, 65, 599, 669, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 761, 762, 763, 869, 906, 1338, 1342, 1343, 1344, 1345, 1346, 1347, 1369, 1390, 1391, 1392, 1393, 1394, 1395, 1453, 1488, 1489, 1490, 1491, 1492, 1493, 1514, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1833, 1849, 1850, 1851, 1853, 1855, 1867, 1873, 1878, 1879, 1893, 1896, 1897, 1899, 1905, 1914], "prof": [2, 14, 23, 49, 1899], "key_averag": [2, 1899], "group_by_input_shap": [2, 906, 1899], "skew": [2, 4, 5, 1233, 1601], "neglig": [2, 1194, 1743], "bottom": [2, 1513, 1862], "But": [2, 8, 17, 57, 64, 477, 1197, 1227, 1594, 1875, 1880, 1882, 1883, 1897, 1898, 1909, 1913, 1920], "total": [2, 4, 5, 8, 32, 33, 35, 49, 51, 52, 53, 57, 866, 907, 972, 1007, 1012, 1025, 1108, 1143, 1144, 1291, 1337, 1361, 1374, 1381, 1405, 1420, 1465, 1550, 1594, 1598, 1640, 1642, 1644, 1675, 1681, 1721, 1748, 1796, 1849, 1854, 1865, 1878, 1884, 1896], "artifici": [2, 1909], "estim": [2, 4, 32, 41, 950, 954, 1135, 1179, 1332, 1333, 1334, 1364, 1368, 1369, 1377, 1378, 1379, 1386, 1453, 1511, 1602, 1667, 1764, 1899], "flop": [2, 1899], "hardwar": [2, 9, 14, 23, 848, 850, 851, 1217, 1218, 1245, 1835, 1878, 1890, 1901], "matrix": [2, 3, 14, 15, 33, 35, 41, 184, 201, 675, 678, 679, 680, 749, 910, 912, 921, 922, 930, 932, 933, 934, 935, 942, 950, 954, 1038, 1042, 1043, 1045, 1055, 1123, 1127, 1131, 1146, 1202, 1211, 1212, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1251, 1254, 1262, 1271, 1273, 1276, 1286, 1304, 1306, 1357, 1358, 1366, 1384, 1465, 1504, 1505, 1601, 1606, 1635, 1641, 1687, 1688, 1689, 1699, 1743, 1771, 1774, 1777, 1778, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1792, 1800, 1801, 1816, 1819, 1821, 1823, 1824, 1825, 1826, 1827, 1836, 1842, 1850, 1855, 1868, 1869, 1870, 1873, 1877, 1878, 1880, 1883, 1886, 1889, 1899, 1909, 1914, 1915], "2d": [2, 37, 40, 41, 576, 577, 689, 692, 695, 724, 728, 731, 755, 757, 762, 768, 772, 774, 775, 776, 935, 950, 954, 1043, 1055, 1237, 1238, 1320, 1324, 1328, 1332, 1333, 1343, 1346, 1350, 1354, 1358, 1362, 1377, 1378, 1383, 1408, 1417, 1419, 1420, 1421, 1466, 1467, 1468, 1473, 1476, 1478, 1481, 1489, 1492, 1500, 1505, 1508, 1535, 1538, 1548, 1551, 1602, 1635, 1705, 1780, 1785, 1823, 1863, 1873, 1880, 1899, 1900, 1909], "alloc": [2, 5, 24, 29, 33, 37, 41, 43, 52, 246, 323, 436, 437, 438, 439, 440, 477, 957, 959, 961, 963, 964, 966, 979, 980, 981, 1004, 1006, 1008, 1010, 1011, 1012, 1013, 1020, 1021, 1025, 1056, 1058, 1290, 1291, 1292, 1299, 1649, 1708, 1712, 1714, 1739, 1814, 1867, 1870, 1875, 1879, 1884, 1899, 1912], "dealloc": [2, 65, 1108, 1867, 1878, 1882, 1884, 1899], "line": [2, 5, 14, 16, 17, 18, 20, 21, 23, 29, 35, 65, 906, 1055, 1112, 1157, 1182, 1192, 1414, 1478, 1513, 1748, 1775, 1852, 1855, 1856, 1870, 1876, 1880, 1883, 1884, 1890, 1892, 1893, 1899, 1909], "hierarchi": [2, 65, 829, 1186, 1656, 1657, 1856, 1880, 1899, 1900], "callstack": [2, 35, 1899], "torchscript": [2, 4, 9, 16, 39, 65, 606, 1180, 1183, 1185, 1186, 1187, 1188, 1193, 1197, 1199, 1651, 1850, 1856, 1891, 1893, 1899, 1905], "kineto": [2, 1899], "_experimentalconfig": [2, 1899], "librari": [2, 3, 4, 5, 9, 10, 14, 16, 18, 24, 26, 27, 32, 35, 42, 50, 54, 58, 61, 62, 63, 65, 669, 952, 959, 982, 986, 998, 1106, 1194, 1225, 1271, 1768, 1865, 1877, 1878, 1879, 1880, 1881, 1882, 1885, 1886, 1888, 1889, 1892, 1893, 1897, 1899, 1900, 1905, 1920], "compat": [2, 26, 32, 37, 41, 43, 57, 61, 62, 65, 487, 488, 592, 606, 669, 804, 805, 806, 879, 923, 947, 948, 1182, 1187, 1199, 1212, 1223, 1236, 1239, 1414, 1420, 1458, 1459, 1460, 1461, 1524, 1648, 1650, 1722, 1849, 1850, 1854, 1855, 1861, 1867, 1868, 1874, 1880, 1891, 1897, 1899, 1900, 1903, 1905, 1911], "100": [2, 12, 17, 32, 35, 39, 41, 65, 292, 727, 728, 731, 732, 1142, 1182, 1193, 1199, 1237, 1252, 1259, 1268, 1283, 1303, 1322, 1330, 1331, 1332, 1333, 1334, 1343, 1344, 1346, 1347, 1349, 1350, 1377, 1378, 1379, 1414, 1421, 1423, 1453, 1462, 1495, 1496, 1548, 1659, 1671, 1672, 1677, 1678, 1679, 1680, 1682, 1684, 1685, 1701, 1757, 1853, 1855, 1867, 1877, 1878, 1893, 1896, 1901, 1907, 1909, 1914], "realli": [2, 8, 65, 1855, 1875, 1897], "y": [2, 12, 16, 17, 22, 23, 24, 26, 32, 41, 49, 57, 62, 63, 65, 606, 609, 770, 873, 875, 876, 877, 884, 885, 888, 890, 891, 892, 893, 894, 895, 924, 930, 947, 954, 998, 999, 1038, 1049, 1055, 1059, 1111, 1113, 1116, 1117, 1118, 1122, 1123, 1157, 1188, 1193, 1197, 1250, 1259, 1260, 1283, 1330, 1331, 1332, 1333, 1334, 1335, 1348, 1350, 1369, 1374, 1375, 1377, 1378, 1379, 1381, 1386, 1401, 1405, 1406, 1417, 1418, 1419, 1421, 1423, 1445, 1446, 1453, 1456, 1462, 1463, 1484, 1513, 1530, 1553, 1585, 1606, 1639, 1648, 1703, 1721, 1723, 1724, 1745, 1777, 1791, 1817, 1821, 1822, 1842, 1845, 1852, 1853, 1854, 1855, 1868, 1869, 1873, 1875, 1876, 1877, 1878, 1881, 1883, 1884, 1887, 1893, 1897, 1900, 1905, 1907, 1910, 1914, 1917, 1918, 1919], "column": [2, 4, 33, 40, 184, 252, 573, 576, 940, 950, 954, 1038, 1068, 1096, 1097, 1147, 1217, 1218, 1221, 1237, 1240, 1245, 1249, 1254, 1304, 1423, 1465, 1504, 1505, 1601, 1689, 1699, 1780, 1782, 1783, 1784, 1786, 1787, 1800, 1821, 1825, 1827, 1836, 1873, 1883, 1909], "remov": [2, 4, 14, 16, 19, 22, 32, 33, 35, 37, 41, 53, 55, 57, 65, 478, 503, 535, 546, 686, 786, 804, 805, 806, 848, 902, 903, 932, 933, 1001, 1112, 1128, 1179, 1182, 1186, 1271, 1272, 1276, 1414, 1415, 1424, 1515, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1602, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1620, 1621, 1622, 1623, 1625, 1626, 1636, 1641, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1699, 1715, 1737, 1791, 1800, 1823, 1830, 1849, 1850, 1863, 1875, 1886, 1891, 1893, 1895, 1897, 1907, 1911, 1916], "breviti": [2, 65, 1893], "print": [2, 4, 12, 14, 17, 23, 29, 32, 35, 43, 44, 49, 50, 53, 57, 62, 64, 709, 717, 718, 723, 734, 735, 745, 753, 900, 902, 903, 1111, 1112, 1121, 1182, 1186, 1188, 1189, 1193, 1271, 1335, 1338, 1376, 1401, 1414, 1426, 1427, 1495, 1551, 1554, 1555, 1606, 1616, 1617, 1618, 1619, 1622, 1632, 1636, 1648, 1651, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1748, 1849, 1852, 1853, 1875, 1877, 1878, 1880, 1886, 1887, 1893, 1895, 1897, 1899, 1905, 1914, 1915, 1918, 1919], "tabl": [2, 4, 20, 23, 35, 65, 1357, 1504, 1853, 1855, 1880, 1896, 1897, 1899, 1900, 1905, 1909, 1916], "sort_bi": [2, 1899], "self_cpu_time_tot": [2, 1899], "avg": [2, 35, 1654], "mul": [2, 12, 22, 29, 65, 411, 736, 737, 746, 1159, 1305, 1851, 1852, 1853, 1855, 1868, 1870, 1880, 1893, 1895, 1902, 1906, 1909, 1912, 1918], "32": [2, 3, 13, 17, 33, 35, 735, 1108, 1179, 1191, 1271, 1328, 1353, 1354, 1355, 1359, 1360, 1362, 1363, 1383, 1402, 1408, 1419, 1457, 1458, 1459, 1460, 1461, 1478, 1508, 1509, 1515, 1563, 1869, 1870, 1886, 1890, 1893, 1903, 1909, 1912, 1914, 1915], "048m": 2, "200": [2, 23, 39, 1182, 1259, 1414, 1701, 1855, 1909], "27": [2, 606, 1249, 1674, 1696, 1836, 1893], "041m": 2, "powbackward0": 2, "9": [2, 8, 13, 32, 33, 35, 42, 65, 80, 305, 307, 309, 313, 393, 394, 462, 503, 549, 570, 572, 686, 734, 735, 843, 926, 932, 936, 940, 954, 1038, 1053, 1056, 1077, 1078, 1087, 1088, 1098, 1101, 1102, 1105, 1106, 1135, 1145, 1211, 1213, 1234, 1236, 1238, 1249, 1251, 1313, 1314, 1320, 1321, 1324, 1325, 1338, 1357, 1358, 1410, 1411, 1426, 1427, 1436, 1439, 1504, 1505, 1551, 1554, 1555, 1641, 1642, 1654, 1656, 1657, 1658, 1659, 1660, 1666, 1669, 1670, 1671, 1675, 1681, 1683, 1684, 1688, 1692, 1728, 1735, 1744, 1748, 1758, 1763, 1773, 1780, 1788, 1814, 1815, 1819, 1821, 1830, 1836, 1843, 1852, 1856, 1862, 1882, 1886, 1891, 1892, 1893, 1895, 1896, 1897, 1905, 1909, 1910, 1912, 1916], "727m": 2, "55": [2, 1368, 1893], "483m": 2, "accumulategrad": [2, 1875], "148m": 2, "graphroot": 2, "691": 2, "816u": 2, "emit": [2, 26, 44, 49, 65, 669, 1197, 1750, 1855, 1861, 1894, 1904, 1909], "nvtx": [2, 5, 1850], "off": [2, 8, 9, 17, 20, 26, 35, 43, 57, 65, 909, 911, 920, 1016, 1112, 1139, 1140, 1179, 1197, 1245, 1327, 1328, 1329, 1331, 1407, 1408, 1409, 1513, 1551, 1745, 1877, 1878, 1879, 1882, 1885, 1889, 1899, 1900, 1901, 1905, 1906], "o": [2, 23, 33, 35, 36, 41, 53, 54, 55, 65, 1182, 1253, 1295, 1296, 1297, 1385, 1414, 1420, 1594, 1731, 1849, 1856, 1867, 1875, 1878, 1879, 1882, 1892, 1897, 1898, 1905], "trace_nam": 2, "regular": [2, 4, 5, 17, 35, 43, 53, 57, 60, 65, 998, 999, 1111, 1229, 1230, 1337, 1352, 1353, 1354, 1355, 1359, 1399, 1413, 1414, 1415, 1416, 1424, 1425, 1506, 1543, 1585, 1596, 1597, 1636, 1657, 1855, 1869, 1870, 1880, 1881, 1885, 1886, 1893, 1897, 1900, 1903, 1905, 1909, 1910, 1917, 1919], "command": [2, 5, 20, 35, 43, 50, 53, 65, 1878, 1884, 1892, 1898, 1899, 1906], "unfortun": [2, 10, 13, 32, 1594, 1875], "wai": [2, 4, 6, 8, 9, 10, 12, 14, 17, 22, 23, 26, 32, 33, 35, 37, 39, 41, 45, 49, 57, 59, 60, 64, 65, 143, 569, 669, 785, 808, 811, 814, 850, 851, 879, 882, 891, 893, 894, 895, 896, 897, 1076, 1078, 1112, 1135, 1182, 1211, 1212, 1227, 1242, 1330, 1358, 1377, 1378, 1379, 1384, 1396, 1397, 1398, 1414, 1442, 1459, 1461, 1505, 1557, 1594, 1604, 1634, 1674, 1681, 1852, 1854, 1855, 1859, 1861, 1862, 1865, 1867, 1868, 1869, 1875, 1877, 1880, 1881, 1882, 1883, 1886, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1900, 1905, 1906, 1909, 1913, 1915, 1919], "disk": [2, 32, 1731, 1875, 1886, 1897, 1914], "annot": [2, 16, 17, 45, 50, 65, 904, 1180, 1193, 1852, 1854, 1856, 1893, 1905], "wait": [2, 14, 18, 29, 35, 43, 50, 52, 64, 813, 958, 959, 961, 1031, 1185, 1295, 1296, 1301, 1683, 1853, 1855, 1867, 1877, 1878, 1879, 1895, 1899, 1905], "nvidia": [2, 20, 23, 26, 35, 967, 980, 1008, 1014, 1018, 1032, 1033, 1835, 1850, 1878, 1882, 1884, 1890, 1892, 1900, 1917], "visual": [2, 14, 23, 65, 1283, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1407, 1408, 1409, 1465, 1886, 1892, 1899, 1914], "nvvp": 2, "timelin": [2, 5, 1295, 1296, 1899], "load_nvprof": 2, "repl": [2, 16], "append": [2, 17, 22, 35, 64, 65, 222, 246, 596, 750, 752, 754, 1001, 1045, 1047, 1276, 1367, 1385, 1416, 1425, 1431, 1442, 1594, 1853, 1854, 1855, 1875, 1877, 1888, 1892, 1893, 1895, 1914], "size": [2, 3, 4, 8, 13, 14, 23, 29, 32, 33, 35, 37, 41, 43, 52, 57, 60, 65, 131, 201, 214, 234, 246, 247, 305, 307, 313, 331, 436, 437, 438, 440, 478, 483, 488, 489, 490, 503, 505, 507, 510, 533, 534, 535, 555, 570, 572, 573, 574, 576, 577, 595, 596, 606, 607, 679, 680, 682, 684, 685, 686, 688, 709, 717, 718, 724, 730, 731, 732, 734, 735, 745, 753, 755, 756, 757, 758, 768, 774, 775, 776, 785, 847, 854, 866, 867, 869, 881, 890, 891, 892, 893, 894, 895, 906, 910, 911, 913, 920, 922, 923, 924, 925, 926, 933, 934, 935, 936, 954, 955, 957, 963, 969, 970, 972, 1012, 1036, 1037, 1043, 1046, 1053, 1055, 1056, 1057, 1058, 1061, 1072, 1073, 1074, 1076, 1077, 1078, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1108, 1109, 1110, 1117, 1118, 1123, 1124, 1139, 1140, 1144, 1145, 1156, 1159, 1179, 1182, 1203, 1212, 1221, 1226, 1234, 1238, 1242, 1245, 1247, 1248, 1249, 1251, 1252, 1254, 1262, 1268, 1269, 1271, 1272, 1276, 1279, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1304, 1306, 1309, 1312, 1314, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1357, 1358, 1360, 1361, 1362, 1363, 1366, 1368, 1369, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1402, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1426, 1427, 1429, 1435, 1436, 1437, 1438, 1439, 1440, 1445, 1453, 1457, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1491, 1492, 1493, 1496, 1497, 1504, 1505, 1508, 1509, 1513, 1524, 1531, 1537, 1538, 1539, 1548, 1549, 1551, 1554, 1555, 1557, 1563, 1582, 1583, 1584, 1585, 1594, 1617, 1627, 1628, 1629, 1630, 1631, 1633, 1635, 1638, 1640, 1642, 1645, 1646, 1659, 1668, 1687, 1688, 1689, 1690, 1692, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1721, 1726, 1735, 1738, 1757, 1777, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1791, 1793, 1794, 1795, 1796, 1799, 1800, 1801, 1814, 1815, 1816, 1821, 1823, 1831, 1832, 1833, 1834, 1837, 1838, 1840, 1841, 1842, 1843, 1847, 1848, 1850, 1851, 1852, 1853, 1855, 1863, 1865, 1868, 1869, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1890, 1891, 1893, 1895, 1898, 1899, 1900, 1902, 1909, 1911, 1912, 1914, 1915], "arg0": [2, 35], "arg1": [2, 35, 50, 51, 53], "order": [2, 4, 6, 12, 14, 21, 23, 35, 36, 37, 39, 41, 53, 57, 58, 63, 64, 65, 143, 184, 201, 305, 307, 309, 313, 323, 394, 478, 669, 781, 782, 791, 843, 865, 882, 883, 896, 902, 903, 921, 932, 959, 1001, 1012, 1043, 1046, 1047, 1055, 1073, 1075, 1076, 1082, 1094, 1095, 1096, 1097, 1113, 1123, 1135, 1182, 1201, 1212, 1218, 1220, 1227, 1234, 1237, 1238, 1245, 1246, 1249, 1251, 1254, 1283, 1289, 1302, 1304, 1322, 1337, 1351, 1414, 1415, 1424, 1441, 1442, 1478, 1513, 1537, 1538, 1539, 1563, 1585, 1594, 1603, 1613, 1627, 1628, 1629, 1630, 1641, 1659, 1681, 1687, 1690, 1700, 1735, 1738, 1763, 1773, 1800, 1818, 1825, 1827, 1832, 1835, 1836, 1842, 1849, 1850, 1852, 1853, 1855, 1856, 1867, 1868, 1869, 1870, 1873, 1876, 1878, 1879, 1880, 1881, 1883, 1886, 1889, 1893, 1896, 1897, 1898, 1900, 1902, 1905, 1906, 1907, 1909, 1910, 1912, 1916, 1919], "side": [2, 17, 26, 35, 52, 54, 62, 65, 757, 758, 761, 762, 763, 990, 1049, 1071, 1072, 1074, 1077, 1078, 1083, 1085, 1086, 1087, 1088, 1091, 1179, 1180, 1226, 1231, 1242, 1244, 1327, 1328, 1329, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1435, 1436, 1438, 1439, 1440, 1465, 1469, 1470, 1471, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1537, 1538, 1539, 1551, 1675, 1704, 1705, 1735, 1796, 1823, 1849, 1852, 1853, 1855, 1874, 1875, 1878, 1880, 1883, 1905], "creation": [2, 3, 17, 32, 35, 37, 65, 734, 735, 745, 753, 813, 958, 1112, 1594, 1595, 1608, 1852, 1856, 1865, 1867, 1875, 1878, 1905, 1907, 1909, 1915], "warmup": [2, 4, 14, 1001, 1878, 1899], "correl": [2, 41, 53, 950, 1342, 1343, 1344, 1345, 1346, 1347, 1353, 1354, 1355, 1359], "view": [2, 8, 9, 20, 22, 23, 24, 29, 32, 33, 37, 39, 43, 57, 65, 215, 246, 426, 487, 488, 489, 596, 607, 681, 686, 749, 867, 875, 876, 877, 885, 924, 936, 947, 948, 1045, 1046, 1053, 1094, 1095, 1096, 1097, 1112, 1145, 1157, 1182, 1237, 1248, 1296, 1358, 1366, 1384, 1414, 1429, 1465, 1466, 1467, 1468, 1505, 1550, 1590, 1591, 1594, 1598, 1690, 1722, 1726, 1727, 1731, 1737, 1738, 1769, 1788, 1799, 1810, 1815, 1819, 1831, 1840, 1841, 1843, 1850, 1851, 1852, 1853, 1867, 1869, 1870, 1876, 1880, 1895, 1902, 1907, 1909, 1911, 1912, 1915], "difficult": [2, 8, 10, 14, 19, 23, 62, 1123, 1842], "eas": [2, 22, 65, 1877, 1880, 1884], "seq": [2, 594, 749, 929, 941, 1283, 1366, 1384, 1420, 1429, 1457, 1459, 1461, 1630, 1830], "n": [2, 4, 17, 35, 37, 40, 41, 43, 45, 50, 53, 65, 222, 252, 398, 456, 457, 675, 678, 679, 680, 724, 747, 749, 770, 866, 906, 910, 911, 913, 920, 922, 926, 932, 933, 934, 954, 1036, 1037, 1047, 1068, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1115, 1118, 1123, 1135, 1139, 1140, 1144, 1179, 1182, 1193, 1197, 1198, 1201, 1202, 1211, 1212, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1254, 1262, 1271, 1276, 1278, 1283, 1286, 1306, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1374, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1386, 1396, 1397, 1398, 1402, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1423, 1429, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1445, 1447, 1448, 1449, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1478, 1484, 1496, 1497, 1505, 1509, 1513, 1548, 1551, 1553, 1563, 1594, 1601, 1612, 1621, 1640, 1687, 1688, 1689, 1694, 1699, 1700, 1706, 1712, 1714, 1727, 1735, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1777, 1778, 1794, 1795, 1796, 1800, 1801, 1815, 1816, 1821, 1825, 1827, 1836, 1837, 1838, 1839, 1842, 1851, 1853, 1855, 1859, 1868, 1869, 1873, 1875, 1878, 1880, 1882, 1883, 1897, 1899, 1900, 1901, 1909, 1910, 1914, 1915, 1916], "counter": [2, 35, 994, 1012, 1157, 1351, 1865, 1867, 1875], "increment": [2, 35, 52, 1108, 1144, 1186, 1351, 1852, 1854, 1875, 1905], "stash": [2, 6, 1878, 1880, 1898], "tell": [2, 8, 65, 486, 1183, 1189, 1253, 1652, 1852, 1862, 1875, 1880, 1881, 1897], "top": [2, 4, 8, 9, 13, 20, 32, 37, 40, 41, 45, 57, 61, 65, 736, 906, 1330, 1331, 1350, 1374, 1381, 1405, 1421, 1463, 1466, 1513, 1608, 1612, 1614, 1764, 1818, 1856, 1862, 1867, 1880, 1896], "m": [2, 5, 9, 16, 33, 35, 40, 41, 49, 53, 65, 675, 678, 679, 680, 709, 717, 718, 727, 728, 729, 730, 731, 732, 734, 735, 745, 747, 753, 803, 849, 850, 851, 910, 922, 926, 930, 935, 1068, 1121, 1144, 1180, 1182, 1187, 1188, 1192, 1193, 1199, 1202, 1213, 1221, 1227, 1228, 1229, 1230, 1234, 1235, 1236, 1238, 1239, 1240, 1245, 1246, 1247, 1248, 1254, 1271, 1272, 1276, 1286, 1304, 1306, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1362, 1363, 1364, 1365, 1369, 1370, 1371, 1372, 1373, 1376, 1377, 1378, 1379, 1382, 1383, 1400, 1401, 1403, 1404, 1407, 1408, 1409, 1413, 1414, 1421, 1422, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1551, 1553, 1594, 1601, 1606, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1634, 1635, 1638, 1687, 1688, 1689, 1699, 1706, 1735, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1777, 1778, 1796, 1800, 1801, 1816, 1823, 1852, 1853, 1854, 1855, 1878, 1880, 1882, 1883, 1886, 1891, 1900, 1909, 1919], "compar": [2, 4, 6, 20, 26, 32, 57, 65, 683, 854, 865, 896, 1012, 1059, 1060, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1101, 1102, 1126, 1138, 1157, 1171, 1206, 1270, 1280, 1285, 1315, 1420, 1594, 1639, 1745, 1855, 1865, 1878, 1880, 1883, 1889, 1892, 1900, 1901, 1905, 1909, 1914, 1916, 1918, 1919], "down": [2, 8, 23, 26, 32, 41, 43, 50, 51, 53, 57, 65, 768, 1012, 1050, 1097, 1103, 1191, 1227, 1524, 1700, 1728, 1885, 1888, 1893, 1905, 1907, 1914], "irrelev": [2, 4, 1856], "simpli": [2, 4, 14, 19, 26, 32, 41, 45, 53, 64, 65, 852, 1112, 1169, 1180, 1326, 1352, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1852, 1854, 1875, 1881, 1883, 1886, 1887, 1899, 1909], "hand": [2, 5, 17, 35, 57, 62, 65, 1049, 1055, 1180, 1226, 1231, 1242, 1244, 1326, 1424, 1442, 1823, 1835, 1852, 1854, 1855, 1875, 1883, 1886, 1891, 1897, 1909], "underwai": [2, 996, 1878], "up": [2, 7, 8, 9, 10, 13, 16, 17, 18, 19, 23, 26, 32, 33, 35, 39, 41, 43, 45, 49, 51, 52, 54, 55, 60, 65, 768, 774, 879, 998, 999, 1001, 1038, 1055, 1084, 1085, 1090, 1092, 1097, 1112, 1173, 1186, 1191, 1194, 1195, 1240, 1322, 1337, 1361, 1420, 1459, 1461, 1465, 1466, 1478, 1504, 1513, 1524, 1582, 1594, 1670, 1706, 1728, 1832, 1833, 1849, 1852, 1854, 1859, 1862, 1865, 1867, 1868, 1869, 1875, 1876, 1877, 1878, 1882, 1883, 1884, 1886, 1889, 1893, 1897, 1899, 1900, 1905, 1906, 1916], "nonzero": [2, 57, 1179, 1263, 1265, 1266, 1271, 1845, 1851, 1853, 1895], "themselv": [2, 10, 41, 52, 57, 782, 830, 1818, 1878, 1897, 1920], "did": [2, 8, 9, 16, 17, 35, 52, 1311, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1854, 1855, 1883, 1891, 1897], "relationship": [2, 10, 17, 49, 65, 939, 1135, 1463, 1875, 1878, 1891, 1897], "conceptu": [2, 4, 1875, 1881, 1907], "itt": [2, 1899], "intel": [2, 5, 20, 1850, 1892], "r": [2, 17, 23, 41, 63, 143, 878, 880, 882, 896, 897, 930, 941, 950, 1055, 1113, 1115, 1118, 1123, 1124, 1127, 1135, 1193, 1211, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1227, 1228, 1231, 1233, 1240, 1242, 1244, 1245, 1254, 1357, 1358, 1367, 1426, 1427, 1445, 1504, 1505, 1554, 1555, 1601, 1668, 1699, 1842, 1852, 1853, 1854, 1875, 1877, 1880, 1883, 1892, 1912, 1914], "instrument": [2, 4, 33, 1296, 1850, 1885, 1919], "technologi": [2, 1850], "applic": [2, 3, 10, 14, 41, 52, 788, 799, 800, 801, 802, 888, 980, 1117, 1292, 1350, 1351, 1459, 1461, 1496, 1594, 1835, 1850, 1862, 1870, 1875, 1877, 1878, 1879, 1880, 1884, 1885, 1886, 1890, 1893, 1896, 1900, 1905, 1906, 1907, 1909, 1915], "across": [2, 9, 14, 17, 23, 26, 32, 33, 35, 37, 39, 43, 53, 57, 62, 65, 606, 724, 808, 863, 907, 972, 1011, 1012, 1055, 1069, 1123, 1192, 1197, 1283, 1351, 1361, 1402, 1420, 1422, 1453, 1465, 1483, 1515, 1531, 1578, 1594, 1613, 1617, 1641, 1731, 1842, 1850, 1852, 1865, 1868, 1870, 1875, 1879, 1882, 1885, 1886, 1888, 1889, 1890, 1896, 1898, 1901, 1905, 1906, 1911, 1914, 1919], "tool": [2, 5, 9, 10, 14, 16, 18, 23, 29, 35, 53, 65, 850, 905, 1296, 1775, 1849, 1850, 1852, 1854, 1877, 1878, 1892, 1893, 1897, 1899, 1919], "With": [2, 14, 17, 20, 23, 29, 32, 35, 41, 57, 64, 728, 729, 730, 731, 732, 774, 1012, 1076, 1077, 1078, 1086, 1087, 1088, 1198, 1332, 1333, 1334, 1343, 1344, 1346, 1347, 1360, 1377, 1378, 1379, 1453, 1464, 1466, 1489, 1492, 1524, 1549, 1582, 1667, 1710, 1856, 1875, 1878, 1880, 1905, 1909, 1914], "abl": [2, 3, 8, 9, 12, 14, 19, 23, 29, 35, 37, 52, 62, 1112, 1180, 1192, 1457, 1594, 1852, 1859, 1868, 1875, 1880, 1881, 1891, 1893, 1897, 1900, 1905, 1909, 1916], "labl": 2, "gui": 2, "detect_anomali": 2, "check_nan": 2, "engin": [2, 9, 10, 14, 24, 27, 327, 730, 731, 732, 886, 896, 1123, 1706, 1842, 1850, 1875, 1878, 1879, 1880, 1905, 1906], "traceback": [2, 23, 29, 45, 53, 64, 65, 1157, 1167, 1775, 1854, 1855, 1856, 1867, 1870, 1880, 1890, 1909, 1916], "fail": [2, 8, 12, 13, 14, 17, 18, 23, 35, 41, 43, 44, 45, 50, 51, 52, 53, 55, 64, 65, 68, 897, 898, 959, 1012, 1183, 1189, 1192, 1211, 1240, 1245, 1253, 1254, 1271, 1650, 1855, 1857, 1867, 1875, 1878, 1880, 1888, 1889, 1892, 1893, 1897, 1905], "test": [2, 4, 14, 15, 23, 26, 29, 35, 40, 50, 52, 53, 65, 682, 688, 942, 1072, 1074, 1075, 1080, 1081, 1086, 1087, 1088, 1090, 1092, 1168, 1169, 1173, 1174, 1176, 1177, 1651, 1765, 1850, 1852, 1856, 1865, 1867, 1875, 1883, 1890, 1893, 1896, 1914, 1919, 1920], "slow": [2, 897, 1191, 1195, 1211, 1212, 1598, 1599, 1634, 1832, 1883, 1888, 1914], "myfunc": [2, 1881], "inp": [2, 32, 35, 65, 883, 884, 885, 1465, 1594, 1851, 1920], "clone": [2, 27, 32, 57, 246, 439, 886, 889, 900, 902, 903, 924, 1186, 1357, 1581, 1814, 1823, 1851, 1853, 1867, 1870, 1891, 1895, 1899, 1909, 1911, 1912, 1916], "run_fn": [2, 6, 846, 852], "10": [2, 12, 13, 14, 16, 17, 18, 23, 31, 32, 33, 35, 36, 41, 42, 52, 54, 305, 313, 327, 462, 503, 549, 570, 572, 573, 574, 674, 675, 686, 723, 734, 735, 749, 750, 751, 752, 754, 910, 922, 932, 934, 935, 936, 940, 954, 1034, 1035, 1036, 1037, 1038, 1053, 1055, 1072, 1074, 1077, 1078, 1080, 1081, 1084, 1085, 1087, 1088, 1090, 1092, 1098, 1106, 1125, 1135, 1145, 1171, 1187, 1192, 1193, 1199, 1204, 1207, 1234, 1236, 1237, 1252, 1254, 1256, 1261, 1263, 1264, 1265, 1266, 1268, 1276, 1287, 1304, 1320, 1321, 1322, 1324, 1325, 1331, 1334, 1337, 1338, 1341, 1344, 1347, 1357, 1358, 1366, 1367, 1368, 1369, 1379, 1384, 1385, 1386, 1411, 1415, 1416, 1421, 1424, 1425, 1429, 1431, 1453, 1457, 1458, 1459, 1460, 1461, 1465, 1471, 1490, 1493, 1497, 1504, 1505, 1515, 1585, 1594, 1617, 1625, 1639, 1642, 1651, 1655, 1675, 1681, 1683, 1701, 1702, 1710, 1735, 1748, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1773, 1788, 1800, 1801, 1811, 1815, 1816, 1819, 1821, 1835, 1843, 1849, 1852, 1853, 1854, 1855, 1856, 1862, 1875, 1878, 1879, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1909, 1910, 1912, 1914, 1915, 1916, 1921], "last": [2, 6, 7, 12, 23, 24, 32, 33, 36, 39, 40, 41, 52, 64, 65, 307, 606, 681, 749, 866, 911, 920, 926, 936, 998, 1038, 1043, 1047, 1072, 1074, 1077, 1078, 1080, 1081, 1084, 1085, 1087, 1088, 1090, 1092, 1094, 1139, 1140, 1144, 1157, 1159, 1167, 1179, 1203, 1237, 1240, 1245, 1282, 1287, 1322, 1335, 1350, 1358, 1360, 1366, 1384, 1386, 1401, 1421, 1424, 1428, 1429, 1442, 1458, 1459, 1465, 1484, 1505, 1514, 1527, 1550, 1551, 1594, 1595, 1640, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1726, 1735, 1773, 1775, 1782, 1783, 1784, 1786, 1787, 1788, 1796, 1800, 1816, 1818, 1821, 1840, 1841, 1854, 1855, 1865, 1868, 1870, 1875, 1878, 1880, 1883, 1890, 1893, 1897, 1898, 1909, 1915, 1916], "stdin": [2, 1157, 1775, 1870, 1880, 1890, 1909], "instal": [2, 4, 12, 17, 19, 26, 27, 35, 65, 1849, 1886, 1887, 1893, 1897, 1905, 1914], "_tensor": [2, 147], "py": [2, 5, 12, 13, 14, 16, 17, 20, 22, 23, 26, 29, 35, 39, 41, 44, 51, 53, 57, 65, 849, 1594, 1849, 1852, 1855, 1861, 1879, 1883, 1885, 1893, 1897, 1900, 1906], "93": [2, 606], "retain_graph": [2, 143, 882, 896, 902, 903, 1123, 1842, 1853, 1874, 1875, 1905], "90": [2, 1039, 1685, 1727], "allow_unreach": 2, "76": 2, "_forward_cl": 2, "tmp": [2, 4, 26, 35, 50, 52, 1849, 1878, 1899], "53": [2, 472], "44": [2, 13, 313, 436, 1058, 1329, 1409, 1634], "set_detect_anomali": 2, "behaviour": [2, 682, 683, 688, 955, 1513, 1551, 1681, 1750, 1849, 1889, 1911], "interpos": 2, "grad_fn": [2, 143, 327, 869, 882, 890, 891, 892, 893, 894, 895, 900, 902, 903, 1111, 1602, 1777, 1875, 1886, 1891], "node": [2, 14, 20, 22, 23, 35, 39, 43, 45, 51, 52, 57, 65, 78, 79, 808, 809, 810, 813, 814, 815, 1001, 1121, 1196, 1337, 1351, 1594, 1651, 1863, 1878, 1893, 1894, 1897, 1898, 1905, 1906, 1907, 1917, 1919], "grad_mod": [2, 1853], "intermediari": [2, 26, 41, 888, 1875, 1883], "access": [2, 10, 14, 16, 19, 29, 32, 35, 37, 57, 64, 546, 723, 888, 965, 1182, 1185, 1197, 1244, 1322, 1414, 1585, 1596, 1597, 1602, 1606, 1628, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1850, 1852, 1853, 1855, 1856, 1859, 1863, 1866, 1867, 1869, 1870, 1875, 1878, 1882, 1883, 1885, 1886, 1905, 1909, 1912, 1913, 1915, 1921], "isinst": [2, 22, 23, 32, 41, 65, 900, 902, 903, 1169, 1180, 1853, 1855, 1875, 1880, 1886, 1897, 1909], "dir": [2, 998, 1651, 1849, 1855, 1897], "__call__": [2, 1182, 1414], "__class__": 2, "__delattr__": 2, "__dir__": 2, "__doc__": 2, "__eq__": 2, "__format__": [2, 1856], "__ge__": 2, "__getattribute__": 2, "__gt__": 2, "__hash__": [2, 1856], "__init_subclass__": 2, "__le__": 2, "__lt__": [2, 1855], "__ne__": 2, "__new__": [2, 1854, 1856], "__reduce__": [2, 1897], "__reduce_ex__": 2, "__repr__": [2, 4, 1880], "__setattr__": 2, "__sizeof__": 2, "__str__": [2, 65, 1853, 1855], "__subclasshook__": 2, "_raw_saved_result": 2, "_register_hook_dict": 2, "_saved_result": [2, 1875], "metadata": [2, 4, 22, 37, 45, 46, 1253, 1731, 1870, 1875, 1880, 1881, 1891, 1897, 1899, 1905, 1906, 1914], "next_funct": 2, "register_prehook": [2, 1875], "allclos": [2, 62, 63, 65, 897, 898, 998, 1077, 1078, 1084, 1085, 1112, 1113, 1115, 1116, 1117, 1118, 1122, 1123, 1229, 1231, 1242, 1244, 1247, 1248, 1273, 1606, 1633, 1699, 1842, 1853, 1881, 1895], "pack": [2, 39, 727, 728, 729, 730, 731, 732, 734, 735, 749, 770, 1197, 1198, 1273, 1351, 1366, 1384, 1429, 1627, 1628, 1629, 1630, 1853, 1863, 1870, 1875, 1882, 1892, 1900], "unpack": [2, 749, 885, 1197, 1229, 1273, 1351, 1630, 1632, 1639, 1652, 1855, 1856, 1875, 1880, 1882], "common": [2, 4, 9, 17, 19, 22, 23, 32, 43, 52, 62, 674, 782, 854, 915, 918, 923, 949, 1050, 1055, 1100, 1101, 1102, 1103, 1125, 1204, 1253, 1303, 1332, 1333, 1334, 1337, 1453, 1495, 1586, 1587, 1589, 1590, 1591, 1592, 1593, 1719, 1731, 1797, 1850, 1855, 1860, 1869, 1875, 1878, 1880, 1881, 1882, 1886, 1888, 1891, 1893, 1897, 1909, 1910, 1913, 1916], "trade": [2, 6, 9, 57, 1245, 1331, 1877, 1882, 1901], "leav": [2, 9, 17, 43, 53, 143, 882, 1187, 1199, 1604, 1607, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1791, 1852, 1854, 1855, 1875, 1897, 1901], "especi": [2, 10, 14, 15, 16, 17, 24, 32, 35, 65, 246, 924, 942, 1581, 1854, 1875, 1880, 1881, 1889, 1891, 1900, 1905, 1909], "notic": [2, 19, 35, 678, 1075, 1089, 1276, 1286, 1330, 1466, 1530, 1672, 1673, 1678, 1679, 1685, 1850, 1852, 1875, 1909], "fit": [2, 10, 23, 44, 61, 62, 489, 906, 1179, 1659, 1721, 1898, 1916], "evalu": [2, 5, 9, 10, 21, 39, 40, 41, 60, 65, 682, 688, 787, 852, 897, 1012, 1118, 1119, 1182, 1322, 1326, 1332, 1333, 1334, 1352, 1369, 1377, 1378, 1379, 1386, 1414, 1428, 1432, 1453, 1556, 1578, 1604, 1659, 1675, 1706, 1855, 1856, 1880, 1886, 1909, 1917], "saved_tensors_hook": [2, 888, 1875], "pack_hook": [2, 1875], "unpack_hook": [2, 1875], "pair": [2, 14, 35, 37, 40, 41, 52, 54, 606, 724, 854, 930, 954, 1089, 1195, 1245, 1283, 1406, 1415, 1420, 1424, 1553, 1668, 1715, 1854, 1855, 1861, 1868, 1875, 1878, 1898, 1905, 1906, 1907, 1914, 1916, 1919], "retriev": [2, 17, 32, 33, 35, 39, 43, 52, 65, 526, 878, 879, 1357, 1361, 1465, 1504, 1594, 1628, 1651, 1775, 1870, 1875, 1885, 1893, 1897, 1898, 1905, 1906, 1907], "everytim": 2, "store": [2, 4, 6, 16, 17, 26, 29, 33, 37, 43, 53, 57, 65, 318, 324, 390, 675, 811, 814, 879, 922, 968, 970, 972, 1127, 1182, 1189, 1192, 1212, 1223, 1224, 1225, 1254, 1259, 1271, 1333, 1357, 1414, 1442, 1594, 1601, 1603, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1627, 1780, 1849, 1850, 1852, 1869, 1870, 1871, 1879, 1880, 1881, 1882, 1885, 1897, 1900, 1905, 1906, 1907, 1909, 1911, 1914, 1915, 1919], "content": [2, 4, 8, 19, 23, 37, 45, 65, 888, 1189, 1192, 1212, 1223, 1225, 1230, 1243, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1791, 1820, 1849, 1855, 1864, 1867, 1875, 1905, 1913, 1914, 1915], "equal": [2, 22, 33, 35, 41, 52, 53, 54, 65, 252, 489, 534, 606, 669, 683, 684, 685, 728, 729, 730, 731, 732, 749, 757, 758, 809, 810, 811, 814, 850, 865, 911, 920, 931, 932, 944, 954, 970, 972, 1025, 1044, 1060, 1099, 1113, 1114, 1126, 1139, 1140, 1142, 1143, 1144, 1167, 1171, 1206, 1227, 1240, 1244, 1247, 1248, 1271, 1272, 1283, 1299, 1315, 1319, 1320, 1321, 1323, 1324, 1325, 1330, 1331, 1337, 1343, 1344, 1346, 1347, 1351, 1358, 1361, 1362, 1363, 1366, 1368, 1384, 1419, 1420, 1428, 1429, 1465, 1481, 1482, 1486, 1489, 1492, 1504, 1505, 1508, 1509, 1515, 1594, 1628, 1631, 1687, 1700, 1757, 1758, 1763, 1788, 1796, 1815, 1831, 1845, 1853, 1856, 1862, 1868, 1869, 1870, 1875, 1876, 1883, 1889, 1895, 1896, 1898, 1910, 1914, 1916], "term": [2, 9, 10, 41, 52, 65, 547, 723, 752, 781, 932, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1086, 1087, 1088, 1091, 1103, 1213, 1322, 1330, 1368, 1375, 1384, 1385, 1419, 1428, 1445, 1510, 1522, 1556, 1567, 1594, 1601, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1670, 1719, 1764, 1850, 1855, 1874, 1875, 1880, 1881, 1882, 1883, 1893, 1897, 1900, 1906, 1909], "mulbackward0": [2, 891, 894, 895], "inplac": [2, 22, 60, 62, 65, 744, 747, 765, 767, 769, 780, 786, 803, 827, 828, 829, 846, 847, 852, 886, 1112, 1182, 1326, 1336, 1352, 1353, 1354, 1355, 1356, 1359, 1371, 1372, 1373, 1400, 1413, 1414, 1432, 1433, 1434, 1441, 1443, 1456, 1479, 1487, 1498, 1499, 1500, 1501, 1502, 1506, 1517, 1518, 1519, 1528, 1543, 1558, 1559, 1561, 1564, 1566, 1576, 1588, 1835, 1851, 1853, 1862, 1875, 1880, 1893, 1919], "lead": [2, 6, 8, 31, 35, 42, 57, 63, 65, 886, 890, 892, 896, 898, 1106, 1123, 1212, 1384, 1429, 1445, 1791, 1842, 1855, 1869, 1870, 1875, 1877, 1879, 1880, 1881, 1889, 1892, 1896, 1897, 1900, 1909, 1914, 1915], "undefin": [2, 35, 42, 45, 57, 311, 462, 606, 867, 889, 897, 898, 926, 1058, 1107, 1108, 1330, 1650, 1693, 1875, 1878, 1880, 1881], "inner": [2, 4, 57, 58, 63, 804, 806, 890, 1038, 1113, 1117, 1122, 1821, 1853, 1895, 1905, 1919], "save_on_cpu": 2, "pin_memori": [2, 32, 436, 437, 438, 439, 440, 1056, 1058, 1708, 1712, 1714, 1814, 1851, 1852, 1853, 1870, 1878, 1895, 1911], "within": [2, 6, 10, 14, 16, 22, 23, 32, 33, 35, 39, 40, 41, 52, 53, 54, 57, 64, 65, 81, 867, 897, 898, 962, 1038, 1182, 1186, 1274, 1327, 1328, 1329, 1337, 1353, 1354, 1355, 1359, 1361, 1407, 1408, 1409, 1414, 1420, 1453, 1465, 1513, 1537, 1538, 1539, 1594, 1604, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1620, 1621, 1622, 1623, 1624, 1704, 1705, 1735, 1757, 1834, 1852, 1854, 1855, 1865, 1870, 1873, 1877, 1878, 1880, 1884, 1885, 1886, 1889, 1893, 1896, 1897, 1900, 1903, 1904, 1905, 1906, 1914], "move": [2, 6, 8, 9, 10, 17, 23, 26, 35, 37, 57, 65, 513, 578, 810, 1075, 1182, 1189, 1248, 1253, 1289, 1332, 1333, 1334, 1387, 1388, 1389, 1414, 1453, 1551, 1596, 1597, 1667, 1854, 1863, 1864, 1867, 1869, 1878, 1881, 1882, 1886, 1887, 1888, 1896, 1897, 1898, 1905, 1911, 1916], "copi": [2, 8, 16, 22, 24, 32, 33, 35, 37, 43, 50, 57, 61, 62, 65, 183, 189, 199, 202, 307, 394, 439, 449, 454, 462, 483, 489, 569, 570, 571, 572, 592, 606, 781, 803, 827, 828, 868, 869, 884, 931, 939, 968, 969, 1094, 1095, 1096, 1097, 1099, 1112, 1182, 1193, 1254, 1314, 1351, 1361, 1414, 1424, 1465, 1594, 1627, 1716, 1722, 1728, 1814, 1823, 1829, 1852, 1853, 1867, 1870, 1875, 1876, 1878, 1880, 1888, 1895, 1897, 1898, 1899, 1900, 1905, 1909, 1911, 1912, 1913, 1915, 1919], "pin": [2, 202, 329, 436, 437, 438, 439, 440, 454, 569, 592, 1056, 1058, 1182, 1414, 1627, 1708, 1712, 1714, 1814, 1850, 1870, 1911], "asynchron": [2, 4, 5, 64, 189, 202, 569, 592, 981, 1182, 1185, 1200, 1414, 1850, 1856, 1877, 1879, 1905, 1911, 1914], "prod_1": 2, "prod_2": 2, "del": [2, 1856, 1867, 1880, 1882], "illustr": [2, 17, 1855, 1874, 1880, 1909], "aliv": [2, 32, 43, 52, 959, 1875, 1878, 1882, 1888, 1905, 1906, 1907], "live": [2, 39, 998, 1001, 1182, 1414, 1852, 1878, 1882, 1905, 1907], "releas": [2, 8, 23, 31, 35, 52, 54, 61, 65, 503, 676, 932, 933, 955, 956, 957, 963, 980, 990, 991, 994, 998, 999, 1001, 1012, 1128, 1182, 1212, 1223, 1225, 1226, 1227, 1230, 1243, 1271, 1272, 1292, 1354, 1384, 1414, 1429, 1537, 1538, 1539, 1641, 1699, 1715, 1731, 1796, 1800, 1823, 1849, 1850, 1854, 1865, 1867, 1875, 1877, 1878, 1884, 1889, 1890, 1891, 1892, 1893, 1900, 1905, 1915, 1916], "delet": [2, 22, 35, 65, 883, 956, 964, 1849, 1863, 1867, 1875, 1895, 1904, 1905, 1907], "disable_saved_tensors_hook": 2, "error_messag": 2, "featur": [2, 6, 9, 10, 16, 18, 24, 27, 29, 35, 37, 39, 53, 58, 64, 669, 678, 749, 757, 758, 890, 892, 896, 1029, 1193, 1276, 1286, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1332, 1347, 1352, 1353, 1354, 1355, 1359, 1362, 1363, 1366, 1367, 1377, 1384, 1385, 1420, 1429, 1431, 1448, 1457, 1459, 1461, 1462, 1463, 1464, 1481, 1482, 1499, 1500, 1501, 1506, 1508, 1509, 1530, 1594, 1689, 1835, 1850, 1852, 1854, 1855, 1856, 1859, 1861, 1869, 1870, 1875, 1880, 1882, 1883, 1890, 1893, 1894, 1899, 1900, 1905, 1909, 1914], "messag": [2, 3, 23, 29, 35, 45, 54, 62, 65, 613, 669, 1015, 1017, 1211, 1212, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1849, 1852, 1853, 1855, 1856, 1861, 1882, 1893, 1898, 1899, 1905, 1907, 1916], "get": [2, 9, 17, 18, 21, 23, 26, 32, 35, 36, 37, 52, 53, 54, 55, 57, 62, 64, 65, 81, 143, 327, 675, 723, 777, 778, 850, 851, 882, 885, 926, 983, 984, 985, 1002, 1042, 1112, 1115, 1116, 1117, 1129, 1157, 1197, 1249, 1357, 1358, 1382, 1383, 1410, 1411, 1412, 1424, 1441, 1594, 1595, 1602, 1628, 1635, 1670, 1720, 1735, 1849, 1850, 1852, 1855, 1865, 1867, 1868, 1875, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1895, 1897, 1900, 1905, 1907, 1909, 1913, 1914, 1915, 1920], "register_multi_grad_hook": [2, 1875], "multi": [2, 5, 40, 43, 52, 749, 959, 1002, 1022, 1055, 1075, 1144, 1182, 1331, 1351, 1366, 1384, 1414, 1417, 1418, 1419, 1420, 1429, 1457, 1459, 1466, 1594, 1850, 1852, 1855, 1875, 1877, 1878, 1886, 1890, 1896, 1905, 1909, 1912, 1915, 1917], "ignor": [2, 6, 8, 19, 22, 35, 39, 44, 50, 57, 65, 143, 489, 533, 675, 678, 679, 680, 724, 783, 784, 847, 850, 851, 863, 882, 896, 897, 898, 910, 932, 954, 1002, 1003, 1022, 1023, 1076, 1078, 1086, 1087, 1088, 1127, 1142, 1182, 1193, 1199, 1202, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1273, 1309, 1310, 1311, 1327, 1328, 1329, 1330, 1331, 1348, 1350, 1358, 1366, 1368, 1374, 1380, 1381, 1384, 1405, 1406, 1407, 1408, 1409, 1414, 1417, 1418, 1419, 1420, 1421, 1428, 1429, 1445, 1446, 1457, 1462, 1485, 1486, 1496, 1505, 1525, 1548, 1556, 1594, 1641, 1652, 1675, 1683, 1687, 1748, 1778, 1779, 1796, 1800, 1823, 1852, 1855, 1856, 1862, 1869, 1875, 1878, 1880, 1893, 1909, 1916], "rel": [2, 9, 10, 17, 26, 33, 35, 41, 57, 65, 478, 683, 865, 897, 898, 902, 903, 954, 1171, 1236, 1239, 1462, 1463, 1478, 1513, 1652, 1656, 1657, 1683, 1862, 1865, 1877, 1878, 1885, 1893, 1897, 1916], "allow_mutation_on_saved_tensor": 2, "mutat": [2, 14, 65, 786, 827, 828, 846, 847, 1112, 1186, 1897, 1915], "version": [2, 3, 6, 9, 23, 26, 31, 33, 35, 37, 41, 53, 57, 60, 61, 65, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 114, 116, 118, 120, 123, 124, 126, 134, 136, 139, 140, 142, 145, 151, 153, 155, 157, 159, 161, 170, 179, 187, 191, 194, 196, 206, 208, 224, 228, 230, 236, 239, 241, 243, 245, 249, 254, 261, 263, 265, 269, 271, 275, 277, 284, 286, 288, 296, 298, 300, 302, 304, 306, 308, 310, 348, 350, 352, 354, 356, 358, 360, 363, 365, 367, 368, 375, 377, 379, 381, 383, 387, 391, 393, 411, 414, 417, 419, 430, 432, 434, 442, 447, 457, 460, 476, 480, 482, 498, 501, 502, 504, 506, 512, 516, 518, 521, 523, 525, 538, 540, 542, 545, 551, 553, 560, 564, 566, 582, 585, 587, 589, 591, 601, 611, 724, 725, 726, 738, 739, 740, 741, 742, 743, 764, 765, 766, 767, 769, 773, 774, 793, 794, 795, 828, 836, 844, 845, 847, 961, 1001, 1111, 1139, 1157, 1179, 1182, 1185, 1186, 1189, 1192, 1211, 1224, 1225, 1229, 1230, 1243, 1276, 1313, 1331, 1384, 1414, 1415, 1429, 1466, 1478, 1503, 1513, 1520, 1529, 1560, 1562, 1577, 1578, 1582, 1586, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1635, 1636, 1667, 1669, 1670, 1732, 1733, 1734, 1791, 1794, 1795, 1796, 1800, 1820, 1835, 1837, 1838, 1849, 1868, 1869, 1875, 1876, 1878, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1890, 1892, 1893, 1894, 1896, 1897, 1899, 1903, 1909, 1916, 1917], "_allowmutationonsavedcontext": 2, "purpos": [2, 12, 16, 17, 23, 33, 35, 65, 462, 489, 749, 897, 1191, 1276, 1337, 1366, 1420, 1588, 1589, 1590, 1591, 1748, 1865, 1870, 1875, 1897, 1906], "upon": [2, 3, 32, 36, 43, 45, 65, 1594, 1603, 1606, 1867, 1875, 1878, 1893, 1900, 1907], "sin_": [2, 1853, 1868], "8415": [2, 1909], "sinbackward0": 2, "variou": [3, 6, 26, 32, 35, 65, 1254, 1859, 1862, 1867, 1870, 1880, 1886, 1888, 1896, 1900, 1902, 1909, 1920], "get_cpu_cap": 3, "capabl": [3, 9, 26, 27, 35, 983, 1706, 1859, 1878, 1884, 1885, 1887, 1917], "possibl": [3, 10, 12, 14, 17, 18, 19, 23, 26, 27, 29, 35, 37, 41, 61, 62, 65, 487, 488, 569, 606, 847, 868, 869, 936, 965, 1103, 1115, 1182, 1195, 1222, 1235, 1238, 1239, 1242, 1247, 1253, 1331, 1337, 1414, 1420, 1504, 1505, 1524, 1557, 1582, 1606, 1607, 1719, 1722, 1737, 1788, 1796, 1814, 1852, 1854, 1855, 1867, 1868, 1873, 1875, 1877, 1878, 1879, 1880, 1883, 1888, 1889, 1890, 1892, 1897, 1900, 1905, 1907, 1912, 1916], "vsx": 3, "z": [3, 4, 11, 22, 23, 41, 57, 62, 606, 809, 866, 888, 933, 934, 944, 1055, 1059, 1283, 1367, 1513, 1606, 1639, 1640, 1648, 1693, 1723, 1724, 1852, 1853, 1854, 1869, 1875, 1877, 1878, 1883, 1884, 1893, 1897, 1903, 1905, 1907], "vector": [3, 16, 24, 33, 41, 57, 58, 62, 246, 305, 307, 313, 678, 679, 680, 873, 882, 884, 890, 891, 892, 893, 894, 895, 896, 923, 924, 930, 941, 950, 954, 955, 1036, 1037, 1042, 1044, 1118, 1122, 1123, 1127, 1214, 1221, 1229, 1237, 1238, 1242, 1245, 1249, 1250, 1251, 1271, 1276, 1283, 1304, 1306, 1331, 1332, 1333, 1334, 1337, 1351, 1357, 1358, 1361, 1369, 1377, 1378, 1379, 1423, 1453, 1462, 1465, 1486, 1504, 1505, 1513, 1515, 1549, 1553, 1581, 1598, 1600, 1602, 1606, 1637, 1641, 1688, 1689, 1780, 1800, 1836, 1839, 1842, 1875, 1883, 1900, 1909, 1914], "NO": 3, "avx": 3, "avx2": [3, 1900], "avx512": 3, "is_built": [3, 1887], "built": [3, 4, 8, 9, 12, 13, 17, 23, 26, 33, 35, 40, 45, 60, 65, 943, 981, 1191, 1463, 1675, 1850, 1870, 1875, 1877, 1878, 1880, 1884, 1886, 1887, 1888, 1902, 1920], "necessarili": [3, 33, 35, 41, 43, 52, 462, 897, 1218, 1240, 1251, 1282, 1350, 1421, 1878, 1880], "machin": [3, 35, 43, 52, 57, 58, 63, 1186, 1191, 1227, 1450, 1884, 1885, 1886, 1887, 1890, 1893, 1894, 1897, 1904, 1905, 1906], "driver": [3, 23, 1127, 1227, 1245, 1246, 1291, 1853, 1878, 1889, 1905], "allow_tf32": [3, 1743, 1853, 1878, 1889], "tensorfloat": 3, "core": [3, 4, 8, 9, 15, 17, 18, 20, 61, 942, 1012, 1650, 1855, 1859, 1877, 1878, 1879, 1889, 1897, 1917], "amper": [3, 18], "newer": [3, 16, 26, 1018, 1635, 1877, 1878, 1891, 1894, 1896, 1897, 1901], "tf32": 3, "allow_fp16_reduced_precision_reduct": [3, 1878, 1889], "precis": [3, 4, 9, 20, 24, 26, 33, 41, 57, 675, 678, 897, 898, 910, 922, 1001, 1098, 1131, 1227, 1245, 1251, 1276, 1286, 1327, 1328, 1329, 1331, 1342, 1343, 1344, 1345, 1346, 1347, 1367, 1385, 1401, 1407, 1408, 1409, 1466, 1524, 1563, 1594, 1728, 1743, 1748, 1850, 1855, 1865, 1871, 1875, 1886, 1897, 1900, 1901, 1903, 1910, 1912, 1914, 1915, 1921], "fp16": [3, 718, 1594, 1900, 1901], "gemm": [3, 14, 1877, 1893], "allow_bf16_reduced_precision_reduct": [3, 1878, 1889], "bf16": 3, "cufft_plan_cach": [3, 1878], "cufft": 3, "queri": [3, 17, 35, 52, 65, 724, 958, 959, 961, 967, 1014, 1018, 1032, 1033, 1182, 1414, 1420, 1563, 1605, 1853, 1878, 1897], "specif": [3, 4, 8, 9, 10, 16, 17, 20, 22, 23, 26, 35, 37, 39, 41, 43, 50, 52, 54, 57, 62, 65, 81, 503, 843, 850, 906, 961, 1046, 1075, 1144, 1179, 1186, 1191, 1195, 1197, 1198, 1282, 1361, 1386, 1563, 1588, 1589, 1608, 1649, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1738, 1777, 1849, 1852, 1854, 1855, 1857, 1859, 1861, 1865, 1869, 1871, 1875, 1878, 1884, 1888, 1890, 1893, 1896, 1897, 1899, 1900, 1901, 1903, 1905, 1907, 1914, 1915], "via": [3, 8, 12, 14, 17, 19, 26, 27, 32, 35, 37, 41, 50, 57, 61, 65, 507, 606, 897, 898, 929, 956, 992, 1012, 1059, 1115, 1254, 1332, 1333, 1334, 1351, 1369, 1377, 1378, 1379, 1386, 1453, 1601, 1635, 1638, 1681, 1852, 1854, 1855, 1865, 1867, 1870, 1873, 1875, 1878, 1880, 1881, 1882, 1884, 1886, 1888, 1889, 1893, 1897, 1900, 1905, 1906, 1909, 1912, 1913, 1920], "readonli": 3, "show": [3, 5, 8, 15, 18, 20, 23, 25, 29, 32, 33, 35, 37, 42, 57, 65, 890, 896, 942, 1106, 1182, 1283, 1414, 1585, 1651, 1670, 1849, 1850, 1855, 1868, 1877, 1878, 1879, 1883, 1884, 1886, 1893, 1896, 1897, 1905, 1907], "max_siz": [3, 51, 53, 1878], "capac": [3, 1025, 1878], "preferred_linalg_librari": 3, "algebra": [3, 10, 1055, 1239, 1850, 1860], "cusolv": [3, 1245, 1246, 1800], "magma": [3, 934, 1227, 1271, 1699, 1800, 1892, 1909], "decid": [3, 5, 8, 14, 35, 52, 61, 1617, 1862, 1893, 1909], "heurist": [3, 14, 23, 26, 32, 52, 53, 65, 1055], "overrid": [3, 22, 26, 33, 35, 36, 41, 45, 53, 57, 62, 65, 781, 782, 843, 879, 881, 998, 1330, 1331, 1348, 1350, 1374, 1381, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1485, 1486, 1496, 1525, 1548, 1556, 1608, 1731, 1748, 1850, 1855, 1859, 1896, 1897, 1900, 1905, 1914, 1919], "wherev": [3, 10, 17, 1868], "pick": [3, 13, 15, 35, 51, 53, 503, 942, 1875, 1905], "prefer": [3, 10, 32, 37, 43, 57, 851, 867, 892, 1180, 1222, 1235, 1239, 1247, 1254, 1421, 1563, 1735, 1796, 1814, 1852, 1875, 1878, 1897, 1909], "achiev": [3, 23, 32, 33, 35, 41, 53, 57, 1055, 1119, 1182, 1337, 1414, 1420, 1421, 1515, 1594, 1878, 1885, 1897, 1905, 1907], "better": [3, 4, 8, 9, 10, 12, 13, 14, 15, 17, 20, 23, 26, 32, 35, 43, 61, 942, 1024, 1111, 1115, 1116, 1157, 1169, 1197, 1350, 1447, 1569, 1594, 1681, 1706, 1855, 1874, 1875, 1877, 1878, 1883, 1892, 1893, 1896, 1899, 1901, 1909, 1914, 1919], "select": [3, 6, 17, 20, 27, 30, 32, 35, 41, 43, 305, 307, 309, 313, 749, 932, 962, 963, 967, 974, 975, 976, 977, 979, 1000, 1004, 1006, 1007, 1008, 1010, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1024, 1025, 1028, 1030, 1032, 1033, 1075, 1254, 1283, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1366, 1384, 1429, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1563, 1622, 1623, 1738, 1811, 1845, 1851, 1852, 1853, 1855, 1867, 1868, 1869, 1870, 1875, 1877, 1878, 1883, 1890, 1895, 1900, 1909, 1913, 1916], "incorrect": [3, 5, 6, 57, 65, 246, 503, 545, 888, 897, 924, 1197, 1240, 1253, 1420, 1458, 1459, 1460, 1461, 1581, 1641, 1796, 1852, 1855, 1878, 1889, 1893], "linalg": [3, 398, 932, 933, 934, 935, 955, 1041, 1127, 1160, 1262, 1271, 1272, 1273, 1277, 1278, 1601, 1602, 1606, 1641, 1686, 1691, 1693, 1699, 1770, 1800, 1801, 1823, 1839, 1850], "inv": [3, 41, 934, 1160, 1213, 1217, 1223, 1239, 1243, 1247], "inv_ex": 3, "cholesky_ex": [3, 1211], "lu_factor": [3, 1230, 1231, 1271, 1272, 1273], "lu": [3, 11, 1223, 1229, 1230, 1231, 1272, 1273, 1853], "eigh": [3, 1211, 1217, 1220, 1239, 1245, 1889], "eighval": 3, "svdval": [3, 1213, 1227, 1236, 1245, 1800, 1889], "_linalgbackend": 3, "sdpbackend": 3, "enum": [3, 17, 35, 785, 1893, 1900, 1905], "scale": [3, 8, 14, 32, 41, 43, 51, 53, 90, 464, 466, 606, 674, 678, 679, 680, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 759, 761, 762, 763, 764, 766, 769, 770, 784, 788, 791, 808, 809, 810, 811, 814, 910, 1069, 1070, 1073, 1091, 1122, 1123, 1268, 1326, 1352, 1357, 1358, 1359, 1375, 1386, 1441, 1466, 1467, 1468, 1504, 1505, 1506, 1522, 1524, 1563, 1564, 1569, 1654, 1675, 1701, 1702, 1703, 1704, 1705, 1778, 1779, 1797, 1842, 1850, 1853, 1869, 1873, 1878, 1882, 1886, 1900, 1901, 1903, 1910], "product": [3, 18, 27, 35, 41, 52, 143, 675, 678, 679, 680, 749, 882, 884, 891, 893, 894, 895, 896, 910, 922, 928, 932, 950, 955, 967, 1014, 1018, 1032, 1033, 1036, 1052, 1055, 1118, 1122, 1123, 1159, 1202, 1214, 1221, 1247, 1248, 1250, 1276, 1283, 1286, 1306, 1366, 1367, 1384, 1385, 1512, 1563, 1601, 1687, 1688, 1697, 1816, 1831, 1839, 1842, 1850, 1852, 1868, 1875, 1883, 1885, 1889, 1897, 1909], "attent": [3, 8, 40, 724, 1420, 1457, 1459, 1461, 1563, 1850, 1892, 1913], "stai": [3, 8, 39, 132, 1351, 1878, 1888, 1900, 1905, 1909], "align": [3, 10, 15, 33, 749, 768, 774, 809, 815, 942, 1055, 1135, 1237, 1329, 1337, 1350, 1366, 1380, 1384, 1408, 1409, 1429, 1466, 1496, 1497, 1524, 1525, 1582, 1601, 1641, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1673, 1821, 1850, 1868, 1875, 1883, 1893, 1903, 1910], "src": [3, 4, 35, 65, 189, 221, 305, 313, 462, 502, 503, 504, 505, 506, 507, 509, 527, 1046, 1112, 1304, 1457, 1460, 1461, 1650, 1732, 1733, 1734, 1738, 1769, 1810, 1835, 1851, 1853, 1897], "transform": [3, 4, 16, 17, 18, 32, 37, 40, 57, 62, 770, 786, 827, 828, 846, 847, 933, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1111, 1112, 1113, 1117, 1122, 1179, 1191, 1335, 1369, 1377, 1378, 1379, 1386, 1401, 1442, 1458, 1459, 1460, 1461, 1478, 1484, 1513, 1530, 1549, 1585, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1764, 1796, 1850, 1881, 1898, 1900, 1914, 1919], "sdp_utils_cpp": 3, "h": [3, 5, 11, 20, 26, 41, 478, 730, 731, 732, 749, 1211, 1218, 1221, 1231, 1245, 1320, 1321, 1328, 1329, 1333, 1334, 1338, 1343, 1344, 1346, 1354, 1355, 1357, 1359, 1366, 1367, 1378, 1379, 1384, 1385, 1386, 1397, 1398, 1408, 1409, 1426, 1427, 1429, 1431, 1448, 1464, 1467, 1468, 1478, 1513, 1548, 1554, 1555, 1601, 1602, 1635, 1650, 1800, 1853, 1868, 1869, 1875, 1878, 1879, 1882, 1883, 1893, 1913, 1914, 1915], "flash_sdp_en": 3, "flash": 3, "enable_mem_efficient_sdp": [3, 1563], "mem_efficient_sdp_en": 3, "enable_flash_sdp": [3, 1563], "math_sdp_en": 3, "math": [3, 23, 32, 65, 1065, 1231, 1233, 1525, 1563, 1689, 1706, 1801, 1850, 1852, 1854, 1855, 1889, 1909, 1910, 1916], "enable_math_sdp": [3, 1563], "sdp_kernel": [3, 1563], "enable_flash": 3, "enable_math": [3, 1563], "enable_mem_effici": 3, "temporarili": [3, 43, 1739, 1875, 1893, 1899], "previou": [3, 14, 29, 35, 52, 57, 65, 545, 749, 990, 1100, 1135, 1192, 1252, 1268, 1366, 1384, 1429, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1651, 1706, 1796, 1863, 1875, 1878, 1880, 1886, 1892, 1900, 1907], "is_avail": [3, 28, 35, 1850, 1878, 1884, 1887, 1899], "determinist": [3, 4, 6, 31, 35, 41, 65, 81, 503, 862, 1130, 1163, 1185, 1197, 1198, 1279, 1282, 1284, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1384, 1429, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1563, 1736, 1742, 1835, 1853, 1875, 1890, 1896, 1904], "algorithm": [3, 4, 8, 24, 30, 33, 36, 39, 41, 43, 57, 81, 749, 768, 774, 932, 1179, 1222, 1229, 1235, 1239, 1245, 1254, 1271, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1364, 1366, 1384, 1429, 1465, 1466, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1513, 1524, 1563, 1582, 1594, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1670, 1689, 1728, 1743, 1800, 1801, 1835, 1850, 1875, 1878, 1889, 1905, 1909], "are_deterministic_algorithms_en": 3, "use_deterministic_algorithm": [3, 862, 1163, 1742, 1890], "benchmark": [3, 14, 18, 20, 1850, 1853, 1878, 1884], "fastest": [3, 866, 1594, 1640, 1656, 1657, 1883, 1890, 1896], "benchmark_limit": 3, "maximum": [3, 41, 52, 53, 684, 686, 760, 784, 809, 810, 811, 814, 815, 863, 969, 1004, 1006, 1012, 1019, 1020, 1034, 1035, 1101, 1117, 1142, 1143, 1144, 1254, 1279, 1299, 1373, 1504, 1505, 1599, 1673, 1681, 1706, 1720, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1851, 1853, 1861, 1873, 1874, 1878, 1895, 1903, 1916], "try": [3, 4, 5, 8, 9, 12, 14, 15, 16, 23, 35, 37, 44, 45, 49, 52, 57, 61, 62, 942, 1025, 1108, 1117, 1123, 1187, 1188, 1197, 1299, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1458, 1460, 1466, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1563, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1842, 1849, 1852, 1855, 1856, 1875, 1878, 1880, 1882, 1883, 1888, 1893, 1896, 1897, 1900, 1901, 1905, 1909], "dispatch": [3, 14, 35, 57, 65, 1187, 1295, 1296, 1855, 1859, 1878, 1880, 1893, 1920], "v8": 3, "verbos": [3, 14, 23, 26, 35, 65, 669, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1849, 1861, 1869, 1893, 1894, 1914], "On": [3, 26, 31, 32, 35, 36, 41, 53, 57, 62, 65, 675, 678, 910, 922, 1229, 1276, 1286, 1342, 1343, 1344, 1345, 1346, 1347, 1367, 1382, 1383, 1384, 1385, 1401, 1424, 1429, 1442, 1594, 1656, 1657, 1666, 1669, 1850, 1852, 1862, 1875, 1877, 1878, 1889, 1897, 1905, 1906, 1907, 1909], "demand": [3, 32, 992, 1854, 1885, 1905], "onemkl": 3, "dump": [3, 14, 17, 23, 65, 956, 1879, 1892], "durat": [3, 14, 23, 35, 49, 52, 1295, 1296, 1865, 1899], "kernel": [3, 4, 5, 14, 16, 23, 24, 26, 29, 35, 57, 64, 728, 729, 730, 731, 732, 761, 762, 763, 959, 961, 962, 998, 999, 1031, 1033, 1301, 1327, 1328, 1329, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1362, 1363, 1382, 1383, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1410, 1411, 1412, 1465, 1488, 1489, 1490, 1491, 1492, 1493, 1508, 1509, 1563, 1604, 1852, 1859, 1863, 1870, 1878, 1880, 1881, 1887, 1889, 1893, 1896, 1899, 1901, 1909], "environ": [3, 4, 8, 12, 14, 23, 26, 27, 29, 31, 33, 41, 43, 45, 50, 55, 65, 669, 1191, 1197, 1384, 1429, 1835, 1849, 1852, 1861, 1875, 1877, 1879, 1884, 1889, 1890, 1892, 1898, 1905], "mkl_verbos": 3, "methodologi": 3, "larg": [3, 4, 8, 9, 14, 23, 32, 35, 65, 81, 669, 847, 952, 954, 1012, 1227, 1245, 1322, 1361, 1465, 1507, 1594, 1681, 1768, 1780, 1850, 1867, 1869, 1870, 1877, 1878, 1882, 1886, 1889, 1891, 1893, 1897, 1898, 1901, 1905, 1909, 1912, 1915], "moreov": [3, 57, 503, 1594, 1669], "investig": [3, 8, 35, 62], "enough": [3, 9, 33, 65, 1193, 1304, 1463, 1782, 1783, 1784, 1785, 1786, 1787, 1835, 1854, 1867, 1870, 1880, 1883, 1896, 1897, 1912, 1920], "scope": [3, 8, 22, 54, 65, 1108, 1453, 1617, 1852, 1854, 1855, 1878, 1882, 1893, 1897, 1907], "second": [3, 6, 17, 26, 29, 35, 39, 43, 45, 52, 54, 63, 65, 675, 678, 680, 683, 749, 783, 863, 864, 865, 873, 881, 897, 898, 910, 914, 915, 917, 918, 919, 922, 955, 967, 1014, 1018, 1032, 1033, 1043, 1045, 1046, 1052, 1060, 1101, 1102, 1113, 1116, 1117, 1118, 1122, 1123, 1125, 1126, 1135, 1138, 1146, 1147, 1148, 1159, 1171, 1204, 1206, 1214, 1250, 1253, 1259, 1260, 1270, 1276, 1280, 1282, 1283, 1285, 1286, 1310, 1315, 1318, 1322, 1328, 1329, 1335, 1343, 1344, 1346, 1347, 1357, 1358, 1365, 1366, 1380, 1383, 1384, 1402, 1406, 1408, 1409, 1429, 1442, 1495, 1497, 1531, 1585, 1617, 1656, 1657, 1660, 1666, 1681, 1727, 1777, 1785, 1820, 1825, 1827, 1836, 1839, 1842, 1854, 1855, 1875, 1878, 1880, 1881, 1882, 1883, 1886, 1890, 1893, 1899, 1905, 1910, 1914], "verbose_on": 3, "level": [3, 4, 8, 9, 10, 14, 17, 21, 22, 23, 27, 29, 32, 35, 43, 44, 45, 49, 57, 61, 65, 489, 669, 736, 883, 884, 885, 893, 961, 1112, 1127, 1351, 1594, 1850, 1851, 1852, 1855, 1856, 1861, 1865, 1867, 1870, 1873, 1875, 1877, 1880, 1883, 1897, 1899, 1900, 1901, 1905, 1909, 1914, 1918, 1919, 1920], "verbose_off": 3, "dnn": [3, 1877], "onednn": [3, 844, 845, 848, 1184, 1190, 1900], "former": [3, 57, 1384, 1414, 1875], "dnnl_verbos": 3, "verbose_on_cr": 3, "get_opt_einsum": 3, "packag": [3, 8, 9, 12, 28, 33, 41, 61, 64, 1513, 1594, 1849, 1850, 1866, 1880, 1886, 1896, 1903, 1905, 1914, 1917], "els": [3, 8, 12, 22, 32, 35, 37, 41, 43, 44, 52, 65, 592, 749, 913, 1193, 1199, 1380, 1453, 1550, 1563, 1594, 1648, 1656, 1657, 1666, 1667, 1668, 1669, 1723, 1724, 1757, 1763, 1852, 1854, 1856, 1857, 1862, 1867, 1870, 1878, 1880, 1881, 1886, 1887, 1893, 1896, 1897, 1911], "einsum": [3, 1853, 1895], "readthedoc": [3, 1055], "io": [3, 8, 32, 37, 1055, 1189, 1192, 1253, 1384, 1385, 1461, 1563, 1649, 1731, 1892, 1900], "en": [3, 33, 1055, 1884, 1914, 1921], "path_find": [3, 1055], "html": [3, 4, 5, 8, 15, 27, 53, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 942, 1055, 1463, 1835, 1876, 1884, 1886, 1890, 1897, 1914], "calcul": [3, 32, 35, 49, 749, 757, 758, 788, 791, 808, 809, 813, 930, 954, 1043, 1047, 1055, 1059, 1173, 1179, 1237, 1259, 1260, 1262, 1327, 1328, 1329, 1332, 1333, 1334, 1337, 1345, 1346, 1347, 1361, 1366, 1368, 1369, 1377, 1378, 1379, 1386, 1453, 1465, 1466, 1480, 1481, 1482, 1510, 1513, 1524, 1553, 1602, 1613, 1635, 1639, 1641, 1675, 1721, 1745, 1794, 1795, 1825, 1827, 1837, 1838, 1875, 1876, 1879, 1883, 1889, 1892, 1900, 1919], "path": [3, 4, 5, 9, 14, 17, 26, 35, 37, 50, 52, 54, 55, 57, 65, 723, 904, 905, 956, 957, 1055, 1182, 1414, 1430, 1461, 1651, 1849, 1853, 1854, 1875, 1878, 1880, 1884, 1891, 1897, 1899, 1909, 1918], "contract": [3, 12, 17, 1055, 1816, 1850, 1869, 1897], "fall": [3, 8, 26, 32, 784, 897, 1144, 1195, 1253, 1375, 1445, 1522, 1567, 1598, 1599, 1849, 1893, 1900], "left": [3, 32, 65, 451, 489, 803, 809, 854, 911, 915, 920, 921, 926, 931, 1055, 1075, 1082, 1096, 1099, 1100, 1104, 1135, 1139, 1140, 1144, 1179, 1180, 1187, 1201, 1222, 1231, 1235, 1239, 1242, 1243, 1244, 1245, 1247, 1259, 1260, 1304, 1322, 1327, 1328, 1329, 1330, 1331, 1342, 1343, 1344, 1361, 1368, 1381, 1382, 1383, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1417, 1418, 1419, 1423, 1424, 1462, 1465, 1466, 1467, 1468, 1513, 1533, 1551, 1599, 1673, 1674, 1687, 1715, 1728, 1735, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1796, 1816, 1821, 1836, 1852, 1853, 1855, 1875, 1880, 1886, 1903, 1910], "strategi": [3, 4, 8, 14, 32, 33, 35, 39, 45, 57, 890, 892, 1055, 1115, 1195, 1322, 1594, 1681, 1854, 1881, 1883, 1901], "auto": [3, 35, 58, 1055, 1330, 1331, 1855, 1893, 1914], "greedi": [3, 39, 1055], "doc": [3, 4, 5, 10, 15, 19, 27, 52, 53, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 829, 942, 1123, 1200, 1458, 1459, 1460, 1461, 1835, 1842, 1856, 1867, 1876, 1879, 1880, 1886, 1890, 1893, 1897, 1914], "timer": [4, 38, 1850], "stmt": [4, 1877], "setup": [4, 12, 26, 33, 52, 53, 809, 810, 811, 814, 1123, 1594, 1842, 1877, 1878, 1887, 1905, 1906], "global_setup": 4, "perf_count": 4, "global": [4, 6, 9, 13, 14, 22, 23, 32, 35, 37, 39, 40, 41, 43, 53, 57, 62, 64, 65, 843, 850, 854, 862, 911, 920, 1007, 1014, 1056, 1058, 1068, 1073, 1091, 1109, 1112, 1139, 1140, 1163, 1170, 1182, 1185, 1197, 1201, 1252, 1268, 1414, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1613, 1617, 1645, 1708, 1710, 1712, 1715, 1739, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1847, 1852, 1855, 1856, 1871, 1874, 1880, 1885, 1886, 1888, 1890, 1900, 1905, 1906, 1907, 1909, 1912, 1914], "label": [4, 7, 8, 32, 39, 1055, 1322, 1331, 1337, 1348, 1350, 1374, 1406, 1417, 1418, 1497, 1628, 1674, 1879, 1888, 1890, 1914], "sub_label": 4, "descript": [4, 8, 23, 25, 26, 32, 45, 52, 65, 723, 1153, 1154, 1155, 1227, 1254, 1478, 1699, 1854, 1855, 1878, 1880, 1883, 1885, 1886, 1893, 1921], "env": [4, 14, 23, 35, 41, 45, 50, 52, 53, 55, 65, 1012, 1648, 1879, 1889, 1905], "num_thread": 4, "languag": [4, 26, 45, 1193, 1322, 1457, 1512, 1882], "measur": [4, 41, 49, 958, 1004, 1006, 1213, 1330, 1331, 1348, 1374, 1381, 1405, 1406, 1462, 1463, 1485, 1486, 1544, 1683, 1850, 1878, 1885, 1886, 1896, 1909], "statement": [4, 12, 17, 41, 62, 65, 1183, 1197, 1856, 1875, 1880, 1888, 1891, 1893, 1897, 1903, 1905], "org": [4, 5, 8, 10, 11, 15, 27, 33, 40, 41, 53, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 942, 1254, 1384, 1432, 1433, 1460, 1463, 1638, 1689, 1764, 1849, 1856, 1875, 1876, 1886, 1890, 1892, 1893, 1897, 1914, 1921], "timeit": [4, 1877], "sever": [4, 15, 27, 32, 35, 40, 41, 57, 65, 727, 728, 729, 730, 731, 732, 755, 756, 761, 762, 763, 771, 772, 942, 1001, 1059, 1157, 1182, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1342, 1343, 1344, 1345, 1346, 1347, 1362, 1363, 1382, 1383, 1402, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1467, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1488, 1489, 1490, 1491, 1492, 1493, 1508, 1509, 1531, 1534, 1535, 1537, 1538, 1539, 1594, 1603, 1604, 1606, 1607, 1639, 1650, 1704, 1705, 1745, 1831, 1852, 1874, 1875, 1877, 1878, 1885, 1886, 1893, 1896, 1900, 1905], "kei": [4, 16, 17, 20, 22, 32, 37, 43, 50, 52, 53, 57, 65, 592, 669, 724, 843, 848, 906, 1021, 1111, 1121, 1182, 1197, 1198, 1253, 1414, 1415, 1420, 1424, 1457, 1458, 1459, 1460, 1461, 1563, 1620, 1636, 1850, 1853, 1854, 1855, 1859, 1878, 1880, 1885, 1886, 1891, 1893, 1895, 1896, 1899, 1900, 1903, 1905, 1906, 1911, 1914, 1916, 1918], "awar": [4, 8, 20, 477, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 827, 828, 844, 851, 852, 1461, 1563, 1594, 1804, 1805, 1806, 1807, 1808, 1869, 1875, 1878, 1897, 1903, 1906, 1909], "element": [4, 16, 32, 35, 41, 62, 63, 65, 90, 112, 143, 147, 189, 209, 234, 246, 250, 278, 305, 307, 309, 311, 313, 344, 390, 392, 394, 426, 445, 462, 464, 465, 487, 489, 503, 505, 507, 510, 534, 535, 547, 549, 598, 599, 606, 670, 672, 673, 676, 677, 682, 683, 687, 688, 724, 747, 749, 759, 760, 761, 762, 763, 769, 773, 782, 863, 865, 866, 867, 870, 871, 872, 873, 874, 882, 890, 891, 893, 894, 895, 897, 898, 912, 921, 924, 931, 937, 941, 948, 950, 951, 952, 998, 1034, 1035, 1036, 1037, 1038, 1039, 1042, 1044, 1045, 1046, 1050, 1052, 1055, 1058, 1060, 1061, 1065, 1085, 1089, 1090, 1092, 1094, 1099, 1101, 1102, 1104, 1108, 1113, 1114, 1116, 1117, 1118, 1122, 1123, 1124, 1125, 1126, 1127, 1135, 1138, 1141, 1142, 1143, 1144, 1159, 1167, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1201, 1203, 1204, 1206, 1223, 1225, 1229, 1240, 1244, 1255, 1256, 1258, 1261, 1263, 1264, 1265, 1266, 1270, 1271, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1302, 1304, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1326, 1327, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1356, 1358, 1359, 1361, 1366, 1367, 1370, 1371, 1372, 1373, 1374, 1375, 1380, 1381, 1384, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1400, 1403, 1405, 1406, 1407, 1408, 1409, 1413, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1441, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1452, 1453, 1454, 1455, 1456, 1457, 1462, 1463, 1465, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1498, 1502, 1505, 1506, 1511, 1512, 1516, 1517, 1518, 1519, 1522, 1525, 1526, 1528, 1533, 1537, 1538, 1539, 1543, 1544, 1548, 1549, 1551, 1554, 1555, 1556, 1557, 1558, 1559, 1563, 1564, 1565, 1566, 1567, 1569, 1571, 1573, 1574, 1575, 1576, 1581, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1620, 1621, 1627, 1628, 1630, 1631, 1640, 1641, 1642, 1644, 1652, 1692, 1693, 1696, 1697, 1704, 1705, 1707, 1718, 1721, 1722, 1726, 1728, 1730, 1748, 1751, 1753, 1765, 1766, 1768, 1769, 1773, 1779, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1790, 1794, 1795, 1799, 1810, 1812, 1813, 1817, 1818, 1819, 1821, 1823, 1824, 1825, 1826, 1827, 1829, 1831, 1832, 1833, 1837, 1838, 1839, 1842, 1845, 1853, 1855, 1862, 1870, 1873, 1876, 1877, 1880, 1883, 1889, 1891, 1893, 1896, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1920], "lazili": [4, 28, 37, 958, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1585, 1852], "threadpool": 4, "comparison": [4, 21, 33, 35, 65, 1182, 1197, 1198, 1414, 1652, 1856, 1880, 1916, 1919], "appl": 4, "synchron": [4, 5, 14, 28, 29, 33, 37, 39, 43, 52, 57, 64, 866, 958, 959, 961, 969, 989, 1029, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1229, 1230, 1236, 1239, 1242, 1243, 1245, 1246, 1254, 1453, 1594, 1640, 1642, 1721, 1850, 1877, 1878, 1879, 1884, 1888, 1898, 1905], "focu": [4, 14, 17, 1683], "replic": [4, 32, 40, 57, 1135, 1192, 1342, 1343, 1344, 1351, 1361, 1390, 1391, 1392, 1438, 1439, 1440, 1465, 1551, 1578, 1898], "particularli": [4, 32, 33, 54, 1350, 1351, 1421, 1852, 1878], "variat": [4, 23, 41, 1855, 1880, 1896, 1901], "confound": 4, "quantifi": [4, 1463], "nois": [4, 23, 1853, 1890], "median": [4, 41, 166, 1310, 1835, 1853, 1868, 1895], "deviat": [4, 41, 369, 1326, 1332, 1333, 1334, 1369, 1377, 1378, 1379, 1386, 1453, 1642, 1758, 1763, 1794, 1795, 1873], "merg": [4, 7, 8, 10, 32, 35, 37, 53, 1415, 1420, 1424], "repeat": [4, 41, 62, 484, 954, 1055, 1245, 1271, 1410, 1411, 1412, 1485, 1486, 1689, 1721, 1780, 1800, 1801, 1817, 1851, 1853, 1855, 1895, 1899, 1902, 1909], "autorang": 4, "exact": [4, 14, 15, 20, 23, 26, 32, 43, 54, 331, 730, 731, 732, 784, 863, 864, 865, 897, 898, 942, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1282, 1346, 1384, 1461, 1524, 1563, 1594, 1684, 1774, 1873, 1879, 1888, 1909, 1920], "discuss": [4, 6, 9, 10, 11, 14, 21, 41, 65, 1375, 1862, 1875, 1880, 1886, 1890, 1905, 1907, 1909], "docstr": [4, 26, 65, 850, 851, 1182, 1414, 1849, 1878], "adapt": [4, 755, 756, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1352, 1472, 1473, 1474, 1475, 1476, 1477, 1648, 1654, 1655, 1666, 1668, 1675, 1878], "field": [4, 8, 17, 22, 23, 35, 39, 43, 45, 49, 50, 65, 815, 882, 1180, 1182, 1322, 1330, 1331, 1348, 1350, 1374, 1380, 1381, 1405, 1406, 1414, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1478, 1485, 1486, 1496, 1513, 1525, 1548, 1556, 1627, 1664, 1865, 1875, 1879, 1888, 1893, 1905, 1906, 1914], "displai": [4, 14, 23, 29, 1000, 1013, 1524, 1582, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1849, 1856, 1861, 1864, 1893, 1914, 1916], "instruct": [4, 5, 14, 17, 23, 24, 26, 54, 64, 1852, 1855, 1889, 1893, 1916], "count": [4, 17, 32, 41, 49, 65, 913, 953, 994, 1108, 1143, 1144, 1180, 1219, 1220, 1627, 1832, 1833, 1853, 1865, 1878, 1895, 1899, 1905, 1907, 1909], "wall": 4, "callgrind": 4, "analog": [4, 17, 65, 683, 1038, 1076, 1078, 1157, 1231, 1384, 1669, 1800, 1817, 1870, 1886], "constructor": [4, 26, 32, 33, 39, 57, 65, 813, 850, 851, 1322, 1419, 1424, 1425, 1442, 1467, 1468, 1594, 1634, 1775, 1850, 1852, 1855, 1856, 1878, 1879, 1886, 1905, 1909, 1911, 1912, 1915, 1921], "snippet": [4, 17, 53, 1849, 1886, 1891], "loop": [4, 17, 18, 22, 33, 54, 58, 62, 63, 65, 851, 852, 896, 1001, 1004, 1006, 1117, 1123, 1197, 1594, 1604, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1842, 1852, 1853, 1855, 1865, 1877, 1878, 1882, 1883, 1886, 1889, 1893, 1896, 1899, 1900, 1914], "default_tim": 4, "summar": [4, 5, 17, 23, 53, 1748, 1855, 1870, 1909], "relu": [4, 12, 16, 22, 23, 33, 62, 63, 65, 689, 690, 694, 695, 696, 697, 698, 699, 700, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 754, 781, 782, 803, 843, 849, 998, 1113, 1123, 1193, 1414, 1429, 1431, 1442, 1450, 1457, 1459, 1461, 1560, 1561, 1585, 1651, 1842, 1851, 1852, 1853, 1863, 1869, 1870, 1873, 1875, 1886, 1891, 1893, 1895, 1900, 1902, 1903], "readabl": [4, 23, 25, 32, 50, 65, 1000, 1013, 1814, 1893, 1896, 1920], "supplement": 4, "disambigu": [4, 23, 50, 65, 1259], "ident": [4, 23, 26, 32, 35, 41, 57, 65, 777, 803, 897, 898, 1043, 1219, 1220, 1221, 1222, 1235, 1247, 1250, 1254, 1271, 1309, 1310, 1326, 1352, 1553, 1601, 1603, 1839, 1845, 1856, 1873, 1889, 1890, 1897, 1902, 1909], "our": [4, 8, 9, 14, 16, 17, 18, 22, 23, 35, 48, 51, 52, 53, 55, 61, 62, 63, 65, 886, 1075, 1112, 1330, 1875, 1880, 1883, 1888, 1893, 1896, 1900, 1906, 1909], "easi": [4, 12, 17, 21, 23, 32, 37, 52, 1852, 1875, 1882, 1885, 1886, 1888, 1897, 1900, 1905, 1906, 1909], "differenti": [4, 41, 58, 63, 143, 344, 578, 791, 878, 880, 882, 884, 885, 887, 890, 891, 892, 893, 894, 895, 896, 897, 898, 939, 1001, 1116, 1117, 1118, 1122, 1196, 1228, 1229, 1240, 1271, 1336, 1337, 1357, 1515, 1549, 1594, 1606, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1835, 1850, 1862, 1880, 1882, 1883, 1893, 1896, 1905, 1915, 1917], "distinguish": [4, 1900, 1909], "princip": [4, 1228, 1689], "signal": [4, 24, 37, 43, 52, 54, 727, 728, 729, 755, 756, 771, 772, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1179, 1244, 1319, 1320, 1321, 1323, 1324, 1325, 1327, 1328, 1329, 1342, 1343, 1344, 1362, 1363, 1382, 1383, 1402, 1407, 1408, 1409, 1467, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1488, 1491, 1508, 1509, 1531, 1534, 1535, 1537, 1538, 1539, 1796, 1850, 1867, 1888, 1899, 1905], "form": [4, 8, 10, 13, 22, 24, 32, 35, 41, 51, 52, 53, 57, 62, 65, 749, 768, 774, 933, 1043, 1083, 1085, 1182, 1221, 1224, 1229, 1240, 1245, 1320, 1321, 1324, 1325, 1337, 1362, 1363, 1366, 1384, 1414, 1429, 1465, 1466, 1497, 1508, 1509, 1512, 1524, 1551, 1582, 1606, 1669, 1687, 1816, 1849, 1852, 1856, 1870, 1875, 1880, 1886, 1893, 1897, 1900, 1914], "treat": [4, 19, 22, 41, 51, 60, 65, 313, 462, 782, 897, 898, 998, 1111, 1234, 1237, 1239, 1251, 1253, 1263, 1264, 1265, 1266, 1283, 1312, 1358, 1368, 1386, 1418, 1419, 1420, 1421, 1424, 1442, 1447, 1505, 1594, 1636, 1640, 1675, 1728, 1796, 1810, 1817, 1854, 1855, 1868, 1875, 1905, 1909, 1912, 1919], "distinct": [4, 1111, 1217, 1218, 1262, 1855, 1880, 1891, 1905, 1906], "workload": [4, 9, 32, 35, 57, 1001, 1878, 1885, 1889, 1905], "good": [4, 8, 9, 15, 17, 20, 26, 57, 65, 81, 942, 1115, 1422, 1764, 1849, 1859, 1867, 1880, 1885, 1886, 1893, 1897, 1898, 1900], "intrins": [4, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 781, 782, 1901, 1902], "contrast": [4, 41, 43, 749, 1366, 1669, 1851, 1873, 1875, 1881, 1909], "blocked_autorang": 4, "callback": [4, 33, 52, 54, 64, 65, 1594, 1865, 1885, 1899, 1905], "min_run_tim": 4, "minimum": [4, 26, 33, 43, 52, 53, 685, 686, 760, 784, 809, 810, 811, 814, 815, 864, 913, 1035, 1102, 1142, 1143, 1144, 1284, 1337, 1373, 1463, 1673, 1674, 1681, 1764, 1782, 1783, 1784, 1785, 1786, 1787, 1851, 1853, 1873, 1875, 1883, 1895, 1903, 1912], "At": [4, 6, 7, 8, 13, 14, 17, 23, 27, 32, 1089, 1333, 1342, 1343, 1344, 1345, 1346, 1347, 1382, 1383, 1863, 1870, 1877, 1883, 1900, 1905, 1910], "high": [4, 5, 8, 9, 10, 11, 14, 17, 18, 23, 27, 33, 35, 41, 43, 49, 51, 53, 65, 112, 961, 1337, 1460, 1710, 1711, 1743, 1851, 1853, 1865, 1867, 1883, 1884, 1886, 1887, 1896, 1900, 1901, 1905, 1909, 1914, 1915, 1916, 1919], "pseudo": [4, 81], "total_tim": 4, "block_siz": 4, "choic": [4, 9, 10, 14, 23, 35, 1197, 1245, 1415, 1424, 1706, 1877, 1893, 1903, 1909], "block": [4, 8, 9, 32, 35, 39, 40, 52, 54, 64, 65, 572, 573, 574, 921, 958, 1012, 1202, 1254, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1390, 1391, 1392, 1393, 1394, 1395, 1417, 1465, 1507, 1581, 1594, 1782, 1783, 1784, 1852, 1854, 1855, 1865, 1867, 1871, 1875, 1878, 1879, 1883, 1893, 1900, 1905, 1909], "qualiti": [4, 8, 33], "balanc": [4, 15, 81, 942], "compet": 4, "statist": [4, 14, 23, 33, 35, 41, 788, 789, 809, 810, 811, 813, 814, 967, 1004, 1006, 1007, 1008, 1010, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1032, 1033, 1259, 1332, 1333, 1334, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1453, 1865, 1875, 1882, 1896, 1898, 1900, 1903], "amort": 4, "invoc": [4, 6, 17, 65, 830, 1185, 1197, 1852, 1855, 1878, 1880, 1885, 1893, 1905, 1907], "less": [4, 7, 8, 14, 26, 32, 33, 35, 41, 43, 54, 356, 669, 890, 892, 897, 898, 954, 1008, 1025, 1055, 1099, 1103, 1108, 1111, 1206, 1218, 1254, 1270, 1271, 1322, 1375, 1428, 1445, 1451, 1630, 1719, 1825, 1827, 1849, 1853, 1855, 1870, 1878, 1880, 1888, 1889, 1895, 1898, 1900], "bias": [4, 33, 723, 749, 783, 1332, 1333, 1334, 1366, 1367, 1369, 1377, 1378, 1379, 1384, 1385, 1386, 1429, 1431, 1453], "trivial": [4, 43, 45, 724, 932, 1601, 1893, 1907], "low": [4, 8, 29, 33, 41, 57, 489, 893, 961, 1127, 1337, 1689, 1706, 1710, 1711, 1728, 1801, 1851, 1853, 1865, 1867, 1878, 1899, 1916, 1920], "digit": [4, 1748, 1849, 1864, 1885, 1889], "microsecond": [4, 1878], "bia": [4, 10, 35, 40, 701, 702, 703, 704, 705, 706, 707, 708, 709, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 738, 740, 741, 742, 743, 745, 749, 750, 753, 754, 761, 762, 763, 770, 781, 1121, 1182, 1191, 1322, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1366, 1367, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1414, 1420, 1429, 1430, 1431, 1483, 1484, 1488, 1489, 1490, 1491, 1492, 1493, 1514, 1523, 1527, 1530, 1585, 1594, 1601, 1602, 1616, 1618, 1620, 1635, 1638, 1703, 1851, 1853, 1863, 1880, 1886, 1891, 1900, 1902, 1914], "period": [4, 10, 39, 52, 911, 920, 967, 1000, 1013, 1014, 1018, 1032, 1033, 1075, 1139, 1140, 1201, 1685, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1853, 1865, 1888], "until": [4, 8, 14, 32, 33, 35, 39, 43, 52, 57, 64, 65, 477, 958, 959, 961, 992, 1108, 1202, 1254, 1295, 1296, 1513, 1585, 1594, 1672, 1678, 1817, 1867, 1873, 1878, 1882, 1893, 1899, 1905, 1907], "overal": [4, 10, 32, 35, 52, 897, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1460, 1875, 1877, 1878, 1888, 1901], "repetit": [4, 1721, 1817], "collect_callgrind": 4, "collect_baselin": 4, "retain_out_fil": 4, "callgrindstat": [4, 1850], "modulo": [4, 41, 1103, 1719], "determin": [4, 6, 9, 14, 22, 23, 24, 26, 28, 29, 31, 32, 33, 35, 41, 43, 50, 52, 57, 62, 65, 812, 815, 890, 892, 897, 898, 911, 920, 927, 932, 1002, 1057, 1076, 1086, 1110, 1111, 1139, 1140, 1143, 1144, 1195, 1215, 1227, 1238, 1241, 1262, 1276, 1358, 1362, 1363, 1384, 1420, 1423, 1429, 1505, 1508, 1509, 1524, 1557, 1582, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1636, 1646, 1681, 1709, 1711, 1713, 1740, 1782, 1783, 1784, 1785, 1786, 1787, 1796, 1848, 1855, 1856, 1869, 1878, 1879, 1880, 1886, 1893, 1897, 1900, 1905, 1907, 1912, 1914, 1916], "itself": [4, 6, 8, 9, 12, 17, 23, 35, 36, 57, 63, 65, 682, 688, 868, 954, 1116, 1117, 1182, 1193, 1197, 1414, 1447, 1569, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1624, 1852, 1867, 1886, 1890, 1893, 1897, 1905, 1909, 1913], "jitter": 4, "interpret": [4, 17, 32, 35, 39, 41, 43, 52, 54, 70, 768, 774, 869, 896, 1011, 1076, 1077, 1078, 1083, 1085, 1086, 1087, 1088, 1108, 1132, 1144, 1182, 1187, 1193, 1197, 1234, 1254, 1354, 1513, 1524, 1525, 1582, 1740, 1746, 1849, 1854, 1855, 1867, 1877, 1878, 1893, 1909, 1911, 1913], "ideal": [4, 14, 51, 53, 1197, 1869], "analysi": [4, 12, 21, 33, 41, 65, 1201, 1689, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1856, 1886, 1894, 1919], "valgrind": 4, "degrad": [4, 26, 1877, 1879, 1880, 1909], "due": [4, 5, 6, 8, 14, 17, 19, 23, 33, 35, 41, 51, 57, 62, 65, 477, 869, 890, 891, 896, 950, 1194, 1217, 1218, 1245, 1271, 1354, 1368, 1457, 1466, 1524, 1563, 1634, 1648, 1801, 1852, 1870, 1878, 1879, 1883, 1884, 1890, 1893, 1900, 1901, 1905, 1907], "amelior": 4, "suffici": [4, 14, 23, 26, 33, 41, 44, 52, 57, 1656, 1657, 1849, 1909, 1912], "obtain": [4, 32, 35, 41, 45, 64, 65, 486, 907, 1127, 1299, 1337, 1421, 1497, 1594, 1689, 1706, 1801, 1855, 1867, 1868, 1877, 1890, 1893, 1896, 1899, 1900], "callgrind_control": 4, "callgrind_annot": 4, "boundari": [4, 14, 65, 768, 774, 926, 1135, 1339, 1340, 1341, 1435, 1436, 1437, 1438, 1439, 1440, 1466, 1469, 1470, 1471, 1524, 1582, 1675, 1681, 1735, 1853, 1879, 1897, 1898, 1905], "caller": [4, 43, 52, 65, 843, 1182, 1414, 1461, 1590, 1591, 1875, 1878, 1905, 1907], "structur": [4, 6, 10, 19, 32, 33, 35, 42, 43, 45, 53, 57, 65, 881, 1106, 1118, 1123, 1197, 1414, 1613, 1617, 1652, 1689, 1801, 1842, 1854, 1856, 1862, 1865, 1870, 1878, 1879, 1880, 1881, 1888, 1891, 1892, 1893, 1894, 1896, 1897, 1905, 1909, 1914, 1915, 1916, 1917, 1919], "restrict": [4, 9, 32, 41, 57, 62, 63, 1253, 1276, 1350, 1854, 1855, 1856, 1869, 1870, 1875, 1878, 1883, 1898, 1900], "builtin": [4, 14, 23, 35, 65, 1194, 1253, 1715, 1852, 1854, 1856, 1905, 1907], "surpris": [4, 9, 57, 1849, 1883, 1889], "serial": [4, 27, 32, 35, 37, 39, 52, 1182, 1191, 1192, 1253, 1414, 1585, 1648, 1649, 1731, 1849, 1850, 1853, 1864, 1869, 1875, 1878, 1885, 1886, 1888, 1897, 1900, 1906], "subsequ": [4, 8, 14, 17, 26, 27, 35, 65, 959, 1182, 1193, 1197, 1342, 1343, 1344, 1345, 1346, 1347, 1414, 1442, 1590, 1591, 1878, 1890, 1893, 1905, 1909], "deseri": [4, 37, 1253, 1585, 1849, 1864], "globalsbridg": 4, "care": [4, 8, 14, 23, 26, 35, 41, 57, 64, 65, 1076, 1078, 1414, 1867, 1877, 1878, 1879, 1880, 1882, 1886, 1888, 1891, 1893, 1905, 1909], "reli": [4, 10, 14, 26, 32, 33, 43, 45, 57, 65, 143, 882, 897, 1055, 1351, 1875, 1877, 1879, 1880, 1890, 1891, 1909, 1913], "pickl": [4, 32, 33, 35, 1182, 1253, 1414, 1731, 1849, 1864, 1867, 1891, 1897], "transfer": [4, 32, 35, 1863, 1867, 1878, 1884, 1886, 1897, 1905], "properli": [4, 8, 32, 33, 37, 39, 43, 52, 57, 64, 1076, 1077, 1078, 1086, 1087, 1088, 1283, 1415, 1416, 1424, 1425, 1594, 1849, 1862, 1880, 1883, 1886, 1888, 1891, 1905, 1906, 1912], "profil": [4, 5, 14, 15, 49, 65, 942, 1195, 1588, 1589, 1590, 1591, 1748, 1850, 1895, 1905], "drive": [4, 10, 17, 35, 1875], "facil": [4, 1253, 1867], "analyz": [4, 5, 23, 29, 65, 1879, 1880, 1889], "manipul": [4, 22, 57, 64, 1186, 1850, 1874, 1882, 1886, 1898, 1903], "1000000": [4, 1653], "mirror": [4, 132], "semant": [4, 10, 28, 35, 52, 53, 57, 65, 143, 783, 863, 864, 865, 882, 896, 924, 961, 1012, 1112, 1123, 1186, 1192, 1251, 1557, 1833, 1842, 1850, 1854, 1855, 1859, 1862, 1870, 1881, 1886, 1893, 1909], "number_per_run": 4, "raw_tim": 4, "task_spec": 4, "serializ": [4, 33, 1852], "consum": [4, 17, 32, 37, 42, 54, 64, 426, 1055, 1867, 1878, 1888, 1893, 1894, 1914], "extrapol": 4, "sinc": [4, 8, 14, 17, 19, 22, 23, 32, 33, 35, 40, 41, 45, 54, 57, 65, 307, 523, 736, 774, 782, 797, 798, 932, 1004, 1006, 1008, 1055, 1095, 1096, 1097, 1111, 1179, 1182, 1187, 1192, 1195, 1271, 1330, 1357, 1410, 1411, 1412, 1414, 1466, 1478, 1513, 1515, 1582, 1585, 1588, 1617, 1636, 1641, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1673, 1674, 1675, 1681, 1796, 1852, 1853, 1854, 1855, 1861, 1863, 1865, 1870, 1874, 1875, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1915, 1916], "properti": [4, 13, 32, 35, 36, 37, 41, 44, 49, 52, 57, 65, 781, 869, 901, 907, 985, 1071, 1072, 1074, 1076, 1077, 1078, 1086, 1087, 1088, 1182, 1326, 1447, 1569, 1585, 1595, 1596, 1597, 1627, 1648, 1850, 1855, 1859, 1865, 1875, 1878, 1883, 1896, 1899, 1905, 1909, 1911, 1912, 1915, 1917, 1920, 1921], "significant_figur": 4, "figur": [4, 8, 9, 14, 37, 65, 1877, 1879, 1893, 1898, 1907, 1914, 1919], "intend": [4, 52, 57, 65, 879, 888, 963, 1201, 1478, 1588, 1589, 1590, 1591, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1855, 1870, 1873, 1875, 1886, 1897], "interquartil": 4, "mitig": 4, "tail": [4, 32, 50], "645": 4, "trim_sigfig": 4, "human": [4, 25, 50, 1000, 1013, 1873, 1893, 1920], "raw": [4, 65, 1108, 1240, 1878, 1897], "built_with_debug_symbol": 4, "baseline_inclusive_stat": 4, "baseline_exclusive_stat": 4, "stmt_inclusive_stat": 4, "stmt_exclusive_stat": 4, "stmt_callgrind_out": 4, "done": [4, 12, 17, 20, 22, 27, 32, 35, 37, 40, 41, 43, 50, 57, 64, 65, 486, 669, 749, 897, 1072, 1074, 1077, 1078, 1080, 1081, 1084, 1085, 1087, 1088, 1090, 1092, 1197, 1271, 1332, 1333, 1334, 1351, 1354, 1366, 1377, 1378, 1379, 1396, 1397, 1398, 1399, 1424, 1453, 1459, 1461, 1594, 1791, 1855, 1859, 1863, 1867, 1875, 1877, 1878, 1879, 1881, 1882, 1886, 1889, 1893, 1896, 1898, 1900, 1901, 1905, 1907], "functioncount": [4, 1850], "stat": [4, 14, 23, 60, 815, 825, 826, 1012, 1019, 1020, 1021, 1453, 1594, 1865, 1878, 1918], "as_standard": 4, "strip": [4, 1515, 1594, 1852, 1895], "prefix": [4, 35, 37, 52, 57, 737, 746, 1182, 1414, 1594, 1849, 1861, 1875, 1893, 1897, 1918], "stumbl": 4, "filepath": 4, "dif": 4, "compon": [4, 8, 10, 12, 17, 23, 27, 29, 35, 41, 65, 669, 897, 1075, 1076, 1078, 1086, 1087, 1088, 1221, 1457, 1458, 1459, 1460, 1461, 1585, 1689, 1796, 1840, 1841, 1856, 1861, 1875, 1879, 1885, 1886, 1898, 1909], "locat": [4, 10, 14, 26, 35, 41, 49, 143, 147, 246, 503, 924, 926, 970, 1034, 1035, 1203, 1253, 1279, 1284, 1287, 1304, 1351, 1361, 1448, 1465, 1478, 1513, 1578, 1581, 1594, 1606, 1700, 1735, 1757, 1778, 1781, 1835, 1849, 1852, 1864, 1878, 1893, 1897, 1899, 1905, 1907, 1909, 1914, 1918], "someth": [4, 8, 12, 14, 16, 17, 22, 23, 59, 65, 890, 892, 1055, 1182, 1197, 1414, 1857, 1865, 1867, 1868, 1875, 1884, 1892, 1893, 1905, 1920], "resembl": [4, 27], "23234231": 4, "first_build_dir": 4, "foo": [4, 15, 26, 35, 49, 50, 64, 65, 813, 843, 848, 942, 1111, 1112, 1121, 1180, 1185, 1189, 1192, 1193, 1196, 1197, 1636, 1849, 1852, 1854, 1855, 1859, 1880, 1886, 1893, 1897, 1916], "9823794": 4, "bar": [4, 8, 17, 49, 65, 843, 848, 954, 1111, 1185, 1192, 1794, 1795, 1837, 1838, 1849, 1852, 1854, 1864, 1886, 1893, 1897, 1916], "53453": 4, "function_that_actually_chang": 4, "second_build_dir": 4, "cancel": [4, 1179], "site": [4, 8], "denois": 4, "explan": [4, 10, 14, 20, 23, 45, 851, 1182, 1414, 1850, 1879, 1880, 1886], "delta": [4, 41, 749, 1366, 1375, 1384, 1445, 1522, 1654, 1794, 1795, 1821, 1837, 1838, 1853, 1873], "inclus": [4, 41, 81, 503, 1142, 1144, 1252, 1268, 1274, 1710, 1711, 1793, 1904, 1916], "diff": [4, 8, 1852, 1853, 1895], "reason": [4, 9, 10, 12, 14, 17, 23, 32, 35, 37, 57, 62, 669, 830, 1076, 1078, 1182, 1197, 1198, 1217, 1218, 1245, 1282, 1330, 1354, 1414, 1515, 1563, 1590, 1591, 1606, 1731, 1852, 1854, 1855, 1861, 1875, 1879, 1881, 1889, 1891, 1893, 1905, 1912, 1920], "unit": [4, 24, 26, 41, 43, 53, 57, 65, 749, 750, 1073, 1091, 1326, 1336, 1356, 1359, 1364, 1365, 1366, 1367, 1432, 1433, 1443, 1478, 1502, 1506, 1511, 1512, 1558, 1566, 1610, 1611, 1615, 1618, 1620, 1623, 1823, 1875, 1877, 1883, 1897], "next": [4, 13, 14, 16, 17, 32, 35, 41, 52, 57, 65, 549, 749, 1186, 1318, 1367, 1385, 1431, 1594, 1629, 1867, 1874, 1875, 1877, 1881, 1886, 1888, 1898, 1899, 1905, 1906, 1909, 1912, 1914], "logic": [4, 6, 17, 26, 32, 40, 55, 57, 65, 914, 916, 917, 919, 1072, 1074, 1077, 1078, 1080, 1081, 1084, 1085, 1087, 1088, 1090, 1092, 1112, 1186, 1263, 1264, 1265, 1266, 1276, 1420, 1594, 1698, 1725, 1808, 1855, 1856, 1878, 1879, 1880, 1881, 1883, 1900], "question": [4, 11, 18, 32, 65, 1850, 1875], "why": [4, 8, 32, 57, 62, 65, 1055, 1186, 1563, 1850, 1862, 1881], "involv": [4, 6, 8, 10, 18, 24, 32, 35, 57, 60, 62, 65, 1594, 1855, 1868, 1870, 1875, 1878, 1879, 1882, 1886, 1893, 1905, 1906, 1907, 1909], "look": [4, 5, 8, 9, 10, 12, 14, 17, 20, 22, 23, 27, 35, 41, 51, 52, 59, 62, 65, 851, 890, 892, 1182, 1276, 1322, 1414, 1504, 1619, 1782, 1783, 1784, 1786, 1787, 1852, 1854, 1868, 1874, 1875, 1878, 1881, 1885, 1886, 1888, 1892, 1893, 1897, 1900, 1905, 1906, 1919], "autom": [4, 9, 14, 23, 65, 1852, 1900], "easili": [4, 8, 9, 16, 22, 23, 24, 33, 35, 1112, 1421, 1513, 1551, 1728, 1881, 1883, 1886, 1891, 1896, 1904, 1907, 1914], "exclus": [4, 32, 35, 41, 43, 52, 65, 724, 1144, 1594, 1710, 1711, 1714, 1875, 1916], "basi": [4, 10, 11, 41, 1254, 1675, 1878, 1885, 1900, 1905], "thought": [4, 49, 65, 1073, 1075, 1091], "path_and_function_nam": 4, "children": [4, 45, 57, 65, 780, 1182, 1414, 1867, 1886, 1897, 1907], "identifi": [4, 8, 10, 17, 35, 43, 46, 49, 52, 53, 54, 65, 806, 1144, 1253, 1453, 1856, 1867, 1876, 1885, 1886, 1897, 1905, 1906, 1907, 1914], "hot": [4, 17, 41, 1515, 1550, 1883], "spot": 4, "_data": 4, "truncate_row": 4, "_linewidth": 4, "subtract": [4, 305, 553, 854, 1108, 1515, 1782, 1783, 1784, 1786, 1787, 1797, 1853, 1870, 1895, 1909], "cpython": [4, 21, 65], "known": [4, 8, 10, 23, 31, 35, 39, 46, 58, 61, 63, 1118, 1119, 1197, 1198, 1253, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1384, 1429, 1443, 1445, 1465, 1524, 1566, 1585, 1756, 1757, 1814, 1850, 1853, 1857, 1865, 1867, 1870, 1873, 1875, 1877, 1890, 1893, 1896, 1907, 1910], "quit": [4, 8, 65, 1855, 1880, 1882, 1897, 1905], "noisi": 4, "higher": [4, 8, 9, 33, 35, 57, 58, 63, 143, 882, 883, 896, 1001, 1012, 1047, 1113, 1119, 1123, 1142, 1159, 1311, 1350, 1406, 1421, 1563, 1700, 1801, 1842, 1850, 1878, 1880, 1881, 1883, 1885, 1900, 1901, 1905, 1912], "filter": [4, 23, 533, 761, 762, 763, 1179, 1201, 1342, 1343, 1344, 1345, 1346, 1347, 1488, 1489, 1490, 1491, 1492, 1493, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1796, 1855, 1897], "rather": [4, 9, 10, 12, 16, 17, 26, 35, 43, 45, 54, 65, 768, 774, 906, 932, 1180, 1183, 1314, 1478, 1513, 1524, 1582, 1602, 1748, 1852, 1855, 1869, 1870, 1876, 1878, 1880, 1881, 1893, 1897, 1900, 1905, 1909, 1914], "unicod": [4, 1856], "lookup": [4, 17, 37, 41, 1357, 1504, 1852, 1856, 1877, 1906], "agnost": [4, 52, 1513, 1869], "reliabl": [4, 18], "warrant": 4, "filter_fn": 4, "map_fn": 4, "coalesc": [4, 14, 17, 315, 320, 533, 603, 969, 1781, 1831, 1853, 1879, 1895, 1909], "finit": [5, 41, 897, 898, 1171, 1172, 1217, 1218, 1228, 1229, 1245, 1271, 1304, 1308, 1330, 1800, 1880, 1883, 1916], "natur": [5, 8, 9, 24, 35, 41, 57, 897, 898, 1210, 1215, 1241, 1255, 1257, 1262, 1322, 1461, 1563, 1883, 1909, 1910], "against": [5, 20, 26, 35, 43, 52, 783, 854, 897, 898, 1083, 1084, 1085, 1089, 1090, 1092, 1124, 1173, 1182, 1197, 1198, 1414, 1420, 1651, 1849, 1855, 1897, 1919], "cprofil": 5, "correct": [5, 7, 8, 22, 33, 35, 36, 37, 41, 52, 198, 199, 202, 214, 544, 569, 592, 593, 604, 886, 898, 954, 1076, 1078, 1086, 1087, 1088, 1156, 1180, 1183, 1197, 1198, 1217, 1351, 1368, 1380, 1585, 1594, 1627, 1747, 1794, 1795, 1837, 1838, 1851, 1852, 1853, 1854, 1868, 1869, 1878, 1880, 1883, 1911], "launch": [5, 16, 26, 32, 38, 43, 44, 45, 50, 51, 52, 55, 64, 959, 1594, 1850, 1875, 1877, 1878, 1879, 1905], "spent": [5, 14, 23, 35, 907, 1681, 1877, 1886], "appear": [5, 33, 35, 41, 65, 843, 1001, 1055, 1096, 1097, 1123, 1253, 1287, 1289, 1590, 1595, 1721, 1750, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1842, 1852, 1855, 1868, 1869, 1880, 1881, 1886, 1893, 1897], "extrem": [5, 17, 1594, 1875, 1893], "expens": [5, 14, 20, 23, 32, 41, 57, 1601, 1878, 1883, 1885, 1899, 1905, 1915], "bound": [5, 23, 27, 33, 57, 472, 784, 926, 937, 1069, 1070, 1182, 1327, 1328, 1329, 1407, 1408, 1409, 1414, 1432, 1513, 1683, 1714, 1735, 1855, 1856, 1873, 1875, 1897, 1900, 1910], "greater": [5, 35, 52, 284, 606, 669, 931, 932, 937, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1126, 1138, 1236, 1299, 1330, 1462, 1513, 1524, 1550, 1563, 1582, 1602, 1635, 1835, 1853, 1875, 1878, 1890, 1895, 1910], "spend": [5, 8, 1254], "sens": [5, 41, 52, 65, 1617, 1832, 1833, 1855, 1875], "respons": [5, 8, 10, 35, 37, 39, 41, 43, 49, 54, 57, 64, 959, 1402, 1531, 1594, 1875, 1878, 1880, 1881, 1886, 1905], "Of": [5, 1640, 1849, 1879, 1880], "cours": [5, 14, 17, 65, 1849, 1879, 1880, 1905], "realiti": 5, "complic": [5, 33, 65, 782, 1859, 1869, 1876, 1897, 1905, 1907], "depend": [5, 6, 12, 14, 16, 17, 19, 22, 26, 32, 35, 39, 41, 43, 52, 53, 54, 57, 65, 307, 774, 867, 967, 1014, 1018, 1032, 1033, 1076, 1078, 1086, 1087, 1088, 1113, 1117, 1122, 1193, 1197, 1217, 1218, 1245, 1271, 1276, 1330, 1331, 1348, 1350, 1358, 1361, 1374, 1380, 1381, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1465, 1466, 1478, 1485, 1486, 1496, 1505, 1513, 1525, 1548, 1556, 1563, 1582, 1585, 1594, 1606, 1607, 1613, 1648, 1675, 1687, 1689, 1706, 1722, 1782, 1783, 1784, 1786, 1787, 1800, 1823, 1845, 1849, 1852, 1854, 1855, 1862, 1867, 1875, 1877, 1878, 1880, 1881, 1883, 1886, 1893, 1899, 1900, 1905, 1909, 1915, 1916], "could": [5, 6, 8, 9, 12, 14, 19, 23, 32, 35, 41, 43, 52, 57, 62, 64, 65, 572, 573, 574, 576, 577, 994, 1076, 1078, 1086, 1087, 1088, 1179, 1212, 1253, 1271, 1295, 1296, 1674, 1777, 1832, 1854, 1855, 1862, 1867, 1875, 1878, 1879, 1892, 1893, 1897, 1900, 1901, 1905, 1906, 1907, 1909, 1913, 1914], "account": [5, 50, 65, 1594, 1873, 1877, 1909], "heavili": [5, 1659, 1877, 1880, 1897], "similarli": [5, 8, 16, 64, 65, 749, 779, 783, 847, 933, 1075, 1182, 1237, 1414, 1590, 1591, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1624, 1824, 1825, 1826, 1827, 1854, 1875, 1880, 1882, 1883, 1889, 1909], "platform": [5, 9, 10, 26, 35, 44, 45, 49, 1228, 1229, 1240, 1699, 1800, 1863, 1884, 1889, 1890, 1900], "startup": 5, "slower": [5, 26, 35, 865, 891, 1095, 1096, 1097, 1211, 1218, 1532, 1601, 1880, 1890, 1896, 1910], "rerun": [6, 35, 1878], "segment": [6, 14, 19, 1012, 1108, 1445, 1897], "persist": [6, 30, 37, 57, 749, 804, 805, 806, 1182, 1366, 1384, 1414, 1429, 1878, 1886, 1891, 1892], "rng": [6, 32, 987, 1026, 1736, 1878, 1890, 1904], "advanc": [6, 14, 27, 32, 33, 43, 1457, 1459, 1461, 1640, 1649, 1859, 1862, 1869, 1878, 1884, 1888, 1913, 1914], "juggl": 6, "dropout": [6, 40, 65, 723, 724, 749, 1182, 1326, 1353, 1354, 1355, 1359, 1366, 1384, 1414, 1420, 1429, 1430, 1457, 1459, 1461, 1479, 1499, 1500, 1501, 1506, 1563, 1850, 1853, 1863, 1869, 1870, 1875, 1878, 1895, 1902], "moder": 6, "hit": [6, 9, 14, 23, 26, 1594, 1849, 1878], "preserve_rng_st": 6, "checkpoint_sequenti": [6, 1850], "omit": [6, 26, 35, 53, 1089, 1090, 1092, 1368, 1428, 1892, 1893, 1905, 1916], "_infer_device_typ": 6, "remain": [6, 9, 41, 52, 65, 1289, 1357, 1358, 1504, 1505, 1585, 1594, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1624, 1700, 1722, 1865, 1867, 1874, 1882, 1886], "consequ": [6, 62, 1245, 1384, 1800, 1855, 1875, 1878, 1890], "random": [6, 14, 23, 41, 43, 52, 53, 58, 65, 81, 147, 749, 881, 912, 987, 988, 993, 1002, 1003, 1022, 1023, 1026, 1027, 1116, 1123, 1134, 1158, 1254, 1274, 1293, 1294, 1298, 1300, 1326, 1337, 1359, 1366, 1384, 1432, 1506, 1556, 1561, 1585, 1602, 1608, 1614, 1615, 1622, 1623, 1642, 1689, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1736, 1749, 1801, 1842, 1849, 1850, 1853, 1861, 1873, 1881, 1883, 1889, 1893, 1895, 1914], "gradient": [6, 14, 24, 32, 33, 35, 39, 41, 57, 58, 61, 143, 214, 215, 282, 327, 478, 485, 503, 684, 685, 869, 878, 880, 882, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 913, 939, 1059, 1111, 1112, 1113, 1114, 1118, 1123, 1124, 1157, 1182, 1217, 1218, 1221, 1228, 1229, 1245, 1254, 1271, 1273, 1279, 1282, 1284, 1330, 1337, 1345, 1346, 1347, 1350, 1351, 1357, 1358, 1368, 1382, 1383, 1414, 1421, 1445, 1496, 1497, 1504, 1505, 1515, 1524, 1532, 1534, 1535, 1548, 1582, 1583, 1584, 1590, 1591, 1594, 1595, 1598, 1599, 1601, 1606, 1639, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1674, 1687, 1745, 1781, 1800, 1842, 1850, 1852, 1853, 1862, 1869, 1870, 1873, 1878, 1879, 1880, 1882, 1883, 1886, 1889, 1895, 1896, 1905, 1906, 1909], "among": [6, 32, 33, 35, 39, 41, 52, 968, 969, 972, 1144, 1351, 1642, 1855], "detect": [6, 14, 23, 26, 28, 29, 32, 35, 36, 43, 45, 57, 890, 891, 892, 893, 894, 895, 1112, 1186, 1458, 1460, 1594, 1835, 1850, 1867, 1870, 1878, 1883, 1889, 1893, 1897, 1905], "priorit": [6, 1115, 1116, 1118, 1656, 1657, 1909], "encount": [6, 12, 14, 17, 19, 23, 35, 62, 64, 65, 1594, 1852, 1855, 1857, 1877, 1889, 1897, 1900], "defaultdevicetyp": 6, "anticip": 6, "belong": [6, 17, 22, 35, 37, 39, 41, 49, 65, 926, 961, 1671, 1849, 1878, 1896, 1920], "use_reentr": 6, "context_fn": 6, "noop_context_fn": 6, "techniqu": [6, 17, 23, 65, 1352, 1608, 1821, 1871, 1886, 1896, 1898, 1900], "intermedi": [6, 26, 42, 62, 65, 923, 1106, 1112, 1119, 1271, 1358, 1457, 1459, 1461, 1505, 1852, 1855, 1878, 1880, 1881, 1882, 1889, 1919], "entir": [6, 8, 12, 13, 14, 17, 18, 23, 26, 32, 35, 43, 53, 65, 686, 897, 898, 1112, 1135, 1353, 1354, 1355, 1359, 1377, 1378, 1379, 1386, 1499, 1500, 1501, 1506, 1594, 1612, 1614, 1638, 1855, 1870, 1875, 1878, 1880, 1881, 1882, 1885, 1886, 1893, 1897, 1900, 1905, 1907, 1909], "recomput": [6, 888, 1466, 1524, 1638, 1896], "refer": [6, 12, 17, 18, 19, 23, 26, 32, 33, 35, 36, 37, 39, 41, 44, 47, 48, 52, 53, 57, 58, 64, 246, 723, 724, 745, 753, 781, 782, 783, 808, 809, 810, 813, 814, 815, 848, 862, 867, 882, 924, 994, 999, 1058, 1108, 1130, 1131, 1163, 1170, 1182, 1185, 1193, 1200, 1213, 1234, 1238, 1251, 1254, 1337, 1368, 1414, 1463, 1478, 1486, 1495, 1513, 1581, 1594, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1689, 1706, 1742, 1764, 1801, 1835, 1849, 1850, 1853, 1867, 1868, 1870, 1871, 1874, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1888, 1890, 1896, 1901, 1902, 1905, 1906, 1909, 1912, 1913, 1914, 1917], "potenti": [6, 9, 14, 17, 35, 52, 54, 184, 201, 1191, 1227, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1563, 1594, 1835, 1854, 1862, 1867, 1875, 1878, 1897, 1909, 1913], "silent": [6, 16, 1002, 1003, 1022, 1023, 1156, 1197, 1414, 1598, 1599, 1878, 1889, 1893], "consider": [6, 8, 873, 1179, 1358, 1594, 1855, 1877], "limit": [6, 9, 10, 14, 16, 17, 20, 23, 32, 40, 57, 58, 63, 1025, 1112, 1195, 1299, 1337, 1357, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1563, 1594, 1617, 1748, 1850, 1855, 1859, 1867, 1869, 1870, 1875, 1878, 1879, 1886, 1889, 1890, 1891, 1897, 1900, 1903, 1905, 1906, 1916], "reentrant": [6, 1594], "stop": [6, 41, 43, 52, 53, 54, 854, 994, 1180, 1254, 1337, 1627, 1683, 1715, 1852, 1855, 1905], "soon": [6, 17, 23, 52, 57, 782, 1875, 1900, 1905, 1907], "set_checkpoint_early_stop": 6, "entireti": 6, "no_grad": [6, 850, 1059, 1113, 1117, 1122, 1157, 1182, 1357, 1414, 1420, 1461, 1595, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1873, 1875, 1886, 1917], "condit": [6, 30, 32, 62, 65, 606, 609, 613, 683, 749, 891, 897, 898, 1179, 1197, 1211, 1213, 1221, 1227, 1228, 1229, 1240, 1245, 1366, 1384, 1429, 1461, 1629, 1634, 1823, 1845, 1851, 1852, 1853, 1854, 1856, 1870, 1875, 1880, 1889, 1898, 1914], "unmet": 6, "particip": [6, 10, 32, 35, 36, 39, 52, 53, 1594, 1906], "wherea": [6, 1237, 1295, 1296, 1309, 1800, 1855, 1916], "know": [6, 8, 9, 14, 17, 26, 36, 42, 65, 477, 886, 891, 1106, 1112, 1192, 1594, 1852, 1855, 1862, 1874, 1875, 1878, 1883, 1893, 1897, 1905, 1906, 1907, 1909], "lstm": [6, 752, 1385, 1853, 1878, 1893, 1895, 1900, 1902, 1903, 1914], "hidden": [6, 749, 1121, 1366, 1367, 1384, 1385, 1429, 1431, 1595, 1878, 1914], "correctli": [6, 16, 32, 35, 52, 57, 477, 1112, 1182, 1197, 1414, 1532, 1852, 1854, 1855, 1865, 1869, 1874, 1875, 1879, 1880, 1881, 1888, 1890, 1900, 1905], "entrant": 6, "futur": [6, 9, 10, 14, 33, 35, 37, 43, 52, 53, 62, 65, 282, 313, 503, 507, 546, 669, 676, 782, 804, 805, 806, 815, 850, 888, 932, 933, 947, 948, 955, 956, 958, 959, 961, 990, 991, 998, 999, 1001, 1128, 1182, 1185, 1191, 1192, 1195, 1200, 1212, 1223, 1225, 1226, 1227, 1230, 1243, 1271, 1272, 1283, 1354, 1414, 1515, 1537, 1538, 1539, 1586, 1594, 1598, 1635, 1636, 1641, 1659, 1699, 1715, 1796, 1800, 1823, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1861, 1862, 1863, 1865, 1869, 1870, 1877, 1878, 1880, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1909, 1911, 1915, 1916, 1917, 1919], "sequenti": [6, 14, 23, 32, 39, 57, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 782, 1123, 1182, 1191, 1360, 1414, 1453, 1464, 1603, 1617, 1684, 1842, 1852, 1867, 1870, 1878, 1886, 1893, 1896, 1898, 1900, 1919], "func": [6, 35, 40, 60, 62, 65, 851, 881, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 1157, 1185, 1197, 1198, 1513, 1636, 1842, 1850, 1855, 1874, 1905, 1907, 1920], "compris": [6, 53], "chunk": [6, 32, 35, 37, 57, 929, 972, 1117, 1351, 1594, 1788, 1852, 1853, 1868, 1895, 1896, 1898, 1905, 1913], "input_var": [6, 1351], "person": [7, 8, 10], "land": [7, 10, 11, 20], "six": [7, 1344], "commit": [7, 8, 10, 20, 26, 58, 1849, 1850, 1889, 1890], "repositori": [7, 10, 61, 65, 1849, 1880, 1888], "submit": [7, 10, 20, 958, 959, 961, 1878, 1890], "month": [7, 10], "qualifi": [7, 35, 40, 49, 65, 669, 1182, 1414, 1861, 1897], "pr": [7, 8, 1689, 1801, 1919], "interest": [7, 8, 10, 13, 16, 18, 1875, 1881, 1883, 1886], "merge_rul": 7, "vote": [7, 10], "decis": [7, 37, 43, 52, 54, 65, 1197, 1862, 1874], "criteria": [7, 10, 1254], "approv": [7, 10], "Not": [7, 17, 53, 1312, 1852, 1854, 1855, 1856, 1880, 1895, 1900, 1905], "busi": [7, 10], "dai": [7, 8, 20], "contributor": [7, 8, 9, 10], "seen": [7, 15, 17, 29, 41, 65, 214, 929, 942, 1283, 1345, 1346, 1347, 1445, 1537, 1538, 1539, 1683, 1852, 1862, 1875, 1878, 1893, 1909], "thumb": [7, 35], "acceler": [8, 14, 33, 1332, 1333, 1334, 1453, 1653, 1884], "deep": [8, 10, 14, 21, 23, 65, 1332, 1333, 1334, 1356, 1453, 1669, 1850, 1873, 1886, 1900], "neural": [8, 9, 27, 65, 1326, 1337, 1352, 1359, 1368, 1380, 1413, 1414, 1421, 1426, 1427, 1441, 1443, 1457, 1459, 1461, 1543, 1566, 1604, 1667, 1675, 1681, 1852, 1854, 1855, 1873, 1878, 1889, 1893], "tape": 8, "system": [8, 9, 26, 27, 28, 32, 53, 62, 65, 935, 1135, 1189, 1213, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1242, 1243, 1244, 1248, 1253, 1272, 1299, 1457, 1459, 1461, 1594, 1604, 1606, 1744, 1823, 1856, 1861, 1865, 1875, 1877, 1878, 1885, 1886, 1892, 1897, 1905], "organ": [8, 14, 17, 1879, 1885, 1897], "technic": [8, 10, 18, 52, 65, 1182, 1414, 1590, 1591, 1850, 1875, 1882, 1897], "md": [8, 65, 781, 1897], "healthi": [8, 43, 52], "team": [8, 35, 58, 1891, 1898], "commun": [8, 9, 10, 14, 16, 18, 36, 37, 39, 43, 52, 54, 57, 1594, 1875, 1879, 1905, 1906], "ve": [8, 14, 17, 18, 60, 61, 62, 65, 1186, 1862, 1867, 1875, 1881, 1906, 1914], "come": [8, 9, 10, 17, 19, 32, 40, 41, 42, 49, 52, 58, 62, 1055, 1106, 1112, 1253, 1353, 1354, 1355, 1359, 1380, 1650, 1859, 1863, 1879, 1881, 1885, 1897, 1905, 1907, 1909], "peopl": [8, 16, 1875, 1900], "scratch": [8, 23, 1875], "itch": 8, "acquaint": 8, "tip": [8, 14, 1878], "tracker": [8, 1254], "confirm": [8, 14, 19, 1849, 1852, 1880, 1893, 1905, 1907], "tend": [8, 892, 1835], "bootcamp": 8, "1hr": 8, "although": [8, 9, 22, 40, 41, 62, 65, 961, 1345, 1346, 1347, 1414, 1422, 1594, 1850, 1855, 1874, 1880, 1889, 1898, 1900], "join": [8, 33, 35, 39, 52, 53, 64, 65, 1594, 1849, 1850, 1856, 1867, 1875, 1879, 1888, 1895, 1915], "dev": [8, 11, 21, 23, 44, 49], "happi": 8, "research": [8, 9, 10, 1594, 1849, 1875, 1883, 1891], "partner": 8, "speed": [8, 9, 17, 18, 26, 39, 967, 1055, 1111, 1173, 1186, 1191, 1245, 1322, 1420, 1800, 1875, 1877, 1878, 1879, 1880, 1882, 1884, 1889, 1900, 1905], "reach": [8, 9, 10, 13, 32, 33, 35, 36, 43, 52, 58, 1254, 1594, 1672, 1675, 1678, 1679, 1875, 1888, 1898, 1900, 1901, 1905], "design": [8, 10, 14, 16, 21, 23, 32, 41, 49, 52, 58, 61, 62, 63, 897, 898, 1182, 1201, 1414, 1648, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1811, 1849, 1850, 1851, 1865, 1878, 1880, 1884, 1886, 1897], "comment": [8, 65, 1739, 1855, 1856, 1880, 1912, 1914], "crack": 8, "usual": [8, 26, 32, 33, 37, 52, 53, 65, 77, 472, 820, 821, 822, 823, 830, 882, 890, 892, 896, 1123, 1353, 1354, 1355, 1359, 1374, 1377, 1378, 1379, 1380, 1585, 1594, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1842, 1852, 1855, 1870, 1874, 1875, 1877, 1878, 1882, 1885, 1896, 1901, 1903, 1905, 1914, 1920], "idea": [8, 14, 23, 58, 1055, 1322, 1594, 1878, 1885, 1893, 1906], "rfc": [8, 1875, 1900, 1906], "big": [8, 1656, 1657, 1660, 1666, 1667, 1782, 1783, 1784, 1785, 1786, 1787, 1896, 1900], "post": [8, 9, 21, 23, 36, 37, 39, 57, 845, 846, 850, 1182, 1414, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1850, 1859, 1875, 1879, 1882, 1892], "standard": [8, 26, 29, 33, 41, 45, 46, 50, 62, 65, 77, 344, 369, 578, 1075, 1326, 1332, 1333, 1334, 1369, 1377, 1378, 1379, 1380, 1386, 1453, 1459, 1461, 1642, 1689, 1712, 1758, 1763, 1794, 1795, 1854, 1856, 1870, 1873, 1877, 1878, 1888, 1889, 1893, 1894, 1897, 1910], "lot": [8, 16, 17, 18, 26, 32, 1867, 1875, 1878, 1883, 1888, 1897, 1898, 1904, 1906, 1914], "boil": 8, "mostli": [8, 41, 1180, 1594, 1878, 1909, 1920], "evid": 8, "peer": [8, 35, 39, 52, 57, 965, 1594, 1878, 1905], "paper": [8, 10, 33, 41, 749, 1322, 1326, 1332, 1333, 1334, 1336, 1345, 1346, 1347, 1352, 1353, 1354, 1355, 1356, 1359, 1362, 1363, 1366, 1369, 1372, 1377, 1378, 1379, 1386, 1420, 1426, 1427, 1432, 1441, 1445, 1453, 1457, 1459, 1461, 1462, 1463, 1508, 1509, 1518, 1656, 1657, 1668, 1675, 1681, 1883, 1898], "framework": [8, 9, 10, 41, 49, 58, 64, 749, 963, 1291, 1366, 1594, 1601, 1669, 1748, 1850, 1887, 1898, 1900, 1906, 1907], "bit": [8, 16, 17, 65, 81, 322, 449, 750, 752, 754, 808, 809, 810, 811, 814, 816, 847, 915, 918, 947, 948, 1108, 1162, 1723, 1724, 1736, 1765, 1878, 1886, 1889, 1892, 1900, 1903, 1904, 1909, 1912, 1915, 1921], "accept": [8, 10, 23, 32, 35, 37, 40, 58, 59, 61, 63, 143, 503, 791, 878, 879, 880, 881, 882, 887, 896, 932, 998, 1001, 1107, 1123, 1144, 1182, 1186, 1350, 1414, 1421, 1442, 1613, 1627, 1628, 1634, 1652, 1740, 1777, 1791, 1842, 1855, 1869, 1878, 1880, 1881, 1893, 1896, 1905, 1912, 1914], "overwhelm": [8, 14, 23, 1905], "newli": [8, 17, 57, 65, 1069, 1070, 1357, 1358, 1701, 1702, 1859], "publish": [8, 10, 44, 49, 52, 1254, 1850], "ground": [8, 10, 1350, 1496, 1914], "becom": [8, 9, 10, 14, 17, 23, 32, 35, 41, 65, 282, 749, 865, 1135, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1366, 1384, 1399, 1419, 1429, 1442, 1496, 1513, 1585, 1673, 1773, 1821, 1862, 1863, 1875, 1879, 1893, 1897, 1899, 1905], "refactor": [8, 65, 1892, 1900], "coordin": [8, 14, 23, 35, 37, 41, 43, 572, 575, 873, 1135, 1144, 1283, 1693, 1785, 1825, 1827, 1875, 1909, 1914], "pace": 8, "branch": [8, 20, 65, 1849, 1854, 1855, 1878], "fast": [8, 9, 16, 32, 35, 897, 1356, 1377, 1378, 1379, 1445, 1461, 1563, 1681, 1687, 1706, 1728, 1743, 1850, 1877, 1878, 1880, 1884, 1896, 1905, 1909, 1912, 1913], "definit": [8, 9, 17, 32, 35, 36, 41, 48, 65, 933, 934, 935, 954, 998, 1103, 1202, 1211, 1212, 1254, 1380, 1525, 1570, 1641, 1719, 1821, 1849, 1852, 1854, 1856, 1874, 1875, 1880, 1883, 1897, 1900, 1914, 1916], "fundament": [8, 62, 1854, 1886, 1905, 1909], "cut": [8, 14], "guidanc": [8, 10, 27, 59, 1898], "stage": [8, 23, 29, 33, 39, 49, 57, 64, 1850, 1862, 1870, 1898, 1907], "piec": [8, 17, 1861, 1870, 1906], "advic": 8, "readi": [8, 18, 26, 64, 850, 851, 911, 920, 1139, 1140, 1594, 1852, 1879, 1905, 1906], "draft": 8, "convert": [8, 17, 22, 23, 32, 35, 40, 41, 42, 57, 61, 65, 143, 569, 573, 574, 575, 576, 577, 724, 777, 778, 779, 781, 782, 783, 804, 805, 806, 827, 828, 843, 846, 847, 848, 868, 869, 928, 941, 1039, 1075, 1106, 1182, 1251, 1414, 1424, 1425, 1453, 1460, 1585, 1596, 1597, 1600, 1637, 1648, 1650, 1651, 1701, 1702, 1707, 1782, 1783, 1784, 1785, 1786, 1787, 1852, 1853, 1854, 1855, 1870, 1880, 1884, 1893, 1894, 1900, 1903, 1909, 1914, 1916, 1919], "press": [8, 65], "button": [8, 20], "prepend": [8, 26, 32, 35, 39, 65, 222, 1047, 1182, 1276, 1414, 1817, 1853, 1876], "titl": [8, 1895, 1899], "wip": 8, "progress": [8, 35, 39, 43, 53, 55, 958, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1836, 1849, 1864], "ci": [8, 20, 1850], "folk": 8, "who": [8, 9, 10, 17, 18, 24, 52, 1897], "regularli": 8, "queue": [8, 43, 54, 1867, 1914], "everyth": [8, 14, 17, 23, 32, 41, 61, 1852, 1867, 1897], "happen": [8, 10, 17, 18, 35, 37, 39, 41, 43, 45, 52, 57, 62, 65, 77, 596, 780, 803, 1112, 1453, 1594, 1601, 1672, 1678, 1679, 1685, 1800, 1850, 1865, 1867, 1875, 1878, 1879, 1880, 1881, 1882, 1887, 1888, 1892, 1893, 1900, 1905, 1913], "subsystem": [8, 24, 58, 63, 1850, 1880], "feel": [8, 1870, 1893, 1909], "ll": [8, 12, 62, 65, 749, 809, 810, 850, 851, 933, 1001, 1211, 1366, 1367, 1384, 1385, 1862, 1875, 1878, 1880, 1881, 1888, 1893, 1900, 1906], "round": [8, 32, 35, 498, 654, 655, 788, 791, 809, 854, 950, 952, 1012, 1050, 1076, 1077, 1078, 1082, 1086, 1087, 1088, 1103, 1227, 1240, 1466, 1524, 1699, 1700, 1719, 1768, 1851, 1853, 1855, 1868, 1878, 1895, 1900, 1903, 1909, 1910], "trip": [8, 65, 1076, 1077, 1078, 1082, 1086, 1087, 1088], "noth": [8, 26, 43, 65, 669, 992, 1606, 1656, 1657, 1684, 1852, 1854, 1907], "accompani": 8, "solut": [8, 9, 62, 1226, 1227, 1231, 1239, 1242, 1244, 1248, 1330, 1594, 1823, 1852, 1853, 1873, 1874, 1882, 1888], "think": [8, 10, 14, 65, 1852, 1854, 1875, 1896, 1897, 1907], "confid": [8, 1914], "ahead": [8, 14, 1850, 1900], "search": [8, 12, 20, 23, 24, 33, 808, 926, 1372, 1518, 1594, 1651, 1706, 1735, 1852, 1868, 1869, 1893, 1897, 1909], "repo": [8, 1675, 1849, 1892], "unabl": [8, 23, 62, 1893, 1896], "reproduc": [8, 14, 23, 32, 62, 305, 313, 505, 507, 913, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1410, 1411, 1412, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1505, 1513, 1524, 1551, 1563, 1582, 1583, 1584, 1585, 1835, 1849, 1850, 1896, 1897], "problemat": [8, 32, 65, 1852, 1889, 1901], "insight": [8, 29], "individu": [8, 10, 16, 20, 26, 32, 33, 35, 37, 39, 57, 65, 234, 669, 781, 827, 828, 933, 1021, 1073, 1091, 1182, 1337, 1414, 1453, 1594, 1648, 1855, 1868, 1874, 1875, 1878, 1880, 1885, 1889, 1890, 1893, 1903, 1905, 1916], "intent": [8, 19, 50, 52, 62, 1740, 1862, 1897], "lock": [8, 32, 35, 39, 41, 1875, 1878, 1888, 1897, 1906], "strike": 8, "convers": [8, 22, 449, 569, 572, 782, 927, 1167, 1627, 1850, 1856, 1884, 1893, 1900, 1901, 1909], "medium": [8, 57, 1743], "prioriti": [8, 10, 11, 35, 669, 843, 961, 1854], "entranc": [8, 1878], "great": [8, 1875, 1883], "deal": [8, 9, 17, 32, 43, 54, 1816, 1867, 1882, 1905], "welcom": [8, 1870, 1896, 1909], "aim": [8, 1881, 1909], "rare": [8, 1874, 1893, 1920], "typo": 8, "send": [8, 16, 32, 35, 43, 54, 994, 1585, 1594, 1867, 1879, 1888, 1892, 1895, 1899, 1905, 1906, 1907, 1917, 1919], "forum": [8, 10, 1882, 1888], "share": [8, 11, 26, 32, 36, 39, 41, 42, 52, 53, 57, 62, 214, 303, 332, 449, 474, 510, 513, 606, 848, 868, 869, 886, 897, 898, 956, 958, 990, 994, 1106, 1107, 1108, 1152, 1229, 1313, 1314, 1351, 1594, 1604, 1642, 1717, 1731, 1791, 1814, 1820, 1834, 1853, 1874, 1875, 1877, 1888, 1891, 1892, 1893, 1905, 1909, 1911, 1913, 1918], "resolv": [8, 9, 10, 37, 41, 65, 1182, 1345, 1346, 1347, 1361, 1411, 1414, 1854, 1855, 1856, 1892, 1897, 1911, 1920], "challeng": [8, 14, 35, 1906], "feedback": [8, 23, 29, 33, 57, 58, 1594, 1850], "direct": [8, 10, 17, 22, 24, 35, 749, 781, 1096, 1097, 1182, 1366, 1384, 1414, 1429, 1638, 1668, 1689, 1706, 1727, 1875, 1878, 1880, 1886, 1905], "yourself": [8, 14, 60, 956, 1880, 1886, 1888, 1920], "problem": [8, 14, 18, 23, 32, 35, 52, 62, 1055, 1197, 1227, 1239, 1254, 1350, 1421, 1478, 1739, 1867, 1875, 1878, 1882, 1883, 1888, 1892, 1898, 1900, 1901, 1907, 1912], "area": [8, 10, 1524, 1886, 1900, 1910], "appreci": 8, "strive": 8, "respond": [8, 35], "quickli": [8, 9, 16, 33, 52], "ey": [8, 41, 184, 201, 934, 1123, 1202, 1211, 1222, 1233, 1236, 1239, 1240, 1247, 1248, 1601, 1699, 1778, 1842, 1853, 1857, 1880, 1895], "everyon": [8, 43, 52], "touch": [8, 50, 65], "versu": [8, 1418], "write": [8, 9, 10, 14, 16, 18, 23, 29, 32, 35, 37, 40, 43, 45, 49, 50, 51, 52, 57, 62, 63, 246, 503, 686, 924, 1107, 1123, 1159, 1192, 1212, 1223, 1224, 1225, 1229, 1230, 1243, 1581, 1649, 1731, 1823, 1835, 1842, 1850, 1854, 1865, 1869, 1878, 1881, 1882, 1883, 1896, 1897, 1909, 1914], "blog": [8, 9, 1859, 1879, 1900], "around": [8, 10, 17, 23, 24, 35, 41, 61, 62, 64, 65, 143, 613, 882, 896, 956, 958, 959, 961, 1030, 1101, 1102, 1112, 1182, 1594, 1728, 1852, 1867, 1875, 1878, 1893, 1905], "internet": 8, "grow": [8, 9, 16, 65, 1909], "market": [8, 10], "benefit": [8, 9, 23, 35, 65, 836, 1683, 1867, 1878, 1900, 1909], "opinion": [8, 9, 1909], "isn": [8, 32, 65, 449, 1179, 1875, 1878, 1880, 1905, 1916], "aspect": [8, 35, 65, 1880, 1886], "seem": [8, 1893], "unusu": 8, "claim": [8, 1681, 1883], "wast": [8, 1878], "someon": [8, 10, 1180, 1869], "too": [8, 10, 18, 23, 26, 33, 37, 52, 57, 62, 65, 1012, 1111, 1227, 1245, 1310, 1337, 1350, 1414, 1497, 1595, 1636, 1855, 1877, 1882, 1883, 1888, 1889, 1890, 1892, 1894, 1897, 1898, 1907, 1909], "advisori": 8, "fashion": [8, 32, 35, 54, 505, 1259, 1617, 1852], "rough": [8, 10], "consensu": [8, 10], "corpor": [8, 23], "wrote": [8, 9], "implicitli": [8, 35, 45, 57, 65, 1038, 1127, 1135, 1197, 1198, 1253, 1327, 1328, 1329, 1407, 1408, 1409, 1740, 1821, 1852, 1854, 1855, 1875, 1884], "lifetim": [8, 1878, 1905], "immedi": [8, 9, 10, 52, 53, 57, 64, 1182, 1185, 1414, 1855, 1886, 1891, 1896, 1905, 1907], "sai": [8, 17, 22, 65, 486, 1115, 1116, 1117, 1182, 1414, 1852, 1874, 1875, 1882, 1897, 1906, 1907, 1909], "bugfix": 8, "motiv": [8, 9, 14, 23, 65, 724, 1886, 1906], "ye": [8, 1893, 1896, 1909], "knuth": 8, "bewar": 8, "mere": 8, "proven": [8, 1352, 1594], "ok": [8, 15, 45, 50, 61, 942, 1187, 1907], "sometim": [8, 65, 893, 1012, 1197, 1361, 1465, 1491, 1492, 1493, 1606, 1850, 1855, 1867, 1875, 1878, 1881, 1882, 1886, 1888, 1897, 1912, 1915, 1920], "obvious": [8, 16], "broken": [8, 32, 1012, 1893, 1897], "contrari": [8, 1877], "accident": 8, "put": [8, 10, 32, 35, 43, 61, 64, 65, 311, 1075, 1253, 1369, 1675, 1849, 1853, 1867, 1878, 1888, 1895, 1897, 1906, 1907], "difficulti": [8, 1873], "nonlinearli": 8, "sign": [8, 41, 333, 518, 873, 949, 1043, 1091, 1103, 1108, 1215, 1240, 1241, 1262, 1406, 1668, 1719, 1751, 1765, 1851, 1853, 1868, 1895, 1903, 1909, 1912, 1915, 1916], "split": [8, 32, 35, 65, 606, 761, 762, 763, 848, 850, 851, 929, 936, 1012, 1053, 1145, 1351, 1365, 1366, 1384, 1420, 1429, 1488, 1489, 1490, 1491, 1492, 1493, 1512, 1815, 1843, 1852, 1853, 1868, 1878, 1895, 1897, 1898, 1900, 1905, 1909, 1913], "shippabl": 8, "subtl": [8, 14, 23, 1377, 1378, 1379, 1880], "nuanc": [8, 17, 18], "extra": [8, 17, 26, 32, 33, 35, 39, 41, 57, 65, 1055, 1112, 1123, 1182, 1189, 1192, 1227, 1253, 1414, 1421, 1601, 1796, 1842, 1854, 1869, 1875, 1877, 1879, 1880, 1882, 1885, 1897, 1899, 1909, 1916, 1917], "understand": [8, 9, 10, 12, 13, 14, 16, 17, 18, 23, 35, 37, 43, 44, 1112, 1239, 1859, 1873, 1875, 1878, 1884, 1891, 1899, 1914], "hack": 8, "answer": [8, 11, 65, 813, 1331, 1619], "regress": [8, 19, 1330, 1890], "scrutini": 8, "undertak": 8, "rest": [8, 17, 32, 33, 53, 65, 782, 803, 1108, 1247, 1248, 1815, 1869, 1886, 1890, 1897, 1898, 1900, 1905], "chanc": [8, 37, 41], "unrel": [8, 1121, 1874, 1880, 1897], "aid": [8, 23, 65, 1875], "troubleshoot": [8, 35, 1850], "mayb": [8, 1119], "bracnh": 8, "rebas": 8, "latest": [8, 35, 39, 41, 1613, 1849, 1884, 1893], "statu": [8, 10, 43, 1271, 1850, 1856, 1867, 1900], "hud": 8, "risk": [8, 9, 57, 1603, 1606], "anyth": [8, 42, 45, 64, 812, 815, 1193, 1852, 1859, 1870, 1886, 1897], "configur": [8, 14, 15, 20, 23, 25, 32, 33, 35, 43, 44, 49, 52, 53, 54, 57, 777, 778, 781, 782, 786, 803, 804, 805, 806, 812, 815, 827, 828, 829, 832, 834, 837, 847, 848, 849, 850, 851, 942, 1012, 1594, 1627, 1744, 1835, 1850, 1861, 1865, 1878, 1879, 1890, 1892, 1897, 1903, 1905, 1914, 1916], "riski": 8, "had": [8, 16, 19, 65, 1197, 1585, 1817, 1875, 1881], "beforehand": [8, 14, 64], "hei": 8, "my": [8, 32, 1351, 1885, 1893, 1900], "member": [8, 10, 32, 35, 43, 52, 53, 65, 1182, 1368, 1414, 1510, 1852, 1854, 1855, 1865, 1882, 1899, 1905, 1916, 1917], "sphinx": 8, "folder": [8, 10, 16, 23, 26, 32, 65, 1651, 1849, 1914], "tree": [8, 15, 45, 61, 942, 1414, 1457, 1651, 1893, 1897, 1899, 1907], "master": [8, 15, 35, 55, 781, 942, 1112, 1457, 1849, 1905], "doxygen": 8, "special": [8, 13, 17, 19, 24, 45, 54, 62, 65, 730, 731, 732, 812, 815, 897, 1048, 1062, 1063, 1064, 1066, 1067, 1076, 1078, 1149, 1150, 1151, 1195, 1253, 1267, 1307, 1351, 1461, 1595, 1596, 1597, 1640, 1694, 1752, 1763, 1767, 1846, 1850, 1856, 1861, 1869, 1878, 1880, 1883, 1885, 1893, 1897, 1900, 1913, 1914], "server": [8, 32, 35, 53, 1186, 1878, 1897, 1900, 1905], "cppdoc": [8, 27], "cpp": [8, 26, 35, 1304, 1879], "accomplish": [8, 14, 37, 1886], "holist": 8, "concept": [8, 62, 65, 1859, 1881, 1886, 1912], "galleri": 8, "restructur": [8, 1897], "text": [8, 16, 41, 66, 71, 72, 73, 74, 75, 76, 146, 147, 166, 597, 606, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 687, 734, 735, 745, 747, 749, 753, 757, 758, 759, 761, 762, 763, 769, 773, 809, 810, 854, 870, 871, 872, 873, 874, 910, 911, 912, 915, 918, 920, 922, 931, 937, 948, 949, 951, 952, 954, 1050, 1069, 1070, 1099, 1100, 1104, 1105, 1126, 1138, 1139, 1140, 1141, 1148, 1171, 1179, 1202, 1205, 1206, 1207, 1210, 1211, 1218, 1221, 1227, 1231, 1236, 1239, 1245, 1252, 1261, 1268, 1269, 1270, 1271, 1303, 1304, 1315, 1316, 1319, 1320, 1321, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1417, 1418, 1419, 1420, 1421, 1422, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1480, 1481, 1482, 1484, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1499, 1500, 1501, 1506, 1509, 1511, 1512, 1513, 1517, 1518, 1528, 1533, 1537, 1538, 1539, 1543, 1548, 1551, 1556, 1557, 1559, 1563, 1564, 1565, 1566, 1569, 1570, 1571, 1573, 1574, 1575, 1599, 1601, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1675, 1692, 1693, 1696, 1699, 1712, 1715, 1718, 1730, 1751, 1753, 1754, 1766, 1768, 1778, 1779, 1789, 1796, 1797, 1800, 1812, 1813, 1845, 1870, 1873, 1883, 1893, 1897, 1903, 1910, 1914, 1916], "rst": 8, "rebuild": [8, 33], "circleci": 8, "shard": [8, 14, 32, 37, 39, 40, 57, 1594], "worker": [8, 26, 32, 33, 35, 36, 39, 43, 44, 45, 46, 52, 54, 55, 57, 1594, 1855, 1890, 1898, 1899, 1905, 1906, 1907], "40": [8, 13, 1135, 1254, 1335, 1377, 1601, 1602, 1625, 1626, 1635, 1638, 1811], "minut": [8, 11, 35, 1914], "netlifi": 8, "noplot": 8, "render": [8, 35, 1914], "notebook": 8, "rebuilt": [8, 33, 39], "deploi": [8, 43, 52, 1850, 1885, 1891, 1897], "action": [8, 35, 41, 43, 46, 65, 1878, 1897, 1899, 1907], "develop": [9, 10, 11, 18, 23, 26, 33, 35, 65, 1851, 1854, 1855, 1862, 1875, 1880, 1885, 1886, 1890, 1897, 1900, 1901, 1905, 1909], "meant": [9, 36, 52, 54, 1627, 1874, 1905], "rule": [9, 10, 26, 35, 41, 65, 143, 849, 881, 882, 926, 927, 1038, 1231, 1242, 1332, 1333, 1334, 1377, 1378, 1379, 1453, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1735, 1821, 1850, 1852, 1854, 1868, 1870, 1875, 1876, 1880, 1883, 1912, 1916], "concern": [9, 32, 1867, 1878, 1893], "disagr": 9, "contribut": [9, 10, 37, 906, 1143, 1144, 1350, 1357, 1358, 1421, 1496, 1504, 1505, 1548, 1594, 1850, 1870, 1880, 1881, 1898], "maintainership": [9, 10], "escal": [9, 10], "hacker": 9, "poster": 9, "amaz": 9, "ml": [9, 16], "obsess": 9, "soumith": [9, 11], "goe": [9, 17, 65, 1108, 1326, 1656, 1657, 1882], "depth": [9, 10, 768, 774, 1016, 1017, 1195, 1329, 1344, 1347, 1409, 1466, 1524, 1582, 1862, 1879, 1886, 1899], "primari": [9, 10, 35, 65, 1191, 1856, 1862, 1909], "goal": [9, 16, 49, 61, 65, 1283, 1862, 1875, 1879, 1883, 1894, 1907], "secondari": 9, "abil": [9, 1731, 1862, 1885, 1897], "flexibl": [9, 17, 33, 57, 61, 1238, 1594, 1862, 1878, 1880, 1886], "abstract": [9, 17, 32, 33, 36, 37, 41, 43, 52, 54, 899, 900, 901, 902, 903, 1608, 1855, 1879, 1900, 1905], "critic": [9, 14, 17, 52, 669, 1602, 1635, 1865, 1877, 1878], "concret": [9, 17, 41, 55, 61, 65, 774, 789, 813, 830, 1466, 1551, 1582, 1852, 1855, 1878, 1880, 1888], "manner": [9, 43, 503, 890, 892, 1869, 1871, 1876], "jump": [9, 549, 1912], "regim": 9, "ei": 9, "tradeoff": [9, 14, 19, 33, 1900, 1906], "temptat": 9, "impos": [9, 54, 63, 1739, 1867, 1874, 1912], "strict": [9, 890, 891, 892, 893, 894, 895, 1111, 1118, 1182, 1197, 1198, 1414, 1636, 1897, 1914, 1916], "upfront": 9, "simplifi": [9, 33, 64, 1189, 1404, 1602, 1862, 1875, 1883, 1886, 1896, 1906], "worth": [9, 10, 17, 32, 33, 55, 1112, 1849, 1913], "friction": 9, "compel": 9, "narrow": [9, 14, 23, 1251, 1314, 1758, 1853, 1855, 1868, 1895, 1902, 1913], "subproblem": 9, "fragment": [9, 23, 980, 1012, 1859, 1878], "ecosystem": [9, 16, 1885, 1887], "incomprehens": 9, "seamlessli": [9, 1870], "softwar": [9, 1217, 1218, 1245, 1835, 1878, 1884], "experi": [9, 10, 18, 21, 23, 24, 33, 63, 66, 71, 72, 73, 74, 75, 76, 1123, 1443, 1566, 1594, 1842, 1862, 1880, 1914], "rich": [9, 1855], "denomin": [9, 676, 1332, 1333, 1334, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1453, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1670, 1703], "subset": [9, 32, 35, 39, 53, 1193, 1851, 1852, 1854, 1855, 1880, 1893, 1903], "borrow": 9, "zen": 9, "implicit": [9, 757, 758, 761, 762, 763, 1127, 1135, 1327, 1328, 1329, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1407, 1408, 1409, 1465, 1480, 1481, 1482, 1488, 1489, 1490, 1537, 1538, 1539, 1687, 1851, 1853, 1855, 1856, 1893, 1897, 1913], "concis": [9, 45, 1905], "interchang": [9, 41, 1667, 1820, 1854, 1884, 1894], "everydai": 9, "english": 9, "movement": [9, 1913], "worri": [9, 1905], "placement": [9, 14, 40, 43, 848, 1585, 1900, 1905], "favor": [9, 17, 35, 774, 775, 776, 933, 1024, 1028, 1182, 1236, 1239, 1271, 1272, 1373, 1414, 1467, 1468, 1582, 1583, 1584, 1586, 1699, 1800, 1823], "practition": 9, "debugg": [9, 14, 23, 1187, 1883], "plug": 9, "ir": [9, 14, 18, 23, 65, 749, 1185, 1186, 1366, 1367, 1651, 1850, 1852, 1855, 1893, 1894], "classic": [9, 1875], "sort": [9, 17, 39, 43, 65, 579, 598, 865, 866, 887, 1055, 1142, 1302, 1322, 1628, 1629, 1640, 1700, 1735, 1818, 1832, 1851, 1853, 1855, 1880, 1882, 1895, 1909], "distribut": [9, 18, 24, 32, 33, 36, 43, 44, 45, 46, 49, 50, 51, 52, 54, 55, 57, 64, 166, 250, 278, 369, 445, 472, 597, 684, 685, 808, 912, 1029, 1304, 1322, 1326, 1350, 1351, 1352, 1353, 1354, 1355, 1359, 1364, 1368, 1380, 1428, 1432, 1453, 1496, 1498, 1499, 1500, 1501, 1506, 1510, 1511, 1515, 1525, 1556, 1594, 1642, 1692, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1850, 1855, 1869, 1870, 1873, 1874, 1878, 1898, 1899, 1901, 1907, 1910, 1914, 1917], "tldr": 9, "resourc": [9, 14, 20, 26, 32, 43, 48, 52, 65, 1855, 1867, 1909], "characterist": [9, 1801, 1881, 1886], "uniformli": [9, 41, 1710, 1711, 1916], "leak": [9, 882, 888, 1855, 1867, 1875], "smart": [9, 1880, 1897, 1905], "anywai": [9, 1875], "obviou": [9, 1882, 1907], "extens": [9, 14, 23, 26, 29, 35, 37, 40, 41, 1253, 1254, 1731, 1751, 1850, 1862, 1870, 1874, 1891, 1897, 1909], "unavoid": 9, "latenc": [9, 14, 20, 49, 1877, 1878], "caveat": [9, 12, 19, 23, 57, 1585, 1634, 1862, 1867, 1878, 1886, 1891], "valuabl": 9, "certainli": [9, 1862], "heterogen": [9, 1854], "cluster": [9, 35, 37, 51, 52, 53, 1322, 1914], "focus": [9, 23, 1854, 1855, 1880], "beaten": 9, "space": [9, 10, 32, 41, 761, 762, 763, 1038, 1073, 1075, 1077, 1078, 1084, 1091, 1135, 1144, 1197, 1198, 1252, 1268, 1322, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1380, 1390, 1391, 1392, 1393, 1394, 1395, 1408, 1409, 1465, 1488, 1489, 1490, 1491, 1492, 1493, 1525, 1821, 1853, 1871, 1875, 1883, 1886, 1891], "innov": 9, "ultim": [9, 10, 26, 45, 54, 1879], "evidenc": 9, "began": 9, "bind": [9, 26, 65, 992, 1855, 1856, 1897], "monolith": 9, "deepli": 9, "integr": [9, 12, 32, 40, 46, 61, 147, 912, 914, 915, 916, 917, 918, 919, 954, 1038, 1143, 1182, 1205, 1249, 1250, 1313, 1414, 1706, 1718, 1821, 1870, 1880, 1885, 1886, 1896, 1898, 1900, 1910, 1912, 1916], "numpi": [9, 32, 62, 439, 483, 682, 683, 688, 866, 868, 869, 886, 1050, 1052, 1053, 1055, 1073, 1094, 1095, 1096, 1097, 1101, 1102, 1107, 1123, 1145, 1212, 1213, 1223, 1234, 1236, 1237, 1238, 1239, 1240, 1245, 1246, 1249, 1251, 1283, 1288, 1693, 1718, 1721, 1728, 1740, 1748, 1782, 1783, 1784, 1785, 1786, 1787, 1800, 1802, 1803, 1811, 1814, 1815, 1817, 1839, 1842, 1843, 1862, 1876, 1880, 1881, 1889, 1890, 1892, 1897, 1912, 1913, 1914, 1915, 1916, 1921], "scipi": [9, 930, 1228, 1229, 1553, 1693, 1897, 1908, 1910, 1914], "scikit": [9, 1524], "favorit": 9, "cython": 9, "numba": 9, "reinvent": 9, "wheel": [9, 1892], "year": [9, 1909], "rewrot": 9, "frontend": [9, 14, 27, 61, 65, 1894], "familiar": [9, 14, 22, 27, 65, 1011, 1852, 1875, 1881, 1897, 1900, 1906, 1907], "perhap": [9, 17, 1881], "importantli": [9, 17], "huge": [9, 1801, 1865], "scientif": [9, 1748], "pareto": [9, 1850], "close": [9, 27, 35, 52, 65, 926, 994, 1171, 1217, 1218, 1244, 1245, 1271, 1445, 1463, 1735, 1800, 1823, 1865, 1875, 1880, 1889, 1893, 1897, 1900, 1905, 1914, 1916], "curv": [9, 1914], "torch_funct": [9, 1880], "torch_dispatch": 9, "torch": [9, 10, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 27, 29, 30, 33, 36, 39, 43, 44, 45, 46, 49, 50, 52, 54, 55, 57, 60, 67, 68, 69, 70, 80, 81, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 883, 909, 956, 957, 958, 959, 961, 962, 977, 979, 990, 1059, 1157, 1180, 1181, 1182, 1196, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1585, 1594, 1595, 1596, 1597, 1603, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1627, 1639, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1706, 1745, 1775, 1852, 1853, 1854, 1868, 1869, 1874, 1875, 1876, 1877, 1879, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1892, 1898, 1900, 1901, 1902, 1905, 1906, 1907, 1913], "tracer": [9, 17, 69, 1197, 1893, 1894, 1914, 1919], "functorch": [9, 12, 58, 63], "anchor": [9, 22, 65, 1462, 1463, 1579, 1580, 1853], "hackabl": 9, "todai": [9, 58, 63, 1900], "open": [9, 10, 14, 26, 32, 41, 52, 58, 678, 904, 1105, 1189, 1253, 1276, 1286, 1530, 1852, 1862, 1867, 1870, 1884, 1892, 1893, 1897, 1900, 1905, 1909, 1910], "evolv": [9, 1879], "ai": [9, 1893, 1910], "adopt": [10, 35, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754], "hierarch": [10, 1914], "pull": [10, 11, 27, 65, 143, 882, 1897], "request": [10, 11, 24, 35, 37, 54, 678, 850, 868, 869, 1012, 1254, 1276, 1286, 1530, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1849, 1870, 1874, 1875, 1877, 1878, 1893, 1897, 1905, 1906, 1907, 1909, 1910], "overseen": 10, "catch": [10, 45, 1852, 1875, 1881, 1883], "maker": 10, "strong": 10, "toward": [10, 1050, 1143, 1144, 1254, 1318, 1594, 1678, 1719, 1727, 1728, 1898], "philosophi": [10, 61, 1850], "beyond": [10, 33, 1299, 1350, 1656, 1657, 1666, 1726, 1882, 1886], "encourag": [10, 43, 1870, 1900, 1909, 1916], "propos": [10, 1653, 1673, 1674, 1862, 1883, 1896, 1906], "review": [10, 11, 17, 33, 1897], "willing": 10, "invest": 10, "anyon": 10, "ownership": [10, 65], "codebas": 10, "strictli": [10, 32, 143, 184, 201, 882, 926, 1144, 1182, 1186, 1414, 1875, 1910], "compani": 10, "bui": 10, "addition": [10, 32, 33, 35, 41, 57, 143, 503, 606, 882, 1112, 1116, 1117, 1186, 1245, 1322, 1377, 1378, 1379, 1777, 1882, 1917], "membership": [10, 43, 51, 52, 1856], "That": [10, 43, 50, 53, 59, 65, 1179, 1252, 1268, 1835, 1863, 1880, 1881, 1882, 1891, 1897, 1905], "seat": 10, "reserv": [10, 49, 1012, 1856, 1878, 1886], "emploi": [10, 1669, 1886, 1897, 1898], "directori": [10, 14, 23, 26, 35, 37, 50, 1651, 1849, 1864, 1885, 1897, 1899, 1914], "procedur": [10, 23, 41, 848, 1197, 1198, 1254, 1775, 1905], "disput": 10, "public": [10, 11, 1112, 1880, 1920], "relev": [10, 16, 17, 36, 43, 52, 64, 669, 1245, 1856, 1874, 1875, 1897, 1900], "resolut": [10, 1426, 1427, 1478, 1513, 1554, 1555, 1821, 1856, 1897, 1921], "conclus": 10, "publicli": [10, 1920], "vision": [10, 16, 1191, 1350, 1496, 1849, 1850], "roadmap": [10, 11], "parti": [10, 52, 1849, 1850, 1852, 1878, 1881, 1886, 1897], "triag": [10, 11], "meet": [10, 11, 51, 1211, 1878], "Their": [10, 1047], "articul": 10, "cohes": 10, "negoti": [10, 1905], "contenti": 10, "broad": [10, 1886], "stakehold": 10, "power": [10, 18, 51, 1018, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1098, 1205, 1235, 1249, 1382, 1383, 1534, 1535, 1602, 1635, 1653, 1682, 1696, 1720, 1836, 1856, 1878, 1909], "veto": 10, "admin": 10, "amongst": 10, "commonli": [10, 16, 41, 57, 1283, 1855, 1857, 1874, 1875, 1896, 1900, 1912], "merit": 10, "demonstr": [10, 16, 53, 65, 1337, 1852, 1886, 1891, 1898, 1905], "expertis": 10, "continu": [10, 12, 13, 17, 32, 35, 41, 55, 57, 65, 394, 597, 808, 891, 1135, 1217, 1218, 1245, 1336, 1337, 1594, 1856, 1862, 1875, 1891, 1899, 1917], "light": [10, 1914], "mainten": [10, 52, 53], "emeritu": [10, 11], "inact": [10, 1012, 1878], "contact": 10, "item": [10, 17, 32, 37, 572, 573, 574, 578, 781, 782, 783, 803, 804, 805, 806, 1350, 1415, 1424, 1606, 1748, 1849, 1851, 1852, 1853, 1854, 1855, 1868, 1878, 1893, 1895, 1897, 1905, 1914, 1915], "nomine": 10, "breadth": 10, "testimoni": 10, "posit": [10, 32, 41, 65, 81, 394, 462, 534, 724, 846, 850, 852, 897, 911, 913, 920, 933, 934, 935, 1071, 1072, 1073, 1074, 1075, 1083, 1085, 1089, 1091, 1108, 1118, 1119, 1122, 1139, 1140, 1174, 1177, 1182, 1185, 1211, 1212, 1223, 1225, 1236, 1239, 1240, 1254, 1274, 1289, 1308, 1313, 1314, 1331, 1342, 1343, 1344, 1349, 1350, 1351, 1358, 1368, 1375, 1414, 1420, 1450, 1457, 1462, 1463, 1478, 1486, 1505, 1510, 1513, 1579, 1580, 1588, 1589, 1590, 1726, 1728, 1778, 1780, 1824, 1825, 1826, 1827, 1834, 1849, 1853, 1868, 1869, 1880, 1881, 1883, 1893, 1895, 1898, 1904, 1909, 1910, 1916, 1920, 1921], "neg": [10, 24, 26, 32, 35, 41, 54, 65, 81, 432, 434, 449, 650, 651, 687, 744, 769, 913, 949, 952, 961, 977, 983, 984, 1012, 1024, 1071, 1072, 1073, 1074, 1075, 1076, 1090, 1091, 1092, 1098, 1108, 1172, 1174, 1176, 1235, 1262, 1274, 1295, 1296, 1304, 1308, 1313, 1314, 1322, 1331, 1359, 1368, 1400, 1407, 1408, 1409, 1417, 1421, 1423, 1428, 1445, 1462, 1463, 1506, 1510, 1513, 1515, 1524, 1528, 1537, 1538, 1539, 1548, 1556, 1579, 1580, 1582, 1692, 1693, 1724, 1728, 1763, 1765, 1768, 1779, 1816, 1824, 1825, 1826, 1827, 1834, 1851, 1852, 1853, 1868, 1870, 1873, 1875, 1881, 1893, 1894, 1895, 1904, 1909, 1910], "interact": [10, 14, 27, 32, 40, 65, 851, 959, 992, 1157, 1856, 1879, 1897, 1914], "final": [10, 13, 23, 35, 37, 39, 41, 43, 52, 61, 62, 675, 678, 679, 749, 910, 928, 941, 1055, 1094, 1112, 1135, 1253, 1271, 1276, 1366, 1368, 1384, 1429, 1442, 1585, 1778, 1821, 1852, 1854, 1855, 1856, 1868, 1880, 1883, 1886, 1889, 1891, 1893, 1897, 1906, 1907], "declin": 10, "conflict": [10, 33, 53, 1897], "lack": [10, 24, 1217, 1218, 1245], "unfit": 10, "conduct": [10, 1594, 1689, 1801, 1905], "filial": 10, "romant": 10, "strength": 10, "candid": [10, 906, 1853, 1897], "letter": [10, 1055], "befit": 10, "candidaci": 10, "behind": [10, 1850, 1891, 1906], "75": [10, 1143, 1402, 1513, 1531, 1653, 1700, 1853, 1910], "choos": [10, 27, 65, 881, 906, 981, 1227, 1240, 1245, 1330, 1873, 1874, 1877, 1897, 1901, 1914], "unforeseen": 10, "circumst": [10, 52, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1563, 1878], "perman": [10, 65, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1624, 1875, 1907], "unavail": [10, 1854], "rank": [10, 23, 32, 33, 35, 36, 37, 39, 40, 41, 43, 50, 52, 53, 55, 57, 1227, 1228, 1229, 1236, 1271, 1406, 1453, 1594, 1606, 1689, 1801, 1853, 1879, 1888, 1893, 1898, 1905, 1906], "elect": 10, "invit": [10, 1849], "convinc": 10, "approach": [10, 14, 33, 35, 65, 930, 1123, 1775, 1842, 1852, 1867, 1870, 1878, 1880, 1883, 1900, 1905], "interview": 10, "talk": [10, 54, 1885], "gather": [10, 35, 52, 57, 503, 1811, 1835, 1851, 1853, 1880, 1882, 1885, 1895, 1897], "read": [10, 14, 16, 17, 21, 23, 29, 32, 35, 37, 42, 43, 45, 52, 53, 57, 61, 65, 439, 1014, 1038, 1106, 1107, 1108, 1189, 1253, 1683, 1850, 1868, 1869, 1875, 1876, 1878, 1879, 1881, 1885, 1889, 1897, 1900, 1905], "attend": [10, 724, 1420, 1457], "confer": [10, 1368], "pipelin": [10, 14, 65, 1850, 1905], "world": [10, 18, 21, 35, 39, 43, 50, 52, 53, 57, 1453, 1594, 1875, 1897, 1900], "cover": [10, 13, 17, 58, 65, 1029, 1055, 1407, 1537, 1538, 1539, 1855, 1857, 1869, 1875, 1880, 1883, 1885, 1886, 1905], "push": [10, 17, 44, 1017, 1123, 1247, 1842, 1899], "codeown": 10, "notifi": [10, 36, 53, 1907], "expert": 10, "strongli": [10, 35, 43, 53, 1353, 1354, 1355, 1359, 1796, 1849], "failur": [10, 14, 17, 23, 35, 41, 43, 44, 45, 49, 50, 51, 52, 55, 669, 897, 898, 1112, 1197, 1198, 1299, 1855, 1861, 1867, 1894, 1898, 1905, 1907, 1916], "revert": [10, 41, 57, 1450, 1571, 1907], "substanti": [10, 33, 1878], "syntact": [10, 45, 65], "incompat": [10, 26, 62, 923, 1179, 1876, 1897], "establish": [10, 35, 52, 1875], "seri": [10, 19, 65, 1337, 1377, 1890, 1893, 1920], "lf": 10, "llc": 10, "guidelin": [10, 1617, 1897, 1900, 1901], "trademark": 10, "www": [10, 1337, 1463, 1914], "lfproject": 10, "acknowledg": [10, 35, 1850, 1907, 1909], "copyright": [10, 23], "holder": 10, "independ": [10, 32, 35, 52, 57, 64, 146, 147, 768, 774, 890, 891, 892, 893, 894, 895, 961, 1135, 1144, 1240, 1352, 1353, 1354, 1355, 1359, 1499, 1500, 1501, 1506, 1524, 1582, 1638, 1699, 1850, 1852, 1874, 1875, 1878, 1891, 1897], "authorship": 10, "claus": [10, 1882], "bsd": 10, "licens": 10, "opensourc": 10, "outbound": 10, "inbound": 10, "q": [10, 33, 41, 422, 470, 747, 1127, 1202, 1218, 1221, 1240, 1282, 1311, 1380, 1420, 1563, 1601, 1687, 1689, 1699, 1700, 1801, 1852, 1853, 1883, 1890, 1893, 1909, 1910], "partli": [10, 1855], "domain": [10, 41, 45, 673, 815, 874, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1083, 1085, 1086, 1087, 1088, 1135, 1870, 1893, 1900], "absolut": [10, 24, 26, 65, 85, 670, 683, 897, 898, 1103, 1171, 1210, 1215, 1236, 1239, 1241, 1262, 1375, 1381, 1445, 1522, 1526, 1567, 1611, 1612, 1614, 1615, 1617, 1620, 1621, 1622, 1623, 1641, 1652, 1693, 1719, 1751, 1853, 1886, 1893, 1895, 1910, 1915, 1916], "health": 10, "success": [10, 23, 37, 41, 43, 49, 65, 1212, 1223, 1225, 1271, 1613, 1782, 1783, 1784, 1786, 1787, 1878, 1886, 1893, 1894, 1909], "am": 10, "grant": 10, "purchas": 10, "board": 10, "driven": [10, 1893], "clearli": [10, 1862, 1897], "sponsorship": 10, "foundat": [10, 1894], "ptf": 10, "minor": [10, 983, 1212, 1228], "committ": 10, "facebook": 10, "infrastructur": [10, 44, 1897], "employe": 10, "expand": [10, 41, 247, 483, 867, 889, 897, 898, 925, 1234, 1235, 1283, 1420, 1464, 1557, 1831, 1849, 1851, 1853, 1861, 1868, 1869, 1876, 1881, 1893, 1895, 1897, 1898, 1913], "deliv": [10, 1899], "offici": [10, 35, 1322, 1900], "showcas": [10, 1410, 1878, 1888], "whenev": [10, 17, 869, 1601, 1602, 1865, 1867, 1903, 1906, 1907, 1920], "fix": [11, 14, 23, 29, 32, 35, 40, 41, 43, 52, 57, 59, 62, 65, 254, 784, 790, 1112, 1195, 1227, 1357, 1358, 1432, 1504, 1505, 1524, 1594, 1852, 1853, 1865, 1873, 1874, 1878, 1879, 1882, 1888, 1892, 1893, 1895, 1896], "plu": [11, 26, 37, 890, 1108, 1228, 1909], "quarterli": 11, "chintala": 11, "edward": 11, "yang": [11, 1254], "ezyang": [11, 1913], "greg": 11, "chanan": 11, "gchanan": 11, "dmytro": 11, "dzhulgakov": 11, "nikita": 11, "shulga": 11, "malfet": 11, "joel": [11, 1689, 1801], "schlosser": 11, "jbschlosser": 11, "alban": 11, "desmaison": 11, "alband": 11, "sam": 11, "gross": 11, "colesburi": 11, "adam": [11, 36, 39, 41, 57, 1657, 1658, 1660, 1666, 1670, 1896], "paszk": 11, "apaszk": 11, "ilqar": 11, "ramazanli": 11, "iramazanli": 11, "vincent": 11, "quennevil": 11, "belair": 11, "vincentqb": 11, "jeffrei": 11, "wan": 11, "soulitz": 11, "elia": 11, "ellison": 11, "eellison": 11, "michael": [11, 23], "suo": 11, "yanan": 11, "cao": 11, "gmagogsfm": 11, "jame": 11, "reed": 11, "jamesr66a": 11, "jason": [11, 13], "ansel": [11, 13], "jansel": 11, "jiong": 11, "gong": 11, "jgong5": 11, "zach": 11, "devito": 11, "zdevito": 11, "fritz": 11, "obermey": 11, "fritzo": 11, "neeraj": 11, "pradhan": 11, "neerajprad": 11, "alican": 11, "bozkurt": 11, "alicanb": 11, "vishwak": 11, "srinivasan": 11, "vishwakftw": 11, "shen": 11, "li": [11, 1311, 1700, 1878], "mrshenli": 11, "pritam": 11, "damania": 11, "pritamdamania87": 11, "yanli": 11, "zhao": 11, "zhaojuanmao": 11, "rohan": 11, "varma": 11, "wanchao": 11, "liang": 11, "wanchaol": 11, "junji": 11, "wang": [11, 41], "fduwjj": 11, "howard": 11, "huang": 11, "tristan": 11, "rice": 11, "d4l3k": 11, "alisson": 11, "azzolini": 11, "aazzolini": 11, "ke": 11, "wen": 11, "kwen2501": 11, "kiuk": 11, "chung": 11, "kiukchung": 11, "pieter": 11, "noordhui": 11, "pietern": 11, "mingzh": 11, "mingzhe09088": 11, "omkar": 11, "salpekar": 11, "osalpekar": 11, "simon": 11, "ssnl": 11, "vitali": 11, "fedyunin": 11, "vitalyfedyunin": 11, "mike": 11, "ruberri": 11, "mruberri": 11, "mario": 11, "lezcano": 11, "ivan": 11, "yashchuk": 11, "ivanyashchuk": 11, "pearu": 11, "peterson": 11, "vedeneev": 11, "nikitav": 11, "christian": 11, "puhrsch": 11, "cpuhrsch": 11, "andrew": [11, 1254], "amjam": 11, "driss": 11, "guessou": 11, "drisspg": 11, "mikayla": 11, "gawarecki": 11, "mikaylagawarecki": 11, "natalia": 11, "gimelshein": 11, "ngimel": 11, "georg": 11, "qi": 11, "peter": 11, "bell": 11, "peterbell10": 11, "mingfei": 11, "ma": 11, "mingfeima": 11, "xiaob": 11, "zhang": 11, "xiaobingsup": 11, "xiaoqiang": 11, "zheng": 11, "xq": 11, "ilia": 11, "cherniavskii": 11, "cher": 11, "bai": 11, "bddppq": 11, "yinghai": 11, "jianhui": 11, "piotr": 11, "bialecki": 11, "ptrblck": 11, "sarofeen": 11, "csarofeen": 11, "tulloch": 11, "ajtulloch": 11, "alex": 11, "jann": 11, "jjsjann123": 11, "peng": 11, "sun": 11, "sunway513": 11, "jithun": 11, "nair": 11, "jithunnair": 11, "jeff": 11, "daili": 11, "jeffdaili": 11, "eli": 11, "uriega": 11, "seemether": 11, "mikei": 11, "dagits": 11, "zain": 11, "rizvi": 11, "zainrizvi": 11, "nirav": 11, "mehta": 11, "mehtanirav": 11, "andrei": 11, "talman": 11, "atalman": 11, "zhuoji": 11, "zhou": 11, "zhouzhuoji": 11, "karl": 11, "ostmo": 11, "kostmo": 11, "adnan": 11, "aziz": 11, "adnanaziz": 11, "ck": 11, "luk": 11, "ckluk": 11, "taylor": [11, 1135], "robi": 11, "robieta": 11, "xu": [11, 57], "xuzhao9": 11, "geeta": 11, "chauhan": 11, "chauhang": 11, "victor": 11, "bittorf": 11, "bitfort": 11, "gisl": 11, "dankel": 11, "gdankel": 11, "feng": 11, "yf225": 11, "brian": 11, "hirsh": 11, "bdhirsh": 11, "sebastian": 11, "messmer": 11, "smessmer": 11, "bowen": 11, "bao": [11, 20], "bowenbao": 11, "aaron": 11, "bockov": 11, "abock": 11, "gari": 11, "miguel": 11, "garymm": 11, "lara": 11, "haidar": 11, "hdr": 11, "fang": 11, "houseroad": 11, "negin": 11, "raoof": 11, "neginraoof": 11, "spandan": 11, "tiwari": 11, "spandantiwari": 11, "david": [11, 1322], "reiss": 11, "dreiss": 11, "raziel": 11, "guevara": 11, "linbin": 11, "yu": 11, "linbinyu": 11, "kobzarev": 11, "ivankobzarev": 11, "tao": 11, "xta0": 11, "vasilii": 11, "kuznetsov": 11, "vkuzo": 11, "jerri": 11, "jerryzh168": [11, 782], "zafar": 11, "takhirov": 11, "supriya": 11, "rao": 11, "supriyar": 11, "raghuraman": 11, "krishnamoorthi": 11, "raghuramank100": 11, "guoliang": 11, "hua": 11, "nbcsm": 11, "teng": 11, "gao": 11, "gaoteng": 11, "git": [11, 14, 23, 1899], "johnson": 11, "peterjc123": [11, 1892], "kulin": 11, "seth": 11, "kulinseth": 11, "ramin": 11, "azarmehr": 11, "razarmehr": 11, "alfredo": 11, "mendoza": 11, "avmgithub": 11, "svetlana": 11, "karslioglu": 11, "svekar": 11, "jack": 11, "jackcaog": 11, "daniel": [11, 41], "sohn": 11, "jysohn23": 11, "cain": 11, "zcain117": 11, "hirsch": 11, "gregori": 11, "ail": 11, "ailzhang": 11, "libenzi": 11, "dlibenzi": 11, "suhan": 11, "asuhan": 11, "manoj": 11, "mycpuorg": 11, "vamshi": 11, "dantu": 11, "vdantu": 11, "dhanasekar": 11, "karuppasami": 11, "dhanainm": 11, "francisco": 11, "massa": 11, "fmassa": 11, "vasili": 11, "vrynioti": 11, "datumbox": 11, "nicola": 11, "hug": 11, "nicolashug": 11, "yosua": 11, "maranatha": 11, "yosuamichael": 11, "joao": 11, "gome": 11, "jdsgome": 11, "philip": 11, "meier": 11, "pmeier": 11, "fomin": 11, "vfdev": 11, "nayef": 11, "ahm": 11, "nayef211": 11, "parmeet": 11, "singh": 11, "bhatia": 11, "guanheng": 11, "zhangguanheng66": 11, "moto": 11, "hira": 11, "mthrok": 11, "hwang": 11, "hwangjeff": 11, "carolin": 11, "chen": 11, "carolineechen": 11, "xiaohui": 11, "zhaoheng": 11, "ni": 11, "nateanl": 11, "qb": 11, "ivchenko": 11, "divchenko": 11, "colin": 11, "colin2328": 11, "wenlei": 11, "xie": 11, "wenleix": 11, "straightforward": [12, 17, 65, 1862, 1870, 1886, 1896, 1909], "gm": [12, 17, 22, 23, 65], "my_custom_backend": 12, "f_opt": 12, "_dynamo": [12, 13, 14, 15, 16, 17, 19, 21, 23, 942, 1850, 1879], "my_compil": [12, 13, 17], "besid": [12, 33, 35, 1878, 1879, 1914], "plugin": [12, 1899, 1914], "entry_point": [12, 53], "torch_dynamo_backend": 12, "your_modul": 12, "submodul": [12, 22, 27, 57, 65, 780, 786, 803, 827, 828, 829, 847, 850, 851, 1121, 1182, 1186, 1192, 1193, 1351, 1414, 1415, 1416, 1442, 1592, 1852, 1854, 1855, 1863, 1886, 1891, 1897, 1900, 1905, 1919], "registr": [12, 39, 40, 64, 998, 1587, 1592, 1593, 1594, 1603, 1606, 1859, 1897], "minifi": [12, 14], "typic": [12, 23, 26, 32, 33, 35, 41, 42, 43, 45, 52, 53, 54, 57, 65, 954, 956, 1098, 1106, 1182, 1202, 1205, 1348, 1374, 1414, 1585, 1594, 1656, 1657, 1782, 1783, 1784, 1786, 1787, 1849, 1850, 1852, 1855, 1861, 1875, 1877, 1878, 1889, 1890, 1891, 1893, 1896, 1898, 1900, 1905, 1913, 1921], "canon": [12, 43, 45, 1852], "opset": [12, 1851, 1893, 1894, 1895], "significantli": [12, 35, 891, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1743, 1909], "smaller": [12, 32, 65, 489, 534, 954, 1594, 1683, 1698, 1788, 1878, 1891, 1897, 1921], "aot_autograd": 12, "fw_compil": 12, "bw_compil": 12, "box": [12, 16, 24, 35, 40, 53, 65, 1123, 1842, 1869, 1875, 1879], "make_boxed_func": 12, "my_backend": [12, 781], "model_opt": 12, "pretti": [12, 17, 1182, 1651, 1748, 1852], "bytecod": [12, 13, 14, 17, 21, 23, 32, 669, 1861, 1897], "print_tabular": [12, 17, 65], "co": [12, 15, 16, 18, 63, 194, 624, 625, 672, 920, 942, 998, 1113, 1116, 1117, 1122, 1139, 1140, 1233, 1348, 1349, 1352, 1673, 1674, 1681, 1693, 1755, 1756, 1759, 1760, 1761, 1762, 1764, 1782, 1783, 1784, 1786, 1787, 1851, 1853, 1868, 1895, 1896, 1909, 1914, 1916], "sin": [12, 15, 16, 18, 26, 62, 63, 521, 658, 659, 870, 942, 998, 1113, 1115, 1116, 1117, 1119, 1122, 1140, 1233, 1283, 1693, 1756, 1762, 1851, 1853, 1868, 1875, 1895, 1909, 1910, 1914], "opcod": [12, 13, 17, 65, 1897], "placehold": [12, 13, 22, 65, 66, 71, 72, 73, 74, 75, 76, 823, 1376, 1878], "call_funct": [12, 13, 14, 17, 22, 23, 65], "0x7f1a894649a8": 12, "mockmodul": 12, "optimized_mod": 12, "ab": [12, 13, 14, 17, 23, 40, 41, 83, 84, 614, 615, 671, 930, 1055, 1213, 1234, 1235, 1237, 1238, 1251, 1254, 1384, 1433, 1460, 1463, 1465, 1553, 1638, 1641, 1683, 1689, 1693, 1850, 1851, 1853, 1855, 1868, 1869, 1870, 1878, 1886, 1895, 1909, 1915], "abs_1": [12, 13], "0x7f8d259298a0": 12, "truediv": [12, 13, 65], "call_method": [12, 13, 17, 65], "sum_1": [12, 13, 65], "lt": [12, 13, 355, 387, 1208, 1851, 1852, 1853, 1868, 1895], "mul_1": 12, "nondeterminist": [12, 65, 305, 307, 313, 505, 507, 913, 1203, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1410, 1411, 1412, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1505, 1513, 1524, 1551, 1563, 1582, 1583, 1584, 1742, 1835], "offer": [12, 14, 35, 57, 60, 1594, 1835, 1851, 1878, 1884, 1897, 1909], "superior": 12, "real": [12, 16, 17, 18, 32, 41, 65, 675, 676, 677, 678, 679, 681, 687, 897, 910, 935, 944, 950, 1001, 1071, 1072, 1074, 1076, 1077, 1078, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1172, 1174, 1175, 1178, 1179, 1202, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1231, 1234, 1236, 1238, 1239, 1240, 1241, 1245, 1246, 1250, 1251, 1252, 1262, 1268, 1381, 1423, 1426, 1427, 1463, 1601, 1796, 1800, 1839, 1840, 1841, 1849, 1850, 1851, 1853, 1855, 1875, 1878, 1895, 1897, 1900, 1905, 1907, 1913, 1915, 1916, 1920], "optimize_for_infer": [12, 1186], "optimize_for_inference_compil": 12, "And": [12, 16, 17, 61, 786, 813, 1034, 1035, 1111, 1182, 1203, 1279, 1284, 1337, 1414, 1875, 1880, 1881, 1892, 1893, 1900, 1919], "code_to_acceler": 12, "trt_compil": 12, "tensorrt": [12, 14, 16, 1900], "inductor_compil": 12, "tensor_match": 13, "function_match": 13, "recaptur": 13, "recompil": [13, 17, 18, 19, 26, 65, 669, 1195, 1861, 1884], "dispatch_kei": [13, 1859], "ndim": [13, 1247, 1248, 1868, 1870, 1909, 1915], "log_level": [13, 14, 23, 1879], "info": [13, 14, 23, 35, 43, 46, 50, 669, 881, 958, 959, 961, 1212, 1223, 1225, 1226, 1230, 1243, 1271, 1295, 1296, 1650, 1850, 1853, 1861, 1879, 1880, 1881, 1893, 1897], "output_cod": [13, 23, 669, 1861], "spammi": [13, 1861], "printout": [13, 65, 1000, 1013], "__compiled_fn_0": 13, "eval_with_kei": 13, "0x7f9ca082f8a0": 13, "load_fast": [13, 17], "load_glob": 13, "load_method": 13, "6": [13, 14, 20, 23, 26, 29, 32, 33, 35, 41, 50, 65, 305, 307, 309, 313, 393, 394, 462, 478, 489, 503, 507, 549, 596, 674, 675, 680, 686, 730, 731, 732, 734, 735, 747, 750, 752, 754, 890, 891, 893, 894, 895, 913, 921, 926, 932, 935, 936, 940, 954, 967, 1014, 1018, 1032, 1033, 1034, 1038, 1039, 1050, 1053, 1054, 1071, 1079, 1084, 1085, 1089, 1090, 1092, 1094, 1095, 1098, 1105, 1135, 1145, 1147, 1148, 1171, 1192, 1203, 1207, 1218, 1234, 1238, 1239, 1240, 1247, 1248, 1252, 1254, 1283, 1287, 1312, 1313, 1314, 1327, 1338, 1341, 1346, 1349, 1357, 1358, 1367, 1368, 1369, 1371, 1372, 1410, 1411, 1415, 1423, 1431, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1457, 1458, 1460, 1465, 1471, 1480, 1510, 1517, 1518, 1550, 1552, 1559, 1585, 1629, 1630, 1632, 1634, 1640, 1641, 1642, 1654, 1668, 1688, 1689, 1692, 1699, 1700, 1706, 1707, 1710, 1716, 1726, 1727, 1731, 1735, 1748, 1769, 1773, 1777, 1780, 1782, 1783, 1788, 1799, 1801, 1802, 1803, 1810, 1815, 1816, 1817, 1818, 1819, 1821, 1824, 1826, 1830, 1835, 1843, 1844, 1851, 1852, 1855, 1856, 1862, 1870, 1873, 1875, 1880, 1881, 1886, 1891, 1893, 1905, 1906, 1909, 1910, 1912, 1915, 1916, 1920], "load_const": [13, 17], "12": [13, 20, 32, 33, 35, 57, 313, 507, 606, 675, 730, 731, 732, 734, 735, 932, 936, 1053, 1071, 1145, 1186, 1201, 1240, 1322, 1338, 1346, 1361, 1362, 1363, 1411, 1426, 1427, 1448, 1457, 1465, 1508, 1509, 1549, 1554, 1555, 1602, 1635, 1688, 1699, 1748, 1763, 1773, 1815, 1831, 1843, 1849, 1852, 1853, 1856, 1862, 1878, 1887, 1891, 1893, 1895, 1909, 1916], "binary_add": 13, "14": [13, 35, 313, 507, 935, 998, 999, 1038, 1053, 1145, 1234, 1240, 1308, 1338, 1411, 1699, 1706, 1773, 1815, 1816, 1821, 1843, 1852, 1856, 1893, 1895, 1909, 1913, 1914], "binary_true_divid": 13, "16": [13, 14, 23, 31, 35, 313, 606, 727, 728, 729, 730, 731, 732, 761, 1053, 1071, 1098, 1135, 1145, 1182, 1193, 1205, 1211, 1217, 1218, 1222, 1238, 1314, 1326, 1328, 1329, 1337, 1338, 1341, 1342, 1343, 1344, 1346, 1347, 1352, 1353, 1354, 1355, 1359, 1362, 1363, 1382, 1383, 1384, 1402, 1407, 1408, 1409, 1411, 1412, 1414, 1421, 1429, 1440, 1457, 1471, 1488, 1490, 1491, 1493, 1497, 1508, 1509, 1644, 1696, 1773, 1835, 1839, 1843, 1852, 1856, 1873, 1878, 1886, 1889, 1891, 1893, 1895, 1898, 1905, 1909, 1910, 1912, 1914, 1915], "store_fast": 13, "11": [13, 23, 26, 35, 313, 503, 932, 936, 961, 1001, 1053, 1145, 1202, 1238, 1252, 1268, 1322, 1338, 1363, 1411, 1509, 1641, 1642, 1651, 1773, 1815, 1843, 1852, 1856, 1862, 1869, 1878, 1892, 1893, 1895, 1909, 1910], "18": [13, 35, 313, 436, 674, 1056, 1135, 1179, 1254, 1411, 1852, 1893, 1895, 1909], "20": [13, 17, 35, 39, 41, 313, 674, 709, 717, 718, 723, 727, 728, 729, 730, 731, 732, 735, 745, 749, 750, 751, 752, 753, 754, 761, 1135, 1180, 1183, 1193, 1204, 1238, 1303, 1326, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1337, 1341, 1342, 1343, 1344, 1346, 1347, 1352, 1353, 1354, 1355, 1359, 1362, 1363, 1366, 1367, 1369, 1376, 1377, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1401, 1407, 1408, 1409, 1411, 1412, 1414, 1429, 1431, 1442, 1450, 1453, 1456, 1457, 1458, 1459, 1471, 1488, 1490, 1491, 1493, 1497, 1508, 1509, 1515, 1571, 1601, 1602, 1626, 1635, 1638, 1659, 1674, 1702, 1811, 1852, 1853, 1870, 1879, 1880, 1889, 1896, 1905, 1909], "22": [13, 35, 41, 313, 606, 1254, 1585, 1631, 1633, 1852, 1890, 1909], "24": [13, 33, 35, 41, 915, 1240, 1402, 1478, 1634, 1699, 1816, 1852, 1873, 1877, 1910], "26": [13, 23, 1237, 1674], "compare_op": 13, "28": [13, 606, 735, 1038, 1821, 1893], "pop_jump_if_fals": 13, "38": [13, 1308], "30": [13, 18, 32, 35, 41, 43, 52, 436, 606, 709, 717, 718, 745, 753, 1135, 1204, 1335, 1337, 1341, 1401, 1465, 1471, 1488, 1497, 1585, 1677, 1679, 1685, 1702, 1811, 1880, 1893, 1896, 1905], "34": [13, 17, 23, 35], "binary_multipli": [13, 17], "36": [13, 17, 35, 313, 1098, 1135], "13": [13, 23, 35, 864, 936, 1053, 1056, 1100, 1135, 1145, 1186, 1271, 1338, 1362, 1363, 1411, 1448, 1508, 1509, 1773, 1815, 1843, 1852, 1856, 1895, 1909], "42": [13, 32, 813, 920, 1303, 1755, 1878, 1886], "return_valu": [13, 43, 44, 50], "unpack_sequ": 13, "__resume_at_30_1": 13, "__resume_at_38_2": 13, "offset": [13, 17, 39, 43, 218, 219, 220, 221, 331, 510, 547, 735, 867, 1043, 1044, 1045, 1046, 1108, 1216, 1358, 1505, 1594, 1701, 1702, 1780, 1825, 1827, 1853, 1855], "__resume_at_": 13, "jump_absolut": 13, "resume_at": 13, "remaind": [13, 32, 480, 1103, 1135, 1851, 1853, 1895], "restart": [13, 33, 43, 51, 53, 55, 1673, 1674, 1867, 1914], "saroufim": 14, "aotautograd": [14, 16, 23, 61, 669, 1861, 1879, 1894], "evalfram": 14, "min": [14, 32, 35, 45, 52, 65, 109, 178, 179, 180, 181, 292, 684, 685, 686, 747, 759, 760, 769, 791, 808, 809, 810, 811, 814, 864, 937, 938, 998, 1035, 1069, 1070, 1142, 1213, 1227, 1228, 1234, 1238, 1240, 1245, 1251, 1271, 1304, 1336, 1373, 1400, 1402, 1422, 1434, 1441, 1487, 1524, 1528, 1557, 1559, 1564, 1582, 1668, 1673, 1674, 1683, 1687, 1689, 1699, 1800, 1824, 1825, 1826, 1827, 1851, 1853, 1865, 1868, 1893, 1895, 1900, 1903, 1905, 1921], "partit": [14, 22, 39, 40, 1322, 1821, 1893, 1895, 1898, 1906, 1907], "usercod": 14, "ddp": [14, 35, 36, 37, 39, 57, 1453, 1594, 1850, 1878, 1879, 1905], "unrol": [14, 1854, 1855, 1893], "fsdp": [14, 37, 40, 57, 1850], "naiv": [14, 32, 1898], "delai": [14, 1594, 1907], "outlin": [14, 36, 1898, 1906], "bucket": [14, 23, 33, 39, 1322, 1594, 1853, 1879, 1895], "broadcast": [14, 35, 39, 41, 57, 62, 90, 189, 390, 392, 393, 394, 503, 505, 507, 555, 674, 675, 676, 677, 678, 679, 680, 686, 724, 873, 910, 915, 918, 922, 923, 924, 925, 949, 969, 998, 1049, 1050, 1055, 1060, 1100, 1101, 1102, 1103, 1124, 1126, 1138, 1148, 1206, 1207, 1214, 1227, 1231, 1236, 1237, 1239, 1242, 1250, 1270, 1275, 1276, 1286, 1303, 1306, 1315, 1318, 1349, 1368, 1420, 1495, 1557, 1594, 1652, 1688, 1696, 1719, 1721, 1797, 1816, 1821, 1845, 1850, 1851, 1855, 1868, 1869, 1870, 1879, 1893, 1895, 1910], "fraction": [14, 32, 41, 1025, 1098, 1104, 1299, 1345, 1346, 1347, 1362, 1363, 1420, 1461, 1508, 1509, 1611, 1612, 1614, 1615, 1617, 1620, 1621, 1622, 1623, 1700, 1873], "rob": 14, "fusion": [14, 15, 16, 22, 23, 65, 781, 803, 849, 850, 942, 1184, 1190, 1195, 1196, 1197, 1198, 1863, 1886, 1900], "opportun": [14, 1212, 1852, 1906], "diminish": 14, "practic": [14, 32, 35, 41, 57, 1850, 1852, 1862, 1867, 1869, 1875, 1880, 1883, 1886, 1891, 1897, 1905], "vast": 14, "probabl": [14, 19, 32, 147, 749, 912, 1143, 1259, 1304, 1322, 1326, 1330, 1337, 1350, 1352, 1353, 1354, 1355, 1359, 1366, 1368, 1384, 1420, 1421, 1429, 1485, 1496, 1497, 1498, 1499, 1500, 1501, 1506, 1515, 1525, 1548, 1563, 1699, 1867, 1880, 1892, 1893, 1910, 1914], "situat": [14, 16, 32, 41, 54, 65, 950, 1606, 1867, 1880, 1881, 1888, 1889, 1897, 1900, 1907, 1920], "250k": 14, "aitempl": 14, "fuse": [14, 15, 16, 22, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 781, 782, 791, 793, 794, 795, 803, 836, 848, 849, 942, 1195, 1196, 1563, 1656, 1657, 1863, 1868, 1893, 1896, 1900, 1901, 1902, 1903], "mobil": [14, 1863, 1900], "ran": [14, 19, 23, 29, 57], "fine": [14, 26, 35, 37, 39, 42, 847, 850, 1106, 1197, 1563, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1849, 1867, 1875, 1878, 1880, 1893, 1897, 1898, 1900], "succeed": [14, 43, 52, 67, 69, 1271], "aot_eag": [14, 23], "warn": [14, 17, 18, 23, 26, 29, 33, 35, 39, 57, 669, 890, 896, 932, 967, 1014, 1018, 1029, 1032, 1033, 1123, 1163, 1197, 1239, 1283, 1420, 1458, 1459, 1460, 1461, 1603, 1606, 1742, 1750, 1835, 1842, 1849, 1861, 1865, 1876, 1880, 1895, 1897, 1904], "torchdynamo_debug_funct": [14, 23], "desired_function_nam": 14, "replay_record_en": [14, 23], "replai": [14, 23, 956, 990, 1648, 1878], "hundr": [14, 23, 1874, 1885], "thousand": [14, 23], "highli": [14, 52, 1322, 1594, 1849, 1887, 1893, 1909, 1916], "tini": [14, 1915, 1916, 1921], "torchdynamo_repro_aft": [14, 23], "aot": [14, 23, 669, 1861], "your_model": 14, "quickest": 14, "repro": [14, 23, 1651], "torchdynamo_repro_dir": 14, "nvfuser": [14, 16, 23, 1852], "leverag": [14, 15, 942, 1905], "compile_tim": [14, 23], "torch_compile_debug": [14, 16], "_inductor": [14, 15, 18, 23, 942], "diagram": [14, 23, 43, 52, 1182, 1414, 1900, 1907], "certain": [14, 17, 23, 32, 33, 35, 49, 50, 62, 64, 65, 675, 678, 724, 910, 922, 980, 1043, 1157, 1179, 1182, 1189, 1253, 1276, 1286, 1342, 1343, 1344, 1345, 1346, 1347, 1367, 1385, 1401, 1414, 1420, 1465, 1514, 1525, 1527, 1640, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1855, 1862, 1869, 1875, 1876, 1878, 1880, 1885, 1886, 1889, 1893, 1898, 1899, 1905, 1906, 1909], "assumpt": [14, 19, 23, 37, 49, 53, 897, 1337, 1368, 1875, 1879, 1883, 1905, 1906, 1909], "express": [14, 23, 24, 37, 58, 62, 63, 65, 311, 1180, 1183, 1796, 1856, 1863, 1870, 1875, 1880, 1920], "cache_size_limit": [14, 17, 23], "troubl": [14, 23], "compileprofil": [14, 23], "my_model": [14, 23, 37, 1594, 1852, 1893], "profiler_model": [14, 23], "upcom": [14, 23, 35, 57, 1874], "tune": [14, 23, 33, 35, 39, 1012, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1875, 1878, 1887, 1900], "unexpect": [14, 17, 35, 42, 65, 955, 1106, 1108, 1111, 1182, 1414, 1636, 1652, 1791, 1852, 1875, 1880, 1889], "warm": [14, 33, 39, 1001, 1673, 1674, 1878, 1899], "traffic": 14, "frozen_toy_exampl": 14, "vertic": [14, 1843, 1844, 1896, 1898, 1914], "cosin": [14, 672, 673, 951, 952, 1348, 1349, 1495, 1673, 1674, 1681, 1759, 1896], "horizont": [14, 940, 1145, 1147, 1896, 1898], "simplest": [14, 17, 18, 32, 37, 43, 65, 847, 1327, 1328, 1329, 1342, 1343, 1344, 1407, 1408, 1409, 1604, 1879, 1880, 1886, 1900, 1907, 1909], "batch": [14, 15, 23, 33, 35, 41, 53, 55, 58, 59, 62, 63, 65, 572, 573, 574, 576, 577, 675, 691, 692, 693, 694, 695, 696, 724, 749, 768, 774, 896, 897, 898, 910, 922, 923, 930, 933, 934, 935, 942, 955, 1043, 1045, 1055, 1116, 1117, 1123, 1179, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1254, 1262, 1271, 1272, 1276, 1330, 1331, 1332, 1333, 1334, 1337, 1342, 1343, 1348, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1366, 1367, 1368, 1369, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1384, 1385, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1405, 1406, 1417, 1418, 1419, 1420, 1421, 1423, 1426, 1427, 1428, 1429, 1431, 1445, 1446, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1478, 1483, 1485, 1486, 1496, 1497, 1499, 1500, 1501, 1504, 1505, 1506, 1507, 1510, 1523, 1524, 1525, 1548, 1556, 1563, 1581, 1582, 1585, 1594, 1601, 1627, 1628, 1630, 1631, 1633, 1674, 1675, 1681, 1687, 1689, 1699, 1703, 1782, 1783, 1784, 1786, 1787, 1791, 1796, 1800, 1801, 1820, 1823, 1824, 1826, 1839, 1842, 1850, 1868, 1869, 1870, 1874, 1878, 1881, 1882, 1886, 1888, 1898, 1900, 1905, 1909, 1914, 1915], "schedul": [14, 37, 43, 45, 51, 57, 64, 669, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1861, 1879, 1885, 1899], "automat": [14, 16, 23, 26, 33, 35, 40, 52, 53, 65, 143, 578, 878, 880, 992, 1001, 1144, 1191, 1197, 1283, 1460, 1563, 1595, 1718, 1748, 1849, 1850, 1854, 1855, 1863, 1864, 1868, 1869, 1875, 1876, 1878, 1880, 1886, 1888, 1893, 1897, 1898, 1900, 1901, 1905, 1914, 1915, 1917], "physic": [14, 53, 1073, 1091, 1856, 1877, 1909], "principl": [14, 1878], "whatev": [14, 54, 65, 439, 1594, 1739, 1823, 1855, 1881], "triton": [14, 15, 16, 21, 23, 942, 1881], "stream": [14, 32, 35, 43, 50, 57, 64, 143, 477, 882, 896, 956, 957, 958, 959, 962, 963, 964, 972, 975, 976, 990, 996, 1028, 1031, 1295, 1296, 1301, 1649, 1721, 1850, 1853, 1855, 1905], "multiprocessor": 14, "tile": [14, 483, 1853, 1895], "some_fun": [14, 23], "insurmount": [14, 23], "invis": [14, 23, 1878], "introduc": [14, 18, 19, 23, 29, 41, 62, 749, 1254, 1366, 1384, 1429, 1524, 1726, 1849, 1855, 1876, 1879, 1887, 1893, 1897, 1898, 1899, 1905, 1915], "maxim": [14, 23, 863, 1279, 1410, 1411, 1412, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1667, 1668, 1669, 1670, 1909], "explain": [14, 23, 27, 35, 1849, 1855, 1874, 1878, 1881], "aggreg": [14, 23, 33, 35, 37, 45, 57, 1358, 1505, 1594, 1617, 1865, 1898], "woo": [14, 23], "out_guard": [14, 23], "ops_per_graph": [14, 23], "builtinvari": [14, 23], "constantvari": [14, 17, 23], "t2": [14, 23, 42, 676, 677, 869, 1106, 1135, 1594, 1905, 1906], "generic_jump": [14, 23], "17": [14, 23, 26, 35, 674, 1179, 1234, 1411, 1773, 1852, 1893, 1895, 1909], "throw": [14, 16, 23, 35, 36, 40, 57, 64, 65, 183, 315, 320, 534, 603, 1167, 1182, 1222, 1271, 1414, 1594, 1596, 1597, 1630, 1641, 1695, 1835, 1870, 1875, 1890, 1905, 1915], "fallback": [14, 23, 26, 35, 52, 60, 1195, 1245, 1874, 1878], "fullgraph": [14, 15, 23, 942], "went": [14, 35, 65], "torchdynamo_dynamic_shap": 14, "vari": [14, 23, 808, 1445, 1627, 1757, 1865, 1889, 1896, 1900, 1901, 1909], "imag": [14, 23, 26, 32, 730, 731, 732, 850, 851, 944, 1320, 1324, 1325, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1361, 1362, 1363, 1378, 1386, 1421, 1426, 1427, 1448, 1465, 1467, 1468, 1478, 1489, 1490, 1492, 1493, 1507, 1508, 1513, 1524, 1581, 1582, 1724, 1850, 1851, 1853, 1870, 1883, 1895, 1898, 1913, 1914], "cv": 14, "nlp": [14, 33, 1377, 1378, 1379, 1386], "client": [14, 35, 39, 52, 1012, 1897], "app": 14, "unnecessarili": 14, "cold": [14, 20], "metric": [14, 20, 38, 1004, 1006, 1012, 1683, 1865, 1886, 1899, 1914], "visibli": 14, "torchdynamo_repro_level": [14, 23], "bisect": [14, 23], "codegen": [14, 23, 65], "yet": [14, 17, 18, 19, 23, 36, 43, 57, 62, 64, 65, 958, 1029, 1185, 1187, 1199, 1287, 1594, 1608, 1612, 1614, 1850, 1854, 1855, 1861, 1869, 1870, 1878, 1893, 1895, 1900, 1905, 1907, 1909, 1910, 1912], "dramat": [14, 23], "impact": [14, 19, 23, 33, 35, 1012, 1743, 1863, 1865, 1875, 1900, 1913], "fallback_random": [14, 15, 23, 942], "alpha": [14, 41, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 144, 145, 304, 305, 543, 550, 551, 552, 553, 674, 675, 678, 679, 680, 733, 759, 764, 910, 998, 999, 1139, 1153, 1326, 1336, 1356, 1402, 1441, 1479, 1487, 1502, 1503, 1513, 1531, 1564, 1653, 1667, 1760, 1761, 1774, 1778, 1792, 1797, 1798, 1851, 1853, 1875, 1880, 1893, 1896], "root": [14, 35, 37, 45, 52, 53, 57, 65, 782, 1120, 1219, 1220, 1667, 1730, 1789, 1863, 1875, 1897, 1905, 1906, 1909], "allevi": [14, 1898], "cudagraph": [14, 15, 16, 20, 942, 990, 1878], "subgraph": [15, 23, 942, 1651, 1875, 1879, 1893, 1897, 1919], "max": [15, 18, 32, 35, 43, 45, 51, 52, 54, 57, 65, 109, 178, 179, 180, 181, 292, 684, 685, 686, 747, 759, 760, 769, 771, 772, 791, 808, 809, 810, 811, 814, 863, 913, 930, 937, 938, 942, 1034, 1069, 1070, 1142, 1193, 1213, 1227, 1234, 1236, 1238, 1239, 1251, 1323, 1324, 1325, 1336, 1337, 1348, 1349, 1358, 1362, 1363, 1368, 1373, 1374, 1382, 1383, 1400, 1402, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1417, 1418, 1419, 1422, 1433, 1434, 1441, 1462, 1463, 1465, 1475, 1476, 1477, 1487, 1495, 1505, 1508, 1509, 1524, 1528, 1537, 1538, 1539, 1549, 1553, 1557, 1559, 1564, 1582, 1598, 1630, 1656, 1657, 1658, 1668, 1673, 1674, 1683, 1704, 1705, 1777, 1806, 1807, 1835, 1851, 1852, 1853, 1862, 1865, 1870, 1876, 1878, 1882, 1895, 1900, 1903, 1921], "autotun": [15, 18, 942], "list_mode_opt": [15, 18, 942], "notabl": [15, 942, 1855], "epilogue_fus": [15, 942], "pointwis": [15, 16, 41, 942, 1116, 1117, 1259, 1260, 1380, 1868, 1876], "templat": [15, 942, 998, 999, 1896], "max_autotun": [15, 942], "shape_pad": [15, 942], "pad": [15, 32, 33, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 724, 727, 728, 729, 730, 731, 732, 757, 758, 761, 762, 763, 768, 771, 772, 774, 942, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1179, 1327, 1328, 1329, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1357, 1358, 1361, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1410, 1411, 1412, 1417, 1418, 1420, 1435, 1436, 1437, 1438, 1439, 1440, 1460, 1461, 1465, 1469, 1470, 1471, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1504, 1505, 1507, 1513, 1524, 1537, 1538, 1539, 1540, 1541, 1542, 1581, 1582, 1628, 1630, 1631, 1633, 1704, 1705, 1796, 1850, 1851, 1853, 1870, 1882, 1893, 1895, 1900, 1914], "graph_diagram": [15, 942], "pictur": [15, 942], "list_opt": [15, 18, 942], "speedup": [16, 17, 18, 20, 32, 33, 1420, 1461], "checkout": [16, 1893], "new_fn": 16, "input_tensor": [16, 35], "10000": [16, 29, 33, 683, 1681, 1728, 1882, 1886, 1909, 1914], "Its": [16, 35, 65, 954, 970, 1182, 1229, 1247, 1248, 1273, 1414, 1641, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1839, 1855, 1879], "famou": 16, "suboptim": [16, 33], "crucial": [16, 17, 18, 27, 1859], "bottleneck": [16, 33, 1850, 1886], "bandwidth": [16, 33, 35, 51, 53, 1900, 1905], "crunch": 16, "elimin": [16, 22, 35, 65, 599, 1832, 1833, 1890], "trig": 16, "size_hint": 16, "16384": [16, 1878], "filenam": [16, 26, 32, 65, 1181, 1189, 1192, 1849, 1853, 1864, 1875, 1897, 1911, 1914], "__file__": [16, 1849, 1892, 1897], "meta": [16, 22, 57, 61, 65, 328, 1859, 1905, 1914, 1916], "fp32": [16, 57, 770, 783, 806, 1040, 1594, 1878, 1889, 1900, 1901, 1903], "i32": 16, "instance_descriptor": 16, "divisible_by_16": 16, "equal_to_1": 16, "in_ptr0": 16, "out_ptr0": 16, "xnumel": 16, "xblock": 16, "tl": 16, "constexpr": 16, "xoffset": 16, "program_id": 16, "xindex": 16, "reshap": [16, 27, 35, 41, 488, 489, 503, 533, 606, 681, 940, 1038, 1053, 1054, 1094, 1145, 1202, 1234, 1238, 1247, 1248, 1251, 1314, 1361, 1435, 1436, 1437, 1438, 1439, 1465, 1602, 1635, 1641, 1780, 1781, 1788, 1815, 1816, 1821, 1843, 1844, 1851, 1853, 1862, 1869, 1870, 1893, 1895, 1902, 1913, 1914], "arang": [16, 24, 32, 35, 42, 503, 596, 680, 681, 682, 686, 688, 875, 876, 877, 924, 936, 940, 1038, 1053, 1071, 1075, 1083, 1089, 1091, 1095, 1096, 1097, 1098, 1105, 1106, 1145, 1202, 1203, 1207, 1210, 1234, 1237, 1238, 1251, 1314, 1435, 1436, 1437, 1438, 1439, 1466, 1467, 1468, 1550, 1641, 1642, 1688, 1696, 1700, 1715, 1722, 1727, 1748, 1780, 1788, 1799, 1815, 1816, 1818, 1819, 1821, 1843, 1851, 1853, 1862, 1870, 1891, 1895, 1910, 1914, 1915], "xmask": 16, "x0": [16, 41], "tmp0": 16, "tmp1": 16, "tmp2": 16, "int32": [16, 184, 201, 305, 313, 317, 438, 606, 926, 1057, 1069, 1070, 1105, 1107, 1108, 1212, 1223, 1224, 1225, 1243, 1271, 1337, 1698, 1735, 1900, 1909, 1911, 1912, 1915, 1921], "verifi": [16, 35, 65, 897, 1038, 1651, 1652, 1821, 1849, 1852, 1864, 1880, 1883, 1893, 1898], "temporari": [16, 26, 65, 812, 815, 1595, 1875, 1882], "held": [16, 64, 956, 980, 1008, 1292, 1874], "written": [16, 22, 23, 35, 45, 62, 905, 1014, 1351, 1649, 1669, 1852, 1854, 1862, 1863, 1875, 1879, 1880, 1881, 1886, 1891, 1893, 1897, 1899, 1911, 1914], "resnet50": [16, 1849, 1914], "hub": [16, 1850, 1864], "v0": 16, "resnet18": [16, 60, 65, 1849, 1852, 1854, 1864, 1897], "pretrain": [16, 851, 1357, 1358, 1849, 1875, 1893], "opt_model": 16, "64": [16, 60, 61, 63, 1116, 1117, 1121, 1319, 1320, 1321, 1323, 1324, 1325, 1331, 1442, 1563, 1736, 1870, 1892, 1893, 1900, 1904, 1909, 1912, 1914, 1915], "inspir": [16, 57, 1659, 1880], "frequent": [16, 18, 24, 37, 1322, 1850, 1889, 1891], "timm": [16, 18, 20], "download": [16, 1864, 1892, 1914], "huggingfac": [16, 18, 20], "berttoken": 16, "bertmodel": 16, "past": [16, 20, 35, 65, 967, 1014, 1018, 1032, 1033, 1594, 1882], "bert": [16, 1460], "uncas": 16, "token": [16, 52, 956, 990, 991, 1849, 1856], "from_pretrain": [16, 1357, 1358], "me": 16, "encoded_input": 16, "return_tensor": 16, "pt": [16, 24, 33, 1187, 1189, 1192, 1199, 1253, 1731, 1852, 1886, 1891, 1897], "trigonometri": 16, "skim": 16, "create_model": 16, "resnext101_32x8d": 16, "7": [16, 20, 26, 32, 33, 35, 41, 65, 252, 305, 307, 309, 313, 393, 394, 462, 503, 549, 596, 606, 674, 686, 734, 735, 893, 895, 918, 921, 926, 932, 936, 940, 1038, 1050, 1052, 1053, 1056, 1071, 1094, 1095, 1098, 1101, 1105, 1135, 1145, 1159, 1203, 1207, 1217, 1222, 1224, 1225, 1228, 1229, 1233, 1234, 1238, 1245, 1312, 1313, 1314, 1320, 1321, 1324, 1325, 1327, 1338, 1357, 1402, 1410, 1411, 1435, 1436, 1437, 1438, 1439, 1465, 1480, 1551, 1619, 1624, 1634, 1641, 1659, 1706, 1710, 1716, 1726, 1727, 1728, 1735, 1748, 1751, 1753, 1764, 1765, 1773, 1780, 1782, 1783, 1788, 1800, 1802, 1803, 1810, 1815, 1816, 1819, 1821, 1830, 1839, 1843, 1852, 1856, 1862, 1869, 1870, 1876, 1878, 1880, 1889, 1891, 1893, 1895, 1900, 1909, 1912, 1913, 1914, 1915, 1916], "highest": [16, 669, 1322, 1710, 1711, 1743, 1901, 1916], "torchinductor": [16, 21, 669, 1861], "aot_ts_nvfus": 16, "nvprims_nvfus": 16, "primtorch": 16, "onnxrt": 16, "ipex": 16, "tvm": 16, "apach": 16, "wrong": [16, 35, 65, 886, 1180, 1183, 1879, 1888, 1892, 1893, 1896], "symbolic_trac": [16, 65], "traceabl": [16, 65, 613, 806, 1852, 1900], "smoother": [16, 1849, 1862], "transit": [16, 17, 1182, 1283, 1414, 1796, 1850, 1852], "ux": [17, 58, 63], "perspect": [17, 1879, 1889, 1906], "fn_foo": 17, "grab": 17, "dig": 17, "hole": 17, "perf": [17, 26, 1900], "neutral": 17, "referenc": [17, 65, 959, 1182, 1414, 1823, 1854, 1875, 1893, 1905], "previous": [17, 19, 52, 57, 58, 61, 62, 63, 65, 214, 687, 781, 782, 1123, 1189, 1794, 1795, 1837, 1838, 1842, 1852, 1876, 1878, 1886, 1897, 1898, 1904, 1905, 1910], "invalid": [17, 45, 50, 1182, 1304, 1414, 1874, 1875, 1893, 1897, 1898], "lifecycl": 17, "translat": [17, 35, 78, 79, 1135, 1875, 1907], "check_fn": 17, "thrown": [17, 35, 40, 57, 64, 606, 867, 869, 1012, 1053, 1145, 1182, 1212, 1221, 1223, 1225, 1228, 1229, 1240, 1414, 1598, 1843, 1897], "_pyinterpreterstate_setevalframefunc": 17, "convert_fram": [17, 23], "convert_frame_assert": 17, "gloss": 17, "proxi": [17, 35, 37, 1900], "one_graph": 17, "_convert_frame_assert": 17, "frametyp": 17, "cache_s": [17, 41], "f_code": 17, "unsupport": [17, 19, 62, 1852, 1856, 1869, 1905, 1909], "drop": [17, 32, 61, 63, 65, 1001, 1187, 1240, 1245, 1326, 1636, 1796, 1852, 1869, 1888], "needless": 17, "evict": 17, "alongsid": [17, 26, 1182, 1414], "transform_code_object": 17, "output_instruct": 17, "rememb": [17, 1882, 1888], "guardedcod": 17, "symbolic_loc": 17, "f_local": 17, "travers": [17, 57, 825, 1594, 1879, 1880, 1906, 1918, 1919], "ordereddict": [17, 1182, 1414, 1415, 1424, 1442, 1585, 1617, 1853, 1886, 1891, 1916], "k": [17, 23, 32, 35, 37, 41, 53, 65, 278, 346, 496, 503, 505, 507, 579, 606, 749, 935, 1042, 1055, 1111, 1124, 1144, 1203, 1211, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1226, 1227, 1228, 1231, 1233, 1240, 1242, 1244, 1245, 1254, 1272, 1276, 1327, 1329, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1362, 1363, 1366, 1367, 1384, 1385, 1399, 1401, 1402, 1407, 1409, 1420, 1421, 1429, 1431, 1496, 1508, 1509, 1531, 1548, 1563, 1601, 1687, 1689, 1699, 1727, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1786, 1787, 1796, 1818, 1823, 1851, 1853, 1854, 1873, 1878, 1880, 1892, 1909, 1910, 1912], "variablebuild": 17, "localsourc": 17, "_wrap": 17, "construct": [17, 26, 27, 32, 35, 37, 39, 40, 41, 52, 57, 59, 61, 62, 65, 143, 439, 781, 782, 813, 867, 868, 882, 896, 944, 1042, 1058, 1123, 1144, 1182, 1193, 1197, 1198, 1205, 1212, 1252, 1253, 1268, 1283, 1357, 1358, 1414, 1504, 1585, 1594, 1596, 1597, 1627, 1634, 1648, 1689, 1693, 1740, 1775, 1782, 1783, 1784, 1785, 1786, 1787, 1801, 1814, 1817, 1842, 1850, 1852, 1865, 1878, 1879, 1886, 1888, 1891, 1897, 1900, 1905, 1907, 1912, 1914, 1915, 1916], "variabletrack": 17, "make_guard": 17, "outputgraph": [17, 65], "mention": [17, 23, 35, 57, 1849, 1854, 1855, 1869, 1875, 1878, 1886, 1893, 1909, 1913], "recal": [17, 1331, 1880, 1914], "heart": [17, 32], "pump": 17, "exactli": [17, 26, 33, 35, 41, 54, 897, 898, 936, 968, 972, 1055, 1101, 1102, 1179, 1182, 1223, 1358, 1361, 1414, 1442, 1445, 1505, 1515, 1594, 1641, 1652, 1862, 1868, 1875, 1878, 1879, 1880, 1883, 1884, 1893, 1897, 1898], "cool": 17, "di": [17, 1867], "get_instruct": 17, "124": 17, "opnam": 17, "argval": 17, "starts_lin": 17, "is_jump_target": 17, "littl": [17, 35, 1880, 1907], "hasattr": [17, 65, 1853, 1880, 1900], "inst": 17, "unimpl": 17, "miss": [17, 50, 57, 678, 1111, 1182, 1276, 1286, 1348, 1377, 1378, 1379, 1414, 1530, 1636, 1892, 1893, 1894, 1909], "getattr": [17, 65, 1853, 1880], "inde": [17, 19, 42, 1852, 1862, 1897, 1907], "onto": [17, 22, 35, 57, 65, 1017, 1189, 1192, 1253, 1606, 1849, 1867, 1878, 1881, 1882, 1886, 1899], "dozen": 17, "symbolic_convert": [17, 23], "spoken": 17, "quiet": 17, "closer": [17, 1135, 1463, 1700, 1880, 1886], "mind": [17, 18, 1227, 1245, 1357, 1875, 1881, 1883], "underli": [17, 35, 37, 39, 41, 43, 57, 62, 65, 90, 303, 318, 369, 392, 394, 464, 465, 466, 467, 474, 489, 510, 513, 546, 547, 548, 602, 737, 746, 867, 958, 1152, 1156, 1182, 1253, 1313, 1556, 1717, 1820, 1834, 1852, 1855, 1870, 1878, 1882, 1884, 1898, 1905, 1911, 1913], "replace_guard": 17, "add_guard": 17, "visit": [17, 55, 1893], "act": [17, 37, 41, 43, 50, 62, 847, 1331, 1415, 1416, 1425, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1620, 1621, 1622, 1623, 1624, 1835, 1878, 1886, 1890, 1896], "behalf": 17, "python_typ": 17, "as_proxi": 17, "as_python_proxi": 17, "bookkeep": 17, "came": 17, "somewher": [17, 1869, 1885], "flesh": 17, "notimplementederror": [17, 41, 1897], "relianc": 17, "fulfil": [17, 1875, 1881, 1897], "build_tupl": 17, "gist": [17, 61, 782, 1883], "old": [17, 35, 42, 65, 843, 1106, 1354, 1646, 1683, 1731, 1848, 1850, 1852, 1875, 1878, 1880, 1892, 1900, 1914], "notion": [17, 32, 897, 1332, 1333, 1334, 1377, 1378, 1379, 1453], "popn": 17, "tuplevari": 17, "pydoc": 17, "tensorvari": 17, "hint": [17, 956, 990, 1183, 1420, 1458, 1459, 1460, 1461, 1852, 1854, 1855, 1878], "instructiontranslatorbas": 17, "pop": [17, 62, 1016, 1415, 1424, 1895, 1898, 1899], "dataclass": [17, 22, 37], "ctor": 17, "guardsourc": 17, "create_fn": 17, "kind": [17, 35, 46, 65, 669, 1201, 1595, 1651, 1698, 1763, 1849, 1859, 1880, 1888, 1893, 1897, 1900, 1910, 1912], "guard_sourc": 17, "elif": [17, 22, 65, 1188, 1380, 1648, 1854, 1855, 1884], "istyp": 17, "guardbuild": 17, "equals_match": 17, "rangevari": 17, "appar": 17, "checkfunctionmanag": 17, "compile_check_fn": 17, "cacheentri": 17, "create_cache_entri": 17, "pyobject": 17, "guarded_cod": 17, "malloc": [17, 57], "sizeof": [17, 1911], "debug_null_check": 17, "pyobject_getattrstr": 17, "null_check": 17, "pycodeobject": 17, "compos": [17, 19, 41, 61, 65, 727, 728, 729, 730, 731, 732, 755, 756, 761, 762, 763, 771, 772, 933, 935, 1113, 1115, 1116, 1117, 1123, 1182, 1319, 1320, 1321, 1323, 1324, 1325, 1327, 1328, 1329, 1342, 1343, 1344, 1345, 1346, 1347, 1362, 1363, 1382, 1383, 1402, 1407, 1408, 1409, 1414, 1462, 1467, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1488, 1489, 1490, 1491, 1492, 1493, 1508, 1509, 1531, 1534, 1535, 1537, 1538, 1539, 1704, 1705, 1842, 1850, 1851, 1852, 1855, 1868, 1880, 1881, 1886, 1893, 1897, 1914], "sort_kei": 17, "guard_nn_modul": 17, "is_nn_modul": 17, "local_build": 17, "global_build": 17, "ref": [17, 23, 1849], "val": [17, 998, 1188, 1853, 1855, 1873], "___guarded_cod": 17, "___check_type_id": 17, "94367738391392": 17, "___check_tensor": 17, "id": [17, 20, 23, 29, 32, 35, 39, 43, 51, 52, 53, 57, 65, 763, 813, 956, 991, 1453, 1539, 1578, 1594, 1651, 1855, 1885, 1893, 1895, 1897, 1904, 1905, 1906, 1911], "deeper": [17, 21, 1850, 1886, 1897], "dive": [17, 21, 1850, 1879, 1883, 1897], "_eval_fram": 17, "anew": 17, "massiv": 17, "role": [17, 37, 43, 44, 52, 53], "weak": 17, "moduleinvalid": 17, "2x": [18, 1914], "compress": [18, 20, 33, 57, 201, 576, 577, 1077, 1078, 1087, 1088, 1594, 1782, 1783, 1784, 1786, 1787, 1820, 1850], "varieti": [18, 1878, 1906], "announc": [18, 52], "compiled_fn": 18, "set_float32_matmul_precis": [18, 1131], "simpler": [18, 63, 1123, 1842, 1852, 1875, 1880, 1883, 1886], "bench_al": 18, "IF": 18, "accur": [18, 45, 958, 1135, 1257, 1356, 1706, 1821, 1878, 1906], "odd": [18, 41, 1076, 1077, 1078, 1086, 1087, 1088, 1488, 1489, 1490], "quirk": 18, "ask": [18, 35, 61, 62, 1849, 1850, 1881, 1883], "overview": [18, 27, 35, 49, 1594, 1850, 1862, 1867, 1875, 1883, 1886, 1898, 1900, 1905], "nnmodul": 18, "constabl": 19, "edg": [19, 768, 774, 1135, 1143, 1144, 1524, 1582, 1860, 1881, 1906], "workflow": [19, 20, 27, 1849, 1880, 1900, 1901, 1917], "orchestr": 19, "_forward_pre_hook": 19, "forward_hook": [19, 1886], "_backward_pre_hook": 19, "_backward_hook": 19, "categori": [19, 41, 45, 1304, 1855, 1857, 1893, 1896, 1899, 1901, 1912], "_state_dict_hook": 19, "pre": [19, 23, 27, 35, 39, 57, 65, 896, 903, 1182, 1414, 1589, 1591, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1649, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1849, 1852, 1855, 1863, 1875, 1877, 1886, 1893, 1898, 1915], "load_": 19, "alter": [19, 1874, 1880], "backward_hook": [19, 1886], "avoiabl": 19, "fire": [19, 1182, 1414, 1879, 1885], "presenc": [19, 62, 65, 1191, 1309, 1897, 1909], "conv": [19, 65, 691, 692, 693, 694, 695, 696, 697, 698, 699, 781, 782, 785, 803, 843, 849, 1182, 1191, 1197, 1198, 1342, 1343, 1344, 1345, 1346, 1347, 1414, 1415, 1421, 1863, 1873, 1878, 1889, 1893, 1900, 1901, 1902, 1903], "opaqu": [19, 35, 42, 956, 990, 991, 1106], "skip_nnmodule_hook_guard": 19, "react": [19, 43], "pre_backward": 19, "accordingli": [19, 41, 65, 1191, 1384, 1606, 1870, 1905], "warn_onc": 19, "bin": [20, 43, 50, 52, 292, 293, 808, 913, 1142, 1143, 1144, 1853, 1855, 1895, 1914], "hui": 20, "nightli": 20, "gcp": [20, 35], "a100": [20, 23], "night": 20, "40gb": [20, 23], "2ghz": 20, "xeon": [20, 1850, 1877], "suit": [20, 35, 1852, 1854, 1855, 1893, 1901, 1905], "torchbench": 20, "amp": [20, 23, 1001, 1850, 1874], "trend": 20, "droplist": 20, "geometr": [20, 278, 768, 774, 1513, 1524, 1582, 1836, 1850, 1895, 1917], "peak": [20, 37, 39, 57, 1004, 1006, 1012, 1019, 1020, 1021, 1594, 1675, 1681, 1898], "footprint": [20, 33, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1878], "ratio": [20, 41, 43, 606, 1362, 1363, 1508, 1509, 1853], "click": [20, 1917], "bring": [20, 58, 65, 1076, 1478, 1513, 1898], "with_cudagraph": 20, "kick": [20, 1879, 1905, 1906], "ui": [20, 1883, 1914], "Be": [20, 1893], "wise": [20, 33, 35, 41, 676, 677, 687, 747, 759, 760, 769, 773, 873, 948, 1055, 1060, 1101, 1102, 1125, 1126, 1138, 1147, 1204, 1206, 1263, 1264, 1265, 1266, 1270, 1280, 1283, 1285, 1315, 1336, 1347, 1354, 1356, 1370, 1371, 1372, 1373, 1375, 1400, 1403, 1413, 1422, 1432, 1433, 1434, 1441, 1443, 1444, 1445, 1450, 1452, 1454, 1455, 1487, 1502, 1511, 1512, 1516, 1517, 1518, 1519, 1522, 1526, 1528, 1533, 1543, 1544, 1557, 1558, 1559, 1564, 1565, 1566, 1567, 1571, 1573, 1574, 1575, 1780, 1844, 1877, 1880, 1909, 1910, 1913], "pep": [21, 1852, 1854, 1893], "523": 21, "rewrit": [21, 37, 62, 1863, 1875, 1883, 1893], "customiz": [21, 1856, 1918], "mix": [21, 26, 33, 41, 57, 1001, 1594, 1850, 1875, 1877, 1900, 1909], "usabl": [21, 23, 64, 1855, 1893], "openmp": [21, 1850, 1877, 1892], "dashboard": [21, 1850], "video": [21, 1426, 1427, 1869, 1914], "topic": [21, 24, 1885, 1886], "sit": 22, "replace_add_with_mul": 22, "insert": [22, 32, 35, 41, 57, 64, 65, 736, 781, 782, 850, 851, 1415, 1416, 1424, 1594, 1735, 1738, 1748, 1769, 1793, 1834, 1852, 1863, 1878, 1895, 1900], "insert_relu_after_add": 22, "inserting_aft": [22, 65], "new_relu_nod": 22, "replace_all_uses_with": [22, 65], "roughli": [22, 32, 1380, 1879], "coupl": [22, 61, 1852, 1885, 1906], "axi": [22, 503, 505, 507, 811, 814, 946, 1054, 1069, 1095, 1124, 1147, 1701, 1721, 1726, 1727, 1844, 1851, 1853, 1881, 1893, 1898, 1900], "eg": [22, 926, 1728, 1735], "dead": [22, 65], "frequenc": [22, 53, 913, 954, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1179, 1322, 1357, 1358, 1504, 1505, 1675, 1796], "replaceaddwithmul": 22, "transformed_graph_modul": 22, "graph_modul": [22, 848], "replaceaddwithmulsub": 22, "mul_r": 22, "removedetachpass": 22, "detach_copi": [22, 1853, 1895], "len": [22, 32, 35, 37, 65, 211, 534, 684, 685, 1074, 1078, 1081, 1085, 1088, 1092, 1122, 1186, 1248, 1269, 1281, 1309, 1312, 1351, 1551, 1612, 1614, 1630, 1674, 1681, 1785, 1788, 1794, 1795, 1799, 1836, 1837, 1838, 1852, 1853, 1855, 1880, 1895, 1909, 1914], "args_map": 22, "schema": [22, 29, 35, 37, 1851, 1852, 1853, 1855, 1859, 1893], "enumer": [22, 32, 41, 65, 1182, 1414, 1416, 1425, 1674, 1853, 1854, 1874, 1878, 1892, 1914], "_schema": 22, "kwarg_onli": 22, "scalartotensorpass": 22, "breakpoint": [22, 65, 1855], "try_coerc": 22, "tensortyp": [22, 1855], "pattern": [22, 35, 37, 781, 782, 783, 785, 843, 850, 998, 1351, 1630, 1778, 1852, 1855, 1875, 1878, 1880, 1882, 1884, 1891, 1901, 1902], "wildcard": [22, 1869, 1897], "subgraph_rewrit": [22, 65], "replace_pattern": 22, "replaced_pattern": 22, "replace_pattern_with_filt": 22, "traced_modul": [22, 65, 1891], "replacedpattern": 22, "nodes_map": [22, 65], "popul": [22, 35, 41, 50, 57, 64, 65, 327, 485, 493, 494, 1282, 1310, 1878], "passmanag": 22, "blob": [22, 781, 1112, 1883, 1885, 1914], "infra": [22, 23, 45, 1894], "pass_manag": 22, "__": [22, 1856], "pm": 22, "replace_add_with_div": 22, "replace_div_with_mul": 22, "run_checks_after_each_pass": 22, "suppress_check_failur": 22, "graph_module_out": 22, "set_check": 22, "check_div_target": 22, "div": [22, 33, 228, 1051, 1100, 1103, 1322, 1426, 1427, 1719, 1828, 1851, 1853, 1859, 1868, 1895, 1909, 1912], "valueerror": [22, 64, 1180, 1606, 1607, 1627, 1630, 1880, 1898, 1916], "add_check": 22, "subgraphmatch": 22, "matcher_util": 22, "match_output": 22, "match_placehold": 22, "remove_overlapping_match": 22, "ignore_liter": 22, "liter": [22, 1650, 1853, 1856, 1869, 1897], "largemodel": 22, "_weight": [22, 734, 735, 1357, 1358], "_bia": 22, "large_model_graph": 22, "patternmodel": 22, "_weight_1": 22, "_bias_1": 22, "pattern_graph": 22, "subgraph_match": 22, "match_result": 22, "internalmatch": 22, "default_factori": 22, "placeholder_nod": 22, "returning_nod": 22, "largest": [22, 57, 579, 913, 1099, 1213, 1234, 1236, 1238, 1239, 1254, 1550, 1602, 1818, 1851, 1853, 1854, 1855, 1921], "invari": [22, 41, 1627, 1775, 1782, 1783, 1784, 1785, 1786, 1787, 1907, 1909], "capabilitybasedpartition": 22, "l34": 22, "operator_support": 22, "operatorsupportbas": 22, "allows_single_node_partit": 22, "non_compute_op": 22, "ex": [22, 44, 1594, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1865], "_oper": 22, "getitem": 22, "allowed_single_node_partition_op": 22, "ll28c1": 22, "l28c1": 22, "is_node_support": 22, "chain": [22, 32, 33, 41, 64, 65, 143, 882, 932, 1237, 1358, 1442, 1671, 1684, 1855, 1875, 1878, 1880, 1883, 1886, 1896], "operatorsuppportbas": 22, "l150": 22, "any_chain": 22, "l164": 22, "addmuloperatorsupport": 22, "capability_partition": 22, "op_support": 22, "partition_list": 22, "propose_partit": 22, "call_modul": [22, 65], "fused_graph_modul": 22, "fuse_partit": 22, "lazo": 23, "meantim": [23, 1330, 1331, 1348, 1350, 1374, 1381, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1485, 1486, 1496, 1525, 1548, 1556], "smallest": [23, 45, 931, 1203, 1213, 1234, 1238, 1254, 1698, 1818, 1916, 1921], "suspect": [23, 29, 1878], "taken": [23, 35, 41, 57, 64, 65, 854, 1076, 1078, 1101, 1102, 1337, 1350, 1358, 1421, 1497, 1505, 1748, 1780, 1873, 1875, 1877, 1878, 1880, 1882, 1885, 1891, 1893, 1897, 1899], "begin": [23, 29, 32, 33, 35, 36, 44, 52, 57, 65, 486, 749, 773, 809, 810, 854, 911, 949, 956, 1004, 1006, 1075, 1135, 1141, 1202, 1237, 1249, 1329, 1330, 1331, 1348, 1350, 1356, 1366, 1367, 1370, 1371, 1372, 1373, 1374, 1375, 1381, 1384, 1385, 1400, 1405, 1408, 1409, 1421, 1422, 1429, 1432, 1445, 1451, 1456, 1463, 1496, 1517, 1518, 1594, 1601, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1673, 1675, 1681, 1748, 1751, 1754, 1796, 1821, 1832, 1845, 1855, 1874, 1875, 1878, 1880, 1883, 1885, 1890, 1893, 1896, 1903, 1910], "whose": [23, 35, 41, 57, 65, 533, 848, 884, 932, 949, 1043, 1055, 1060, 1108, 1126, 1135, 1138, 1144, 1182, 1198, 1206, 1252, 1268, 1270, 1315, 1414, 1594, 1642, 1693, 1751, 1817, 1855, 1875, 1880, 1883, 1897, 1909, 1914, 1916], "insuffici": [23, 1002], "proce": [23, 1874, 1878, 1905], "sampl": [23, 32, 37, 41, 58, 63, 65, 81, 146, 147, 369, 445, 472, 597, 768, 912, 954, 967, 1001, 1014, 1018, 1032, 1033, 1073, 1091, 1113, 1123, 1135, 1179, 1198, 1271, 1304, 1326, 1330, 1331, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1368, 1374, 1377, 1378, 1379, 1380, 1381, 1399, 1401, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1432, 1445, 1446, 1453, 1462, 1478, 1485, 1486, 1496, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1510, 1513, 1515, 1523, 1524, 1525, 1548, 1556, 1594, 1602, 1642, 1674, 1689, 1692, 1706, 1708, 1710, 1712, 1714, 1778, 1794, 1795, 1796, 1837, 1838, 1842, 1850, 1865, 1873, 1874, 1878, 1885, 1886, 1897, 1900, 1901, 1914], "test_assertion_error": 23, "compiled_test_assertion_error": 23, "mlazo": 23, "837": 23, "build_map": 23, "portion": [23, 57, 1104, 1351, 1445, 1553, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1670, 1901], "fortun": [23, 1882], "isol": [23, 65, 1585, 1867, 1898], "test_backend_error": 23, "_foobar": [23, 1895], "dummi": [23, 32, 39, 1875, 1880, 1920], "compiled_test_backend_error": 23, "246": [23, 606], "185": [23, 606], "decomp_fn": 23, "810": 23, "repro_aft": 23, "nearli": [23, 143, 882, 896, 1689, 1888, 1905], "minifier_launch": 23, "base_dir": 23, "successfulli": [23, 35, 43, 49, 67, 68, 69, 1188, 1744, 1867, 1886, 1891, 1905], "runnabl": [23, 65, 1874, 1893, 1914], "rand_strid": 23, "proxy_tensor": [23, 1112], "make_fx": [23, 1112], "0a0": 23, "gitfddfc44": 23, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 23, "nvcc": [23, 26, 986], "2005": [23, 672, 1838], "2022": 23, "thu_feb_10_18": 23, "23": [23, 35, 503, 1254, 1759, 1852, 1909], "41_pst_2022": 23, "v11": 23, "112": [23, 606], "cuda_11": 23, "r11": 23, "30978841_0": 23, "sxm4": 23, "float32": [23, 32, 33, 259, 569, 606, 808, 809, 810, 811, 814, 815, 869, 944, 1069, 1070, 1107, 1129, 1131, 1164, 1318, 1331, 1466, 1467, 1468, 1480, 1656, 1657, 1693, 1698, 1706, 1710, 1725, 1740, 1741, 1743, 1785, 1840, 1870, 1874, 1878, 1889, 1893, 1902, 1910, 1911, 1912, 1915, 1916, 1921], "compile_fx": 23, "compile_fx_inn": 23, "walk": [23, 27, 65, 1859, 1880, 1897, 1906, 1907, 1913], "toi": [23, 49], "toy_compil": 23, "debug_util": 23, "run_fwd_maybe_bwd": 23, "opt_mod": 23, "sh": [23, 757, 758, 762, 763, 1481, 1482, 1489, 1490, 1492, 1493, 1538, 1539], "st": [23, 1482, 1490, 1493, 1539], "dt": [23, 1490, 1493, 1910], "requires_grad_": [23, 327, 439, 1182, 1337, 1414, 1497, 1777, 1814, 1853, 1868, 1875, 1915], "rg": 23, "autocast": [23, 1001, 1420, 1850, 1878], "test_model": 23, "layernorm": [23, 1369, 1377, 1378, 1379, 1457, 1461, 1527, 1870, 1902], "overridden": [23, 26, 65, 878, 879, 880, 998, 1414, 1775, 1855, 1875, 1880, 1889, 1898, 1920], "debug_dir_root": 23, "torch_compile_debug_dir": 23, "timestamp": [23, 45, 46, 49, 53, 1865, 1899, 1914], "cd": [23, 1892, 1897, 1899], "l": [23, 41, 724, 749, 911, 920, 926, 933, 934, 1055, 1139, 1140, 1182, 1201, 1211, 1212, 1217, 1218, 1219, 1220, 1224, 1228, 1229, 1271, 1273, 1327, 1330, 1331, 1332, 1342, 1350, 1353, 1354, 1361, 1366, 1374, 1375, 1377, 1380, 1381, 1384, 1396, 1405, 1407, 1414, 1416, 1420, 1421, 1429, 1445, 1462, 1463, 1465, 1563, 1612, 1621, 1629, 1631, 1659, 1735, 1796, 1853, 1855, 1875, 1914], "run_2023_03_01_08_20_52_143510": 23, "pid_180167": 23, "subfold": [23, 26], "artifact": [23, 669, 1861, 1885, 1897], "model__0_forward_1": 23, "aot_model___0_debug": 23, "fx_graph_read": 23, "fx_graph_runn": 23, "fx_graph_transform": 23, "ir_post_fus": 23, "txt": [23, 1189, 1192, 1897], "ir_pre_fus": 23, "fx_graph": 23, "buf1": 23, "schedulernod": 23, "computedbuff": 23, "memorydep": 23, "s0": 23, "unmet_depend": 23, "buf0": 23, "c0": [23, 723, 751, 1384], "met_depend": 23, "primals_2": 23, "buf1_loop_bodi": 23, "var_rang": 23, "z0": 23, "index0": 23, "index1": 23, "bodi": [23, 65, 1193, 1852, 1854, 1855, 1856], "get_index": 23, "get_index_1": 23, "load_1": 23, "get_index_2": 23, "compiled_fun": 23, "hinder": 23, "sublist": [23, 1055], "succe": [23, 35, 40, 52, 62, 1878, 1880, 1892], "compiled_toi": 23, "exhibit": [23, 1651, 1893], "outweigh": 23, "readm": [23, 47, 48, 781, 1870], "verify_instal": 23, "log_fil": 23, "bj": 24, "j": [24, 35, 41, 305, 307, 313, 503, 505, 507, 681, 884, 890, 892, 944, 1055, 1071, 1072, 1079, 1085, 1089, 1090, 1124, 1179, 1182, 1217, 1218, 1229, 1245, 1254, 1261, 1269, 1271, 1276, 1353, 1354, 1355, 1359, 1414, 1417, 1499, 1500, 1501, 1506, 1693, 1700, 1779, 1796, 1800, 1839, 1854, 1873, 1875, 1880, 1883, 1891, 1914], "imaginari": [24, 303, 897, 944, 950, 1076, 1078, 1086, 1087, 1088, 1152, 1172, 1174, 1175, 1178, 1796, 1840, 1841, 1856, 1875, 1883, 1916], "satisfi": [24, 30, 33, 41, 606, 683, 749, 783, 891, 897, 898, 926, 1071, 1072, 1074, 1076, 1078, 1086, 1087, 1088, 1103, 1195, 1221, 1247, 1248, 1322, 1337, 1361, 1366, 1384, 1429, 1617, 1634, 1719, 1735, 1775, 1796, 1855, 1875, 1878, 1883, 1896, 1898, 1909, 1912], "equat": [24, 935, 1055, 1127, 1139, 1225, 1226, 1227, 1228, 1229, 1231, 1242, 1244, 1330, 1761, 1823, 1853, 1875, 1883, 1896, 1910], "mathemat": [24, 40, 65, 890, 891, 892, 893, 894, 895, 1103, 1135, 1330, 1332, 1333, 1334, 1377, 1378, 1379, 1380, 1453, 1532, 1570, 1594, 1641, 1719, 1777, 1778, 1855, 1875, 1889, 1910, 1917], "tradition": 24, "torchaudio": [24, 1850], "mimick": 24, "assembli": 24, "lapack": [24, 934, 1127, 1212, 1223, 1224, 1225, 1227, 1230, 1243, 1699, 1800], "cubla": [24, 973, 1835, 1890], "spectral": [24, 1201, 1217, 1245, 1602, 1625, 1635, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1889], "fft": [24, 1850, 1878], "4621": 24, "0303j": 24, "2438": [24, 1227, 1504], "5874j": 24, "7706": 24, "1421j": 24, "2110": 24, "1918j": 24, "complex128": [24, 168, 944, 1098, 1107, 1161, 1182, 1211, 1212, 1217, 1218, 1219, 1220, 1221, 1222, 1342, 1343, 1344, 1414, 1488, 1489, 1490, 1650, 1693, 1740, 1911, 1912, 1915, 1916], "complex64": [24, 171, 944, 1072, 1074, 1075, 1080, 1081, 1107, 1161, 1213, 1236, 1239, 1342, 1343, 1344, 1488, 1489, 1490, 1650, 1693, 1740, 1911, 1912, 1915, 1916], "apart": [24, 1855, 1875], "linspac": [24, 913, 937, 1076, 1086, 1283, 1853, 1857, 1895], "logspac": [24, 1853, 1857, 1895], "switch": [24, 32, 60, 64, 65, 1224, 1225, 1226, 1354, 1513, 1551, 1598, 1731, 1835, 1867, 1875, 1878, 1886, 1896], "view_as_r": [24, 1796, 1853, 1895, 1913], "6125": 24, "1681": 24, "3773": 24, "3487": 24, "0861": 24, "7981": 24, "1681j": 24, "3487j": 24, "7981j": 24, "mul_": [24, 1853, 1868, 1870, 1909], "2250": [24, 1238, 1641], "7546": [24, 935], "1722": 24, "x1": [24, 930, 1229, 1349, 1406, 1462, 1463, 1495, 1552, 1853], "3j": [24, 35, 687, 947, 948, 1723, 1724, 1740], "4j": [24, 35, 1751], "0000": [24, 41, 503, 854, 890, 892, 913, 933, 937, 950, 1036, 1042, 1043, 1044, 1069, 1070, 1073, 1075, 1076, 1082, 1083, 1086, 1091, 1103, 1104, 1105, 1135, 1141, 1144, 1148, 1207, 1210, 1211, 1212, 1224, 1225, 1228, 1233, 1234, 1238, 1240, 1252, 1268, 1309, 1357, 1358, 1466, 1467, 1469, 1470, 1504, 1505, 1641, 1693, 1699, 1704, 1705, 1706, 1715, 1719, 1720, 1744, 1751, 1753, 1754, 1756, 1759, 1760, 1761, 1762, 1778, 1823, 1824, 1826, 1845, 1862, 1870, 1878, 1909, 1910, 1915], "6569": [24, 1148], "5708": [24, 1039], "7854": 24, "complex_tensor": 24, "conjug": [24, 322, 449, 681, 897, 935, 947, 948, 1162, 1211, 1212, 1218, 1221, 1224, 1231, 1245, 1250, 1254, 1601, 1687, 1723, 1796, 1800, 1839, 1883, 1896, 1915], "wirting": [24, 897, 1883], "deriv": [24, 35, 57, 143, 727, 728, 729, 730, 731, 732, 770, 789, 813, 882, 896, 897, 898, 1118, 1122, 1135, 1179, 1239, 1271, 1585, 1850, 1854, 1880, 1881, 1883, 1905, 1909, 1910], "steepest": [24, 1875], "descent": [24, 41, 1653, 1669, 1673, 1674, 1875, 1886], "quantiz": [24, 65, 212, 318, 330, 463, 464, 465, 466, 467, 469, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 906, 1040, 1069, 1070, 1701, 1702, 1703, 1704, 1705, 1850, 1895, 1912, 1915, 1916, 1918, 1919], "parallel_info": [25, 1850, 1877], "cppextens": [26, 1850], "setuptool": 26, "bare": 26, "buildextens": [26, 1850], "ext_modul": 26, "extra_compile_arg": [26, 1892], "cmdclass": 26, "build_ext": 26, "cudaextens": [26, 1850], "cuda_extens": 26, "extension_kernel": 26, "cu": 26, "cxx": 26, "o2": 26, "arch": 26, "card": [26, 1892], "visibl": [26, 35, 37, 49, 980, 1025, 1415, 1416, 1424, 1425], "ptx": 26, "road": 26, "cc": [26, 35, 1878], "newest": [26, 61], "torch_cuda_arch_list": 26, "build_my_extens": 26, "older": [26, 1878, 1891, 1897], "modestli": [26, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670], "pars": [26, 35, 55, 904, 1855, 1897, 1905], "window": [26, 32, 35, 65, 343, 545, 911, 920, 1139, 1140, 1179, 1201, 1327, 1328, 1329, 1362, 1363, 1382, 1383, 1407, 1408, 1409, 1410, 1411, 1412, 1480, 1508, 1509, 1537, 1538, 1539, 1704, 1705, 1796, 1850, 1853, 1865, 1878], "workaround": [26, 32, 65, 1186, 1849, 1890, 1893, 1900], "pure": [26, 27, 62, 1185, 1852], "sigmoidalphablendforwardcuda": 26, "69460": 26, "facebookresearch": 26, "pytorch3d": 26, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 26, "relocat": 26, "link": [26, 27, 41, 65, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1407, 1408, 1409, 1465, 1515, 1869, 1885, 1886, 1909], "rdc": 26, "dc": 26, "anymor": [26, 35, 57, 214], "dlto": 26, "dlink": 26, "protent": 26, "lib": [26, 1892], "nvshmem": 26, "ninja": [26, 1892], "dlink_librari": 26, "dlink_lib": 26, "std": [26, 43, 50, 81, 369, 445, 1069, 1070, 1101, 1102, 1103, 1642, 1693, 1719, 1758, 1763, 1795, 1833, 1851, 1853, 1868, 1873, 1878, 1885, 1892, 1895], "use_ninja": 26, "greatli": [26, 65, 1878], "distutil": 26, "max_job": 26, "extra_cflag": 26, "extra_cuda_cflag": 26, "extra_ldflag": 26, "extra_include_path": 26, "build_directori": 26, "with_cuda": [26, 1892], "is_python_modul": 26, "is_standalon": 26, "keep_intermedi": 26, "torch_extens": 26, "torch_extensions_dir": 26, "o3": 26, "cuh": 26, "Such": [26, 32, 33, 64, 1836, 1909], "lib64": 26, "cudart": [26, 1892], "cuda_hom": 26, "safest": 26, "pybind11": [26, 27, 1854], "union": [26, 32, 37, 40, 43, 46, 50, 53, 57, 65, 1193, 1253, 1319, 1320, 1321, 1323, 1324, 1325, 1327, 1328, 1329, 1362, 1363, 1382, 1383, 1407, 1408, 1409, 1414, 1457, 1459, 1461, 1464, 1606, 1648, 1650, 1731, 1853, 1854, 1855, 1893, 1897, 1911, 1916, 1919], "linker": 26, "workspac": 26, "header": [26, 50, 1892, 1916], "plain": [26, 1331, 1415, 1424, 1601, 1784, 1880, 1909], "standalon": [26, 51, 52, 53, 806, 1193, 1197, 1852], "torch_lib_path": 26, "load_inlin": [26, 1850], "cpp_sourc": 26, "cuda_sourc": 26, "with_pytorch_error_handl": 26, "behav": [26, 27, 35, 64, 65, 305, 313, 483, 505, 507, 830, 1122, 1197, 1410, 1411, 1412, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1854, 1855, 1862, 1875, 1881, 1886, 1890, 1897, 1905, 1909], "inlin": [26, 64, 998, 1182, 1186, 1197, 1877], "concaten": [26, 32, 35, 40, 892, 929, 940, 970, 1054, 1147, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1358, 1384, 1497, 1505, 1598, 1606, 1793, 1844, 1853, 1856, 1893, 1895, 1909], "furthermor": [26, 50, 61, 1217, 1218, 1245, 1271, 1352, 1868, 1869, 1875, 1890, 1903, 1905], "cuda_runtim": 26, "se": 26, "macro": [26, 1884], "pybind": 26, "_safe_foo": 26, "redirect": [26, 43, 50, 1917], "obscur": 26, "sin_add": 26, "inline_extens": 26, "include_path": [26, 1850], "get_compiler_abi_compatibility_and_vers": [26, 1850], "abi": [26, 27], "shell": 26, "torchvers": 26, "verify_ninja_avail": [26, 1850], "is_ninja_avail": [26, 1850], "embed": [27, 65, 724, 735, 884, 1046, 1322, 1348, 1358, 1374, 1386, 1420, 1463, 1505, 1563, 1738, 1853, 1877, 1895, 1900, 1902, 1905, 1909, 1914], "preprocess": [27, 486, 1182], "augment": [27, 1856, 1916], "interfac": [27, 33, 37, 42, 44, 49, 52, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 783, 1108, 1585, 1742, 1796, 1835, 1851, 1855, 1865, 1866, 1880, 1885, 1896, 1903, 1909, 1914], "opencv": [27, 1513, 1524], "struct": [27, 1122, 1123, 1842, 1863, 1885], "classat_1_1_tensor": 27, "tensor_index": 27, "cpp_autograd": 27, "undesir": [27, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1563, 1880], "cpp_frontend": 27, "library_root": 27, "libtorch": 27, "linux": [27, 35, 1849], "gcc": 27, "cxx11": 27, "race": [29, 1875], "enable_cuda_sanit": 29, "torch_cuda_sanit": 29, "concurr": [29, 35, 39, 1877, 1878, 1905, 1906], "uniniti": [29, 436, 489, 1056, 1057, 1585, 1596, 1597, 1634, 1870, 1895], "overwrit": [29, 32, 35, 65, 1415, 1424, 1855, 1875], "commandlin": 29, "example_error": 29, "csan": 29, "pointer": [29, 132, 973, 1430, 1878, 1879, 1885, 1905, 1907], "139719969079296": 29, "94646435460352": 29, "_sanit": 29, "364": 29, "_handle_kernel_launch": 29, "stack_trac": [29, 65], "stacksummari": 29, "420": 29, "_handle_memory_alloc": 29, "incorrectli": [29, 57, 959, 1100], "faulti": [29, 35], "current_stream": [29, 958, 1850, 1878], "wait_stream": [29, 35, 959, 961, 1878], "default_stream": [29, 35, 1850], "cudnn": [30, 31, 749, 1191, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1366, 1384, 1429, 1430, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1563, 1743, 1850, 1853, 1878, 1889, 1890], "float16": [30, 33, 37, 57, 289, 675, 678, 749, 812, 815, 823, 839, 840, 847, 910, 922, 1107, 1164, 1182, 1276, 1286, 1342, 1343, 1344, 1345, 1346, 1347, 1366, 1367, 1384, 1385, 1401, 1414, 1429, 1563, 1656, 1657, 1728, 1874, 1886, 1900, 1902, 1911, 1912, 1915, 1916, 1921], "v100": [30, 749, 1366, 1384, 1429, 1878], "packedsequ": [30, 749, 1366, 1384, 1429, 1628, 1629, 1630, 1632], "rnn": [31, 723, 749, 750, 751, 752, 754, 847, 1366, 1367, 1384, 1385, 1431, 1595, 1604, 1627, 1857, 1882, 1886, 1902, 1914], "enforc": [31, 33, 64, 784, 879, 1182, 1384, 1414, 1429, 1855, 1886, 1913], "cuda_launch_block": [31, 1384, 1429, 1878], "colon": [31, 1384, 1429, 1905], "cublas_workspace_config": [31, 1384, 1429, 1835, 1878, 1890], "4096": [31, 1384, 1429, 1835, 1878, 1893], "dataload": [32, 486, 1594, 1674, 1675, 1681, 1878, 1882, 1892, 1896, 1914], "batch_siz": [32, 41, 61, 63, 881, 1113, 1121, 1123, 1420, 1627, 1629, 1630, 1632, 1842, 1853, 1881, 1882, 1890, 1893, 1914], "shuffl": [32, 1850, 1914], "batch_sampl": 32, "num_work": [32, 43, 1890, 1892], "drop_last": 32, "timeout": [32, 35, 52, 1867, 1905], "worker_init_fn": [32, 1882, 1890], "prefetch_factor": 32, "persistent_work": 32, "__getitem__": [32, 1835], "__len__": [32, 65, 1853], "protocol": [32, 37, 42, 52, 54, 869, 1106, 1108, 1649, 1731, 1880, 1892, 1893, 1905, 1920], "possibli": [32, 52, 57, 1182, 1197, 1224, 1229, 1414, 1594, 1852, 1859, 1890, 1897], "idx": [32, 65, 887, 1182, 1322, 1357, 1414, 1602, 1853, 1869], "th": [32, 147, 305, 307, 313, 749, 890, 892, 912, 932, 1042, 1047, 1156, 1179, 1203, 1221, 1229, 1235, 1271, 1304, 1353, 1354, 1355, 1359, 1366, 1374, 1384, 1429, 1499, 1500, 1501, 1506, 1700, 1796, 1880, 1892, 1910, 1912], "iterabledataset": [32, 1885], "__iter__": [32, 1856], "suitabl": [32, 41, 926, 1201, 1670, 1735, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1889, 1899, 1901, 1914], "improb": 32, "fetch": [32, 64, 65, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1650, 1905], "databas": 32, "remot": [32, 35, 39, 43, 1594, 1898, 1905, 1906], "replica": [32, 33, 35, 39, 50, 1351, 1594, 1879], "duplic": [32, 307, 311, 462, 533, 911, 920, 941, 1139, 1140, 1182, 1414, 1832, 1833, 1909], "yield": [32, 33, 57, 65, 1043, 1045, 1182, 1228, 1229, 1414, 1845, 1855, 1856, 1862, 1898, 1900, 1910], "stochast": [32, 41, 1362, 1363, 1508, 1509, 1653, 1655, 1656, 1658, 1669, 1673, 1674, 1886, 1896], "decent": 32, "randomli": [32, 734, 735, 745, 753, 898, 1326, 1352, 1353, 1354, 1355, 1359, 1432, 1498, 1499, 1500, 1501, 1506, 1614, 1870, 1885, 1886], "permut": [32, 1055, 1228, 1229, 1248, 1271, 1273, 1714, 1850, 1851, 1853, 1869, 1895, 1902, 1913, 1915], "mini": [32, 768, 774, 1332, 1333, 1334, 1357, 1358, 1369, 1374, 1377, 1378, 1379, 1386, 1406, 1417, 1419, 1453, 1462, 1504, 1505, 1524, 1582, 1898], "neither": [32, 35, 784, 885, 888, 1038, 1098, 1420, 1461, 1641, 1821, 1880, 1889, 1905], "nor": [32, 35, 43, 57, 784, 888, 1217, 1218, 1245, 1420, 1461, 1594, 1641, 1698, 1800, 1880, 1893], "collat": 32, "minibatch": [32, 757, 758, 761, 762, 763, 1271, 1322, 1330, 1331, 1348, 1350, 1374, 1380, 1381, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1466, 1480, 1481, 1482, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1525, 1537, 1538, 1539, 1548, 1556, 1898], "loader": [32, 1896], "essenti": [32, 35, 40, 43, 65, 1271, 1869, 1878, 1892, 1909], "infinit": [32, 1174, 1254, 1330, 1337, 1497, 1693, 1880, 1889, 1905], "dataset_it": 32, "cheaper": [32, 64], "bulk": 32, "arrai": [32, 43, 439, 749, 809, 810, 868, 869, 913, 931, 950, 954, 1055, 1099, 1107, 1108, 1116, 1117, 1253, 1283, 1361, 1366, 1367, 1384, 1385, 1507, 1721, 1728, 1748, 1782, 1783, 1784, 1786, 1787, 1814, 1821, 1829, 1836, 1852, 1856, 1878, 1886, 1909, 1911, 1915, 1916], "untouch": 32, "slightli": [32, 35, 41, 57, 1641, 1689, 1801, 1849, 1878, 1883, 1889, 1897], "default_col": 32, "channel": [32, 60, 463, 464, 465, 768, 774, 797, 811, 814, 822, 834, 842, 1069, 1332, 1333, 1334, 1338, 1342, 1343, 1344, 1345, 1346, 1347, 1352, 1353, 1354, 1355, 1359, 1361, 1369, 1377, 1378, 1379, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1402, 1422, 1448, 1453, 1465, 1466, 1467, 1468, 1483, 1499, 1500, 1501, 1506, 1523, 1524, 1531, 1557, 1582, 1612, 1613, 1614, 1621, 1622, 1638, 1701, 1869, 1871, 1873, 1875, 1900, 1901, 1903, 1914], "class_index": 32, "namedtupl": [32, 65, 885, 1034, 1035, 1127, 1182, 1193, 1203, 1223, 1273, 1279, 1282, 1284, 1287, 1310, 1322, 1414, 1689, 1699, 1773, 1800, 1818, 1823, 1852, 1854, 1855, 1900], "gil": [32, 35, 39, 1875, 1878, 1905], "integ": [32, 35, 41, 52, 281, 436, 438, 440, 534, 549, 555, 674, 675, 676, 677, 678, 679, 755, 756, 774, 776, 854, 881, 910, 911, 920, 931, 949, 959, 961, 977, 983, 984, 1012, 1050, 1053, 1055, 1056, 1098, 1099, 1100, 1101, 1102, 1103, 1108, 1109, 1113, 1114, 1115, 1116, 1117, 1125, 1139, 1140, 1143, 1144, 1145, 1192, 1195, 1204, 1205, 1212, 1223, 1225, 1235, 1254, 1303, 1322, 1337, 1342, 1343, 1344, 1386, 1472, 1473, 1474, 1475, 1476, 1477, 1584, 1627, 1642, 1645, 1677, 1680, 1684, 1689, 1701, 1702, 1708, 1710, 1711, 1712, 1714, 1719, 1728, 1740, 1788, 1797, 1801, 1815, 1816, 1829, 1843, 1847, 1854, 1855, 1856, 1868, 1881, 1883, 1898, 1901, 1903, 1909, 1910, 1912, 1915, 1916, 1921], "descriptor": [32, 1462, 1463, 1856, 1893], "parent": [32, 45, 50, 54, 57, 669, 777, 778, 806, 1414, 1867, 1892, 1897, 1907, 1914], "refcount": [32, 1867, 1888], "panda": 32, "pyarrow": 32, "13246": 32, "get_worker_info": [32, 1905], "seed": [32, 81, 993, 1002, 1003, 1023, 1158, 1274, 1294, 1689, 1706, 1801, 1850, 1853, 1882, 1890, 1904], "shut": [32, 1905], "garbag": [32, 1907], "subtleti": [32, 1351, 1880, 1882], "multiprocess": [32, 35, 36, 38, 43, 45, 53, 54, 1351, 1594, 1850, 1869, 1879, 1906], "unix": [32, 50, 957, 1867], "fork": [32, 50, 1200, 1594, 1855, 1877, 1878, 1882, 1885, 1888, 1892, 1904, 1905, 1907], "child": [32, 43, 45, 57, 780, 1182, 1414, 1613, 1867, 1886, 1892, 1907], "address": [32, 35, 52, 55, 62, 209, 897, 898, 964, 1862, 1867, 1878, 1905, 1906], "maco": [32, 35, 1867, 1887], "spawn": [32, 33, 36, 43, 44, 50, 54, 1185, 1594, 1850, 1874, 1879, 1888, 1892, 1906], "__main__": [32, 33, 35, 44, 45, 53, 1876, 1879, 1888, 1892, 1906], "base_se": 32, "worker_id": [32, 54, 1890], "therebi": [32, 41, 1896, 1900], "mandatorili": 32, "faq": [32, 1351, 1630, 1850], "initial_se": [32, 81, 1850, 1890, 1904], "host": [32, 35, 43, 45, 51, 52, 53, 54, 189, 202, 569, 592, 866, 1182, 1414, 1594, 1606, 1640, 1878, 1898, 1905, 1906, 1911], "recogn": [32, 1855, 1905, 1909], "simplecustombatch": 32, "transposed_data": 32, "zip": [32, 37, 1849, 1853, 1854, 1864, 1878, 1885, 1909], "tgt": [32, 1457, 1458, 1459], "collate_wrapp": 32, "tensordataset": 32, "batch_ndx": 32, "is_pin": [32, 1627, 1853, 1868, 1895, 1911], "multiprocessing_context": 32, "pin_memory_devic": 32, "reshuffl": 32, "draw": [32, 147, 912, 1018, 1304, 1706, 1914], "mutual": [32, 35, 43, 724, 1916], "subprocess": [32, 35, 50, 52, 54, 1882, 1888], "incomplet": [32, 890, 1857, 1910], "divis": [32, 572, 606, 676, 761, 762, 763, 936, 1050, 1100, 1103, 1192, 1225, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1369, 1381, 1405, 1423, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1549, 1719, 1788, 1815, 1855, 1874, 1878], "basecontext": 32, "randomsampl": 32, "prefetch": [32, 57], "unpickl": [32, 35, 1253, 1897], "proper": [32, 43, 64, 65, 1046, 1738, 1854, 1875, 1878, 1880, 1892], "guess": 32, "trust": [32, 35, 1253, 1849, 1897], "inaccur": [32, 33], "kwd": 32, "__getitems__": 32, "myiterabledataset": 32, "worker_info": 32, "iter_start": 32, "iter_end": 32, "per_work": 32, "ceil": [32, 170, 622, 623, 757, 758, 1327, 1328, 1329, 1382, 1383, 1407, 1408, 1409, 1480, 1481, 1482, 1537, 1538, 1539, 1704, 1705, 1728, 1851, 1853, 1868, 1878, 1895, 1909], "mult": 32, "overall_start": 32, "overall_end": 32, "concatdataset": 32, "assembl": 32, "chaindataset": 32, "fly": [32, 998, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1875], "_util": 32, "collate_fn_map": 32, "default_collate_fn_map": 32, "collate_tensor_fn": 32, "custom_col": 32, "collate_map": 32, "outer": [32, 680, 890, 1055, 1113, 1117, 1122, 1128, 1853, 1855, 1895], "unchang": [32, 489, 503, 505, 724, 803, 1094, 1182, 1414, 1457, 1720, 1791, 1874, 1889, 1900], "byte": [32, 35, 41, 52, 234, 426, 547, 869, 963, 1004, 1006, 1008, 1010, 1108, 1181, 1253, 1290, 1291, 1650, 1659, 1731, 1854, 1855, 1856, 1868, 1897, 1909, 1911], "v_i": [32, 1221], "v_1": 32, "v_2": 32, "v1_i": 32, "v2_i": 32, "v1_1": 32, "v1_2": 32, "v2_1": 32, "v2_2": 32, "elem": [32, 1853], "customtyp": 32, "collate_customtype_fn": 32, "custotyp": 32, "default_convert": 32, "NOT": [32, 35, 43, 52, 53, 54, 65, 916, 1264, 1354, 1594, 1595, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1624, 1639, 1648, 1650, 1656, 1657, 1875, 1907, 1909], "np": [32, 930, 1050, 1055, 1095, 1096, 1097, 1553, 1693, 1881, 1890, 1893, 1914, 1915, 1916], "workerinfo": [32, 1905], "random_split": 32, "floor": [32, 263, 636, 637, 757, 758, 1050, 1100, 1192, 1327, 1328, 1329, 1382, 1383, 1407, 1408, 1409, 1480, 1481, 1482, 1537, 1538, 1539, 1704, 1705, 1719, 1728, 1796, 1851, 1853, 1855, 1868, 1891, 1895, 1909], "frac": [32, 41, 271, 369, 638, 639, 676, 749, 761, 762, 763, 854, 911, 920, 950, 954, 1050, 1100, 1135, 1139, 1140, 1201, 1213, 1217, 1218, 1221, 1233, 1245, 1252, 1268, 1322, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1338, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1352, 1361, 1366, 1367, 1368, 1369, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1399, 1401, 1402, 1403, 1404, 1407, 1408, 1409, 1417, 1418, 1419, 1421, 1429, 1431, 1432, 1444, 1446, 1447, 1449, 1450, 1452, 1453, 1454, 1465, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1533, 1549, 1551, 1553, 1563, 1565, 1569, 1571, 1573, 1574, 1654, 1655, 1658, 1660, 1666, 1673, 1674, 1703, 1715, 1718, 1730, 1751, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1779, 1794, 1795, 1796, 1800, 1821, 1837, 1838, 1853, 1868, 1873, 1875, 1883, 1895, 1910], "robin": [32, 35], "generator1": 32, "manual_se": [32, 62, 81, 1850, 1853, 1868, 1886, 1890, 1893, 1895, 1904], "generator2": 32, "data_sourc": 32, "accedingsequencelengthsampl": 32, "argsort": [32, 1811, 1853, 1881, 1895], "tolist": [32, 344, 1855, 1895, 1911], "accedingsequencelengthbatchsampl": 32, "sequentialsampl": 32, "num_sampl": [32, 412, 1304, 1853], "drawn": [32, 166, 250, 278, 1304, 1642, 1706, 1710, 1711, 1873, 1916, 1917], "subsetrandomsampl": 32, "weightedrandomsampl": 32, "row": [32, 33, 40, 41, 201, 305, 307, 313, 574, 577, 682, 688, 866, 890, 892, 930, 950, 954, 1038, 1068, 1096, 1097, 1117, 1123, 1144, 1203, 1229, 1237, 1240, 1245, 1269, 1271, 1279, 1281, 1282, 1284, 1287, 1304, 1310, 1311, 1312, 1504, 1505, 1553, 1601, 1640, 1697, 1700, 1720, 1780, 1781, 1782, 1783, 1784, 1786, 1787, 1799, 1818, 1821, 1825, 1827, 1836, 1842, 1844, 1853, 1883, 1909, 1914], "05": [32, 39, 65, 106, 336, 683, 701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 738, 740, 741, 742, 743, 897, 898, 934, 1069, 1171, 1197, 1198, 1268, 1332, 1333, 1334, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1453, 1457, 1459, 1461, 1483, 1514, 1523, 1527, 1594, 1672, 1678, 1679, 1685, 1757, 1758, 1763, 1852, 1853, 1896, 1906, 1916], "batchsampl": 32, "distributedsampl": [32, 1594], "num_replica": 32, "world_siz": [32, 33, 35, 36, 39, 43, 52, 53, 55, 57, 1594, 1879, 1898, 1905, 1906], "evenli": [32, 572, 573, 574, 684, 685, 1053, 1145, 1252, 1268, 1843], "set_epoch": 32, "is_distribut": [32, 1853, 1895], "start_epoch": 32, "n_epoch": 32, "vanilla": [33, 1862], "allreduc": [33, 35, 1594, 1878, 1879, 1895], "register_comm_hook": [33, 39, 57, 1594], "mainli": [33, 41, 816, 1337, 1497, 1918], "gradbucket": [33, 1594], "flatten": [33, 57, 65, 863, 864, 1044, 1144, 1238, 1251, 1465, 1641, 1648, 1652, 1700, 1716, 1721, 1726, 1831, 1832, 1833, 1853, 1868, 1869, 1873, 1893, 1895, 1902, 1913], "decompos": [33, 65, 1105, 1112, 1226, 1851, 1875, 1893], "get_per_parameter_tensor": 33, "_distributed_c10d": [33, 35], "1d": [33, 40, 41, 57, 691, 694, 727, 730, 761, 771, 941, 950, 954, 1038, 1052, 1143, 1144, 1159, 1179, 1237, 1238, 1283, 1311, 1319, 1323, 1327, 1337, 1342, 1345, 1350, 1353, 1354, 1358, 1382, 1406, 1407, 1419, 1421, 1466, 1472, 1475, 1478, 1480, 1488, 1491, 1499, 1505, 1534, 1537, 1700, 1701, 1704, 1796, 1821, 1839], "is_last": 33, "set_buff": 33, "stateless": [33, 62, 1871, 1886], "ddp_comm_hook": [33, 39], "default_hook": 33, "allreduce_hook": 33, "process_group": [33, 36, 37, 39, 57, 1453, 1594], "henc": [33, 39, 43, 51, 52, 55, 57, 64, 912, 1108, 1410, 1411, 1412, 1466, 1785, 1870, 1875, 1878, 1879, 1905, 1907], "unaffect": [33, 489, 490, 1368], "ddp_model": [33, 35, 1594, 1879], "fp16_compress_hook": 33, "decompress": [33, 1849, 1864], "bf16_compress_hook": 33, "nccl": [33, 36, 37, 53, 57, 1594, 1884], "brain": [33, 1912, 1915], "wrapper": [33, 35, 40, 41, 57, 64, 65, 613, 746, 779, 813, 956, 958, 959, 961, 1028, 1030, 1101, 1102, 1121, 1182, 1351, 1852, 1854, 1855, 1865, 1867, 1878, 1879, 1893, 1898], "fp16_compress_wrapp": 33, "powersgdst": 33, "matrix_approximation_rank": 33, "start_powersgd_it": 33, "powersgd_hook": 33, "bf16_compress_wrapp": 33, "wikipedia": [33, 1550, 1875, 1883, 1921], "wiki": [33, 1921], "bfloat16_float": 33, "point_format": 33, "vogel": 33, "et": [33, 41, 57, 1337, 1426, 1427, 1462, 1463, 1669, 1764, 1801, 1873], "al": [33, 41, 57, 1337, 1426, 1427, 1462, 1463, 1669, 1764, 1801, 1873], "neurip": [33, 41], "2019": [33, 41, 1012], "hyperparamet": [33, 57, 65, 1914], "1000": [33, 1070, 1075, 1101, 1102, 1322, 1357, 1463, 1701, 1728, 1748, 1814, 1875, 1891, 1893, 1914], "min_compression_r": 33, "use_error_feedback": 33, "warm_start": 33, "orthogonalization_epsilon": 33, "random_se": 33, "compression_stats_logging_frequ": 33, "batch_tensors_with_same_shap": 33, "stronger": 33, "threshold": [33, 65, 1236, 1239, 1375, 1445, 1450, 1571, 1577, 1683, 1748, 1853, 1874, 1878, 1895, 1914], "exponenti": [33, 250, 1065, 1233, 1259, 1260, 1261, 1269, 1336, 1356, 1502, 1850, 1855, 1895, 1896, 1910, 1917], "grid": [33, 1075, 1283, 1478, 1513, 1851, 1853, 1878, 1914], "satisfactori": 33, "appendix": [33, 1850], "defer": [33, 57, 1878, 1898], "hybrid": [33, 57, 211, 532, 572, 573, 574, 576, 577, 1146], "scheme": [33, 52, 469, 791, 808, 809, 810, 811, 814, 816, 1886], "sensit": [33, 1375, 1445, 1893, 1897, 1906], "trajectori": 33, "irrecover": 33, "num_row": 33, "num_col": 33, "1e": [33, 65, 106, 336, 683, 701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 738, 740, 741, 742, 743, 744, 897, 898, 933, 934, 1171, 1197, 1198, 1248, 1332, 1333, 1334, 1349, 1368, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1400, 1423, 1428, 1453, 1457, 1459, 1461, 1462, 1483, 1495, 1510, 1514, 1515, 1523, 1527, 1549, 1552, 1556, 1579, 1602, 1635, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1670, 1683, 1691, 1744, 1852, 1853, 1880, 1886, 1893, 1896, 1910, 1916], "orthogon": [33, 1218, 1221, 1240, 1245, 1254, 1687, 1699, 1873, 1875, 1886, 1909], "epsilon": [33, 65, 808, 809, 810, 811, 814, 854, 1236, 1239, 1332, 1333, 1334, 1349, 1369, 1377, 1378, 1379, 1386, 1423, 1453, 1495, 1549, 1602, 1635, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1703, 1853, 1910], "bucket_cap_mb": [33, 1594, 1879], "memor": 33, "compens": 33, "apex": 33, "uncompress": [33, 1909], "p": [33, 37, 41, 57, 65, 147, 226, 278, 416, 417, 444, 481, 482, 597, 675, 678, 910, 912, 922, 930, 1049, 1202, 1213, 1219, 1220, 1228, 1229, 1271, 1273, 1276, 1286, 1307, 1326, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1380, 1382, 1383, 1419, 1423, 1425, 1462, 1463, 1479, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1534, 1535, 1545, 1549, 1552, 1553, 1579, 1598, 1604, 1606, 1612, 1621, 1641, 1669, 1720, 1777, 1851, 1853, 1854, 1874, 1875, 1878, 1882, 1883, 1888, 1899, 1909, 1910], "pq": 33, "mq": [33, 1900, 1919], "tp": [33, 40], "awai": [33, 65, 1513, 1850, 1869, 1875, 1881], "comm": [33, 35, 1879], "handler": [33, 35, 45, 46, 1613, 1865, 1885, 1897, 1920], "batched_powersgd_hook": 33, "destroi": [33, 52, 1351, 1875, 1905], "squar": [33, 41, 540, 728, 729, 730, 731, 768, 774, 783, 954, 1042, 1044, 1179, 1213, 1215, 1217, 1218, 1219, 1222, 1223, 1227, 1229, 1231, 1233, 1235, 1239, 1241, 1242, 1244, 1245, 1249, 1262, 1271, 1320, 1324, 1328, 1329, 1343, 1344, 1346, 1347, 1362, 1363, 1375, 1383, 1405, 1408, 1409, 1412, 1445, 1457, 1480, 1489, 1492, 1508, 1509, 1513, 1522, 1524, 1544, 1567, 1582, 1601, 1654, 1656, 1657, 1658, 1660, 1666, 1667, 1670, 1730, 1789, 1823, 1836, 1853, 1895, 1909], "truncat": [33, 1100, 1829, 1870, 1873, 1882, 1889], "impli": [33, 52, 1867, 1875, 1893, 1898, 1903, 1905], "debugging_hook": 33, "noop_hook": 33, "noop": [33, 1594], "headroom": 33, "desynchron": [33, 35], "trainer": [33, 43, 45, 50, 53, 54, 1594, 1905], "__setstate__": 33, "__getstate__": 33, "reload": [33, 39, 1849], "sy": [33, 44, 53, 55, 1849, 1878, 1897], "tempfil": 33, "simplemodel": 33, "fc2": [33, 1585, 1898], "master_addr": [33, 35, 43, 53, 55, 1879, 1898, 1905, 1906], "localhost": [33, 35, 52, 53, 1879, 1898, 1905, 1906], "master_port": [33, 35, 43, 53, 55, 1879, 1898, 1905, 1906], "12355": 33, "init_process_group": [33, 35, 36, 39, 43, 53, 55, 1594, 1878, 1879, 1905], "cleanup": 33, "destroy_process_group": 33, "run_demo": 33, "demo_fn": 33, "mp": [33, 35, 36, 54, 1594, 1850, 1879, 1888, 1900, 1906, 1911, 1912, 1919], "nproc": [33, 35, 50, 51, 53, 1867, 1879, 1906], "demo_seri": 33, "gettempdir": 33, "device_id": [33, 35, 36, 39, 53, 57, 1253, 1351, 1453, 1578, 1594, 1879], "powersgd_st": 33, "lr": [33, 36, 39, 57, 1585, 1594, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1878, 1879, 1886, 1896, 1906, 1914], "001": [33, 897, 898, 1191, 1652, 1656, 1657, 1666, 1670, 1682, 1879, 1893], "comm_hook": 33, "comm_hook_st": 33, "hook_stat": 33, "barrier": [33, 43, 52, 1895], "map_loc": [33, 1186, 1189, 1253, 1594, 1849, 1864, 1897], "n_gpu": 33, "device_count": [33, 35, 1850], "got": [33, 35, 880, 1880, 1916], "thank": [33, 41, 1880, 1898], "thij": 33, "par": 33, "home": [34, 1878], "brief": [35, 1594, 1867, 1905], "introduct": [35, 41, 990, 1594, 1850, 1852, 1856, 1868, 1876, 1886, 1893, 1905, 1909, 1914], "mpi": [35, 1594], "gloo": [35, 53, 1594, 1879, 1884, 1905], "recv": [35, 1594, 1895, 1906], "all_reduc": [35, 54, 1594], "all_gath": 35, "scatter": [35, 39, 57, 503, 505, 507, 1351, 1835, 1853, 1882, 1895, 1905], "reduce_scatt": [35, 1895], "all_to_al": 35, "v1": [35, 57, 1250, 1688, 1849, 1879, 1905], "init_method": [35, 1594, 1905], "adher": [35, 1855], "some_fil": 35, "machine_nam": 35, "share_folder_nam": 35, "tcpstore": [35, 52], "infiniband": [35, 1594, 1905], "interconnect": 35, "gpudirect": 35, "ethernet": 35, "ip": [35, 52], "ib": 35, "nccl_socket_ifnam": 35, "eth0": 35, "gloo_socket_ifnam": 35, "comma": [35, 1055, 1855, 1861], "eth1": 35, "eth2": 35, "eth3": 35, "imper": 35, "nccl_debug": 35, "nccl_debug_subsi": 35, "coll": 35, "hang": [35, 36, 39, 1594, 1879], "topologi": [35, 37, 40, 43], "effort": [35, 1905], "socket": [35, 1867, 1905], "nccl_socket_nthread": 35, "nccl_nsocks_perthread": 35, "cloud": [35, 1909, 1914], "aw": [35, 44, 954], "primit": [35, 39, 52, 1253, 1851, 1852, 1854, 1856, 1877, 1887, 1893, 1905], "connect": [35, 43, 52, 1342, 1343, 1344, 1345, 1346, 1347, 1390, 1391, 1392, 1393, 1394, 1395, 1442, 1867, 1905], "advantag": [35, 52, 53, 1331, 1375, 1879, 1882, 1905, 1909], "redund": [35, 57, 1071, 1072, 1074, 1076, 1090, 1092, 1796], "averag": [35, 39, 724, 755, 756, 757, 758, 810, 811, 906, 908, 954, 1018, 1032, 1182, 1319, 1320, 1321, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1348, 1350, 1358, 1368, 1374, 1380, 1381, 1382, 1383, 1387, 1388, 1389, 1405, 1406, 1414, 1417, 1418, 1419, 1420, 1421, 1428, 1445, 1446, 1453, 1462, 1472, 1473, 1474, 1480, 1481, 1482, 1485, 1486, 1496, 1510, 1525, 1534, 1535, 1548, 1556, 1594, 1653, 1654, 1656, 1657, 1658, 1660, 1666, 1667, 1670, 1821, 1850, 1879, 1899], "thrash": 35, "recurr": [35, 749, 750, 1197, 1337, 1351, 1366, 1367, 1384, 1429, 1604, 1630, 1667, 1850, 1878], "use_distribut": 35, "datetim": [35, 1865], "timedelta": [35, 52, 1865], "1800": 35, "group_nam": [35, 49], "pg_option": 35, "url": [35, 52, 905, 1849, 1864, 1905], "discov": [35, 1905], "encod": [35, 43, 49, 52, 65, 1229, 1253, 1295, 1296, 1330, 1331, 1457, 1458, 1459, 1460, 1461, 1594, 1782, 1783, 1784, 1786, 1787, 1852, 1855, 1856, 1880, 1891, 1897, 1906, 1909], "ucc": 35, "lowercas": 35, "deadlock": [35, 1594], "job": [35, 43, 45, 46, 48, 49, 51, 52, 53, 54, 1594, 1675, 1681, 1885, 1899, 1914], "exchang": [35, 52, 959, 1043, 1878, 1893], "nccl_blocking_wait": 35, "nccl_async_error_handl": [35, 1878], "abort": [35, 1878], "crash": [35, 45, 52, 1867, 1875, 1905, 1907, 1914], "caught": [35, 1594, 1867], "watch": 35, "dog": 35, "deprec": [35, 43, 52, 53, 57, 61, 398, 503, 546, 592, 774, 775, 776, 782, 815, 896, 897, 932, 933, 1005, 1009, 1128, 1182, 1236, 1239, 1271, 1272, 1330, 1331, 1348, 1350, 1373, 1374, 1380, 1381, 1405, 1406, 1414, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1467, 1468, 1485, 1486, 1496, 1525, 1548, 1556, 1582, 1583, 1584, 1586, 1594, 1635, 1636, 1641, 1699, 1715, 1796, 1800, 1823, 1850, 1852, 1857, 1867, 1876, 1899, 1903, 1911, 1915, 1916], "processgroupopt": 35, "processgroupnccl": [35, 1879], "is_high_priority_stream": 35, "backend_nam": 35, "custom_backend": 35, "is_initi": [35, 1850], "is_mpi_avail": 35, "is_nccl_avail": 35, "is_gloo_avail": 35, "is_torchelastic_launch": 35, "elast": [35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 1850], "aka": [35, 906, 1375, 1875, 1912], "torchelast": [35, 38, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55], "torchelastic_run_id": [35, 53], "rendezv": [35, 38, 43, 49, 51, 55, 1879, 1905], "null": [35, 44, 46, 49], "discoveri": [35, 52, 1878, 1897], "reachabl": 35, "multicast": 35, "23456": 35, "clean": [35, 43, 65, 994, 1849, 1867, 1897], "fcntl": 35, "nf": 35, "init": [35, 43, 45, 57, 1182, 1414, 1422, 1441, 1634, 1850, 1857, 1875, 1880, 1885, 1886], "brand": 35, "unsuccess": 35, "mnt": 35, "sharedfil": 35, "port": [35, 43, 51, 52, 53, 1884], "backend_str": 35, "uppercas": 35, "classmethod": [35, 52, 721, 727, 728, 729, 734, 735, 745, 753, 781, 782, 783, 804, 805, 806, 813, 843, 958, 1357, 1358, 1453, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1650, 1855, 1856, 1880, 1900, 1905, 1911, 1920], "extended_api": 35, "instanti": [35, 39, 51, 52, 53, 65, 830, 1059, 1157, 1358, 1505, 1603, 1627, 1634, 1639, 1849, 1852, 1854, 1855, 1878, 1880, 1886, 1911], "3rd": [35, 41, 52, 606, 1683, 1876], "processgroup": [35, 37, 39, 57, 1594], "four": [35, 1227, 1343, 1880, 1883, 1905, 1907], "c10d": [35, 43, 51, 53, 55, 1594, 1879, 1895], "distributedbackendopt": 35, "get_backend": [35, 52], "get_rank": [35, 1453], "uniqu": [35, 43, 49, 52, 53, 54, 503, 507, 1173, 1217, 1218, 1222, 1228, 1229, 1231, 1240, 1242, 1244, 1245, 1282, 1289, 1777, 1800, 1833, 1849, 1852, 1864, 1880, 1897, 1899, 1905, 1906, 1907, 1909, 1914], "get_world_s": 35, "filestor": [35, 52], "hashstor": 35, "host_nam": 35, "hostnam": [35, 43, 52, 1899], "listen": 35, "is_mast": 35, "300": [35, 43, 1259, 1331, 1631, 1633, 1896], "wait_for_work": 35, "server_stor": 35, "127": [35, 783, 1869, 1900, 1914], "1234": [35, 52, 1159], "client_stor": 35, "first_kei": 35, "first_valu": 35, "hashmap": 35, "file_nam": [35, 1849, 1864, 1897], "store1": 35, "store2": 35, "prefixstor": 35, "quantiti": [35, 58, 63, 1217, 1218, 1245, 1380, 1611, 1612, 1614, 1615, 1617, 1620, 1621, 1622, 1623, 1683, 1881, 1883], "compare_set": 35, "arg2": 35, "expected_valu": 35, "desired_valu": 35, "second_valu": 35, "overload": [35, 65, 606, 1854, 1855, 1859], "bad_kei": 35, "num_kei": 35, "destruct": [35, 1865, 1905, 1907], "delete_kei": 35, "set_timeout": 35, "grain": [35, 847, 850, 1563, 1875, 1893], "plai": 35, "new_group": [35, 57, 1453], "use_local_synchron": 35, "enqueu": [35, 64, 959, 961, 962, 1878, 1906], "get_group_rank": 35, "global_rank": [35, 43], "get_global_rank": 35, "group_rank": [35, 43, 53], "get_process_group_rank": 35, "dst": [35, 1849, 1897], "destin": [35, 37, 46, 49, 57, 202, 407, 408, 592, 970, 971, 1124, 1182, 1288, 1289, 1414, 1648, 1649, 1853, 1905, 1906, 1911], "unspecifi": [35, 472, 809, 810, 811, 814, 897, 898, 1447, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1779, 1862, 1909, 1914], "sender": [35, 1907], "isend": 35, "irecv": 35, "is_complet": 35, "finish": [35, 37, 43, 49, 50, 52, 54, 64, 1112, 1878, 1879, 1892, 1899, 1905, 1907], "batch_isend_irecv": 35, "p2p_op_list": 35, "p2pop": 35, "op_list": 35, "send_tensor": 35, "recv_tensor": 35, "send_op": 35, "recv_op": 35, "req": 35, "pg": [35, 1594], "set_devic": [35, 37, 57, 1594, 1739, 1850, 1905, 1912], "p2p": [35, 52], "async_op": 35, "get_futur": [35, 1594], "regard": [35, 1345, 1346, 1347, 1357, 1358, 1504, 1505, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1852, 1907, 1909], "add_": [35, 60, 62, 214, 1112, 1853, 1868, 1876, 1909], "101": [35, 1322], "overwrot": 35, "sent": [35, 37, 994, 1855, 1867, 1888, 1905, 1906, 1907], "broadcast_object_list": 35, "object_list": 35, "picklabl": [35, 1182, 1414, 1897], "current_devic": [35, 37, 967, 975, 976, 983, 984, 1000, 1004, 1006, 1007, 1008, 1010, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1031, 1032, 1033, 1850, 1912], "insecur": [35, 1253], "malici": [35, 1253, 1897], "ineffici": [35, 1878, 1900], "redoptyp": 35, "bitwis": [35, 914, 916, 917, 919, 1856, 1889, 1901, 1917], "reduceop": 35, "int64": [35, 184, 201, 305, 313, 385, 854, 913, 926, 1056, 1069, 1070, 1107, 1496, 1627, 1710, 1714, 1715, 1735, 1782, 1783, 1784, 1786, 1787, 1878, 1909, 1911, 1912, 1915, 1921], "1j": [35, 687, 947, 948, 1178, 1723, 1724, 1839, 1875, 1883, 1891], "2j": [35, 687, 947, 948, 1723, 1724, 1751, 1839, 1875], "tensor_list": [35, 1870], "all_gather_into_tensor": 35, "output_tensor": 35, "accommod": [35, 1410, 1411, 1412], "ii": [35, 950, 1055, 1384, 1385], "tensor_in": 35, "tensor_out": 35, "tensor_out2": 35, "all_gather_object": 35, "obj": [35, 65, 869, 979, 1168, 1169, 1188, 1193, 1731, 1853, 1892, 1897], "pickabl": 35, "responsibl": 35, "gather_object": 35, "gather_list": 35, "object_gather_list": 35, "scatter_list": 35, "tensor_s": 35, "t_one": 35, "t_five": 35, "scatter_object_list": 35, "scatter_object_output_list": 35, "scatter_object_input_list": 35, "output_list": 35, "input_list": 35, "reduce_scatter_tensor": 35, "all_to_all_singl": 35, "output_split_s": 35, "input_split_s": 35, "15": [35, 65, 606, 1053, 1125, 1135, 1145, 1204, 1218, 1338, 1411, 1412, 1631, 1633, 1691, 1764, 1773, 1819, 1843, 1852, 1853, 1856, 1893, 1909], "uneven": [35, 36, 39, 1594], "21": [35, 41, 674, 932, 1038, 1240, 1699, 1821, 1852, 1909], "31": [35, 918, 1329, 1409, 1585, 1759, 1893], "33": [35, 727, 728, 729, 730, 731, 732, 761, 1182, 1342, 1343, 1344, 1346, 1347, 1412, 1414, 1488, 1490, 1491, 1493, 1852, 1893], "35": [35, 1240, 1333, 1334, 1378, 1379, 1453, 1699], "input_split": 35, "output_split": 35, "5j": 35, "6j": 35, "7j": 35, "8j": 35, "9j": 35, "10j": 35, "11j": 35, "12j": 35, "13j": 35, "14j": 35, "15j": 35, "16j": 35, "output_tensor_list": 35, "input_tensor_list": 35, "monitored_barri": [35, 1895], "wait_all_rank": 35, "band": 35, "bor": 35, "bxor": 35, "premul_sum": 35, "suppos": [35, 65, 1179, 1684, 1862, 1909], "_make_nccl_premul_sum": 35, "all_reduce_multigpu": 35, "__members__": 35, "reduce_op": 35, "revisit": 35, "broadcast_multigpu": 35, "reduce_multigpu": 35, "all_gather_multigpu": 35, "reduce_scatter_multigpu": 35, "distributed_test": 35, "dev_idx": 35, "src_tensor": 35, "resid": [35, 57, 64, 189, 281, 329, 1253, 1594, 1878, 1898, 1905], "dst_tensor": 35, "cpp_extens": [35, 1850, 1880], "cpp_c10d_extens": 35, "torchrun": [35, 38, 44, 51, 55], "benefici": [35, 1886], "nproc_per_nod": [35, 44], "num_gpus_you_hav": 35, "your_training_script": [35, 51, 53], "arg3": 35, "192": [35, 606, 1893], "168": 35, "nnode": [35, 51, 53], "local_process_rank": 35, "local_rank": [35, 43, 45, 50, 53, 55, 1453], "argpars": [35, 53, 1878], "parser": [35, 53, 1878], "argumentpars": [35, 53, 1878], "add_argu": [35, 53, 1878], "parse_arg": [35, 44, 53, 55, 1878, 1893], "output_devic": [35, 39, 53, 1351, 1453, 1578, 1594], "adjust": [35, 37, 39, 41, 57, 1850, 1877, 1901], "launcher": [35, 53], "filesystem": [35, 37, 957, 1849, 1897], "12042": 35, "imagenet": [35, 1873], "inconsist": [35, 57, 854, 1715, 1880], "group_gloo": 35, "29501": 35, "monitoredbarri": 35, "transport": [35, 1905], "598": 35, "2401": 35, "db00": 35, "eef0": 35, "1100": 35, "3560": 35, "1c05": 35, "25d": 35, "8594": 35, "torch_cpp_log_level": 35, "twolinlayernet": 35, "i0607": 35, "739390": 35, "515217": 35, "logger": [35, 1647, 1918, 1919], "173": 35, "broadcast_buff": [35, 1594], "bucket_cap_byt": 35, "26214400": 35, "find_unused_paramet": [35, 1594, 1879], "gradient_as_bucket_view": [35, 1594], "is_multi_device_modul": 35, "num_parameter_tensor": 35, "total_parameter_size_byt": 35, "440": 35, "bucket_s": 35, "cuda_visible_devic": [35, 1024, 1594, 1878], "module_nam": [35, 65, 806, 843, 1897], "nccl_ib_timeout": 35, "nccl_nthread": 35, "58": 35, "085681": 35, "544067": 35, "344": 35, "unused_parameter_s": 35, "40838608": 35, "5983335": 35, "4326421": 35, "comp": [35, 41], "4207652": 35, "085693": 35, "544066": 35, "42850427": 35, "3885553": 35, "2357981": 35, "2234674": 35, "enhanc": [35, 57, 1594], "unus": [35, 39, 65, 896, 994, 1008, 1187, 1193, 1376, 1594, 1652, 1852, 1854, 1855, 1878, 1879, 1884, 1897], "wasn": [35, 1253, 1852], "va": 35, "lue": 35, "indirectli": 35, "outstand": [35, 1905], "stuck": [35, 43, 54], "uninform": 35, "nontrivi": [35, 1878], "reveal": [35, 1879], "default_pg": 35, "opt": [35, 39, 1193, 1671, 1672, 1678, 1682, 1684, 1852, 1883], "longtensor": [35, 127, 128, 129, 307, 309, 311, 443, 462, 503, 505, 507, 863, 864, 1124, 1156, 1203, 1304, 1357, 1358, 1417, 1504, 1505, 1550, 1640, 1735, 1773, 1785, 1810, 1818, 1845, 1912, 1915], "set_debug_level": 35, "set_debug_level_from_env": 35, "get_debug_level": 35, "torch_show_cpp_stacktrac": 35, "distbackenderror": 35, "facilit": [36, 41, 62, 959, 1043, 1740, 1849, 1852, 1855, 1890], "joinabl": [36, 39, 1594, 1850], "joinhook": [36, 1850], "throw_on_early_termin": [36, 1594], "shadow": [36, 39, 1594, 1918, 1919], "notify_join_context": 36, "zeroredundancyoptim": [36, 39, 1594, 1850], "01": [36, 39, 54, 744, 769, 810, 811, 1056, 1098, 1400, 1528, 1529, 1585, 1651, 1653, 1655, 1657, 1667, 1668, 1675, 1681, 1701, 1755, 1757, 1758, 1763, 1764, 1851, 1853, 1873, 1885, 1893, 1896], "vacuou": 36, "inherit": [36, 1619, 1852, 1854, 1870, 1880, 1886, 1888], "join_hook": [36, 39, 1594], "join_devic": 36, "join_process_group": 36, "repeatedli": [36, 1878, 1909], "main_hook": 36, "post_hook": 36, "is_last_join": 36, "dcp": 37, "reshard": [37, 40, 57], "storag": [37, 57, 214, 303, 331, 334, 335, 426, 449, 474, 489, 510, 513, 547, 548, 573, 574, 576, 577, 867, 884, 886, 979, 1046, 1152, 1156, 1168, 1182, 1189, 1253, 1275, 1313, 1314, 1351, 1414, 1717, 1731, 1738, 1769, 1774, 1777, 1791, 1814, 1820, 1849, 1850, 1853, 1864, 1867, 1875, 1878, 1888, 1891, 1897, 1905, 1909, 1912, 1913, 1915], "storage_read": 37, "coordinator_rank": 37, "no_dist": 37, "planner": 37, "spmd": 37, "style": [37, 40, 42, 65, 866, 1050, 1106, 1640, 1852, 1854, 1855, 1893, 1897, 1914], "fullfil": 37, "shardedtensor": [37, 57], "po": [37, 1893], "storageread": [37, 1850], "rank0": [37, 57], "mymodul": [37, 57, 65, 1186, 1187, 1188, 1192, 1193, 1199, 1415, 1416, 1424, 1425, 1852, 1854, 1855, 1882, 1891, 1905], "adagrad": [37, 1357, 1862, 1896, 1905], "model_state_dict": 37, "fs_storage_load": 37, "filesystemload": 37, "save_state_dict": [37, 1850], "storage_writ": 37, "storagewrit": [37, 1850], "fs_storage_writ": 37, "filesystemwrit": [37, 1850], "told": [37, 1854], "read_metadata": 37, "set_up_storage_read": 37, "prepare_local_plan": 37, "prepare_global_plan": 37, "read_data": 37, "central": [37, 1135, 1883, 1885], "loadplan": [37, 1850], "storage_data": 37, "loadplann": [37, 1850], "load_byt": 37, "bytesio": [37, 1189, 1192, 1253, 1731, 1893, 1900], "resolve_tensor": 37, "storagelay": 37, "is_coordin": 37, "set_up_storage_writ": 37, "write_data": 37, "recover": 37, "writeresult": 37, "saveplan": [37, 1850], "saveplann": [37, 1850], "resolve_data": 37, "writeitem": [37, 1850], "tensor_data": 37, "set_up_plann": 37, "create_local_plan": 37, "create_global_plan": 37, "commit_tensor": 37, "defaultloadplann": [37, 1850], "requit": 37, "intrincaci": 37, "renameplann": 37, "original_state_dict": 37, "foo_": [37, 1112], "v": [37, 49, 61, 65, 478, 533, 884, 891, 893, 894, 895, 926, 1111, 1121, 1123, 1179, 1195, 1217, 1221, 1245, 1249, 1254, 1420, 1462, 1463, 1504, 1549, 1563, 1633, 1638, 1667, 1669, 1689, 1722, 1781, 1785, 1800, 1801, 1842, 1850, 1852, 1853, 1854, 1855, 1865, 1875, 1883, 1892, 1897, 1909, 1914], "read_item": 37, "dest_index": 37, "fqn": [37, 40, 1919], "metamodelmateri": 37, "defaultsaveplann": [37, 1850], "empty_lik": [37, 1853, 1857, 1868, 1870, 1895, 1909], "global_plan": 37, "finish_plan": 37, "central_plan": 37, "alia": [37, 41, 46, 84, 85, 104, 180, 181, 345, 398, 427, 428, 435, 530, 671, 855, 856, 857, 858, 859, 860, 861, 878, 938, 945, 946, 1041, 1048, 1051, 1062, 1063, 1064, 1066, 1067, 1093, 1128, 1136, 1137, 1149, 1150, 1151, 1160, 1180, 1182, 1208, 1209, 1216, 1232, 1236, 1239, 1267, 1277, 1278, 1288, 1305, 1307, 1317, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1414, 1524, 1597, 1627, 1643, 1686, 1691, 1694, 1729, 1752, 1767, 1770, 1772, 1798, 1802, 1803, 1822, 1828, 1846, 1851, 1855, 1880, 1895, 1910, 1911, 1915], "readitem": [37, 1850], "planner_data": 37, "loaditemtyp": 37, "metadataindex": 37, "dest_offset": 37, "storage_index": 37, "storage_offset": [37, 131, 510, 606, 867, 1851, 1853, 1895], "tandem": 37, "fp16planner": 37, "write_item": 37, "writeitemtyp": 37, "byte_io": 37, "itertool": [37, 41, 928, 941], "islic": 37, "ddploadbalancingplann": 37, "all_plan": 37, "saveextradataplann": 37, "merged_data": 37, "new_plan": 37, "idempot": [37, 1905, 1907], "hi": [37, 1384, 1385, 1852, 1854, 1883], "late": [37, 52], "tensorwritedata": 37, "nonetyp": [37, 1853, 1855], "filesystemread": [37, 1850], "single_file_per_rank": 37, "sync_fil": 37, "thread_count": 37, "per_thread_copy_ahead": 37, "10000000": 37, "simplif": 37, "atom": [37, 52, 65, 1856], "distributedtensor": [37, 40], "flatten_state_dict": 37, "flatten_sharded_tensor": 37, "dedup_replicated_tensor": 37, "lookup_object": 37, "transform_object": 37, "lookup_tensor": 37, "transform_tensor": 37, "fault": [38, 43, 51, 52, 1108], "toler": [38, 43, 51, 52, 65, 683, 897, 898, 1171, 1197, 1198, 1236, 1239, 1254, 1652, 1659, 1852, 1916], "quickstart": 38, "agent": [38, 44, 45, 46, 49, 51, 53, 54, 1905], "expir": 38, "kubernet": 38, "distributedoptim": [39, 1594, 1850, 1905, 1906], "rref": [39, 1594, 1850, 1855, 1898, 1906], "optimizer_class": 39, "params_rref": 39, "get_gradi": [39, 1895, 1905, 1906], "multithread": [39, 909, 1878], "dist_autograd": [39, 1594, 1905, 1906], "rpc": [39, 64, 1594, 1850, 1855, 1898, 1906, 1907], "context_id": [39, 1594, 1905, 1906], "rref1": [39, 1905, 1906], "worker1": [39, 64, 1594, 1905, 1906], "rref2": [39, 1905, 1906], "to_her": [39, 1594, 1895, 1905, 1906, 1907], "dist_optim": [39, 1594, 1906], "postlocalsgdoptim": [39, 1850], "afer": 39, "modelaverag": 39, "localsgd": 39, "model_averag": 39, "post_localsgd_hook": 39, "postlocalsgdst": 39, "subgroup": 39, "start_localsgd_it": 39, "warmup_step": 39, "local_optim": 39, "periodicmodelaverag": 39, "intra": [39, 1877, 1879, 1898], "unnecessari": [39, 1634, 1855, 1875, 1878, 1880, 1891, 1897, 1913], "parameters_as_bucket_view": 39, "overlap_with_ddp": 39, "consumpt": [39, 61, 1639, 1909, 1914], "intact": [39, 1905], "ddp_zero_hook": 39, "disjointli": 39, "trail": [39, 1629, 1631, 1870, 1873, 1876, 1880], "wari": 39, "static_graph": [39, 1594, 1879], "third": [39, 41, 1054, 1055, 1271, 1322, 1329, 1344, 1347, 1409, 1681, 1850, 1852, 1878, 1881, 1886, 1897, 1899], "add_param_group": [39, 1606, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670], "param_group": [39, 57, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1663, 1666, 1667, 1668, 1669, 1670, 1677, 1680], "frozen": [39, 1186, 1191, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1856, 1892], "trainabl": [39, 1001, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1880], "consolidate_state_dict": 39, "consolid": [39, 57, 1898], "pertain": 39, "dtensor": 40, "rowwis": 40, "colwis": 40, "pairwis": [40, 41, 1374, 1423, 1462], "parallelize_modul": [40, 1850], "device_mesh": 40, "parallelize_plan": 40, "tp_mesh_dim": 40, "sub_modul": 40, "parallelstyl": 40, "devicemesh": 40, "mesh": [40, 1914], "prepar": [40, 65, 786, 828, 830, 846, 848, 850, 851, 852, 1121, 1191, 1856, 1893, 1918, 1919], "pairwiseparallel": [40, 1850], "finer": 40, "granular": [40, 57, 1195, 1874], "rowwiseparallel": [40, 1850], "_prepare_input": 40, "make_input_shard_1d_last_dim": [40, 1850], "_prepare_output": 40, "make_output_tensor": [40, 1850], "colwiseparallel": [40, 1850], "make_input_replicate_1d": [40, 1850], "make_sharded_output_tensor": 40, "megatron": 40, "lm": 40, "arxiv": [40, 41, 1384, 1432, 1433, 1460, 1638, 1689, 1801, 1875], "1909": [40, 867], "08053": 40, "multihead": [40, 1420, 1459], "mlp": [40, 1585, 1900], "sequenceparallel": [40, 1850], "pdf": [40, 1337, 1432, 1764, 1875], "2205": 40, "05198": 40, "expectedli": 40, "make_input_reshard_repl": [40, 1850], "make_input_shard_1d": [40, 1850], "make_output_replicate_1d": [40, 1850], "make_output_reshard_tensor": [40, 1850], "make_output_shard_1d": [40, 1850], "multiheadattent": [40, 1457, 1459, 1461, 1900], "multihead_attent": 40, "swap": [40, 65, 606, 777, 778, 779, 782, 786, 853, 1271, 1462, 1463, 1579, 1580, 1820, 1853, 1856, 1878, 1900, 1909, 1911, 1918], "multihead_attention_tp": 40, "tensorparallelmultiheadattent": [40, 1850], "embed_dim": [40, 724, 1420], "num_head": [40, 724, 1420, 1853], "add_bias_kv": [40, 724, 1420], "add_zero_attn": [40, 724, 1420, 1853], "kdim": [40, 724, 1420], "vdim": [40, 724, 1420], "batch_first": [40, 723, 724, 749, 1366, 1384, 1420, 1429, 1430, 1457, 1459, 1461, 1628, 1630, 1631, 1633, 1853, 1882], "tp_size": 40, "self_attent": 40, "head": [40, 724, 1322, 1420, 1457, 1459, 1461], "fullyshardeddataparallel": [40, 1850], "enable_2d_with_fsdp": [40, 1850], "parameteriz": 41, "tensorflow": [41, 1667, 1875, 1914], "backpropag": [41, 898, 1668, 1699, 1882], "surrog": 41, "likelihood": [41, 1322, 1368, 1421, 1428, 1510, 1548, 1556], "reinforc": [41, 1443, 1566], "polici": [41, 43, 45, 57, 1675, 1681], "reparameter": [41, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1624, 1625, 1626, 1638], "trick": [41, 893, 1331, 1515, 1875, 1883, 1885], "autoencod": 41, "whilst": [41, 1878], "densiti": [41, 293, 1143, 1144, 1764, 1853, 1910], "log_prob": [41, 1322, 1337, 1497, 1853], "theta": [41, 1478, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1853], "pi": [41, 166, 369, 687, 920, 1139, 1140, 1233, 1364, 1428, 1511, 1556, 1673, 1674, 1693, 1755, 1756, 1759, 1760, 1761, 1762, 1796, 1854, 1855, 1897, 1910], "reward": 41, "ascent": 41, "prob": [41, 1853], "policy_network": 41, "next_stat": 41, "rsampl": 41, "parameter": [41, 369, 445, 1188, 1871, 1909], "has_rsampl": 41, "batch_shap": 41, "event_shap": 41, "validate_arg": 41, "arg_constraint": 41, "cdf": 41, "cumul": [41, 1034, 1035, 1036, 1037, 1038, 1261, 1332, 1333, 1334, 1364, 1387, 1388, 1389, 1453, 1511], "mass": 41, "enumerate_support": 41, "discret": [41, 56, 472, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1090, 1092, 1515, 1764, 1914, 1917], "cardin": [41, 1283], "univari": 41, "singleton": [41, 246, 1386, 1834, 1876], "cartesian": [41, 928, 1283, 1693], "_instanc": 41, "icdf": 41, "perplex": 41, "sample_shap": 41, "sample_n": 41, "set_default_validate_arg": 41, "mimic": [41, 1681], "stddev": 41, "varianc": [41, 954, 1332, 1333, 1334, 1359, 1368, 1377, 1378, 1379, 1387, 1388, 1389, 1396, 1397, 1398, 1453, 1506, 1510, 1666, 1667, 1703, 1712, 1713, 1837, 1838, 1873, 1886], "exp_famili": 41, "famili": 41, "p_": [41, 932, 1273, 1669], "langl": 41, "rangl": 41, "denot": [41, 65, 954, 1202, 1221, 1227, 1240, 1250, 1342, 1343, 1380, 1603, 1606, 1669, 1782, 1783, 1784, 1786, 1787, 1839, 1883, 1903, 1906, 1909], "carrier": 41, "analyt": [41, 897, 898, 1504, 1909], "bregman": 41, "courtesi": 41, "frank": 41, "nielsen": 41, "richard": 41, "nock": 41, "logit": [41, 383, 1331, 1350, 1486, 1496, 1515, 1853, 1895, 1910], "70": [41, 1240, 1699, 1870], "lower_bound": 41, "upper_bound": 41, "has_enumerate_support": 41, "param_shap": 41, "concentration1": 41, "concentration0": 41, "concentr": 41, "1046": 41, "1st": [41, 1876], "2nd": [41, 606, 1422, 1448, 1551, 1876], "greaterthan": 41, "total_count": 41, "71": 41, "trial": 41, "integergreaterthan": 41, "ldot": [41, 1213, 1221, 1252, 1268, 1283, 1386, 1407, 1408, 1409, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "dimension": [41, 503, 505, 869, 875, 876, 877, 921, 928, 940, 1043, 1045, 1046, 1055, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1089, 1090, 1092, 1094, 1096, 1097, 1108, 1135, 1144, 1145, 1146, 1214, 1219, 1220, 1221, 1222, 1247, 1252, 1268, 1276, 1283, 1322, 1339, 1340, 1341, 1350, 1351, 1357, 1358, 1386, 1404, 1421, 1435, 1436, 1437, 1438, 1439, 1440, 1447, 1449, 1453, 1469, 1470, 1471, 1496, 1548, 1551, 1583, 1584, 1601, 1640, 1706, 1782, 1783, 1784, 1785, 1786, 1787, 1796, 1811, 1814, 1815, 1821, 1855, 1870, 1873, 1876, 1883, 1889, 1909, 1911, 1912, 1915, 1917], "unnorm": [41, 1350, 1486, 1496, 1515], "likewis": [41, 1820], "25": [41, 486, 575, 576, 577, 930, 1143, 1249, 1254, 1360, 1417, 1419, 1422, 1585, 1594, 1631, 1633, 1659, 1681, 1700, 1836, 1852, 1910], "independentconstraint": 41, "simplex": 41, "loc": [41, 1253], "lorentz": 41, "3214": 41, "width": [41, 768, 774, 847, 1142, 1143, 1144, 1328, 1329, 1343, 1344, 1346, 1347, 1383, 1408, 1409, 1421, 1448, 1466, 1524, 1582, 1869], "df": 41, "chi": 41, "continuous_bernoulli": 41, "lim": [41, 1179], "499": 41, "501": 41, "2538": [41, 1213], "pervas": 41, "loaiza": 41, "ganem": 41, "cunningham": 41, "jp": 41, "1907": 41, "06845": 41, "8954": 41, "greaterthaneq": 41, "df1": 41, "df2": 41, "fisher": 41, "snedecor": 41, "2453": 41, "degre": [41, 954, 1032, 1039, 1182, 1219, 1220, 1414, 1423, 1462, 1594, 1707, 1727, 1794, 1795, 1837, 1838, 1853, 1883, 1895, 1909], "freedom": [41, 954, 1794, 1795, 1837, 1838, 1883], "0124": 41, "half_cauchi": 41, "half_norm": 41, "base_distribut": 41, "reinterpreted_batch_ndim": 41, "reinterpret": [41, 489], "diagon": [41, 62, 217, 252, 584, 585, 586, 587, 921, 950, 954, 1042, 1043, 1044, 1046, 1055, 1068, 1116, 1117, 1127, 1211, 1223, 1225, 1228, 1240, 1244, 1553, 1563, 1780, 1819, 1823, 1824, 1825, 1826, 1827, 1853, 1880, 1895, 1913], "multivari": [41, 1910], "multivariate_norm": 41, "mvn": 41, "scale_tril": 41, "diag": [41, 63, 1115, 1116, 1117, 1217, 1218, 1245, 1689, 1780, 1800, 1801, 1853, 1895], "diagn": 41, "1729": [41, 1886], "lkj_choleski": 41, "lkj": 41, "matric": [41, 252, 675, 678, 910, 922, 923, 932, 933, 934, 935, 1043, 1127, 1202, 1211, 1212, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1254, 1262, 1271, 1273, 1286, 1365, 1423, 1478, 1512, 1601, 1606, 1687, 1689, 1699, 1748, 1774, 1777, 1778, 1800, 1801, 1823, 1824, 1826, 1853, 1868, 1883, 1889, 1909, 1915], "eta": [41, 1653, 1655, 1668], "proport": [41, 1382, 1383, 1420, 1461], "det": [41, 1219, 1220, 1241, 1262, 1853, 1895], "lkjcorr": 41, "onion": 41, "3x3": [41, 1038, 1821], "3516": 41, "9361": 41, "1899": [41, 1284], "4748": 41, "8593": 41, "vine": 41, "2009": [41, 1689, 1801], "lewandowski": 41, "dorota": 41, "kurowicka": 41, "harri": [41, 1764], "joe": 41, "journal": [41, 1706], "1016": 41, "jmva": 41, "04": [41, 1098, 1259, 1757, 1764], "008": 41, "corrcholeski": 41, "log_norm": [41, 1895], "lowrank_multivariate_norm": 41, "cov_factor": 41, "cov_diag": 41, "covari": [41, 923, 950, 954, 1332, 1333, 1334, 1453, 1689], "covariance_matrix": 41, "2102": 41, "5429": [41, 1823], "woodburi": 41, "lemma": 41, "formula": [41, 81, 757, 758, 878, 880, 911, 920, 1139, 1140, 1207, 1273, 1274, 1428, 1481, 1482, 1570, 1669, 1702, 1880, 1883, 1899, 1904], "capacit": 41, "precision_matrix": 41, "mixture_same_famili": 41, "mixture_distribut": 41, "component_distribut": 41, "rightmost": [41, 923, 1143, 1144, 1855], "gaussian": [41, 1364, 1368, 1443, 1510, 1511, 1566, 1763, 1910], "gmm": 41, "bivari": 41, "innermost": [41, 65, 1135, 1144, 1735], "1338": 41, "mathbf": [41, 1202, 1602, 1635, 1638, 1668], "sigma": [41, 166, 369, 749, 1331, 1365, 1366, 1367, 1384, 1385, 1443, 1444, 1512, 1566, 1602, 1635, 1758, 1794, 1795, 1837, 1838, 1853], "triangular": [41, 933, 934, 935, 1211, 1212, 1218, 1220, 1228, 1229, 1236, 1239, 1240, 1242, 1244, 1553, 1675, 1699, 1823, 1824, 1825, 1826, 1827], "positivedefinit": 41, "lowercholeski": 41, "negative_binomi": 41, "halfopeninterv": 41, "mu": [41, 369, 1667, 1669], "one_hot_categor": 41, "onehot": 41, "5623": 41, "nonneg": [41, 1463, 1689, 1801, 1910], "pmf": 41, "mathrm": [41, 912, 1219, 1220, 1221, 1222, 1233, 1332, 1333, 1334, 1369, 1377, 1378, 1379, 1386, 1423, 1428, 1453, 1601, 1656, 1657, 1658, 1668, 1703, 1875, 1910], "relaxed_bernoulli": 41, "temperatur": [41, 1515, 1850], "parametr": [41, 1111, 1603, 1610, 1635, 1636, 1871, 1880], "relax": [41, 1197, 1198, 1606, 1900], "reparametriz": 41, "99": [41, 1193, 1667, 1852], "2951": [41, 1281], "3442": 41, "8918": 41, "9021": 41, "maddison": 41, "2017": [41, 1457, 1459, 1461, 1781, 1892], "reparametr": [41, 1515, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1618], "jang": 41, "relaxed_categor": 41, "1294": [41, 933], "2324": [41, 1182, 1414], "3859": 41, "2523": 41, "student": 41, "transformed_distribut": 41, "composit": [41, 62, 1115, 1229, 1601, 1852, 1855, 1881, 1886, 1893], "basedistribut": 41, "dx": [41, 1038, 1330, 1821, 1853, 1880, 1881, 1910], "dy": 41, "logist": [41, 1443, 1446, 1566, 1910], "sigmoidtransform": 41, "affinetransform": 41, "invert": [41, 65, 935, 1173, 1213, 1222, 1223, 1229, 1235, 1242, 1244, 1247, 1248, 1262, 1410, 1411, 1412, 1823, 1853, 1889, 1905], "3418": 41, "upper": [41, 174, 175, 176, 583, 784, 921, 926, 933, 934, 935, 937, 1069, 1070, 1142, 1143, 1211, 1212, 1218, 1220, 1228, 1229, 1240, 1244, 1432, 1553, 1561, 1562, 1675, 1681, 1699, 1714, 1735, 1823, 1826, 1827, 1853, 1873, 1895, 1910, 1916], "von_mis": 41, "circular": [41, 1342, 1343, 1344, 1390, 1391, 1392, 1551], "von": 41, "mise": 41, "unconstrain": [41, 1606], "angl": [41, 744, 873, 1039, 1262, 1400, 1693, 1707, 1751, 1850, 1853, 1895, 1909], "9777": 41, "radian": [41, 687, 873, 1039, 1707, 1853, 1895], "nichola": 41, "simul": [41, 788, 790, 1900, 1903], "1979": 41, "152": [41, 606], "157": 41, "4784": [41, 1286], "symmetr": [41, 791, 809, 911, 920, 933, 934, 935, 1076, 1077, 1078, 1083, 1085, 1089, 1090, 1092, 1139, 1140, 1201, 1211, 1212, 1217, 1218, 1220, 1224, 1225, 1226, 1233, 1236, 1239, 1245, 1254, 1601, 1606, 1681, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1900, 1903], "x_ij": 41, "wu": [41, 1254], "chu": 41, "2018": [41, 1254, 1697], "sawyer": 41, "2007": 41, "anderson": 41, "w": [41, 63, 143, 749, 878, 880, 882, 888, 896, 911, 920, 954, 1113, 1124, 1139, 1140, 1179, 1221, 1320, 1321, 1328, 1329, 1333, 1334, 1338, 1343, 1344, 1350, 1354, 1355, 1357, 1358, 1359, 1366, 1378, 1379, 1386, 1397, 1398, 1408, 1409, 1419, 1420, 1421, 1426, 1427, 1448, 1464, 1465, 1467, 1468, 1478, 1504, 1505, 1513, 1548, 1554, 1555, 1602, 1635, 1638, 1853, 1868, 1869, 1873, 1875, 1880, 1883, 1896, 1897, 1914], "2003": 41, "ed": [41, 62, 1353, 1354, 1875, 1897, 1920], "odel": 41, "feiveson": 41, "1966": 41, "samplecovari": 41, "jasa": 41, "61": 41, "313": 41, "199": 41, "203": [41, 606], "ku": 41, "bloomfield": 41, "2010": [41, 1873], "ox": 41, "max_try_correct": 41, "bartlett": [41, 911], "singular": [41, 1213, 1227, 1228, 1234, 1236, 1238, 1239, 1245, 1246, 1254, 1262, 1271, 1602, 1606, 1689, 1800, 1801, 1889], "kl_diverg": 41, "kullback": [41, 1380, 1525], "leibler": [41, 1380, 1525], "register_kl": 41, "type_p": 41, "type_q": 41, "kl_normal_norm": 41, "ambigu": [41, 65, 1167, 1345, 1346, 1347, 1361, 1410, 1411, 1412, 1466, 1855], "runtimewarn": 41, "basep": 41, "derivedq": 41, "kl_version1": 41, "derivedp": 41, "baseq": 41, "kl_version2": 41, "tie": 41, "abstransform": 41, "event_dim": 41, "affin": [41, 463, 464, 465, 466, 467, 738, 740, 741, 742, 791, 1332, 1333, 1334, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1453, 1478, 1878, 1886], "cattransform": 41, "tseq": 41, "functor": [41, 998, 999], "submatrix": 41, "t0": [41, 1135, 1653, 1854], "exptransform": 41, "identity_transform": 41, "composetransform": 41, "corrcholeskytransform": 41, "uncontrain": 41, "euclidean": [41, 930, 1549], "x_i": [41, 62, 937, 1034, 1035, 1036, 1037, 1250, 1257, 1404, 1423, 1447, 1449, 1462, 1533, 1569, 1696, 1779, 1794, 1795, 1821, 1837, 1838, 1839, 1910], "stickbreakingtransform": 41, "r_i": 41, "tanh": [41, 566, 749, 754, 784, 874, 1364, 1366, 1367, 1384, 1385, 1413, 1429, 1431, 1455, 1511, 1543, 1575, 1851, 1853, 1868, 1869, 1873, 1895, 1902, 1909], "unsign": [41, 1903, 1912, 1915, 1916], "z_i": 41, "s_i": 41, "y_i": [41, 937, 1034, 1035, 1036, 1037, 1250, 1257, 1462, 1821, 1839, 1883], "sqrt": [41, 65, 369, 538, 662, 663, 749, 950, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1148, 1201, 1283, 1332, 1333, 1334, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1364, 1366, 1367, 1369, 1377, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1399, 1401, 1429, 1431, 1453, 1511, 1563, 1606, 1654, 1655, 1656, 1657, 1660, 1666, 1667, 1703, 1730, 1763, 1794, 1795, 1851, 1853, 1868, 1873, 1874, 1875, 1895, 1909, 1910, 1916], "cumulativedistributiontransform": 41, "copula": 41, "base_dist": 41, "independenttransform": 41, "base_transform": 41, "log_abs_det_jacobian": 41, "lowercholeskytransform": 41, "positivedefinitetransform": 41, "powertransform": 41, "expon": [41, 260, 261, 272, 459, 460, 1098, 1105, 1205, 1235, 1322, 1402, 1549, 1696, 1706, 1851, 1853, 1912, 1915], "reshapetransform": 41, "in_shap": 41, "out_shap": 41, "softplustransform": 41, "tanhtransform": 41, "softmaxtransform": 41, "biject": 41, "hmc": 41, "stacktransform": 41, "stick": 41, "aris": [41, 65, 1875], "primarili": [41, 64, 804, 805, 806, 812, 1314, 1865, 1900], "memoiz": 41, "_call": 41, "_invers": 41, "codomain": [41, 1875], "iff": [41, 1420], "weaker": [41, 1878], "pseudoinvers": [41, 1222, 1239, 1247], "monoton": [41, 1413, 1543, 1735], "decreas": [41, 1012, 1227, 1353, 1354, 1355, 1359, 1427, 1628, 1629, 1668, 1675, 1683, 1861, 1863, 1890, 1909, 1912], "forward_shap": 41, "inverse_shap": 41, "corr_choleski": 41, "greater_than": 41, "greater_than_eq": 41, "integer_interv": 41, "less_than": 41, "lower_choleski": 41, "lower_triangular": 41, "nonnegative_integ": 41, "one_hot": [41, 1853, 1895], "positive_integ": 41, "positive_semidefinit": 41, "positive_definit": 41, "real_vector": 41, "unit_interv": 41, "is_discret": 41, "_cat": 41, "dependent_properti": 41, "_dependentproperti": 41, "_greaterthan": 41, "_greaterthaneq": 41, "_independentconstraint": 41, "_integerinterv": 41, "_interv": 41, "half_open_interv": 41, "_halfopeninterv": 41, "_lessthan": 41, "_multinomi": 41, "_stack": [41, 1895], "constraintregistri": 41, "biject_to": 41, "transform_to": 41, "overparameter": 41, "rotat": [41, 1727, 1800], "hamiltonian": 41, "mont": 41, "carlo": 41, "potential_energi": 41, "cheap": [41, 1322], "svi": 41, "fewer": [41, 62, 682, 684, 685, 688, 936, 1202, 1203, 1269, 1279, 1281, 1282, 1284, 1287, 1309, 1312, 1368, 1495, 1697, 1781, 1794, 1795, 1799, 1817, 1837, 1838, 1861, 1876, 1891, 1916], "my_constraint": 41, "my_transform": 41, "myconstraintclass": 41, "my_factori": 41, "mytransform": 41, "param1": [41, 1886], "param2": [41, 1886], "constraint_registri": 41, "my_registri": 41, "construct_transform": 41, "myconstraint": 41, "from_dlpack": [42, 869, 1850], "ext_tensor": [42, 1106], "extern": [42, 959, 1106, 1197, 1865, 1877, 1878, 1889, 1893], "immut": [42, 1106, 1855], "__dlpack__": [42, 1106], "capsul": [42, 869, 1106], "ndarrai": [42, 449, 868, 1106, 1107, 1782, 1783, 1784, 1785, 1786, 1787, 1814, 1893, 1914, 1916], "pycapsul": [42, 1106], "to_dlpack": [42, 1106, 1850], "dltensor": [42, 1106], "t3": [42, 1106, 1906], "legaci": [42, 53, 1515, 1899, 1912], "idiomat": 42, "plane": [43, 52, 727, 728, 729, 730, 731, 732, 755, 756, 757, 758, 761, 762, 763, 771, 772, 1043, 1319, 1320, 1321, 1323, 1324, 1325, 1327, 1328, 1329, 1342, 1343, 1344, 1345, 1346, 1347, 1362, 1363, 1382, 1383, 1386, 1402, 1407, 1408, 1409, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1508, 1509, 1531, 1534, 1535, 1537, 1538, 1539, 1638, 1704, 1705, 1727], "monitor": [43, 53, 54, 958, 1683, 1850, 1878, 1884], "unhealthi": 43, "tear": 43, "decentr": 43, "elasticag": 43, "deploy": [43, 52, 1850], "quad": [43, 1330, 1331, 1350, 1381, 1405, 1421, 1463], "group_result": 43, "is_fail": [43, 44], "exit_cod": 43, "get_worker_group": 43, "workergroup": [43, 53], "mutabl": [43, 1197, 1852, 1897, 1914], "implementor": 43, "defens": 43, "retri": [43, 45, 54, 57, 1012, 1905, 1907], "max_restart": [43, 44, 53], "runresult": 43, "workerspec": [43, 44, 53, 54], "local_world_s": [43, 44, 53], "rdzv_handler": [43, 44, 52], "monitor_interv": [43, 44], "local_addr": [43, 52], "tee": [43, 50], "blueprint": 43, "spec": [43, 44, 54, 77, 782, 783, 808, 809, 810, 813, 814, 815, 1902], "homogen": [43, 53], "rendezvoushandl": [43, 44, 52, 53], "rdzv": [43, 51, 53], "chose": [43, 1874], "consol": [43, 46, 49, 50, 53, 1914], "get_entrypoint_nam": 43, "__qualname__": 43, "workerst": 43, "unknown": [43, 1596, 1597, 1907], "unrecover": 43, "interrupt": [43, 1867], "termin": [43, 52, 54, 65, 1659, 1867, 1905], "uncaught": [43, 45], "unhandl": 43, "recov": [43, 884, 1076, 1241, 1273, 1594, 1627, 1796, 1874, 1882, 1883, 1901], "is_run": 43, "role_rank": [43, 53], "role_world_s": [43, 53], "pid": [43, 45, 53, 54, 1453, 1882, 1899], "local_elastic_ag": 43, "localelasticag": [43, 44, 54], "start_method": [43, 44, 50, 54, 1867], "exit_barrier_timeout": 43, "log_dir": [43, 50, 1865, 1914], "inter": [43, 45, 1132, 1746, 1877, 1879, 1898, 1905], "safeti": [43, 65, 1852, 1855, 1869], "advis": [43, 533, 606, 854, 1888], "pipe": [43, 54, 1850, 1905], "torchelastic_enable_file_tim": 43, "torchelastic_timer_fil": 43, "shared_queu": 43, "get_context": [43, 54, 1888], "nproc_per_process": 43, "foobar": [43, 45, 49, 50], "other_param": [43, 54], "usr": [43, 50, 52, 1878], "simpleelasticag": 43, "scaffold": 43, "_assign_worker_rank": 43, "group_world_s": 43, "_exit_barri": 43, "_initialize_work": 43, "worker_group": 43, "fresh": [43, 1046, 1738, 1769, 1849], "start_work": 43, "_stop_work": 43, "optimist": 43, "deleg": 43, "_monitor_work": 43, "_rendezv": 43, "_restart_work": 43, "_shutdown": 43, "death_sig": 43, "sigterm": 43, "_start_work": 43, "gracefulli": [43, 53, 62, 1212, 1881], "meaning": [43, 45, 46, 1012, 1878], "meaningless": 43, "intention": [43, 1052, 1839, 1884, 1905], "ship": [44, 1112, 1877, 1905], "programmat": [44, 65, 1886], "my_launch": 44, "argv": [44, 55], "trainer_entrypoint_fn": 44, "fn_arg": 44, "run_result": 44, "tricki": [44, 58, 63, 1875, 1886, 1907], "myrendezvoushandl": 44, "elastic_ag": 44, "servic": [44, 1879], "metrichandl": [44, 49], "mymetrichandl": 44, "metric_data": [44, 49], "metricdata": 44, "sink": [44, 49, 1865], "eventhandl": 44, "cloudwatch": 44, "nulleventhandl": 44, "myeventhandl": 44, "start_process": [45, 50, 1867], "torchelastic_error_fil": 45, "error_handl": 45, "sugar": [45, 1854], "get_error_handl": 45, "childfailederror": 45, "get_first_failur": 45, "dump_error_fil": 45, "error_fil": [45, 50], "exitcod": [45, 53], "nanni": 45, "diagnost": [45, 66, 71, 72, 73, 74, 75, 76, 1648, 1850, 1852], "torchelastic_ag": 45, "trainer_0": 45, "trainer_1": 45, "json": [45, 50, 54, 1885, 1899], "trainer_n": 45, "errorhandl": 45, "record_except": 45, "processfailur": 45, "test_ev": 46, "eventsourc": 46, "get_logging_handl": 46, "millisecond": [46, 49, 958, 1865], "eventmetadatavalu": 46, "telemetri": 49, "timeseri": 49, "metric_group": 49, "metric_nam": 49, "sensibl": 49, "my_modul": [49, 57, 65, 1852, 1897], "nullmetricshandl": 49, "consolemetricshandl": 49, "my_method": 49, "put_metr": 49, "calculate_lat": 49, "succinctli": 49, "baz": [49, 65, 843, 1897, 1916], "leaf_modul": 49, "classnam": [49, 1855], "threw": 49, "my_app": 49, "consolemetrichandl": 49, "stdout": [49, 50, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1893], "stdoutmetrichandl": 49, "1574213883": 49, "4182858": 49, "my_metr": 49, "1574213940": 49, "5237644": 49, "nullmetrichandl": 49, "class_nam": [49, 65], "def_nam": 49, "leaf": [49, 143, 215, 327, 439, 493, 494, 780, 827, 829, 868, 882, 1121, 1651, 1814, 1870, 1874, 1875, 1893, 1919], "metric_valu": 49, "metric_group_nam": 49, "popen": 50, "stderr": [50, 1849, 1864], "err": 50, "echo": 50, "hello": [50, 62, 1854, 1893, 1897], "pcontext": 50, "multiprocesscontext": 50, "subprocesscontext": 50, "keyset": 50, "bitmask": 50, "mask": [50, 391, 392, 393, 394, 395, 533, 724, 897, 898, 1275, 1326, 1337, 1359, 1420, 1457, 1458, 1459, 1460, 1461, 1506, 1563, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1850, 1853, 1868, 1869, 1909], "bar0": 50, "bar1": 50, "file1": 50, "file2": 50, "caution": 50, "short": [50, 65, 723, 752, 1055, 1179, 1337, 1384, 1385, 1497, 1650, 1748, 1796, 1854, 1868, 1875, 1876, 1886, 1905, 1911, 1912, 1915], "ing": 50, "cmd": [50, 53], "forkserv": [50, 1594, 1867, 1888], "tee_stdout": 50, "tee_stderr": 50, "processcontext": [50, 1867], "superset": [50, 53], "runprocsresult": 50, "num_nod": [51, 53], "trainers_per_nod": 51, "num_allowed_failur": 51, "job_id": [51, 52, 53], "endpoint": [51, 52, 53], "host_node_addr": [51, 53], "min_siz": [51, 53], "num_allowed_failures_or_membership_chang": 51, "node1": [51, 53], "29400": [51, 53], "sidecar": [51, 52], "agre": [52, 1240, 1907], "resum": [52, 1675, 1681, 1683, 1905, 1907, 1914], "retryabl": 52, "lose": [52, 55, 57, 184, 201, 1869], "train_loop": [52, 851], "arriv": [52, 53, 1905, 1907], "dynamicrendezvoushandl": 52, "rendezvousbackend": 52, "c10drendezvousbackend": 52, "etcdrendezvousbackend": 52, "supersed": 52, "etcdrendezvoushandl": 52, "my_run_id": 52, "from_backend": 52, "run_id": [52, 53], "min_nod": 52, "max_nod": 52, "rendezvousparamet": 52, "admit": [52, 53, 1878], "get_as_bool": 52, "get_as_int": 52, "rendezvoushandlerregistri": 52, "create_handl": 52, "creator": [52, 1875, 1905, 1907], "get_run_id": 52, "is_clos": 52, "set_clos": 52, "next_rendezv": 52, "rendezvousclosederror": 52, "rendezvousconnectionerror": 52, "rendezvousstateerror": 52, "rendezvoustimeouterror": 52, "num_nodes_wait": 52, "shutdown": [52, 1905, 1906], "rendezvouserror": 52, "dynamic_rendezv": 52, "join_timeout": 52, "600": 52, "last_call_timeout": 52, "close_timeout": 52, "rendezvoustimeout": 52, "get_stat": [52, 81], "fenc": 52, "set_stat": [52, 81], "condition": [52, 1745], "last_cal": 52, "heartbeat": 52, "keep_al": 52, "c10d_rendezvous_backend": 52, "create_backend": 52, "store_typ": 52, "tcp": [52, 53, 1905], "read_timeout": 52, "60": [52, 54, 1368, 1685, 1811, 1816, 1865, 1905], "is_host": 52, "cname": 52, "fqdn": [52, 53], "etcd_rendezvous_backend": 52, "ssl_cert": 52, "ssl": 52, "certif": 52, "ssl_cert_kei": 52, "privat": [52, 1878, 1880, 1897], "ca_cert": 52, "rool": 52, "key_prefix": 52, "ttl": 52, "hour": 52, "etcd_rendezv": 52, "rdzv_impl": 52, "etcdrendezv": 52, "etcd_address": 52, "min_work": 52, "max_work": 52, "noqa": 52, "w605": 52, "2379": [52, 1279], "etcd_prefix": 52, "etcdstor": 52, "etcd_stor": 52, "etcd_client": 52, "etcd_store_prefix": 52, "c10": [52, 1885], "piggyback": 52, "num": [52, 734, 735, 749, 1304, 1366, 1369, 1384, 1420, 1429, 1457], "lookuperror": 52, "override_timeout": 52, "etcdserv": 52, "cumbersom": [52, 1855], "etcd_serv": 52, "data_dir": 52, "v3": [52, 53], "substitut": [52, 65, 1194, 1875, 1912], "torchelastic_etcd_binary_path": 52, "get_client": 52, "etcd_binary_path": 52, "migrat": [53, 58, 1283, 1903], "train_script": 53, "aforment": 53, "suffic": [53, 65], "compliant": [53, 55], "num_train": 53, "wors": [53, 1835], "port_k": 53, "etcd": 53, "v2": [53, 1250, 1688, 1849], "revis": 53, "localworkergroup": 53, "rdzv_id": 53, "rdzv_backend": [53, 55], "rdzv_endpoint": [53, 55], "max_nnod": 53, "torchelastic_restart_count": 53, "far": [53, 1191, 1513], "torchelastic_max_restart": 53, "python_exec": 53, "gang": 53, "departur": 53, "surviv": 53, "kill": [53, 54, 1867, 1882], "ness": 53, "load_checkpoint": [53, 55], "checkpoint_path": [53, 55], "dataset": [53, 55, 787, 1322, 1331, 1380, 1850, 1882, 1885, 1892, 1896, 1900, 1901, 1914], "train_step": 53, "should_checkpoint": 53, "save_checkpoint": [53, 55], "acquir": [54, 65, 1886, 1907, 1909], "deadlin": 54, "message_queu": 54, "localtimerserv": 54, "max_interv": 54, "trainer_func": 54, "localtimercli": 54, "expiri": 54, "timer_cli": 54, "countdown": 54, "timefram": [54, 1905], "elig": [54, 1907], "reap": 54, "timerserv": 54, "mp_queue": 54, "daemon": [54, 1867], "filetimerserv": 54, "file_path": 54, "log_ev": [54, 1865], "filetimercli": 54, "fifo": 54, "watchdog": 54, "filetimerrequest": 54, "sigkil": 54, "named_pip": 54, "mkfifo": 54, "timercli": 54, "timerrequest": 54, "scope_id": 54, "expiration_tim": 54, "acquisit": 54, "request_queu": 54, "entiti": [54, 65], "clear_tim": 54, "get_expired_tim": 54, "register_tim": 54, "timer_request": 54, "use_env": 55, "expositori": 55, "worst": [55, 1880], "total_num_epoch": 55, "sharding_strategi": 57, "cpu_offload": 57, "auto_wrap_polici": 57, "backward_prefetch": 57, "backwardprefetch": [57, 1850], "backward_pr": [57, 1182, 1414], "mixed_precis": [57, 1594], "ignored_modul": 57, "param_init_fn": 57, "sync_module_st": 57, "forward_prefetch": 57, "limit_all_gath": 57, "use_orig_param": 57, "ignored_paramet": 57, "deepspe": 57, "shorten": 57, "sharded_modul": 57, "0001": [57, 65, 1036, 1226, 1402, 1531, 1653, 1683, 1853, 1896], "stale": 57, "dev_id": 57, "no_sync": [57, 1594], "offload": 57, "ping": 57, "77724": 57, "summon_full_param": 57, "illeg": [57, 1878], "shardingstrategi": [57, 1850], "shard_grad_op": 57, "unshard": 57, "full_shard": 57, "with_grad": 57, "reacquir": 57, "hybrid_shard": 57, "cpuoffload": [57, 1850], "_fsdppolici": 57, "modulewrappolici": 57, "nonwrapped_numel": 57, "subtre": 57, "size_based_auto_wrap_polici": 57, "exce": [57, 1259, 1878], "100m": 57, "numel": [57, 426, 435, 940, 954, 1086, 1167, 1853, 1868, 1875, 1895, 1909], "custom_auto_wrap_polici": 57, "min_num_param": 57, "1e8": 57, "my_auto_wrap_polici": 57, "functool": [57, 60, 830, 1880, 1916], "1e5": 57, "mixedprecis": [57, 1850], "is_meta": [57, 1895], "reset_paramet": 57, "torchdistx": 57, "deferred_init": 57, "materialize_modul": 57, "my_init_fn": 57, "fsdp_model": 57, "fullstatedictconfig": 57, "flight": 57, "named_paramet": [57, 59, 61, 1111, 1182, 1186, 1414, 1886, 1891], "flatparamet": 57, "norm_typ": [57, 734, 735, 1357, 1358, 1382, 1383, 1504, 1505, 1534, 1535, 1598, 1853], "infin": [57, 952, 1172, 1174, 1176, 1177, 1308, 1330, 1407, 1408, 1409, 1537, 1538, 1539, 1598, 1658, 1768, 1779, 1909, 1910], "no_shard": 57, "promot": [57, 674, 915, 918, 927, 998, 1050, 1098, 1100, 1101, 1102, 1103, 1303, 1353, 1354, 1355, 1359, 1495, 1698, 1718, 1719, 1725, 1740, 1797, 1851, 1855, 1912, 1916], "flatten_sharded_optim_state_dict": 57, "sharded_optim_state_dict": 57, "shard_full_optim_state_dict": 57, "unflatten": [57, 1853, 1868, 1869, 1895, 1913], "fsdp_modul": 57, "root_onli": 57, "full_optim_state_dict": 57, "optim_input": 57, "rank0_onli": 57, "convent": [57, 65, 327, 931, 1055, 1073, 1075, 1099, 1121, 1332, 1333, 1334, 1377, 1378, 1379, 1453, 1728, 1731, 1829, 1849, 1864, 1870, 1875, 1883, 1886, 1891], "alias": [57, 884, 1112, 1123, 1524, 1842, 1854, 1855, 1859, 1880], "load_optim_state_dict_pre_hook": 57, "optim_state_dict": 57, "namedoptim": 57, "optim_state_dict_to_load": 57, "named_buff": [57, 1182, 1414, 1886, 1891], "intercept": [57, 65], "occurr": [57, 394, 1180, 1282, 1627, 1832, 1833], "state_dict_typ": 57, "oom": [57, 1882], "unflattend": 57, "statedicttyp": 57, "fulloptimstatedictconfig": 57, "set_state_dict_typ": 57, "full_state_dict": 57, "save_a_checkpoint": 57, "load_a_checkpoint": 57, "optim_state_dict_post_hook": 57, "is_named_optim": 57, "load_directli": 57, "original_osd": 57, "keyedoptim": 57, "torchrec": [57, 1850], "gossipgrad": [57, 1594], "latter": [57, 676, 780, 1182, 1384, 1414, 1421, 1881, 1886, 1888, 1890], "rekey_optim_state_dict": 57, "optim_state_key_typ": 57, "loadabl": [57, 1849], "wrapped_model": 57, "wrapped_optim": 57, "full_osd": 57, "nonwrapped_model": 57, "nonwrapped_optim": 57, "rekeyed_osd": 57, "optimstatekeytyp": 57, "param_id": 57, "osd": 57, "param_nam": 57, "sharded_osd": 57, "scatter_full_optim_state_dict": 57, "new_model": 57, "new_optim": 57, "remap": [57, 81, 1186, 1189, 1253, 1274, 1849, 1864, 1904], "state_dict_config": 57, "optim_state_dict_config": 57, "descend": [57, 65, 129, 531, 865, 1182, 1245, 1246, 1414, 1773, 1800, 1853], "transpar": [57, 1879, 1898, 1905, 1907], "sharded_state_dict": 57, "shardedstatedictconfig": 57, "offload_to_cpu": 57, "optimstatedictconfig": 57, "param_state_dict": 57, "statedictconfig": 57, "statedictset": 57, "writeback": 57, "summon": 57, "discard": [57, 1179, 1239, 1604, 1849, 1854, 1865], "redundantli": [57, 1874], "materi": [57, 889, 947, 1596, 1597, 1723, 1724, 1880], "throughput": [57, 1852, 1877], "contend": 57, "backward_post": 57, "reorder": [57, 1075, 1237], "volum": [57, 1144], "_hybrid_shard_zero2": 57, "freed": [57, 143, 882, 896, 964, 1012, 1867, 1878, 1884, 1905], "param_dtyp": 57, "reduce_dtyp": 57, "buffer_dtyp": 57, "keep_low_precision_grad": 57, "cast_forward_input": 57, "cast_root_forward_input": 57, "permit": [57, 1909], "thereaft": 57, "upcast": 57, "batchnorm": [57, 689, 690, 1120, 1182, 1191, 1414, 1453, 1594, 1863, 1875, 1886, 1896, 1898, 1900, 1902, 1903], "offload_param": 57, "jax": [58, 61, 62, 63, 1875, 1881], "love": 58, "hear": 58, "vmap": [58, 60, 61, 65, 890, 892, 896, 897, 898, 1113, 1116, 1117, 1119, 1121], "arbitrarili": [58, 63, 503, 1185, 1478, 1855, 1875, 1881], "stock": [58, 63], "ensembl": [58, 61, 63, 1121], "maml": [58, 63], "vjp": [58, 61, 62, 878, 879, 1117, 1123, 1842, 1880, 1881], "whirlwind": 58, "tour": 58, "jacrev": [59, 61, 62, 892, 1115, 1116, 1881], "functional_cal": [59, 61, 1121], "running_mean": [60, 1120, 1182, 1332, 1333, 1334, 1377, 1378, 1379, 1387, 1388, 1389, 1396, 1397, 1398, 1414, 1453, 1483, 1523, 1851, 1853, 1886, 1891], "running_var": [60, 1120, 1182, 1332, 1333, 1334, 1377, 1378, 1379, 1387, 1388, 1389, 1396, 1397, 1398, 1414, 1453, 1483, 1523, 1851, 1853, 1891], "groupnorm": [60, 1514], "anywher": [60, 1874], "batchnorm2d": [60, 702, 705, 707, 712, 803, 1191, 1351, 1388, 1483, 1863, 1875, 1886, 1900, 1902], "track_running_stat": [60, 740, 741, 742, 1120, 1332, 1333, 1334, 1377, 1378, 1379, 1387, 1388, 1389, 1396, 1397, 1398, 1453, 1891], "resnet": [60, 1849, 1852, 1854, 1886, 1897, 1914, 1918], "regnet": 60, "norm_lay": 60, "num_group": [60, 738, 1369, 1514, 1853], "attach": [60, 64, 65, 132, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 782, 827, 829, 853, 1585, 1849, 1852, 1854, 1868, 1875, 1880, 1900, 1906, 1918], "fragil": 60, "replace_all_batch_norm_modules_": 60, "upstream": [61, 1892], "reflect": [61, 449, 510, 545, 1107, 1108, 1111, 1179, 1342, 1343, 1344, 1390, 1391, 1392, 1435, 1436, 1437, 1513, 1551, 1636, 1684, 1796, 1852, 1853, 1882, 1913], "kept": [61, 65, 686, 768, 774, 1332, 1333, 1334, 1377, 1378, 1379, 1453, 1524, 1582, 1855, 1867, 1903], "jvp": [61, 62, 879, 883, 884, 885, 889, 1119, 1880], "jacfwd": [61, 62, 892, 1115, 1881], "carefulli": [61, 64, 1881, 1897], "make_functional_with_buff": 61, "hurri": 61, "emul": [61, 788, 1856, 1880], "fmodel": 61, "compute_loss": [61, 63, 1111, 1113], "predict": [61, 1322, 1331, 1368, 1496, 1896, 1914], "argnum": [61, 1113, 1114, 1115, 1116, 1117], "stack_module_st": 61, "num_model": [61, 1121], "in_featur": [61, 709, 717, 718, 721, 722, 745, 753, 1121, 1182, 1322, 1399, 1401, 1414, 1585, 1601, 1602, 1634, 1635, 1638, 1886], "out_featur": [61, 709, 717, 718, 721, 722, 745, 753, 1121, 1182, 1335, 1399, 1401, 1414, 1585, 1601, 1602, 1634, 1635, 1638, 1886], "base_model": 61, "deepcopi": [61, 1900, 1919], "clearer": [61, 1238, 1880, 1894], "call_single_model": 61, "stori": [61, 1883], "grad_x": [62, 1881], "has_aux": [62, 1113, 1114, 1116, 1117, 1118, 1122], "mental": [62, 1112], "absenc": 62, "unbind": [62, 1123, 1842, 1850, 1853, 1868, 1895, 1913], "lst": 62, "in_dim": [62, 63, 881, 1113, 1123, 1842, 1881], "batchedtensor": 62, "batched_tensor_input": 62, "new_": [62, 1878, 1915], "new_zero": [62, 1853, 1895], "new_empti": [62, 1853, 1895], "diag_emb": [62, 1045, 1217, 1218, 1245, 1800, 1853, 1895], "vec": [62, 100, 101, 415, 679, 1306, 1637, 1851, 1853, 1909], "copy_": [62, 214, 1112, 1466, 1852, 1853, 1868, 1878, 1911], "arithmet": [62, 915, 918, 932, 1237, 1725, 1856, 1865, 1868, 1869, 1889, 1900, 1912], "extra_arg": 62, "theoret": 62, "custom_dot": 62, "lax": 62, "cond": [62, 1889], "while_loop": 62, "is_nonzero": [62, 1853, 1895, 1909], "rag": 62, "unclear": [62, 606], "add_nois": 62, "prng": 62, "cos_x": [63, 1113], "neg_sin_x": [63, 1113], "hide": [63, 1123, 1842, 1881], "lift": [63, 1123, 1842, 1869, 1895], "feature_s": [63, 1113, 1123, 1842], "feature_vec": [63, 1113, 1123, 1842], "mseloss": [63, 1113, 1375, 1445, 1544, 1878, 1879], "grad_weight_per_exampl": [63, 1113], "cotang": [63, 1122], "vjp_fn": [63, 1122], "out_tang": 63, "hessian0": 63, "hessian1": 63, "hess": [63, 1115], "encapsul": [64, 65, 1905], "rpc_async": [64, 1855, 1895, 1905, 1907], "add_done_callback": 64, "fut": [64, 1185, 1594, 1877, 1905], "set_result": [64, 1594, 1905], "haven": [64, 1886], "set_except": 64, "baseexcept": 64, "slow_set_futur": 64, "sleep": 64, "cb1": 64, "cb2": 64, "dedic": [64, 1878], "pool": [64, 755, 756, 757, 758, 771, 772, 956, 990, 991, 1001, 1012, 1290, 1291, 1319, 1320, 1321, 1323, 1324, 1325, 1327, 1328, 1329, 1362, 1363, 1382, 1383, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1481, 1482, 1508, 1509, 1534, 1535, 1537, 1538, 1539, 1704, 1705, 1850, 1877, 1878, 1880, 1886, 1888, 1902, 1905], "didn": [64, 1880, 1892, 1896], "cb_fut": 64, "chain_cb_fut": 64, "cb": [64, 1905], "collect_al": [64, 1850], "fut0": 64, "fut1": [64, 1905], "fut_list": 64, "wait_al": [64, 1850], "toolkit": 65, "clamp": [65, 179, 180, 788, 791, 938, 1188, 1330, 1368, 1513, 1524, 1582, 1851, 1853, 1863, 1868, 1893, 1895, 1900, 1902, 1903, 1910, 1916], "num_us": 65, "get_attr": 65, "feed": [65, 1852, 1882, 1886, 1918], "theses": 65, "callsit": 65, "constitut": 65, "tracer_class": 65, "treatment": 65, "topk": [65, 1851, 1853, 1868, 1895], "linear_weight": 65, "add_1": [65, 1112], "linear_1": 65, "relu_1": 65, "topk_1": 65, "pose": [65, 1906], "explor": [65, 1849, 1875, 1886, 1897], "edit": [65, 1897, 1913], "lint": 65, "new_nod": 65, "tediou": 65, "unwieldi": 65, "machineri": [65, 1880], "imagin": [65, 1905], "requisit": 65, "relu_decomposit": 65, "decomposition_rul": 65, "constitu": [65, 1870], "new_graph": 65, "graphappendingtrac": 65, "proxy_arg": 65, "output_proxi": 65, "node_copi": 65, "ari": [65, 1893], "unari": [65, 1116, 1117, 1457, 1459, 1461, 1856, 1868], "organiz": 65, "shapeprop": 65, "named_modul": [65, 1182, 1414, 1886], "args_it": 65, "load_arg": 65, "map_arg": 65, "fetch_attr": 65, "target_atom": 65, "attr_itr": 65, "nonexist": [65, 1854, 1855], "self_obj": 65, "encompass": 65, "prove": [65, 1867], "disprov": 65, "led": 65, "auxiliari": [65, 1113, 1114, 1116, 1117, 1118, 1122, 1849, 1885], "unord": [65, 1415, 1424], "nondetermin": [65, 898, 1890], "dedupl": 65, "torchvis": [65, 1849, 1850, 1852, 1854, 1893, 1897, 1900, 1914, 1918], "transformed_resnet18": 65, "input_imag": 65, "224": [65, 850, 851, 1852, 1854, 1893], "margin": [65, 1348, 1374, 1406, 1417, 1419, 1462, 1463, 1494, 1521, 1536, 1545, 1579, 1580, 1853, 1914], "commut": 65, "toolbox": 65, "tradit": 65, "luckili": 65, "my_pass": 65, "my_module_transform": 65, "input_valu": 65, "prompt": [65, 1849, 1892], "set_trac": [65, 1187, 1193, 1199, 1852], "examin": [65, 1886, 1893, 1899], "undergon": 65, "subclassm": 65, "untrac": 65, "pre_trac": 65, "post_trac": 65, "sake": 65, "tabular": [65, 669, 1861], "transform_graph": 65, "session": 65, "luck": 65, "input_nod": 65, "stepwis": 65, "excel": 65, "onlin": [65, 1655], "realpython": 65, "pycharm": 65, "vscode": 65, "graphic": [65, 1892], "parlanc": 65, "func_to_trac": 65, "dyn": 65, "155": 65, "__bool__": [65, 1853, 1855], "to_bool": 65, "85": [65, 1417, 1681], "traceerror": [65, 1900], "architectur": [65, 982, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1350, 1457, 1496, 1744, 1878, 1889, 1900], "hyper": [65, 1445, 1854, 1914], "do_activ": 65, "512": [65, 1457, 1458, 1459, 1460, 1461, 1878], "without_activ": 65, "with_activ": 65, "traced_without_activ": 65, "traced_with_activ": 65, "concrete_arg": 65, "truli": [65, 1893], "__torch_function__": [65, 1920], "161": 65, "len_1": 65, "sqrt_1": 65, "mycustomtrac": 65, "traced_graph": 65, "myspecialsubmodul": 65, "submod": 65, "neg_1": 65, "is_leaf_modul": [65, 1919], "sparse_coo_tensor": [65, 533, 570, 1781, 1853, 1857, 1895, 1909], "ones_lik": [65, 1116, 1117, 1122, 1853, 1870, 1878, 1881, 1886, 1895], "zeros_lik": [65, 887, 889, 1853, 1857, 1870, 1878, 1895, 1909], "viabl": [65, 1878], "torch_randn": 65, "gotcha": 65, "bake": [65, 1186, 1191, 1656, 1657, 1896], "dropoutrepro": 65, "assert_clos": [65, 1072, 1074, 1075, 1080, 1081, 1086, 1087, 1088, 1090, 1092, 1850, 1852, 1916], "greatest": [65, 1125, 1308, 1893, 1916], "6207983493804932": 65, "dropoutrepro2": 65, "pytre": [65, 1881], "overspeci": 65, "ph": 65, "shouldn": [65, 956, 1897, 1909, 1913], "fn_or_nam": 65, "callfunct": 65, "fn_to_be_trac": 65, "reassign": [65, 1878], "regener": 65, "unset": [65, 1889], "add_submodul": 65, "subpath": 65, "get_submodul": [65, 1182, 1414], "delete_all_unused_submodul": 65, "delete_submodul": 65, "print_read": 65, "print_output": 65, "date": [65, 1897], "pythoncod": 65, "fxmodul": 65, "pathlik": [65, 1253, 1731, 1897], "owning_modul": 65, "tracer_cl": 65, "tracer_extra": 65, "the_funct": 65, "type_expr": 65, "create_nod": 65, "method_nam": 65, "0th": [65, 1123, 1842], "inserting_befor": 65, "influenc": [65, 1647, 1893, 1909], "eliminate_dead_cod": 65, "topolog": [65, 1893], "attr_1": 65, "is_impur": 65, "bad": [65, 1867, 1893, 1897, 1900], "sound": [65, 1442, 1859, 1914], "erase_nod": 65, "to_eras": 65, "eras": 65, "qualified_nam": 65, "graph_copi": 65, "val_map": 65, "return_output_nod": 65, "slice": [65, 596, 684, 685, 1332, 1333, 1334, 1447, 1449, 1453, 1569, 1570, 1720, 1737, 1738, 1769, 1779, 1830, 1851, 1852, 1856, 1870, 1893, 1895, 1909, 1910, 1913, 1915], "memory_format": [65, 148, 163, 165, 168, 171, 172, 173, 182, 188, 199, 202, 232, 259, 289, 317, 323, 385, 489, 490, 514, 569, 939, 1056, 1057, 1110, 1182, 1414, 1594, 1646, 1709, 1711, 1713, 1848, 1850, 1851, 1853, 1916], "layout": [65, 143, 184, 201, 334, 335, 426, 436, 437, 438, 439, 440, 449, 533, 570, 571, 572, 573, 574, 576, 577, 606, 678, 854, 882, 884, 911, 920, 971, 1056, 1057, 1058, 1068, 1073, 1091, 1109, 1110, 1139, 1140, 1201, 1252, 1268, 1276, 1286, 1314, 1530, 1645, 1646, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1777, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1820, 1825, 1827, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1857, 1870, 1878, 1895, 1897, 1909, 1914, 1915, 1916], "companion": 65, "__exit__": [65, 1855, 1856, 1897], "arg_transform": 65, "value_remap": 65, "_node_list": 65, "doubli": 65, "on_generate_cod": 65, "make_transform": 65, "transformcodefunc": 65, "insert_pdb": 65, "current_tran": 65, "stuff": 65, "default_valu": 65, "_not_": 65, "tabul": 65, "process_input": 65, "process_output": 65, "python_cod": 65, "root_modul": [65, 782, 1902], "set_codegen": 65, "return_typ": [65, 686, 1034, 1035, 1144, 1203, 1241, 1279, 1282, 1284, 1287, 1310, 1773, 1818, 1823], "all_input_nod": 65, "format_nod": 65, "placeholder_nam": 65, "maybe_return_typenam": 65, "autogener": [65, 1881], "impur": 65, "normalized_argu": 65, "arg_typ": 65, "kwarg_typ": 65, "normalize_to_only_use_kwarg": 65, "vararg": 65, "argskwargspair": 65, "bx": 65, "ax": [65, 1213, 1227, 1231, 1242, 1243, 1244, 1272, 1283, 1422, 1432, 1823, 1893], "prev": [65, 1668], "replace_with": 65, "delete_user_cb": 65, "propagate_meta": 65, "replace_input_with": 65, "old_input": 65, "new_input": 65, "create_proxi": 65, "record_stack_trac": 65, "update_arg": 65, "update_kwarg": 65, "autowrap_modul": 65, "autowrap_funct": 65, "create_arg": 65, "create_args_for_root": 65, "root_fn": 65, "is_modul": 65, "introspect": 65, "disallow": [65, 1897, 1905, 1912], "proxy_factory_fn": 65, "attr": [65, 143, 882, 1283, 1728], "attr_val": 65, "parameter_proxy_cach": 65, "module_qualified_nam": [65, 1919], "path_of_modul": 65, "some_hyperparamet": 65, "indexed_item": 65, "proxied_valu": 65, "garbage_collect_valu": 65, "run_nod": 65, "vice": [65, 449, 592, 1107, 1108, 1406, 1875, 1903, 1911], "versa": [65, 449, 592, 1107, 1108, 1406, 1875, 1903, 1911], "negsigmswapinterpret": 65, "call_self": 65, "args_tail": 65, "boxed_run": 65, "args_list": 65, "promptli": [65, 1254], "fetch_args_kwargs_from_env": 65, "map_nodes_to_valu": 65, "initial_env": 65, "enable_io_process": 65, "negsigmswapxform": 65, "w1": 65, "w2": 65, "m1": [65, 1840, 1841], "m2": [65, 1634, 1840, 1841, 1900], "despit": [65, 1197, 1198, 1883], "stack_1": 65, "stack_2": 65, "sum_2": 65, "max_1": 65, "max_2": 65, "add_2": 65, "onnx": [78, 79, 80, 1628, 1629, 1647, 1648, 1649, 1650, 1651, 1652, 1850, 1869, 1900], "opset_vers": [80, 1647, 1893, 1895], "g_cpu": 81, "g_cuda": 81, "bytetensor": [81, 987, 988, 1026, 1027, 1134, 1293, 1300, 1749, 1904, 1912, 1915], "2147483647": 81, "0x8000_0000_0000_0000": [81, 1274, 1904], "0xffff_ffff_ffff_ffff": [81, 1274, 1904], "random_devic": 81, "1516516984916": 81, "new_stat": [81, 1026, 1027, 1300, 1749, 1904], "void": [81, 957, 999, 1878, 1885], "g_cpu_oth": 81, "abs_": [85, 1853, 1868, 1915], "acosh": [89, 115, 856, 1851, 1853, 1868, 1895], "batch1": [92, 93, 144, 145, 675, 910, 1853], "batch2": [92, 93, 144, 145, 162, 675, 910, 1853], "tensor1": [94, 95, 96, 97, 676, 677, 1276, 1725, 1853], "tensor2": [94, 95, 96, 97, 306, 396, 676, 677, 1276, 1725, 1853], "mat1": [98, 99, 543, 678, 1146, 1202, 1286, 1774, 1777, 1778, 1792, 1851, 1853], "mat2": [98, 99, 405, 543, 678, 922, 1146, 1202, 1286, 1774, 1777, 1778, 1792, 1851, 1853], "mat": [100, 101, 529, 679, 1306, 1706, 1771, 1774, 1792, 1853, 1914], "vec1": [102, 103, 680, 1853], "vec2": [102, 103, 280, 452, 680, 1128, 1688, 1853], "keepdim": [105, 107, 108, 109, 111, 127, 128, 346, 384, 399, 401, 402, 403, 406, 420, 421, 422, 423, 444, 461, 470, 544, 554, 604, 682, 684, 685, 686, 688, 863, 864, 1203, 1234, 1238, 1251, 1269, 1279, 1281, 1282, 1284, 1287, 1309, 1310, 1311, 1312, 1423, 1552, 1641, 1697, 1700, 1794, 1795, 1799, 1837, 1838, 1851, 1853, 1868, 1910], "rtol": [106, 336, 683, 897, 898, 1171, 1236, 1239, 1652, 1852, 1853, 1916], "atol": [106, 336, 683, 897, 898, 1171, 1236, 1239, 1248, 1652, 1852, 1853, 1880, 1916], "08": [106, 336, 683, 920, 1171, 1228, 1349, 1428, 1556, 1656, 1657, 1658, 1660, 1666, 1667, 1670, 1683, 1755, 1853], "equal_nan": [106, 336, 683, 1171, 1853, 1916], "arcco": [114, 1853, 1895, 1916], "acosh_": [116, 1853, 1868], "arccosh": [116, 1853, 1895], "arcsin": [118, 870, 1853, 1895, 1909], "arcsinh": [120, 1853, 1895], "atan2_": [123, 1853, 1868], "arctan2": [123, 1853, 1895], "arctan": [124, 1853, 1895], "arctanh": [126, 1853, 1895], "cl": [132, 1880, 1900, 1905, 1920], "asinh": [136, 858, 1851, 1853, 1868, 1895, 1909], "atan": [140, 620, 621, 859, 1851, 1853, 1868, 1895, 1909], "atanh": [142, 861, 1851, 1853, 1868, 1895, 1909], "wrt": [143, 897, 898], "60521": [143, 882], "issuecom": [143, 882], "867061780": [143, 882], "texttt": [146, 147, 683, 1171, 1322, 1916], "bernoulli": [147, 749, 1326, 1352, 1353, 1354, 1355, 1359, 1366, 1384, 1498, 1499, 1500, 1501, 1506, 1850, 1853, 1868, 1895, 1917], "preserve_format": [148, 163, 165, 168, 171, 172, 173, 182, 199, 202, 232, 259, 289, 317, 385, 514, 569, 939, 1057, 1110, 1646, 1709, 1711, 1713, 1848, 1912], "minlength": [149, 913, 1853], "bitwise_and": [151, 1851, 1853, 1895], "bitwise_left_shift": [153, 1853, 1895], "bitwise_not": [155, 1851, 1853, 1868, 1895], "bitwise_or": [157, 1851, 1853, 1895], "bitwise_right_shift": [159, 1853, 1895], "bitwise_xor": [161, 1851, 1853, 1895], "uint8": [165, 234, 606, 682, 688, 1107, 1698, 1701, 1702, 1725, 1900, 1911, 1912, 1914, 1915, 1921], "cauchi": [166, 1850, 1875, 1883, 1895, 1917], "dfrac": [166, 369, 597, 1349, 1495, 1602, 1635, 1638], "complex32": [172, 1342, 1343, 1344, 1488, 1489, 1490, 1650, 1915, 1916], "int8": [173, 439, 718, 914, 915, 916, 917, 918, 919, 1107, 1263, 1264, 1265, 1266, 1900, 1903, 1911, 1912, 1915, 1921], "input2": [176, 450, 451, 507, 749, 935, 1335, 1348, 1349, 1406, 1423, 1484, 1494, 1495, 1536, 1853, 1874, 1893], "clamp_": [181, 1853, 1868], "uncoalesc": [183, 320, 1785], "coo": [183, 315, 320, 334, 603, 1146, 1774, 1777, 1782, 1783, 1784, 1785, 1786, 1787, 1850, 1862, 1912, 1916], "inttensor": [184, 201, 1156, 1271, 1272, 1357, 1912, 1915], "csr": [184, 201, 335, 572, 577, 1358, 1774, 1777, 1778, 1784, 1787, 1862, 1916], "sparse_csr": [184, 201, 572, 577, 1777, 1778, 1780, 1784, 1787, 1909], "nnz": [184, 533, 572, 573, 574, 576, 577, 897, 1314, 1775, 1777, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1909], "mkl": [184, 201, 1850, 1877, 1892, 1895, 1909], "routin": [184, 201, 865, 934, 1254, 1773, 1800, 1909], "downcast": [184, 201], "to_sparse_csr": [184, 201, 573, 574, 1777, 1778, 1853, 1895, 1909], "conj_phys": [187, 947, 1851, 1853, 1895, 1909], "contiguous_format": [188, 323, 489, 490, 1056, 1594, 1912], "non_block": [189, 202, 569, 592, 1182, 1414, 1627, 1851, 1853, 1878, 1911], "copysign": [191, 1853, 1895], "fweight": [198, 954, 1853], "aweight": [198, 954, 1853], "sparse_dim": [211, 534, 535, 1774, 1777, 1781, 1785, 1853, 1895, 1909], "resize_": [214, 490, 1112, 1203, 1852, 1853, 1854, 1868, 1902, 1911], "resize_as_": [214, 1853, 1868, 1909], "set_": [214, 489, 1853], "transpose_": [214, 1853, 1909], "zero_": [214, 1227, 1504, 1853, 1868, 1869, 1886, 1909], "dim1": [218, 220, 221, 558, 581, 582, 1043, 1045, 1046, 1216, 1803, 1820, 1853], "dim2": [218, 220, 221, 1043, 1045, 1046, 1216, 1853], "digamma": [224, 1851, 1853, 1868, 1895, 1910], "rounding_mod": [227, 228, 229, 230, 1050, 1051, 1100, 1103, 1719, 1828, 1853], "split_size_or_sect": [233, 294, 608, 1788], "eq": [236, 1851, 1853, 1868, 1895], "erf": [239, 628, 629, 1851, 1853, 1868, 1895, 1909, 1910], "erfc": [241, 630, 631, 1851, 1853, 1868, 1895, 1910], "front": [246, 1254, 1417, 1869, 1881], "lambd": [250, 290, 1370, 1451, 1516, 1572, 1653, 1853], "fill_valu": [252, 437, 1109, 1110, 1337, 1851, 1853, 1878], "tall": [252, 1240, 1245, 1880], "start_dim": [255, 1094, 1360, 1853], "end_dim": [255, 1094, 1360, 1853], "float_pow": [261, 1853, 1895], "floor_divid": [265, 1050, 1853, 1895, 1909], "divisor": [268, 269, 479, 480, 757, 758, 1050, 1100, 1103, 1125, 1328, 1329, 1361, 1465, 1481, 1482, 1719, 1828], "fmod": [269, 1719, 1851, 1853, 1895], "mantissa": [272, 472, 1105, 1205, 1853, 1878, 1889], "gcd": [275, 1851, 1853, 1895], "ge": [277, 1137, 1275, 1371, 1372, 1517, 1518, 1851, 1853, 1868, 1895], "ordin": [281, 1782, 1783, 1784, 1786, 1787, 1912], "greater_equ": [286, 1853, 1895], "gt": [288, 1136, 1851, 1853, 1868, 1883, 1895], "hypot": [296, 1851, 1853, 1895], "i0": [298, 1201, 1763, 1853, 1895, 1910], "igamma": [300, 1851, 1853, 1895], "igammac": [302, 1851, 1853, 1895], "3100": [303, 474, 1152, 1717], "3553j": [303, 474, 1152, 1717], "5445": [303, 474, 1152, 1717], "7896j": [303, 474, 1152, 1717], "6492": [303, 474, 1152, 1717], "0633j": [303, 474, 1152, 1717], "0638": [303, 474, 1152, 1717], "8119j": [303, 474, 1152, 1717], "3553": [303, 1152], "7896": [303, 1152], "0633": [303, 1152, 1228, 1870], "8119": [303, 1152], "index_add_": [304, 887, 1153, 1154, 1853, 1890], "index_copy_": [306, 1853], "index_fill_": [308, 1853, 1868], "index_put_": [310, 1853], "include_self": [313, 506, 507, 1155, 1734, 1851, 1853], "identit": 313, "amax": [313, 507, 685, 686, 1777, 1851, 1853, 1895], "amin": [313, 507, 684, 686, 1777, 1851, 1853, 1895], "fill_": [313, 1182, 1207, 1414, 1720, 1853, 1868, 1886, 1911], "72": [313, 606, 1135], "uint8_t": [318, 1650], "retain_grad": [327, 1853, 1875, 1895], "n_fft": [343, 545, 1179, 1796, 1853], "hop_length": [343, 545, 1179, 1796, 1853], "win_length": [343, 545, 1179, 1796, 1853], "center": [343, 545, 768, 774, 1075, 1179, 1478, 1513, 1524, 1582, 1667, 1689, 1757, 1796, 1853, 1875, 1895, 1914], "onesid": [343, 545, 1179, 1796, 1851, 1853], "return_complex": [343, 545, 1179, 1796, 1853], "element_s": [345, 426, 1853, 1868, 1895, 1911], "lcm": [348, 1853, 1895], "ldexp": [350, 1105, 1853, 1895], "le": [352, 1209, 1371, 1372, 1517, 1518, 1851, 1853, 1868, 1895, 1916], "lerp": [354, 1853, 1895], "less_equ": [358, 1853, 1895], "lgamma": [360, 640, 641, 1851, 1853, 1895], "ln": [369, 1210, 1910], "logical_and": [375, 1851, 1853, 1895], "logical_not": [377, 1851, 1853, 1868, 1870, 1895], "logical_or": [379, 1851, 1853, 1895], "logical_xor": [381, 1853, 1895], "pivot": [388, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1271, 1272, 1273, 1699, 1853], "get_info": [388, 1271], "lu_data": [389, 1272, 1273, 1853], "lu_pivot": [389, 1272, 1273, 1853], "masked_fill_": [391, 1853, 1868, 1869], "booltensor": [392, 394, 724, 1275, 1457, 1845, 1912, 1915], "masked_scatter_": [393, 1853], "mvlgamma": [417, 1853, 1895], "posinf": [418, 419, 1308, 1853], "neginf": [418, 419, 1308, 1853], "nan_to_num": [419, 1853, 1895], "interpol": [422, 470, 774, 775, 776, 808, 1207, 1311, 1466, 1467, 1468, 1478, 1513, 1582, 1583, 1584, 1700, 1835, 1853, 1902], "ne": [430, 1602, 1635, 1643, 1851, 1853, 1868, 1895], "8182e": 436, "5765e": 436, "41": [436, 1058, 1240, 1585, 1634, 1699], "0545e": 436, "0949e": 436, "4842e": [436, 1058], "0000e": [436, 1058, 1098, 1259, 1268, 1308, 1634, 1755, 1757, 1758, 1763, 1764], "00": [436, 1058, 1098, 1259, 1268, 1308, 1634, 1651, 1755, 1757, 1758, 1763, 1764, 1852, 1893], "141592": [437, 1109], "1416": [437, 1039, 1109, 1814], "from_numpi": [439, 868, 869, 1814], "array_lik": [439, 868, 1782, 1783, 1784, 1785, 1786, 1787, 1814, 1870], "nextaft": [442, 1851, 1853, 1895], "fro": [444, 1213, 1234, 1238, 1251, 1612, 1621, 1641, 1853], "not_equ": [447, 1853, 1895], "resolve_conj": [449, 947, 1853, 1895], "resolve_neg": [449, 1853, 1895], "input3": [451, 1853], "transpos": [451, 582, 583, 606, 681, 730, 731, 732, 935, 1055, 1122, 1211, 1212, 1218, 1221, 1224, 1231, 1242, 1245, 1345, 1346, 1347, 1465, 1491, 1492, 1493, 1563, 1601, 1630, 1687, 1800, 1802, 1803, 1809, 1823, 1851, 1853, 1868, 1870, 1875, 1889, 1893, 1895, 1902, 1909, 1913, 1915], "polygamma": [457, 1853, 1895, 1910], "q_per_channel_axi": [464, 465, 1853, 1895], "zero_point": [465, 467, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 759, 761, 762, 763, 764, 766, 769, 770, 788, 791, 808, 809, 810, 811, 814, 841, 1069, 1070, 1701, 1702, 1703, 1704, 1705, 1853, 1900, 1901], "qtensor": [469, 1853], "uniform": [472, 597, 912, 1350, 1432, 1496, 1708, 1709, 1757, 1850, 1851, 1873, 1895, 1917], "queu": [477, 962, 1878], "life": [477, 959], "cycl": [477, 882, 959, 1675, 1681, 1875, 1899], "unexpectedli": [477, 1915], "maxnorm": [481, 482, 1720, 1853], "repeat_interleav": [483, 1835, 1853, 1895, 1902], "output_s": [484, 730, 731, 732, 755, 756, 1319, 1320, 1321, 1323, 1324, 1325, 1346, 1361, 1362, 1363, 1410, 1411, 1412, 1465, 1472, 1473, 1474, 1475, 1476, 1477, 1507, 1508, 1509, 1540, 1541, 1542, 1721, 1851, 1853, 1870], "is_leaf": [485, 1853, 1868, 1870, 1895], "saved_weight": 486, "loaded_weight": 486, "5503": 486, "4926": [486, 1886], "1158": 486, "8303": 486, "1007": 486, "9853": 486, "2316": 486, "6606": 486, "resiz": [489, 490, 513, 534, 535, 1107, 1108, 1112, 1466, 1513, 1524, 1851, 1853, 1868, 1895, 1911], "shift": [495, 915, 918, 1075, 1082, 1326, 1332, 1333, 1334, 1359, 1453, 1506, 1726, 1853, 1856], "decim": [497, 498, 1728, 1853, 1889, 1921], "scatter_": [502, 505, 1732, 1853], "scatter_add_": [503, 504, 1733, 1835, 1853], "scatter_reduce_": [503, 506, 1734, 1853], "4600": 503, "2300": 503, "scatter_reduc": [507, 1835, 1851, 1853, 1895], "sgn": [512, 1104, 1753, 1853, 1868, 1870, 1895, 1909], "int16": [514, 1107, 1264, 1911, 1912, 1915, 1921], "dense_dim": [532, 534, 535, 572, 573, 574, 576, 577, 1785, 1853, 1895, 1909], "nse": [533, 1909], "randint": [533, 913, 954, 1098, 1287, 1337, 1463, 1496, 1497, 1781, 1853, 1857, 1869, 1895, 1914, 1917], "6550": 533, "2397": 533, "1611": 533, "0779": [533, 1218, 1696, 1845], "2326": 533, "0558": 533, "4711": 533, "9678": 533, "5138": 533, "0411": 533, "9417": 533, "5158": 533, "0793": 533, "0036": [533, 1279], "2569": 533, "1055": 533, "sparse_coo": [533, 572, 1314, 1777, 1780, 1781, 1785, 1909, 1912], "split_siz": [536, 1788, 1853], "squeez": [542, 682, 684, 685, 686, 688, 1203, 1269, 1279, 1281, 1282, 1284, 1287, 1309, 1312, 1495, 1697, 1781, 1794, 1795, 1799, 1837, 1838, 1851, 1853, 1868, 1893, 1895, 1902, 1913], "pad_mod": [545, 1796, 1853], "typedstorag": [546, 1850, 1911], "untypedstorag": [546, 602, 1850, 1911], "untyped_storag": 546, "compute_uv": [556, 1245, 1246, 1800, 1853], "axis0": [557, 1802, 1853], "axis1": [557, 1802, 1853], "dim0": [558, 581, 582, 1803, 1820, 1853], "indices_or_sect": [567, 1053, 1145, 1815, 1843], "rep": 568, "5044": 569, "0005": [569, 1679, 1685], "3310": 569, "0584": [569, 1800], "cuda0": [569, 1878, 1884, 1915], "masked_grad": [570, 1853], "sparse_mask": [570, 1853, 1895], "mkldnn": [571, 1191, 1850, 1895], "sparsedim": 572, "blocksiz": [572, 573, 574, 1782, 1783, 1784, 1853, 1909], "sparse_csc": [572, 576, 1780, 1784, 1786, 1909], "sparse_bsr": [572, 574, 1783, 1784, 1909], "sparse_bsc": [572, 573, 1782, 1784, 1909], "bsr": [572, 574, 1783, 1784, 1916], "bsc": [572, 573, 1782, 1784, 1916], "csc": [572, 576, 1784, 1786, 1916], "minu": [572, 573, 574, 576, 577, 1910], "crow_indic": [572, 574, 577, 1775, 1777, 1778, 1780, 1783, 1784, 1787, 1853, 1895, 1909, 1916], "col_indic": [572, 574, 577, 1777, 1778, 1780, 1783, 1784, 1787, 1853, 1895, 1909, 1916], "sparsecsr": [572, 1820, 1909], "row_indic": [573, 576, 1782, 1786, 1853, 1895, 1909, 1916], "ccol_indic": [573, 576, 1782, 1786, 1853, 1895, 1909, 1916], "_nnz": [575, 576, 577, 1895], "012766935862600803": 578, "5415473580360413": 578, "08909505605697632": 578, "7729271650314331": 578, "unitriangular": [583, 1244, 1823, 1853], "tril": [585, 1563, 1853, 1895], "triu": [587, 1606, 1823, 1853, 1893, 1895], "trunc": [591, 666, 667, 676, 1050, 1093, 1100, 1103, 1728, 1851, 1853, 1868, 1895, 1909], "sizedim": 596, "return_invers": [598, 599, 1832, 1833, 1853], "return_count": [598, 599, 1832, 1833, 1853], "unsqueez": [601, 1075, 1202, 1242, 1357, 1433, 1606, 1817, 1851, 1853, 1880, 1895, 1902, 1909, 1913, 1914], "subspac": [606, 1245, 1420, 1689, 1800, 1801], "span": [606, 1016, 1017, 1350, 1800, 1899, 1905], "foral": 606, "proportion": [606, 774, 1466, 1582], "met": [606, 1221, 1228, 1229, 1240, 1254, 1461], "9482": [606, 1159], "0310": 606, "4999": 606, "5316": 606, "1520": 606, "7472": 606, "5617": 606, "8649": 606, "4724": [606, 1886], "0334": 606, "2976": 606, "8499": 606, "2109": 606, "9913": 606, "9607": 606, "6123": 606, "1064483442": 606, "1124191867": 606, "1069546515": 606, "1089989247": 606, "1105482831": 606, "1061112040": 606, "1057999968": 606, "1084397505": 606, "1071760287": 606, "1123489973": 606, "1097310419": 606, "1084649136": 606, "1101533110": 606, "1073668768": 606, "1082790149": 606, "1088634448": 606, "1000000000": 606, "0047": 606, "0310j": 606, "5316j": 606, "7472j": 606, "8649j": 606, "0334j": 606, "8499j": 606, "9913j": 606, "6123j": 606, "202": 606, "154": [606, 1892], "59": [606, 1825, 1827], "182": 606, "243": [606, 1179, 1800], "253": 606, "188": 606, "252": [606, 1892], "191": 606, "63": [606, 1892, 1900], "240": 606, "227": 606, "165": 606, "190": 606, "128": [606, 709, 717, 718, 745, 753, 783, 808, 809, 1335, 1349, 1376, 1401, 1423, 1462, 1463, 1495, 1563, 1869, 1870, 1900, 1902, 1903, 1905, 1912, 1915], "146": 606, "106": 606, "205": 606, "206": 606, "189": 606, "95": [606, 1677, 1680, 1681], "147": 606, "89": [606, 1707], "43": 606, "87": 606, "235": 606, "226": 606, "254": [606, 1892], "111": [606, 1651, 1893], "117": 606, "177": 606, "xlogi": [611, 1853, 1895, 1910], "aot_graph": [669, 1861], "aot_joint_graph": [669, 1861], "ddp_graph": [669, 1861], "graph_cod": [669, 1861], "toggl": [669, 1878], "torch_log": [669, 1861], "supress": 669, "silenc": 669, "lowest": [669, 932, 1308, 1611, 1612, 1620, 1621, 1710, 1711, 1880, 1916], "notset": 669, "joint": [669, 1861], "ddpoptim": [669, 1861], "unregist": [669, 1861, 1865, 1893], "3348": 672, "5889": 672, "1584": 672, "2294": [672, 1281], "2004": 672, "3690": 672, "7298": [672, 1718], "hyperbol": [673, 871, 874, 952, 1454, 1768, 1813], "uniform_": [673, 874, 912, 1850, 1853, 1868, 1873, 1880, 1910, 1917], "3192": 673, "9915": 673, "9674": 673, "7151": 673, "7791": 673, "3120": [673, 949], "2979": 673, "1341": 673, "_i": [674, 675, 676, 677, 678, 910, 912, 915, 918, 922, 937, 1050, 1100, 1205, 1207, 1303, 1462, 1692, 1696, 1715, 1751, 1797, 1845, 1910], "0202": 674, "0985": 674, "3506": [674, 1271], "6056": 674, "19": [674, 735, 935, 1411, 1852, 1893, 1909], "3944": 674, "9732": 674, "3497": 674, "6245": [674, 1213], "4022": [674, 1037, 1800], "3743": 674, "7724": 674, "5811": 674, "8017": 674, "7695": 674, "3930": 674, "3672": [674, 955, 1214], "1450": [674, 1781], "6971": 674, "0736": [674, 1886], "0994": 674, "3216": 674, "7845": 674, "1610": 674, "1868": 674, "4090": 674, "9902": [674, 955, 1214], "3667": [674, 949], "3925": 674, "6147": 674, "sum_": [675, 1179, 1233, 1250, 1327, 1328, 1329, 1342, 1343, 1344, 1350, 1382, 1383, 1402, 1417, 1421, 1423, 1794, 1795, 1796, 1816, 1821, 1837, 1838, 1839, 1910], "mathbin": [675, 678, 679, 910, 922, 1778], "doubletensor": [675, 676, 677, 678, 679, 910, 1741, 1912, 1915], "tensorfloat32": [675, 678, 910, 922, 1276, 1286, 1342, 1343, 1344, 1345, 1346, 1347, 1401, 1488, 1489, 1490, 1491, 1492, 1493, 1530, 1743, 1878, 1889], "rocm": [675, 678, 910, 922, 1276, 1286, 1342, 1343, 1344, 1345, 1346, 1347, 1367, 1385, 1401, 1850], "6311": 675, "0503": 675, "9768": [675, 1886], "0362": 675, "1653": 675, "8185": 675, "4255": [675, 1303], "6760": 675, "9453": 675, "5743": 675, "8202": 675, "3691": 675, "0943": 675, "1109": [675, 1368, 1764], "4730": [675, 1816], "histor": [676, 1012, 1354, 1877, 1886, 1891], "t1": [676, 677, 869, 1135, 1594, 1854, 1905, 1906], "2312": [676, 1781], "6496": 676, "1312": 676, "0428": 676, "4292": 676, "1030": 676, "5369": 676, "9829": 676, "0430": 676, "8635": 677, "6391": 677, "6174": 677, "7617": 677, "5879": 677, "7388": 677, "8353": 677, "6249": 677, "6511": 677, "8716": 678, "4671": 678, "3746": 678, "7573": 678, "9555": 678, "8681": 678, "3768": 679, "5565": 679, "otim": [680, 1202, 1365, 1512], "conj": [681, 948, 1071, 1072, 1074, 1076, 1083, 1085, 1089, 1090, 1092, 1211, 1212, 1218, 1220, 1239, 1723, 1724, 1851, 1853, 1883, 1895, 1915], "mh": [681, 933, 1218, 1800, 1853, 1895, 1913, 1915], "lvert": [683, 1171, 1462, 1549, 1916], "rvert": [683, 1171, 1916], "leq": [683, 911, 912, 949, 1073, 1075, 1171, 1202, 1206, 1221, 1227, 1337, 1356, 1417, 1419, 1421, 1497, 1548, 1551, 1754, 1796, 1873, 1910], "elementwis": [683, 949, 971, 998, 999, 1098, 1100, 1318, 1377, 1378, 1379, 1451, 1572, 1836, 1855, 1870, 1883, 1910], "07": [683, 808, 809, 810, 811, 814, 933, 934, 1058, 1219, 1222, 1227, 1239, 1240, 1246, 1269, 1272, 1601, 1652, 1659, 1758, 1763, 1800, 1893], "09": [683, 1659, 1671, 1916], "8177": 684, "4878": 684, "2491": 684, "9130": 684, "7158": 684, "1775": 684, "0992": 684, "4817": 684, "0053": 684, "0164": 684, "3738": 684, "0507": [684, 1893], "9700": 684, "1106": 684, "0318": 684, "0816": [684, 1271], "6451": 685, "4866": 685, "2987": 685, "3312": 685, "5744": 685, "2980": [685, 1870], "8397": 685, "2713": 685, "9128": 685, "9214": 685, "7268": 685, "2995": 685, "9023": [685, 1212], "4853": 685, "9075": 685, "6165": 685, "180": [687, 1039, 1707], "14159": [687, 1814], "135": 687, "45": [687, 1333, 1334, 1378, 1379, 1453, 1634, 1893], "ao": [689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1900, 1901, 1902], "batch_norm": [689, 690, 1191, 1853, 1895], "3d": [690, 693, 696, 724, 729, 732, 756, 758, 763, 768, 1283, 1321, 1325, 1329, 1332, 1334, 1344, 1347, 1354, 1355, 1361, 1363, 1377, 1379, 1409, 1420, 1466, 1474, 1477, 1478, 1482, 1490, 1493, 1501, 1507, 1509, 1524, 1539, 1551, 1582, 1870, 1889, 1900, 1909, 1914], "bn": [691, 692, 693, 694, 695, 696, 803, 849, 1055, 1191, 1891, 1896, 1900, 1901], "qat": [701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 719, 720, 721, 722, 781, 782, 835, 1900, 1901, 1902], "in_channel": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 1191, 1342, 1343, 1344, 1345, 1346, 1347, 1390, 1391, 1392, 1393, 1394, 1395], "out_channel": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 1191, 1342, 1343, 1344, 1345, 1346, 1347, 1390, 1391, 1392, 1393, 1394, 1395], "kernel_s": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 757, 758, 771, 772, 1182, 1191, 1327, 1328, 1329, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1362, 1363, 1382, 1383, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1465, 1480, 1481, 1482, 1491, 1492, 1493, 1507, 1508, 1509, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1581, 1704, 1705, 1851, 1853, 1914], "dilat": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 761, 762, 763, 771, 772, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1465, 1488, 1489, 1490, 1491, 1492, 1493, 1507, 1537, 1538, 1539, 1581, 1704, 1705, 1851, 1853, 1893], "padding_mod": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 761, 762, 763, 1342, 1343, 1344, 1345, 1346, 1347, 1390, 1391, 1392, 1393, 1394, 1395, 1513, 1851, 1853], "ep": [701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 738, 740, 741, 742, 743, 784, 808, 809, 810, 811, 814, 815, 897, 898, 1191, 1267, 1318, 1332, 1333, 1334, 1349, 1368, 1369, 1377, 1378, 1379, 1386, 1387, 1388, 1389, 1396, 1397, 1398, 1423, 1428, 1453, 1457, 1459, 1461, 1462, 1483, 1495, 1510, 1514, 1515, 1523, 1527, 1549, 1552, 1556, 1579, 1602, 1635, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1670, 1683, 1703, 1851, 1853, 1880, 1883, 1910, 1921], "momentum": [701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 740, 741, 742, 1332, 1333, 1334, 1377, 1378, 1379, 1387, 1388, 1389, 1396, 1397, 1398, 1453, 1483, 1523, 1660, 1667, 1669, 1675, 1681, 1683, 1851, 1853, 1886, 1896], "freeze_bn": [701, 702, 703, 704, 705, 706], "qconfig": [701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 777, 778, 780, 783, 784, 785, 786, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 850, 851, 1919], "batchnorm1d": [701, 704, 1387, 1453, 1483, 1891, 1902], "fakequant": [701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 791, 851], "weight_fake_qu": [701, 702, 703, 704, 705, 706, 707, 708, 719, 720], "quant": [701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 779, 781, 782, 827, 850, 851, 1069, 1070, 1900, 1901], "batchnorm3d": [703, 706, 708, 713, 1389, 1453, 1483, 1902], "num_featur": [712, 713, 725, 726, 740, 741, 742, 1182, 1332, 1333, 1334, 1377, 1378, 1379, 1387, 1388, 1389, 1396, 1397, 1398, 1414, 1453, 1515, 1886], "qint8": [717, 718, 745, 750, 753, 754, 761, 762, 763, 770, 781, 783, 788, 809, 830, 847, 848, 850, 851, 1650, 1701, 1702, 1900, 1902, 1903, 1911, 1915, 1916], "highlight": [719, 720, 1855], "from_float": [721, 727, 728, 729, 734, 735, 745, 753, 786, 806, 812, 815, 827, 1900], "qparams_dict": [721, 727, 728, 729, 753], "hidden_s": [723, 749, 750, 754, 1366, 1367, 1384, 1385, 1429, 1430, 1431, 1853], "num_lay": [723, 749, 1366, 1384, 1429, 1430, 1458, 1460, 1853, 1886], "bidirect": [723, 749, 1366, 1384, 1429, 1430, 1853], "_lstmlayer": 723, "nnqa": 723, "h0": [723, 749, 751, 1366, 1384, 1429], "hn": [723, 749, 751, 1366, 1367, 1384, 1429], "cn": [723, 751, 1182, 1384], "weight_ih": [723, 1367, 1385, 1431], "weight_hh": [723, 1367, 1385, 1431], "dequant": [724, 777, 779, 781, 782, 788, 790, 850, 1853, 1895, 1901, 1903, 1916, 1918], "mha": [724, 1420], "conver": 724, "key_padding_mask": [724, 1420, 1853], "need_weight": [724, 1420, 1853], "attn_mask": [724, 1420, 1563, 1853], "average_attn_weight": [724, 1420, 1853], "is_caus": [724, 1420, 1460, 1461, 1563, 1853], "attn_output_weight": [724, 1420], "unmask": [724, 1457], "causal": [724, 1420, 1458, 1459, 1460, 1461, 1563], "attn_weight": [724, 1420, 1563], "attn_output": [724, 1420], "quint8": [727, 728, 729, 730, 731, 732, 734, 735, 745, 761, 762, 763, 770, 781, 783, 788, 808, 809, 810, 811, 814, 816, 848, 850, 1650, 1701, 1702, 1703, 1704, 1705, 1900, 1902, 1903, 1911, 1915, 1916], "learnabl": [727, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 1332, 1333, 1334, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1357, 1358, 1366, 1367, 1369, 1377, 1378, 1379, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1422, 1429, 1431, 1453, 1505, 1557, 1886], "q_input": [727, 728, 729, 730, 731, 732, 761, 762, 763], "quantize_per_tensor": [727, 728, 729, 730, 731, 732, 745, 746, 747, 761, 762, 763, 1703, 1704, 1705, 1853, 1895, 1900], "unequ": [728, 729, 730, 731, 732, 1343, 1344, 1346, 1347], "50": [728, 730, 731, 732, 761, 813, 1237, 1287, 1328, 1329, 1337, 1342, 1343, 1344, 1346, 1347, 1362, 1363, 1382, 1383, 1407, 1408, 1409, 1464, 1490, 1491, 1493, 1497, 1508, 1509, 1668, 1811, 1870], "56": 729, "output_pad": [730, 731, 732, 1345, 1346, 1347, 1393, 1394, 1395, 1491, 1492, 1493, 1851, 1853], "qnnpack": [730, 731, 745, 753, 844, 845, 848, 850, 851, 1900, 1902], "convtranspose2d": [730, 1394, 1492, 1835, 1902], "nnq": [730, 731, 732, 777, 778, 779, 853, 1900], "downsampl": [730, 731, 732, 1346, 1466, 1478, 1513, 1524], "upsampl": [730, 731, 732, 768, 775, 776, 808, 1346, 1467, 1468, 1478, 1513, 1524, 1583, 1584], "fbgemm": [731, 732, 745, 753, 822, 844, 845, 848, 850, 851, 1900, 1901], "cubic": [732, 1363, 1509, 1513], "num_embed": [734, 735, 1357, 1358, 1505], "embedding_dim": [734, 735, 1357, 1358, 1386, 1504, 1505], "padding_idx": [734, 1357, 1358, 1504, 1505, 1851, 1853], "scale_grad_by_freq": [734, 735, 1357, 1358, 1504, 1505, 1851, 1853], "overwritten": [734, 735, 745, 753, 786, 830, 850, 1875, 1916], "_embed": [734, 735], "_dim": [734, 735, 1357], "include_last_offset": [735, 1358, 1505, 1853], "embedding_bag": [735, 1853, 1895], "floatfunct": [736, 1900], "activation_post_process": [736, 788, 1900], "add_relu": [736, 737, 746, 1863, 1895, 1918], "add_scalar": [736, 737, 746, 1895, 1914, 1918], "mul_scalar": [736, 737, 746, 1895, 1918], "collector": 737, "f_add": 737, "num_channel": [738, 1369, 1869], "normalized_shap": [743, 1386, 1527, 1851, 1853, 1870], "elementwise_affin": [743, 1386], "negative_slop": [744, 769, 1400, 1528, 1529, 1851, 1853, 1873], "slope": [744, 769, 1400, 1445, 1873], "bias_": [745, 753], "_featur": [745, 753, 770, 1322, 1335, 1399, 1401, 1484, 1530], "from_refer": [745, 753], "ref_qlinear": [745, 753], "output_scal": [745, 748, 1703, 1853], "output_zero_point": [745, 748, 1703, 1853], "q_add": 746, "qint32": [746, 747, 1650, 1701, 1702, 1900, 1903, 1911, 1915, 1916], "x_0": [747, 1821], "gate": [749, 750, 1365, 1366, 1367, 1384, 1443, 1512, 1566], "r_t": [749, 1366, 1666], "w_": [749, 1320, 1321, 1324, 1325, 1328, 1329, 1331, 1339, 1340, 1341, 1343, 1344, 1346, 1347, 1350, 1362, 1363, 1366, 1367, 1383, 1384, 1385, 1408, 1409, 1411, 1412, 1421, 1426, 1427, 1429, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1466, 1467, 1468, 1469, 1470, 1471, 1509, 1513], "x_t": [749, 883, 885, 1332, 1333, 1334, 1366, 1377, 1378, 1379, 1384, 1429, 1453, 1654], "b_": [749, 1366, 1367, 1384, 1385, 1402, 1429, 1431, 1816, 1909], "hr": [749, 1366, 1367, 1384, 1883], "h_": [749, 1320, 1321, 1324, 1325, 1328, 1329, 1335, 1340, 1341, 1343, 1344, 1346, 1347, 1362, 1363, 1366, 1367, 1383, 1384, 1401, 1408, 1409, 1410, 1411, 1412, 1426, 1427, 1429, 1431, 1436, 1437, 1439, 1440, 1466, 1467, 1468, 1470, 1471, 1484, 1509, 1513], "z_t": [749, 1366], "iz": [749, 1366, 1367], "hz": [749, 967, 1366, 1367, 1914], "n_t": [749, 1366], "h_t": [749, 1366, 1384, 1429], "hadamard": [749, 1366, 1367, 1384, 1385], "multilay": [749, 1366, 1384], "_t": [749, 1366, 1384, 1667, 1669, 1880, 1896], "b_ih": [749, 1366, 1367, 1384, 1385, 1429, 1431, 1853], "b_hh": [749, 1366, 1367, 1384, 1385, 1429, 1431, 1853], "h_0": [749, 1366, 1384, 1385, 1429], "seq_len": [749, 1366, 1384, 1420, 1429], "pack_padded_sequ": [749, 1366, 1384, 1429, 1627, 1629, 1630, 1882], "num_direct": [749, 1366, 1384, 1429], "h_n": [749, 1366, 1384, 1429], "input1": [749, 1335, 1348, 1349, 1406, 1423, 1484, 1494, 1495, 1536, 1853, 1874, 1893], "_size": [749, 1319, 1320, 1321, 1323, 1324, 1325, 1327, 1328, 1329, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1362, 1363, 1366, 1367, 1382, 1383, 1384, 1385, 1407, 1408, 1409, 1410, 1411, 1412, 1429, 1431, 1465, 1509], "_layer": [749, 1366, 1384, 1429], "_direct": 749, "output1": [749, 1322, 1874, 1893], "output2": [749, 1322], "weight_ih_l": [749, 1366, 1384, 1429], "w_ir": [749, 1366], "w_iz": [749, 1366], "w_in": [749, 1366], "weight_hh_l": [749, 1366, 1384, 1429], "w_hr": [749, 1366], "w_hz": [749, 1366], "w_hn": [749, 1366], "bias_ih_l": [749, 1366, 1384, 1429], "b_ir": [749, 1366], "b_iz": [749, 1366], "b_in": [749, 1366], "bias_hh_l": [749, 1366, 1384, 1429], "b_hr": [749, 1366], "b_hz": [749, 1366], "b_hn": [749, 1366], "mathcal": [749, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1357, 1358, 1366, 1367, 1384, 1385, 1399, 1401, 1429, 1431, 1432, 1453, 1712, 1873, 1883], "subtli": [749, 1366, 1669], "gru": [750, 1367, 1853, 1878, 1895, 1900, 1902], "cell": [750, 752, 754, 1366, 1367, 1384, 1385, 1429, 1431], "hx": [750, 752, 754, 1367, 1385, 1431, 1853], "cx": [752, 1385, 1853], "nonlinear": [754, 1330, 1348, 1374, 1429, 1431, 1441, 1850, 1873, 1909], "elman": [754, 1429, 1431], "adaptiveavgpool2d": [755, 1473, 1835, 1902], "adaptiveavgpool3d": [756, 1474, 1835, 1902], "ceil_mod": [757, 758, 771, 772, 1327, 1328, 1329, 1382, 1383, 1407, 1408, 1409, 1480, 1481, 1482, 1534, 1535, 1537, 1538, 1539, 1704, 1705, 1851, 1853], "count_include_pad": [757, 758, 1327, 1328, 1329, 1480, 1481, 1482, 1851, 1853], "divisor_overrid": [757, 758, 1328, 1329, 1481, 1482, 1851, 1853], "kh": [757, 758, 762, 763, 1328, 1329, 1362, 1363, 1408, 1409, 1481, 1482, 1489, 1490, 1492, 1493, 1508, 1509, 1538, 1539], "kw": [757, 758, 762, 763, 1328, 1329, 1362, 1363, 1408, 1409, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1508, 1509, 1537, 1538, 1539], "sw": [757, 758, 761, 762, 763, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1537, 1538, 1539], "avgpool2d": [757, 1481, 1902], "_channel": [757, 758, 761, 762, 763, 1342, 1343, 1344, 1345, 1346, 1347, 1369, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1537, 1538, 1539, 1905], "ih": [757, 758, 762, 763, 1429, 1431, 1481, 1482, 1489, 1490, 1492, 1493, 1538, 1539], "iw": [757, 758, 761, 762, 763, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1537, 1538, 1539], "padh": [757, 758, 762, 763, 1481, 1482, 1489, 1490, 1492, 1493], "padw": [757, 758, 761, 762, 763, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1492, 1493], "kd": [758, 763, 1329, 1409], "sd": [758, 763], "padd": [758, 763], "formul": [759, 1336, 1356, 1370, 1404, 1450, 1451, 1532, 1549, 1563, 1883, 1909], "min_": [760, 1217, 1218, 1227, 1245, 1800], "max_": [760, 1407, 1408, 1409, 1602, 1635], "convolv": [761, 762, 763, 1342, 1343, 1344, 1345, 1346, 1347, 1390, 1391, 1392, 1393, 1394, 1395, 1488, 1489, 1490, 1491, 1492, 1493], "dw": [761, 762, 763, 1488, 1489, 1490, 1491, 1492, 1493], "qf": [761, 762, 763], "dtype_input": [761, 762, 763], "dtype_filt": [761, 762, 763], "q_filter": [761, 762, 763], "dh": [762, 763, 1489, 1490, 1492, 1493], "dd": 763, "min_val": [767, 1373, 1519, 1520, 1851, 1853], "max_val": [767, 1373, 1519, 1520, 1851, 1853], "scale_factor": [768, 774, 775, 776, 1466, 1467, 1468, 1524, 1563, 1582, 1583, 1584, 1851, 1853], "nearest": [768, 774, 776, 1311, 1466, 1468, 1513, 1524, 1582, 1584, 1700, 1728, 1878], "align_corn": [768, 774, 775, 1466, 1467, 1478, 1513, 1524, 1582, 1583, 1851, 1853], "height": [768, 774, 1328, 1329, 1343, 1344, 1346, 1347, 1383, 1408, 1409, 1421, 1448, 1466, 1524, 1582, 1869], "spatial": [768, 774, 775, 776, 930, 1075, 1333, 1361, 1386, 1426, 1427, 1448, 1465, 1466, 1467, 1468, 1478, 1513, 1524, 1553, 1554, 1555, 1582, 1583, 1584], "pixel": [768, 774, 776, 1343, 1350, 1353, 1354, 1355, 1359, 1421, 1426, 1427, 1466, 1478, 1513, 1524, 1582, 1584], "corner": [768, 774, 921, 1466, 1478, 1513, 1524, 1582], "leakyrelu": [769, 1415, 1528, 1886, 1902], "_slope": [769, 1400, 1528, 1873], "xa": [770, 1231, 1242, 1243, 1244, 1401, 1530], "return_indic": [771, 772, 1323, 1324, 1325, 1362, 1363, 1407, 1408, 1409, 1410, 1411, 1412, 1475, 1476, 1477, 1508, 1509, 1537, 1538, 1539, 1853], "maxpool1d": [771, 1410, 1537, 1540, 1902], "maxpool2d": [772, 1411, 1415, 1538, 1541, 1893, 1902], "linearli": [774, 1119, 1240, 1466, 1582, 1678, 1699, 1882, 1896, 1903], "neighbour": [776, 1402, 1524, 1584], "stub": [777, 778, 1897], "calibr": [777, 778, 786, 827, 828, 846, 848, 850, 1874, 1900, 1901, 1903, 1919], "quantstub": [779, 1900], "dequantstub": [779, 1900], "quantwrapp": 780, "backend_config": [781, 782, 783, 784, 785, 806, 807, 848, 849, 850, 851, 1919], "acycl": [781, 1875], "backendpatternconfig": [781, 850], "dtypeconfig": [781, 782, 784, 850], "observationtyp": [781, 782, 850, 1902], "weighted_int8_dtype_config": [781, 850], "input_dtyp": [781, 783, 850, 1902], "output_dtyp": [781, 783, 850, 1851, 1902], "weight_dtyp": [781, 783, 850, 1902], "bias_dtyp": [781, 783, 1902], "fuse_conv2d_relu": 781, "is_qat": [781, 782], "convrelu2d": [781, 1902], "linear_config": 781, "set_observation_typ": [781, 782, 850], "output_use_different_observer_as_input": [781, 782, 785, 850, 1902], "add_dtype_config": [781, 782, 850], "set_root_modul": [781, 782], "set_qat_modul": [781, 782], "set_reference_quantized_modul": [781, 782], "conv_relu_config": 781, "set_fused_modul": [781, 782], "set_fuser_method": [781, 782], "fused_conv_relu_config": 781, "set_backend_pattern_config": [781, 850], "from_dict": [781, 782, 783, 804, 805, 806, 843], "backend_config_dict": [781, 1900], "set_nam": 781, "to_dict": [781, 782, 783, 804, 805, 806, 843], "backendconfig": [782, 807, 848, 850, 1903], "dtype_config": [782, 1902], "backend_pattern_config_dict": 782, "observation_typ": [782, 1902], "qat_modul": [782, 1902], "reference_quantized_modul": 782, "fused_modul": [782, 1902], "fuser_method": [782, 803, 1902], "pattern_complex_format": 782, "set_dtype_config": 782, "fuse_linear_relu": 782, "linearrelu": [782, 1902], "8bea7180a8ba3c279f2c9b050f2a69a6": 782, "understood": [782, 929], "output_share_observer_with_input": [782, 785, 1902], "renam": [782, 1853, 1868, 1869, 1895], "quantdequantstub": 782, "set_pattern": 782, "is_dynam": [783, 815, 1902], "quant1": 783, "dequant1": 783, "fp32_linear": 783, "quant2": 783, "dequant2": 783, "bracket": [783, 1906], "dtype_config1": 783, "dtype_config2": 783, "dtypewithconstraint": [783, 1902], "quant_min_lower_bound": [783, 784, 1902], "quant_max_upper_bound": [783, 784, 1902], "255": [783, 791, 1069, 1070, 1108, 1513, 1524, 1582, 1900, 1902, 1914], "input_dtype_with_constraint": 783, "scale_min_lower_bound": [783, 784, 1902], "scale_max_upper_bound": [783, 784, 1902], "dtype_config_dict": 783, "bias_typ": [783, 850], "scale_exact_match": [784, 1902], "zero_point_exact_match": [784, 1902], "quant_min": [784, 788, 791, 808, 809, 810, 811, 814, 815, 1069, 1070, 1853, 1900], "quant_max": [784, 788, 791, 808, 809, 810, 811, 814, 815, 1069, 1070, 1853, 1900], "fixedqparamsobserv": 784, "fixedqparamsfakequant": 784, "input_output_not_observ": [785, 1902], "maxpool": [785, 1362, 1363, 1508, 1509, 1893], "remove_qconfig": 786, "is_refer": 786, "convert_custom_config_dict": [786, 804, 1900], "from_observ": [786, 804, 1900], "observed_to_quantized_custom_module_class": [786, 804, 1900], "observedcustommodul": [786, 804, 806, 827, 1900], "quantizedcustommodul": [786, 804], "calib_data": 787, "fake_quant": [788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 851, 1069, 1070, 1919], "movingaverageminmaxobserv": [788, 791, 811], "observer_kwarg": [788, 791], "x_out": [788, 791], "fake_quant_en": 788, "observer_en": 788, "calculate_qparam": [789, 808, 809, 813], "qscheme": [791, 808, 809, 810, 811, 814, 815, 816, 1853, 1895, 1900, 1903, 1916], "fake_qu": [792, 796, 797, 798, 1900], "default_fake_qu": 793, "default_per_channel_weight_fake_qu": 794, "default_weight_fake_qu": 795, "histogram": [796, 808, 820, 1142, 1144, 1853, 1895, 1914], "memoryless": [797, 798], "averaging_const": [797, 798, 810, 811, 1853], "modules_to_fus": 803, "fuser_func": 803, "fuse_known_modul": 803, "fuse_custom_config_dict": [803, 805], "convmodul": 803, "bnmodul": 803, "convbnmodul": 803, "additional_fuser_method_map": 803, "fuse_conv_bn": [803, 1902], "conv1": [803, 1193, 1414, 1442, 1852, 1900, 1914], "bn1": 803, "relu1": [803, 1442, 1585], "fused_m": 803, "custom_config": [804, 805, 806, 807], "convert_fx": [804, 1900, 1919], "convert_custom_config": [804, 848, 1900], "set_observed_to_quantized_map": 804, "set_preserved_attribut": [804, 805, 806], "attr1": [804, 805, 806, 1893], "attr2": [804, 805, 806, 1893], "floatcustommodul": [804, 806], "weight_onli": [804, 848, 1900], "preserved_attribut": [804, 805, 806], "observed_class": [804, 806], "quantized_class": 804, "quant_typ": [804, 806], "quanttyp": [804, 806], "fuse_fx": [805, 1900], "fuse_custom_config": [805, 849], "convertcustomconfig": [805, 848], "prepare_fx": [806, 829, 848, 851, 1900, 1919], "prepare_qat_fx": [806, 848, 1900], "prepare_custom_config": [806, 807, 850, 851, 1900], "set_standalone_module_nam": 806, "module1": [806, 843, 1878], "qconfig_map": [806, 807, 843, 844, 845, 848, 850, 851, 1900], "child_prepare_custom_config": 806, "set_standalone_module_class": 806, "mystandalonemodul": 806, "set_float_to_observed_map": 806, "set_non_traceable_module_nam": 806, "module2": [806, 843, 1878], "module3": [806, 1878], "set_non_traceable_module_class": 806, "nontraceablemodule1": 806, "nontraceablemodule2": 806, "set_input_quantized_index": 806, "set_output_quantized_index": 806, "prepare_custom_config_dict": [806, 827, 829, 1900], "standalone_module_nam": 806, "standalone_module_class": 806, "module_class": 806, "float_to_observed_custom_module_class": [806, 827, 1900], "non_traceable_module_nam": 806, "non_traceable_module_class": 806, "input_quantized_idx": 806, "output_quantized_idx": 806, "float_class": 806, "qconfigmap": [807, 844, 845, 848, 850, 1900, 1903], "preparecustomconfig": [807, 850], "2048": [808, 1457, 1459, 1461, 1878], "upsample_r": 808, "per_tensor_affin": [808, 809, 810, 1702, 1703, 1704, 1705, 1900, 1903], "reduce_rang": [808, 809, 810, 811, 814, 816, 1853, 1900, 1901], "factory_kwarg": [808, 809, 814], "1920928955078125e": [808, 809, 810, 811, 814], "finfo": [808, 809, 810, 811, 814, 1236, 1239, 1318, 1850, 1916], "minmaxobserv": [808, 810, 814, 830, 850, 851, 1903], "x_": [809, 810, 954, 1065, 1255, 1256, 1258, 1261, 1269, 1331, 1350, 1404, 1421, 1447, 1449, 1569, 1777, 1779, 1821, 1875, 1903, 1910], "q_": [809, 1903], "x_orig": 809, "reset_min_max_v": [809, 814], "ch_axi": [811, 814, 1853], "per_channel_affin": [811, 814, 1701, 1900, 1903], "custom_op_nam": [812, 815], "with_arg": [813, 830, 850, 851], "_callable_arg": 813, "_with_arg": 813, "foo_build": 813, "foo_instance1": 813, "foo_instance2": 813, "with_callable_arg": 813, "_with_callable_arg": 813, "cur_tim": 813, "get_time_func": 813, "dan": 813, "creation_tim": 813, "compute_dtyp": 815, "ptq": [820, 1900, 1901, 1903], "obs_dict": 826, "get_observer_state_dict": 826, "allow_list": [827, 1918], "observer_non_leaf_module_list": 827, "preemptiv": [827, 828, 1594], "custommodul": [827, 1900], "propagate_qconfig_": 829, "qconfig_dict": [829, 843], "my_qconfig": 830, "default_observ": 830, "default_qat_config": 836, "set_glob": [843, 848, 850, 1900], "set_object_typ": [843, 848, 850], "set_module_name_regex": 843, "regex": 843, "set_module_nam": [843, 848, 850], "set_module_name_object_type_ord": 843, "global_qconfig": 843, "qconfig1": 843, "qconfig2": 843, "qconfig3": 843, "object_typ": 843, "module_name_regex": 843, "module_name_object_type_ord": 843, "conv0": 843, "x86": [844, 845, 1744, 1900, 1902], "run_arg": [846, 852], "counterpart": [846, 853, 1251, 1594, 1855, 1863, 1917, 1918], "qconfig_spec": 847, "quantize_fx": [848, 849, 850, 851, 1900, 1919], "_remove_qconfig": 848, "qconfig_from_prepar": 848, "prepared_model": [848, 850, 851], "xnnpack": [848, 1863, 1900], "get_default_backend_config": [848, 850, 851], "quantized_model": 848, "fusion_pattern": 849, "fusecustomconfig": 849, "_equalization_config": 850, "get_default_qconfig_map": [850, 1900], "float_model": [850, 851, 1918], "data_load": [850, 851, 1675, 1681, 1888], "get_default_qconfig": [850, 851, 1900], "linear_pattern_config": 850, "suer": 850, "sample_inference_data": 850, "get_default_qat_qconfig_map": [851, 1900], "load_weight": 851, "train_data": 851, "get_default_qat_qconfig": [851, 1900], "custom_module_class_map": 853, "lceil": [854, 931], "rceil": [854, 931], "gap": [854, 1715, 1850, 1900], "adjac": [854, 921, 1353, 1354, 1355, 1359, 1715, 1909], "set_default_tensor_typ": [854, 911, 920, 1056, 1058, 1068, 1073, 1091, 1109, 1129, 1139, 1140, 1201, 1252, 1268, 1645, 1708, 1710, 1712, 1714, 1715, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1782, 1783, 1784, 1785, 1786, 1787, 1825, 1827, 1847], "get_default_dtyp": [854, 1252, 1268, 1650, 1715, 1911, 1912, 1921], "5000": [854, 869, 875, 876, 877, 913, 937, 1073, 1075, 1076, 1083, 1086, 1091, 1101, 1103, 1104, 1105, 1135, 1141, 1144, 1207, 1233, 1252, 1309, 1311, 1339, 1340, 1358, 1466, 1700, 1704, 1705, 1706, 1715, 1719, 1910, 1915], "3398": 863, "2663": [863, 1878], "2686": 863, "2450": 863, "7401": 863, "8805": 863, "3402": 863, "1936": 863, "4907": [863, 1269], "3948": [863, 949], "0691": 863, "3132": 863, "6092": 863, "5419": 863, "2993": [863, 1799], "3195": 863, "1139": 864, "2254": 864, "1381": [864, 1799], "3687": 864, "0100": [864, 1235, 1701], "1975": [864, 1870], "0102": 864, "4732": 864, "9240": 864, "1207": [864, 1303], "7506": 864, "0213": 864, "7809": 864, "2960": 864, "9384": 864, "1438": 864, "ascend": [865, 1075, 1218, 1220, 1249, 1302, 1735, 1773, 1832], "0785": 865, "5267": 865, "8521": 865, "4065": 865, "1598": 865, "0788": 865, "0745": 865, "2700": 865, "2208": 865, "0722": 865, "7064": 865, "2564": 865, "0669": 865, "2318": 865, "8229": 865, "9280": 865, "lexicograph": [866, 1640, 1855, 1909], "9039": 867, "6291": 867, "0795": [867, 1700, 1886], "1586": 867, "1939": 867, "4900": 867, "7503": 867, "9355": 867, "histori": [868, 869, 1121, 1659, 1814, 1862, 1870, 1880, 1882, 1906], "dlpack": [869, 1106, 1850], "frombuff": 869, "data_ptr": [869, 1868, 1911, 1913], "addbackward0": [869, 1886, 1891], "__array_interface__": 869, "5962": 870, "4985": 870, "4396": 870, "4525": [870, 1870], "6387": 870, "4552": 870, "sine": [871, 1756, 1766, 1768], "1606": 871, "4267": 871, "0899": 871, "0250": 871, "1599": 871, "1534": 871, "9435": 871, "8990": [871, 1050], "arctang": [872, 873], "2341": 872, "2539": 872, "6256": 872, "6448": 872, "2299": 872, "2487": 872, "5591": [872, 894], "5727": 872, "quadrant": 873, "9041": [873, 930], "0196": [873, 930], "3108": [873, 930], "4423": [873, 930], "9833": 873, "0811": 873, "9743": 873, "4151": 873, "tangent": [874, 884, 885, 1118, 1119, 1454, 1812, 1813], "9385": 874, "2968": 874, "8591": 874, "1871": 874, "7253": 874, "3060": 874, "2899": 874, "1893": 874, "needs_input_grad": [878, 1880], "setup_context": [879, 1881], "save_for_forward": [879, 1881], "grad_input": [880, 887, 889, 902, 1182, 1414, 1590, 1880, 1886], "underneath": 881, "generate_vmap_rul": [881, 1881], "out_dim": [881, 1123, 1842, 1853, 1869, 1881], "grad_tensor": [882, 896, 1853, 1878], "grad_vari": 882, "forward_ad": 883, "dual": [883, 884, 885, 1639, 1881], "make_du": [883, 885], "your_fn": 883, "unpack_du": [883, 884], "grad_aft": 883, "dual_level": [884, 885], "primal": [885, 1114, 1118, 1119, 1122], "x_npy": 886, "once_differenti": [886, 887, 888, 889, 1880], "g1": [887, 889, 1878, 1907], "g2": [887, 889, 1878, 1907], "oppos": [888, 1881], "weren": 888, "grad_out": [888, 1851, 1853, 1883], "gx": 888, "gy": 888, "gz": 888, "simplefunc": 889, "induc": [889, 1513, 1551, 1873], "outer_jacobian_strategi": 890, "disconnect": [890, 891, 892, 893, 894, 895], "said": [890, 891, 892, 893, 894, 895, 1862, 1889], "cliff": [890, 892, 896], "_debug_only_display_vmap_fallback_warn": [890, 896], "pow_reduc": [890, 891, 894], "2265": 890, "8221": 890, "9456": [890, 912], "2550": 890, "viewbackward": [890, 892], "pow_adder_reduc": [890, 891, 894], "func_output": [891, 893, 894, 895], "1448": 891, "0239": 891, "6456": 891, "4988": 891, "4310": 891, "sumbackward0": [891, 894], "3030": 891, "vhp": 891, "batched_grad": 892, "exp_reduc": [892, 893, 895], "4917": 892, "4352": 892, "4369": 892, "3799": 892, "exp_add": 892, "8052": 892, "3963": 892, "3090": 893, "6742": 893, "9114": 893, "2106": 893, "sumbackward1": [893, 895], "squeezebackward1": 893, "adder": [893, 895], "2399": 893, "5005": 893, "0689": 894, "2431": 894, "0989": 894, "4456": 894, "8053": [894, 1730], "7817": 895, "2458": 895, "7830": 895, "7782": 895, "4458": 895, "3962": 895, "3042": [895, 1239], "6354": 895, "1288": [895, 1759], "0652": 895, "5483": 895, "5035": 895, "2046": [895, 949], "1292": 895, "1432": 895, "3059": 895, "3225": 895, "6652": 895, "7753": 895, "0152": 895, "4225": 895, "3340": 895, "only_input": 896, "allow_unus": [896, 1853], "is_grads_batch": 896, "materialize_grad": 896, "require_grad": [896, 1855, 1875], "06": [897, 898, 1222, 1227, 1228, 1239, 1240, 1245, 1368, 1423, 1462, 1465, 1510, 1579, 1654, 1668, 1800, 1853, 1916], "raise_except": [897, 898], "check_sparse_nnz": 897, "nondet_tol": [897, 898], "check_undefined_grad": [897, 898], "check_grad_dtyp": [897, 898], "check_batched_grad": [897, 898], "check_batched_forward_grad": 897, "check_forward_ad": 897, "check_backward_ad": 897, "fast_mod": [897, 898, 1883], "differenc": [897, 1880], "perturb": [897, 898, 1883], "sparsetensor": [897, 1785], "gradgradcheck": [897, 1880], "gen_non_contig_grad_output": 898, "check_fwd_over_rev": 898, "check_rev_over_rev": 898, "noncontigu": [898, 998, 1916], "inaccuraci": 898, "clonebackward0": 900, "gi": [902, 903, 1886], "removablehandl": [902, 903, 1182, 1414, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1897], "eventlist": [905, 906], "chrome": [905, 1899], "group_by_stack_n": [906, 1899], "roof": 906, "functioneventavg": [906, 908], "window_length": [911, 920, 1139, 1140, 1201, 1853], "2n": [911, 1754], "trim": [911, 920, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1139, 1140, 1179], "_length": [911, 920, 1139, 1140, 1179, 1337, 1796], "sim": [912, 1428, 1556, 1692, 1712], "pseudorandom": [912, 1304, 1642, 1689, 1692, 1708, 1710, 1712, 1714, 1801], "1737": 912, "0950": [912, 1778], "3609": 912, "7148": 912, "0289": [912, 1824], "2676": 912, "8937": 912, "7202": 912, "2500": [913, 1073, 1075, 1076, 1086, 1091, 1252, 1466, 1706], "7500": [913, 1076, 1086, 1105, 1135, 1237, 1252, 1466, 1706, 1762], "AND": [914, 1263, 1855, 1875], "OR": [917, 1265, 1855], "xor": [919, 1266, 1855], "blackman": [920, 1764], "arrang": 921, "broadcast_tensor": [923, 1853, 1895], "out_int32": [926, 1735, 1853], "formal": [926, 1735, 1862, 1869], "tensor_a": [928, 941], "tensor_b": 928, "6580": 929, "0969": 929, "4614": 929, "1034": [929, 1055], "5790": 929, "1497": 929, "x2": [930, 1229, 1406, 1462, 1463, 1495, 1552, 1853], "compute_mod": 930, "use_mm_for_euclid_dist_if_necessari": 930, "distanc": [930, 1179, 1217, 1218, 1245, 1374, 1423, 1462, 1463, 1553, 1675, 1796, 1800, 1850], "infti": [930, 1179, 1233, 1330, 1382, 1383, 1445, 1553, 1666, 1910], "use_mm_for_euclid_dist": 930, "donot_use_mm_for_euclid_dist": 930, "minkowski": [930, 1553], "ham": [930, 1139, 1553, 1760], "closest": [930, 1553], "xn": [930, 1553], "4821": [930, 933], "059": 930, "0590": 930, "1763": [930, 1718], "4713": [930, 1718], "6986": [930, 1718], "3702": [930, 1718], "1193": [930, 1271], "0959": 930, "7138": 930, "8322": 930, "2830": [930, 1826], "3791": 930, "6341": 931, "4208": 931, "0900": 931, "5826": 931, "clr": [932, 1675], "3375": 932, "9790": 932, "1119": 932, "6577": 932, "5609": [932, 1504], "5095": 932, "2614": 932, "4038": 932, "3378": [932, 1826], "4982": 932, "2457": [932, 1284], "2561": 932, "4684": 932, "7163": 932, "9647": 932, "8917": [932, 1262], "3213": [932, 1258], "2284": [932, 1035], "8615": 932, "2816": 932, "tu": 933, "mt": [933, 934, 1211, 1218, 1220, 1224, 1225, 1226, 1231, 1240, 1699, 1800, 1853, 1862, 1895, 1913, 1915], "4112": 933, "7486": 933, "4551": 933, "3544": 933, "6724": 933, "5528": 933, "0592": [933, 1886], "9371": 933, "5487": 933, "7023": 933, "03": [933, 934, 1259, 1757, 1758, 1763], "3842e": [933, 1227], "dpotri": 934, "spotri": 934, "uu": 934, "9935": 934, "6353": 934, "5806": 934, "8769": 934, "7183": [934, 1233, 1886], "6618": 934, "9314": 934, "2251": [934, 955, 1214, 1256], "0889": 934, "4439": 934, "2122": 934, "1412": 934, "5894e": 934, "semidefinit": 935, "7747": 935, "9549": 935, "3086": 935, "4114": 935, "8733": 935, "6355": 935, "9891": 935, "1974": 935, "4706": 935, "4115": 935, "6225": 935, "1625": 935, "6097": 935, "8398": 935, "2387": [935, 950], "3771": [935, 1228], "4173": 935, "1626": [935, 955, 1214], "tensor_split": [936, 1053, 1145, 1843, 1853, 1895, 1913], "min_valu": [937, 1373], "max_valu": [937, 1373, 1853], "_valu": [937, 1322, 1599, 1785, 1880, 1895, 1909], "7120": 937, "1734": [937, 1156], "0478": [937, 1845], "0922": 937, "3333": [937, 1135, 1144, 1466, 1467, 1814], "hstack": [940, 1853, 1895, 1909], "with_replac": [941, 1853], "combinations_with_replac": 941, "_glibcxx_use_cxx11_abi": 943, "flip": [947, 1096, 1097, 1249, 1851, 1853, 1895, 1896], "lazi": [947, 1194, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1585, 1670, 1850], "writeabl": [947, 948], "is_conj": [947, 1723, 1853, 1895], "geq": [949, 1126, 1213, 1221, 1350, 1400, 1421, 1422, 1432, 1496, 1548, 1601, 1873, 1910], "signbit": [949, 1851, 1853, 1895, 1909], "2557": 949, "0026": 949, "5387": 949, "4740": 949, "9244": 949, "7079": 949, "2778": 949, "0249": [949, 1257], "5719": 949, "0059": 949, "2600": 949, "4475": 949, "9567": [949, 1217, 1799], "5757": 949, "1751": 949, "0742": 949, "2998": 949, "1054": 949, "2373": 949, "3190": [949, 1878], "1128": [949, 1239, 1384], "pearson": 950, "coeffici": [950, 1139, 1654, 1656, 1657, 1658, 1660, 1666, 1670, 1759, 1760, 1761, 1823], "r_": [950, 1816], "ij": [950, 1055, 1261, 1269, 1283, 1417, 1777], "c_": [950, 1342, 1343, 1344, 1345, 1346, 1347, 1384, 1426, 1427], "jj": 950, "hermitian": [950, 1071, 1072, 1074, 1076, 1077, 1078, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1211, 1212, 1217, 1218, 1220, 1224, 1225, 1226, 1236, 1239, 1245, 1853], "cov": [950, 1853, 1895], "2678": [950, 1357], "0908": 950, "3766": 950, "2780": 950, "5812": 950, "1535": [950, 1357], "2350": 950, "3582": 950, "4309": 951, "2706": 951, "8562": 951, "9796": [951, 1227], "1395": 951, "2957": 951, "6553": 951, "5574": 951, "1632": 952, "1835": 952, "6979": 952, "7325": [952, 1045], "0133": 952, "7860": 952, "2536": 952, "2805": 952, "sleef": [952, 1768], "unbias": [954, 1332, 1333, 1334, 1369, 1377, 1378, 1379, 1386, 1453, 1794, 1795, 1837, 1838, 1851, 1853], "_w": 954, "y_": [954, 1065, 1255, 1256, 1258, 1331, 1350, 1380, 1777, 1821, 1875, 1910], "w_i": [954, 1221], "mu_x": 954, "mu_i": [954, 1660], "whichev": [954, 1123, 1513, 1700, 1842, 1878], "w_ix_": 954, "bessel": [954, 1201, 1763, 1794, 1795, 1837, 1838, 1910], "corrcoef": [954, 1853, 1895], "6667": [954, 1144, 1466, 1467, 1720, 1754, 1891], "fw": 954, "4282": 954, "0255": [954, 1042], "4144": [954, 1878], "4169": 954, "3956": [955, 1214], "1455": [955, 1214, 1892], "6895": [955, 1214], "5849": [955, 1214], "3599": [955, 1214], "7180": [955, 1214], "0521": [955, 1214], "1339": [955, 1214], "0225": [955, 1214, 1227], "0257": [955, 1214], "4725": [955, 1214], "1479": [955, 1214], "7005": [955, 1214], "9757": [955, 1214], "3904": [955, 1214], "3726": [955, 1214], "1836": [955, 1214], "9688": [955, 1214], "7153": [955, 1214, 1910], "2159": [955, 1214], "0844": [955, 1214], "5281": [955, 1214], "6120": [955, 1214], "4490": [955, 1214], "5687": [955, 1214], "9792": [955, 1036, 1214], "8304": [955, 1214], "3037": [955, 1214, 1886], "5650": [955, 1214], "2329": [955, 1214], "9883": [955, 1214], "0551": [955, 1214], "capture_begin": [956, 1878], "make_graphed_cal": [956, 1878], "graph_pool_handl": [956, 990], "other_graph_inst": [956, 990], "capture_end": [956, 1878], "debug_dump": 956, "debug_path": 956, "enable_debug_mod": 956, "path_to_so_fil": 957, "alloc_fn_nam": 957, "free_fn_nam": 957, "ctype": 957, "change_current_alloc": [957, 1878], "ssize_t": [957, 1878], "cudastream_t": [957, 959, 1878], "ptr": [957, 1878], "size_t": 957, "oss": 957, "enable_tim": [958, 1878], "interprocess": 958, "marker": 958, "elapsed_tim": [958, 1878], "end_ev": [958, 1878], "elaps": [958, 1865], "from_ipc_handl": 958, "reconstruct": [958, 1271, 1330, 1331, 1883, 1891, 1897], "ipc": [958, 994], "ipc_handl": 958, "proceed": [958, 1368, 1906, 1907], "cudaeventsynchron": 958, "cudastreamwaitev": [958, 959, 961], "stream_ptr": 959, "record_ev": [959, 961], "cudastreamsynchron": [959, 961], "wait_ev": [959, 961], "interoper": 963, "caching_allocator_delet": 963, "mem_ptr": 964, "caching_allocator_alloc": 964, "peer_devic": 965, "_cudaalloc": 966, "clock": 967, "sm": 967, "hertz": 967, "smi": [967, 980, 1008, 1014, 1018, 1032, 1033, 1878, 1882, 1884], "buffer_s": 969, "10485760": 969, "chunk_siz": [972, 1117, 1123, 1842], "cublashandle_t": 973, "unoccupi": [980, 1292], "pytorch_cuda_alloc_conf": [981, 1878], "cudamallocasync": [981, 1012, 1878], "_cudadeviceproperti": 985, "gencod": 986, "eagerli": [987, 993, 1878], "cuda_graph": 990, "ordinari": [992, 1594, 1874], "code_str": [998, 999], "temp": 998, "typenam": [998, 999], "my_kernel": [998, 999], "jitted_fn": [998, 999], "create_jit_fn": [998, 999], "util_fn": 998, "gelu": [998, 1443, 1457, 1459, 1461, 1566, 1851, 1853, 1870, 1895], "my_gelu": 998, "my_lib": [998, 1859, 1892], "impl": [998, 1859], "num_output": 999, "sample_arg": 1001, "num_warmup_it": 1001, "allow_unused_input": 1001, "datadistributedparallel": 1001, "manual_seed_al": 1002, "occupi": [1004, 1008, 1019, 1290, 1402, 1531, 1878, 1884, 1921], "reset_peak_memory_stat": [1004, 1006, 1019, 1020], "max_memory_reserv": [1005, 1878, 1884], "cudamemgetinfo": 1007, "memory_reserv": [1009, 1878, 1884], "snapshot": [1011, 1855, 1878, 1884], "large_pool": 1012, "small_pool": 1012, "allocated_byt": 1012, "cudamalloc": [1012, 1878], "reserved_byt": 1012, "active_byt": 1012, "inactive_split": 1012, "inactive_split_byt": 1012, "octob": 1012, "1mb": 1012, "num_alloc_retri": 1012, "num_oom": 1012, "assist": [1012, 1879], "max_split_s": 1012, "oversize_alloc": 1012, "oversize_seg": 1012, "requested_byt": 1012, "abbrevi": 1013, "percent": [1014, 1033], "msg": [1015, 1017, 1899, 1916], "instantan": [1015, 1899], "ascii": [1015, 1017, 1253, 1855, 1899], "sensor": [1018, 1032], "mw": 1018, "milliwatt": 1018, "fermi": 1018, "max_memory_alloc": [1019, 1878, 1884], "max_memory_cach": 1020, "memory_stat": [1021, 1878, 1884], "seed_al": 1022, "environment": 1024, "total_memori": [1025, 1299], "debug_mod": [1029, 1742], "streamcontext": [1030, 1850], "centigrad": 1032, "x_1": [1034, 1035, 1036, 1037, 1249, 1335, 1348, 1349, 1484, 1495, 1821], "x_2": [1034, 1035, 1036, 1037, 1249, 1335, 1348, 1349, 1484, 1495], "x_3": [1034, 1035, 1036, 1037, 1249], "3449": 1034, "5447": 1034, "0685": 1034, "5104": [1034, 1878], "1706": 1034, "2259": 1034, "4696": 1034, "3284": 1034, "9946": 1034, "8209": [1034, 1037], "6628": 1035, "0975": 1035, "2680": [1035, 1877], "3298": [1035, 1042], "4220": 1035, "3885": 1035, "1762": 1035, "9165": 1035, "6684": [1035, 1159], "overflow": [1036, 1037, 1281, 1309, 1312, 1532, 1569, 1570, 1697, 1728, 1776, 1779, 1799, 1825, 1827, 1878, 1889, 1910], "6001": 1036, "2069": 1036, "1919": 1036, "6727": [1036, 1049], "0062": 1036, "4126": 1036, "2129": 1036, "4206": 1036, "1968": [1036, 1910], "1241": 1036, "0238": 1036, "0233": [1036, 1707], "0157": 1036, "0158": [1036, 1800], "0065": 1036, "0014": [1036, 1910], "0006": 1036, "8286": 1037, "4890": 1037, "5155": 1037, "8443": 1037, "1865": 1037, "1752": [1037, 1045], "0595": 1037, "1850": 1037, "1571": [1037, 1886, 1891], "4243": 1037, "3175": 1037, "8020": [1037, 1697], "0423": 1037, "2289": 1037, "0537": 1037, "0058": 1037, "9780": 1037, "trapezoid": [1038, 1822, 1853, 1895], "360": 1039, "2832": 1039, "diagflat": [1042, 1853, 1895], "5950": 1042, "0872": 1042, "4264": 1042, "1064": [1042, 1886], "8795": 1042, "2429": 1042, "1374": 1042, "1029": 1042, "6482": 1042, "6300": 1042, "5410": 1043, "2934": 1043, "1788": [1043, 1910], "5684": 1043, "0845": [1043, 1768, 1886], "3986": 1043, "2956": [1044, 1214], "9068": 1044, "1695": 1044, "2094": [1044, 1878], "3018": 1044, "1516": 1044, "9342": 1044, "0854": 1045, "1431": 1045, "8536": 1045, "0905": 1045, "0360": [1045, 1303], "6927": 1045, "3735": 1045, "4945": 1045, "2631": [1045, 1302, 1878], "3755": 1045, "5977": 1045, "8172": 1045, "1065": [1045, 1886], "0401": 1045, "2235": [1045, 1799], "7938": 1045, "3081": 1045, "6166": 1045, "2335": 1045, "0500": 1045, "7336": 1045, "3836": 1045, "1015": 1045, "emb": [1046, 1738, 1769], "5393": 1049, "8675": 1049, "5916": 1049, "6321": 1049, "0967": 1049, "0511": 1049, "6295": 1049, "8360": 1049, "6973": 1049, "6537": 1049, "dividend": [1050, 1100, 1103, 1719, 1828], "true_divid": [1050, 1853, 1895], "3810": [1050, 1143], "2774": 1050, "2972": 1050, "3719": 1050, "4637": 1050, "7620": 1050, "5548": 1050, "5944": 1050, "7438": 1050, "9274": 1050, "3711": 1050, "9353": 1050, "4605": 1050, "2917": 1050, "1815": [1050, 1262], "0111": [1050, 1757], "9805": 1050, "5923": 1050, "1062": 1050, "4581": [1050, 1221], "7759": 1050, "2344": 1050, "1830": 1050, "0313": 1050, "1908": 1050, "4757": 1050, "8032": 1050, "2930": 1050, "8113": 1050, "2308": 1050, "4620": [1050, 1845], "6051": 1050, "5676": 1050, "2639": 1050, "2260": 1050, "4509": [1050, 1235], "2086": 1050, "1322": 1050, "9764": 1050, "9564": 1050, "3484": 1050, "2278": 1050, "1068": [1050, 1156], "4678": 1050, "3938": [1050, 1809], "depthwis": [1053, 1054, 1342, 1343, 1344], "atleast_3d": [1054, 1853, 1895], "operand": [1055, 1855, 1856, 1880, 1909, 1912], "notat": [1055, 1380, 1748, 1856, 1886, 1915], "einstein": 1055, "summat": [1055, 1179, 1261, 1269, 1909], "subscript": [1055, 1856], "jk": 1055, "ik": [1055, 1254, 1777], "za": 1055, "alphabet": [1055, 1497, 1905], "arrow": [1055, 1907], "ki": 1055, "ellipsi": [1055, 1855, 1856, 1869], "fourth": 1055, "whitespac": [1055, 1856], "opt_einsum": [1055, 1850], "_the_": 1055, "bypass": [1055, 1859, 1870, 1878], "disclaim": 1055, "52": 1055, "op1": [1055, 1855], "sublist1": 1055, "op2": [1055, 1855], "sublist2": 1055, "subslist_out": 1055, "2104": 1055, "7952": 1055, "2433": 1055, "4545": 1055, "1156": 1055, "2897": [1055, 1886], "3918": 1055, "4963": 1055, "3744": 1055, "9381": 1055, "2685": 1055, "6070": 1055, "7208": 1055, "8058": 1055, "4419": 1055, "0936": 1055, "1713": 1055, "4291": 1055, "5802": 1055, "7350": [1055, 1910], "5704": 1055, "4290": 1055, "9323": 1055, "4480": 1055, "bij": 1055, "bjk": 1055, "bik": 1055, "0564": 1055, "5904": 1055, "2023": 1055, "1271": 1055, "6706": [1055, 1700], "8097": 1055, "8025": 1055, "1183": 1055, "2239": [1055, 1241], "3107": 1055, "5756": 1055, "2354": 1055, "4558": 1055, "3460": 1055, "5087": 1055, "8530": [1055, 1339, 1469], "8153": 1055, "8787": 1055, "3839": [1055, 1841], "2112": [1055, 1824], "3728": 1055, "1131": [1055, 1697], "0921": 1055, "8305": 1055, "ji": 1055, "anm": 1055, "bm": 1055, "ba": 1055, "3430": [1055, 1262], "2405": 1055, "4494": 1055, "3311": 1055, "5201": 1055, "0356": 1055, "4064e": 1056, "8000e": 1056, "3493e": 1056, "5751e": 1056, "1428e": 1056, "5955e": 1056, "9683e": 1058, "1239e": 1058, "0705e": 1058, "set_grad_en": [1059, 1853, 1895, 1917], "parenthesi": [1059, 1157, 1639], "doubler": [1059, 1639], "elsewher": [1060, 1068, 1126, 1138, 1172, 1174, 1175, 1178, 1206, 1270, 1315, 1778, 1849], "_max": [1069, 1070, 1900], "_min": [1069, 1070, 1900], "nearbi": [1069, 1070], "_int": [1069, 1070], "_point": [1069, 1070], "2525": 1069, "0466": 1069, "3491": [1069, 1235], "2168": [1069, 1816], "5906": [1069, 1910], "6258": 1069, "6444": 1069, "0542": 1069, "0475": [1069, 1910], "0486": 1069, "3405": 1069, "6134": [1069, 1284], "6323": 1069, "0552": 1070, "9730": 1070, "3973": 1070, "0780": 1070, "4000": [1070, 1073, 1082, 1091, 1466, 1703, 1754], "6000": [1070, 1457, 1459, 1461, 1466, 1703, 1751, 1754], "fourier": [1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1179, 1764, 1796, 1850], "rfft": [1071, 1076, 1086, 1090, 1091, 1092], "compact": [1071, 1072, 1074, 1224, 1226, 1229, 1880, 1893, 1900], "chalf": [1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1086, 1087, 1088, 1853, 1895, 1915], "sm53": [1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092], "ortho": [1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1254], "orthonorm": [1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1245, 1601, 1800], "ifft": [1071, 1075, 1076, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088], "fftn": [1072, 1075, 1081, 1084, 1092], "rfft2": [1072, 1087], "ifft2": [1072, 1084], "two_fft": [1072, 1074, 1084, 1090, 1092], "check_strid": [1072, 1074, 1075, 1080, 1081, 1086, 1087, 1088, 1090, 1092, 1916], "nyquist": [1073, 1075, 1083, 1085, 1089, 1090, 1091, 1092], "i_1": [1074, 1092, 1202], "i_n": [1074, 1092, 1123, 1202, 1816, 1842], "rfftn": [1074, 1078, 1084, 1088, 1090], "ifftn": [1074, 1080, 1085], "rearrang": [1075, 1082, 1338, 1426, 1427, 1554, 1555, 1869], "fftfreq": [1075, 1082, 1091], "9000": [1075, 1814], "8000": [1075, 1309, 1466, 1700, 1754], "uncent": 1075, "ifftshift": 1075, "x_center": 1075, "x_uncent": 1075, "fft_uncent": 1075, "fft_center": 1075, "x_centered_2": 1075, "ihfft": [1076, 1084, 1085], "irfft": [1076, 1088, 1089], "symmetri": [1076, 1078, 1796], "opposit": [1076, 1078, 1800, 1820], "transformed_dim_s": [1076, 1086], "0000j": [1076, 1083, 1086, 1211, 1212, 1217, 1218, 1220, 1693, 1751], "1250": [1076, 1302], "1720j": 1076, "0406j": 1076, "2809": 1076, "6250": [1076, 1086, 1105, 1466], "9691": 1076, "hfftn": [1077, 1085], "last_dim_s": [1077, 1078, 1087, 1088, 1851], "ihfft2": 1077, "roundtrip": [1077, 1078, 1086, 1087, 1088], "ihfftn": [1078, 1084], "irfftn": [1078, 1087, 1092], "fft2": [1080, 1090], "two_ifft": [1080, 1081, 1085], "fftshift": 1082, "hfft": 1083, "6882j": 1083, "1625j": 1083, "hfft2": 1084, "8602j": 1086, "2031j": 1086, "1562": 1086, "3511": 1086, "7812": 1086, "2114": 1086, "irfft2": 1090, "wider": [1098, 1852, 1855, 1896, 1909], "49": [1098, 1237, 1877], "2500e": 1098, "1000e": 1098, "7656e": 1098, "lfloor": [1099, 1104, 1322, 1327, 1328, 1329, 1342, 1343, 1344, 1361, 1382, 1383, 1407, 1408, 1409, 1465, 1466, 1467, 1468, 1482, 1551, 1715, 1796], "rfloor": [1099, 1104, 1322, 1327, 1328, 1329, 1342, 1343, 1344, 1361, 1382, 1383, 1407, 1408, 1409, 1465, 1466, 1467, 1468, 1482, 1551, 1715, 1796], "8166": 1099, "5308": 1099, "2530": 1099, "2091": 1099, "7000": [1101, 1358, 1753], "3000": [1102, 1357, 1753, 1878], "entrywis": [1103, 1719], "modulu": [1103, 1241, 1719], "operatornam": [1104, 1217, 1218, 1219, 1220, 1237, 1245, 1330, 1331, 1337, 1374, 1375, 1381, 1405, 1445, 1463, 1753], "8750": [1105, 1466], "char": [1108, 1650, 1868, 1911], "parameter_and_buffer_dict": 1111, "tie_weight": [1111, 1636], "submodule_nam": [1111, 1636], "parameter_nam": [1111, 1636], "ti": [1111, 1636, 1728], "ty": [1111, 1636], "foo_ti": [1111, 1636], "new_a": [1111, 1636], "mutlipl": 1111, "grad_weight": [1111, 1880], "detached_param": 1111, "parameters_and_buffer_dict": 1111, "reparamater": [1111, 1636], "paramat": 1111, "intermediate_upd": 1112, "mutations_and_view": 1112, "intermeid": 1112, "inpt": 1112, "out1": [1112, 1853], "out2": [1112, 1853], "f_trace": 1112, "f_no_mutations_trac": 1112, "f_no_mutations_and_views_trac": 1112, "a_1": [1112, 1202], "view_1": 1112, "view_copi": [1112, 1853, 1895, 1917], "view_copy_1": 1112, "as_strid": [1112, 1851, 1853, 1895, 1913], "writ": 1112, "native_funct": [1112, 1851], "yaml": [1112, 1851], "aux": [1113, 1114, 1116, 1117, 1118, 1122], "my_loss_func": 1113, "y_pred": [1113, 1878], "loss_per_sampl": 1113, "y_true": 1113, "autodiff": [1116, 1117, 1118, 1240], "jacobian_f": [1116, 1117], "f_x": [1116, 1117], "jacboian": [1116, 1117], "expectedx": [1116, 1117], "expectedi": [1116, 1117], "_preallocate_and_copi": 1117, "stand": [1118, 1122, 1854, 1897, 1907], "jvp_out": 1118, "jvp_fn": 1119, "requr": 1119, "optimiz": [1121, 1852], "l1": [1121, 1374, 1375, 1445, 1522, 1567, 1611, 1620, 1886, 1891], "l2": [1121, 1375, 1405, 1445, 1653, 1654, 1655, 1656, 1658, 1660, 1666, 1667, 1669, 1874], "vjpfunc": 1122, "unsuccessfulli": [1123, 1842], "rummag": [1123, 1842], "batched_dot": [1123, 1842], "imposs": [1123, 1842, 1874], "jacobian_row": [1123, 1842], "get_vjp": [1123, 1842], "n1": [1123, 1721, 1842], "n0": [1123, 1842], "batched_pow": [1123, 1842], "autobatch": [1123, 1842], "sparse_grad": [1124, 1851, 1853], "tau": [1127, 1221, 1515, 1655, 1669, 1686, 1687, 1757, 1853], "elementari": [1127, 1875, 1883], "reflector": [1127, 1601, 1687], "household": [1127, 1221, 1601, 1687], "householder_product": [1127, 1601, 1686], "gel": [1127, 1227], "set_default_dtyp": 1129, "set_deterministic_debug_mod": [1130, 1835], "edge_ord": [1135, 1853], "mathbb": [1135, 1211, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1227, 1228, 1231, 1233, 1240, 1242, 1244, 1245, 1350, 1421, 1601], "rightarrow": 1135, "interior": 1135, "theorem": 1135, "h_l": 1135, "h_r": 1135, "neighbor": [1135, 1179, 1466, 1468, 1796], "xi_1": 1135, "xi_2": 1135, "approx": [1135, 1801, 1883], "outermost": 1135, "80": [1135, 1237, 1679, 1748, 1878, 1896], "halv": 1135, "coord": 1135, "54": [1139, 1376, 1760], "46": [1139, 1759], "hann_window": [1139, 1796, 1853, 1857, 1895], "hann": [1140, 1760], "hist": [1143, 1144, 1853], "bin_edg": [1143, 1144, 1853], "9524": 1143, "leftmost": [1144, 1870], "leg": 1148, "triangl": [1148, 1914], "hypotenus": 1148, "4031": 1148, "gammainc": [1150, 1910], "gammaincc": [1151, 1910], "index_reduce_": [1155, 1853], "realloc": 1156, "1427": 1156, "0231": 1156, "5414": 1156, "0009": 1156, "4664": [1156, 1816], "2647": 1156, "1228": 1156, "6571": 1156, "7230": 1156, "6004": 1156, "inferencemod": [1157, 1875], "bump": 1157, "_version": [1157, 1895], "multidimension": [1159, 1251, 1377], "8173": 1159, "0874": 1159, "1784": 1159, "3279": 1159, "7894": 1159, "4682": 1159, "7159": 1159, "1506": 1159, "4034": 1159, "3657": 1159, "0387": 1159, "9892": 1159, "1774": 1159, "3261": 1159, "3917": 1159, "4537": [1159, 1585], "7493": 1159, "1724": 1159, "2291": 1159, "5749": 1159, "2267": 1159, "7920": 1159, "3607": 1159, "3701": 1159, "3666": 1159, "5850": [1159, 1212], "7242": 1159, "9837": 1159, "1560": 1159, "2907": 1159, "6785": 1159, "5671": [1159, 1213], "5452": 1159, "6912": 1159, "5509": 1159, "1782": 1159, "9843": 1159, "7366": 1159, "5672": [1159, 1642], "5115": 1159, "4864": 1159, "2476": 1159, "4337": 1159, "6347": 1159, "1748": 1159, "3567": [1159, 1212], "6558": 1159, "2469": [1159, 1886], "5787": [1159, 1262], "typecheck": [1169, 1895], "mypi": [1169, 1854, 1855], "warn_alwai": 1170, "set_warn_alwai": 1170, "nonfinit": 1171, "test_el": [1173, 1853], "assume_uniqu": [1173, 1853], "0j": [1178, 1839], "nola": 1179, "envelop": 1179, "hop": [1179, 1796], "shorter": [1179, 1893, 1905], "griffin": 1179, "ieee": [1179, 1368, 1764, 1889], "tran": 1179, "assp": 1179, "vol": [1179, 1368, 1764], "pp": [1179, 1368, 1764], "236": 1179, "apr": 1179, "1984": 1179, "slide": [1179, 1327, 1328, 1329, 1361, 1407, 1408, 1409, 1465, 1507, 1537, 1538, 1539, 1581, 1704, 1705, 1796], "fft_size": 1179, "scriptmodul": [1180, 1181, 1186, 1189, 1191, 1192, 1193, 1197, 1198, 1652, 1852, 1854, 1863, 1893], "implic": [1180, 1197, 1905, 1909], "attributemodul": 1180, "names_ag": 1180, "9223372036854775807": [1180, 1627, 1865], "get_debug_st": 1181, "graphexecutorst": 1181, "_extra_fil": [1181, 1182, 1189, 1192, 1885], "save_to_buff": 1181, "add_modul": [1182, 1414], "init_weight": [1182, 1414, 1886], "buf": [1182, 1414], "20l": [1182, 1414], "1l": [1182, 1414], "5l": [1182, 1414], "syntax": [1182, 1852, 1855, 1897], "code_with_const": 1182, "constmap": 1182, "extra_repr": [1182, 1414, 1880], "get_buff": [1182, 1414], "attributeerror": [1182, 1414, 1880, 1900], "get_extra_st": [1182, 1414], "set_extra_st": [1182, 1414], "get_paramet": [1182, 1414], "net_b": [1182, 1414], "net_c": [1182, 1414], "inlined_graph": 1182, "ipu": [1182, 1414], "missing_kei": [1182, 1414], "unexpected_kei": [1182, 1414], "remove_dupl": [1182, 1414], "named_children": [1182, 1414, 1886], "conv4": [1182, 1414], "conv5": [1182, 1414], "memo": [1182, 1414], "register_backward_hook": [1182, 1414, 1590], "register_full_backward_hook": [1182, 1414, 1886], "register_buff": [1182, 1414, 1587, 1852, 1854, 1880, 1886], "register_forward_hook": [1182, 1414, 1588, 1886], "with_kwarg": [1182, 1414], "register_module_forward_hook": [1182, 1414, 1886], "register_forward_pre_hook": [1182, 1351, 1414, 1589, 1886], "forward_pr": [1182, 1414], "register_module_forward_pre_hook": [1182, 1414, 1886], "register_module_full_backward_hook": [1182, 1414, 1586, 1875, 1886], "register_full_backward_pre_hook": [1182, 1414, 1886], "register_module_full_backward_pre_hook": [1182, 1414, 1886], "register_load_state_dict_post_hook": [1182, 1414], "incompatible_kei": [1182, 1414], "register_modul": [1182, 1414, 1592], "register_paramet": [1182, 1414, 1593, 1880, 1886], "register_state_dict_pre_hook": [1182, 1414], "keep_var": [1182, 1414], "finetun": [1182, 1414], "gan": [1182, 1414, 1602, 1635], "share_memori": [1182, 1414, 1888], "share_memory_": [1182, 1414, 1867, 1911], "shallow": [1182, 1351, 1414, 1462, 1463], "channels_last": [1182, 1414, 1594, 1912], "4d": [1182, 1333, 1361, 1378, 1414, 1466, 1507, 1524, 1551, 1582, 1703], "1913": [1182, 1414], "3420": [1182, 1414], "5113": [1182, 1414, 1816], "2325": [1182, 1214, 1414], "gpu1": [1182, 1414], "1914": [1182, 1414], "5112": [1182, 1414, 1878], "3741": [1182, 1414], "2382": [1182, 1303, 1414], "5593": [1182, 1414], "4443": [1182, 1414], "6122": [1182, 1414], "1150": [1182, 1414], "to_empti": [1182, 1414], "dst_type": [1182, 1414], "xpu": [1182, 1414, 1899], "set_to_non": [1182, 1414, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1878], "the_typ": 1183, "the_valu": 1183, "script_bar": 1185, "addmod": 1185, "preserved_attr": 1186, "optimize_numer": 1186, "run_frozen_optim": 1186, "scripted_modul": [1186, 1193, 1891], "frozen_modul": 1186, "modified_tensor": 1186, "mymodule2": 1186, "dump_alias_db": 1186, "pdb": [1187, 1193, 1199, 1852, 1854], "training_method": 1187, "target_typ": 1188, "refin": [1188, 1869], "testcod": [1188, 1854], "key1": 1188, "val1": 1188, "key2": 1188, "val2": 1188, "_restore_shap": 1189, "scriptfunct": [1189, 1193, 1194, 1197, 1893], "readlin": [1189, 1253, 1897], "seek": [1189, 1253, 1897, 1900], "retrac": 1189, "rb": [1189, 1253], "extra_fil": [1189, 1192], "other_method": 1191, "lesser": [1191, 1875, 1877], "extent": [1191, 1877, 1909], "frozen_mod": 1191, "offlin": 1192, "_frames_up": 1193, "_rcb": 1193, "scriptdict": 1193, "scriptlist": 1193, "test_sum": 1193, "scripted_fn": [1193, 1852], "conv2": [1193, 1414, 1442, 1852, 1900], "some_entry_point": 1193, "python_only_fn": 1193, "testnnmodul": 1193, "pdt_model": 1193, "scripted_model": [1193, 1897], "un": [1195, 1337, 1900], "unfus": 1195, "nb": 1195, "check_trac": [1197, 1198], "check_input": [1197, 1198, 1852], "check_toler": [1197, 1198], "_force_outplac": [1197, 1198], "_module_class": [1197, 1198], "_compilation_unit": [1197, 1198], "compilationunit": [1197, 1198], "example_kwarg_input": 1197, "_store_input": [1197, 1198], "trace_modul": [1197, 1852, 1855], "untrack": 1197, "checker": [1197, 1198, 1855, 1893], "diverg": [1197, 1198, 1380, 1525, 1850, 1855], "traced_foo": [1197, 1852], "example_weight": [1197, 1198], "example_forward_input": [1197, 1198], "example_inputs_is_kwarg": 1198, "method2": 1198, "example_method2_input": 1198, "weighted_kernel_sum": 1198, "use_memory_effici": 1199, "memory_effici": 1199, "scriptabl": 1199, "kaiser": [1201, 1457, 1459, 1461], "i_0": [1201, 1202, 1763, 1816, 1910], "zeroth": [1201, 1763, 1910], "out_i": 1201, "kroneck": 1202, "a_0": 1202, "a_n": 1202, "b_0": 1202, "b_1": 1202, "b_n": 1202, "k_0": [1202, 1816], "k_1": 1202, "k_n": 1202, "j_0": 1202, "j_1": 1202, "j_n": 1202, "k_t": 1202, "i_t": [1202, 1384, 1668], "b_t": 1202, "j_t": 1202, "bmatrix": 1202, "a_": [1202, 1273, 1402, 1816], "cdot": [1202, 1227, 1239, 1330, 1331, 1349, 1350, 1372, 1380, 1417, 1418, 1419, 1420, 1421, 1457, 1495, 1518, 1693, 1796, 1910, 1916], "vdot": [1202, 1249, 1250, 1853, 1895], "ddot": [1202, 1249], "kth": 1203, "full_lik": [1207, 1853, 1857, 1895], "logarithm": [1210, 1215, 1241, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1268, 1337, 1497, 1532, 1776, 1910], "gamma": [1210, 1332, 1333, 1334, 1369, 1377, 1378, 1379, 1386, 1453, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1669, 1671, 1675, 1676, 1679, 1684, 1685, 1703, 1850, 1853, 1893, 1895, 1896, 1910], "5724": [1210, 1910], "1208": [1210, 1910], "mathrlap": [1211, 1217, 1218, 1219, 1220, 1228, 1231, 1240, 1242, 1244, 1245, 1601], "qquad": [1211, 1213, 1217, 1218, 1219, 1220, 1221, 1228, 1231, 1240, 1242, 1244, 1245, 1601], "eigenvalu": [1211, 1217, 1218, 1219, 1220, 1233, 1236, 1239, 1244, 1245, 1254, 1689, 1853], "resp": [1211, 1218, 1220, 1244, 1245, 1262], "5266": 1211, "9586": 1211, "0626j": 1211, "4160": 1211, "5895": 1211, "2322": 1211, "2976j": 1211, "4928": [1211, 1816], "4692e": 1211, "8747e": 1211, "check_error": [1212, 1223, 1225, 1230, 1243, 1853], "performantli": 1212, "3792": 1212, "9831j": 1212, "8757": 1212, "5425": 1212, "6374j": 1212, "kappa": 1213, "_p": [1213, 1423], "frobeniu": [1213, 1227, 1234, 1238, 1641], "nuc": [1213, 1234, 1238, 1251, 1612, 1621, 1641], "nuclear": [1213, 1234, 1238, 1641], "sigma_1": [1213, 1227, 1236, 1239], "sigma_n": 1213, "kappa_2": 1213, "kappa_": 1213, "4142": [1213, 1238, 1641, 1693], "1623": [1213, 1234], "2426": [1213, 1238, 1641], "7071": [1213, 1756], "5917": 1213, "9941": 1214, "5132": 1214, "5681": 1214, "4653": 1214, "4507": 1214, "4119": 1214, "6163": 1214, "1073": 1214, "3957": 1214, "9666": [1214, 1504], "0840": 1214, "3357": 1214, "2139": 1214, "slogdet": [1215, 1262, 1853, 1895], "0934": 1215, "1990": [1215, 1262], "4099": [1215, 1262], "7386": [1215, 1262], "diagonaliz": [1217, 1219], "eigenvector": [1217, 1218, 1254, 1853], "neq": [1217, 1218, 1221, 1245, 1315, 1417, 1419, 1654, 1655, 1656, 1658, 1660, 1666, 1667, 1669, 1673, 1800], "phi": [1217, 1218, 1245, 1364, 1511, 1800], "shall": [1217, 1218, 1245, 1603, 1607], "lambda_i": [1217, 1218, 1233], "lambda_j": [1217, 1218], "eigval": [1217, 1853], "9828": [1217, 1824, 1886], "3889j": 1217, "4617": 1217, "3010j": 1217, "1662": 1217, "7435j": 1217, "6139": 1217, "0562j": 1217, "1226": [1217, 1219], "5738j": [1217, 1219], "7537": [1217, 1219], "1286j": [1217, 1219], "9218": 1217, "1882": 1217, "2220j": 1217, "0270": 1217, "3867j": 1217, "7119e": 1217, "2841e": 1217, "uplo": [1218, 1220, 1853], "unitari": [1218, 1221, 1240, 1245, 1601, 1687], "eigvalsh": [1218, 1236], "9228": [1218, 1220], "2029": [1218, 1220], "0862j": [1218, 1220], "3464": [1218, 1220], "3277": [1218, 1220], "9415": [1218, 1220], "0846": 1218, "9964": 1218, "9170": 1218, "3898j": 1218, "0331j": 1218, "1062e": 1218, "5423e": 1218, "polynomi": [1219, 1220, 1682], "_n": [1219, 1220, 1222, 1601, 1880], "4576e": [1219, 1246], "5797": 1220, "4629": 1220, "1605": 1220, "3780": 1220, "1113": [1220, 1886], "7381": 1220, "h_1h_2": 1221, "h_k": 1221, "h_i": [1221, 1448], "_m": [1221, 1601], "tau_i": 1221, "8034": 1221, "4184j": 1221, "2588": 1221, "0174j": 1221, "6853": 1221, "7953j": 1221, "0790": 1221, "5620j": 1221, "6989j": 1221, "5360": 1221, "1193j": 1221, "3877": 1221, "6691j": 1221, "3512": 1221, "3024j": 1221, "4766": 1221, "5783j": 1221, "0361": [1221, 1886], "6587j": 1221, "6396": [1221, 1886], "1612j": 1221, "3693": 1221, "4481j": 1221, "aa": 1222, "pinv": [1222, 1227, 1691], "moor": [1222, 1239], "penros": [1222, 1239], "ainv": [1222, 1223, 1243, 1247], "1921e": 1222, "9073e": [1222, 1465], "5107e": 1222, "ldl": [1224, 1226], "indefinit": 1224, "ld": [1224, 1225, 1226, 1853], "sytrf": [1224, 1225], "ldl_solv": 1224, "ldl_factor_ex": [1224, 1226], "2079": [1224, 1225, 1910], "2414": [1224, 1225], "9428": [1224, 1225], "4554": [1224, 1225], "3264": [1224, 1225], "3823": [1224, 1225], "5884": [1224, 1225], "9595": [1224, 1225, 1756], "2695": [1224, 1225], "8513": [1224, 1225], "1633": [1224, 1225], "ldl_factor": 1225, "rcond": [1227, 1239, 1691, 1853], "_f": 1227, "gelsi": 1227, "gelsd": 1227, "gelss": 1227, "tridiagon": 1227, "sigma_i": [1227, 1245, 1800], "residu": [1227, 1254, 1853, 1886], "singular_valu": [1227, 1853], "lh": 1227, "rh": [1227, 1272], "0838": [1227, 1886], "2275": [1227, 1302], "3844": 1227, "5499": 1227, "1175": 1227, "9102": 1227, "0870": 1227, "6772": 1227, "7758": 1227, "5109": 1227, "4382": 1227, "3769": 1227, "1818": 1227, "3450": 1227, "0806": [1227, 1886], "3967": 1227, "3994": 1227, "1521": 1227, "1473": 1227, "9194": 1227, "0458": 1227, "6705": [1227, 1286], "1802": 1227, "4086": 1227, "5152e": 1227, "almost": [1228, 1229, 1892], "5007": 1228, "9755": 1228, "0489": 1228, "9644": [1228, 1281], "9605e": 1228, "0376e": 1228, "lu_factor_ex": [1229, 1271], "lu_unpack": [1229, 1271, 1853, 1895], "b1": 1229, "b2": [1229, 1878, 1884], "a_factor": 1229, "getrf": [1230, 1243], "adjoint": [1231, 1853, 1895, 1913, 1915], "3891": 1233, "8660": 1233, "ord": [1234, 1238, 1251, 1641, 1853, 1855, 1895], "la": [1234, 1238, 1251, 1886], "2829": 1234, "2627": 1234, "0756": 1235, "4980": 1235, "6617": 1235, "4994": 1235, "9980": 1235, "2731": 1235, "8001": 1235, "2640": 1235, "4571": 1235, "5511": 1235, "0163": [1235, 1281], "5292": 1235, "4899": 1235, "0822": 1235, "2773": [1235, 1870], "varepsilon": [1236, 1239], "tol": [1236, 1254, 1853], "fewest": 1237, "nd": [1237, 1889], "bc": [1237, 1896], "75000": 1237, "148": 1237, "vector_norm": [1238, 1641], "matrix_norm": [1238, 1251, 1602, 1641], "7460": [1238, 1641], "3485": 1238, "8570e": 1238, "8480": 1238, "2361": [1238, 1641, 1642], "7417": [1238, 1641], "computation": [1239, 1883], "5495": [1239, 1302], "0979": 1239, "4092": 1239, "4132": [1239, 1762], "1143": 1239, "3662": 1239, "6374": 1239, "9294": 1239, "3269": [1239, 1886], "5745": [1239, 1794, 1795, 1837, 1838], "0382": [1239, 1303], "5922": 1239, "6759": 1239, "0600": 1239, "1933": 1239, "2090": 1239, "0903": 1239, "0817": 1239, "4752": [1239, 1799], "7124": 1239, "1631": 1239, "2272": 1239, "1356": 1239, "3933": 1239, "5023": 1239, "0308": 1239, "1725": 1239, "5216": 1239, "apinv": 1239, "5633e": 1239, "0830e": 1239, "wide": [1240, 1245, 1601, 1758, 1877, 1880, 1886, 1896], "51": [1240, 1412, 1699], "167": [1240, 1699], "68": [1240, 1699, 1852, 1854], "8571": [1240, 1699], "3943": [1240, 1699], "3314": [1240, 1699], "4286": [1240, 1699], "9029": [1240, 1699], "0343": [1240, 1699], "2857": [1240, 1699], "1714": [1240, 1699, 1886], "9429": [1240, 1699], "175": [1240, 1699], "q2": 1240, "r2": [1240, 1453], "6099e": 1240, "2158e": 1240, "logabsdet": [1241, 1853], "0032": 1241, "1219": [1241, 1718], "6690": 1241, "1161": 1241, "4053": 1241, "6218": [1241, 1813], "9273": 1241, "0082": 1241, "7576": 1241, "logdet": [1241, 1853, 1895], "linalg_slogdet": [1241, 1853, 1895], "2776": 1241, "solve_triangular": [1242, 1823], "expand_a": [1242, 1853, 1880, 1895, 1913], "rectangular": [1244, 1245, 1273, 1873], "triu_": [1244, 1853], "tril_": [1244, 1853], "full_matric": [1245, 1246, 1606, 1800, 1851, 1853], "vh": [1245, 1606, 1800, 1851, 1853], "gesvdj": [1245, 1246, 1800], "jacobi": 1245, "gesvda": [1245, 1246], "gesvd": [1245, 1246, 1800], "u_k": 1245, "v_k": 1245, "sigma_j": [1245, 1800], "eigendecomposit": 1245, "0486e": 1245, "0957e": 1245, "5139": 1246, "1087": 1246, "1066": 1246, "ind": [1247, 1248, 1853, 1881], "tensorsolv": 1247, "atensorinv": 1247, "movedim": [1248, 1288, 1853, 1881, 1895, 1913], "tensorinv": 1248, "vandermond": [1249, 1836], "pmatrix": 1249, "x_n": [1249, 1330, 1331, 1374, 1375, 1381, 1405, 1445, 1821, 1875], "125": [1249, 1432, 1836, 1853], "overlin": [1250, 1839], "3223": 1250, "2815": 1250, "1944": [1250, 1886], "4345": 1251, "pickle_modul": [1253, 1731], "weights_onli": [1253, 1849, 1864], "pickle_load_arg": 1253, "register_packag": 1253, "binaryio": [1253, 1731, 1897], "untrust": [1253, 1849, 1864, 1897], "unsaf": [1253, 1603, 1606, 1853, 1878, 1897], "tamper": [1253, 1897], "ram": [1253, 1878], "surg": 1253, "decod": [1253, 1457, 1458, 1459, 1594, 1897], "utf": [1253, 1893, 1897], "unicodedecodeerror": 1253, "codec": 1253, "0x": 1253, "latin1": 1253, "byte_arrai": 1253, "niter": [1254, 1689, 1801], "ortho_iparam": 1254, "ortho_fparam": 1254, "ortho_bparam": 1254, "knyazev": 1254, "knyazev2001": 1254, "stathopoulosetal2002": 1254, "converg": [1254, 1445, 1601, 1656, 1657, 1681, 1874, 1886, 1889], "precondition": 1254, "eigenpair": 1254, "criterion": [1254, 1330, 1331, 1348, 1350, 1375, 1381, 1405, 1406, 1417, 1418, 1419, 1445, 1446, 1462, 1463, 1496, 1674, 1706, 1882], "fep": 1254, "eigenproblem": 1254, "iparam": 1254, "fparam": 1254, "bparam": 1254, "ivar": 1254, "fvar": 1254, "bvar": 1254, "tvar": 1254, "istep": 1254, "converged_count": 1254, "rerr": 1254, "force_stop": 1254, "2001": 1254, "precondit": 1254, "eigensolv": 1254, "siam": 1254, "sci": 1254, "517": 1254, "541": 1254, "epub": 1254, "doi": [1254, 1368, 1764], "1137": 1254, "s1064827500366124": 1254, "andrea": 1254, "stathopoulo": 1254, "kesheng": 1254, "2002": [1254, 1764], "2165": 1254, "2182": 1254, "s1064827500370883": 1254, "duerschetal2018": 1254, "jed": 1254, "duersch": 1254, "meiyu": 1254, "shao": 1254, "chao": 1254, "ming": 1254, "gu": 1254, "c655": 1254, "c676": 1254, "17m1129830": 1254, "log_": [1255, 1256, 1257, 1258, 1853, 1868], "7767": 1255, "3234": 1255, "2156": 1255, "2411": 1255, "5739": 1255, "5637": 1255, "4640": 1255, "1952": 1255, "4226": 1255, "5204": [1255, 1708], "5224": 1256, "9354": 1256, "7257": 1256, "1301": 1256, "2820": 1256, "0290": 1256, "1392": 1256, "8857": 1256, "6476": 1256, "0090": [1257, 1316, 1695, 1910], "9923": 1257, "5372": 1257, "2492": 1257, "8653": 1257, "7055": 1257, "7705": 1257, "2225": 1257, "8419": 1258, "8003": [1258, 1890], "9971": 1258, "5287": 1258, "0490": 1258, "2483": 1258, "0042": 1258, "9196": 1258, "3504": [1258, 1816], "logsumexp": [1259, 1853, 1868, 1895, 1910], "3069": 1259, "6867": 1259, "8731": 1259, "30000": 1259, "1269e": 1259, "log_2": 1260, "logaddexp": [1260, 1853, 1895], "limits_": 1261, "42296738": 1261, "04462666": 1261, "86278635": 1261, "94622083": 1261, "05277811": 1261, "39202815": 1261, "83525007": 1261, "84492621": 1261, "06084887": 1261, "06844475": 1261, "2611": [1262, 1813], "9254": 1262, "6213": [1262, 1886], "6843": 1262, "3242": 1262, "9665": 1262, "4539": 1262, "0887": [1262, 1910], "1336": 1262, "4025": 1262, "7089": [1262, 1357], "9032": 1262, "3031": 1262, "2589": 1268, "1135": 1268, "5481": [1268, 1281, 1886], "9566": 1268, "sum_j": [1269, 1404, 1447, 1449, 1569, 1779, 1910], "0593": [1269, 1886], "5696": 1269, "6859e": 1269, "compute_pivot": 1271, "transposit": [1271, 1820, 1909], "perm": 1271, "a_lu": 1271, "5558": 1271, "1684": 1271, "1551": 1271, "1940": 1271, "6189": 1271, "5497": 1271, "4526": 1271, "2526": 1271, "3285": 1271, "7988": 1271, "7175": 1271, "9701": 1271, "2634": 1271, "9255": 1271, "3459": 1271, "00000e": 1272, "8312": 1272, "unpack_data": [1273, 1853], "unpack_pivot": [1273, 1853], "l_": [1273, 1319, 1323, 1327, 1331, 1342, 1343, 1344, 1345, 1382, 1407], "u_": [1273, 1654, 1658], "3552": [1275, 1505], "3825": 1275, "8297": 1275, "3477": 1275, "2035": [1275, 1794, 1795, 1837, 1838], "2252": [1275, 1910], "5002": 1275, "6248": [1275, 1284], "1307": 1275, "0608": [1275, 1773], "1244": 1275, "0139": 1275, "6763": 1279, "7445": 1279, "2369": 1279, "argmax": [1279, 1322, 1407, 1537, 1538, 1539, 1811, 1851, 1853, 1895], "max_indic": 1279, "2360": 1279, "2942": 1279, "1222": [1279, 1886], "8475": 1279, "1949": 1279, "1127": 1279, "6702": 1279, "5717": 1279, "9207": 1279, "1297": 1279, "8768": 1279, "6172": 1279, "6060": 1279, "2432": 1279, "3288": 1281, "3367": 1281, "nanmean": [1281, 1853, 1895], "3841": 1281, "6320": 1281, "4254": 1281, "7384": 1281, "0131": 1281, "6549": [1281, 1756], "4279": 1281, "3350": 1281, "7694": 1281, "5600": [1281, 1466], "0842": 1281, "9580": 1281, "3623": 1281, "2343": [1281, 1870], "5085": 1281, "4599": 1281, "1807": 1281, "5219": 1282, "5212": 1282, "2202": 1282, "2505": 1282, "3982": 1282, "9948": 1282, "3518": 1282, "3131": 1282, "3180": [1282, 1909], "6993": 1282, "0436": 1282, "0438": 1282, "2270": 1282, "2751": 1282, "7303": 1282, "2192": 1282, "3321": 1282, "2488": 1282, "0778": 1282, "9510": 1282, "7048": 1282, "4742": [1282, 1829, 1910], "7125": [1282, 1781], "plot": [1283, 1877, 1899, 1914], "t_0": [1283, 1674], "t_": [1283, 1363, 1509, 1673, 1674, 1853, 1909], "s_0": 1283, "s_": [1283, 1320, 1321, 1360, 1464], "g_0": 1283, "g_": [1283, 1658, 1668, 1669], "g_i": 1283, "t_i": 1283, "0d": [1283, 1406], "xy": 1283, "50276": 1283, "cartesian_prod": [1283, 1853, 1895], "grid_x": 1283, "grid_i": 1283, "dstack": [1283, 1853, 1895, 1909], "matplotlib": [1283, 1914], "pyplot": [1283, 1914], "plt": 1283, "plot_surfac": 1283, "6750": 1284, "0857": [1284, 1826], "7197": [1284, 1845], "argmin": [1284, 1851, 1853, 1895], "min_indic": [1284, 1853], "1334": 1284, "2803": 1284, "4644": [1284, 1794, 1795, 1837, 1838], "2635": [1284, 1886], "3651": 1284, "0384": 1284, "0128": 1284, "7015": 1284, "1153": 1284, "9849": 1284, "1458": [1284, 1910], "5788": 1284, "deduc": [1286, 1909], "4851": 1286, "5037": 1286, "3633": 1286, "0760": 1286, "3362": [1288, 1289], "8437": [1288, 1289], "9627": [1288, 1289], "1727": [1288, 1289], "5173": [1288, 1289], "1398": [1288, 1289], "mpsalloc": [1290, 1291], "metal": [1291, 1299, 1863, 1887], "mpsgraph": 1291, "wait_until_complet": [1295, 1296], "signpost": [1295, 1296, 1297], "xcode": 1296, "recommendedmaxworkingsets": 1299, "unlimit": [1299, 1878], "1321": 1302, "4370": 1302, "1289": 1302, "0527": 1302, "3077": [1302, 1790], "0881": 1302, "1259": 1302, "0284": 1302, "2015": [1303, 1873, 1886], "6087": 1303, "1494": 1303, "5491": 1303, "260": 1303, "8663": 1303, "3137": 1303, "0700": 1303, "8378": 1303, "5146": 1303, "1216": 1303, "5244": 1303, "5767": 1303, "1363": 1303, "5877": 1303, "5083": 1303, "1614": 1303, "1645": 1303, "7021": 1303, "0085": 1303, "0367": 1303, "1567": 1303, "4312": 1303, "1019": 1303, "4394": 1303, "8753": 1303, "_sampl": 1304, "thtensorrandom": 1304, "320": [1304, 1440], "0404": 1306, "6361": 1306, "multigammaln": [1307, 1910], "4028e": 1308, "1400e": 1308, "isnan": [1309, 1851, 1853, 1895, 1909], "midpoint": [1311, 1700], "weakli": [1313, 1314, 1910], "to_spars": [1314, 1777, 1853, 1890, 1895, 1909], "2262": [1316, 1695], "0682": [1316, 1695], "2866": [1316, 1695], "3940": [1316, 1695], "5x7": [1320, 1324], "7x7": [1320, 1324], "10x7": [1320, 1324], "cube": [1321, 1325, 1706], "d_": [1321, 1325, 1329, 1341, 1344, 1347, 1409, 1412, 1437, 1440, 1466, 1471, 1513, 1824, 1825, 1826, 1827], "5x7x9": [1321, 1325], "7x7x7": [1321, 1325], "7x9x8": [1321, 1325], "n_class": 1322, "cutoff": [1322, 1873], "div_valu": 1322, "head_bia": 1322, "edouard": 1322, "grave": [1322, 1337], "armand": 1322, "joulin": 1322, "moustapha": 1322, "ciss\u00e9": 1322, "grangier": 1322, "herv\u00e9": 1322, "j\u00e9gou": 1322, "imbalanc": 1322, "zipf": 1322, "law": 1322, "102": 1322, "1001": 1322, "1002": 1322, "_class": 1322, "maxunpool1d": [1323, 1407, 1540, 1835], "maxunpool2d": [1324, 1362, 1408, 1541, 1835], "maxunpool3d": [1325, 1363, 1409, 1542, 1835], "selu": [1326, 1359, 1506, 1853, 1873, 1893, 1895], "n_i": [1327, 1328, 1329, 1342, 1343, 1344, 1407, 1408, 1409, 1462, 1463], "c_j": [1327, 1328, 1329, 1407, 1408, 1409], "size_averag": [1330, 1331, 1348, 1350, 1374, 1380, 1381, 1405, 1406, 1417, 1418, 1419, 1421, 1428, 1445, 1446, 1462, 1485, 1486, 1494, 1496, 1521, 1525, 1526, 1536, 1544, 1545, 1546, 1547, 1548, 1556, 1567, 1568, 1579, 1853], "unreduc": [1330, 1331, 1350, 1375, 1381, 1405, 1421, 1445, 1463], "ell": [1330, 1331, 1350, 1374, 1375, 1381, 1405, 1421, 1445, 1463], "l_1": [1330, 1331, 1350, 1374, 1375, 1381, 1405, 1421, 1445, 1463], "l_n": [1330, 1331, 1350, 1374, 1375, 1381, 1405, 1421, 1445, 1463], "w_n": [1330, 1331, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764], "y_n": [1330, 1331, 1350, 1374, 1375, 1381, 1405, 1421, 1445, 1821, 1875], "lim_": [1330, 1875], "secondli": 1330, "straight": [1330, 1515], "rescal": [1330, 1331, 1350, 1418, 1419, 1421, 1447, 1449, 1485, 1486, 1496, 1548, 1606, 1635], "nbatch": [1330, 1331], "pos_weight": [1331, 1486, 1853], "classif": [1331, 1337, 1350, 1417, 1419, 1421, 1446, 1497, 1850, 1873, 1901], "ell_c": 1331, "l_c": 1331, "p_c": 1331, "random_": [1331, 1350, 1421, 1486, 1853, 1868, 1917], "hat": [1332, 1333, 1334, 1377, 1378, 1379, 1453], "terminologi": [1332, 1333, 1334, 1453], "tempor": [1332, 1334, 1337, 1453, 1466, 1497, 1524, 1582], "5d": [1334, 1379, 1466, 1513, 1524, 1551, 1582], "volumetr": [1334, 1453, 1466, 1513, 1524, 1582, 1583, 1584], "spatio": [1334, 1453], "in1_featur": 1335, "in2_featur": 1335, "in1": [1335, 1484], "in2": [1335, 1484], "blank": [1337, 1497, 1853, 1856], "zero_infin": [1337, 1497, 1853], "connectionist": [1337, 1497], "unseg": 1337, "longest": [1337, 1628, 1630, 1631, 1882], "input_length": [1337, 1497, 1853, 1882], "target_length": [1337, 1497, 1853], "s_n": 1337, "target_n": 1337, "unbatch": [1337, 1350, 1361, 1366, 1377, 1384, 1420, 1429, 1457, 1507], "s_min": 1337, "toronto": 1337, "edu": [1337, 1706], "icml_2006": 1337, "256": [1337, 1696, 1878, 1893], "background": [1337, 1345, 1513, 1551, 1888, 1905], "channel_shuffl": [1338, 1853, 1895], "_left": [1339, 1340, 1341, 1435, 1436, 1437, 1438, 1439, 1440, 1469, 1470, 1471, 1551], "_right": [1339, 1340, 1341, 1435, 1436, 1437, 1438, 1439, 1440, 1469, 1470, 1471, 1551], "0491": [1339, 1469], "7152": [1339, 1469], "0749": [1339, 1469], "3287": [1339, 1469], "8966": [1339, 1469], "1466": [1339, 1469], "2771": [1339, 1469], "6616": [1339, 1469], "4523": [1339, 1469], "1255": [1339, 1469], "6372": [1339, 1469, 1800], "1182": [1339, 1469], "8652": [1339, 1469], "_top": [1340, 1341, 1436, 1437, 1439, 1440, 1470, 1471, 1551], "_bottom": [1340, 1341, 1436, 1437, 1439, 1440, 1470, 1471, 1551], "6585": 1340, "4320": [1340, 1809], "8701": 1340, "4649": 1340, "_front": [1341, 1437, 1440, 1471, 1551], "_back": [1341, 1437, 1440, 1471, 1551], "_j": [1342, 1343], "star": [1342, 1343, 1344, 1855], "\u00e0": [1342, 1343, 1344, 1345, 1346, 1347, 1361, 1465], "trou": [1342, 1343, 1344, 1345, 1346, 1347, 1361, 1465], "harder": [1342, 1343, 1344, 1345, 1346, 1347, 1361, 1408, 1409, 1465], "nice": [1342, 1343, 1344, 1345, 1346, 1347, 1361, 1407, 1408, 1409, 1465, 1869, 1875, 1897], "prod_": [1343, 1344, 1346, 1347, 1360, 1464, 1660], "out_j": 1344, "deconvolut": [1345, 1346, 1347, 1491, 1492, 1493], "_pad": [1345, 1346, 1347], "dissimilar": [1348, 1374], "semi": [1348, 1374, 1873], "supervis": [1348, 1374], "vert": [1349, 1423, 1495], "_2": [1349, 1495, 1602, 1635], "ast_1": [1349, 1365], "ast_2": [1349, 1365], "ignore_index": [1350, 1421, 1496, 1548, 1853], "label_smooth": [1350, 1496, 1853], "unbalanc": [1350, 1421], "d_1": [1350, 1421, 1496, 1548], "d_2": [1350, 1421, 1496, 1548], "d_k": [1350, 1421, 1496, 1548], "_index": [1350, 1421], "logsoftmax": [1350, 1421, 1447, 1532], "nllloss": [1350, 1447, 1548, 1569, 1835], "blend": 1350, "smooth": [1350, 1375, 1445, 1450, 1496, 1667], "w_c": 1350, "truth": [1350, 1496, 1862, 1914], "rethink": [1350, 1496], "incept": [1350, 1496], "spectral_norm": [1351, 1625], "neuron": 1352, "detector": 1352, "dropout1d": [1354, 1853], "_freez": 1357, "sparseadam": [1357, 1896], "0251": 1357, "6902": [1357, 1697], "7172": 1357, "6431": 1357, "0748": 1357, "6969": 1357, "4970": 1357, "3448": 1357, "9685": 1357, "3677": 1357, "7265": 1357, "1685": 1357, "4362": 1357, "4004": [1357, 1781], "9400": 1357, "9124": 1357, "3616": 1357, "1151": 1357, "0309": 1357, "9315": 1357, "1655": [1357, 1878], "9897": 1357, "0635": 1357, "7895": 1357, "0364": 1357, "6778": 1357, "5803": 1357, "bag": [1358, 1505], "per_sample_weight": [1358, 1505, 1853], "embedding_sum": 1358, "8861": 1358, "4350": 1358, "0523": 1358, "1306": 1358, "5798": 1358, "0044": 1358, "7082": [1358, 1505], "2145": [1358, 1505], "6251": [1358, 1505], "6500": 1358, "satur": [1359, 1506], "alphadropout": [1359, 1479], "160": [1360, 1896], "unfold": [1361, 1853, 1895, 1913], "prod_d": [1361, 1465], "neighborhood": [1361, 1465], "col2im": [1361, 1851, 1853, 1895], "fold_param": [1361, 1465], "input_on": [1361, 1465], "output_ratio": [1362, 1363, 1508, 1509, 1853], "_random_sampl": [1362, 1363, 1508, 1509, 1853], "ben": [1362, 1363, 1508, 1509], "graham": [1362, 1363, 1508, 1509], "oh": [1362, 1363, 1508, 1509], "ow": [1362, 1363, 1508, 1509], "_ratio": [1362, 1363, 1509], "13x12": [1362, 1508], "kt": [1363, 1482, 1490, 1493, 1509, 1539], "ot": [1363, 1509], "13x12x11": [1363, 1509], "044715": [1364, 1511], "pack_sequ": [1366, 1384, 1429, 1630, 1632], "bias_ih": [1367, 1385, 1431], "bias_hh": [1367, 1385, 1431], "const": [1368, 1885], "homoscedast": [1368, 1510], "heteroscedast": [1368, 1510], "nix": 1368, "weigend": 1368, "1994": 1368, "icnn": 1368, "94": 1368, "orlando": 1368, "fl": 1368, "usa": [1368, 1914], "374138": 1368, "instancenorm": [1369, 1902], "shrinkag": [1370, 1451, 1516, 1572], "mobilenetv3": [1372, 1518], "_val": 1373, "l1loss": [1375, 1445, 1526], "outlier": [1375, 1445, 1900, 1901], "huber": [1375, 1445], "smoothl1loss": [1375, 1567], "insensit": 1376, "unused_argument1": 1376, "unused_argument2": 1376, "ingredi": [1377, 1378, 1379], "styliz": [1377, 1378, 1379], "rgb": [1378, 1379, 1914], "color": [1379, 1854, 1855, 1914], "log_target": [1380, 1525, 1853], "pred": [1380, 1594, 1851, 1887, 1896, 1905], "kl": [1380, 1525, 1850], "summaris": 1380, "loss_pointwis": 1380, "batchmean": [1380, 1525], "kl_loss": 1380, "mae": 1381, "f_t": [1384, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "hf": [1384, 1385], "g_t": [1384, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "ig": [1384, 1385], "hg": [1384, 1385], "o_t": 1384, "ho": [1384, 1385], "c_t": 1384, "odot": 1384, "forget": [1384, 1854, 1855], "proj_siz": [1384, 1430], "1402": 1384, "c_0": [1384, 1385], "proj": 1384, "c_n": 1384, "w_ii": 1384, "w_if": 1384, "w_ig": 1384, "w_io": 1384, "w_hi": 1384, "w_hf": 1384, "w_hg": 1384, "w_ho": 1384, "b_ii": 1384, "b_if": 1384, "b_ig": 1384, "b_io": 1384, "b_hi": 1384, "b_hf": 1384, "b_hg": 1384, "b_ho": 1384, "weight_hr_l": 1384, "_revers": 1384, "h_1": 1385, "c_1": 1385, "time_step": 1385, "_shape": 1386, "sentence_length": 1386, "lazymodulemixin": [1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399], "cls_to_becom": [1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1597], "convtranspose1d": [1393, 1491, 1835, 1902], "convtranspose3d": [1395, 1493, 1835, 1902], "instancenorm1d": [1396, 1523, 1902], "instancenorm2d": [1397, 1523, 1902], "instancenorm3d": [1398, 1523, 1902], "uninitializedparamet": [1399, 1585, 1850], "lrn": 1402, "signal_2d": 1402, "signal_4d": 1402, "output_2d": 1402, "output_4d": 1402, "x_j": [1404, 1447, 1449, 1569, 1779, 1883, 1910], "80827": [1410, 1411, 1412], "unpool": [1410, 1411, 1412], "maxpool3d": [1412, 1539, 1542, 1835, 1902], "unpooled_output": 1412, "t_destin": 1414, "lrelu": [1415, 1886], "hing": [1417, 1419], "sum_i": [1418, 1419, 1446], "nelement": [1418, 1446], "jointli": 1420, "concat": [1420, 1853, 1895], "head_1": 1420, "head_h": 1420, "head_i": 1420, "qw_i": 1420, "kw_i": 1420, "vw_i": 1420, "scaled_dot_product_attent": [1420, 1853, 1895], "fastpath": 1420, "inference_mod": [1420, 1461], "nestedtensor": [1420, 1461, 1870], "multihead_attn": 1420, "e_q": 1420, "e_k": 1420, "e_v": 1420, "_head": [1420, 1457], "merge_mask": 1420, "mask_typ": 1420, "merged_mask": 1420, "nll": 1421, "crossentropyloss": [1421, 1496], "num_paramet": 1422, "nchannel": 1422, "decai": [1422, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1669, 1672, 1676, 1678, 1679, 1682, 1683, 1685, 1757, 1896], "legitim": [1422, 1513, 1881], "vert_p": 1423, "fromkei": 1424, "popitem": [1424, 1895], "setdefault": [1424, 1895], "upscale_factor": [1426, 1554, 1853], "upscal": 1426, "shi": [1426, 1427], "2016": [1426, 1427, 1463], "_factor": [1426, 1427, 1466, 1467, 1468], "pixel_shuffl": [1426, 1853, 1895, 1902], "downscale_factor": [1427, 1555, 1853], "pixelshuffl": [1427, 1554, 1555], "downscal": 1427, "pixel_unshuffl": [1427, 1853, 1895, 1902], "log_input": [1428, 1556, 1853], "poisson": [1428, 1556, 1757, 1850, 1853, 1895], "stirl": [1428, 1556], "hh": [1429, 1431], "flatten_paramet": 1430, "3333333333333333": [1432, 1672, 1678, 1853], "leaki": [1432, 1561, 1873], "rectifi": [1432, 1433, 1558, 1873], "liner": 1432, "empir": 1432, "1505": 1432, "00853": 1432, "crelu": 1433, "1603": 1433, "05201": 1433, "480": 1440, "6732632423543772848170429916717": [1441, 1564], "0507009873554804934193349852946": [1441, 1564], "kaiming_norm": 1441, "kaiming_normal_": [1441, 1850, 1857, 1873], "initialis": 1441, "calculate_gain": [1441, 1850, 1857, 1873], "modulelist": [1442, 1886], "cascad": 1442, "relu2": [1442, 1585], "swish": [1443, 1566], "coin": [1443, 1566], "explod": 1445, "cnn": [1445, 1900], "ross": 1445, "girshick": 1445, "quadrat": [1445, 1882], "huberloss": [1445, 1522], "lie": [1447, 1449, 1569, 1779, 1910, 1914], "w_j": 1448, "soft": [1451, 1515, 1572], "softshrinkag": 1451, "convert_sync_batchnorm": 1453, "r1": 1453, "sync_bn_network": 1453, "ddp_sync_bn_network": 1453, "sync_bn_modul": 1453, "d_model": [1457, 1458, 1459, 1460, 1461], "nhead": [1457, 1458, 1459, 1460, 1461], "num_encoder_lay": 1457, "num_decoder_lay": 1457, "dim_feedforward": [1457, 1459, 1461], "custom_encod": 1457, "custom_decod": 1457, "layer_norm_ep": [1457, 1459, 1461], "norm_first": [1457, 1459, 1461], "ashish": [1457, 1459, 1461], "vaswani": [1457, 1459, 1461], "noam": [1457, 1459, 1461], "shazeer": [1457, 1459, 1461], "niki": [1457, 1459, 1461], "parmar": [1457, 1459, 1461], "jakob": [1457, 1459, 1461], "uszkoreit": [1457, 1459, 1461], "llion": [1457, 1459, 1461], "jone": [1457, 1459, 1461], "aidan": [1457, 1459, 1461], "gomez": [1457, 1459, 1461], "lukasz": [1457, 1459, 1461], "illia": [1457, 1459, 1461], "polosukhin": [1457, 1459, 1461], "6010": [1457, 1459, 1461], "feedforward": [1457, 1459, 1461, 1873], "transformer_model": 1457, "word_language_model": 1457, "src_mask": [1457, 1461], "tgt_mask": [1457, 1458, 1459], "memory_mask": [1457, 1458, 1459], "src_key_padding_mask": [1457, 1460, 1461], "tgt_key_padding_mask": [1457, 1458, 1459], "memory_key_padding_mask": [1457, 1458, 1459], "_mask": [1457, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624], "_key_padding_mask": 1457, "generate_square_subsequent_mask": 1457, "sz": 1457, "decoder_lay": [1458, 1459], "transformerdecoderlay": 1458, "transformer_decod": 1458, "tgt_is_caus": [1458, 1459], "memory_is_caus": [1458, 1459], "attn": [1459, 1461], "encoder_lay": [1460, 1461], "enable_nested_tensor": 1460, "mask_check": 1460, "1810": 1460, "04805": 1460, "transformerencoderlay": 1460, "transformer_encod": 1460, "flashattent": [1461, 1563], "triplet": [1462, 1463], "x3": 1462, "balnta": [1462, 1463], "riba": [1462, 1463], "a_i": [1462, 1463, 1759], "p_i": [1462, 1463], "rm": [1462, 1463], "bf": [1462, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "rvert_p": [1462, 1549], "tripletmarginwithdistanceloss": [1462, 1580], "triplet_loss": [1462, 1463], "distance_funct": [1463, 1580], "l_i": 1463, "tripletmarginloss": [1463, 1579], "l_p": [1463, 1549], "pairwisedist": [1463, 1552], "penal": [1463, 1886], "distant": 1463, "anchor_id": 1463, "positive_id": 1463, "negative_id": 1463, "l_infin": 1463, "bmva": 1463, "bmvc": 1463, "paper119": 1463, "unflattened_s": 1464, "namedtensor": 1464, "namedshap": 1464, "u_1": 1464, "u_n": 1464, "u_i": 1464, "im2col": [1465, 1853, 1895], "fold": [1465, 1801, 1853, 1863, 1893, 1903, 1909], "2x3": 1465, "3x4": 1465, "inp_unf": 1465, "out_unf": 1465, "recompute_scale_factor": [1466, 1524], "bicub": [1466, 1513, 1524, 1582, 1835], "trilinear": [1466, 1513, 1524, 1582, 1835], "input_3x3": 1466, "4375": 1466, "8125": 1466, "9375": 1466, "2400": [1466, 1816], "1200": [1466, 1728, 1878], "8800": 1466, "4400": [1466, 1816], "7200": 1466, "0400": 1466, "2800": [1466, 1751], "3600": 1466, "5200": 1466, "6400": 1466, "1678": 1470, "4418": 1470, "9466": [1470, 1910], "9604": 1470, "4219": 1470, "5241": 1470, "9162": 1470, "5436": [1470, 1816], "6446": 1470, "adaptiveavgpool1d": [1472, 1902], "tripl": [1474, 1477], "adaptivemaxpool1d": 1475, "adaptivemaxpool2d": [1476, 1835], "adaptivemaxpool3d": 1477, "ill": [1478, 1889], "avgpool1d": [1480, 1902], "avgpool3d": [1482, 1835, 1902], "iT": [1482, 1490, 1493], "padt": [1482, 1490, 1493], "score": [1486, 1563, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1850], "out_padw": [1491, 1492, 1493], "out_padh": [1492, 1493], "out_padt": 1493, "cosineembeddingloss": 1494, "ctcloss": [1497, 1835], "charact": [1497, 1748, 1852, 1855, 1869, 1905], "elu": [1503, 1853, 1893, 1895, 1902], "embedding_matrix": [1504, 1505], "8490": 1504, "9625": 1504, "6753": 1504, "7761": 1504, "6108": 1504, "6246": 1504, "9751": 1504, "3618": 1504, "4161": [1504, 1909], "2419": 1504, "7383": 1504, "0237": 1504, "7794": 1504, "0528": 1504, "3385": 1504, "8612": 1504, "1867": 1504, "5384": 1504, "8720": 1504, "6262": 1504, "7471": 1504, "embeddingbag": [1505, 1835, 1900, 1902, 1915], "3397": 1505, "5545": 1505, "5893": 1505, "4386": 1505, "5882": 1505, "featurealphadropout": 1506, "gaussiannllloss": 1510, "border": 1513, "affine_grid": [1513, 1853], "extrema": 1513, "pil": [1513, 1524], "overshoot": [1513, 1524, 1582], "gumbel": [1515, 1850], "y_hard": 1515, "y_soft": 1515, "hardtanh": [1520, 1851, 1853, 1863, 1895, 1902], "hingeembeddingloss": 1521, "use_input_stat": [1523, 1853], "antialia": 1524, "anti": 1524, "pillow": [1524, 1914], "buggi": 1524, "inter_nearest": 1524, "kldivloss": 1525, "batchsiz": [1525, 1782, 1783, 1784, 1786, 1787, 1909], "leaky_relu": [1529, 1851, 1853, 1873, 1895, 1902], "localresponsenorm": 1531, "_stacklevel": [1532, 1569, 1570, 1853], "lppool1d": 1534, "lppool2d": 1535, "marginrankingloss": 1536, "max_unpool1d": [1537, 1853], "multimarginloss": 1545, "multilabelmarginloss": 1546, "multilabelsoftmarginloss": 1547, "n_0": 1549, "n_": 1549, "n_k": 1549, "everywher": [1550, 1796, 1896], "constantpad2d": 1551, "reflectionpad2d": [1551, 1835], "replicationpad2d": [1551, 1835], "t4d": 1551, "p1d": 1551, "p2d": 1551, "p3d": 1551, "pixelunshuffl": 1555, "poissonnllloss": 1556, "rrelu": [1562, 1853, 1895], "dropout_p": [1563, 1853], "masked_fil": [1563, 1853, 1868, 1870, 1895], "ev": 1563, "legend": 1563, "softmarginloss": 1568, "module_kwarg": 1578, "upsample_trilinear": 1583, "fo": 1583, "spatia": 1584, "mixin": [1585, 1850], "dry": 1585, "lazymlp": 1585, "lazylinear": 1585, "lazy_mlp": 1585, "8832e": 1585, "5636e": 1585, "1598e": 1585, "5637e": 1585, "8788e": 1585, "0042e": 1585, "0019": 1585, "lazymodul": 1585, "full_mlp": 1585, "3837": [1585, 1697], "0907": 1585, "6708": 1585, "5223": 1585, "9028": 1585, "2851": 1585, "6813": 1585, "5766": 1585, "8678": 1585, "1320": 1585, "2938": 1585, "0679": [1585, 1826], "2793": [1585, 1642], "1088": 1585, "1795": 1585, "2301": 1585, "2807": 1585, "2479": 1585, "1091": 1585, "has_uninitialized_param": 1585, "initialize_paramet": 1585, "register_backward_pre_hook": 1591, "check_reduct": 1594, "delay_all_reduce_named_param": 1594, "param_to_hook_all_reduc": 1594, "optimizer_param": 1594, "loss_func": [1594, 1905], "consume_prefix_in_state_dict_if_pres": 1594, "nccl2": 1594, "dictat": [1594, 1855], "megabyt": 1594, "mb": [1594, 1878], "detach_": [1594, 1853, 1868, 1902, 1909], "ddp_logging_data": 1594, "can_set_static_graph": 1594, "model_ddp": 1594, "_get_ddp_logging_data": 1594, "divide_by_initial_world_s": 1594, "syncbatchnorm": 1594, "exhaust": 1594, "deplet": 1594, "pariti": 1594, "discrep": [1594, 1706, 1883], "another_input": 1594, "predivid": 1594, "encode_and_decod": 1594, "encoded_tensor": 1594, "decoded_tensor": 1594, "error_if_nonfinit": 1598, "foreach": [1598, 1599, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669, 1896], "clip_valu": 1599, "orthogonal_map": 1601, "use_trivi": 1601, "qq": 1601, "matrix_exp": [1601, 1853, 1895], "caylei": 1601, "thin": [1601, 1699], "manifold": 1601, "register_parametr": [1601, 1602, 1603, 1604, 1635, 1871], "orth_linear": 1601, "parametrizedlinear": [1601, 1602], "moduledict": [1601, 1602, 1854, 1886], "parametrizationlist": [1601, 1602, 1606], "_orthogon": 1601, "9332e": 1601, "n_power_iter": [1602, 1635], "sn": [1602, 1635], "discrimin": [1602, 1635], "adversari": [1602, 1635], "lipschitz": 1602, "reimplement": [1602, 1635], "_spectralnorm": 1602, "convtranspos": [1602, 1635], "snm": 1602, "0081": 1602, "amaxbackward0": 1602, "original0": [1603, 1606], "original1": [1603, 1606], "tensor_nam": [1603, 1605, 1606, 1607], "right_invers": [1603, 1606], "out_rnn": 1604, "rnn_cell": 1604, "simplic": [1606, 1906], "inbuilt": 1606, "unparametr": 1606, "rankon": 1606, "surject": 1606, "s0_sqrt": 1606, "linear_rank_on": 1606, "matrix_rank": 1606, "leave_parametr": 1607, "unparametris": 1607, "prune": [1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1909], "skeleton": 1608, "compute_mask": [1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615], "importance_scor": [1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621], "apply_mask": [1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615], "pruned_tensor": [1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615], "default_mask": [1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615], "_orig": [1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624], "undon": [1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1624], "unprun": [1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623], "indexerror": [1612, 1614], "basepruningmethod": [1613, 1619], "add_pruning_method": 1613, "pruning_typ": [1613, 1617], "unstructur": [1613, 1617], "ravel": [1613, 1853, 1895], "nonmask": 1613, "bias_mask": [1616, 1618], "pruning_method": 1617, "typeerror": [1617, 1880, 1898, 1916, 1920], "parameters_to_prun": 1617, "l1unstructur": 1617, "parameters_to_vector": 1617, "forward_pre_hook": [1619, 1886], "random_unstructur": [1619, 1624], "odict_kei": 1620, "weight_orig": 1620, "weight_mask": [1620, 1623], "columns_prun": 1622, "t_modul": [1625, 1626, 1635, 1638], "weight_norm": 1626, "sorted_indic": [1627, 1629, 1630, 1632], "unsorted_indic": [1627, 1629, 1630, 1632], "abc": [1627, 1855], "axbc": 1627, "throughout": [1627, 1883, 1886, 1900], "conform": [1627, 1886], "is_cuda": [1627, 1868, 1895, 1911], "enforce_sort": [1628, 1629, 1630], "unsort": [1628, 1629, 1735], "shortest": 1628, "uncondition": [1628, 1849, 1880, 1920], "pad_sequ": [1629, 1633, 1853, 1895], "padding_valu": [1630, 1631, 1853], "total_length": [1630, 1882], "seq_unpack": 1630, "lens_unpack": 1630, "packed_sequ": 1632, "unpacked_sequ": 1632, "padded_sequ": 1633, "unpad": 1633, "unstack": 1633, "as_tensor": [1633, 1814, 1853, 1870, 1880, 1895, 1914, 1915, 1916], "unpadded_sequ": 1633, "module_cl": [1634, 1905], "5846e": 1634, "29": [1634, 1764, 1893], "8307e": 1634, "5250e": 1634, "1210e": 1634, "4677e": 1634, "5915e": 1634, "4013e": 1634, "weight_u": 1635, "parameters_and_buff": 1636, "decoupl": [1638, 1657], "weight_g": [1638, 1853], "weight_v": 1638, "1602": 1638, "07868": 1638, "as_tupl": [1640, 1845], "complexfloat": [1641, 1650], "0425": 1642, "7969": 1642, "2925": 1642, "7229": 1642, "2134": 1642, "0505": 1642, "1408": 1642, "0563": 1642, "0566": 1642, "0732": [1642, 1816], "0687": 1642, "1177": 1642, "2303": 1642, "1552": 1642, "6148": 1642, "6535": 1642, "8318": 1642, "3987": 1642, "9544": [1642, 1707], "6048": 1642, "7909": 1642, "120": [1644, 1914], "op_level_debug": 1647, "model_proto": [1648, 1649], "input_adapt": 1648, "output_adapt": 1648, "diagnostic_context": 1648, "adapt_torch_inputs_to_onnx": 1648, "model_arg": [1648, 1893], "model_kwarg": [1648, 1893], "xdoctest": 1648, "torch_doctest_onnx": 1648, "func_with_nested_input_structur": 1648, "x_dict": 1648, "y_tupl": 1648, "y1": [1648, 1777], "y2": [1648, 1777], "y3": 1648, "export_output": [1648, 1649], "dynamo_export": [1648, 1649, 1893], "adapt_torch_outputs_to_onnx": 1648, "model_output": 1648, "func_returning_tupl": 1648, "pt_output": 1648, "diagnosticcontext": 1648, "modelproto": [1648, 1649], "protobuf": [1648, 1649, 1893], "exportoutput": [1649, 1893], "bufferediobas": 1649, "protobufexportoutputseri": 1649, "serializetostr": 1649, "exported_model": 1649, "from_valu": 1650, "onnx_typ": 1650, "tensorprotodatatyp": 1650, "torch_c_value_with_type_float": 1650, "from_dtyp": 1650, "jit_type_bas": 1650, "safer": [1650, 1862], "onnxexportererror": [1650, 1893], "symbolicvalueerror": 1650, "onnx_compat": 1650, "scalar_nam": 1650, "complexhalf": 1650, "complexdoubl": 1650, "torch_nam": 1650, "int8_t": 1650, "int64_t": 1650, "int16_t": 1650, "verif": [1651, 1652, 1893], "input_arg": [1651, 1893], "params_dict": 1651, "export_opt": [1651, 1893], "_excluded_node_kind": 1651, "frozenset": [1651, 1855], "scalarimplicit": [1651, 1895], "prim": [1651, 1852, 1893, 1895], "listconstruct": [1651, 1852], "all_mismatch_leaf_graph_info": 1651, "essential_node_count": 1651, "essential_node_kind": 1651, "export_repro": 1651, "repro_dir": 1651, "test_": 1651, "test_data_set_0": 1651, "input_0": [1651, 1893], "pb": [1651, 1893], "input_1": [1651, 1893], "output_0": 1651, "output_1": 1651, "find_mismatch": [1651, 1893], "verificationopt": [1651, 1893], "find_partit": 1651, "has_mismatch": 1651, "pretty_print_mismatch": 1651, "pretty_print_tre": 1651, "graph_info": [1651, 1893], "__2": [1651, 1893], "__1": [1651, 1893], "__3": [1651, 1893], "110": [1651, 1893], "verify_export": 1651, "onnx_graph": 1651, "onnx_out": 1651, "pt_out": 1651, "ignore_non": 1652, "check_shap": 1652, "check_dtyp": [1652, 1916], "onnxbackend": 1652, "onnx_runtime_cpu": 1652, "remained_onnx_input_idx": 1652, "acceptable_error_percentag": 1652, "percentag": [1652, 1681, 1757], "weight_decai": [1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1669, 1886], "1e6": 1653, "impair": [1653, 1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "register_step_post_hook": [1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670], "removeablehandl": [1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670], "register_step_pre_hook": [1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670], "new_arg": [1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670], "new_kwarg": [1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670], "altogeth": [1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670], "rho": 1654, "110mm": [1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "4pt": [1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "textbf": [1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "theta_0": [1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "v_0": [1654, 1656, 1657, 1660, 1666, 1667], "leftarrow": [1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "u_0": [1654, 1658], "hspace": [1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "5mm": [1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "nabla_": [1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "theta_": [1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "10mm": [1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "v_t": [1654, 1656, 1657, 1660, 1666, 1667], "v_": [1654, 1656, 1657, 1660, 1666, 1667, 1669], "2_t": [1654, 1655, 1656, 1657, 1660, 1666, 1667], "21mm": 1654, "u_t": [1654, 1658], "theta_t": [1654, 1655, 1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "lr_decai": 1655, "initial_accumulator_valu": 1655, "12mm": [1655, 1666], "_sum_0": 1655, "tild": [1655, 1667], "_sum_t": 1655, "_sum_": 1655, "subgradi": 1655, "999": [1656, 1657, 1658, 1660, 1666, 1670, 1891, 1896], "amsgrad": [1656, 1657], "beta_1": [1656, 1657, 1658, 1660, 1666], "beta_2": [1656, 1657, 1658, 1660, 1666], "13mm": [1656, 1657, 1658, 1660, 1666, 1667, 1668, 1669], "textit": [1656, 1657, 1669], "m_0": [1656, 1657, 1658, 1660, 1666], "widehat": [1656, 1657, 1660, 1666], "m_t": [1656, 1657, 1658, 1660, 1666], "m_": [1656, 1657, 1658, 1660, 1666], "ungraph": [1656, 1657], "002": [1658, 1660], "t_1": 1658, "2e": [1658, 1660], "max_it": 1659, "max_ev": 1659, "tolerance_grad": 1659, "tolerance_chang": 1659, "history_s": 1659, "line_search_fn": 1659, "bfg": 1659, "minfunc": 1659, "intens": [1659, 1889], "param_byt": 1659, "strong_wolf": 1659, "reevalu": [1659, 1664, 1670, 1896], "momentum_decai": 1660, "004": 1660, "gamma_t": 1660, "psi": [1660, 1910], "mu_t": 1660, "96": 1660, "mu_": 1660, "11mm": 1660, "incorpor": [1660, 1900], "nesterov": [1660, 1669], "4e": 1660, "weightdecai": 1666, "18mm": 1666, "rho_": 1666, "6mm": 1666, "rho_t": 1666, "t_2": 1666, "l_t": 1666, "adamw": [1666, 1896], "_0": [1667, 1881, 1897], "av": 1667, "8mm": 1667, "3mm": 1667, "lectur": 1667, "hinton": 1667, "step_siz": [1668, 1685], "resili": [1668, 1889], "eta_": [1668, 1673, 1674], "etaplu": 1668, "etaminu": 1668, "gamma_": [1668, 1910], "0_": 1668, "eta_0": 1668, "i_": [1668, 1816], "15mm": [1668, 1669], "eta_t": [1668, 1673, 1674], "dampen": 1669, "sutskev": 1669, "veloc": 1669, "lr_schedul": [1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1896], "chainabl": [1671, 1681], "081": 1671, "729": [1671, 1684], "6561": [1671, 1840], "59049": 1671, "scheduler1": [1671, 1684, 1896], "constantlr": [1671, 1684], "total_it": [1671, 1672, 1678, 1682, 1684], "scheduler2": [1671, 1684, 1896], "exponentiallr": [1671, 1684, 1896], "get_last_lr": [1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685], "print_lr": [1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685], "is_verbos": [1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685], "__dict__": [1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685], "last_epoch": [1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685], "mileston": [1672, 1678, 1679, 1684, 1896], "simultan": [1672, 1673, 1678, 1679, 1685, 1875, 1905], "025": [1672, 1678], "t_max": [1673, 1896], "eta_min": [1673, 1674], "anneal": [1673, 1674, 1681, 1896], "cur": [1673, 1674], "sgdr": [1673, 1674], "2k": 1673, "sole": 1673, "t_mult": 1674, "interleav": 1674, "base_lr": [1675, 1681], "max_lr": [1675, 1681], "step_size_up": 1675, "step_size_down": 1675, "scale_fn": 1675, "scale_mod": 1675, "cycle_momentum": [1675, 1681], "base_momentum": [1675, 1681], "max_momentum": [1675, 1681], "cyclic": 1675, "forth": [1675, 1836, 1849, 1899], "amplitud": [1675, 1681], "triangular2": 1675, "exp_rang": 1675, "bckenstler": 1675, "train_batch": [1675, 1681], "get_lr": 1675, "lr_lambda": [1677, 1680], "lambda1": 1677, "lambda2": 1677, "start_factor": 1678, "end_factor": 1678, "03125": 1678, "0375": 1678, "04375": 1678, "005": [1679, 1685], "lmbda": 1680, "total_step": 1681, "steps_per_epoch": 1681, "pct_start": 1681, "anneal_strategi": [1681, 1896], "div_factor": 1681, "final_div_factor": 1681, "three_phas": 1681, "1cycl": 1681, "fastai": 1681, "unpublish": 1681, "initial_lr": 1681, "min_lr": [1681, 1683], "1e4": 1681, "annihil": 1681, "00075": 1682, "00050": 1682, "00025": 1682, "patienc": 1683, "threshold_mod": 1683, "cooldown": 1683, "stagnat": 1683, "new_lr": 1683, "hasn": [1683, 1865, 1897], "optimum": 1683, "dynamic_threshold": 1683, "val_loss": 1683, "81": 1684, "mn": 1687, "pca": [1689, 1909], "overestim": [1689, 1801], "nathan": [1689, 1801], "halko": [1689, 1801], "gunnar": [1689, 1801], "martinsson": [1689, 1801], "tropp": [1689, 1801], "probabilist": [1689, 1801], "0909": [1689, 1801], "4061": [1689, 1801], "na": [1689, 1801], "cmath": [1693, 1853], "4142j": 1693, "4331": 1696, "2475": [1696, 1799], "6834": 1696, "2791": 1696, "1875": 1696, "5561": 1696, "4670": 1696, "5428": 1697, "5854": 1697, "5261": [1697, 1800], "1857": 1697, "2498": 1697, "1646": [1697, 1878], "0705": 1697, "0629": 1697, "2962": 1697, "0821": [1697, 1757], "1831": 1697, "type1": [1698, 1853], "type2": [1698, 1853], "2117": 1700, "9765": 1700, "1707": 1700, "4884": 1700, "5661": 1700, "5795": 1700, "5280": 1700, "9206": 1700, "quantization_schem": [1701, 1702, 1703, 1704, 1705], "int_repr": [1701, 1702, 1853, 1895], "nchw": [1703, 1914], "qx": [1703, 1704, 1705], "00001": 1703, "max_pool1d": [1704, 1853, 1895, 1902], "max_pool2d": [1705, 1853, 1895, 1902], "quasirandom": 1706, "scrambl": 1706, "sobol": 1706, "quasi": 1706, "21201": 1706, "web": 1706, "unsw": 1706, "au": [1706, 1897], "fkuo": 1706, "art": 1706, "owen": 1706, "niederreit": 1706, "xing": 1706, "466": 1706, "489": 1706, "decemb": 1706, "1998": 1706, "zh": 1706, "vychisl": 1706, "phy": 1706, "784": 1706, "802": 1706, "1967": 1706, "soboleng": 1706, "draw_base2": 1706, "base2": 1706, "fast_forward": 1706, "142": 1707, "283": 1707, "570": 1707, "359": 1707, "9894": 1707, "2503": 1708, "3525": 1708, "5673": 1708, "8237": 1708, "5781": 1708, "6879": 1708, "3816": 1708, "7249": 1708, "0998": 1708, "1436": 1712, "9966": 1712, "3426": 1712, "6366": 1712, "5954": 1712, "8929": 1712, "0923": 1712, "1719": 1712, "4709": 1712, "1996": 1712, "4595": 1718, "4314": 1718, "flat": [1721, 1764, 1853, 1870, 1893], "n2": 1721, "n3": 1721, "negat": [1724, 1808, 1855], "is_neg": [1724, 1853, 1895], "equidist": 1728, "inexact": 1728, "1234567": 1728, "1230": 1728, "vstack": [1729, 1853, 1895, 1909], "0370": 1730, "2970": 1730, "5420": 1730, "9105": 1730, "8351": 1730, "pickle_protocol": [1731, 1897], "default_protocol": 1731, "_use_new_zipfile_seri": 1731, "zipfil": [1731, 1897], "sorted_sequ": [1735, 1853], "sorter": [1735, 1853], "sorted_sequence_1d": 1735, "select_copi": [1737, 1853, 1895], "92701": [1739, 1912], "complaint": 1740, "bfloat16_3x": 1743, "denorm": [1744, 1889], "sse3": 1744, "323": 1744, "88131e": 1744, "324": 1744, "is_train": [1745, 1917], "interop": 1746, "intraop": 1747, "edgeitem": 1748, "linewidth": 1748, "sci_mod": 1748, "shamelessli": 1748, "repr": [1748, 1855], "sane": 1748, "_tensor_str": 1748, "_formatt": 1748, "12345": 1748, "1235": 1748, "excess": 1750, "24j": 1751, "8000j": 1751, "9600j": 1751, "4472": [1751, 1886], "8944j": 1751, "expit": [1752, 1910], "sym": [1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764], "2222": [1754, 1814], "4444": 1754, "8889": 1754, "4901e": 1755, "4000e": 1755, "0077e": 1755, "4923e": 1755, "waveform": [1756, 1757, 1758], "1564": 1756, "4540": 1756, "8910": 1756, "9877": 1756, "1423": [1756, 1778], "4154": 1756, "8413": [1756, 1910], "0302": 1757, "2231": 1757, "6065": 1757, "5400e": 1757, "3546e": 1757, "4788e": 1757, "8316e": 1757, "02": [1757, 1758, 1763], "3534e": 1757, "0065e": [1758, 1763], "1875e": [1758, 1763], "3937e": [1758, 1763], "2465e": [1758, 1763], "8250e": [1758, 1763], "9858e": [1758, 1763], "1365e": [1758, 1763], "8659e": [1758, 1763], "4658e": [1758, 1763], "3941e": [1758, 1763], "5400": 1759, "3376": 1759, "4200": 1759, "9136": 1759, "wit": [1759, 1852], "0955": [1759, 1760, 1762], "3455": [1759, 1760, 1762], "6545": [1759, 1760, 1762], "9045": [1759, 1760, 1762], "0800": [1760, 1761], "1876": [1760, 1761], "4601": [1760, 1761], "7700": [1760, 1761], "9723": [1760, 1761], "1679": 1761, "3979": 1761, "6821": 1761, "9121": 1761, "1170": 1762, "9698": 1762, "36358": 1764, "z_n": [1764, 1875], "48917": 1764, "2z_n": 1764, "13659": 1764, "3z_n": 1764, "01064": 1764, "4z_n": 1764, "\u03c0": 1764, "sidelob": 1764, "transact": 1764, "acoust": 1764, "speech": 1764, "84": 1764, "91": 1764, "feb": 1764, "1981": 1764, "tassp": 1764, "1163506": 1764, "heinzel": 1764, "spectrum": [1764, 1889], "dft": 1764, "comprehens": [1764, 1855, 1856, 1869, 1878, 1884, 1900], "februari": 1764, "holomet": 1764, "fnal": 1764, "gov": 1764, "gh_fft": 1764, "nutal": 1764, "general_ham": 1764, "6280e": 1764, "2698e": 1764, "1052e": 1764, "9826e": 1764, "5461": [1766, 1886], "1347": 1766, "7266": 1766, "2746": 1766, "5194": 1766, "1343": 1766, "4032": 1766, "2711": 1766, "5380": 1768, "8632": 1768, "1265": 1768, "9399": 1768, "5644": 1768, "9744": 1768, "1268": 1768, "2162": 1773, "6719": 1773, "3332": 1773, "5793": [1773, 1886], "0061": 1773, "6058": 1773, "9497": 1773, "5071": 1773, "3343": 1773, "9553": 1773, "0960": 1773, "derivati": [1774, 1777], "sparsr": 1775, "run_my_model": 1775, "prev_checks_en": 1775, "check_invari": [1775, 1782, 1783, 1784, 1785, 1786, 1787, 1909], "sparse_csr_tensor": [1775, 1853, 1895, 1909], "z_": [1777, 1875, 1910], "bigoplus_": 1777, "kj": 1777, "bigoplu": 1777, "sparseaddmmbackward0": 1777, "sparsemmreduceimplbackward0": 1777, "sparsiti": [1778, 1850, 1862, 1873], "spy": 1778, "2847": 1778, "7805": 1778, "1900": [1778, 1890], "to_dens": [1778, 1780, 1853, 1895, 1909], "3903": 1778, "x_k": 1779, "6438": 1781, "6467": 1781, "3411": 1781, "0918": 1781, "5348": 1781, "0634": 1781, "0494": 1781, "0646": 1781, "1844": 1781, "1276": 1781, "1874": 1781, "6334": 1781, "9682": 1781, "5340": 1781, "7483": 1781, "4512": 1781, "4073": 1781, "8901": 1781, "3183": 1781, "7539": 1781, "6596": 1781, "ncolblock": [1782, 1909], "array_list": [1782, 1783, 1784, 1786, 1787], "nrow": [1782, 1783, 1784, 1786, 1787, 1909], "ncol": [1782, 1783, 1784, 1786, 1787, 1909], "denses": [1782, 1783, 1784, 1786, 1787, 1909], "check_sparse_tensor_invari": [1782, 1783, 1784, 1785, 1786, 1787, 1909], "nrowblock": [1783, 1909], "compressed_indic": [1784, 1853, 1909], "plain_indic": [1784, 1853, 1909], "compressed_dim_s": [1784, 1909], "rdinat": 1785, "_indic": [1785, 1895, 1909], "0755": [1789, 1790], "0226": [1789, 1790], "0831": [1789, 1790], "4806": [1789, 1790], "0112": 1789, "2883": 1789, "6933": 1789, "0457": 1790, "0069": 1790, "2310": 1790, "2959": [1794, 1795, 1837, 1838], "8101": [1794, 1795, 1837, 1838], "5027": [1794, 1795, 1837, 1838], "3270": [1794, 1795, 1837, 1838], "5905": [1794, 1795, 1837, 1838], "6538": [1794, 1795, 1837, 1838, 1886], "3330": [1794, 1795, 1837, 1838], "5596": [1794, 1795, 1837, 1838], "6548": [1794, 1795, 1837, 1838], "1264": [1794, 1795, 1837, 1838], "5080": [1794, 1795, 1800, 1837, 1838, 1886], "6420": [1794, 1795, 1837, 1838], "1992": [1794, 1795, 1837, 1838], "0311": [1794, 1910], "7477": 1794, "2204": 1794, "9087": 1794, "2620": 1795, "0028": [1795, 1820], "0957": 1795, "6038": 1795, "0645": [1795, 1838], "4485": [1795, 1838], "8707": [1795, 1838], "0665": [1795, 1838], "librosa": 1796, "omega": 1796, "win": [1796, 1875], "_fft": [1796, 1853], "dimnsion": 1796, "1133": 1799, "2958": 1799, "5475": 1799, "0569": 1799, "0737": 1799, "3429": 1799, "9138": 1799, "9337": 1799, "6864": [1799, 1824], "1132": 1799, "7892": 1799, "1003": 1799, "5688": 1799, "3637": 1799, "9906": 1799, "5197": 1799, "4598": 1799, "3708": 1799, "6217": 1799, "435": 1799, "1335": 1799, "3135": 1799, "gesdd": 1800, "conquer": 1800, "gesvdjbatch": 1800, "fortran": 1800, "\u00b9": 1800, "2364": 1800, "7752": 1800, "7201": 1800, "7394": 1800, "0504": 1800, "3371": 1800, "5296": 1800, "3550": 1800, "5569": 1800, "2445": 1800, "1414": 1800, "4027": 1800, "0287": 1800, "5434": 1800, "1946": 1800, "8833": 1800, "3679": 1800, "4296": 1800, "2890": 1800, "6604": 1800, "2717": 1800, "2618": 1800, "4234": 1800, "2481": 1800, "4733": 1800, "3289": [1800, 1891], "0315": 1800, "7806": 1800, "0199": 1800, "8766": 1800, "4809": 1800, "4054": 1800, "7600": 1800, "8611": 1800, "2594": 1800, "4373": 1800, "6531e": 1800, "a_big": 1800, "6503e": 1800, "swapax": [1803, 1853, 1895, 1913], "symint": [1804, 1805, 1806, 1807, 1808, 1851, 1917], "symfloat": [1804, 1805, 1917], "symbool": [1808, 1917], "1995": 1809, "4608": 1809, "7702": 1809, "4875": 1809, "9158": 1809, "5872": 1809, "6929": 1809, "6932": 1809, "take_along_axi": [1811, 1881], "max_idx": 1811, "sorted_idx": 1811, "2027": 1812, "7687": 1812, "4412": 1812, "3856": 1812, "5930": 1812, "9859": 1812, "4722": 1812, "3366": 1812, "8986": 1813, "7279": 1813, "1745": 1813, "7156": 1813, "8257": 1813, "2553": 1813, "11111": 1814, "222222": 1814, "3333333": 1814, "1111": 1814, "array_split": 1815, "i_d": 1816, "k_": 1816, "4532": 1816, "4874": 1816, "5018": 1816, "4796": [1816, 1890], "5162": 1816, "5306": 1816, "2922": 1816, "7556": 1816, "2741": 1816, "3161": 1816, "0704": 1816, "0187": 1816, "4079": 1816, "3126": 1816, "8744": 1816, "8223": 1816, "9445": 1816, "4117": 1816, "7780": 1816, "7193": 1816, "4867": 1816, "3204": 1816, "5513": 1816, "4737": [1816, 1841], "2850": 1816, "2573": 1816, "5997": 1816, "sparsebsr": 1820, "sparsecsc": 1820, "sparsebsc": 1820, "9893": 1820, "5809": 1820, "1669": 1820, "7299": 1820, "4942": [1820, 1886], "y_0": 1821, "y_1": 1821, "x_diff": 1821, "y_diff": 1821, "riemann": [1821, 1875, 1883, 1910], "badli": 1823, "cloned_coeffici": 1823, "1527": 1823, "0753": 1823, "7986": 1823, "0210": 1823, "3513": 1823, "5492": 1823, "7403": 1823, "0243": 1823, "7841": 1823, "9046": 1823, "5405": 1823, "9320": 1823, "9270": 1823, "2826": 1823, "lbrace": [1824, 1825, 1826, 1827], "rbrace": [1824, 1825, 1826, 1827], "0813": 1824, "8619": 1824, "7105": 1824, "0935": 1824, "1380": 1824, "3409": [1824, 1890], "2219": 1824, "5653": 1824, "2521": 1824, "2345": 1824, "2544": 1824, "3461": 1824, "4785": 1824, "4477": 1824, "6049": 1824, "6368": 1824, "8775": 1824, "7145": 1824, "1502": 1824, "2716": 1824, "1243": 1824, "5413": 1824, "3615": 1824, "0614": 1824, "7344": 1824, "3164": 1824, "7648": 1824, "4024": 1824, "0978": 1824, "col": [1825, 1827, 1853], "2309": 1826, "5207": 1826, "0049": 1826, "2072": 1826, "0680": 1826, "6602": 1826, "3480": 1826, "5211": 1826, "4573": 1826, "5876": 1826, "0794": [1826, 1910], "8373": 1826, "6654": 1826, "2604": 1826, "5235": 1826, "2447": 1826, "9556": 1826, "2919": 1826, "1768": 1826, "4333": 1826, "3146": [1826, 1886], "6576": 1826, "0432": 1826, "9348": [1826, 1910], "4410": 1826, "9888": 1826, "3337": 1826, "6556": 1826, "4798": 1826, "5466": 1829, "8008": 1829, "9079": 1829, "unique_consecut": [1832, 1853, 1895], "inverse_indic": [1832, 1833], "warn_onli": 1835, "alon": [1835, 1854, 1897], "put_": [1835, 1853], "index_add": [1835, 1853, 1895], "index_select": [1835, 1851, 1853, 1895, 1909], "fractionalmaxpool2d": 1835, "fractionalmaxpool3d": 1835, "reflectionpad1d": 1835, "reflectionpad3d": 1835, "replicationpad1d": 1835, "replicationpad3d": 1835, "histc": [1835, 1853, 1895], "bincount": [1835, 1853, 1895], "kthvalu": [1835, 1853, 1868, 1895], "cublasapi_reproduc": [1835, 1890], "avg_pool3d_backward_cuda": 1835, "alexandr": 1836, "theophil": 1836, "0631": 1837, "5590": 1837, "4893": 1837, "8258": 1837, "5926": 1838, "0056": 1838, "3646": 1838, "vecdot": 1839, "mi": [1840, 1841], "6116": 1840, "5772": [1840, 1910], "4606": 1840, "9120": 1840, "0786": 1840, "7497": 1840, "6623": 1840, "5772j": 1840, "9120j": 1840, "7497j": 1840, "6623j": 1840, "3839j": 1841, "2098": 1841, "6699j": 1841, "3470": 1841, "9451j": 1841, "5174": 1841, "3136j": 1841, "6699": 1841, "9451": 1841, "3136": 1841, "atleast_2d": [1844, 1853, 1895], "3139": 1845, "3898": 1845, "1657": 1845, "0383": 1845, "8785": 1845, "1089": 1845, "hubconf": 1849, "entrypoint_nam": 1849, "_resnet18": 1849, "underscor": [1849, 1869, 1905, 1915], "load_state_dict_from_url": [1849, 1864], "2gb": 1849, "relative_path_to_checkpoint": 1849, "pth": [1849, 1864, 1891], "dirnam": 1849, "5c106cde": [1849, 1864], "force_reload": 1849, "skip_valid": 1849, "trust_repo": 1849, "repo_own": 1849, "repo_nam": 1849, "torchhub": 1849, "owner": [1849, 1880, 1895, 1905, 1906], "github_token": 1849, "repo_or_dir": 1849, "mute": 1849, "resnet50_weight": 1849, "imagenet1k_v1": 1849, "download_url_to_fil": 1849, "hash_prefix": 1849, "temporary_fil": 1849, "sha256": [1849, 1864], "s3": [1849, 1864, 1892], "amazonaw": [1849, 1864, 1892], "model_dir": [1849, 1864], "check_hash": [1849, 1864], "hub_dir": [1849, 1864], "get_dir": [1849, 1864], "ext": [1849, 1864], "eight": [1849, 1864], "hash": [1849, 1853, 1855, 1864, 1895], "succinct": 1849, "set_dir": 1849, "path_to_hub_dir": 1849, "torch_hom": 1849, "xdg_cache_hom": [1849, 1878], "reiniti": 1849, "path_importer_cach": 1849, "subpackag": [1849, 1897], "offend": 1849, "classifi": [1850, 1855, 1893, 1896, 1900, 1914], "pypi": 1850, "conda": [1850, 1892], "hip": 1850, "javadoc": 1850, "uninitializedbuff": 1850, "anomali": 1850, "can_device_access_p": 1850, "current_blas_handl": 1850, "device_of": 1850, "get_arch_list": 1850, "get_device_cap": 1850, "get_device_nam": 1850, "get_device_properti": 1850, "get_gencode_flag": 1850, "get_sync_debug_mod": 1850, "ipc_collect": 1850, "memory_usag": 1850, "set_stream": 1850, "set_sync_debug_mod": 1850, "power_draw": 1850, "clock_rat": 1850, "outofmemoryerror": 1850, "jiter": 1850, "sanit": 1850, "get_rng_stat": [1850, 1904], "set_rng_stat": [1850, 1904], "empty_cach": [1850, 1878, 1884], "set_per_process_memory_fract": 1850, "current_allocated_memori": 1850, "driver_allocated_memori": 1850, "pathwis": 1850, "exponentialfamili": 1850, "binomi": [1850, 1853, 1895], "chi2": 1850, "continuousbernoulli": 1850, "dirichlet": 1850, "fishersnedecor": 1850, "halfcauchi": 1850, "halfnorm": 1850, "kumaraswami": 1850, "lkjcholeski": 1850, "laplac": 1850, "lognorm": 1850, "lowrankmultivariatenorm": 1850, "mixturesamefamili": 1850, "multinomi": [1850, 1853, 1895], "multivariatenorm": 1850, "negativebinomi": 1850, "onehotcategor": 1850, "relaxedbernoulli": 1850, "logitrelaxedbernoulli": 1850, "relaxedonehotcategor": 1850, "studentt": 1850, "transformeddistribut": 1850, "vonmis": 1850, "weibul": 1850, "wishart": 1850, "solver": [1850, 1889], "misc": 1850, "normal_": [1850, 1853, 1868, 1873, 1878, 1917], "constant_": [1850, 1873], "ones_": [1850, 1873], "zeros_": [1850, 1873], "eye_": [1850, 1857, 1873], "dirac_": [1850, 1857, 1873], "xavier_uniform_": [1850, 1873], "xavier_normal_": [1850, 1873, 1886], "kaiming_uniform_": [1850, 1873], "trunc_normal_": [1850, 1873], "orthogonal_": [1850, 1857, 1873, 1886], "sparse_": [1850, 1873], "alexnet": 1850, "pitfal": 1850, "preview": 1850, "swa": 1850, "ema": 1850, "powersgd": 1850, "remotemodul": 1850, "fork_rng": [1850, 1904], "doublestorag": [1850, 1911], "floatstorag": [1850, 1911], "halfstorag": [1850, 1911], "longstorag": [1850, 1911], "intstorag": [1850, 1911], "shortstorag": [1850, 1911], "charstorag": [1850, 1911], "bytestorag": [1850, 1911], "boolstorag": [1850, 1911], "bfloat16storag": [1850, 1911], "complexdoublestorag": [1850, 1911], "complexfloatstorag": [1850, 1911], "quint8storag": [1850, 1911], "qint8storag": [1850, 1911], "qint32storag": [1850, 1911], "quint4x2storag": [1850, 1911], "quint2x4storag": [1850, 1911], "make_tensor": [1850, 1916], "assert_allclos": [1850, 1916], "sampler": 1850, "mobile_optim": 1850, "optimize_for_mobil": [1850, 1863], "model_zoo": 1850, "load_url": [1850, 1864], "tensorboard": [1850, 1865, 1899], "summarywrit": [1850, 1865, 1914], "iinfo": 1850, "unifi": [1850, 1869], "__config__": [1850, 1877], "_log": [1850, 1855], "set_log": [1850, 1861], "torchdata": 1850, "torchserv": 1850, "torchtext": 1850, "xla": 1850, "_out": [1851, 1873, 1883], "_adaptive_avg_pool2d": [1851, 1895], "_adaptive_avg_pool2d_backward": 1851, "_log_softmax": [1851, 1895], "half_to_float": 1851, "_native_batch_norm_legit": [1851, 1895], "no_stat": 1851, "_softmax": [1851, 1895, 1910], "_to_copi": [1851, 1895], "scalartyp": 1851, "memoryformat": 1851, "start_step": 1851, "avg_pool2d": [1851, 1853, 1895, 1902], "avg_pool2d_backward": 1851, "constant_pad_nd": [1851, 1853, 1895], "convolution_backward": 1851, "bias_siz": 1851, "output_mask": 1851, "embedding_dense_backward": 1851, "num_weight": 1851, "empty_strid": [1851, 1853, 1857, 1895], "interpolation_mod": [1851, 1853], "isinf": [1851, 1853, 1895, 1909], "max_pool2d_with_indic": [1851, 1853, 1895], "max_pool2d_with_indices_backward": 1851, "max_pool3d_with_indic": [1851, 1853, 1895], "native_batch_norm": [1851, 1853, 1895], "native_dropout": [1851, 1853, 1895], "native_group_norm": [1851, 1853, 1895], "hxw": [1851, 1853], "native_group_norm_backward": 1851, "rstd": 1851, "native_layer_norm": [1851, 1853, 1895], "native_layer_norm_backward": 1851, "tensor_scalar": 1851, "tensor_tensor": 1851, "scalar_tensor": [1851, 1853, 1895], "slice_scatt": [1851, 1853, 1895], "dim_intlist": 1851, "sym_numel": [1851, 1895], "sym_siz": [1851, 1895], "sym_storage_offset": [1851, 1895], "sym_strid": [1851, 1895], "upsample_bilinear2d": [1851, 1853, 1895], "upsample_nearest2d": [1851, 1853, 1895], "convert_element_typ": [1851, 1895], "broadcast_in_dim": [1851, 1895], "bessel_i0": [1851, 1895], "bessel_i1": [1851, 1895], "bessel_j0": [1851, 1895, 1910], "bessel_j1": [1851, 1895, 1910], "cbrt": [1851, 1895], "erf_inv": [1851, 1895], "erfcx": [1851, 1895, 1910], "exp2": [1851, 1853, 1895, 1910, 1914], "isfinit": [1851, 1853, 1889, 1895], "ndtri": [1851, 1895, 1910], "spherical_bessel_j0": [1851, 1895, 1910], "fmax": [1851, 1853, 1895], "fmin": [1851, 1853, 1895], "shift_left": [1851, 1895], "shift_right_arithmet": [1851, 1895], "zeta": [1851, 1878, 1895, 1910], "broadcast_dimens": 1851, "collapse_view": [1851, 1895], "start_indic": 1851, "limit_indic": 1851, "slice_in_dim": [1851, 1895], "start_index": 1851, "limit_index": 1851, "split_dim": [1851, 1895], "outer_length": 1851, "view_of": [1851, 1895], "as_strided_scatt": [1851, 1853, 1895], "collaps": [1851, 1868, 1895], "rev": [1851, 1895], "device_put": [1851, 1895], "maximum_valu": [1851, 1895], "minimum_valu": [1851, 1895], "copy_strid": [1851, 1895], "copy_to": [1851, 1895], "xor_sum": [1851, 1895], "empty_permut": [1851, 1853, 1895], "physical_layout": [1851, 1853], "iota": [1851, 1895], "fft_r2c": [1851, 1895], "fft_c2c": [1851, 1895], "fft_c2r": [1851, 1895], "disadvantag": 1852, "gentl": 1852, "beam": 1852, "traced_bar": 1852, "myscriptmodul": 1852, "103": [1852, 1854], "939": [1852, 1854], "116": [1852, 1854], "779": [1852, 1854], "123": [1852, 1854], "my_script_modul": [1852, 1854], "ins": 1852, "pytorch_jit": 1852, "traced_fn": 1852, "disable_jit_exampl": 1852, "printer": 1852, "rv": 1852, "rv0": 1852, "rv1": 1852, "ssa": 1852, "block0": 1852, "block1": 1852, "loop_in_traced_fn": 1852, "input_tupl": 1852, "fill_row_zero": 1852, "tracerwarn": 1852, "disjoint": 1852, "nr": 1852, "09115803241729736": 1852, "6782537698745728": 1852, "cpu_model": 1852, "gpu_model": 1852, "sample_input_cpu": 1852, "sample_input_gpu": 1852, "traced_cpu": 1852, "traced_gpu": 1852, "use_gpu": 1852, "__constants__": [1852, 1854], "my_module_inst": 1852, "redeclar": 1852, "nn_module_inst": 1852, "my_scripted_model": 1852, "526": [1852, 1854, 1893], "script_method": 1852, "implicitly_compiled_method": 1852, "another_forward": 1852, "unused_method": 1852, "some_fn": 1852, "ever": [1852, 1911], "some_fn2": 1852, "some_fn3": 1852, "some_fn4": 1852, "my_dict": [1852, 1854], "my_int": [1852, 1854], "my_const": 1852, "make_dict": 1852, "nnc": 1852, "__and__": 1853, "__iand__": 1853, "__ilshift__": 1853, "__ior__": 1853, "__irshift__": 1853, "__ixor__": 1853, "__lshift__": 1853, "__or__": 1853, "__rshift__": 1853, "__xor__": 1853, "absolute_": 1853, "acos_": [1853, 1868], "addbmm_": 1853, "addcdiv_": 1853, "addcmul_": 1853, "addmv_": [1853, 1868], "addr_": 1853, "align_a": [1853, 1868, 1869, 1895], "align_to": [1853, 1868, 1869, 1895], "ellipsis_idx": 1853, "aminmax": [1853, 1895], "arccos_": 1853, "arccosh_": 1853, "arcsin_": [1853, 1909], "arcsinh_": 1853, "arctan2_": 1853, "arctan_": 1853, "arctanh_": 1853, "argwher": [1853, 1895], "as_strided_": 1853, "asin_": [1853, 1868, 1909], "asinh_": [1853, 1868], "atan_": [1853, 1868], "atanh_": [1853, 1868], "baddbmm_": 1853, "bernoulli_": [1853, 1868, 1917], "bitwise_and_": 1853, "bitwise_left_shift_": 1853, "bitwise_not_": [1853, 1868], "bitwise_or_": 1853, "bitwise_right_shift_": 1853, "bitwise_xor_": 1853, "broadcast_to": [1853, 1895], "cauchy_": [1853, 1868, 1917], "ceil_": [1853, 1868], "clamp_max": [1853, 1895], "clamp_max_": 1853, "clamp_min": [1853, 1895], "clamp_min_": 1853, "clip_": 1853, "conj_physical_": 1853, "copysign_": 1853, "cos_": [1853, 1868, 1875], "cosh_": [1853, 1868], "count_nonzero": [1853, 1895], "cummax": [1853, 1895], "cummin": [1853, 1895], "cumprod_": 1853, "cumsum_": 1853, "deg2rad": [1853, 1868, 1895, 1909], "deg2rad_": [1853, 1868, 1909], "outdim": 1853, "diagonal_scatt": [1853, 1895], "digamma_": [1853, 1868], "div_": [1853, 1868, 1909], "divide_": 1853, "dsplit": [1853, 1895], "eq_": 1853, "erf_": [1853, 1868], "erfc_": [1853, 1868], "erfinv_": [1853, 1868], "exp2_": 1853, "exp_": [1853, 1868], "expm1_": [1853, 1868], "exponential_": [1853, 1868, 1917], "fill_diagonal_": 1853, "fix_": 1853, "fliplr": [1853, 1895], "flipud": [1853, 1895], "float_power_": 1853, "floor_": [1853, 1868], "floor_divide_": [1853, 1909], "fmod_": 1853, "frac_": [1853, 1868], "frexp": [1853, 1895], "gcd_": 1853, "ge_": 1853, "geometric_": [1853, 1917], "ger": [1853, 1895], "get_devic": [1853, 1868, 1895, 1909, 1911, 1912], "greater_": 1853, "greater_equal_": 1853, "gt_": 1853, "hardshrink": [1853, 1895], "heavisid": [1853, 1895], "heaviside_": 1853, "hsplit": [1853, 1895, 1913], "hypot_": 1853, "i0_": 1853, "igamma_": 1853, "igammac_": 1853, "index_fil": [1853, 1868, 1895], "index_reduc": [1853, 1895], "is_coalesc": [1853, 1895, 1909], "is_complex": [1853, 1895, 1909, 1912], "is_contigu": [1853, 1868, 1895, 1913], "is_floating_point": [1853, 1868, 1895, 1909, 1912], "is_infer": [1853, 1895], "is_same_s": [1853, 1895, 1909], "is_set_to": [1853, 1895], "is_sign": [1853, 1868, 1895, 1909], "isclos": [1853, 1895], "isneginf": [1853, 1895, 1909], "isposinf": [1853, 1895, 1909], "isreal": [1853, 1895], "istft": [1853, 1895], "kron": [1853, 1895], "lcm_": 1853, "ldexp_": 1853, "le_": 1853, "lerp_": 1853, "less_": 1853, "less_equal_": 1853, "lgamma_": 1853, "log10_": [1853, 1868], "log1p_": [1853, 1868, 1909], "log2_": [1853, 1868], "log_normal_": [1853, 1868, 1917], "logaddexp2": [1853, 1895], "logcumsumexp": [1853, 1895], "logical_and_": 1853, "logical_not_": [1853, 1868], "logical_or_": 1853, "logical_xor_": 1853, "logit_": 1853, "lt_": 1853, "masked_scatt": [1853, 1895], "masked_select": [1853, 1868, 1895], "matrix_pow": [1853, 1895], "moveaxi": [1853, 1895], "msort": [1853, 1895], "multiply_": 1853, "mvlgamma_": 1853, "nan_to_num_": 1853, "nanmedian": [1853, 1868, 1895], "nansum": [1853, 1895], "narrow_copi": [1853, 1895, 1909], "ne_": 1853, "neg_": [1853, 1868, 1909], "negative_": [1853, 1909], "new_empty_strid": [1853, 1895], "new_ful": [1853, 1878, 1895], "new_on": [1853, 1895], "nextafter_": 1853, "nonzero_stat": [1853, 1895], "not_equal_": 1853, "output_nr": [1853, 1895], "polygamma_": 1853, "pow_": [1853, 1868], "q_per_channel_scal": [1853, 1895], "q_per_channel_zero_point": [1853, 1895], "q_scale": [1853, 1895], "q_zero_point": [1853, 1895], "rad2deg": [1853, 1868, 1895, 1909], "rad2deg_": [1853, 1868, 1909], "reciprocal_": [1853, 1868], "record_stream": [1853, 1878, 1895], "refine_nam": [1853, 1868, 1869, 1895], "relu_": [1853, 1902], "remainder_": 1853, "rename_": [1853, 1868, 1869], "renorm_": 1853, "reshape_a": [1853, 1870, 1895, 1913], "resize_a": [1853, 1895], "the_templ": 1853, "resize_as_sparse_": 1853, "retains_grad": [1853, 1895], "roll": [1853, 1895], "rot90": [1853, 1895], "round_": [1853, 1868], "rsqrt_": [1853, 1868], "select_scatt": [1853, 1895], "sgn_": [1853, 1868], "sigmoid_": [1853, 1868, 1902], "sign_": [1853, 1868], "sinc_": 1853, "sinh_": [1853, 1868], "smm": [1853, 1895, 1909], "sparse_resize_": 1853, "sparse_resize_and_clear_": 1853, "split_with_s": [1853, 1895, 1913], "sqrt_": [1853, 1868], "square_": 1853, "squeeze_": [1853, 1902], "sspaddmm": [1853, 1895, 1909], "sub_": [1853, 1868, 1909], "subtract_": 1853, "sum_to_s": [1853, 1895], "swapaxes_": 1853, "swapdim": [1853, 1895, 1913], "swapdims_": 1853, "take_along_dim": [1853, 1895], "tan_": [1853, 1868], "tanh_": [1853, 1868, 1902], "tensor_indices_or_sect": 1853, "to_mkldnn": [1853, 1895], "to_padded_tensor": [1853, 1870, 1895], "to_sparse_bsc": [1853, 1895], "to_sparse_bsr": [1853, 1895, 1909], "to_sparse_csc": [1853, 1895, 1909], "true_divide_": 1853, "trunc_": [1853, 1868], "type_a": [1853, 1868, 1895], "out0": [1853, 1891], "unsafe_chunk": [1853, 1895], "unsafe_split": [1853, 1895], "unsafe_split_with_s": [1853, 1895], "unsqueeze_": [1853, 1902], "view_a": [1853, 1895, 1913], "vsplit": [1853, 1895, 1913], "xlogy_": 1853, "adaptive_avg_pool2d": [1853, 1880, 1895, 1902], "adaptive_max_pool1d_with_indic": [1853, 1880], "adaptive_max_pool2d_with_indic": 1853, "adaptive_max_pool3d_with_indic": 1853, "alpha_dropout": [1853, 1895], "assert_int_or_pair": 1853, "arg_nam": 1853, "binary_cross_entropi": [1853, 1895], "binary_cross_entropy_with_logit": [1853, 1895], "celu": [1853, 1895], "dropout2d": 1853, "dropout3d": 1853, "feature_alpha_dropout": [1853, 1895], "fractional_max_pool2d_with_indic": 1853, "fractional_max_pool3d_with_indic": 1853, "gaussian_nll_loss": 1853, "glu": [1853, 1895], "gumbel_softmax": 1853, "hardsigmoid": [1853, 1895, 1902], "hardswish": [1853, 1895, 1902], "huber_loss": [1853, 1895], "instance_norm": [1853, 1895, 1902], "local_response_norm": 1853, "lp_pool1d": 1853, "lp_pool2d": 1853, "max_pool1d_with_indic": [1853, 1895], "mish": [1853, 1895], "multi_head_attention_forward": 1853, "embed_dim_to_check": 1853, "in_proj_weight": 1853, "in_proj_bia": 1853, "bias_k": 1853, "bias_v": 1853, "out_proj_weight": 1853, "out_proj_bia": 1853, "use_separate_proj_weight": 1853, "q_proj_weight": 1853, "k_proj_weight": 1853, "v_proj_weight": 1853, "static_k": 1853, "static_v": 1853, "multilabel_soft_margin_loss": 1853, "relu6": [1853, 1895, 1902], "silu": [1853, 1870, 1895], "softsign": 1853, "tanhshrink": 1853, "adaptive_avg_pool1d": [1853, 1880, 1895, 1902], "adaptive_max_pool1d": [1853, 1880, 1895], "affine_grid_gener": [1853, 1895], "alias_copi": [1853, 1895], "align_tensor": [1853, 1895], "alpha_dropout_": 1853, "as_strided_copi": [1853, 1895], "atleast_1d": [1853, 1895], "avg_pool1d": [1853, 1895, 1902], "bartlett_window": [1853, 1857, 1895], "cudnn_en": 1853, "batch_norm_backward_elemt": 1853, "invstd": 1853, "mean_di": 1853, "mean_dy_xmu": 1853, "batch_norm_backward_reduc": 1853, "input_g": 1853, "bias_g": 1853, "out3": 1853, "batch_norm_elemt": [1853, 1895], "batch_norm_gather_stat": [1853, 1895], "batch_norm_gather_stats_with_count": [1853, 1895], "batch_norm_stat": [1853, 1895], "batch_norm_update_stat": [1853, 1895], "blackman_window": [1853, 1857, 1895], "block_diag": [1853, 1895], "can_cast": [1853, 1895], "ccol_indices_copi": [1853, 1895], "celu_": 1853, "choose_qparams_optim": [1853, 1895], "n_bin": 1853, "bit_width": 1853, "col_indices_copi": [1853, 1895], "column_stack": [1853, 1895], "conv_tbc": [1853, 1895], "crow_indices_copi": [1853, 1895], "cudnn_affine_grid_gener": [1853, 1895], "cudnn_batch_norm": [1853, 1895], "exponential_average_factor": 1853, "cudnn_convolut": [1853, 1895], "cudnn_convolution_add_relu": [1853, 1895], "cudnn_convolution_relu": [1853, 1895], "cudnn_convolution_transpos": [1853, 1895], "cudnn_grid_sampl": [1853, 1895], "cudnn_is_accept": [1853, 1895], "cumulative_trapezoid": [1853, 1895], "diagonal_copi": [1853, 1895], "dropout_": [1853, 1863], "embedding_renorm_": 1853, "empty_quant": [1853, 1895], "anyenumtyp": 1853, "expand_copi": [1853, 1895], "fake_quantize_per_channel_affin": [1853, 1895], "fbgemm_linear_fp16_weight": [1853, 1895], "packed_weight": 1853, "fbgemm_linear_fp16_weight_fp32_activ": [1853, 1895], "fbgemm_linear_int8_weight": [1853, 1895], "col_offset": 1853, "weight_scal": 1853, "weight_zero_point": 1853, "fbgemm_linear_int8_weight_fp32_activ": [1853, 1895], "fbgemm_linear_quantize_weight": [1853, 1895], "fbgemm_pack_gemm_matrix_fp16": [1853, 1895], "fbgemm_pack_quantized_matrix": [1853, 1895], "feature_alpha_dropout_": 1853, "feature_dropout": [1853, 1895], "feature_dropout_": 1853, "frobenius_norm": [1853, 1895], "from_fil": [1853, 1895, 1911], "fused_moving_avg_obs_fake_qu": [1853, 1895], "observer_on": 1853, "fake_quant_on": 1853, "running_min": 1853, "running_max": 1853, "per_row_fake_qu": 1853, "symmetric_qu": 1853, "has_bias": 1853, "gru_cel": [1853, 1895], "w_ih": 1853, "w_hh": 1853, "hamming_window": [1853, 1857, 1895], "histogramdd": [1853, 1895], "hspmm": [1853, 1895, 1909], "indices_copi": [1853, 1895], "is_autocast_cpu_en": [1853, 1895], "is_autocast_en": [1853, 1895], "is_grad_en": [1853, 1895], "is_vulkan_avail": [1853, 1895], "isin": [1853, 1895], "kaiser_window": [1853, 1895], "lstm_cell": [1853, 1895], "meshgrid": [1853, 1895], "miopen_batch_norm": [1853, 1895], "miopen_convolut": [1853, 1895], "miopen_convolution_add_relu": [1853, 1895], "miopen_convolution_relu": [1853, 1895], "miopen_convolution_transpos": [1853, 1895], "miopen_depthwise_convolut": [1853, 1895], "miopen_rnn": [1853, 1895], "weight_stride0": 1853, "dropout_st": 1853, "out4": 1853, "mkldnn_adaptive_avg_pool2d": [1853, 1895], "mkldnn_convolut": [1853, 1895], "mkldnn_linear_backward_weight": 1853, "bias_defin": 1853, "mkldnn_max_pool2d": [1853, 1895], "mkldnn_max_pool3d": [1853, 1895], "mkldnn_rnn_layer": [1853, 1895], "weight0": 1853, "weight1": 1853, "weight2": 1853, "weight3": 1853, "hx_": 1853, "cx_": 1853, "save_mean": 1853, "save_invstd": 1853, "native_channel_shuffl": [1853, 1895], "native_norm": [1853, 1895, 1909], "norm_except_dim": [1853, 1895], "nuclear_norm": [1853, 1895], "pairwise_dist": [1853, 1895], "permute_copi": [1853, 1895], "promote_typ": [1853, 1895, 1916], "quantize_per_channel": [1853, 1895, 1900], "quantize_per_tensor_dynam": [1853, 1895, 1900], "quantized_batch_norm": [1853, 1895], "quantized_gru_cel": [1853, 1895], "packed_ih": 1853, "packed_hh": 1853, "col_offsets_ih": 1853, "col_offsets_hh": 1853, "scale_ih": 1853, "scale_hh": 1853, "zero_point_ih": 1853, "zero_point_hh": 1853, "quantized_lstm_cel": [1853, 1895], "quantized_max_pool1d": [1853, 1895], "quantized_max_pool2d": [1853, 1895], "quantized_rnn_relu_cel": [1853, 1895], "quantized_rnn_tanh_cel": [1853, 1895], "rand_lik": [1853, 1857, 1878, 1895, 1917], "randint_lik": [1853, 1857, 1895, 1917], "randn_lik": [1853, 1857, 1870, 1895, 1917], "randperm": [1853, 1857, 1895, 1917], "result_typ": [1853, 1895], "scalar1": 1853, "scalar2": 1853, "rnn_relu": [1853, 1895], "rnn_relu_cel": [1853, 1895], "rnn_tanh": [1853, 1895], "rnn_tanh_cel": [1853, 1895], "row_indices_copi": [1853, 1895], "row_stack": [1853, 1895], "rrelu_": 1853, "rsub": [1853, 1895], "searchsort": [1853, 1895], "segment_reduc": [1853, 1895], "selu_": 1853, "slice_copi": [1853, 1895], "sparse_bsc_tensor": [1853, 1895, 1909], "sparse_bsr_tensor": [1853, 1895, 1909], "sparse_compressed_tensor": [1853, 1895, 1909], "sparse_csc_tensor": [1853, 1895, 1909], "split_copi": [1853, 1895], "split_with_sizes_copi": [1853, 1895], "squeeze_copi": [1853, 1895], "std_mean": [1853, 1868, 1895], "t_copi": [1853, 1895], "threshold_": 1853, "transpose_copi": [1853, 1895], "trapz": [1853, 1895], "tril_indic": [1853, 1857, 1895], "triu_indic": [1853, 1857, 1895], "unbind_copi": [1853, 1895], "unfold_copi": [1853, 1895], "unsqueeze_copi": [1853, 1895], "values_copi": [1853, 1895], "vander": [1853, 1857, 1895], "var_mean": [1853, 1868, 1895], "view_as_complex_copi": [1853, 1895], "view_as_real_copi": [1853, 1895], "_nn": 1853, "adaptive_max_pool2d": [1853, 1895], "conv_depthwise3d": [1853, 1895], "cross_entropy_loss": [1853, 1895], "input_scal": 1853, "elu_": 1853, "flatten_dense_tensor": [1853, 1895], "random_sampl": 1853, "gelu_": 1853, "hardsigmoid_": [1853, 1902], "hardswish_": 1853, "hardtanh_": [1853, 1902], "leaky_relu_": 1853, "log_sigmoid": [1853, 1895], "mish_": 1853, "mkldnn_linear": [1853, 1895], "mkldnn_reorder_conv2d_weight": [1853, 1895], "mkldnn_reorder_conv3d_weight": [1853, 1895], "nll_loss2d": [1853, 1895], "nll_loss_nd": [1853, 1895], "reflection_pad3d": [1853, 1895], "relu6_": 1853, "rrelu_with_nois": [1853, 1895], "rrelu_with_noise_": 1853, "silu_": 1853, "slow_conv3d": [1853, 1895], "slow_conv_dilated2d": [1853, 1895], "slow_conv_dilated3d": [1853, 1895], "slow_conv_transpose2d": [1853, 1895], "slow_conv_transpose3d": [1853, 1895], "softshrink": [1853, 1895], "thnn_conv2d": [1853, 1895], "unflatten_dense_tensor": [1853, 1895], "upsample_bicubic2d": [1853, 1895], "scales_h": 1853, "scales_w": 1853, "upsample_linear1d": [1853, 1895], "upsample_nearest1d": [1853, 1895], "upsample_nearest3d": [1853, 1895], "scales_d": 1853, "upsample_trilinear3d": [1853, 1895], "fft_fftfreq": [1853, 1895], "fft_fftshift": [1853, 1895], "fft_hfft2": [1853, 1895], "fft_hfftn": [1853, 1895], "fft_ifftshift": [1853, 1895], "fft_ihfft2": [1853, 1895], "fft_ihfftn": [1853, 1895], "fft_rfftfreq": [1853, 1895], "_linalg": 1853, "linalg_cross": [1853, 1895], "linalg_det": [1853, 1895], "linalg_diagon": [1853, 1895], "eigvec": 1853, "linalg_ldl_factor": [1853, 1895], "linalg_ldl_factor_ex": [1853, 1895], "linalg_ldl_solv": [1853, 1895], "linalg_lu": [1853, 1895], "linalg_lu_factor": [1853, 1895], "linalg_lu_factor_ex": [1853, 1895], "linalg_lu_solv": [1853, 1895], "linalg_matmul": [1853, 1895], "linalg_matrix_exp": [1853, 1895], "linalg_matrix_pow": [1853, 1895], "linalg_multi_dot": [1853, 1895], "linalg_norm": [1853, 1895], "linalg_pinv": [1853, 1895], "linalg_solve_ex": [1853, 1895], "linalg_solve_triangular": [1853, 1895], "linalg_vand": [1853, 1895], "linalg_vecdot": [1853, 1895], "linalg_vector_norm": [1853, 1895], "_nest": 1853, "nested_to_padded_tensor": [1853, 1895], "_spars": 1853, "sparse_sampled_addmm": [1853, 1895], "_special": 1853, "special_airy_ai": [1853, 1895], "special_bessel_j0": [1853, 1895], "special_bessel_j1": [1853, 1895], "special_bessel_y0": [1853, 1895], "special_bessel_y1": [1853, 1895], "special_chebyshev_polynomial_t": [1853, 1895], "special_chebyshev_polynomial_u": [1853, 1895], "special_chebyshev_polynomial_v": [1853, 1895], "special_chebyshev_polynomial_w": [1853, 1895], "special_digamma": [1853, 1895], "special_entr": [1853, 1895], "special_erf": [1853, 1895], "special_erfc": [1853, 1895], "special_erfcx": [1853, 1895], "special_erfinv": [1853, 1895], "special_exp2": [1853, 1895], "special_expit": [1853, 1895], "special_expm1": [1853, 1895], "special_gammainc": [1853, 1895], "special_gammaincc": [1853, 1895], "special_gammaln": [1853, 1895], "special_hermite_polynomial_h": [1853, 1895], "special_i0": [1853, 1895], "special_i1": [1853, 1895], "special_laguerre_polynomial_l": [1853, 1895], "special_legendre_polynomial_p": [1853, 1895], "special_log1p": [1853, 1895], "special_log_ndtr": [1853, 1895], "special_log_softmax": [1853, 1895], "special_logit": [1853, 1895], "special_logsumexp": [1853, 1895], "special_modified_bessel_i0": [1853, 1895], "special_modified_bessel_i1": [1853, 1895], "special_modified_bessel_k0": [1853, 1895], "special_modified_bessel_k1": [1853, 1895], "special_multigammaln": [1853, 1895], "special_ndtr": [1853, 1895], "special_ndtri": [1853, 1895], "special_polygamma": [1853, 1895], "special_psi": [1853, 1895], "special_round": [1853, 1895], "special_scaled_modified_bessel_k0": [1853, 1895], "special_scaled_modified_bessel_k1": [1853, 1895], "special_shifted_chebyshev_polynomial_t": [1853, 1895], "special_shifted_chebyshev_polynomial_u": [1853, 1895], "special_shifted_chebyshev_polynomial_v": [1853, 1895], "special_shifted_chebyshev_polynomial_w": [1853, 1895], "special_sinc": [1853, 1895], "special_softmax": [1853, 1895], "special_spherical_bessel_j0": [1853, 1895], "special_xlog1pi": [1853, 1895], "special_xlogi": [1853, 1895], "special_zeta": [1853, 1895], "tval": 1853, "is_accept": 1853, "rect": 1853, "magic": [1853, 1856, 1917], "__complex__": 1853, "__float__": 1853, "__int__": 1853, "hex": [1853, 1855, 1895], "__hex__": 1853, "oct": [1853, 1895], "__oct__": 1853, "divmod": [1853, 1855, 1895], "chr": [1853, 1855, 1895], "int_float": 1853, "float_int": 1853, "fab": [1853, 1895], "int_int": 1853, "float_float": 1853, "complex_complex": 1853, "int_complex": 1853, "complex_int": 1853, "float_complex": 1853, "complex_float": [1853, 1911], "scalar_scalar": 1853, "int_to_int": 1853, "modf": [1853, 1895], "mathremaind": [1853, 1895], "programm": [1854, 1855], "tn": 1854, "subtyp": 1854, "an_error": 1854, "noreturn": [1854, 1855], "classvar": [1854, 1855], "anystr": [1854, 1855], "nomin": 1854, "newtyp": [1854, 1855], "tup": [1854, 1855], "emptydatastructur": 1854, "my_list": 1854, "aug_add_x": 1854, "inc": [1854, 1855], "assign_x": [1854, 1855], "polymorph": 1854, "sum_pair": 1854, "red": [1854, 1855], "green": [1854, 1855], "enum_fn": [1854, 1855], "my_variable_nam": 1854, "top_level_method": 1854, "other_help": 1854, "ten": [1854, 1914], "my_paramet": 1854, "my_submodul": 1854, "tuple_or_list": 1854, "a_tupl": 1854, "de": [1854, 1897, 1900], "is_script": [1854, 1855, 1895], "unsupported_linear_op": 1854, "is_trac": [1854, 1855], "univers": 1854, "typing_extens": 1854, "a_dict": 1854, "some_dict": 1854, "delimit": [1855, 1856], "tstype": 1855, "tsmoduletyp": 1855, "tsalltyp": 1855, "tsmetatyp": 1855, "tsprimitivetyp": 1855, "tsstructuraltyp": 1855, "tsnominaltyp": 1855, "myclass": [1855, 1897], "printabl": [1855, 1897], "sortabl": 1855, "nevertheless": [1855, 1907], "inc_first_el": 1855, "cpufloattyp": 1855, "tstupl": 1855, "tsnamedtupl": 1855, "tslist": 1855, "tsdict": 1855, "tsoption": 1855, "tsunion": 1855, "tsfutur": 1855, "tsrref": 1855, "tsawait": 1855, "await": [1855, 1856, 1905], "keytyp": 1855, "_await": 1855, "mytupl": 1855, "scripted_inc": 1855, "_annotatednamedtupl": 1855, "_namedtupleannot": 1855, "_unannotatednamedtupl": 1855, "mistak": [1855, 1882], "nameerror": 1855, "remedi": 1855, "tsbuiltinclass": 1855, "tscustomclass": 1855, "tsenum": 1855, "tstensor": 1855, "subtensor": [1855, 1880, 1920], "subwithtorchfunct": 1855, "script_g": 1855, "tsclassdef": 1855, "methoddefinit": 1855, "__torch__": [1855, 1893], "class2": 1855, "tsenumdef": 1855, "tsenumtyp": 1855, "memberidentifi": 1855, "intenum": 1855, "intflag": 1855, "basecolor": 1855, "compli": [1855, 1897], "classbodydefinit": 1855, "moduleobj": 1855, "testmodul": 1855, "mymodel": [1855, 1874, 1888], "dosometh": 1855, "strateg": 1855, "congruent": 1855, "python3": 1855, "unannot": 1855, "python3annot": 1855, "paramannot": 1855, "returnannot": 1855, "funcormethodbodi": 1855, "mypyannot": 1855, "localvarannot": 1855, "setval": 1855, "moduletyp": [1855, 1897], "classidentifi": 1855, "instanceattridentifi": 1855, "offset_": 1855, "tsstructualtyp": 1855, "grammar": 1855, "chapter": [1855, 1883], "floattyp": 1855, "inttyp": 1855, "stringtyp": 1855, "devicetyp": 1855, "bullet": 1855, "tupletyp": 1855, "listtyp": 1855, "enclosur": 1855, "parenth_form": 1855, "list_displai": 1855, "dict_displai": 1855, "legal": 1855, "stringliter": 1855, "floatnumb": 1855, "expression_list": 1855, "list_comprehens": 1855, "comp_for": 1855, "target_list": 1855, "or_expr": 1855, "key_datum_list": 1855, "dict_comprehens": 1855, "key_datum": 1855, "ongo": [1855, 1893, 1903, 1905], "enclos": 1855, "datum": [1855, 1919], "attributeref": 1855, "slice_list": 1855, "slice_item": 1855, "proper_slic": 1855, "argument_list": 1855, "desugar": 1855, "u_expr": 1855, "tightli": [1855, 1886], "m_expr": 1855, "a_expr": 1855, "shift_expr": 1855, "and_expr": 1855, "xor_expr": 1855, "comp_oper": 1855, "__contains__": 1855, "or_test": 1855, "and_test": 1855, "not_test": 1855, "conditional_express": 1855, "starred_item": 1855, "expression_stmt": 1855, "starred_express": 1855, "assignment_express": 1855, "assignment_stmt": 1855, "augmented_assignment_stmt": 1855, "augtarget": 1855, "augop": 1855, "annotated_assignment_stmt": 1855, "raise_stmt": 1855, "assert_stmt": 1855, "return_stmt": 1855, "del_stmt": 1855, "pass_stmt": 1855, "print_stmt": 1855, "break_stmt": 1855, "continue_stmt": 1855, "if_stmt": 1855, "while_stmt": 1855, "for_stmt": 1855, "with_stmt": 1855, "with_item": 1855, "__enter__": 1855, "suppress": [1855, 1904], "tuple_stmt": 1855, "getattr_stmt": 1855, "hasattr_stmt": 1855, "zip_stmt": 1855, "iterable1": 1855, "iterable2": 1855, "enumerate_stmt": 1855, "add_stat_valu": 1855, "sugaredvalu": 1855, "unrecogn": 1855, "honor": 1855, "__abs__": 1855, "bytearrai": 1855, "delattr": 1855, "exec": 1855, "__index__": 1855, "isint": 1855, "issubclass": [1855, 1880], "ndigit": 1855, "setattr": 1855, "__import__": [1855, 1897], "notimpl": [1855, 1856, 1880], "rpc_sync": [1855, 1895, 1905, 1906, 1907], "synonym": 1855, "_fork": [1855, 1877], "_wait": [1855, 1877], "lexic": 1856, "indent": 1856, "coroutin": 1856, "__del__": [1856, 1875], "__bytes__": 1856, "__slots__": 1856, "metaclass": 1856, "mro": 1856, "__r": 1856, "nonloc": 1856, "bytesliter": 1856, "imagnumb": 1856, "parenthes": 1856, "ifs": 1856, "compound": 1856, "exc_typ": 1856, "exc_valu": 1856, "adaptivelogsoftmaxwithloss": 1857, "enable_grad": [1857, 1917], "overload_nam": 1859, "handi": [1859, 1875, 1878], "spotti": 1859, "googl": 1859, "colab": [1859, 1897], "keynam": 1859, "alias_analysi": 1859, "conserv": [1859, 1862, 1878], "op_nam": 1859, "opoverload": 1859, "div_cpu": 1859, "off_by_default": 1861, "_registr": 1861, "born": 1862, "citizen": 1862, "afterthought": 1862, "unlock": 1862, "intuit": 1862, "alik": 1862, "grai": 1862, "systemat": 1862, "onboard": 1862, "maskedarrai": 1862, "masked_tensor": 1862, "blocklist": [1863, 1897], "mobileoptimizertyp": 1863, "conv_bn_fus": 1863, "correspondingli": 1863, "prepack": [1863, 1895], "insert_fold_prepack_op": 1863, "arm": [1863, 1900], "remove_dropout": 1863, "hoist": 1863, "hoist_conv_packed_param": 1863, "fuse_add_relu": 1863, "vulkan": 1863, "vulkan_automatic_gpu_transf": 1863, "freeze_modul": 1863, "script_modul": 1863, "optimization_blocklist": 1863, "preserved_method": 1863, "_mobileoptimizertyp": 1863, "recursivescriptmodul": [1863, 1891], "infrequ": 1865, "window_s": 1865, "max_sampl": 1865, "cap": 1865, "_monitor": 1865, "data_value_t": 1865, "eventhandlerhandl": 1865, "register_event_handl": 1865, "unregister_event_handl": 1865, "tensorboardeventhandl": 1865, "writer": [1865, 1886, 1914], "shared_memori": 1867, "abruptli": 1867, "get_all_sharing_strategi": 1867, "get_sharing_strategi": 1867, "set_sharing_strategi": 1867, "new_strategi": 1867, "abnorm": [1867, 1888], "fatal": [1867, 1888], "forev": [1867, 1879], "asap": 1867, "queue_2": 1867, "x_clone": 1867, "segfault": [1867, 1889], "shm_open": 1867, "mmap": 1867, "prone": [1867, 1888], "destructor": [1867, 1907], "seriou": [1867, 1878], "torch_shm_manag": 1867, "unnot": 1867, "spawncontext": 1867, "has_nam": 1868, "is_shar": [1868, 1911], "is_spars": [1868, 1895, 1909, 1911], "is_sparse_csr": [1868, 1895, 1911], "is_tensor": [1868, 1909], "items": [1868, 1895], "unifies_names_from_input_tensor": 1868, "nbyte": [1868, 1895, 1911], "ndimens": 1868, "position": [1868, 1869], "unnam": [1868, 1869], "misalign": 1868, "inher": 1868, "disappear": 1868, "img": [1869, 1914], "renamed_img": 1869, "coexist": 1869, "scale_channel": 1869, "more_img": 1869, "named_tensor": 1869, "named_img": 1869, "flat_img": 1869, "named_flat_img": 1869, "unflattened_img": 1869, "unflattened_named_img": 1869, "grad_loss": 1869, "8107": 1869, "6357": 1869, "0783": 1869, "untest": 1869, "rename_map": 1869, "greedili": 1869, "unment": 1869, "49152": 1869, "datastructur": 1870, "seamless": 1870, "nested_tensor": 1870, "nt": 1870, "vein": 1870, "as_nested_tensor": 1870, "irregular": 1870, "indistinguish": 1870, "2286": 1870, "4842": 1870, "7827": 1870, "6745": [1870, 1910], "0658": 1870, "1247": 1870, "4078": 1870, "8083": 1870, "2871": 1870, "5559": 1870, "9885": 1870, "4074": 1870, "4855": 1870, "0733": 1870, "8285": 1870, "6858": 1870, "7030": 1870, "3481": 1870, "0236": 1870, "fake_grad": 1870, "6862": 1870, "1282": 1870, "1031": 1870, "0464": 1870, "3276": 1870, "9967": 1870, "0054": 1870, "8972": 1870, "9174": 1870, "4995": 1870, "8546": 1870, "7194": 1870, "2918": 1870, "1846": 1870, "8793": 1870, "5183": 1870, "6447": 1870, "8009": 1870, "8468": 1870, "9832": 1870, "5272": 1870, "pt_infer": 1870, "pt_larg": 1870, "pt_small": 1870, "bitwidth": [1871, 1886, 1900], "asymmetr": [1871, 1900, 1903], "gain": 1873, "sacrific": [1873, 1878], "dirac": 1873, "glorot": 1873, "bengio": 1873, "fan": 1873, "_in": 1873, "fan_in": 1873, "delv": 1873, "surpass": 1873, "he": 1873, "_mode": 1873, "fan_out": 1873, "redrawn": 1873, "sax": 1873, "2013": 1873, "marten": 1873, "walkthrough": 1874, "clip_grad_value_": 1874, "optimizer2": 1874, "batch_per_it": 1874, "iters_to_accumul": 1874, "num_proc": 1874, "grad_param": 1874, "grad_norm": 1874, "scaled_grad_param": 1874, "inv_scal": 1874, "optimizer0": 1874, "optimizer1": 1874, "output0": 1874, "model0": 1874, "model1": 1874, "loss0": 1874, "loss1": 1874, "imped": 1874, "poor": [1874, 1875], "dp_model": 1874, "imported_funct": 1874, "mymm": 1874, "myfloat32func": 1874, "fwd_output": 1874, "cleaner": 1875, "mapsto": 1875, "educ": 1875, "_save": 1875, "_saved_self": 1875, "convex": 1875, "concav": 1875, "togglabl": 1875, "drawback": 1875, "0011": 1875, "dirti": 1875, "hogwild": 1875, "train_fn": 1875, "graphtask": 1875, "copyslic": 1875, "mutex": 1875, "gotten": 1875, "curiou": 1875, "\u2102": 1875, "yj": 1875, "holomorph": 1875, "theori": 1875, "homomorph": 1875, "mathematician": 1875, "im": 1875, "studi": [1875, 1899], "beauti": 1875, "somewhat": [1875, 1878, 1909], "counterintuit": 1875, "0906": 1875, "4835": 1875, "audio": [1875, 1914], "\u211d": 1875, "_output": 1875, "vj": 1875, "selfdeletingtempfil": 1875, "tmp_dir": 1875, "uuid": 1875, "uuid4": 1875, "temp_fil": 1875, "forbidden": 1875, "savedtensor": 1875, "_raw_saved_": 1875, "_raw_saved_self": 1875, "save_on_disk_threshold": 1875, "tensor_or_sctf": 1875, "_saved_oth": 1875, "4th": 1876, "backcompat": 1876, "broadcast_warn": 1876, "userwarn": 1876, "compute_z": 1877, "w_z": 1877, "w_y": 1877, "tbb": 1877, "aten_thread": 1877, "omp": 1877, "mkl_thread": 1877, "bla": 1877, "mkldnn_cpu_runtim": 1877, "use_mkldnn": 1877, "use_tbb": 1877, "use_openmp": 1877, "ON": [1877, 1884, 1885], "set_num_interop_thread": 1877, "get_num_interop_thread": 1877, "set_num_thread": 1877, "get_num_thread": 1877, "omp_num_thread": 1877, "mkl_num_thread": 1877, "1024": [1877, 1878], "e5": 1877, "oversubscript": 1877, "irrespect": 1878, "spread": 1878, "cuda2": [1878, 1884], "a_ful": 1878, "10240": 1878, "b_full": 1878, "ab_ful": 1878, "7277": 1878, "ab_tf32": 1878, "016": 1878, "ga100": 1878, "1747": 1878, "relative_error": 1878, "0022": 1878, "ab_fp32": 1878, "0031": 1878, "000039": 1878, "7x": 1878, "globalcontext": 1878, "setallowtf32cubla": 1878, "setallowtf32cudnn": 1878, "bench_gemm_transform": 1878, "allow_fp16_reduc": 1878, "4048": 1878, "1634": 1878, "1639": 1878, "4056": 1878, "1670": 1878, "1661": 1878, "4080": 1878, "1664": 1878, "1658": 1878, "1651": 1878, "4104": 1878, "1677": 1878, "1674": 1878, "4128": 1878, "1796": [1878, 1886], "2519": 1878, "5096": 1878, "2144": 1878, "2149": 1878, "2766": 1878, "5120": 1878, "2142": 1878, "9728": 1878, "3875": 1878, "5779": 1878, "6182": 1878, "9656": 1878, "setallowfp16reductioncubla": 1878, "instabl": 1878, "setallowbf16reductioncubla": 1878, "start_ev": 1878, "elapsed_time_m": 1878, "exploit": 1878, "paragraph": [1878, 1883], "initial_grad": 1878, "memory_alloc": [1878, 1884], "memory_snapshot": [1878, 1884], "memcheck": 1878, "pytorch_no_cuda_memory_cach": [1878, 1884], "option2": 1878, "value2": 1878, "max_split_size_mb": 1878, "borderlin": 1878, "memory_summari": 1878, "resort": [1878, 1883, 1897], "roundup_power2_divis": 1878, "cudacachingalloc": 1878, "1280": 1878, "1536": 1878, "1792": 1878, "256mb": 1878, "512mb": 1878, "1gb": 1878, "knob": 1878, "roundup_bypass_threshold_mb": 1878, "garbage_collection_threshold": 1878, "reclaim": 1878, "release_cached_block": 1878, "unfavor": 1878, "cuda_runtime_api": 1878, "iostream": 1878, "fpic": 1878, "my_malloc": 1878, "cout": 1878, "endl": [1878, 1885], "my_fre": 1878, "cudafre": 1878, "cudapluggablealloc": 1878, "new_alloc": 1878, "_cuda_clearcublasworkspac": 1878, "kib": 1878, "lru": 1878, "geometri": 1878, "1023": 1878, "use_pytorch_kernel_cach": 1878, "pytorch_kernel_cache_path": 1878, "store_tru": 1878, "disable_cuda": 1878, "assess": 1878, "cudagetdevicecount": 1878, "cuinit": 1878, "pytorch_nvml_based_cuda_check": 1878, "nvml": 1878, "nvmldevicegetcount_v2": 1878, "poison": 1878, "aforement": [1878, 1888], "train_load": 1878, "x_cpu": 1878, "x_gpu": 1878, "x_cpu_long": 1878, "y_cpu": 1878, "y_gpu": 1878, "y_cpu_long": 1878, "new_tensor": 1878, "overus": 1878, "cudagraphlaunch": 1878, "elid": 1878, "versatil": 1878, "static_input": 1878, "static_output": 1878, "realist": 1878, "sophist": [1878, 1896], "violat": [1878, 1881], "prohibit": [1878, 1891], "virtual": 1878, "d_in": 1878, "d_out": 1878, "640": 1878, "static_target": 1878, "static_y_pr": 1878, "static_loss": 1878, "real_input": 1878, "real_target": 1878, "refil": 1878, "dag": 1878, "rejoin": 1878, "cuda_work": 1878, "nsight": 1878, "reorgan": 1878, "graphabl": 1878, "needlessli": 1878, "econom": 1878, "static_out_1": 1878, "g1_workload": 1878, "static_in_1": 1878, "static_out_2": 1878, "g2_workload": 1878, "static_in_2": 1878, "real_data_1": 1878, "real_data_2": 1878, "occasion": [1878, 1909], "29500": [1879, 1898, 1905, 1906], "prerequisit": 1879, "grad0": 1879, "grad1": 1879, "bucket1": 1879, "bucket0": 1879, "hurt": 1879, "earliest": 1879, "unreadi": 1879, "absent": 1879, "hpp": 1879, "processgroupgloo": 1879, "processgroupmpi": 1879, "_sync_param": 1879, "autograd_hook": 1879, "prepare_for_backward": 1879, "_after_": 1879, "optimize_ddp": 1879, "mark_dirti": 1880, "mark_non_differenti": [1880, 1881], "set_materialize_grad": 1880, "linearfunct": 1880, "grad_bia": 1880, "mulconst": 1880, "mycub": [1880, 1881], "grad_dx": [1880, 1881], "my_cub": [1880, 1881], "input_featur": 1880, "output_featur": 1880, "duck": [1880, 1897], "__array_function__": 1880, "nep": 1880, "0018": 1880, "scalartensor": 1880, "handled_funct": 1880, "mandat": 1880, "update_wrapp": 1880, "ensure_tensor": 1880, "metadatatensor": 1880, "__add__": 1880, "subtensor2": 1880, "othersubtensor": 1880, "loggingtensor": 1880, "permiss": 1880, "_metadata": 1880, "ndata": 1880, "ret": [1880, 1905], "ministri": 1880, "silli": 1880, "superclass": 1880, "troublesom": 1880, "face": [1880, 1897, 1914], "_get_overridable_funct": 1880, "overriden": 1880, "get_overridable_funct": [1880, 1920], "func_dict": 1880, "nn_func": 1880, "labori": 1880, "_get_testing_overrid": 1880, "get_testing_overrid": [1880, 1920], "override_dict": 1880, "dummy_add": 1880, "get_ignored_funct": [1880, 1920], "custom_vjp": 1881, "custom_jvp": 1881, "to_numpi": 1881, "numpysort": 1881, "ind_inv": 1881, "_1": [1881, 1897], "numpytak": 1881, "numpy_sort": 1881, "saniti": 1881, "ggx": 1881, "vmappabl": 1881, "x_bdim": 1881, "ind_bdim": 1881, "ind_inv_bdim": 1881, "expanded_x": 1881, "expanded_ind": 1881, "expanded_ind_inv": 1881, "new_dim": 1881, "logical_dim": 1881, "maybe_expand_bdim_at_front": 1881, "pseudocod": 1881, "rapidli": 1882, "abridg": 1882, "total_loss": 1882, "extrud": 1882, "phenomenon": 1882, "plenti": 1882, "bptt": 1882, "repackag": 1882, "nm": 1882, "blow": 1882, "elf": 1882, "grep": 1882, "run_model": 1882, "recoveri": 1882, "data_parallel": 1882, "pad_packed_sequ": 1882, "padded_input": 1882, "packed_input": 1882, "packed_output": 1882, "my_lstm": 1882, "dp_m": 1882, "padding_input": 1882, "ur": 1883, "rewritten": 1883, "j_f": 1883, "calculu": 1883, "cw": 1883, "bigger": 1883, "articl": 1883, "58eb23378f2a376565a66ac32c93a316c45b6131": 1883, "l99": 1883, "l105": 1883, "ds_dx": 1883, "compute_gradi": 1883, "ds_dy": 1883, "conj_w_d": 1883, "w_d": 1883, "d_idx": 1883, "albeit": 1883, "wonder": 1883, "amd": 1884, "dialect": 1884, "portabl": 1884, "rocmdoc": 1884, "programming_guid": 1884, "hip_api_guid": 1884, "cuda_vers": 1884, "cudaruntimegetvers": 1884, "cudadrivergetvers": 1884, "hip_vers": 1884, "hipruntimegetvers": 1884, "hipdrivergetvers": 1884, "11000": 1884, "use_rocm": 1884, "rocm_vers": 1884, "40300": 1884, "cmake": [1884, 1892], "drocm_force_enable_gpu_assert": 1884, "addglobalcallback": 1885, "recordfunct": 1885, "ivalu": 1885, "threadlocaldebuginfo": 1885, "debuginfoguard": 1885, "recordfunctioncallback": 1885, "onfunctionent": 1885, "onfunctionexit": 1885, "needsinput": 1885, "samplingprob": 1885, "enablerecordfunct": 1885, "cerr": 1885, "broader": [1885, 1917], "inject": 1885, "setapiusagehandl": 1885, "setapiusagelogg": 1885, "event_nam": 1885, "c10_log_api_usage_onc": 1885, "my_api": 1885, "_log_api_usage_onc": 1885, "archiv": 1885, "bundl": 1885, "akin": 1885, "jpeg": 1885, "camera": [1885, 1914], "setexportmoduleextrafileshook": 1885, "extrafilesmap": 1885, "producer_info": 1885, "getenv": 1885, "getsourc": 1885, "precompil": 1885, "pyc": 1885, "loos": 1885, "elabor": 1886, "tpu": 1886, "mylinear": 1886, "sample_input": 1886, "0413": 1886, "2057": 1886, "0597": 1886, "8247": 1886, "1045": 1886, "4299": 1886, "5457": 1886, "4793": 1886, "3634": 1886, "8525": 1886, "6749": 1886, "l0": [1886, 1891], "bignet": 1886, "big_net": 1886, "dynamicnet": 1886, "dynamic_net": 1886, "2051": 1886, "7601": 1886, "1963": 1886, "4354": 1886, "6598": 1886, "4446": 1886, "4628": 1886, "8774": 1886, "6848": 1886, "5458": 1886, "4647": 1886, "5310": 1886, "0609": 1886, "0940": 1886, "1266": 1886, "0623": 1886, "3508": 1886, "0550": 1886, "5317": 1886, "5562": 1886, "4028": 1886, "6942": 1886, "0140": 1886, "0329": 1886, "1160": 1886, "0434": 1886, "3889": 1886, "1613": 1886, "6340": 1886, "3887": 1886, "9979": 1886, "0767": 1886, "3526": 1886, "8756": 1886, "5847": 1886, "6016": 1886, "1608": 1886, "0829": 1886, "6338": 1886, "9239": 1886, "6943": 1886, "5034": 1886, "0268": 1886, "4489": 1886, "9403": 1886, "2509": 1886, "5052": 1886, "3088": 1886, "4951": 1886, "3381": 1886, "5166": 1886, "boilerpl": [1886, 1897], "beginn": 1886, "examples_nn": 1886, "polynomial_modul": 1886, "teach": 1886, "0013": [1886, 1910], "0030": 1886, "0008": 1886, "modalmodul": 1886, "6614": 1886, "2669": 1886, "0617": 1886, "4519": 1886, "two_layer_net_optim": 1886, "blitz": 1886, "neural_networks_tutori": 1886, "autograd_tutori": 1886, "new_net": 1886, "runningmean": 1886, "1041": 1886, "0647": 1886, "1515": 1886, "m_load": 1886, "unserialized_th": 1886, "statefulmodul": 1886, "param3": 1886, "param_list": 1886, "parameterlist": 1886, "param_dict": 1886, "parameterdict": 1886, "buffer1": 1886, "buffer2": 1886, "buffer3": 1886, "0322": 1886, "9066": 1886, "1409": 1886, "4852": 1886, "6949": 1886, "2911": 1886, "1044": 1886, "4202": 1886, "1953": 1886, "5299": 1886, "8747": 1886, "6289": 1886, "4898": 1886, "6434": 1886, "5187": 1886, "0346": 1886, "4077": 1886, "4324": 1886, "7022": 1886, "3915": 1886, "6176": 1886, "6062": 1886, "5992": 1886, "4452": 1886, "2843": 1886, "3710": 1886, "3947": 1886, "saving_loading_model": 1886, "what_is_state_dict": 1886, "skip_init": 1886, "skip_param_init": 1886, "new_grad_input": 1886, "5059": 1886, "8158": 1886, "2390": 1886, "0043": 1886, "addmmbackward": 1886, "forward_pre_hook_handl": 1886, "5752": 1886, "7421": 1886, "forward_hook_handl": 1886, "0980": 1886, "4666": 1886, "0256": 1886, "4497": 1886, "5046": 1886, "combat": 1886, "shader": 1887, "mps_devic": 1887, "yourfavoritenet": 1887, "a3c": 1888, "set_start_method": 1888, "simplequeu": 1888, "cope": 1888, "eleg": 1888, "num_process": 1888, "modern": 1889, "754": 1889, "1e20": 1889, "4142e": 1889, "struggl": 1889, "benign": 1889, "v_dot2": 1889, "mfma": 1889, "fp64": 1889, "rocbla": 1889, "miopen": 1889, "rocblas_internal_fp16_alt_impl": 1889, "miopen_debug_convolution_attrib_fp16_alt_impl": 1889, "_convbackend": 1889, "slownd": 1889, "slownd_transpos": 1889, "slownd_dil": 1889, "slownd_dilated_transpos": 1889, "convbackend": 1889, "miopendepthwis": 1889, "miopentranspos": 1889, "svd_lowrank": [1890, 1909], "22modul": 1890, "20determin": 1890, "index_add_cuda_": 1890, "1509": 1890, "8027": 1890, "0333": 1890, "1444": 1890, "rese": 1890, "seed_work": 1890, "worker_se": 1890, "train_dataset": 1890, "tensor_dict": 1891, "loaded_numb": 1891, "loaded_even": 1891, "scene": [1891, 1914], "loaded_smal": 1891, "num_batches_track": 1891, "bn_state_dict": 1891, "new_bn": 1891, "out0_relu": 1891, "1400": 1891, "4563": 1891, "0271": 1891, "4406": 1891, "2827": 1891, "4588": 1891, "2031": 1891, "0300": 1891, "1316": 1891, "6533": 1891, "3413": 1891, "1112": 1891, "m_state_dict": 1891, "new_m": 1891, "original_nam": 1891, "controlflowmodul": 1891, "controlflowmodule_trac": 1891, "3793": 1891, "controlflowmodule_script": 1891, "rem": 1892, "7z": 1892, "curl": 1892, "ossci": 1892, "mkl_2020": 1892, "aoa": 1892, "omkl": 1892, "cuda_prefix": 1892, "cuda102": 1892, "magma_2": 1892, "4_": 1892, "omagma": 1892, "cmake_include_path": 1892, "magma_hom": 1892, "studio": 1892, "pip": [1892, 1893, 1914], "cmake_gener": 1892, "ffi": 1892, "create_extens": 1892, "_ext": 1892, "define_macro": 1892, "relative_to": 1892, "c99": 1892, "x86_x64": 1892, "packagesnotfounderror": 1892, "anaconda": 1892, "noarch": 1892, "continuum": 1892, "pkg": 1892, "pro": [1892, 1914], "msys2": 1892, "importerror": [1892, 1897], "dll": 1892, "vc2017": 1892, "redistribut": 1892, "vc": 1892, "vs2017_runtim": 1892, "mkl_fft": 1892, "intel_openmp": 1892, "vs2017": 1892, "pai": [1892, 1913], "openbla": 1892, "forg": 1892, "emerg": 1892, "bootstrap": 1892, "forgotten": 1892, "idiom": 1892, "freeze_support": 1892, "forkingpickl": 1892, "brokenpipeerror": 1892, "errno": 1892, "couldn": [1892, 1893], "torch_14808_1591070686": 1892, "thalloc": 1892, "tdr": 1892, "thcudacheck": 1892, "csrc": 1892, "storageshar": 1892, "dummy_input": 1893, "input_nam": 1893, "actual_input_1": 1893, "learned_": 1893, "output_nam": 1893, "learned_0": 1893, "learned_1": 1893, "learned_2": 1893, "learned_3": 1893, "learned_14": 1893, "learned_15": 1893, "kernel_shap": 1893, "9216": 1893, "transb": 1893, "check_model": 1893, "printable_graph": 1893, "onnxruntim": 1893, "ort": 1893, "ort_sess": 1893, "inferencesess": 1893, "astyp": 1893, "seq_length": 1893, "real_seq_length": 1893, "experienc": 1893, "new_data": 1893, "hope": 1893, "symbolic_opset": 1893, "symbolic_opset9": 1893, "_variablefunct": 1893, "pyi": 1893, "___torch_mangle_0": 1893, "alpha_f": 1893, "myrelu": 1893, "value_t": 1893, "pythonop": [1893, 1895], "mylogexp": 1893, "operator_export_typ": 1893, "onnx_fallthrough": 1893, "onnx_aten_fallback": 1893, "onnxscript": 1893, "onnx_opset": 1893, "opset15": 1893, "custom_opset": 1893, "67326": 1893, "alphax": 1893, "castlik": 1893, "gammax": 1893, "settyp": 1893, "custom_selu": 1893, "jit_util": 1893, "graphcontext": 1893, "onnxscript_op": 1893, "register_custom_op_symbol": 1893, "symbolic_nam": 1893, "symbolic_fn": 1893, "symbolic_help": 1893, "symbolic_foo_forward": 1893, "custom_domain": 1893, "attr1_f": 1893, "attr2_i": 1893, "custom_op": 1893, "foo_forward": 1893, "foomodel": 1893, "example_input1": 1893, "caffe2": [1893, 1914], "torch_script_graph": 1893, "unconvertible_op": 1893, "dynamic_ax": 1893, "export_param": 1893, "trainingmod": 1893, "operatorexporttyp": 1893, "do_constant_fold": 1893, "keep_initializers_as_input": 1893, "export_modules_as_funct": 1893, "OF": 1893, "WITH": 1893, "input_i": 1893, "input_z": 1893, "fileno": 1893, "untrain": 1893, "doc_str": 1893, "onnx_aten": 1893, "build_caffe2": 1893, "summodul": 1893, "dim_valu": 1893, "my_custom_axis_nam": 1893, "dim_param": 1893, "sum_dynamic_axes_1": 1893, "predefin": 1893, "checkererror": 1893, "unsupportedoperatorerror": 1893, "export_to_pretty_str": 1893, "export_typ": 1893, "google_print": 1893, "add_node_nam": 1893, "nodeproto": 1893, "debugstr": 1893, "contrib": 1893, "test_aten_embedding_2": 1893, "test_oper": 1893, "unregister_custom_op_symbol": 1893, "select_model_mode_for_export": 1893, "is_in_onnx_export": 1893, "middl": 1893, "enable_log": 1893, "disable_log": 1893, "graphinfo": 1893, "incorrect_relu_symbolic_funct": 1893, "2328854203224182": 1893, "699536174352349": 1893, "rapid": 1893, "exportopt": 1893, "my_nn_modul": 1893, "my_nn_module_attribut": 1893, "underdevelop": 1894, "parsabl": 1894, "sarif": 1894, "diagsys0001": 1894, "fxe0001": 1894, "fxe0002": 1894, "fxe0003": 1894, "fxe0004": 1894, "fxe0005": 1894, "fxe0006": 1894, "atenlib": 1894, "fxe0007": 1894, "fxe0008": 1894, "fxe0009": 1894, "fxe0010": 1894, "poe0001": 1894, "poe0002": 1894, "poe0003": 1894, "poe0004": 1894, "_intern": [1894, 1911], "exportdiagnost": 1894, "frames_to_skip": 1894, "cpp_stack": 1894, "record_cpp_call_stack": 1894, "constantchunk": 1895, "__and_": 1895, "__contains_": 1895, "__derive_index": 1895, "__getitem_": 1895, "__interpol": 1895, "__is_": 1895, "__isnot_": 1895, "__lshift_": 1895, "__not_": 1895, "__or_": 1895, "__range_length": 1895, "__rshift_": 1895, "__xor_": 1895, "_cast_byt": 1895, "_cast_char": 1895, "_cast_doubl": 1895, "_cast_float": 1895, "_cast_half": 1895, "_cast_int": 1895, "_cast_long": 1895, "_cast_short": 1895, "_conj": 1895, "_convolution_mod": 1895, "_dim_arang": 1895, "_pack_padded_sequ": 1895, "_pad_packed_sequ": 1895, "_reshape_from_tensor": 1895, "_sample_dirichlet": 1895, "_set_item": 1895, "_shape_as_tensor": 1895, "_standard_gamma": 1895, "_uniqu": 1895, "_unique2": 1895, "_weight_norm": 1895, "conv1d_relu": 1895, "conv2d_relu": 1895, "embedding_renorm": 1895, "floordiv": [1895, 1902], "nonzero_numpi": 1895, "numpy_t": 1895, "unchecked_cast": 1895, "unique_dim": 1895, "_quantiz": 1895, "conv2d_prepack": 1895, "conv3d_prepack": 1895, "conv3d_relu": 1895, "conv_transpose1d_prepack": 1895, "conv_transpose2d_prepack": 1895, "conv_transpose3d_prepack": 1895, "linear_dynam": 1895, "linear_prepack": 1895, "linear_prepack_fp16": 1895, "linear_prepack_fp16_legaci": 1895, "linear_prepack_legaci": 1895, "_test": 1895, "get_first": 1895, "compleximplicit": 1895, "floatimplicit": 1895, "intimplicit": 1895, "__iand_": 1895, "__ilshift_": 1895, "__ior_": 1895, "__irshift_": 1895, "__ixor_": 1895, "__round_to_zero_floordiv": 1895, "__upsampl": 1895, "__upsample_bilinear": 1895, "__upsample_nearest": 1895, "_adaptive_avg_pool3d": 1895, "_add_batch_dim": 1895, "_add_relu": 1895, "_addmm_activ": 1895, "_aminmax": 1895, "_amp_foreach_non_finite_check_and_unscal": 1895, "_amp_update_scal": 1895, "_assert_async": 1895, "_assert_tensor_metadata": 1895, "_autocast_to_full_precis": 1895, "_autocast_to_reduced_precis": 1895, "_batch_norm_impl_index": 1895, "_cdist_forward": 1895, "_cholesky_solve_help": 1895, "_choose_qparams_per_tensor": 1895, "_chunk_grad_outputs_efficient_attent": 1895, "_coalesc": 1895, "_compute_linear_combin": 1895, "_conj_copi": 1895, "_conj_phys": 1895, "_conv_depthwise2d": 1895, "_convert_indices_from_coo_to_csr": 1895, "_convert_indices_from_csr_to_coo": 1895, "_copy_from": 1895, "_copy_from_and_res": 1895, "_ctc_loss": 1895, "_cudnn_ctc_loss": 1895, "_cudnn_init_dropout_st": 1895, "_cudnn_rnn": 1895, "_cudnn_rnn_flatten_weight": 1895, "_cufft_clear_plan_cach": 1895, "_cufft_get_plan_cache_max_s": 1895, "_cufft_get_plan_cache_s": 1895, "_cufft_set_plan_cache_max_s": 1895, "_cummax_help": 1895, "_cummin_help": 1895, "_debug_has_internal_overlap": 1895, "_dimi": 1895, "_dimv": 1895, "_dirichlet_grad": 1895, "_efficient_attention_forward": 1895, "_efficientzerotensor": 1895, "_embedding_bag": 1895, "_embedding_bag_forward_onli": 1895, "_empty_affine_quant": 1895, "_empty_per_channel_affine_quant": 1895, "_euclidean_dist": 1895, "_fake_quantize_learnable_per_channel_affin": 1895, "_fake_quantize_learnable_per_tensor_affin": 1895, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1895, "_fft_c2c": 1895, "_fft_c2r": 1895, "_fft_r2c": 1895, "_flash_attention_forward": 1895, "_foreach_ab": 1895, "_foreach_aco": 1895, "_foreach_add": 1895, "_foreach_addcdiv": 1895, "_foreach_addcmul": 1895, "_foreach_asin": 1895, "_foreach_atan": 1895, "_foreach_ceil": 1895, "_foreach_clamp_max": 1895, "_foreach_clamp_min": 1895, "_foreach_co": 1895, "_foreach_cosh": 1895, "_foreach_div": 1895, "_foreach_erf": 1895, "_foreach_erfc": 1895, "_foreach_exp": 1895, "_foreach_expm1": 1895, "_foreach_floor": 1895, "_foreach_frac": 1895, "_foreach_lerp": 1895, "_foreach_lgamma": 1895, "_foreach_log": 1895, "_foreach_log10": 1895, "_foreach_log1p": 1895, "_foreach_log2": 1895, "_foreach_maximum": 1895, "_foreach_minimum": 1895, "_foreach_mul": 1895, "_foreach_neg": 1895, "_foreach_norm": 1895, "_foreach_pow": 1895, "_foreach_reciproc": 1895, "_foreach_round": 1895, "_foreach_sigmoid": 1895, "_foreach_sin": 1895, "_foreach_sinh": 1895, "_foreach_sqrt": 1895, "_foreach_sub": 1895, "_foreach_tan": 1895, "_foreach_tanh": 1895, "_foreach_trunc": 1895, "_foreach_zero": 1895, "_fused_adam": 1895, "_fused_adamw": 1895, "_fused_dropout": 1895, "_fused_moving_avg_obs_fq_help": 1895, "_fused_moving_avg_obs_fq_helper_funct": 1895, "_fused_sdp_choic": 1895, "_fw_primal": 1895, "_fw_primal_copi": 1895, "_get_cpu_cap": 1895, "_get_tracing_st": 1895, "_grad_sum_to_s": 1895, "_has_compatible_shallow_copy_typ": 1895, "_has_same_storage_numel": 1895, "_histogramdd_bin_edg": 1895, "_histogramdd_from_bin_ct": 1895, "_histogramdd_from_bin_tensor": 1895, "_index_put_impl": 1895, "_indices_copi": 1895, "_infer_s": 1895, "_int_mm": 1895, "_is_all_tru": 1895, "_is_any_tru": 1895, "_is_zerotensor": 1895, "_linalg_check_error": 1895, "_linalg_det": 1895, "_linalg_eigh": 1895, "_linalg_slogdet": 1895, "_linalg_solve_ex": 1895, "_linalg_svd": 1895, "_list_to_tensor": 1895, "_local_scalar_dens": 1895, "_logcumsumexp": 1895, "_lstm_mp": 1895, "_make_du": 1895, "_make_dual_copi": 1895, "_make_per_channel_quantized_tensor": 1895, "_make_per_tensor_quantized_tensor": 1895, "_masked_scal": 1895, "_masked_softmax": 1895, "_mkldnn_reshap": 1895, "_mkldnn_transpos": 1895, "_mps_convolut": 1895, "_mps_convolution_transpos": 1895, "_native_batch_norm_legit_funct": 1895, "_native_batch_norm_legit_no_train": 1895, "_native_multi_head_attent": 1895, "_ncf_unsqueez": 1895, "_ncf_view": 1895, "_neg_view": 1895, "_neg_view_copi": 1895, "_nested_from_pad": 1895, "_nested_from_padded_and_nested_exampl": 1895, "_nested_tensor_from_mask": 1895, "_nested_tensor_from_mask_left_align": 1895, "_nested_tensor_from_tensor_list": 1895, "_nested_tensor_s": 1895, "_nested_tensor_softmax_with_shap": 1895, "_nested_tensor_storage_offset": 1895, "_nested_tensor_strid": 1895, "_nested_view_from_buff": 1895, "_nested_view_from_buffer_copi": 1895, "_new_zeros_with_same_feature_meta": 1895, "_nnpack_avail": 1895, "_nnpack_spatial_convolut": 1895, "_no_grad_embedding_renorm": 1895, "_no_grad_fil": 1895, "_no_grad_norm": 1895, "_no_grad_uniform": 1895, "_no_grad_zero": 1895, "_pack_sequ": 1895, "_pad_circular": 1895, "_pad_enum": 1895, "_pdist_forward": 1895, "_pin_memori": 1895, "_prelu_kernel": 1895, "_propagate_xla_data": 1895, "_remove_batch_dim": 1895, "_reshape_alia": 1895, "_reshape_alias_copi": 1895, "_reshape_copi": 1895, "_resize_output": 1895, "_rowwise_prun": 1895, "_saturate_weight_to_fp16": 1895, "_scaled_dot_product_attent": 1895, "_scaled_dot_product_attention_math": 1895, "_scaled_dot_product_efficient_attent": 1895, "_scaled_dot_product_flash_attent": 1895, "_size_if_not_equ": 1895, "_slow_conv2d_forward": 1895, "_sobol_engine_draw": 1895, "_sobol_engine_ff": 1895, "_sobol_engine_initialize_st": 1895, "_sobol_engine_scrambl": 1895, "_sparse_addmm": 1895, "_sparse_broadcast_to": 1895, "_sparse_broadcast_to_copi": 1895, "_sparse_bsc_tensor_unsaf": 1895, "_sparse_bsr_tensor_unsaf": 1895, "_sparse_compressed_tensor_unsaf": 1895, "_sparse_coo_tensor_unsaf": 1895, "_sparse_coo_tensor_with_dim": 1895, "_sparse_coo_tensor_with_dims_and_tensor": 1895, "_sparse_csc_tensor_unsaf": 1895, "_sparse_csr_prod": 1895, "_sparse_csr_sum": 1895, "_sparse_csr_tensor_unsaf": 1895, "_sparse_log_softmax": 1895, "_sparse_mm": 1895, "_sparse_mm_reduce_impl": 1895, "_sparse_softmax": 1895, "_sparse_sparse_matmul": 1895, "_sparse_sum": 1895, "_spdiag": 1895, "_standard_gamma_grad": 1895, "_structured_sparse_linear": 1895, "_tensor_to_list": 1895, "_test_ambiguous_default": 1895, "_test_autograd_multiple_dispatch": 1895, "_test_autograd_multiple_dispatch_view": 1895, "_test_autograd_multiple_dispatch_view_copi": 1895, "_test_check_tensor": 1895, "_test_functorch_fallback": 1895, "_test_optional_filled_intlist": 1895, "_test_optional_floatlist": 1895, "_test_optional_intlist": 1895, "_test_serialization_subcmul": 1895, "_test_string_default": 1895, "_test_warn_in_autograd": 1895, "_thnn_fused_gru_cel": 1895, "_thnn_fused_lstm_cel": 1895, "_to_cpu": 1895, "_to_dens": 1895, "_transform_bias_rescale_qkv": 1895, "_transformer_encoder_layer_fwd": 1895, "_trilinear": 1895, "_triton_multi_head_attent": 1895, "_triton_scaled_dot_attent": 1895, "_unpack_du": 1895, "_unsafe_view": 1895, "_unwrap_opt": 1895, "_upsample_bicubic2d_aa": 1895, "_upsample_bilinear2d_aa": 1895, "_upsample_nearest_exact1d": 1895, "_upsample_nearest_exact2d": 1895, "_upsample_nearest_exact3d": 1895, "_use_cudnn_ctc_loss": 1895, "_use_cudnn_rnn_flatten_weight": 1895, "_validate_compressed_sparse_indic": 1895, "_validate_sparse_bsc_tensor_arg": 1895, "_validate_sparse_bsr_tensor_arg": 1895, "_validate_sparse_compressed_tensor_arg": 1895, "_validate_sparse_coo_tensor_arg": 1895, "_validate_sparse_csc_tensor_arg": 1895, "_validate_sparse_csr_tensor_arg": 1895, "_values_copi": 1895, "_weight_norm_interfac": 1895, "capit": 1895, "confirmed_by_own": [1895, 1905], "convolution_overrid": 1895, "copy_sparse_to_spars": 1895, "endswith": 1895, "expandtab": 1895, "fake_quantize_per_channel_affine_cachemask": 1895, "fake_quantize_per_tensor_affine_cachemask": 1895, "fill_diagon": 1895, "glu_jvp": 1895, "has_torch_funct": [1895, 1920], "is_non_overlapping_and_dens": 1895, "is_own": 1895, "is_strides_like_format": 1895, "isalnum": 1895, "isalpha": 1895, "isdecim": 1895, "isdigit": 1895, "isidentifi": 1895, "islow": 1895, "isnumer": 1895, "isprint": 1895, "isspac": 1895, "istitl": 1895, "isupp": 1895, "lift_fresh": 1895, "lift_fresh_copi": 1895, "ljust": 1895, "local_valu": [1895, 1898], "log_sigmoid_forward": 1895, "lstrip": 1895, "matrix_h": 1895, "nll_loss2d_forward": 1895, "nll_loss_forward": 1895, "normal_funct": 1895, "owner_nam": 1895, "percentformat": 1895, "quantized_gru": 1895, "quantized_lstm": 1895, "resize_as_spars": 1895, "rfind": 1895, "rindex": 1895, "rjust": 1895, "rpartit": 1895, "rsplit": 1895, "rstrip": 1895, "set_data": 1895, "slow_conv3d_forward": 1895, "sparse_res": 1895, "sparse_resize_and_clear": 1895, "splitlin": 1895, "startswith": 1895, "swapcas": 1895, "unique_dim_consecut": 1895, "zfill": 1895, "_allgather_bas": 1895, "_reduce_scatter_bas": 1895, "allgath": 1895, "allgather_coalesc": 1895, "allgather_into_tensor_coalesc": 1895, "allreduce_coalesc": 1895, "alltoal": 1895, "alltoall_bas": 1895, "recv_any_sourc": 1895, "debugprim": 1895, "load_tensor": 1895, "_mkl_linear": 1895, "_mkl_reorder_linear_weight": 1895, "_convolution_pointwis": 1895, "_convolution_transpose_pointwis": 1895, "_is_mkldnn_bf16_support": 1895, "_linear_pointwis": 1895, "_reorder_convolution_transpose_weight": 1895, "_reorder_linear_weight": 1895, "mkldnn_prepack": 1895, "conv2d_run": 1895, "nvprim": 1895, "conv2d_clamp_prepack": 1895, "conv2d_clamp_run": 1895, "conv2d_transpose_clamp_prepack": 1895, "conv2d_transpose_clamp_run": 1895, "linear_clamp_prepack": 1895, "linear_clamp_run": 1895, "unpack_prepacked_sizes_conv2d": 1895, "unpack_prepacked_sizes_linear": 1895, "addstatvalu": 1895, "autogradadd": 1895, "autogradallnonzero": 1895, "autogradallzero": 1895, "autogradanynonzero": 1895, "autogradzero": 1895, "bailout": 1895, "bailouttempl": 1895, "broadcastmkldnntensor": 1895, "broadcasts": 1895, "chunksiz": 1895, "constantmkldnntensor": 1895, "differentiablegraph": 1895, "enumnam": 1895, "enumvalu": 1895, "fallbackgraph": 1895, "fusedconcat": 1895, "fusiongroup": 1895, "ifthenels": 1895, "ignoredpythonop": 1895, "mkldnnclamp": 1895, "mkldnnhardsigmoid": 1895, "mkldnnhardswish": 1895, "mkldnnhardtanh": 1895, "mkldnnlayernorm": 1895, "mkldnnscalarmul": 1895, "mmbatchsid": 1895, "mmtreereduc": 1895, "modulecontainerindex": 1895, "numtotensor": 1895, "raiseexcept": 1895, "reductions": 1895, "requiresgradcheck": 1895, "staticruntimecopyout": 1895, "staticsubgraph": 1895, "stringindex": 1895, "tensorexprdynamicgroup": 1895, "tensorexprdynamicguard": 1895, "tensorexprgroup": 1895, "timepoint": 1895, "tupleindex": 1895, "tupleunpack": 1895, "varconcat": 1895, "varstack": 1895, "awaitable_nowait": 1895, "awaitable_wait": 1895, "is_cpu": 1895, "is_ipu": 1895, "is_mkldnn": 1895, "is_mp": 1895, "is_nest": 1895, "is_ort": 1895, "is_quant": 1895, "is_vulkan": 1895, "is_xpu": 1895, "onednnfusiongroup": 1895, "onednnfusionguard": 1895, "profile_ivalu": 1895, "rangelist": 1895, "rpc_remot": 1895, "unchecked_unwrap_opt": 1895, "_call_end_callbacks_on_jit_fut": 1895, "_record_function_ent": 1895, "_record_function_enter_new": 1895, "_record_function_exit": 1895, "_bfloat16quantizedtofloat": 1895, "_floattobfloat16quant": 1895, "add_out": 1895, "add_relu_out": 1895, "add_scalar_out": 1895, "add_scalar_relu": 1895, "add_scalar_relu_out": 1895, "batch_norm1d": 1895, "batch_norm1d_relu": 1895, "batch_norm2d": 1895, "batch_norm2d_relu": 1895, "batch_norm3d": 1895, "batch_norm3d_relu": 1895, "batch_norm_relu": 1895, "cat_out": 1895, "cat_relu": 1895, "cat_relu_out": 1895, "conv1d_dynam": 1895, "conv1d_prepack": 1895, "conv1d_unpack": 1895, "conv2d_add": 1895, "conv2d_add_relu": 1895, "conv2d_dil": 1895, "conv2d_dynam": 1895, "conv2d_group": 1895, "conv2d_output_pad": 1895, "conv2d_pad": 1895, "conv2d_strid": 1895, "conv2d_transpos": 1895, "conv2d_unpack": 1895, "conv2d_unpack_s": 1895, "conv3d_dil": 1895, "conv3d_dynam": 1895, "conv3d_group": 1895, "conv3d_output_pad": 1895, "conv3d_pad": 1895, "conv3d_strid": 1895, "conv3d_transpos": 1895, "conv3d_unpack": 1895, "conv_prepack": 1895, "conv_transpose1d_dynam": 1895, "conv_transpose1d_unpack": 1895, "conv_transpose2d_dil": 1895, "conv_transpose2d_dynam": 1895, "conv_transpose2d_group": 1895, "conv_transpose2d_output_pad": 1895, "conv_transpose2d_pad": 1895, "conv_transpose2d_strid": 1895, "conv_transpose2d_transpos": 1895, "conv_transpose2d_unpack": 1895, "conv_transpose3d_dil": 1895, "conv_transpose3d_dynam": 1895, "conv_transpose3d_group": 1895, "conv_transpose3d_output_pad": 1895, "conv_transpose3d_pad": 1895, "conv_transpose3d_strid": 1895, "conv_transpose3d_transpos": 1895, "conv_transpose3d_unpack": 1895, "conv_unpack": 1895, "embedding_4bit": 1895, "embedding_bag_2bit_prepack": 1895, "embedding_bag_2bit_rowwise_offset": 1895, "embedding_bag_2bit_unpack": 1895, "embedding_bag_4bit": 1895, "embedding_bag_4bit_prepack": 1895, "embedding_bag_4bit_rowwise_offset": 1895, "embedding_bag_4bit_unpack": 1895, "embedding_bag_byt": 1895, "embedding_bag_byte_prepack": 1895, "embedding_bag_byte_rowwise_offset": 1895, "embedding_bag_byte_unpack": 1895, "embedding_bag_prepack": 1895, "embedding_bag_unpack": 1895, "embedding_byt": 1895, "linear_dynamic_fp16": 1895, "linear_leaky_relu": 1895, "linear_relu": [1895, 1902], "linear_relu_dynam": 1895, "linear_relu_dynamic_fp16": 1895, "linear_tanh": 1895, "linear_unpack": 1895, "linear_unpack_fp16": 1895, "linear_with_input_q_dq_qweight_dq_output_fp32": 1895, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1895, "make_quantized_cell_param": 1895, "make_quantized_cell_params_dynam": 1895, "make_quantized_cell_params_fp16": 1895, "mul_out": 1895, "mul_relu": 1895, "mul_relu_out": 1895, "mul_scalar_out": 1895, "mul_scalar_relu": 1895, "mul_scalar_relu_out": 1895, "quantized_gru_cell_dynam": 1895, "quantized_lstm_cell_dynam": 1895, "quantized_rnn_relu_cell_dynam": 1895, "quantized_rnn_tanh_cell_dynam": 1895, "rngprim": 1895, "philox_rand": 1895, "qlinear": 1895, "qlinear_dynam": 1895, "qlinear_prepack": 1895, "qlinear_relu": 1895, "qlinear_relu_dynam": 1895, "qlinear_unpack": 1895, "static_runtim": 1895, "vartupleunpack": 1895, "clamp_nan_to_num": 1895, "create_owned_ref": 1895, "dequantize_copi": 1895, "dict_unpack": 1895, "expand_dims_copi": 1895, "flatten_copi": 1895, "fused_equally_split": 1895, "reshape_copi": 1895, "select_tensor": 1895, "signed_log1p": 1895, "to_copi": 1895, "to_maybe_copy_out": 1895, "var1": 1896, "var2": 1896, "lbfg": 1896, "adadelta": 1896, "adamax": 1896, "asgd": 1896, "nadam": 1896, "radam": 1896, "rmsprop": 1896, "rprop": 1896, "reducelronplateau": 1896, "multisteplr": 1896, "upgrad": [1896, 1916], "swa_util": 1896, "averagedmodel": 1896, "swalr": 1896, "update_bn": 1896, "optima": 1896, "polyak": 1896, "averaged_model": 1896, "multi_avg_fn": 1896, "get_ema_multi_avg_fn": 1896, "textrm": 1896, "update_paramet": 1896, "avg_fn": 1896, "_foreach": 1896, "ema_model": 1896, "ema_avg": 1896, "averaged_model_paramet": 1896, "model_paramet": 1896, "num_averag": 1896, "swa_schedul": 1896, "anneal_epoch": 1896, "swa_lr": 1896, "swa_model": 1896, "cosineannealinglr": 1896, "swa_start": 1896, "test_input": 1896, "secur": 1897, "unpackag": 1897, "exercis": 1897, "unzip": 1897, "my_packag": 1897, "freeli": 1897, "94304870911616": 1897, "94304900784016": 1897, "extern_modul": 1897, "model_1": 1897, "pkl": 1897, "myzip": 1897, "file_byt": 1897, "writestr": 1897, "new_file_byt": 1897, "vim": 1897, "vimrc": 1897, "bufreadcmd": 1897, "brows": 1897, "amatch": 1897, "vi": 1897, "packageimport": 1897, "queryabl": 1897, "glob": 1897, "packageexport": 1897, "pe": 1897, "save_pickl": 1897, "has_fil": 1897, "importer_file_structur": 1897, "package_a": 1897, "get_rdep": 1897, "all_path": 1897, "dependency_graph_str": 1897, "save_text": 1897, "save_binari": 1897, "my_resourc": 1897, "config_stuff": 1897, "raw_data": 1897, "my_byt": 1897, "complementari": [1897, 1910], "load_pickl": 1897, "load_text": 1897, "load_binari": 1897, "my_tensor": 1897, "__reduce_package__": 1897, "my_str": 1897, "time_import": 1897, "time_export": 1897, "pickler": 1897, "persistent_id": 1897, "persistent_load": 1897, "generated_module_nam": 1897, "get_unique_id": 1897, "clock_gettim": 1897, "unpackage_foo": 1897, "depickl": 1897, "foo_1": 1897, "foo_2": 1897, "foo_packag": 1897, "foo_collect": 1897, "foo1": 1897, "foo2": 1897, "imported_foo": 1897, "9857706": 1897, "650140837": 1897, "652698385": 1897, "__torch_package__": 1897, "is_in_packag": 1897, "userexcept": 1897, "unpackageableexcept": 1897, "loaded_modul": 1897, "import_modul": 1897, "save_source_str": 1897, "save_modul": 1897, "textwrap": 1897, "dedent": 1897, "my_funct": 1897, "is_packag": 1897, "importlib": 1897, "my_pickl": 1897, "get_my_resourc": 1897, "read_text": 1897, "torch_package_import": 1897, "get_my_pickl": 1897, "is_from_packag": 1897, "stdlib": 1897, "my_test": 1897, "f2": [1897, 1898], "sys_import": 1897, "script_model": 1897, "mixed_model": 1897, "python_model_with_scripted_submodul": 1897, "loaded_script": 1897, "loaded_mix": 1897, "convention": 1897, "94286146172688": 1897, "94286146172784": 1897, "consult": 1897, "essai": 1897, "another_packag": 1897, "pickletool": 1897, "ast": 1897, "deni": 1897, "my_export": 1897, "my_interned_modul": 1897, "package_export": 1897, "my_externed_modul": 1897, "my_mocked_modul": 1897, "unwant": [1897, 1914], "hodg": 1897, "podg": 1897, "bazel": 1897, "buck": 1897, "my_class_inst": 1897, "imported_myclass": 1897, "okai": 1897, "torch_package_0": 1897, "handle_me_this_wai": 1897, "inadvert": 1897, "pun": 1897, "packagingerror": 1897, "dependency_graph": 1897, "emptymatcherror": 1897, "allow_empti": 1897, "_sysimport": 1897, "hermet": 1897, "scan": 1897, "orderedimport": 1897, "add_depend": 1897, "graphviz": 1897, "lang": 1897, "denied_modul": 1897, "my_subpackag": 1897, "digraph": 1897, "externed_modul": 1897, "interned_modul": 1897, "mocked_modul": 1897, "register_extern_hook": 1897, "register_intern_hook": 1897, "register_mock_hook": 1897, "myobject": 1897, "save_source_fil": 1897, "file_or_directori": 1897, "my_subsubpackag": 1897, "file_or_buff": 1897, "module_allow": 1897, "pytorchfileread": 1897, "python_vers": 1897, "is_dir": 1897, "gpipe": 1898, "suffer": 1898, "microbatch": 1898, "bubbl": 1898, "except_last": 1898, "deferred_batch_norm": 1898, "torchgpip": 1898, "withdevic": 1898, "micro": 1898, "fc": [1898, 1900], "init_rpc": [1898, 1905, 1906], "output_rref": 1898, "fairli": 1898, "fed": [1898, 1914], "nochunk": 1898, "resnext": 1898, "till": 1898, "skippabl": 1898, "perfectli": 1898, "1to3": 1898, "layer1": 1898, "f1": 1898, "layer2": 1898, "layer3": 1898, "skip_1to3": 1898, "f3": 1898, "alic": 1898, "bob": 1898, "carol": 1898, "stashstashpop": 1898, "f_alic": 1898, "f_bob": 1898, "verify_skipp": 1898, "unmatch": [1898, 1919], "fairscal": 1898, "_kinetoprofil": 1899, "profileract": 1899, "add_metadata": 1899, "add_metadata_json": 1899, "unaggreg": 1899, "export_chrome_trac": 1899, "export_memory_timelin": 1899, "gzip": 1899, "export_stack": 1899, "self_cuda_time_tot": 1899, "flamegraph": 1899, "brendangregg": 1899, "pl": 1899, "countnam": 1899, "perf_viz": 1899, "svg": 1899, "on_trace_readi": 1899, "record_and_sav": 1899, "tensorboard_trace_handl": 1899, "dir_nam": 1899, "logdir": [1899, 1914], "code_to_profil": 1899, "row_limit": 1899, "trace_handl": 1899, "test_trace_": 1899, "step_num": 1899, "code_iteration_to_profil": 1899, "mtia": 1899, "skip_first": 1899, "worker_nam": [1899, 1905], "use_gzip": 1899, "range_push": 1899, "range_pop": 1899, "4x": 1900, "broadli": 1900, "domin": 1900, "previous_layer_fp32": 1900, "linear_fp32": 1900, "activation_fp32": 1900, "next_layer_fp32": 1900, "linear_weight_fp32": 1900, "linear_int8_w_fp32_inp": 1900, "linear_weight_int8": 1900, "ptdq": 1900, "model_fp32": 1900, "model_int8": 1900, "quantize_dynam": 1900, "input_fp32": 1900, "previous_layer_int8": 1900, "linear_with_activation_int8": 1900, "next_layer_int8": 1900, "ptsq": 1900, "minmax": 1900, "l2norm": 1900, "model_fp32_fus": 1900, "fuse_modul": [1900, 1901], "model_fp32_prepar": 1900, "fq": 1900, "prepare_qat": 1900, "training_loop": 1900, "requant": 1900, "linear1": 1900, "custom_qconfig": 1900, "fxptq": 1900, "model_fp": 1900, "usermodel": 1900, "model_to_quant": 1900, "default_dynamic_qconfig": 1900, "model_prepar": 1900, "model_quant": 1900, "model_fus": 1900, "per_tensor_symmetr": [1900, 1903], "per_channel_symmetr": [1900, 1903], "per_channel_scal": 1900, "per_channel_zero_point": 1900, "quantized_tensor": 1900, "qengin": 1900, "in4": 1900, "fx2trt": 1900, "float_modul": [1900, 1918], "staticquantcustommodul": 1900, "observed_modul": 1900, "default_qconfig": [1900, 1919], "test_quantized_op": 1900, "testquantizedop": 1900, "test_custom_module_lstm": 1900, "test_quantize_fx": 1900, "testquantizefx": 1900, "test_static_lstm": 1900, "some_oper": 1900, "e2": 1900, "thnn_conv2d_forward": 1900, "quantizedcpu": 1900, "some_qconfig": 1900, "linearpackedparam": 1900, "_modul": 1900, "prepare_orig": 1900, "quantized_orig": 1900, "scripted_quant": 1900, "fp32_op": 1901, "int8_op": 1901, "cooperlak": 1901, "audit": 1901, "op_fp32": 1901, "op_int8": 1901, "_numeric_suit": 1901, "_numeric_suite_fx": 1901, "0x7f9707120580": 1902, "0x7f96f2fc1550": 1902, "0x7f96f2fc15e0": 1902, "num_tensor_args_to_observation_typ": 1902, "convbn1d": 1902, "0x7f96f23c8c10": 1902, "reference_quantized_module_for_root": 1902, "fuse_convtranspose_bn": 1902, "0x7f96f23c8dc0": 1902, "linearbn1d": 1902, "fuse_linear_bn": 1902, "0x7f96f23c8d30": 1902, "convbn2d": 1902, "convbn3d": 1902, "bnrelu2d": 1902, "bnrelu3d": 1902, "input_type_to_index": 1902, "conv_fus": 1902, "convbnrelu1d": 1902, "convbnrelu2d": 1902, "convbnrelu3d": 1902, "convrelu1d": 1902, "convrelu3d": 1902, "0x7f96f2fc1670": 1902, "0x7f96f2fc1ca0": 1902, "quint4x2": [1902, 1911, 1915, 1916], "embedding_op": 1902, "0x7f96f2fc3b80": 1902, "00390625": 1902, "0x7f96f2fc34c0": 1902, "0x7f96f2fc3670": 1902, "0x7f96f2fc1b80": 1902, "0x7f96f2fc3a60": 1902, "0x7f96f2eca0d0": 1902, "0x7f96f2fc3af0": 1902, "0x7f96f2fc1e50": 1902, "linear_fus": 1902, "_sequential_wrapper2": 1902, "0x7f970e26d430": 1902, "0x7f96f2fc1a60": 1902, "0x7f96f02c61f0": 1902, "fuse_conv_bn_relu": 1902, "0x7f96f23c8ca0": 1902, "0x7f96f02c6280": 1902, "0x7f96f02c6310": 1902, "0x7f96f02c63a0": 1902, "0x7f96f02c6430": 1902, "0x7f96f02c64c0": 1902, "0x7f96f02c6550": 1902, "0x7f96f02c65e0": 1902, "0x7f96f02c6670": 1902, "0x7f96f02c6700": 1902, "0x7f96f02c6790": 1902, "0x7f96f2fc1c10": 1902, "0078125": 1902, "customconfig": 1903, "custom_module_config": 1903, "_caller": 1904, "_devices_kw": 1904, "slowli": 1904, "unind": 1904, "deivc": 1904, "privateuse1": 1904, "shortcom": 1905, "stitch": 1905, "rpc_backend_opt": 1905, "trainer3": 1905, "parameterserver2": 1905, "dash": [1905, 1907], "backendtyp": 1905, "rpcbackendopt": 1905, "rpcagent": 1905, "transmit": 1905, "calle": [1905, 1907], "_set_rpc_timeout": 1905, "5678": 1905, "worker0": 1905, "my_script_add": 1905, "wire": 1905, "fut2": 1905, "meth": 1905, "grace": 1905, "pend": [1905, 1914], "userrref": [1905, 1907], "async_execut": 1905, "paus": 1905, "outmost": 1905, "async_add_chain": 1905, "worker2": 1905, "script_add": 1905, "async_add": 1905, "asyncexecutionclass": 1905, "static_async_add": 1905, "class_async_add": 1905, "ret_fut": 1905, "bound_async_add": 1905, "rpc_timeout": 1905, "incid": [1905, 1907], "nvlink": 1905, "multiplex": 1905, "tensorpiperpcbackendopt": 1905, "num_worker_thread": 1905, "device_map": 1905, "_transport": 1905, "tensorpipeag": 1905, "set_device_map": 1905, "intermitt": 1905, "remote_modul": 1905, "forward_async": 1905, "remote_devic": 1905, "workernam": 1905, "trainer0": 1905, "ps0": 1905, "remote_linear_modul": 1905, "get_module_rref": 1905, "remote_paramet": 1905, "my_add": [1906, 1920], "t4": 1906, "t5": 1906, "autograd_message_id": 1906, "autograd_context_id": 1906, "send1": 1906, "kickoff": 1906, "recv2": 1906, "heard": 1906, "send2": 1906, "recv1": 1906, "dist_autograd_simpl": 1906, "random_tensor": 1906, "_run_process": 1906, "dst_rank": 1906, "dst_name": 1906, "run_process": 1906, "rrefid": 1907, "ownerrref": 1907, "transient": 1907, "udf": 1907, "deliveri": 1907, "knowledg": 1907, "danger": 1907, "ancestor": 1907, "trickier": 1907, "wouldn": 1907, "forkid": 1907, "ack": 1907, "solid": 1907, "gc": 1907, "followup": 1907, "lil": 1909, "stark": 1909, "9093": 1909, "1411": 1909, "7568": 1909, "9589": 1909, "2794": 1909, "catastroph": 1909, "9900": 1909, "maskedtensor": 1909, "000": 1909, "400": 1909, "s2": 1909, "plain_dim_s": 1909, "lp64": 1909, "280": 1909, "310": 1909, "sp": 1909, "9078": 1909, "conception": 1909, "lobpcg": 1909, "geneig": 1909, "pca_lowrank": 1909, "kindli": 1909, "airy_ai": 1910, "airi": 1910, "onward": 1910, "9635": 1910, "entr": 1910, "3466": 1910, "int_": 1910, "8427": 1910, "0561": 1910, "4769": 1910, "9213": 1910, "8858": 1910, "7683": 1910, "7481": 1910, "2920": 1910, "int_0": 1910, "gammaln": 1910, "a1": 1910, "a2": 1910, "3528": 1910, "5665": 1910, "6472": 1910, "4335": 1910, "2650": 1910, "2661": 1910, "2796": 1910, "8808": 1910, "3019": 1910, "4658": 1910, "3085": 1910, "2430": 1910, "2070": 1910, "i1": 1910, "5652": 1910, "9534": 1910, "7595": 1910, "2153": 1910, "log_ndtr": 1910, "_ndtr": 1910, "6077": 1910, "7832": 1910, "841": 1910, "6931": 1910, "1728": 1910, "023": 1910, "9331": 1910, "6486": 1910, "1523": 1910, "6516": 1910, "6352": 1910, "6131": 1910, "7169": 1910, "6261": 1910, "displaystyl": 1910, "undefiend": 1910, "6835": 1910, "8474": 1910, "1929": 1910, "7162": 1910, "4180": 1910, "3928": 1910, "4007": 1910, "7586": 1910, "3901": 1910, "5049": 1910, "ndtr": 1910, "0228": 1910, "1587": 1910, "9772": 1910, "9987": 1910, "2p": 1910, "64493": 1910, "4041": 1910, "8288": 1910, "4939": 1910, "97": 1910, "4091": 1910, "8863": 1910, "771": 1910, "scaled_modified_bessel_k0": 1910, "scaled_modified_bessel_k1": 1910, "2948": 1910, "0267": 1910, "1566": 1910, "9186": 1910, "8631": 1910, "0259": 1910, "1300": 1910, "spheric": 1910, "xlog1pi": 1910, "3863": 1910, "1972": 1910, "6094": 1910, "2189": 1910, "8283": 1910, "7726": 1910, "0986": 1910, "1589": 1910, "hurwitz": 1910, "6449": 1910, "0823": 1910, "untyp": 1911, "wrap_storag": 1911, "complex_doubl": 1911, "from_buff": 1911, "pickle_storage_typ": 1911, "byteswap": 1911, "quint2x4": [1911, 1916], "twelv": 1912, "halftensor": [1912, 1915], "bfloat16tensor": [1912, 1915], "chartensor": [1912, 1915], "shorttensor": [1912, 1915], "binary16": [1912, 1915], "significand": [1912, 1915], "float_tensor": 1912, "double_tensor": 1912, "complex_float_tensor": 1912, "complex_double_tensor": 1912, "int_tensor": 1912, "long_tensor": 1912, "uint_tensor": 1912, "bool_tensor": 1912, "long_zerodim": 1912, "int_zerodim": 1912, "set_default_devic": 1912, "cuda1": 1912, "nhwc": [1912, 1914], "channels_last_3d": 1912, "ndhwc": 1912, "blogpost": 1913, "totensor": 1914, "trainset": 1914, "mnist": 1914, "mnist_train": 1914, "trainload": 1914, "grayscal": 1914, "make_grid": 1914, "add_imag": 1914, "add_graph": 1914, "clutter": 1914, "n_iter": 1914, "purge_step": 1914, "max_queu": 1914, "flush_sec": 1914, "filename_suffix": 1914, "current_datetime_hostnam": 1914, "exp1": 1914, "suffix": [1914, 1915], "global_step": 1914, "purg": 1914, "event_file_writ": 1914, "eventfilewrit": 1914, "may04_22": 1914, "54_": 1914, "macbook": 1914, "my_experi": 1914, "lr_0": 1914, "1_batch_16": 1914, "locallr_0": 1914, "scalar_valu": 1914, "walltim": 1914, "new_styl": 1914, "double_precis": 1914, "blobnam": 1914, "simple_valu": 1914, "main_tag": 1914, "tag_scalar_dict": 1914, "run_14h": 1914, "xsinx": 1914, "xcosx": 1914, "tanx": 1914, "add_histogram": 1914, "max_bin": 1914, "fd": 1914, "img_tensor": 1914, "dataformat": 1914, "chw": 1914, "hwc": 1914, "hw": 1914, "wh": 1914, "3xhxw": 1914, "img_hwc": 1914, "my_imag": 1914, "my_image_hwc": 1914, "img_batch": 1914, "my_image_batch": 1914, "add_figur": 1914, "add_video": 1914, "vid_tensor": 1914, "fp": 1914, "moviepi": 1914, "add_audio": 1914, "snd_tensor": 1914, "sample_r": 1914, "44100": 1914, "add_text": 1914, "text_str": 1914, "input_to_model": 1914, "use_strict_trac": 1914, "add_embed": 1914, "label_img": 1914, "metadata_head": 1914, "projector": 1914, "kwlist": 1914, "add_pr_curv": 1914, "num_threshold": 1914, "pr_curv": 1914, "add_custom_scalar": 1914, "chart": 1914, "categorynam": 1914, "chartnam": 1914, "listofproperti": 1914, "multilin": 1914, "taiwan": 1914, "twse": 1914, "0050": 1914, "2330": 1914, "dow": 1914, "aaa": 1914, "bbb": 1914, "ccc": 1914, "nasdaq": 1914, "add_mesh": 1914, "config_dict": 1914, "threej": 1914, "vertex": 1914, "number_of_vertic": 1914, "vertices_tensor": 1914, "colors_tensor": 1914, "faces_tensor": 1914, "my_mesh": 1914, "add_hparam": 1914, "hparam_dict": 1914, "metric_dict": 1914, "hparam_domain_discret": 1914, "run_nam": 1914, "hparam": 1914, "bsize": 1914, "_like": 1915, "allow_subclass": 1916, "check_devic": 1916, "check_layout": 1916, "6e": 1916, "3e": 1916, "assert_equ": 1916, "000000000000001e": 1916, "1e0": 1916, "argh": 1916, "nfooter": 1916, "66": 1916, "footer": 1916, "exclude_zero": 1916, "1205": 1916, "2282": 1916, "6380": 1916, "default_gener": 1917, "data_dependent_output": 1917, "dynamic_output_shap": 1917, "inplace_view": 1917, "nondeterministic_bitwis": 1917, "nondeterministic_seed": 1917, "compare_weight": 1918, "float_dict": 1918, "quantized_dict": 1918, "wt_compare_dict": 1918, "qmodel": 1918, "compute_error": 1918, "weight_dict": 1918, "get_logger_dict": 1918, "shadowlogg": 1918, "outputlogg": [1918, 1919], "target_dict": 1918, "q_modul": 1918, "logger_cl": [1918, 1919], "prepare_model_with_stub": 1918, "module_swap_list": 1918, "q_model": 1918, "ob_dict": 1918, "compare_model_stub": 1918, "quantizablebasicblock": 1918, "get_matching_activ": 1918, "act_dict": 1918, "prepare_model_output": 1918, "compare_model_output": 1918, "act_compare_dict": 1918, "weight_comparison": 1919, "extract_weight": 1919, "sqnr": 1919, "extend_logger_results_with_comparison": 1919, "compute_sqnr": 1919, "mp_n": 1919, "mq_n": 1919, "add_logg": 1919, "act_comparison": 1919, "extract_logger_info": 1919, "mp_shadows_mq": 1919, "add_shadow_logg": 1919, "shadow_act_comparison": 1919, "extract_shadow_logger_info": 1919, "ref_node_nam": 1919, "prev_node_nam": 1919, "model_nam": 1919, "ref_nam": 1919, "prev_node_target_typ": 1919, "ref_node_target_typ": 1919, "results_typ": 1919, "index_within_arg": 1919, "index_of_arg": 1919, "qconfig_str": 1919, "outputcomparisonlogg": 1919, "x_ref": 1919, "nstracer": 1919, "skipped_module_nam": 1919, "skipped_module_class": 1919, "model_name_a": 1919, "model_a": 1919, "model_name_b": 1919, "model_b": 1919, "base_name_to_sets_of_related_op": 1919, "unmatchable_types_map": 1919, "op_to_type_to_weight_extraction_fn": 1919, "nsresultstyp": 1919, "name_a": 1919, "name_b": 1919, "should_log_input": 1919, "model_a_with_logg": 1919, "model_b_with_logg": 1919, "model_name_to_use_for_layer_nam": 1919, "node_type_to_io_type_map": 1919, "model_a_shadows_b": 1919, "model_name_1": 1919, "model_name_2": 1919, "comparison_fn": 1919, "comparison_nam": 1919, "prepare_n_shadows_model": 1919, "qconfig_multi_map": 1919, "custom_prepare_fn": 1919, "custom_prepare_kwarg": 1919, "custom_trac": 1919, "args_kwargs_m": 1919, "op_m": 1919, "output_m": 1919, "op_m_n": 1919, "log_m_n": 1919, "log_m_0": 1919, "qconfig_n": 1919, "args_m": 1919, "op_m_prepared_with_qconfig_n": 1919, "out_m_n": 1919, "kwargs_m": 1919, "docblock": 1919, "loggers_set_en": 1919, "loggers_set_save_activ": 1919, "save_activ": 1919, "convert_n_shadows_model": 1919, "custom_convert_fn": 1919, "custom_convert_kwarg": 1919, "extract_results_n_shadows_model": 1919, "print_comparisons_n_shadows_model": 1919, "compute_normalized_l2_error": 1919, "compute_cosine_similar": 1919, "as_subclass": 1920, "resolve_nam": 1920, "handle_torch_funct": 1920, "public_api": 1920, "relevant_arg": 1920, "has_torch_function_unari": 1920, "is_tensor_lik": 1920, "notatensor": 1920, "tensorlik": 1920, "is_tensor_method_or_properti": 1920, "__get__": 1920, "__module__": 1920, "slot": 1920, "wrap_torch_funct": 1920, "smallest_norm": 1921, "subnorm": 1921, "denormal_numb": 1921}, "objects": {"": [[1917, 0, 0, "-", "torch"], [1852, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1911, 1, 1, "", "BFloat16Storage"], [1911, 1, 1, "", "BoolStorage"], [1911, 1, 1, "", "ByteStorage"], [1911, 1, 1, "", "CharStorage"], [1911, 1, 1, "", "ComplexDoubleStorage"], [1911, 1, 1, "", "ComplexFloatStorage"], [1911, 1, 1, "", "DoubleStorage"], [1911, 1, 1, "", "FloatStorage"], [81, 1, 1, "", "Generator"], [1911, 1, 1, "", "HalfStorage"], [1911, 1, 1, "", "IntStorage"], [1911, 1, 1, "", "LongStorage"], [1911, 1, 1, "", "QInt32Storage"], [1911, 1, 1, "", "QInt8Storage"], [1911, 1, 1, "", "QUInt2x4Storage"], [1911, 1, 1, "", "QUInt4x2Storage"], [1911, 1, 1, "", "QUInt8Storage"], [1911, 1, 1, "", "ShortStorage"], [1917, 1, 1, "", "SymBool"], [1917, 1, 1, "", "SymFloat"], [1917, 1, 1, "", "SymInt"], [1917, 1, 1, "", "Tag"], [1915, 1, 1, "", "Tensor"], [1911, 1, 1, "", "TypedStorage"], [1911, 1, 1, "", "UntypedStorage"], [25, 0, 0, "-", "__config__"], [613, 5, 1, "", "_assert"], [0, 0, 0, "-", "_dynamo"], [614, 5, 1, "", "_foreach_abs"], [615, 5, 1, "", "_foreach_abs_"], [616, 5, 1, "", "_foreach_acos"], [617, 5, 1, "", "_foreach_acos_"], [618, 5, 1, "", "_foreach_asin"], [619, 5, 1, "", "_foreach_asin_"], [620, 5, 1, "", "_foreach_atan"], [621, 5, 1, "", "_foreach_atan_"], [622, 5, 1, "", "_foreach_ceil"], [623, 5, 1, "", "_foreach_ceil_"], [624, 5, 1, "", "_foreach_cos"], [625, 5, 1, "", "_foreach_cos_"], [626, 5, 1, "", "_foreach_cosh"], [627, 5, 1, "", "_foreach_cosh_"], [628, 5, 1, "", "_foreach_erf"], [629, 5, 1, "", "_foreach_erf_"], [630, 5, 1, "", "_foreach_erfc"], [631, 5, 1, "", "_foreach_erfc_"], [632, 5, 1, "", "_foreach_exp"], [633, 5, 1, "", "_foreach_exp_"], [634, 5, 1, "", "_foreach_expm1"], [635, 5, 1, "", "_foreach_expm1_"], [636, 5, 1, "", "_foreach_floor"], [637, 5, 1, "", "_foreach_floor_"], [638, 5, 1, "", "_foreach_frac"], [639, 5, 1, "", "_foreach_frac_"], [640, 5, 1, "", "_foreach_lgamma"], [641, 5, 1, "", "_foreach_lgamma_"], [642, 5, 1, "", "_foreach_log"], [643, 5, 1, "", "_foreach_log10"], [644, 5, 1, "", "_foreach_log10_"], [645, 5, 1, "", "_foreach_log1p"], [646, 5, 1, "", "_foreach_log1p_"], [647, 5, 1, "", "_foreach_log2"], [648, 5, 1, "", "_foreach_log2_"], [649, 5, 1, "", "_foreach_log_"], [650, 5, 1, "", "_foreach_neg"], [651, 5, 1, "", "_foreach_neg_"], [652, 5, 1, "", "_foreach_reciprocal"], [653, 5, 1, "", "_foreach_reciprocal_"], [654, 5, 1, "", "_foreach_round"], [655, 5, 1, "", "_foreach_round_"], [656, 5, 1, "", "_foreach_sigmoid"], [657, 5, 1, "", "_foreach_sigmoid_"], [658, 5, 1, "", "_foreach_sin"], [659, 5, 1, "", "_foreach_sin_"], [660, 5, 1, "", "_foreach_sinh"], [661, 5, 1, "", "_foreach_sinh_"], [662, 5, 1, "", "_foreach_sqrt"], [663, 5, 1, "", "_foreach_sqrt_"], [664, 5, 1, "", "_foreach_tan"], [665, 5, 1, "", "_foreach_tan_"], [666, 5, 1, "", "_foreach_trunc"], [667, 5, 1, "", "_foreach_trunc_"], [668, 5, 1, "", "_foreach_zero_"], [1861, 0, 0, "-", "_logging"], [670, 5, 1, "", "abs"], [671, 5, 1, "", "absolute"], [672, 5, 1, "", "acos"], [673, 5, 1, "", "acosh"], [674, 5, 1, "", "add"], [675, 5, 1, "", "addbmm"], [676, 5, 1, "", "addcdiv"], [677, 5, 1, "", "addcmul"], [678, 5, 1, "", "addmm"], [679, 5, 1, "", "addmv"], [680, 5, 1, "", "addr"], [681, 5, 1, "", "adjoint"], [682, 5, 1, "", "all"], [683, 5, 1, "", "allclose"], [684, 5, 1, "", "amax"], [685, 5, 1, "", "amin"], [686, 5, 1, "", "aminmax"], [1, 0, 0, "-", "amp"], [687, 5, 1, "", "angle"], [688, 5, 1, "", "any"], [1900, 0, 0, "-", "ao"], [854, 5, 1, "", "arange"], [855, 5, 1, "", "arccos"], [856, 5, 1, "", "arccosh"], [857, 5, 1, "", "arcsin"], [858, 5, 1, "", "arcsinh"], [859, 5, 1, "", "arctan"], [860, 5, 1, "", "arctan2"], [861, 5, 1, "", "arctanh"], [862, 5, 1, "", "are_deterministic_algorithms_enabled"], [863, 5, 1, "", "argmax"], [864, 5, 1, "", "argmin"], [865, 5, 1, "", "argsort"], [866, 5, 1, "", "argwhere"], [867, 5, 1, "", "as_strided"], [868, 5, 1, "", "as_tensor"], [869, 5, 1, "", "asarray"], [870, 5, 1, "", "asin"], [871, 5, 1, "", "asinh"], [872, 5, 1, "", "atan"], [873, 5, 1, "", "atan2"], [874, 5, 1, "", "atanh"], [875, 5, 1, "", "atleast_1d"], [876, 5, 1, "", "atleast_2d"], [877, 5, 1, "", "atleast_3d"], [1, 1, 1, "", "autocast"], [2, 0, 0, "-", "autograd"], [3, 0, 0, "-", "backends"], [910, 5, 1, "", "baddbmm"], [911, 5, 1, "", "bartlett_window"], [912, 5, 1, "", "bernoulli"], [913, 5, 1, "", "bincount"], [914, 5, 1, "", "bitwise_and"], [915, 5, 1, "", "bitwise_left_shift"], [916, 5, 1, "", "bitwise_not"], [917, 5, 1, "", "bitwise_or"], [918, 5, 1, "", "bitwise_right_shift"], [919, 5, 1, "", "bitwise_xor"], [920, 5, 1, "", "blackman_window"], [921, 5, 1, "", "block_diag"], [922, 5, 1, "", "bmm"], [923, 5, 1, "", "broadcast_shapes"], [924, 5, 1, "", "broadcast_tensors"], [925, 5, 1, "", "broadcast_to"], [926, 5, 1, "", "bucketize"], [927, 5, 1, "", "can_cast"], [928, 5, 1, "", "cartesian_prod"], [929, 5, 1, "", "cat"], [930, 5, 1, "", "cdist"], [931, 5, 1, "", "ceil"], [932, 5, 1, "", "chain_matmul"], [933, 5, 1, "", "cholesky"], [934, 5, 1, "", "cholesky_inverse"], [935, 5, 1, "", "cholesky_solve"], [936, 5, 1, "", "chunk"], [937, 5, 1, "", "clamp"], [938, 5, 1, "", "clip"], [939, 5, 1, "", "clone"], [940, 5, 1, "", "column_stack"], [941, 5, 1, "", "combinations"], [15, 5, 1, "", "compile"], [943, 5, 1, "", "compiled_with_cxx11_abi"], [944, 5, 1, "", "complex"], [945, 5, 1, "", "concat"], [946, 5, 1, "", "concatenate"], [947, 5, 1, "", "conj"], [948, 5, 1, "", "conj_physical"], [1917, 0, 0, "-", "contrib"], [949, 5, 1, "", "copysign"], [950, 5, 1, "", "corrcoef"], [951, 5, 1, "", "cos"], [952, 5, 1, "", "cosh"], [953, 5, 1, "", "count_nonzero"], [954, 5, 1, "", "cov"], [1, 0, 0, "-", "cpu"], [955, 5, 1, "", "cross"], [28, 0, 0, "-", "cuda"], [1034, 5, 1, "", "cummax"], [1035, 5, 1, "", "cummin"], [1036, 5, 1, "", "cumprod"], [1037, 5, 1, "", "cumsum"], [1038, 5, 1, "", "cumulative_trapezoid"], [1039, 5, 1, "", "deg2rad"], [1040, 5, 1, "", "dequantize"], [1041, 5, 1, "", "det"], [1912, 1, 1, "", "device"], [1042, 5, 1, "", "diag"], [1043, 5, 1, "", "diag_embed"], [1044, 5, 1, "", "diagflat"], [1045, 5, 1, "", "diagonal"], [1046, 5, 1, "", "diagonal_scatter"], [1047, 5, 1, "", "diff"], [1048, 5, 1, "", "digamma"], [1049, 5, 1, "", "dist"], [35, 0, 0, "-", "distributed"], [41, 0, 0, "-", "distributions"], [1050, 5, 1, "", "div"], [1051, 5, 1, "", "divide"], [1052, 5, 1, "", "dot"], [1053, 5, 1, "", "dsplit"], [1054, 5, 1, "", "dstack"], [1912, 1, 1, "", "dtype"], [1055, 5, 1, "", "einsum"], [1056, 5, 1, "", "empty"], [1057, 5, 1, "", "empty_like"], [1058, 5, 1, "", "empty_strided"], [1059, 1, 1, "", "enable_grad"], [1060, 5, 1, "", "eq"], [1061, 5, 1, "", "equal"], [1062, 5, 1, "", "erf"], [1063, 5, 1, "", "erfc"], [1064, 5, 1, "", "erfinv"], [1065, 5, 1, "", "exp"], [1066, 5, 1, "", "exp2"], [1067, 5, 1, "", "expm1"], [1068, 5, 1, "", "eye"], [1069, 5, 1, "", "fake_quantize_per_channel_affine"], [1070, 5, 1, "", "fake_quantize_per_tensor_affine"], [56, 0, 0, "-", "fft"], [1093, 5, 1, "", "fix"], [1094, 5, 1, "", "flatten"], [1095, 5, 1, "", "flip"], [1096, 5, 1, "", "fliplr"], [1097, 5, 1, "", "flipud"], [1098, 5, 1, "", "float_power"], [1099, 5, 1, "", "floor"], [1100, 5, 1, "", "floor_divide"], [1101, 5, 1, "", "fmax"], [1102, 5, 1, "", "fmin"], [1103, 5, 1, "", "fmod"], [1104, 5, 1, "", "frac"], [1105, 5, 1, "", "frexp"], [1106, 5, 1, "", "from_dlpack"], [1107, 5, 1, "", "from_numpy"], [1108, 5, 1, "", "frombuffer"], [1109, 5, 1, "", "full"], [1110, 5, 1, "", "full_like"], [59, 0, 0, "-", "func"], [64, 0, 0, "-", "futures"], [65, 0, 0, "-", "fx"], [1124, 5, 1, "", "gather"], [1125, 5, 1, "", "gcd"], [1126, 5, 1, "", "ge"], [1127, 5, 1, "", "geqrf"], [1128, 5, 1, "", "ger"], [1129, 5, 1, "", "get_default_dtype"], [1130, 5, 1, "", "get_deterministic_debug_mode"], [1131, 5, 1, "", "get_float32_matmul_precision"], [1132, 5, 1, "", "get_num_interop_threads"], [1133, 5, 1, "", "get_num_threads"], [1134, 5, 1, "", "get_rng_state"], [1135, 5, 1, "", "gradient"], [1136, 5, 1, "", "greater"], [1137, 5, 1, "", "greater_equal"], [1138, 5, 1, "", "gt"], [1139, 5, 1, "", "hamming_window"], [1140, 5, 1, "", "hann_window"], [1141, 5, 1, "", "heaviside"], [1142, 5, 1, "", "histc"], [1143, 5, 1, "", "histogram"], [1144, 5, 1, "", "histogramdd"], [1145, 5, 1, "", "hsplit"], [1146, 5, 1, "", "hspmm"], [1147, 5, 1, "", "hstack"], [1849, 0, 0, "-", "hub"], [1148, 5, 1, "", "hypot"], [1149, 5, 1, "", "i0"], [1150, 5, 1, "", "igamma"], [1151, 5, 1, "", "igammac"], [1152, 5, 1, "", "imag"], [1153, 5, 1, "", "index_add"], [1154, 5, 1, "", "index_copy"], [1155, 5, 1, "", "index_reduce"], [1156, 5, 1, "", "index_select"], [1157, 1, 1, "", "inference_mode"], [1158, 5, 1, "", "initial_seed"], [1159, 5, 1, "", "inner"], [1160, 5, 1, "", "inverse"], [1161, 5, 1, "", "is_complex"], [1162, 5, 1, "", "is_conj"], [1163, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1164, 5, 1, "", "is_floating_point"], [1165, 5, 1, "", "is_grad_enabled"], [1166, 5, 1, "", "is_inference_mode_enabled"], [1167, 5, 1, "", "is_nonzero"], [1168, 5, 1, "", "is_storage"], [1169, 5, 1, "", "is_tensor"], [1170, 5, 1, "", "is_warn_always_enabled"], [1171, 5, 1, "", "isclose"], [1172, 5, 1, "", "isfinite"], [1173, 5, 1, "", "isin"], [1174, 5, 1, "", "isinf"], [1175, 5, 1, "", "isnan"], [1176, 5, 1, "", "isneginf"], [1177, 5, 1, "", "isposinf"], [1178, 5, 1, "", "isreal"], [1179, 5, 1, "", "istft"], [1852, 0, 0, "-", "jit"], [1201, 5, 1, "", "kaiser_window"], [1202, 5, 1, "", "kron"], [1203, 5, 1, "", "kthvalue"], [1912, 1, 1, "", "layout"], [1204, 5, 1, "", "lcm"], [1205, 5, 1, "", "ldexp"], [1206, 5, 1, "", "le"], [1207, 5, 1, "", "lerp"], [1208, 5, 1, "", "less"], [1209, 5, 1, "", "less_equal"], [1210, 5, 1, "", "lgamma"], [1860, 0, 0, "-", "linalg"], [1252, 5, 1, "", "linspace"], [1253, 5, 1, "", "load"], [1254, 5, 1, "", "lobpcg"], [1255, 5, 1, "", "log"], [1256, 5, 1, "", "log10"], [1257, 5, 1, "", "log1p"], [1258, 5, 1, "", "log2"], [1259, 5, 1, "", "logaddexp"], [1260, 5, 1, "", "logaddexp2"], [1261, 5, 1, "", "logcumsumexp"], [1262, 5, 1, "", "logdet"], [1263, 5, 1, "", "logical_and"], [1264, 5, 1, "", "logical_not"], [1265, 5, 1, "", "logical_or"], [1266, 5, 1, "", "logical_xor"], [1267, 5, 1, "", "logit"], [1268, 5, 1, "", "logspace"], [1269, 5, 1, "", "logsumexp"], [1270, 5, 1, "", "lt"], [1271, 5, 1, "", "lu"], [1272, 5, 1, "", "lu_solve"], [1273, 5, 1, "", "lu_unpack"], [1274, 5, 1, "", "manual_seed"], [1862, 0, 0, "-", "masked"], [1275, 5, 1, "", "masked_select"], [1276, 5, 1, "", "matmul"], [1277, 5, 1, "", "matrix_exp"], [1278, 5, 1, "", "matrix_power"], [1279, 5, 1, "", "max"], [1280, 5, 1, "", "maximum"], [1281, 5, 1, "", "mean"], [1282, 5, 1, "", "median"], [1912, 1, 1, "", "memory_format"], [1283, 5, 1, "", "meshgrid"], [1284, 5, 1, "", "min"], [1285, 5, 1, "", "minimum"], [1286, 5, 1, "", "mm"], [1287, 5, 1, "", "mode"], [1865, 0, 0, "-", "monitor"], [1288, 5, 1, "", "moveaxis"], [1289, 5, 1, "", "movedim"], [1866, 0, 0, "-", "mps"], [1302, 5, 1, "", "msort"], [1303, 5, 1, "", "mul"], [1304, 5, 1, "", "multinomial"], [1305, 5, 1, "", "multiply"], [1867, 0, 0, "-", "multiprocessing"], [1306, 5, 1, "", "mv"], [1307, 5, 1, "", "mvlgamma"], [1308, 5, 1, "", "nan_to_num"], [1309, 5, 1, "", "nanmean"], [1310, 5, 1, "", "nanmedian"], [1311, 5, 1, "", "nanquantile"], [1312, 5, 1, "", "nansum"], [1313, 5, 1, "", "narrow"], [1314, 5, 1, "", "narrow_copy"], [1315, 5, 1, "", "ne"], [1316, 5, 1, "", "neg"], [1317, 5, 1, "", "negative"], [1870, 0, 0, "-", "nested"], [1318, 5, 1, "", "nextafter"], [1871, 0, 0, "-", "nn"], [1639, 1, 1, "", "no_grad"], [1640, 5, 1, "", "nonzero"], [1641, 5, 1, "", "norm"], [1642, 5, 1, "", "normal"], [1643, 5, 1, "", "not_equal"], [1644, 5, 1, "", "numel"], [1645, 5, 1, "", "ones"], [1646, 5, 1, "", "ones_like"], [1893, 0, 0, "-", "onnx"], [1896, 0, 0, "-", "optim"], [1686, 5, 1, "", "orgqr"], [1687, 5, 1, "", "ormqr"], [1688, 5, 1, "", "outer"], [1897, 0, 0, "-", "package"], [1689, 5, 1, "", "pca_lowrank"], [1690, 5, 1, "", "permute"], [1691, 5, 1, "", "pinverse"], [1692, 5, 1, "", "poisson"], [1693, 5, 1, "", "polar"], [1694, 5, 1, "", "polygamma"], [1695, 5, 1, "", "positive"], [1696, 5, 1, "", "pow"], [1697, 5, 1, "", "prod"], [1899, 0, 0, "-", "profiler"], [1698, 5, 1, "", "promote_types"], [1699, 5, 1, "", "qr"], [1700, 5, 1, "", "quantile"], [1903, 0, 0, "-", "quantization"], [1701, 5, 1, "", "quantize_per_channel"], [1702, 5, 1, "", "quantize_per_tensor"], [1703, 5, 1, "", "quantized_batch_norm"], [1704, 5, 1, "", "quantized_max_pool1d"], [1705, 5, 1, "", "quantized_max_pool2d"], [1707, 5, 1, "", "rad2deg"], [1708, 5, 1, "", "rand"], [1709, 5, 1, "", "rand_like"], [1710, 5, 1, "", "randint"], [1711, 5, 1, "", "randint_like"], [1712, 5, 1, "", "randn"], [1713, 5, 1, "", "randn_like"], [1904, 0, 0, "-", "random"], [1714, 5, 1, "", "randperm"], [1715, 5, 1, "", "range"], [1716, 5, 1, "", "ravel"], [1717, 5, 1, "", "real"], [1718, 5, 1, "", "reciprocal"], [1719, 5, 1, "", "remainder"], [1720, 5, 1, "", "renorm"], [1721, 5, 1, "", "repeat_interleave"], [1722, 5, 1, "", "reshape"], [1723, 5, 1, "", "resolve_conj"], [1724, 5, 1, "", "resolve_neg"], [1725, 5, 1, "", "result_type"], [1726, 5, 1, "", "roll"], [1727, 5, 1, "", "rot90"], [1728, 5, 1, "", "round"], [1729, 5, 1, "", "row_stack"], [1730, 5, 1, "", "rsqrt"], [1731, 5, 1, "", "save"], [1732, 5, 1, "", "scatter"], [1733, 5, 1, "", "scatter_add"], [1734, 5, 1, "", "scatter_reduce"], [1735, 5, 1, "", "searchsorted"], [1736, 5, 1, "", "seed"], [1737, 5, 1, "", "select"], [1738, 5, 1, "", "select_scatter"], [1739, 5, 1, "", "set_default_device"], [1740, 5, 1, "", "set_default_dtype"], [1741, 5, 1, "", "set_default_tensor_type"], [1742, 5, 1, "", "set_deterministic_debug_mode"], [1743, 5, 1, "", "set_float32_matmul_precision"], [1744, 5, 1, "", "set_flush_denormal"], [1745, 1, 1, "", "set_grad_enabled"], [1746, 5, 1, "", "set_num_interop_threads"], [1747, 5, 1, "", "set_num_threads"], [1748, 5, 1, "", "set_printoptions"], [1749, 5, 1, "", "set_rng_state"], [1750, 5, 1, "", "set_warn_always"], [1751, 5, 1, "", "sgn"], [1752, 5, 1, "", "sigmoid"], [1753, 5, 1, "", "sign"], [1908, 0, 0, "-", "signal"], [1765, 5, 1, "", "signbit"], [1766, 5, 1, "", "sin"], [1767, 5, 1, "", "sinc"], [1768, 5, 1, "", "sinh"], [1769, 5, 1, "", "slice_scatter"], [1770, 5, 1, "", "slogdet"], [1771, 5, 1, "", "smm"], [1772, 5, 1, "", "softmax"], [1773, 5, 1, "", "sort"], [1909, 0, 0, "-", "sparse"], [1782, 5, 1, "", "sparse_bsc_tensor"], [1783, 5, 1, "", "sparse_bsr_tensor"], [1784, 5, 1, "", "sparse_compressed_tensor"], [1785, 5, 1, "", "sparse_coo_tensor"], [1786, 5, 1, "", "sparse_csc_tensor"], [1787, 5, 1, "", "sparse_csr_tensor"], [1910, 0, 0, "-", "special"], [1788, 5, 1, "", "split"], [1789, 5, 1, "", "sqrt"], [1790, 5, 1, "", "square"], [1791, 5, 1, "", "squeeze"], [1792, 5, 1, "", "sspaddmm"], [1793, 5, 1, "", "stack"], [1794, 5, 1, "", "std"], [1795, 5, 1, "", "std_mean"], [1796, 5, 1, "", "stft"], [1797, 5, 1, "", "sub"], [1798, 5, 1, "", "subtract"], [1799, 5, 1, "", "sum"], [1800, 5, 1, "", "svd"], [1801, 5, 1, "", "svd_lowrank"], [1802, 5, 1, "", "swapaxes"], [1803, 5, 1, "", "swapdims"], [1804, 5, 1, "", "sym_float"], [1805, 5, 1, "", "sym_int"], [1806, 5, 1, "", "sym_max"], [1807, 5, 1, "", "sym_min"], [1808, 5, 1, "", "sym_not"], [1809, 5, 1, "", "t"], [1810, 5, 1, "", "take"], [1811, 5, 1, "", "take_along_dim"], [1812, 5, 1, "", "tan"], [1813, 5, 1, "", "tanh"], [1814, 5, 1, "", "tensor"], [1815, 5, 1, "", "tensor_split"], [1816, 5, 1, "", "tensordot"], [1916, 0, 0, "-", "testing"], [1817, 5, 1, "", "tile"], [1818, 5, 1, "", "topk"], [1819, 5, 1, "", "trace"], [1820, 5, 1, "", "transpose"], [1821, 5, 1, "", "trapezoid"], [1822, 5, 1, "", "trapz"], [1823, 5, 1, "", "triangular_solve"], [1824, 5, 1, "", "tril"], [1825, 5, 1, "", "tril_indices"], [1826, 5, 1, "", "triu"], [1827, 5, 1, "", "triu_indices"], [1828, 5, 1, "", "true_divide"], [1829, 5, 1, "", "trunc"], [1830, 5, 1, "", "unbind"], [1831, 5, 1, "", "unflatten"], [1832, 5, 1, "", "unique"], [1833, 5, 1, "", "unique_consecutive"], [1834, 5, 1, "", "unsqueeze"], [1835, 5, 1, "", "use_deterministic_algorithms"], [1917, 0, 0, "-", "utils"], [1836, 5, 1, "", "vander"], [1837, 5, 1, "", "var"], [1838, 5, 1, "", "var_mean"], [1839, 5, 1, "", "vdot"], [1840, 5, 1, "", "view_as_complex"], [1841, 5, 1, "", "view_as_real"], [1842, 5, 1, "", "vmap"], [1843, 5, 1, "", "vsplit"], [1844, 5, 1, "", "vstack"], [1845, 5, 1, "", "where"], [1846, 5, 1, "", "xlogy"], [1847, 5, 1, "", "zeros"], [1848, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1911, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1911, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1911, 2, 1, "", "dtype"]], "torch.CharStorage": [[1911, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1911, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1911, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1911, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1911, 2, 1, "", "dtype"]], "torch.Generator": [[81, 2, 1, "", "device"], [81, 3, 1, "", "get_state"], [81, 3, 1, "", "initial_seed"], [81, 3, 1, "", "manual_seed"], [81, 3, 1, "", "seed"], [81, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1911, 2, 1, "", "dtype"]], "torch.IntStorage": [[1911, 2, 1, "", "dtype"]], "torch.LongStorage": [[1911, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1911, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1911, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1911, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1911, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1911, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1911, 2, 1, "", "dtype"]], "torch.Tag": [[1917, 4, 1, "", "name"]], "torch.Tensor": [[1915, 2, 1, "", "H"], [1915, 2, 1, "", "T"], [82, 3, 1, "", "abs"], [83, 3, 1, "", "abs_"], [84, 3, 1, "", "absolute"], [85, 3, 1, "", "absolute_"], [86, 3, 1, "", "acos"], [87, 3, 1, "", "acos_"], [88, 3, 1, "", "acosh"], [89, 3, 1, "", "acosh_"], [90, 3, 1, "", "add"], [91, 3, 1, "", "add_"], [92, 3, 1, "", "addbmm"], [93, 3, 1, "", "addbmm_"], [94, 3, 1, "", "addcdiv"], [95, 3, 1, "", "addcdiv_"], [96, 3, 1, "", "addcmul"], [97, 3, 1, "", "addcmul_"], [98, 3, 1, "", "addmm"], [99, 3, 1, "", "addmm_"], [100, 3, 1, "", "addmv"], [101, 3, 1, "", "addmv_"], [102, 3, 1, "", "addr"], [103, 3, 1, "", "addr_"], [104, 3, 1, "", "adjoint"], [1869, 3, 1, "", "align_as"], [1869, 3, 1, "", "align_to"], [105, 3, 1, "", "all"], [106, 3, 1, "", "allclose"], [107, 3, 1, "", "amax"], [108, 3, 1, "", "amin"], [109, 3, 1, "", "aminmax"], [110, 3, 1, "", "angle"], [111, 3, 1, "", "any"], [112, 3, 1, "", "apply_"], [113, 3, 1, "", "arccos"], [114, 3, 1, "", "arccos_"], [115, 3, 1, "", "arccosh"], [116, 3, 1, "", "arccosh_"], [117, 3, 1, "", "arcsin"], [118, 3, 1, "", "arcsin_"], [119, 3, 1, "", "arcsinh"], [120, 3, 1, "", "arcsinh_"], [121, 3, 1, "", "arctan"], [122, 3, 1, "", "arctan2"], [123, 3, 1, "", "arctan2_"], [124, 3, 1, "", "arctan_"], [125, 3, 1, "", "arctanh"], [126, 3, 1, "", "arctanh_"], [127, 3, 1, "", "argmax"], [128, 3, 1, "", "argmin"], [129, 3, 1, "", "argsort"], [130, 3, 1, "", "argwhere"], [131, 3, 1, "", "as_strided"], [132, 3, 1, "", "as_subclass"], [133, 3, 1, "", "asin"], [134, 3, 1, "", "asin_"], [135, 3, 1, "", "asinh"], [136, 3, 1, "", "asinh_"], [137, 3, 1, "", "atan"], [138, 3, 1, "", "atan2"], [139, 3, 1, "", "atan2_"], [140, 3, 1, "", "atan_"], [141, 3, 1, "", "atanh"], [142, 3, 1, "", "atanh_"], [143, 3, 1, "", "backward"], [144, 3, 1, "", "baddbmm"], [145, 3, 1, "", "baddbmm_"], [146, 3, 1, "", "bernoulli"], [147, 3, 1, "", "bernoulli_"], [148, 3, 1, "", "bfloat16"], [149, 3, 1, "", "bincount"], [150, 3, 1, "", "bitwise_and"], [151, 3, 1, "", "bitwise_and_"], [152, 3, 1, "", "bitwise_left_shift"], [153, 3, 1, "", "bitwise_left_shift_"], [154, 3, 1, "", "bitwise_not"], [155, 3, 1, "", "bitwise_not_"], [156, 3, 1, "", "bitwise_or"], [157, 3, 1, "", "bitwise_or_"], [158, 3, 1, "", "bitwise_right_shift"], [159, 3, 1, "", "bitwise_right_shift_"], [160, 3, 1, "", "bitwise_xor"], [161, 3, 1, "", "bitwise_xor_"], [162, 3, 1, "", "bmm"], [163, 3, 1, "", "bool"], [164, 3, 1, "", "broadcast_to"], [165, 3, 1, "", "byte"], [166, 3, 1, "", "cauchy_"], [167, 3, 1, "", "ccol_indices"], [168, 3, 1, "", "cdouble"], [169, 3, 1, "", "ceil"], [170, 3, 1, "", "ceil_"], [171, 3, 1, "", "cfloat"], [172, 3, 1, "", "chalf"], [173, 3, 1, "", "char"], [174, 3, 1, "", "cholesky"], [175, 3, 1, "", "cholesky_inverse"], [176, 3, 1, "", "cholesky_solve"], [177, 3, 1, "", "chunk"], [178, 3, 1, "", "clamp"], [179, 3, 1, "", "clamp_"], [180, 3, 1, "", "clip"], [181, 3, 1, "", "clip_"], [182, 3, 1, "", "clone"], [183, 3, 1, "", "coalesce"], [184, 3, 1, "", "col_indices"], [185, 3, 1, "", "conj"], [186, 3, 1, "", "conj_physical"], [187, 3, 1, "", "conj_physical_"], [188, 3, 1, "", "contiguous"], [189, 3, 1, "", "copy_"], [190, 3, 1, "", "copysign"], [191, 3, 1, "", "copysign_"], [192, 3, 1, "", "corrcoef"], [193, 3, 1, "", "cos"], [194, 3, 1, "", "cos_"], [195, 3, 1, "", "cosh"], [196, 3, 1, "", "cosh_"], [197, 3, 1, "", "count_nonzero"], [198, 3, 1, "", "cov"], [199, 3, 1, "", "cpu"], [200, 3, 1, "", "cross"], [201, 3, 1, "", "crow_indices"], [202, 3, 1, "", "cuda"], [203, 3, 1, "", "cummax"], [204, 3, 1, "", "cummin"], [205, 3, 1, "", "cumprod"], [206, 3, 1, "", "cumprod_"], [207, 3, 1, "", "cumsum"], [208, 3, 1, "", "cumsum_"], [209, 3, 1, "", "data_ptr"], [210, 3, 1, "", "deg2rad"], [211, 3, 1, "", "dense_dim"], [212, 3, 1, "", "dequantize"], [213, 3, 1, "", "det"], [214, 3, 1, "", "detach"], [215, 3, 1, "", "detach_"], [216, 2, 1, "", "device"], [217, 3, 1, "", "diag"], [218, 3, 1, "", "diag_embed"], [219, 3, 1, "", "diagflat"], [220, 3, 1, "", "diagonal"], [221, 3, 1, "", "diagonal_scatter"], [222, 3, 1, "", "diff"], [223, 3, 1, "", "digamma"], [224, 3, 1, "", "digamma_"], [225, 3, 1, "", "dim"], [226, 3, 1, "", "dist"], [227, 3, 1, "", "div"], [228, 3, 1, "", "div_"], [229, 3, 1, "", "divide"], [230, 3, 1, "", "divide_"], [231, 3, 1, "", "dot"], [232, 3, 1, "", "double"], [233, 3, 1, "", "dsplit"], [234, 3, 1, "", "element_size"], [235, 3, 1, "", "eq"], [236, 3, 1, "", "eq_"], [237, 3, 1, "", "equal"], [238, 3, 1, "", "erf"], [239, 3, 1, "", "erf_"], [240, 3, 1, "", "erfc"], [241, 3, 1, "", "erfc_"], [242, 3, 1, "", "erfinv"], [243, 3, 1, "", "erfinv_"], [244, 3, 1, "", "exp"], [245, 3, 1, "", "exp_"], [246, 3, 1, "", "expand"], [247, 3, 1, "", "expand_as"], [248, 3, 1, "", "expm1"], [249, 3, 1, "", "expm1_"], [250, 3, 1, "", "exponential_"], [251, 3, 1, "", "fill_"], [252, 3, 1, "", "fill_diagonal_"], [253, 3, 1, "", "fix"], [254, 3, 1, "", "fix_"], [255, 3, 1, "", "flatten"], [256, 3, 1, "", "flip"], [257, 3, 1, "", "fliplr"], [258, 3, 1, "", "flipud"], [259, 3, 1, "", "float"], [260, 3, 1, "", "float_power"], [261, 3, 1, "", "float_power_"], [262, 3, 1, "", "floor"], [263, 3, 1, "", "floor_"], [264, 3, 1, "", "floor_divide"], [265, 3, 1, "", "floor_divide_"], [266, 3, 1, "", "fmax"], [267, 3, 1, "", "fmin"], [268, 3, 1, "", "fmod"], [269, 3, 1, "", "fmod_"], [270, 3, 1, "", "frac"], [271, 3, 1, "", "frac_"], [272, 3, 1, "", "frexp"], [273, 3, 1, "", "gather"], [274, 3, 1, "", "gcd"], [275, 3, 1, "", "gcd_"], [276, 3, 1, "", "ge"], [277, 3, 1, "", "ge_"], [278, 3, 1, "", "geometric_"], [279, 3, 1, "", "geqrf"], [280, 3, 1, "", "ger"], [281, 3, 1, "", "get_device"], [282, 2, 1, "", "grad"], [283, 3, 1, "", "greater"], [284, 3, 1, "", "greater_"], [285, 3, 1, "", "greater_equal"], [286, 3, 1, "", "greater_equal_"], [287, 3, 1, "", "gt"], [288, 3, 1, "", "gt_"], [289, 3, 1, "", "half"], [290, 3, 1, "", "hardshrink"], [291, 3, 1, "", "heaviside"], [292, 3, 1, "", "histc"], [293, 3, 1, "", "histogram"], [294, 3, 1, "", "hsplit"], [295, 3, 1, "", "hypot"], [296, 3, 1, "", "hypot_"], [297, 3, 1, "", "i0"], [298, 3, 1, "", "i0_"], [299, 3, 1, "", "igamma"], [300, 3, 1, "", "igamma_"], [301, 3, 1, "", "igammac"], [302, 3, 1, "", "igammac_"], [303, 2, 1, "", "imag"], [304, 3, 1, "", "index_add"], [305, 3, 1, "", "index_add_"], [306, 3, 1, "", "index_copy"], [307, 3, 1, "", "index_copy_"], [308, 3, 1, "", "index_fill"], [309, 3, 1, "", "index_fill_"], [310, 3, 1, "", "index_put"], [311, 3, 1, "", "index_put_"], [312, 3, 1, "", "index_reduce"], [313, 3, 1, "", "index_reduce_"], [314, 3, 1, "", "index_select"], [315, 3, 1, "", "indices"], [316, 3, 1, "", "inner"], [317, 3, 1, "", "int"], [318, 3, 1, "", "int_repr"], [319, 3, 1, "", "inverse"], [320, 3, 1, "", "is_coalesced"], [321, 3, 1, "", "is_complex"], [322, 3, 1, "", "is_conj"], [323, 3, 1, "", "is_contiguous"], [324, 2, 1, "", "is_cuda"], [325, 3, 1, "", "is_floating_point"], [326, 3, 1, "", "is_inference"], [327, 2, 1, "", "is_leaf"], [328, 2, 1, "", "is_meta"], [329, 3, 1, "", "is_pinned"], [330, 2, 1, "", "is_quantized"], [331, 3, 1, "", "is_set_to"], [332, 3, 1, "", "is_shared"], [333, 3, 1, "", "is_signed"], [334, 2, 1, "", "is_sparse"], [335, 2, 1, "", "is_sparse_csr"], [336, 3, 1, "", "isclose"], [337, 3, 1, "", "isfinite"], [338, 3, 1, "", "isinf"], [339, 3, 1, "", "isnan"], [340, 3, 1, "", "isneginf"], [341, 3, 1, "", "isposinf"], [342, 3, 1, "", "isreal"], [343, 3, 1, "", "istft"], [344, 3, 1, "", "item"], [345, 2, 1, "", "itemsize"], [346, 3, 1, "", "kthvalue"], [347, 3, 1, "", "lcm"], [348, 3, 1, "", "lcm_"], [349, 3, 1, "", "ldexp"], [350, 3, 1, "", "ldexp_"], [351, 3, 1, "", "le"], [352, 3, 1, "", "le_"], [353, 3, 1, "", "lerp"], [354, 3, 1, "", "lerp_"], [355, 3, 1, "", "less"], [356, 3, 1, "", "less_"], [357, 3, 1, "", "less_equal"], [358, 3, 1, "", "less_equal_"], [359, 3, 1, "", "lgamma"], [360, 3, 1, "", "lgamma_"], [361, 3, 1, "", "log"], [362, 3, 1, "", "log10"], [363, 3, 1, "", "log10_"], [364, 3, 1, "", "log1p"], [365, 3, 1, "", "log1p_"], [366, 3, 1, "", "log2"], [367, 3, 1, "", "log2_"], [368, 3, 1, "", "log_"], [369, 3, 1, "", "log_normal_"], [370, 3, 1, "", "logaddexp"], [371, 3, 1, "", "logaddexp2"], [372, 3, 1, "", "logcumsumexp"], [373, 3, 1, "", "logdet"], [374, 3, 1, "", "logical_and"], [375, 3, 1, "", "logical_and_"], [376, 3, 1, "", "logical_not"], [377, 3, 1, "", "logical_not_"], [378, 3, 1, "", "logical_or"], [379, 3, 1, "", "logical_or_"], [380, 3, 1, "", "logical_xor"], [381, 3, 1, "", "logical_xor_"], [382, 3, 1, "", "logit"], [383, 3, 1, "", "logit_"], [384, 3, 1, "", "logsumexp"], [385, 3, 1, "", "long"], [386, 3, 1, "", "lt"], [387, 3, 1, "", "lt_"], [388, 3, 1, "", "lu"], [389, 3, 1, "", "lu_solve"], [1915, 2, 1, "", "mH"], [1915, 2, 1, "", "mT"], [390, 3, 1, "", "map_"], [391, 3, 1, "", "masked_fill"], [392, 3, 1, "", "masked_fill_"], [393, 3, 1, "", "masked_scatter"], [394, 3, 1, "", "masked_scatter_"], [395, 3, 1, "", "masked_select"], [396, 3, 1, "", "matmul"], [397, 3, 1, "", "matrix_exp"], [398, 3, 1, "", "matrix_power"], [399, 3, 1, "", "max"], [400, 3, 1, "", "maximum"], [401, 3, 1, "", "mean"], [402, 3, 1, "", "median"], [403, 3, 1, "", "min"], [404, 3, 1, "", "minimum"], [405, 3, 1, "", "mm"], [406, 3, 1, "", "mode"], [407, 3, 1, "", "moveaxis"], [408, 3, 1, "", "movedim"], [409, 3, 1, "", "msort"], [410, 3, 1, "", "mul"], [411, 3, 1, "", "mul_"], [412, 3, 1, "", "multinomial"], [413, 3, 1, "", "multiply"], [414, 3, 1, "", "multiply_"], [415, 3, 1, "", "mv"], [416, 3, 1, "", "mvlgamma"], [417, 3, 1, "", "mvlgamma_"], [1869, 2, 1, "", "names"], [418, 3, 1, "", "nan_to_num"], [419, 3, 1, "", "nan_to_num_"], [420, 3, 1, "", "nanmean"], [421, 3, 1, "", "nanmedian"], [422, 3, 1, "", "nanquantile"], [423, 3, 1, "", "nansum"], [424, 3, 1, "", "narrow"], [425, 3, 1, "", "narrow_copy"], [426, 2, 1, "", "nbytes"], [427, 2, 1, "", "ndim"], [428, 3, 1, "", "ndimension"], [429, 3, 1, "", "ne"], [430, 3, 1, "", "ne_"], [431, 3, 1, "", "neg"], [432, 3, 1, "", "neg_"], [433, 3, 1, "", "negative"], [434, 3, 1, "", "negative_"], [435, 3, 1, "", "nelement"], [436, 3, 1, "", "new_empty"], [437, 3, 1, "", "new_full"], [438, 3, 1, "", "new_ones"], [439, 3, 1, "", "new_tensor"], [440, 3, 1, "", "new_zeros"], [441, 3, 1, "", "nextafter"], [442, 3, 1, "", "nextafter_"], [443, 3, 1, "", "nonzero"], [444, 3, 1, "", "norm"], [445, 3, 1, "", "normal_"], [446, 3, 1, "", "not_equal"], [447, 3, 1, "", "not_equal_"], [448, 3, 1, "", "numel"], [449, 3, 1, "", "numpy"], [450, 3, 1, "", "orgqr"], [451, 3, 1, "", "ormqr"], [452, 3, 1, "", "outer"], [453, 3, 1, "", "permute"], [454, 3, 1, "", "pin_memory"], [455, 3, 1, "", "pinverse"], [456, 3, 1, "", "polygamma"], [457, 3, 1, "", "polygamma_"], [458, 3, 1, "", "positive"], [459, 3, 1, "", "pow"], [460, 3, 1, "", "pow_"], [461, 3, 1, "", "prod"], [462, 3, 1, "", "put_"], [463, 3, 1, "", "q_per_channel_axis"], [464, 3, 1, "", "q_per_channel_scales"], [465, 3, 1, "", "q_per_channel_zero_points"], [466, 3, 1, "", "q_scale"], [467, 3, 1, "", "q_zero_point"], [468, 3, 1, "", "qr"], [469, 3, 1, "", "qscheme"], [470, 3, 1, "", "quantile"], [471, 3, 1, "", "rad2deg"], [472, 3, 1, "", "random_"], [473, 3, 1, "", "ravel"], [474, 2, 1, "", "real"], [475, 3, 1, "", "reciprocal"], [476, 3, 1, "", "reciprocal_"], [477, 3, 1, "", "record_stream"], [1869, 3, 1, "", "refine_names"], [478, 3, 1, "", "register_hook"], [479, 3, 1, "", "remainder"], [480, 3, 1, "", "remainder_"], [1869, 3, 1, "", "rename"], [1869, 3, 1, "", "rename_"], [481, 3, 1, "", "renorm"], [482, 3, 1, "", "renorm_"], [483, 3, 1, "", "repeat"], [484, 3, 1, "", "repeat_interleave"], [485, 2, 1, "", "requires_grad"], [486, 3, 1, "", "requires_grad_"], [487, 3, 1, "", "reshape"], [488, 3, 1, "", "reshape_as"], [489, 3, 1, "", "resize_"], [490, 3, 1, "", "resize_as_"], [491, 3, 1, "", "resolve_conj"], [492, 3, 1, "", "resolve_neg"], [493, 3, 1, "", "retain_grad"], [494, 2, 1, "", "retains_grad"], [495, 3, 1, "", "roll"], [496, 3, 1, "", "rot90"], [497, 3, 1, "", "round"], [498, 3, 1, "", "round_"], [499, 3, 1, "", "row_indices"], [500, 3, 1, "", "rsqrt"], [501, 3, 1, "", "rsqrt_"], [502, 3, 1, "", "scatter"], [503, 3, 1, "", "scatter_"], [504, 3, 1, "", "scatter_add"], [505, 3, 1, "", "scatter_add_"], [506, 3, 1, "", "scatter_reduce"], [507, 3, 1, "", "scatter_reduce_"], [508, 3, 1, "", "select"], [509, 3, 1, "", "select_scatter"], [510, 3, 1, "", "set_"], [511, 3, 1, "", "sgn"], [512, 3, 1, "", "sgn_"], [513, 3, 1, "", "share_memory_"], [514, 3, 1, "", "short"], [515, 3, 1, "", "sigmoid"], [516, 3, 1, "", "sigmoid_"], [517, 3, 1, "", "sign"], [518, 3, 1, "", "sign_"], [519, 3, 1, "", "signbit"], [520, 3, 1, "", "sin"], [521, 3, 1, "", "sin_"], [522, 3, 1, "", "sinc"], [523, 3, 1, "", "sinc_"], [524, 3, 1, "", "sinh"], [525, 3, 1, "", "sinh_"], [526, 3, 1, "", "size"], [527, 3, 1, "", "slice_scatter"], [528, 3, 1, "", "slogdet"], [529, 3, 1, "", "smm"], [530, 3, 1, "", "softmax"], [531, 3, 1, "", "sort"], [532, 3, 1, "", "sparse_dim"], [533, 3, 1, "", "sparse_mask"], [534, 3, 1, "", "sparse_resize_"], [535, 3, 1, "", "sparse_resize_and_clear_"], [536, 3, 1, "", "split"], [537, 3, 1, "", "sqrt"], [538, 3, 1, "", "sqrt_"], [539, 3, 1, "", "square"], [540, 3, 1, "", "square_"], [541, 3, 1, "", "squeeze"], [542, 3, 1, "", "squeeze_"], [543, 3, 1, "", "sspaddmm"], [544, 3, 1, "", "std"], [545, 3, 1, "", "stft"], [546, 3, 1, "", "storage"], [547, 3, 1, "", "storage_offset"], [548, 3, 1, "", "storage_type"], [549, 3, 1, "", "stride"], [550, 3, 1, "", "sub"], [551, 3, 1, "", "sub_"], [552, 3, 1, "", "subtract"], [553, 3, 1, "", "subtract_"], [554, 3, 1, "", "sum"], [555, 3, 1, "", "sum_to_size"], [556, 3, 1, "", "svd"], [557, 3, 1, "", "swapaxes"], [558, 3, 1, "", "swapdims"], [559, 3, 1, "", "t"], [560, 3, 1, "", "t_"], [561, 3, 1, "", "take"], [562, 3, 1, "", "take_along_dim"], [563, 3, 1, "", "tan"], [564, 3, 1, "", "tan_"], [565, 3, 1, "", "tanh"], [566, 3, 1, "", "tanh_"], [567, 3, 1, "", "tensor_split"], [568, 3, 1, "", "tile"], [569, 3, 1, "", "to"], [570, 3, 1, "", "to_dense"], [571, 3, 1, "", "to_mkldnn"], [572, 3, 1, "", "to_sparse"], [573, 3, 1, "", "to_sparse_bsc"], [574, 3, 1, "", "to_sparse_bsr"], [575, 3, 1, "", "to_sparse_coo"], [576, 3, 1, "", "to_sparse_csc"], [577, 3, 1, "", "to_sparse_csr"], [578, 3, 1, "", "tolist"], [579, 3, 1, "", "topk"], [580, 3, 1, "", "trace"], [581, 3, 1, "", "transpose"], [582, 3, 1, "", "transpose_"], [583, 3, 1, "", "triangular_solve"], [584, 3, 1, "", "tril"], [585, 3, 1, "", "tril_"], [586, 3, 1, "", "triu"], [587, 3, 1, "", "triu_"], [588, 3, 1, "", "true_divide"], [589, 3, 1, "", "true_divide_"], [590, 3, 1, "", "trunc"], [591, 3, 1, "", "trunc_"], [592, 3, 1, "", "type"], [593, 3, 1, "", "type_as"], [594, 3, 1, "", "unbind"], [595, 3, 1, "", "unflatten"], [596, 3, 1, "", "unfold"], [597, 3, 1, "", "uniform_"], [598, 3, 1, "", "unique"], [599, 3, 1, "", "unique_consecutive"], [600, 3, 1, "", "unsqueeze"], [601, 3, 1, "", "unsqueeze_"], [602, 3, 1, "", "untyped_storage"], [603, 3, 1, "", "values"], [604, 3, 1, "", "var"], [605, 3, 1, "", "vdot"], [606, 3, 1, "", "view"], [607, 3, 1, "", "view_as"], [608, 3, 1, "", "vsplit"], [609, 3, 1, "", "where"], [610, 3, 1, "", "xlogy"], [611, 3, 1, "", "xlogy_"], [612, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1911, 3, 1, "", "bfloat16"], [1911, 3, 1, "", "bool"], [1911, 3, 1, "", "byte"], [1911, 3, 1, "", "char"], [1911, 3, 1, "", "clone"], [1911, 3, 1, "", "complex_double"], [1911, 3, 1, "", "complex_float"], [1911, 3, 1, "", "copy_"], [1911, 3, 1, "", "cpu"], [1911, 3, 1, "", "cuda"], [1911, 3, 1, "", "data_ptr"], [1911, 4, 1, "", "device"], [1911, 3, 1, "", "double"], [1911, 2, 1, "", "dtype"], [1911, 3, 1, "", "element_size"], [1911, 3, 1, "", "fill_"], [1911, 3, 1, "", "float"], [1911, 3, 1, "", "from_buffer"], [1911, 3, 1, "", "from_file"], [1911, 3, 1, "", "get_device"], [1911, 3, 1, "", "half"], [1911, 3, 1, "", "int"], [1911, 4, 1, "", "is_cuda"], [1911, 3, 1, "", "is_pinned"], [1911, 3, 1, "", "is_shared"], [1911, 2, 1, "", "is_sparse"], [1911, 3, 1, "", "long"], [1911, 3, 1, "", "nbytes"], [1911, 3, 1, "", "pickle_storage_type"], [1911, 3, 1, "", "pin_memory"], [1911, 3, 1, "", "resize_"], [1911, 3, 1, "", "share_memory_"], [1911, 3, 1, "", "short"], [1911, 3, 1, "", "size"], [1911, 3, 1, "", "tolist"], [1911, 3, 1, "", "type"], [1911, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1911, 3, 1, "", "bfloat16"], [1911, 3, 1, "", "bool"], [1911, 3, 1, "", "byte"], [1911, 3, 1, "", "byteswap"], [1911, 3, 1, "", "char"], [1911, 3, 1, "", "clone"], [1911, 3, 1, "", "complex_double"], [1911, 3, 1, "", "complex_float"], [1911, 3, 1, "", "copy_"], [1911, 3, 1, "", "cpu"], [1911, 3, 1, "", "cuda"], [1911, 3, 1, "", "data_ptr"], [1911, 2, 1, "", "device"], [1911, 3, 1, "", "double"], [1911, 3, 1, "", "element_size"], [1911, 3, 1, "", "fill_"], [1911, 3, 1, "", "float"], [1911, 3, 1, "", "from_buffer"], [1911, 3, 1, "", "from_file"], [1911, 3, 1, "", "get_device"], [1911, 3, 1, "", "half"], [1911, 3, 1, "", "int"], [1911, 4, 1, "", "is_cuda"], [1911, 3, 1, "", "is_pinned"], [1911, 3, 1, "", "is_shared"], [1911, 2, 1, "", "is_sparse"], [1911, 2, 1, "", "is_sparse_csr"], [1911, 3, 1, "", "long"], [1911, 3, 1, "", "mps"], [1911, 3, 1, "", "nbytes"], [1911, 3, 1, "", "new"], [1911, 3, 1, "", "pin_memory"], [1911, 3, 1, "", "resize_"], [1911, 3, 1, "", "share_memory_"], [1911, 3, 1, "", "short"], [1911, 3, 1, "", "size"], [1911, 3, 1, "", "tolist"], [1911, 3, 1, "", "type"], [1911, 3, 1, "", "untyped"]], "torch.__config__": [[25, 5, 1, "", "parallel_info"], [25, 5, 1, "", "show"]], "torch._dynamo": [[0, 1, 1, "", "OptimizedModule"], [0, 5, 1, "", "allow_in_graph"], [0, 5, 1, "", "disable"], [0, 5, 1, "", "disallow_in_graph"], [0, 5, 1, "", "export"], [0, 5, 1, "", "forbid_in_graph"], [0, 5, 1, "", "graph_break"], [0, 5, 1, "", "list_backends"], [0, 5, 1, "", "mark_dynamic"], [0, 5, 1, "", "mark_static"], [0, 5, 1, "", "optimize"], [0, 5, 1, "", "optimize_assert"], [0, 5, 1, "", "register_backend"], [0, 5, 1, "", "reset"], [0, 5, 1, "", "run"]], "torch._logging": [[669, 5, 1, "", "set_logs"]], "torch.ao": [[1900, 0, 0, "-", "nn"], [1900, 0, 0, "-", "ns"], [1900, 0, 0, "-", "pruning"], [1900, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1903, 0, 0, "-", "intrinsic"], [1903, 0, 0, "-", "qat"], [1900, 0, 0, "-", "quantizable"], [1900, 0, 0, "-", "quantized"], [1900, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[689, 1, 1, "", "BNReLU2d"], [690, 1, 1, "", "BNReLU3d"], [691, 1, 1, "", "ConvBn1d"], [692, 1, 1, "", "ConvBn2d"], [693, 1, 1, "", "ConvBn3d"], [694, 1, 1, "", "ConvBnReLU1d"], [695, 1, 1, "", "ConvBnReLU2d"], [696, 1, 1, "", "ConvBnReLU3d"], [697, 1, 1, "", "ConvReLU1d"], [698, 1, 1, "", "ConvReLU2d"], [699, 1, 1, "", "ConvReLU3d"], [700, 1, 1, "", "LinearReLU"], [1903, 0, 0, "-", "modules"], [1903, 0, 0, "-", "qat"], [1903, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[701, 1, 1, "", "ConvBn1d"], [702, 1, 1, "", "ConvBn2d"], [703, 1, 1, "", "ConvBn3d"], [704, 1, 1, "", "ConvBnReLU1d"], [705, 1, 1, "", "ConvBnReLU2d"], [706, 1, 1, "", "ConvBnReLU3d"], [707, 1, 1, "", "ConvReLU2d"], [708, 1, 1, "", "ConvReLU3d"], [709, 1, 1, "", "LinearReLU"], [710, 1, 1, "", "freeze_bn_stats"], [1903, 0, 0, "-", "modules"], [711, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[712, 1, 1, "", "BNReLU2d"], [713, 1, 1, "", "BNReLU3d"], [714, 1, 1, "", "ConvReLU1d"], [715, 1, 1, "", "ConvReLU2d"], [716, 1, 1, "", "ConvReLU3d"], [717, 1, 1, "", "LinearReLU"], [1903, 0, 0, "-", "dynamic"], [1903, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[718, 1, 1, "", "LinearReLU"], [1903, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[719, 1, 1, "", "Conv2d"], [720, 1, 1, "", "Conv3d"], [721, 1, 1, "", "Linear"], [1903, 0, 0, "-", "dynamic"], [1903, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[721, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[722, 1, 1, "", "Linear"], [1903, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[723, 1, 1, "", "LSTM"], [724, 1, 1, "", "MultiheadAttention"], [1900, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[724, 3, 1, "", "dequantize"], [724, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[725, 1, 1, "", "BatchNorm2d"], [726, 1, 1, "", "BatchNorm3d"], [727, 1, 1, "", "Conv1d"], [728, 1, 1, "", "Conv2d"], [729, 1, 1, "", "Conv3d"], [730, 1, 1, "", "ConvTranspose1d"], [731, 1, 1, "", "ConvTranspose2d"], [732, 1, 1, "", "ConvTranspose3d"], [733, 1, 1, "", "ELU"], [734, 1, 1, "", "Embedding"], [735, 1, 1, "", "EmbeddingBag"], [736, 1, 1, "", "FXFloatFunctional"], [737, 1, 1, "", "FloatFunctional"], [738, 1, 1, "", "GroupNorm"], [739, 1, 1, "", "Hardswish"], [740, 1, 1, "", "InstanceNorm1d"], [741, 1, 1, "", "InstanceNorm2d"], [742, 1, 1, "", "InstanceNorm3d"], [743, 1, 1, "", "LayerNorm"], [744, 1, 1, "", "LeakyReLU"], [745, 1, 1, "", "Linear"], [746, 1, 1, "", "QFunctional"], [747, 1, 1, "", "ReLU6"], [748, 1, 1, "", "Sigmoid"], [1903, 0, 0, "-", "dynamic"], [1903, 0, 0, "-", "functional"], [1903, 0, 0, "-", "modules"], [1900, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[727, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[728, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[729, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[734, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[735, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[745, 3, 1, "", "from_float"], [745, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[749, 1, 1, "", "GRU"], [750, 1, 1, "", "GRUCell"], [751, 1, 1, "", "LSTM"], [752, 1, 1, "", "LSTMCell"], [753, 1, 1, "", "Linear"], [754, 1, 1, "", "RNNCell"], [1903, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[753, 3, 1, "", "from_float"], [753, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[755, 1, 1, "", "adaptive_avg_pool2d"], [756, 1, 1, "", "adaptive_avg_pool3d"], [757, 1, 1, "", "avg_pool2d"], [758, 1, 1, "", "avg_pool3d"], [759, 1, 1, "", "celu"], [760, 1, 1, "", "clamp"], [761, 1, 1, "", "conv1d"], [762, 1, 1, "", "conv2d"], [763, 1, 1, "", "conv3d"], [764, 1, 1, "", "elu"], [765, 1, 1, "", "hardsigmoid"], [766, 1, 1, "", "hardswish"], [767, 1, 1, "", "hardtanh"], [768, 1, 1, "", "interpolate"], [769, 1, 1, "", "leaky_relu"], [770, 1, 1, "", "linear"], [771, 1, 1, "", "max_pool1d"], [772, 1, 1, "", "max_pool2d"], [773, 1, 1, "", "threshold"], [774, 1, 1, "", "upsample"], [775, 1, 1, "", "upsample_bilinear"], [776, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1900, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1900, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1900, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1918, 0, 0, "-", "_numeric_suite"], [1919, 0, 0, "-", "_numeric_suite_fx"], [1900, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1918, 1, 1, "", "Logger"], [1918, 1, 1, "", "OutputLogger"], [1918, 1, 1, "", "Shadow"], [1918, 1, 1, "", "ShadowLogger"], [1918, 5, 1, "", "compare_model_outputs"], [1918, 5, 1, "", "compare_model_stub"], [1918, 5, 1, "", "compare_weights"], [1918, 5, 1, "", "get_logger_dict"], [1918, 5, 1, "", "get_matching_activations"], [1918, 5, 1, "", "prepare_model_outputs"], [1918, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1918, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1918, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1918, 3, 1, "", "add"], [1918, 3, 1, "", "add_relu"], [1918, 3, 1, "", "add_scalar"], [1918, 3, 1, "", "cat"], [1918, 3, 1, "", "forward"], [1918, 3, 1, "", "mul"], [1918, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1918, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1919, 1, 1, "", "NSTracer"], [1919, 1, 1, "", "OutputComparisonLogger"], [1919, 1, 1, "", "OutputLogger"], [1919, 5, 1, "", "add_loggers"], [1919, 5, 1, "", "add_shadow_loggers"], [1919, 5, 1, "", "convert_n_shadows_model"], [1919, 5, 1, "", "extend_logger_results_with_comparison"], [1919, 5, 1, "", "extract_logger_info"], [1919, 5, 1, "", "extract_results_n_shadows_model"], [1919, 5, 1, "", "extract_shadow_logger_info"], [1919, 5, 1, "", "extract_weights"], [1919, 5, 1, "", "loggers_set_enabled"], [1919, 5, 1, "", "loggers_set_save_activations"], [1919, 5, 1, "", "prepare_n_shadows_model"], [1919, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1919, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1919, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1919, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1919, 5, 1, "", "compute_cosine_similarity"], [1919, 5, 1, "", "compute_normalized_l2_error"], [1919, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1900, 0, 0, "-", "scheduler"], [1900, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[777, 1, 1, "", "DeQuantStub"], [778, 1, 1, "", "QuantStub"], [779, 1, 1, "", "QuantWrapper"], [780, 1, 1, "", "add_quant_dequant"], [1900, 0, 0, "-", "backend_config"], [786, 1, 1, "", "convert"], [787, 1, 1, "", "default_eval_fn"], [803, 1, 1, "", "fuse_modules"], [1900, 0, 0, "-", "fx"], [827, 1, 1, "", "prepare"], [828, 1, 1, "", "prepare_qat"], [829, 1, 1, "", "propagate_qconfig_"], [846, 1, 1, "", "quantize"], [847, 1, 1, "", "quantize_dynamic"], [852, 1, 1, "", "quantize_qat"], [853, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[781, 1, 1, "", "BackendConfig"], [782, 1, 1, "", "BackendPatternConfig"], [783, 1, 1, "", "DTypeConfig"], [784, 1, 1, "", "DTypeWithConstraints"], [785, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[781, 4, 1, "", "configs"], [781, 3, 1, "", "from_dict"], [781, 3, 1, "", "set_backend_pattern_config"], [781, 3, 1, "", "set_backend_pattern_configs"], [781, 3, 1, "", "set_name"], [781, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[782, 3, 1, "", "add_dtype_config"], [782, 3, 1, "", "from_dict"], [782, 3, 1, "", "set_dtype_configs"], [782, 3, 1, "", "set_fused_module"], [782, 3, 1, "", "set_fuser_method"], [782, 3, 1, "", "set_observation_type"], [782, 3, 1, "", "set_pattern"], [782, 3, 1, "", "set_qat_module"], [782, 3, 1, "", "set_reference_quantized_module"], [782, 3, 1, "", "set_root_module"], [782, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[783, 3, 1, "", "from_dict"], [783, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[785, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [785, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [785, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[788, 1, 1, "", "FakeQuantize"], [789, 1, 1, "", "FakeQuantizeBase"], [790, 1, 1, "", "FixedQParamsFakeQuantize"], [791, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [792, 2, 1, "", "default_fake_quant"], [793, 2, 1, "", "default_fused_act_fake_quant"], [794, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [795, 2, 1, "", "default_fused_wt_fake_quant"], [796, 2, 1, "", "default_histogram_fake_quant"], [797, 2, 1, "", "default_per_channel_weight_fake_quant"], [798, 2, 1, "", "default_weight_fake_quant"], [799, 1, 1, "", "disable_fake_quant"], [800, 1, 1, "", "disable_observer"], [801, 1, 1, "", "enable_fake_quant"], [802, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[804, 1, 1, "", "ConvertCustomConfig"], [805, 1, 1, "", "FuseCustomConfig"], [806, 1, 1, "", "PrepareCustomConfig"], [807, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[804, 3, 1, "", "from_dict"], [804, 3, 1, "", "set_observed_to_quantized_mapping"], [804, 3, 1, "", "set_preserved_attributes"], [804, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[805, 3, 1, "", "from_dict"], [805, 3, 1, "", "set_preserved_attributes"], [805, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[806, 3, 1, "", "from_dict"], [806, 3, 1, "", "set_float_to_observed_mapping"], [806, 3, 1, "", "set_input_quantized_indexes"], [806, 3, 1, "", "set_non_traceable_module_classes"], [806, 3, 1, "", "set_non_traceable_module_names"], [806, 3, 1, "", "set_output_quantized_indexes"], [806, 3, 1, "", "set_preserved_attributes"], [806, 3, 1, "", "set_standalone_module_class"], [806, 3, 1, "", "set_standalone_module_name"], [806, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[808, 1, 1, "", "HistogramObserver"], [809, 1, 1, "", "MinMaxObserver"], [810, 1, 1, "", "MovingAverageMinMaxObserver"], [811, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [812, 1, 1, "", "NoopObserver"], [813, 1, 1, "", "ObserverBase"], [814, 1, 1, "", "PerChannelMinMaxObserver"], [815, 1, 1, "", "PlaceholderObserver"], [816, 1, 1, "", "RecordingObserver"], [817, 2, 1, "", "default_debug_observer"], [818, 2, 1, "", "default_dynamic_quant_observer"], [819, 2, 1, "", "default_float_qparams_observer"], [820, 2, 1, "", "default_histogram_observer"], [821, 2, 1, "", "default_observer"], [822, 2, 1, "", "default_per_channel_weight_observer"], [823, 2, 1, "", "default_placeholder_observer"], [824, 2, 1, "", "default_weight_observer"], [825, 1, 1, "", "get_observer_state_dict"], [826, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[809, 3, 1, "", "calculate_qparams"], [809, 3, 1, "", "forward"], [809, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[813, 3, 1, "", "with_args"], [813, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[814, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.qconfig": [[830, 1, 1, "", "QConfig"], [831, 2, 1, "", "default_activation_only_qconfig"], [832, 2, 1, "", "default_debug_qconfig"], [833, 2, 1, "", "default_dynamic_qconfig"], [834, 2, 1, "", "default_per_channel_qconfig"], [835, 2, 1, "", "default_qat_qconfig"], [836, 2, 1, "", "default_qat_qconfig_v2"], [837, 2, 1, "", "default_qconfig"], [838, 2, 1, "", "default_weight_only_qconfig"], [839, 2, 1, "", "float16_dynamic_qconfig"], [840, 2, 1, "", "float16_static_qconfig"], [841, 2, 1, "", "float_qparams_weight_only_qconfig"], [842, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[843, 1, 1, "", "QConfigMapping"], [844, 1, 1, "", "get_default_qat_qconfig_mapping"], [845, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[843, 3, 1, "", "from_dict"], [843, 3, 1, "", "set_global"], [843, 3, 1, "", "set_module_name"], [843, 3, 1, "", "set_module_name_object_type_order"], [843, 3, 1, "", "set_module_name_regex"], [843, 3, 1, "", "set_object_type"], [843, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[848, 1, 1, "", "convert_fx"], [849, 1, 1, "", "fuse_fx"], [850, 1, 1, "", "prepare_fx"], [851, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[2, 1, 1, "", "Function"], [882, 5, 1, "", "backward"], [2, 1, 1, "", "detect_anomaly"], [896, 5, 1, "", "grad"], [897, 5, 1, "", "gradcheck"], [898, 5, 1, "", "gradgradcheck"], [2, 1, 1, "", "set_detect_anomaly"], [909, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.Function": [[878, 3, 1, "", "backward"], [879, 3, 1, "", "forward"], [880, 3, 1, "", "jvp"], [881, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[883, 1, 1, "", "dual_level"], [884, 5, 1, "", "make_dual"], [885, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[886, 3, 1, "", "mark_dirty"], [887, 3, 1, "", "mark_non_differentiable"], [888, 3, 1, "", "save_for_backward"], [889, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[890, 5, 1, "", "hessian"], [891, 5, 1, "", "hvp"], [892, 5, 1, "", "jacobian"], [893, 5, 1, "", "jvp"], [894, 5, 1, "", "vhp"], [895, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[899, 3, 1, "", "metadata"], [900, 3, 1, "", "name"], [901, 4, 1, "", "next_functions"], [902, 3, 1, "", "register_hook"], [903, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[2, 1, 1, "", "allow_mutation_on_saved_tensors"], [2, 1, 1, "", "disable_saved_tensors_hooks"], [2, 1, 1, "", "register_multi_grad_hook"], [2, 1, 1, "", "save_on_cpu"], [2, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[2, 1, 1, "", "emit_itt"], [2, 1, 1, "", "emit_nvtx"], [904, 5, 1, "", "load_nvprof"], [2, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[905, 3, 1, "", "export_chrome_trace"], [906, 3, 1, "", "key_averages"], [907, 4, 1, "", "self_cpu_time_total"], [908, 3, 1, "", "total_average"]], "torch.backends": [[3, 0, 0, "-", "cpu"], [3, 0, 0, "-", "cuda"], [3, 0, 0, "-", "cudnn"], [3, 0, 0, "-", "mkl"], [3, 0, 0, "-", "mkldnn"], [3, 0, 0, "-", "mps"], [3, 0, 0, "-", "openmp"], [3, 0, 0, "-", "opt_einsum"], [3, 0, 0, "-", "quantized"], [3, 0, 0, "-", "xeon"], [3, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[3, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[3, 1, 1, "", "SDPBackend"], [3, 3, 1, "", "clear"], [3, 5, 1, "", "enable_flash_sdp"], [3, 5, 1, "", "enable_math_sdp"], [3, 5, 1, "", "enable_mem_efficient_sdp"], [3, 5, 1, "", "flash_sdp_enabled"], [3, 5, 1, "", "is_built"], [3, 5, 1, "", "math_sdp_enabled"], [3, 2, 1, "", "max_size"], [3, 5, 1, "", "mem_efficient_sdp_enabled"], [3, 5, 1, "", "preferred_linalg_library"], [3, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.torch.backends.cuda": [[3, 2, 1, "", "cufft_plan_cache"], [3, 2, 1, "", "size"]], "torch.backends.cuda.torch.backends.cuda.matmul": [[3, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [3, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [3, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[3, 5, 1, "", "is_available"], [3, 5, 1, "", "version"]], "torch.backends.cudnn.torch.backends.cudnn": [[3, 2, 1, "", "allow_tf32"], [3, 2, 1, "", "benchmark"], [3, 2, 1, "", "benchmark_limit"], [3, 2, 1, "", "deterministic"], [3, 2, 1, "", "enabled"]], "torch.backends.mkl": [[3, 5, 1, "", "is_available"], [3, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[3, 5, 1, "", "is_available"], [3, 1, 1, "", "verbose"]], "torch.backends.mps": [[3, 5, 1, "", "is_available"], [3, 5, 1, "", "is_built"]], "torch.backends.openmp": [[3, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[3, 5, 1, "", "get_opt_einsum"], [3, 5, 1, "", "is_available"]], "torch.backends.opt_einsum.torch.backends.opt_einsum": [[3, 2, 1, "", "enabled"], [3, 2, 1, "", "strategy"]], "torch.cpu": [[1, 0, 0, "-", "amp"]], "torch.cpu.amp": [[1, 1, 1, "", "autocast"]], "torch.cuda": [[956, 1, 1, "", "CUDAGraph"], [957, 1, 1, "", "CUDAPluggableAllocator"], [958, 1, 1, "", "Event"], [959, 1, 1, "", "ExternalStream"], [960, 6, 1, "", "OutOfMemoryError"], [961, 1, 1, "", "Stream"], [962, 1, 1, "", "StreamContext"], [29, 0, 0, "-", "_sanitizer"], [1, 0, 0, "-", "amp"], [963, 5, 1, "", "caching_allocator_alloc"], [964, 5, 1, "", "caching_allocator_delete"], [965, 5, 1, "", "can_device_access_peer"], [966, 5, 1, "", "change_current_allocator"], [967, 5, 1, "", "clock_rate"], [973, 5, 1, "", "current_blas_handle"], [974, 5, 1, "", "current_device"], [975, 5, 1, "", "current_stream"], [976, 5, 1, "", "default_stream"], [977, 1, 1, "", "device"], [978, 5, 1, "", "device_count"], [979, 1, 1, "", "device_of"], [980, 5, 1, "", "empty_cache"], [981, 5, 1, "", "get_allocator_backend"], [982, 5, 1, "", "get_arch_list"], [983, 5, 1, "", "get_device_capability"], [984, 5, 1, "", "get_device_name"], [985, 5, 1, "", "get_device_properties"], [986, 5, 1, "", "get_gencode_flags"], [987, 5, 1, "", "get_rng_state"], [988, 5, 1, "", "get_rng_state_all"], [989, 5, 1, "", "get_sync_debug_mode"], [990, 1, 1, "", "graph"], [991, 5, 1, "", "graph_pool_handle"], [992, 5, 1, "", "init"], [993, 5, 1, "", "initial_seed"], [994, 5, 1, "", "ipc_collect"], [995, 5, 1, "", "is_available"], [996, 5, 1, "", "is_current_stream_capturing"], [997, 5, 1, "", "is_initialized"], [1000, 5, 1, "", "list_gpu_processes"], [1001, 5, 1, "", "make_graphed_callables"], [1002, 5, 1, "", "manual_seed"], [1003, 5, 1, "", "manual_seed_all"], [1004, 5, 1, "", "max_memory_allocated"], [1005, 5, 1, "", "max_memory_cached"], [1006, 5, 1, "", "max_memory_reserved"], [1007, 5, 1, "", "mem_get_info"], [1008, 5, 1, "", "memory_allocated"], [1009, 5, 1, "", "memory_cached"], [1010, 5, 1, "", "memory_reserved"], [1011, 5, 1, "", "memory_snapshot"], [1012, 5, 1, "", "memory_stats"], [1013, 5, 1, "", "memory_summary"], [1014, 5, 1, "", "memory_usage"], [1018, 5, 1, "", "power_draw"], [1019, 5, 1, "", "reset_max_memory_allocated"], [1020, 5, 1, "", "reset_max_memory_cached"], [1021, 5, 1, "", "reset_peak_memory_stats"], [1022, 5, 1, "", "seed"], [1023, 5, 1, "", "seed_all"], [1024, 5, 1, "", "set_device"], [1025, 5, 1, "", "set_per_process_memory_fraction"], [1026, 5, 1, "", "set_rng_state"], [1027, 5, 1, "", "set_rng_state_all"], [1028, 5, 1, "", "set_stream"], [1029, 5, 1, "", "set_sync_debug_mode"], [1030, 5, 1, "", "stream"], [1031, 5, 1, "", "synchronize"], [1032, 5, 1, "", "temperature"], [1033, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[956, 3, 1, "", "capture_begin"], [956, 3, 1, "", "capture_end"], [956, 3, 1, "", "debug_dump"], [956, 3, 1, "", "enable_debug_mode"], [956, 3, 1, "", "pool"], [956, 3, 1, "", "replay"], [956, 3, 1, "", "reset"]], "torch.cuda.Event": [[958, 3, 1, "", "elapsed_time"], [958, 3, 1, "", "from_ipc_handle"], [958, 3, 1, "", "ipc_handle"], [958, 3, 1, "", "query"], [958, 3, 1, "", "record"], [958, 3, 1, "", "synchronize"], [958, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[959, 3, 1, "", "query"], [959, 3, 1, "", "record_event"], [959, 3, 1, "", "synchronize"], [959, 3, 1, "", "wait_event"], [959, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[961, 3, 1, "", "query"], [961, 3, 1, "", "record_event"], [961, 3, 1, "", "synchronize"], [961, 3, 1, "", "wait_event"], [961, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[29, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[1, 1, 1, "", "GradScaler"], [1, 1, 1, "", "autocast"], [1, 5, 1, "", "custom_bwd"], [1, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[1, 3, 1, "", "get_backoff_factor"], [1, 3, 1, "", "get_growth_factor"], [1, 3, 1, "", "get_growth_interval"], [1, 3, 1, "", "get_scale"], [1, 3, 1, "", "is_enabled"], [1, 3, 1, "", "load_state_dict"], [1, 3, 1, "", "scale"], [1, 3, 1, "", "set_backoff_factor"], [1, 3, 1, "", "set_growth_factor"], [1, 3, 1, "", "set_growth_interval"], [1, 3, 1, "", "state_dict"], [1, 3, 1, "", "step"], [1, 3, 1, "", "unscale_"], [1, 3, 1, "", "update"]], "torch.cuda.comm": [[968, 5, 1, "", "broadcast"], [969, 5, 1, "", "broadcast_coalesced"], [970, 5, 1, "", "gather"], [971, 5, 1, "", "reduce_add"], [972, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[998, 5, 1, "", "_create_jit_fn"], [999, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.nvtx": [[1015, 5, 1, "", "mark"], [1016, 5, 1, "", "range_pop"], [1017, 5, 1, "", "range_push"]], "torch.distributed": [[35, 1, 1, "", "Backend"], [35, 1, 1, "", "DistBackendError"], [35, 1, 1, "", "FileStore"], [33, 1, 1, "", "GradBucket"], [35, 1, 1, "", "HashStore"], [35, 1, 1, "", "P2POp"], [35, 1, 1, "", "PrefixStore"], [35, 1, 1, "", "ReduceOp"], [35, 1, 1, "", "Store"], [35, 1, 1, "", "TCPStore"], [35, 0, 0, "-", "algorithms"], [35, 5, 1, "", "all_gather"], [35, 5, 1, "", "all_gather_into_tensor"], [35, 5, 1, "", "all_gather_multigpu"], [35, 5, 1, "", "all_gather_object"], [35, 5, 1, "", "all_reduce"], [35, 5, 1, "", "all_reduce_multigpu"], [35, 5, 1, "", "all_to_all"], [35, 5, 1, "", "all_to_all_single"], [1905, 0, 0, "-", "autograd"], [35, 5, 1, "", "barrier"], [35, 5, 1, "", "batch_isend_irecv"], [35, 5, 1, "", "broadcast"], [35, 5, 1, "", "broadcast_multigpu"], [35, 5, 1, "", "broadcast_object_list"], [37, 0, 0, "-", "checkpoint"], [35, 0, 0, "-", "elastic"], [57, 0, 0, "-", "fsdp"], [35, 5, 1, "", "gather"], [35, 5, 1, "", "gather_object"], [35, 5, 1, "", "get_backend"], [35, 5, 1, "", "get_global_rank"], [35, 5, 1, "", "get_group_rank"], [35, 5, 1, "", "get_process_group_ranks"], [35, 5, 1, "", "get_rank"], [35, 5, 1, "", "get_world_size"], [35, 5, 1, "", "init_process_group"], [35, 5, 1, "", "irecv"], [35, 5, 1, "", "is_available"], [35, 5, 1, "", "is_gloo_available"], [35, 5, 1, "", "is_initialized"], [35, 5, 1, "", "is_mpi_available"], [35, 5, 1, "", "is_nccl_available"], [35, 5, 1, "", "is_torchelastic_launched"], [35, 5, 1, "", "isend"], [35, 0, 0, "-", "launch"], [35, 0, 0, "-", "launcher"], [35, 5, 1, "", "monitored_barrier"], [35, 5, 1, "", "new_group"], [35, 0, 0, "-", "nn"], [39, 0, 0, "-", "optim"], [35, 0, 0, "-", "pipeline"], [35, 5, 1, "", "recv"], [35, 5, 1, "", "reduce"], [35, 5, 1, "", "reduce_multigpu"], [35, 1, 1, "", "reduce_op"], [35, 5, 1, "", "reduce_scatter"], [35, 5, 1, "", "reduce_scatter_multigpu"], [35, 5, 1, "", "reduce_scatter_tensor"], [1905, 0, 0, "-", "rpc"], [53, 0, 0, "-", "run"], [35, 5, 1, "", "scatter"], [35, 5, 1, "", "scatter_object_list"], [35, 5, 1, "", "send"], [35, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[35, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[33, 5, 1, "", "buffer"], [33, 5, 1, "", "gradients"], [33, 5, 1, "", "index"], [33, 5, 1, "", "is_last"], [33, 5, 1, "", "parameters"], [33, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[35, 5, 1, "", "add"], [35, 5, 1, "", "compare_set"], [35, 5, 1, "", "delete_key"], [35, 5, 1, "", "get"], [35, 5, 1, "", "num_keys"], [35, 5, 1, "", "set"], [35, 5, 1, "", "set_timeout"], [35, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[36, 1, 1, "", "Join"], [36, 1, 1, "", "JoinHook"], [36, 1, 1, "", "Joinable"], [35, 0, 0, "-", "ddp_comm_hooks"], [35, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[36, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[36, 3, 1, "", "main_hook"], [36, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[36, 4, 1, "", "join_device"], [36, 3, 1, "", "join_hook"], [36, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[33, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[33, 5, 1, "", "allreduce_hook"], [33, 5, 1, "", "bf16_compress_hook"], [33, 5, 1, "", "bf16_compress_wrapper"], [33, 5, 1, "", "fp16_compress_hook"], [33, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[33, 1, 1, "", "PowerSGDState"], [33, 5, 1, "", "batched_powerSGD_hook"], [33, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[33, 3, 1, "", "__getstate__"], [33, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1905, 5, 1, "", "backward"], [1905, 1, 1, "", "context"], [1905, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[37, 1, 1, "", "DefaultLoadPlanner"], [37, 1, 1, "", "DefaultSavePlanner"], [37, 1, 1, "", "FileSystemReader"], [37, 1, 1, "", "FileSystemWriter"], [37, 1, 1, "", "LoadPlan"], [37, 1, 1, "", "LoadPlanner"], [37, 1, 1, "", "ReadItem"], [37, 1, 1, "", "SavePlan"], [37, 1, 1, "", "SavePlanner"], [37, 1, 1, "", "StorageReader"], [37, 1, 1, "", "StorageWriter"], [37, 1, 1, "", "WriteItem"], [37, 5, 1, "", "load_state_dict"], [37, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[37, 3, 1, "", "lookup_tensor"], [37, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[37, 3, 1, "", "lookup_object"], [37, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[37, 3, 1, "", "commit_tensor"], [37, 3, 1, "", "create_global_plan"], [37, 3, 1, "", "create_local_plan"], [37, 3, 1, "", "finish_plan"], [37, 3, 1, "", "load_bytes"], [37, 3, 1, "", "resolve_tensor"], [37, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[37, 3, 1, "", "create_global_plan"], [37, 3, 1, "", "create_local_plan"], [37, 3, 1, "", "finish_plan"], [37, 3, 1, "", "resolve_data"], [37, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[37, 3, 1, "", "prepare_global_plan"], [37, 3, 1, "", "prepare_local_plan"], [37, 3, 1, "", "read_data"], [37, 3, 1, "", "read_metadata"], [37, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[37, 3, 1, "", "finish"], [37, 3, 1, "", "prepare_global_plan"], [37, 3, 1, "", "prepare_local_plan"], [37, 3, 1, "", "set_up_storage_writer"], [37, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[43, 0, 0, "-", "agent"], [46, 0, 0, "-", "events"], [49, 0, 0, "-", "metrics"], [50, 0, 0, "-", "multiprocessing"], [52, 0, 0, "-", "rendezvous"], [54, 0, 0, "-", "timer"], [35, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[43, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[43, 1, 1, "", "ElasticAgent"], [43, 1, 1, "", "SimpleElasticAgent"], [43, 1, 1, "", "Worker"], [43, 1, 1, "", "WorkerGroup"], [43, 1, 1, "", "WorkerSpec"], [43, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[43, 3, 1, "", "get_worker_group"], [43, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[43, 3, 1, "", "_assign_worker_ranks"], [43, 3, 1, "", "_exit_barrier"], [43, 3, 1, "", "_initialize_workers"], [43, 3, 1, "", "_monitor_workers"], [43, 3, 1, "", "_rendezvous"], [43, 3, 1, "", "_restart_workers"], [43, 3, 1, "", "_shutdown"], [43, 3, 1, "", "_start_workers"], [43, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[43, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[43, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[43, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[43, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[46, 1, 1, "", "Event"], [46, 2, 1, "", "EventMetadataValue"], [46, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[46, 5, 1, "", "get_logging_handler"], [46, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[49, 1, 1, "", "ConsoleMetricHandler"], [49, 1, 1, "", "MetricHandler"], [49, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[49, 5, 1, "", "configure"], [49, 5, 1, "", "prof"], [49, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[50, 1, 1, "", "MultiprocessContext"], [50, 1, 1, "", "PContext"], [50, 1, 1, "", "RunProcsResult"], [50, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[45, 0, 0, "-", "errors"], [50, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[45, 1, 1, "", "ChildFailedError"], [45, 1, 1, "", "ErrorHandler"], [45, 1, 1, "", "ProcessFailure"], [45, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[52, 1, 1, "", "RendezvousClosedError"], [52, 1, 1, "", "RendezvousConnectionError"], [52, 1, 1, "", "RendezvousError"], [52, 1, 1, "", "RendezvousHandler"], [52, 1, 1, "", "RendezvousHandlerRegistry"], [52, 1, 1, "", "RendezvousParameters"], [52, 1, 1, "", "RendezvousStateError"], [52, 1, 1, "", "RendezvousTimeoutError"], [52, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[52, 3, 1, "", "get_backend"], [52, 3, 1, "", "get_run_id"], [52, 3, 1, "", "is_closed"], [52, 3, 1, "", "next_rendezvous"], [52, 3, 1, "", "num_nodes_waiting"], [52, 3, 1, "", "set_closed"], [52, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[52, 3, 1, "", "create_handler"], [52, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[52, 3, 1, "", "get"], [52, 3, 1, "", "get_as_bool"], [52, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[52, 1, 1, "", "C10dRendezvousBackend"], [52, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[52, 3, 1, "", "get_state"], [52, 4, 1, "", "name"], [52, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[52, 1, 1, "", "DynamicRendezvousHandler"], [52, 1, 1, "", "RendezvousBackend"], [52, 1, 1, "", "RendezvousTimeout"], [52, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[52, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[52, 3, 1, "", "get_state"], [52, 4, 1, "", "name"], [52, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[52, 4, 1, "", "close"], [52, 4, 1, "", "heartbeat"], [52, 4, 1, "", "join"], [52, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[52, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[52, 1, 1, "", "EtcdRendezvousBackend"], [52, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[52, 3, 1, "", "get_state"], [52, 4, 1, "", "name"], [52, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[52, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[52, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[52, 3, 1, "", "add"], [52, 3, 1, "", "check"], [52, 3, 1, "", "get"], [52, 3, 1, "", "set"], [52, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[54, 1, 1, "", "FileTimerClient"], [54, 1, 1, "", "FileTimerServer"], [54, 1, 1, "", "LocalTimerClient"], [54, 1, 1, "", "LocalTimerServer"], [54, 1, 1, "", "TimerClient"], [54, 1, 1, "", "TimerRequest"], [54, 1, 1, "", "TimerServer"], [54, 5, 1, "", "configure"], [54, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[54, 3, 1, "", "acquire"], [54, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[54, 3, 1, "", "clear_timers"], [54, 3, 1, "", "get_expired_timers"], [54, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[35, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[57, 1, 1, "", "BackwardPrefetch"], [57, 1, 1, "", "CPUOffload"], [57, 1, 1, "", "FullyShardedDataParallel"], [57, 1, 1, "", "MixedPrecision"], [57, 1, 1, "", "ShardingStrategy"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[57, 3, 1, "", "apply"], [57, 3, 1, "", "clip_grad_norm_"], [57, 3, 1, "", "flatten_sharded_optim_state_dict"], [57, 3, 1, "", "forward"], [57, 3, 1, "", "fsdp_modules"], [57, 3, 1, "", "full_optim_state_dict"], [57, 3, 1, "", "load_optim_state_dict_pre_hook"], [57, 4, 1, "", "module"], [57, 3, 1, "", "named_buffers"], [57, 3, 1, "", "named_parameters"], [57, 3, 1, "", "no_sync"], [57, 3, 1, "", "optim_state_dict"], [57, 3, 1, "", "optim_state_dict_post_hook"], [57, 3, 1, "", "optim_state_dict_to_load"], [57, 3, 1, "", "register_comm_hook"], [57, 3, 1, "", "rekey_optim_state_dict"], [57, 3, 1, "", "scatter_full_optim_state_dict"], [57, 3, 1, "", "set_state_dict_type"], [57, 3, 1, "", "shard_full_optim_state_dict"], [57, 3, 1, "", "sharded_optim_state_dict"], [57, 3, 1, "", "state_dict_type"], [57, 3, 1, "", "summon_full_params"]], "torch.distributed.nn": [[35, 0, 0, "-", "api"], [35, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1905, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1905, 3, 1, "", "get_module_rref"], [1905, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[35, 0, 0, "-", "templates"]], "torch.distributed.optim": [[39, 1, 1, "", "DistributedOptimizer"], [39, 1, 1, "", "PostLocalSGDOptimizer"], [39, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[39, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[39, 3, 1, "", "load_state_dict"], [39, 3, 1, "", "state_dict"], [39, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[39, 3, 1, "", "add_param_group"], [39, 3, 1, "", "consolidate_state_dict"], [39, 3, 1, "", "join_hook"], [39, 3, 1, "", "load_state_dict"], [39, 3, 1, "", "state_dict"], [39, 3, 1, "", "step"]], "torch.distributed.pipeline": [[35, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1898, 1, 1, "", "Pipe"], [35, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1898, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1898, 1, 1, "", "pop"], [1898, 5, 1, "", "skippable"], [1898, 1, 1, "", "stash"], [1898, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1905, 1, 1, "", "BackendType"], [1905, 1, 1, "", "RRef"], [1905, 1, 1, "", "RpcBackendOptions"], [1905, 1, 1, "", "TensorPipeRpcBackendOptions"], [1905, 1, 1, "", "WorkerInfo"], [1905, 5, 1, "", "get_worker_info"], [1905, 5, 1, "", "init_rpc"], [1905, 5, 1, "", "remote"], [1905, 5, 1, "", "rpc_async"], [1905, 5, 1, "", "rpc_sync"], [1905, 5, 1, "", "shutdown"]], "torch.distributed.rpc.RpcBackendOptions": [[1905, 4, 1, "", "init_method"], [1905, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1905, 4, 1, "", "device_maps"], [1905, 4, 1, "", "devices"], [1905, 4, 1, "", "init_method"], [1905, 4, 1, "", "num_worker_threads"], [1905, 4, 1, "", "rpc_timeout"], [1905, 3, 1, "", "set_device_map"], [1905, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1905, 4, 1, "", "id"], [1905, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1905, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[40, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.fsdp": [[40, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel.multihead_attention_tp": [[40, 1, 1, "", "TensorParallelMultiheadAttention"]], "torch.distributed.tensor.parallel": [[40, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[40, 1, 1, "", "ColwiseParallel"], [40, 1, 1, "", "PairwiseParallel"], [40, 1, 1, "", "RowwiseParallel"], [40, 1, 1, "", "SequenceParallel"], [40, 5, 1, "", "make_input_replicate_1d"], [40, 5, 1, "", "make_input_reshard_replicate"], [40, 5, 1, "", "make_input_shard_1d"], [40, 5, 1, "", "make_input_shard_1d_last_dim"], [40, 5, 1, "", "make_output_replicate_1d"], [40, 5, 1, "", "make_output_reshard_tensor"], [40, 5, 1, "", "make_output_shard_1d"], [40, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[41, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_enumerate_support"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.beta": [[41, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[41, 2, 1, "", "arg_constraints"], [41, 4, 1, "", "concentration0"], [41, 4, 1, "", "concentration1"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.binomial": [[41, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_enumerate_support"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.categorical": [[41, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_enumerate_support"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[41, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.chi2": [[41, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[41, 2, 1, "", "arg_constraints"], [41, 4, 1, "", "df"], [41, 3, 1, "", "expand"]], "torch.distributions": [[41, 0, 0, "-", "constraint_registry"], [41, 0, 0, "-", "constraints"], [41, 0, 0, "-", "kl"], [41, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[41, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[41, 3, 1, "", "register"]], "torch.distributions.constraints": [[41, 1, 1, "", "Constraint"], [41, 2, 1, "", "cat"], [41, 2, 1, "", "dependent_property"], [41, 2, 1, "", "greater_than"], [41, 2, 1, "", "greater_than_eq"], [41, 2, 1, "", "half_open_interval"], [41, 2, 1, "", "independent"], [41, 2, 1, "", "integer_interval"], [41, 2, 1, "", "interval"], [41, 2, 1, "", "less_than"], [41, 2, 1, "", "multinomial"], [41, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[41, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[41, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "rsample"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "stddev"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[41, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.distribution": [[41, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[41, 4, 1, "", "arg_constraints"], [41, 4, 1, "", "batch_shape"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 4, 1, "", "event_shape"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "perplexity"], [41, 3, 1, "", "rsample"], [41, 3, 1, "", "sample"], [41, 3, 1, "", "sample_n"], [41, 3, 1, "", "set_default_validate_args"], [41, 4, 1, "", "stddev"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[41, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[41, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[41, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "stddev"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[41, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.gamma": [[41, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.geometric": [[41, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[41, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "stddev"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[41, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "scale"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[41, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "scale"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.independent": [[41, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 3, 1, "", "expand"], [41, 4, 1, "", "has_enumerate_support"], [41, 4, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.kl": [[41, 5, 1, "", "kl_divergence"], [41, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[41, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.laplace": [[41, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "stddev"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[41, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"]], "torch.distributions.log_normal": [[41, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 4, 1, "", "loc"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "scale"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[41, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[41, 2, 1, "", "arg_constraints"], [41, 4, 1, "", "covariance_matrix"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "precision_matrix"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "scale_tril"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[41, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 4, 1, "", "component_distribution"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mixture_distribution"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[41, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"], [41, 2, 1, "", "total_count"], [41, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[41, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[41, 2, 1, "", "arg_constraints"], [41, 4, 1, "", "covariance_matrix"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "precision_matrix"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "scale_tril"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[41, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.normal": [[41, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "stddev"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[41, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "enumerate_support"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_enumerate_support"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.pareto": [[41, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.poisson": [[41, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[41, 1, 1, "", "LogitRelaxedBernoulli"], [41, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "param_shape"], [41, 4, 1, "", "probs"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "probs"], [41, 2, 1, "", "support"], [41, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[41, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 4, 1, "", "logits"], [41, 4, 1, "", "probs"], [41, 2, 1, "", "support"], [41, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[41, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[41, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "expand"], [41, 4, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 3, 1, "", "rsample"], [41, 3, 1, "", "sample"], [41, 4, 1, "", "support"]], "torch.distributions.transforms": [[41, 1, 1, "", "AbsTransform"], [41, 1, 1, "", "AffineTransform"], [41, 1, 1, "", "CatTransform"], [41, 1, 1, "", "ComposeTransform"], [41, 1, 1, "", "CorrCholeskyTransform"], [41, 1, 1, "", "CumulativeDistributionTransform"], [41, 1, 1, "", "ExpTransform"], [41, 1, 1, "", "IndependentTransform"], [41, 1, 1, "", "LowerCholeskyTransform"], [41, 1, 1, "", "PositiveDefiniteTransform"], [41, 1, 1, "", "PowerTransform"], [41, 1, 1, "", "ReshapeTransform"], [41, 1, 1, "", "SigmoidTransform"], [41, 1, 1, "", "SoftmaxTransform"], [41, 1, 1, "", "SoftplusTransform"], [41, 1, 1, "", "StackTransform"], [41, 1, 1, "", "StickBreakingTransform"], [41, 1, 1, "", "TanhTransform"], [41, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[41, 3, 1, "", "forward_shape"], [41, 4, 1, "", "inv"], [41, 3, 1, "", "inverse_shape"], [41, 3, 1, "", "log_abs_det_jacobian"], [41, 4, 1, "", "sign"]], "torch.distributions.uniform": [[41, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "cdf"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "icdf"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "stddev"], [41, 4, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[41, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 3, 1, "", "sample"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.weibull": [[41, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[41, 2, 1, "", "arg_constraints"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.distributions.wishart": [[41, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[41, 2, 1, "", "arg_constraints"], [41, 4, 1, "", "covariance_matrix"], [41, 3, 1, "", "entropy"], [41, 3, 1, "", "expand"], [41, 2, 1, "", "has_rsample"], [41, 3, 1, "", "log_prob"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "mode"], [41, 4, 1, "", "precision_matrix"], [41, 3, 1, "", "rsample"], [41, 4, 1, "", "scale_tril"], [41, 2, 1, "", "support"], [41, 4, 1, "", "variance"]], "torch.fft": [[1071, 5, 1, "", "fft"], [1072, 5, 1, "", "fft2"], [1073, 5, 1, "", "fftfreq"], [1074, 5, 1, "", "fftn"], [1075, 5, 1, "", "fftshift"], [1076, 5, 1, "", "hfft"], [1077, 5, 1, "", "hfft2"], [1078, 5, 1, "", "hfftn"], [1079, 5, 1, "", "ifft"], [1080, 5, 1, "", "ifft2"], [1081, 5, 1, "", "ifftn"], [1082, 5, 1, "", "ifftshift"], [1083, 5, 1, "", "ihfft"], [1084, 5, 1, "", "ihfft2"], [1085, 5, 1, "", "ihfftn"], [1086, 5, 1, "", "irfft"], [1087, 5, 1, "", "irfft2"], [1088, 5, 1, "", "irfftn"], [1089, 5, 1, "", "rfft"], [1090, 5, 1, "", "rfft2"], [1091, 5, 1, "", "rfftfreq"], [1092, 5, 1, "", "rfftn"]], "torch.func": [[1111, 5, 1, "", "functional_call"], [1112, 5, 1, "", "functionalize"], [1113, 5, 1, "", "grad"], [1114, 5, 1, "", "grad_and_value"], [1115, 5, 1, "", "hessian"], [1116, 5, 1, "", "jacfwd"], [1117, 5, 1, "", "jacrev"], [1118, 5, 1, "", "jvp"], [1119, 5, 1, "", "linearize"], [1120, 5, 1, "", "replace_all_batch_norm_modules_"], [1121, 5, 1, "", "stack_module_state"], [1122, 5, 1, "", "vjp"], [1123, 5, 1, "", "vmap"]], "torch.futures": [[64, 1, 1, "", "Future"], [64, 5, 1, "", "collect_all"], [64, 5, 1, "", "wait_all"]], "torch.futures.Future": [[64, 3, 1, "", "add_done_callback"], [64, 3, 1, "", "done"], [64, 3, 1, "", "set_exception"], [64, 3, 1, "", "set_result"], [64, 3, 1, "", "then"], [64, 3, 1, "", "value"], [64, 3, 1, "", "wait"]], "torch.fx": [[65, 1, 1, "", "Graph"], [65, 1, 1, "", "GraphModule"], [65, 1, 1, "", "Interpreter"], [65, 1, 1, "", "Node"], [65, 1, 1, "", "Proxy"], [65, 1, 1, "", "Tracer"], [65, 1, 1, "", "Transformer"], [65, 0, 0, "-", "experimental"], [65, 0, 0, "-", "passes"], [65, 5, 1, "", "replace_pattern"], [65, 5, 1, "", "symbolic_trace"], [65, 5, 1, "", "wrap"]], "torch.fx.Graph": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "call_function"], [65, 3, 1, "", "call_method"], [65, 3, 1, "", "call_module"], [65, 3, 1, "", "create_node"], [65, 3, 1, "", "eliminate_dead_code"], [65, 3, 1, "", "erase_node"], [65, 3, 1, "", "get_attr"], [65, 3, 1, "", "graph_copy"], [65, 3, 1, "", "inserting_after"], [65, 3, 1, "", "inserting_before"], [65, 3, 1, "", "lint"], [65, 3, 1, "", "node_copy"], [65, 4, 1, "", "nodes"], [65, 3, 1, "", "on_generate_code"], [65, 3, 1, "", "output"], [65, 3, 1, "", "placeholder"], [65, 3, 1, "", "print_tabular"], [65, 3, 1, "", "process_inputs"], [65, 3, 1, "", "process_outputs"], [65, 3, 1, "", "python_code"], [65, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "add_submodule"], [65, 4, 1, "", "code"], [65, 3, 1, "", "delete_all_unused_submodules"], [65, 3, 1, "", "delete_submodule"], [65, 4, 1, "", "graph"], [65, 3, 1, "", "print_readable"], [65, 3, 1, "", "recompile"], [65, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[65, 3, 1, "", "boxed_run"], [65, 3, 1, "", "call_function"], [65, 3, 1, "", "call_method"], [65, 3, 1, "", "call_module"], [65, 3, 1, "", "fetch_args_kwargs_from_env"], [65, 3, 1, "", "fetch_attr"], [65, 3, 1, "", "get_attr"], [65, 3, 1, "", "map_nodes_to_values"], [65, 3, 1, "", "output"], [65, 3, 1, "", "placeholder"], [65, 3, 1, "", "run"], [65, 3, 1, "", "run_node"]], "torch.fx.Node": [[65, 4, 1, "", "all_input_nodes"], [65, 3, 1, "", "append"], [65, 4, 1, "", "args"], [65, 3, 1, "", "format_node"], [65, 3, 1, "", "is_impure"], [65, 4, 1, "", "kwargs"], [65, 4, 1, "", "next"], [65, 3, 1, "", "normalized_arguments"], [65, 3, 1, "", "prepend"], [65, 4, 1, "", "prev"], [65, 3, 1, "", "replace_all_uses_with"], [65, 3, 1, "", "replace_input_with"], [65, 4, 1, "", "stack_trace"], [65, 3, 1, "", "update_arg"], [65, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[65, 3, 1, "", "call_module"], [65, 3, 1, "", "create_arg"], [65, 3, 1, "", "create_args_for_root"], [65, 3, 1, "", "create_node"], [65, 3, 1, "", "create_proxy"], [65, 3, 1, "", "getattr"], [65, 3, 1, "", "is_leaf_module"], [65, 3, 1, "", "iter"], [65, 3, 1, "", "keys"], [65, 3, 1, "", "path_of_module"], [65, 3, 1, "", "proxy"], [65, 3, 1, "", "to_bool"], [65, 3, 1, "", "trace"]], "torch.fx.Transformer": [[65, 3, 1, "", "call_function"], [65, 3, 1, "", "call_module"], [65, 3, 1, "", "get_attr"], [65, 3, 1, "", "placeholder"], [65, 3, 1, "", "transform"]], "torch.fx.experimental": [[65, 0, 0, "-", "migrate_gradual_types"], [65, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[65, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[65, 0, 0, "-", "backends"], [65, 0, 0, "-", "dialect"], [65, 0, 0, "-", "infra"], [65, 0, 0, "-", "tests"], [65, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[65, 0, 0, "-", "common"]], "torch.hub": [[1849, 5, 1, "", "download_url_to_file"], [1849, 5, 1, "", "get_dir"], [1849, 5, 1, "", "help"], [1849, 5, 1, "", "list"], [1849, 5, 1, "", "load"], [1849, 5, 1, "", "load_state_dict_from_url"], [1849, 5, 1, "", "set_dir"]], "torch.jit": [[1180, 1, 1, "", "Attribute"], [1181, 1, 1, "", "ScriptFunction"], [1182, 1, 1, "", "ScriptModule"], [1183, 5, 1, "", "annotate"], [1184, 5, 1, "", "enable_onednn_fusion"], [1852, 5, 1, "", "export"], [1185, 5, 1, "", "fork"], [1186, 5, 1, "", "freeze"], [1187, 5, 1, "", "ignore"], [1854, 5, 1, "", "is_scripting"], [1854, 5, 1, "", "is_tracing"], [1188, 5, 1, "", "isinstance"], [1189, 5, 1, "", "load"], [1852, 0, 0, "-", "mobile"], [1190, 5, 1, "", "onednn_fusion_enabled"], [1191, 5, 1, "", "optimize_for_inference"], [1192, 5, 1, "", "save"], [1193, 5, 1, "", "script"], [1194, 5, 1, "", "script_if_tracing"], [1195, 5, 1, "", "set_fusion_strategy"], [1196, 1, 1, "", "strict_fusion"], [1853, 0, 0, "-", "supported_ops"], [1197, 5, 1, "", "trace"], [1198, 5, 1, "", "trace_module"], [1857, 0, 0, "-", "unsupported_tensor_ops"], [1199, 5, 1, "", "unused"], [1200, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1180, 3, 1, "", "count"], [1180, 3, 1, "", "index"], [1180, 2, 1, "", "type"], [1180, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1181, 3, 1, "", "get_debug_state"], [1181, 3, 1, "", "save"], [1181, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1182, 3, 1, "", "add_module"], [1182, 3, 1, "", "apply"], [1182, 3, 1, "", "bfloat16"], [1182, 3, 1, "", "buffers"], [1182, 3, 1, "", "children"], [1182, 4, 1, "", "code"], [1182, 4, 1, "", "code_with_constants"], [1182, 3, 1, "", "compile"], [1182, 3, 1, "", "cpu"], [1182, 3, 1, "", "cuda"], [1182, 3, 1, "", "double"], [1182, 3, 1, "", "eval"], [1182, 3, 1, "", "extra_repr"], [1182, 3, 1, "", "float"], [1182, 3, 1, "", "get_buffer"], [1182, 3, 1, "", "get_extra_state"], [1182, 3, 1, "", "get_parameter"], [1182, 3, 1, "", "get_submodule"], [1182, 4, 1, "", "graph"], [1182, 3, 1, "", "half"], [1182, 4, 1, "", "inlined_graph"], [1182, 3, 1, "", "ipu"], [1182, 3, 1, "", "load_state_dict"], [1182, 3, 1, "", "modules"], [1182, 3, 1, "", "named_buffers"], [1182, 3, 1, "", "named_children"], [1182, 3, 1, "", "named_modules"], [1182, 3, 1, "", "named_parameters"], [1182, 3, 1, "", "parameters"], [1182, 3, 1, "", "register_backward_hook"], [1182, 3, 1, "", "register_buffer"], [1182, 3, 1, "", "register_forward_hook"], [1182, 3, 1, "", "register_forward_pre_hook"], [1182, 3, 1, "", "register_full_backward_hook"], [1182, 3, 1, "", "register_full_backward_pre_hook"], [1182, 3, 1, "", "register_load_state_dict_post_hook"], [1182, 3, 1, "", "register_module"], [1182, 3, 1, "", "register_parameter"], [1182, 3, 1, "", "register_state_dict_pre_hook"], [1182, 3, 1, "", "requires_grad_"], [1182, 3, 1, "", "save"], [1182, 3, 1, "", "set_extra_state"], [1182, 3, 1, "", "share_memory"], [1182, 3, 1, "", "state_dict"], [1182, 3, 1, "", "to"], [1182, 3, 1, "", "to_empty"], [1182, 3, 1, "", "train"], [1182, 3, 1, "", "type"], [1182, 3, 1, "", "xpu"], [1182, 3, 1, "", "zero_grad"]], "torch.library": [[1859, 1, 1, "", "Library"]], "torch.library.Library": [[1859, 3, 1, "", "define"], [1859, 3, 1, "", "impl"]], "torch.linalg": [[1211, 5, 1, "", "cholesky"], [1212, 5, 1, "", "cholesky_ex"], [1213, 5, 1, "", "cond"], [1214, 5, 1, "", "cross"], [1215, 5, 1, "", "det"], [1216, 5, 1, "", "diagonal"], [1217, 5, 1, "", "eig"], [1218, 5, 1, "", "eigh"], [1219, 5, 1, "", "eigvals"], [1220, 5, 1, "", "eigvalsh"], [1221, 5, 1, "", "householder_product"], [1222, 5, 1, "", "inv"], [1223, 5, 1, "", "inv_ex"], [1224, 5, 1, "", "ldl_factor"], [1225, 5, 1, "", "ldl_factor_ex"], [1226, 5, 1, "", "ldl_solve"], [1227, 5, 1, "", "lstsq"], [1228, 5, 1, "", "lu"], [1229, 5, 1, "", "lu_factor"], [1230, 5, 1, "", "lu_factor_ex"], [1231, 5, 1, "", "lu_solve"], [1232, 5, 1, "", "matmul"], [1233, 5, 1, "", "matrix_exp"], [1234, 5, 1, "", "matrix_norm"], [1235, 5, 1, "", "matrix_power"], [1236, 5, 1, "", "matrix_rank"], [1237, 5, 1, "", "multi_dot"], [1238, 5, 1, "", "norm"], [1239, 5, 1, "", "pinv"], [1240, 5, 1, "", "qr"], [1241, 5, 1, "", "slogdet"], [1242, 5, 1, "", "solve"], [1243, 5, 1, "", "solve_ex"], [1244, 5, 1, "", "solve_triangular"], [1245, 5, 1, "", "svd"], [1246, 5, 1, "", "svdvals"], [1247, 5, 1, "", "tensorinv"], [1248, 5, 1, "", "tensorsolve"], [1249, 5, 1, "", "vander"], [1250, 5, 1, "", "vecdot"], [1251, 5, 1, "", "vector_norm"]], "torch.masked": [[1862, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1865, 1, 1, "", "Aggregation"], [1865, 1, 1, "", "Event"], [1865, 1, 1, "", "EventHandlerHandle"], [1865, 1, 1, "", "Stat"], [1865, 1, 1, "", "TensorboardEventHandler"], [1865, 1, 1, "", "data_value_t"], [1865, 5, 1, "", "log_event"], [1865, 5, 1, "", "register_event_handler"], [1865, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1865, 4, 1, "", "name"]], "torch.monitor.Event": [[1865, 3, 1, "", "__init__"], [1865, 4, 1, "", "data"], [1865, 4, 1, "", "name"], [1865, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1865, 3, 1, "", "__init__"], [1865, 3, 1, "", "add"], [1865, 4, 1, "", "count"], [1865, 3, 1, "", "get"], [1865, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1865, 3, 1, "", "__init__"]], "torch.mps": [[1290, 5, 1, "", "current_allocated_memory"], [1291, 5, 1, "", "driver_allocated_memory"], [1292, 5, 1, "", "empty_cache"], [1293, 5, 1, "", "get_rng_state"], [1294, 5, 1, "", "manual_seed"], [1298, 5, 1, "", "seed"], [1299, 5, 1, "", "set_per_process_memory_fraction"], [1300, 5, 1, "", "set_rng_state"], [1301, 5, 1, "", "synchronize"]], "torch.mps.profiler": [[1295, 5, 1, "", "profile"], [1296, 5, 1, "", "start"], [1297, 5, 1, "", "stop"]], "torch.multiprocessing": [[1867, 1, 1, "", "SpawnContext"], [1867, 5, 1, "", "get_all_sharing_strategies"], [1867, 5, 1, "", "get_sharing_strategy"], [1867, 5, 1, "", "set_sharing_strategy"], [1867, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1867, 3, 1, "", "join"]], "torch.nested": [[1870, 5, 1, "", "as_nested_tensor"], [1870, 5, 1, "", "nested_tensor"], [1870, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1319, 1, 1, "", "AdaptiveAvgPool1d"], [1320, 1, 1, "", "AdaptiveAvgPool2d"], [1321, 1, 1, "", "AdaptiveAvgPool3d"], [1322, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1323, 1, 1, "", "AdaptiveMaxPool1d"], [1324, 1, 1, "", "AdaptiveMaxPool2d"], [1325, 1, 1, "", "AdaptiveMaxPool3d"], [1326, 1, 1, "", "AlphaDropout"], [1327, 1, 1, "", "AvgPool1d"], [1328, 1, 1, "", "AvgPool2d"], [1329, 1, 1, "", "AvgPool3d"], [1330, 1, 1, "", "BCELoss"], [1331, 1, 1, "", "BCEWithLogitsLoss"], [1332, 1, 1, "", "BatchNorm1d"], [1333, 1, 1, "", "BatchNorm2d"], [1334, 1, 1, "", "BatchNorm3d"], [1335, 1, 1, "", "Bilinear"], [1336, 1, 1, "", "CELU"], [1337, 1, 1, "", "CTCLoss"], [1338, 1, 1, "", "ChannelShuffle"], [1339, 1, 1, "", "ConstantPad1d"], [1340, 1, 1, "", "ConstantPad2d"], [1341, 1, 1, "", "ConstantPad3d"], [1342, 1, 1, "", "Conv1d"], [1343, 1, 1, "", "Conv2d"], [1344, 1, 1, "", "Conv3d"], [1345, 1, 1, "", "ConvTranspose1d"], [1346, 1, 1, "", "ConvTranspose2d"], [1347, 1, 1, "", "ConvTranspose3d"], [1348, 1, 1, "", "CosineEmbeddingLoss"], [1349, 1, 1, "", "CosineSimilarity"], [1350, 1, 1, "", "CrossEntropyLoss"], [1351, 1, 1, "", "DataParallel"], [1352, 1, 1, "", "Dropout"], [1353, 1, 1, "", "Dropout1d"], [1354, 1, 1, "", "Dropout2d"], [1355, 1, 1, "", "Dropout3d"], [1356, 1, 1, "", "ELU"], [1357, 1, 1, "", "Embedding"], [1358, 1, 1, "", "EmbeddingBag"], [1359, 1, 1, "", "FeatureAlphaDropout"], [1360, 1, 1, "", "Flatten"], [1361, 1, 1, "", "Fold"], [1362, 1, 1, "", "FractionalMaxPool2d"], [1363, 1, 1, "", "FractionalMaxPool3d"], [1364, 1, 1, "", "GELU"], [1365, 1, 1, "", "GLU"], [1366, 1, 1, "", "GRU"], [1367, 1, 1, "", "GRUCell"], [1368, 1, 1, "", "GaussianNLLLoss"], [1369, 1, 1, "", "GroupNorm"], [1370, 1, 1, "", "Hardshrink"], [1371, 1, 1, "", "Hardsigmoid"], [1372, 1, 1, "", "Hardswish"], [1373, 1, 1, "", "Hardtanh"], [1374, 1, 1, "", "HingeEmbeddingLoss"], [1375, 1, 1, "", "HuberLoss"], [1376, 1, 1, "", "Identity"], [1377, 1, 1, "", "InstanceNorm1d"], [1378, 1, 1, "", "InstanceNorm2d"], [1379, 1, 1, "", "InstanceNorm3d"], [1380, 1, 1, "", "KLDivLoss"], [1381, 1, 1, "", "L1Loss"], [1382, 1, 1, "", "LPPool1d"], [1383, 1, 1, "", "LPPool2d"], [1384, 1, 1, "", "LSTM"], [1385, 1, 1, "", "LSTMCell"], [1386, 1, 1, "", "LayerNorm"], [1387, 1, 1, "", "LazyBatchNorm1d"], [1388, 1, 1, "", "LazyBatchNorm2d"], [1389, 1, 1, "", "LazyBatchNorm3d"], [1390, 1, 1, "", "LazyConv1d"], [1391, 1, 1, "", "LazyConv2d"], [1392, 1, 1, "", "LazyConv3d"], [1393, 1, 1, "", "LazyConvTranspose1d"], [1394, 1, 1, "", "LazyConvTranspose2d"], [1395, 1, 1, "", "LazyConvTranspose3d"], [1396, 1, 1, "", "LazyInstanceNorm1d"], [1397, 1, 1, "", "LazyInstanceNorm2d"], [1398, 1, 1, "", "LazyInstanceNorm3d"], [1399, 1, 1, "", "LazyLinear"], [1400, 1, 1, "", "LeakyReLU"], [1401, 1, 1, "", "Linear"], [1402, 1, 1, "", "LocalResponseNorm"], [1403, 1, 1, "", "LogSigmoid"], [1404, 1, 1, "", "LogSoftmax"], [1405, 1, 1, "", "MSELoss"], [1406, 1, 1, "", "MarginRankingLoss"], [1407, 1, 1, "", "MaxPool1d"], [1408, 1, 1, "", "MaxPool2d"], [1409, 1, 1, "", "MaxPool3d"], [1410, 1, 1, "", "MaxUnpool1d"], [1411, 1, 1, "", "MaxUnpool2d"], [1412, 1, 1, "", "MaxUnpool3d"], [1413, 1, 1, "", "Mish"], [1414, 1, 1, "", "Module"], [1415, 1, 1, "", "ModuleDict"], [1416, 1, 1, "", "ModuleList"], [1417, 1, 1, "", "MultiLabelMarginLoss"], [1418, 1, 1, "", "MultiLabelSoftMarginLoss"], [1419, 1, 1, "", "MultiMarginLoss"], [1420, 1, 1, "", "MultiheadAttention"], [1421, 1, 1, "", "NLLLoss"], [1422, 1, 1, "", "PReLU"], [1423, 1, 1, "", "PairwiseDistance"], [1424, 1, 1, "", "ParameterDict"], [1425, 1, 1, "", "ParameterList"], [1426, 1, 1, "", "PixelShuffle"], [1427, 1, 1, "", "PixelUnshuffle"], [1428, 1, 1, "", "PoissonNLLLoss"], [1429, 1, 1, "", "RNN"], [1430, 1, 1, "", "RNNBase"], [1431, 1, 1, "", "RNNCell"], [1432, 1, 1, "", "RReLU"], [1433, 1, 1, "", "ReLU"], [1434, 1, 1, "", "ReLU6"], [1435, 1, 1, "", "ReflectionPad1d"], [1436, 1, 1, "", "ReflectionPad2d"], [1437, 1, 1, "", "ReflectionPad3d"], [1438, 1, 1, "", "ReplicationPad1d"], [1439, 1, 1, "", "ReplicationPad2d"], [1440, 1, 1, "", "ReplicationPad3d"], [1441, 1, 1, "", "SELU"], [1442, 1, 1, "", "Sequential"], [1443, 1, 1, "", "SiLU"], [1444, 1, 1, "", "Sigmoid"], [1445, 1, 1, "", "SmoothL1Loss"], [1446, 1, 1, "", "SoftMarginLoss"], [1447, 1, 1, "", "Softmax"], [1448, 1, 1, "", "Softmax2d"], [1449, 1, 1, "", "Softmin"], [1450, 1, 1, "", "Softplus"], [1451, 1, 1, "", "Softshrink"], [1452, 1, 1, "", "Softsign"], [1453, 1, 1, "", "SyncBatchNorm"], [1454, 1, 1, "", "Tanh"], [1455, 1, 1, "", "Tanhshrink"], [1456, 1, 1, "", "Threshold"], [1457, 1, 1, "", "Transformer"], [1458, 1, 1, "", "TransformerDecoder"], [1459, 1, 1, "", "TransformerDecoderLayer"], [1460, 1, 1, "", "TransformerEncoder"], [1461, 1, 1, "", "TransformerEncoderLayer"], [1462, 1, 1, "", "TripletMarginLoss"], [1463, 1, 1, "", "TripletMarginWithDistanceLoss"], [1464, 1, 1, "", "Unflatten"], [1465, 1, 1, "", "Unfold"], [1466, 1, 1, "", "Upsample"], [1467, 1, 1, "", "UpsamplingBilinear2d"], [1468, 1, 1, "", "UpsamplingNearest2d"], [1469, 1, 1, "", "ZeroPad1d"], [1470, 1, 1, "", "ZeroPad2d"], [1471, 1, 1, "", "ZeroPad3d"], [1871, 0, 0, "-", "backends"], [1903, 0, 0, "-", "intrinsic"], [1871, 0, 0, "-", "modules"], [1871, 0, 0, "-", "parallel"], [1903, 0, 0, "-", "qat"], [1903, 0, 0, "-", "quantizable"], [1903, 0, 0, "-", "quantized"], [1871, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1322, 3, 1, "", "log_prob"], [1322, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1357, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1358, 3, 1, "", "forward"], [1358, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1387, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1388, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1389, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1390, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1391, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1392, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1393, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1394, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1395, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1396, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1397, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1398, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1399, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1414, 3, 1, "", "add_module"], [1414, 3, 1, "", "apply"], [1414, 3, 1, "", "bfloat16"], [1414, 3, 1, "", "buffers"], [1414, 3, 1, "", "children"], [1414, 3, 1, "", "compile"], [1414, 3, 1, "", "cpu"], [1414, 3, 1, "", "cuda"], [1414, 3, 1, "", "double"], [1414, 3, 1, "", "eval"], [1414, 3, 1, "", "extra_repr"], [1414, 3, 1, "", "float"], [1414, 3, 1, "", "forward"], [1414, 3, 1, "", "get_buffer"], [1414, 3, 1, "", "get_extra_state"], [1414, 3, 1, "", "get_parameter"], [1414, 3, 1, "", "get_submodule"], [1414, 3, 1, "", "half"], [1414, 3, 1, "", "ipu"], [1414, 3, 1, "", "load_state_dict"], [1414, 3, 1, "", "modules"], [1414, 3, 1, "", "named_buffers"], [1414, 3, 1, "", "named_children"], [1414, 3, 1, "", "named_modules"], [1414, 3, 1, "", "named_parameters"], [1414, 3, 1, "", "parameters"], [1414, 3, 1, "", "register_backward_hook"], [1414, 3, 1, "", "register_buffer"], [1414, 3, 1, "", "register_forward_hook"], [1414, 3, 1, "", "register_forward_pre_hook"], [1414, 3, 1, "", "register_full_backward_hook"], [1414, 3, 1, "", "register_full_backward_pre_hook"], [1414, 3, 1, "", "register_load_state_dict_post_hook"], [1414, 3, 1, "", "register_module"], [1414, 3, 1, "", "register_parameter"], [1414, 3, 1, "", "register_state_dict_pre_hook"], [1414, 3, 1, "", "requires_grad_"], [1414, 3, 1, "", "set_extra_state"], [1414, 3, 1, "", "share_memory"], [1414, 3, 1, "", "state_dict"], [1414, 3, 1, "", "to"], [1414, 3, 1, "", "to_empty"], [1414, 3, 1, "", "train"], [1414, 3, 1, "", "type"], [1414, 3, 1, "", "xpu"], [1414, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1415, 3, 1, "", "clear"], [1415, 3, 1, "", "items"], [1415, 3, 1, "", "keys"], [1415, 3, 1, "", "pop"], [1415, 3, 1, "", "update"], [1415, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1416, 3, 1, "", "append"], [1416, 3, 1, "", "extend"], [1416, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1420, 3, 1, "", "forward"], [1420, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1424, 3, 1, "", "clear"], [1424, 3, 1, "", "copy"], [1424, 3, 1, "", "fromkeys"], [1424, 3, 1, "", "get"], [1424, 3, 1, "", "items"], [1424, 3, 1, "", "keys"], [1424, 3, 1, "", "pop"], [1424, 3, 1, "", "popitem"], [1424, 3, 1, "", "setdefault"], [1424, 3, 1, "", "update"], [1424, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1425, 3, 1, "", "append"], [1425, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1430, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1442, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1453, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1457, 3, 1, "", "forward"], [1457, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1458, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1459, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1460, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1461, 3, 1, "", "forward"]], "torch.nn.functional": [[1472, 5, 1, "", "adaptive_avg_pool1d"], [1473, 5, 1, "", "adaptive_avg_pool2d"], [1474, 5, 1, "", "adaptive_avg_pool3d"], [1475, 5, 1, "", "adaptive_max_pool1d"], [1476, 5, 1, "", "adaptive_max_pool2d"], [1477, 5, 1, "", "adaptive_max_pool3d"], [1478, 5, 1, "", "affine_grid"], [1479, 5, 1, "", "alpha_dropout"], [1480, 5, 1, "", "avg_pool1d"], [1481, 5, 1, "", "avg_pool2d"], [1482, 5, 1, "", "avg_pool3d"], [1483, 5, 1, "", "batch_norm"], [1484, 5, 1, "", "bilinear"], [1485, 5, 1, "", "binary_cross_entropy"], [1486, 5, 1, "", "binary_cross_entropy_with_logits"], [1487, 5, 1, "", "celu"], [1488, 5, 1, "", "conv1d"], [1489, 5, 1, "", "conv2d"], [1490, 5, 1, "", "conv3d"], [1491, 5, 1, "", "conv_transpose1d"], [1492, 5, 1, "", "conv_transpose2d"], [1493, 5, 1, "", "conv_transpose3d"], [1494, 5, 1, "", "cosine_embedding_loss"], [1495, 5, 1, "", "cosine_similarity"], [1496, 5, 1, "", "cross_entropy"], [1497, 5, 1, "", "ctc_loss"], [1498, 5, 1, "", "dropout"], [1499, 5, 1, "", "dropout1d"], [1500, 5, 1, "", "dropout2d"], [1501, 5, 1, "", "dropout3d"], [1502, 5, 1, "", "elu"], [1503, 5, 1, "", "elu_"], [1504, 5, 1, "", "embedding"], [1505, 5, 1, "", "embedding_bag"], [1506, 5, 1, "", "feature_alpha_dropout"], [1507, 5, 1, "", "fold"], [1508, 5, 1, "", "fractional_max_pool2d"], [1509, 5, 1, "", "fractional_max_pool3d"], [1510, 5, 1, "", "gaussian_nll_loss"], [1511, 5, 1, "", "gelu"], [1512, 5, 1, "", "glu"], [1513, 5, 1, "", "grid_sample"], [1514, 5, 1, "", "group_norm"], [1515, 5, 1, "", "gumbel_softmax"], [1516, 5, 1, "", "hardshrink"], [1517, 5, 1, "", "hardsigmoid"], [1518, 5, 1, "", "hardswish"], [1519, 5, 1, "", "hardtanh"], [1520, 5, 1, "", "hardtanh_"], [1521, 5, 1, "", "hinge_embedding_loss"], [1522, 5, 1, "", "huber_loss"], [1523, 5, 1, "", "instance_norm"], [1524, 5, 1, "", "interpolate"], [1525, 5, 1, "", "kl_div"], [1526, 5, 1, "", "l1_loss"], [1527, 5, 1, "", "layer_norm"], [1528, 5, 1, "", "leaky_relu"], [1529, 5, 1, "", "leaky_relu_"], [1530, 5, 1, "", "linear"], [1531, 5, 1, "", "local_response_norm"], [1532, 5, 1, "", "log_softmax"], [1533, 5, 1, "", "logsigmoid"], [1534, 5, 1, "", "lp_pool1d"], [1535, 5, 1, "", "lp_pool2d"], [1536, 5, 1, "", "margin_ranking_loss"], [1537, 5, 1, "", "max_pool1d"], [1538, 5, 1, "", "max_pool2d"], [1539, 5, 1, "", "max_pool3d"], [1540, 5, 1, "", "max_unpool1d"], [1541, 5, 1, "", "max_unpool2d"], [1542, 5, 1, "", "max_unpool3d"], [1543, 5, 1, "", "mish"], [1544, 5, 1, "", "mse_loss"], [1545, 5, 1, "", "multi_margin_loss"], [1546, 5, 1, "", "multilabel_margin_loss"], [1547, 5, 1, "", "multilabel_soft_margin_loss"], [1548, 5, 1, "", "nll_loss"], [1549, 5, 1, "", "normalize"], [1550, 5, 1, "", "one_hot"], [1551, 5, 1, "", "pad"], [1552, 5, 1, "", "pairwise_distance"], [1553, 5, 1, "", "pdist"], [1554, 5, 1, "", "pixel_shuffle"], [1555, 5, 1, "", "pixel_unshuffle"], [1556, 5, 1, "", "poisson_nll_loss"], [1557, 5, 1, "", "prelu"], [1558, 5, 1, "", "relu"], [1559, 5, 1, "", "relu6"], [1560, 5, 1, "", "relu_"], [1561, 5, 1, "", "rrelu"], [1562, 5, 1, "", "rrelu_"], [1563, 5, 1, "", "scaled_dot_product_attention"], [1564, 5, 1, "", "selu"], [1565, 5, 1, "", "sigmoid"], [1566, 5, 1, "", "silu"], [1567, 5, 1, "", "smooth_l1_loss"], [1568, 5, 1, "", "soft_margin_loss"], [1569, 5, 1, "", "softmax"], [1570, 5, 1, "", "softmin"], [1571, 5, 1, "", "softplus"], [1572, 5, 1, "", "softshrink"], [1573, 5, 1, "", "softsign"], [1574, 5, 1, "", "tanh"], [1575, 5, 1, "", "tanhshrink"], [1576, 5, 1, "", "threshold"], [1577, 5, 1, "", "threshold_"], [1579, 5, 1, "", "triplet_margin_loss"], [1580, 5, 1, "", "triplet_margin_with_distance_loss"], [1581, 5, 1, "", "unfold"], [1582, 5, 1, "", "upsample"], [1583, 5, 1, "", "upsample_bilinear"], [1584, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1873, 5, 1, "", "calculate_gain"], [1873, 5, 1, "", "constant_"], [1873, 5, 1, "", "dirac_"], [1873, 5, 1, "", "eye_"], [1873, 5, 1, "", "kaiming_normal_"], [1873, 5, 1, "", "kaiming_uniform_"], [1873, 5, 1, "", "normal_"], [1873, 5, 1, "", "ones_"], [1873, 5, 1, "", "orthogonal_"], [1873, 5, 1, "", "sparse_"], [1873, 5, 1, "", "trunc_normal_"], [1873, 5, 1, "", "uniform_"], [1873, 5, 1, "", "xavier_normal_"], [1873, 5, 1, "", "xavier_uniform_"], [1873, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1903, 0, 0, "-", "modules"], [1903, 0, 0, "-", "qat"], [1903, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1903, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1903, 0, 0, "-", "dynamic"], [1903, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1903, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1585, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1585, 3, 1, "", "has_uninitialized_params"], [1585, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1586, 5, 1, "", "register_module_backward_hook"], [1587, 5, 1, "", "register_module_buffer_registration_hook"], [1588, 5, 1, "", "register_module_forward_hook"], [1589, 5, 1, "", "register_module_forward_pre_hook"], [1590, 5, 1, "", "register_module_full_backward_hook"], [1591, 5, 1, "", "register_module_full_backward_pre_hook"], [1592, 5, 1, "", "register_module_module_registration_hook"], [1593, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1594, 1, 1, "", "DistributedDataParallel"], [1578, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1594, 3, 1, "", "join"], [1594, 3, 1, "", "join_hook"], [1594, 3, 1, "", "no_sync"], [1594, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1595, 1, 1, "", "Parameter"], [1596, 1, 1, "", "UninitializedBuffer"], [1597, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1597, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1903, 0, 0, "-", "dynamic"], [1903, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1903, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1903, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1903, 0, 0, "-", "dynamic"], [1903, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1903, 0, 0, "-", "modules"]], "torch.nn.utils": [[1598, 5, 1, "", "clip_grad_norm_"], [1599, 5, 1, "", "clip_grad_value_"], [1600, 5, 1, "", "parameters_to_vector"], [1625, 5, 1, "", "remove_spectral_norm"], [1626, 5, 1, "", "remove_weight_norm"], [1634, 5, 1, "", "skip_init"], [1635, 5, 1, "", "spectral_norm"], [1871, 0, 0, "-", "stateless"], [1637, 5, 1, "", "vector_to_parameters"], [1638, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1601, 5, 1, "", "orthogonal"], [1602, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1603, 1, 1, "", "ParametrizationList"], [1604, 5, 1, "", "cached"], [1605, 5, 1, "", "is_parametrized"], [1606, 5, 1, "", "register_parametrization"], [1607, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1603, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1608, 1, 1, "", "BasePruningMethod"], [1609, 1, 1, "", "CustomFromMask"], [1610, 1, 1, "", "Identity"], [1611, 1, 1, "", "L1Unstructured"], [1612, 1, 1, "", "LnStructured"], [1613, 1, 1, "", "PruningContainer"], [1614, 1, 1, "", "RandomStructured"], [1615, 1, 1, "", "RandomUnstructured"], [1616, 5, 1, "", "custom_from_mask"], [1617, 5, 1, "", "global_unstructured"], [1618, 5, 1, "", "identity"], [1619, 5, 1, "", "is_pruned"], [1620, 5, 1, "", "l1_unstructured"], [1621, 5, 1, "", "ln_structured"], [1622, 5, 1, "", "random_structured"], [1623, 5, 1, "", "random_unstructured"], [1624, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1608, 3, 1, "", "apply"], [1608, 3, 1, "", "apply_mask"], [1608, 3, 1, "", "compute_mask"], [1608, 3, 1, "", "prune"], [1608, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1609, 3, 1, "", "apply"], [1609, 3, 1, "", "apply_mask"], [1609, 3, 1, "", "prune"], [1609, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1610, 3, 1, "", "apply"], [1610, 3, 1, "", "apply_mask"], [1610, 3, 1, "", "prune"], [1610, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1611, 3, 1, "", "apply"], [1611, 3, 1, "", "apply_mask"], [1611, 3, 1, "", "prune"], [1611, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1612, 3, 1, "", "apply"], [1612, 3, 1, "", "apply_mask"], [1612, 3, 1, "", "compute_mask"], [1612, 3, 1, "", "prune"], [1612, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1613, 3, 1, "", "add_pruning_method"], [1613, 3, 1, "", "apply"], [1613, 3, 1, "", "apply_mask"], [1613, 3, 1, "", "compute_mask"], [1613, 3, 1, "", "prune"], [1613, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1614, 3, 1, "", "apply"], [1614, 3, 1, "", "apply_mask"], [1614, 3, 1, "", "compute_mask"], [1614, 3, 1, "", "prune"], [1614, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1615, 3, 1, "", "apply"], [1615, 3, 1, "", "apply_mask"], [1615, 3, 1, "", "prune"], [1615, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1627, 1, 1, "", "PackedSequence"], [1628, 5, 1, "", "pack_padded_sequence"], [1629, 5, 1, "", "pack_sequence"], [1630, 5, 1, "", "pad_packed_sequence"], [1631, 5, 1, "", "pad_sequence"], [1632, 5, 1, "", "unpack_sequence"], [1633, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1627, 2, 1, "", "batch_sizes"], [1627, 3, 1, "", "count"], [1627, 2, 1, "", "data"], [1627, 3, 1, "", "index"], [1627, 4, 1, "", "is_cuda"], [1627, 3, 1, "", "is_pinned"], [1627, 2, 1, "", "sorted_indices"], [1627, 3, 1, "", "to"], [1627, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1636, 5, 1, "", "functional_call"]], "torch.onnx": [[1647, 1, 1, "", "ExportOptions"], [1648, 1, 1, "", "ExportOutput"], [1649, 1, 1, "", "ExportOutputSerializer"], [1650, 1, 1, "", "JitScalarType"], [1893, 5, 1, "", "disable_log"], [1893, 5, 1, "", "dynamo_export"], [1893, 5, 1, "", "enable_log"], [1893, 5, 1, "", "export"], [1893, 5, 1, "", "export_to_pretty_string"], [1893, 5, 1, "", "is_in_onnx_export"], [1893, 5, 1, "", "register_custom_op_symbolic"], [1893, 5, 1, "", "select_model_mode_for_export"], [1893, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1648, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1648, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1648, 4, 1, "", "diagnostic_context"], [1648, 4, 1, "", "model_proto"], [1648, 3, 1, "", "save"]], "torch.onnx.ExportOutputSerializer": [[1649, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1650, 3, 1, "", "dtype"], [1650, 3, 1, "", "from_dtype"], [1650, 3, 1, "", "from_value"], [1650, 3, 1, "", "onnx_compatible"], [1650, 3, 1, "", "onnx_type"], [1650, 3, 1, "", "scalar_name"], [1650, 3, 1, "", "torch_name"]], "torch.onnx._internal": [[1894, 0, 0, "-", "diagnostics"]], "torch.onnx._internal.diagnostics": [[1894, 1, 1, "", "ExportDiagnostic"]], "torch.onnx._internal.diagnostics.ExportDiagnostic": [[1894, 3, 1, "", "record_cpp_call_stack"]], "torch.onnx.verification": [[1651, 1, 1, "", "GraphInfo"], [1652, 1, 1, "", "VerificationOptions"], [1893, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1651, 3, 1, "", "all_mismatch_leaf_graph_info"], [1651, 3, 1, "", "clear"], [1651, 3, 1, "", "essential_node_count"], [1651, 3, 1, "", "essential_node_kinds"], [1651, 3, 1, "", "export_repro"], [1651, 3, 1, "", "find_mismatch"], [1651, 3, 1, "", "find_partition"], [1651, 3, 1, "", "has_mismatch"], [1651, 3, 1, "", "pretty_print_mismatch"], [1651, 3, 1, "", "pretty_print_tree"], [1651, 3, 1, "", "verify_export"]], "torch.optim": [[1653, 1, 1, "", "ASGD"], [1654, 1, 1, "", "Adadelta"], [1655, 1, 1, "", "Adagrad"], [1656, 1, 1, "", "Adam"], [1657, 1, 1, "", "AdamW"], [1658, 1, 1, "", "Adamax"], [1659, 1, 1, "", "LBFGS"], [1660, 1, 1, "", "NAdam"], [1896, 1, 1, "", "Optimizer"], [1666, 1, 1, "", "RAdam"], [1667, 1, 1, "", "RMSprop"], [1668, 1, 1, "", "Rprop"], [1669, 1, 1, "", "SGD"], [1670, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1653, 3, 1, "", "add_param_group"], [1653, 3, 1, "", "load_state_dict"], [1653, 3, 1, "", "register_step_post_hook"], [1653, 3, 1, "", "register_step_pre_hook"], [1653, 3, 1, "", "state_dict"], [1653, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1654, 3, 1, "", "add_param_group"], [1654, 3, 1, "", "load_state_dict"], [1654, 3, 1, "", "register_step_post_hook"], [1654, 3, 1, "", "register_step_pre_hook"], [1654, 3, 1, "", "state_dict"], [1654, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1655, 3, 1, "", "add_param_group"], [1655, 3, 1, "", "load_state_dict"], [1655, 3, 1, "", "register_step_post_hook"], [1655, 3, 1, "", "register_step_pre_hook"], [1655, 3, 1, "", "state_dict"], [1655, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1656, 3, 1, "", "add_param_group"], [1656, 3, 1, "", "load_state_dict"], [1656, 3, 1, "", "register_step_post_hook"], [1656, 3, 1, "", "register_step_pre_hook"], [1656, 3, 1, "", "state_dict"], [1656, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1657, 3, 1, "", "add_param_group"], [1657, 3, 1, "", "load_state_dict"], [1657, 3, 1, "", "register_step_post_hook"], [1657, 3, 1, "", "register_step_pre_hook"], [1657, 3, 1, "", "state_dict"], [1657, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1658, 3, 1, "", "add_param_group"], [1658, 3, 1, "", "load_state_dict"], [1658, 3, 1, "", "register_step_post_hook"], [1658, 3, 1, "", "register_step_pre_hook"], [1658, 3, 1, "", "state_dict"], [1658, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1659, 3, 1, "", "add_param_group"], [1659, 3, 1, "", "load_state_dict"], [1659, 3, 1, "", "register_step_post_hook"], [1659, 3, 1, "", "register_step_pre_hook"], [1659, 3, 1, "", "state_dict"], [1659, 3, 1, "", "step"], [1659, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1660, 3, 1, "", "add_param_group"], [1660, 3, 1, "", "load_state_dict"], [1660, 3, 1, "", "register_step_post_hook"], [1660, 3, 1, "", "register_step_pre_hook"], [1660, 3, 1, "", "state_dict"], [1660, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1661, 3, 1, "", "add_param_group"], [1662, 3, 1, "", "load_state_dict"], [1663, 3, 1, "", "state_dict"], [1664, 3, 1, "", "step"], [1665, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1666, 3, 1, "", "add_param_group"], [1666, 3, 1, "", "load_state_dict"], [1666, 3, 1, "", "register_step_post_hook"], [1666, 3, 1, "", "register_step_pre_hook"], [1666, 3, 1, "", "state_dict"], [1666, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1667, 3, 1, "", "add_param_group"], [1667, 3, 1, "", "load_state_dict"], [1667, 3, 1, "", "register_step_post_hook"], [1667, 3, 1, "", "register_step_pre_hook"], [1667, 3, 1, "", "state_dict"], [1667, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1668, 3, 1, "", "add_param_group"], [1668, 3, 1, "", "load_state_dict"], [1668, 3, 1, "", "register_step_post_hook"], [1668, 3, 1, "", "register_step_pre_hook"], [1668, 3, 1, "", "state_dict"], [1668, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1669, 3, 1, "", "add_param_group"], [1669, 3, 1, "", "load_state_dict"], [1669, 3, 1, "", "register_step_post_hook"], [1669, 3, 1, "", "register_step_pre_hook"], [1669, 3, 1, "", "state_dict"], [1669, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1670, 3, 1, "", "add_param_group"], [1670, 3, 1, "", "load_state_dict"], [1670, 3, 1, "", "register_step_post_hook"], [1670, 3, 1, "", "register_step_pre_hook"], [1670, 3, 1, "", "state_dict"], [1670, 3, 1, "", "step"], [1670, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1671, 1, 1, "", "ChainedScheduler"], [1672, 1, 1, "", "ConstantLR"], [1673, 1, 1, "", "CosineAnnealingLR"], [1674, 1, 1, "", "CosineAnnealingWarmRestarts"], [1675, 1, 1, "", "CyclicLR"], [1676, 1, 1, "", "ExponentialLR"], [1677, 1, 1, "", "LambdaLR"], [1678, 1, 1, "", "LinearLR"], [1679, 1, 1, "", "MultiStepLR"], [1680, 1, 1, "", "MultiplicativeLR"], [1681, 1, 1, "", "OneCycleLR"], [1682, 1, 1, "", "PolynomialLR"], [1683, 1, 1, "", "ReduceLROnPlateau"], [1684, 1, 1, "", "SequentialLR"], [1685, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1671, 3, 1, "", "get_last_lr"], [1671, 3, 1, "", "load_state_dict"], [1671, 3, 1, "", "print_lr"], [1671, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1672, 3, 1, "", "get_last_lr"], [1672, 3, 1, "", "load_state_dict"], [1672, 3, 1, "", "print_lr"], [1672, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1673, 3, 1, "", "get_last_lr"], [1673, 3, 1, "", "load_state_dict"], [1673, 3, 1, "", "print_lr"], [1673, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1674, 3, 1, "", "get_last_lr"], [1674, 3, 1, "", "load_state_dict"], [1674, 3, 1, "", "print_lr"], [1674, 3, 1, "", "state_dict"], [1674, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1675, 3, 1, "", "get_last_lr"], [1675, 3, 1, "", "get_lr"], [1675, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1676, 3, 1, "", "get_last_lr"], [1676, 3, 1, "", "load_state_dict"], [1676, 3, 1, "", "print_lr"], [1676, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1677, 3, 1, "", "get_last_lr"], [1677, 3, 1, "", "load_state_dict"], [1677, 3, 1, "", "print_lr"], [1677, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1678, 3, 1, "", "get_last_lr"], [1678, 3, 1, "", "load_state_dict"], [1678, 3, 1, "", "print_lr"], [1678, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1679, 3, 1, "", "get_last_lr"], [1679, 3, 1, "", "load_state_dict"], [1679, 3, 1, "", "print_lr"], [1679, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1680, 3, 1, "", "get_last_lr"], [1680, 3, 1, "", "load_state_dict"], [1680, 3, 1, "", "print_lr"], [1680, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1681, 3, 1, "", "get_last_lr"], [1681, 3, 1, "", "load_state_dict"], [1681, 3, 1, "", "print_lr"], [1681, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1682, 3, 1, "", "get_last_lr"], [1682, 3, 1, "", "load_state_dict"], [1682, 3, 1, "", "print_lr"], [1682, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.SequentialLR": [[1684, 3, 1, "", "get_last_lr"], [1684, 3, 1, "", "load_state_dict"], [1684, 3, 1, "", "print_lr"], [1684, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1685, 3, 1, "", "get_last_lr"], [1685, 3, 1, "", "load_state_dict"], [1685, 3, 1, "", "print_lr"], [1685, 3, 1, "", "state_dict"]], "torch.overrides": [[1920, 5, 1, "", "get_ignored_functions"], [1920, 5, 1, "", "get_overridable_functions"], [1920, 5, 1, "", "get_testing_overrides"], [1920, 5, 1, "", "handle_torch_function"], [1920, 5, 1, "", "has_torch_function"], [1920, 5, 1, "", "is_tensor_like"], [1920, 5, 1, "", "is_tensor_method_or_property"], [1920, 5, 1, "", "resolve_name"], [1920, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1897, 1, 1, "", "Directory"], [1897, 1, 1, "", "EmptyMatchError"], [1897, 1, 1, "", "PackageExporter"], [1897, 1, 1, "", "PackageImporter"], [1897, 1, 1, "", "PackagingError"], [1897, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1897, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1897, 3, 1, "", "__init__"], [1897, 3, 1, "", "add_dependency"], [1897, 3, 1, "", "all_paths"], [1897, 3, 1, "", "close"], [1897, 3, 1, "", "denied_modules"], [1897, 3, 1, "", "deny"], [1897, 3, 1, "", "dependency_graph_string"], [1897, 3, 1, "", "extern"], [1897, 3, 1, "", "externed_modules"], [1897, 3, 1, "", "get_rdeps"], [1897, 3, 1, "", "get_unique_id"], [1897, 3, 1, "", "intern"], [1897, 3, 1, "", "interned_modules"], [1897, 3, 1, "", "mock"], [1897, 3, 1, "", "mocked_modules"], [1897, 3, 1, "", "register_extern_hook"], [1897, 3, 1, "", "register_intern_hook"], [1897, 3, 1, "", "register_mock_hook"], [1897, 3, 1, "", "save_binary"], [1897, 3, 1, "", "save_module"], [1897, 3, 1, "", "save_pickle"], [1897, 3, 1, "", "save_source_file"], [1897, 3, 1, "", "save_source_string"], [1897, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1897, 3, 1, "", "__init__"], [1897, 3, 1, "", "file_structure"], [1897, 3, 1, "", "id"], [1897, 3, 1, "", "import_module"], [1897, 3, 1, "", "load_binary"], [1897, 3, 1, "", "load_pickle"], [1897, 3, 1, "", "load_text"], [1897, 3, 1, "", "python_version"]], "torch.profiler": [[1899, 1, 1, "", "ProfilerAction"], [1899, 1, 1, "", "ProfilerActivity"], [1899, 1, 1, "", "_KinetoProfile"], [1899, 1, 1, "", "profile"], [1899, 5, 1, "", "schedule"], [1899, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1899, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1899, 3, 1, "", "add_metadata"], [1899, 3, 1, "", "add_metadata_json"], [1899, 3, 1, "", "events"], [1899, 3, 1, "", "export_chrome_trace"], [1899, 3, 1, "", "export_memory_timeline"], [1899, 3, 1, "", "export_stacks"], [1899, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1899, 5, 1, "", "is_available"], [1899, 5, 1, "", "mark"], [1899, 5, 1, "", "range_pop"], [1899, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1899, 3, 1, "", "step"]], "torch.quantization": [[1903, 0, 0, "-", "fx"]], "torch.quasirandom": [[1706, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1706, 3, 1, "", "draw"], [1706, 3, 1, "", "draw_base2"], [1706, 3, 1, "", "fast_forward"], [1706, 3, 1, "", "reset"]], "torch.random": [[1904, 5, 1, "", "fork_rng"], [1904, 5, 1, "", "get_rng_state"], [1904, 5, 1, "", "initial_seed"], [1904, 5, 1, "", "manual_seed"], [1904, 5, 1, "", "seed"], [1904, 5, 1, "", "set_rng_state"]], "torch.signal": [[1908, 0, 0, "-", "windows"]], "torch.signal.windows": [[1754, 5, 1, "", "bartlett"], [1755, 5, 1, "", "blackman"], [1756, 5, 1, "", "cosine"], [1757, 5, 1, "", "exponential"], [1758, 5, 1, "", "gaussian"], [1759, 5, 1, "", "general_cosine"], [1760, 5, 1, "", "general_hamming"], [1761, 5, 1, "", "hamming"], [1762, 5, 1, "", "hann"], [1763, 5, 1, "", "kaiser"], [1764, 5, 1, "", "nuttall"]], "torch.sparse": [[1774, 5, 1, "", "addmm"], [1775, 1, 1, "", "check_sparse_tensor_invariants"], [1776, 5, 1, "", "log_softmax"], [1777, 5, 1, "", "mm"], [1778, 5, 1, "", "sampled_addmm"], [1779, 5, 1, "", "softmax"], [1780, 5, 1, "", "spdiags"], [1781, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1775, 3, 1, "", "disable"], [1775, 3, 1, "", "enable"], [1775, 3, 1, "", "is_enabled"]], "torch.special": [[1910, 5, 1, "", "airy_ai"], [1910, 5, 1, "", "bessel_j0"], [1910, 5, 1, "", "bessel_j1"], [1910, 5, 1, "", "digamma"], [1910, 5, 1, "", "entr"], [1910, 5, 1, "", "erf"], [1910, 5, 1, "", "erfc"], [1910, 5, 1, "", "erfcx"], [1910, 5, 1, "", "erfinv"], [1910, 5, 1, "", "exp2"], [1910, 5, 1, "", "expit"], [1910, 5, 1, "", "expm1"], [1910, 5, 1, "", "gammainc"], [1910, 5, 1, "", "gammaincc"], [1910, 5, 1, "", "gammaln"], [1910, 5, 1, "", "i0"], [1910, 5, 1, "", "i0e"], [1910, 5, 1, "", "i1"], [1910, 5, 1, "", "i1e"], [1910, 5, 1, "", "log1p"], [1910, 5, 1, "", "log_ndtr"], [1910, 5, 1, "", "log_softmax"], [1910, 5, 1, "", "logit"], [1910, 5, 1, "", "logsumexp"], [1910, 5, 1, "", "multigammaln"], [1910, 5, 1, "", "ndtr"], [1910, 5, 1, "", "ndtri"], [1910, 5, 1, "", "polygamma"], [1910, 5, 1, "", "psi"], [1910, 5, 1, "", "round"], [1910, 5, 1, "", "scaled_modified_bessel_k0"], [1910, 5, 1, "", "scaled_modified_bessel_k1"], [1910, 5, 1, "", "sinc"], [1910, 5, 1, "", "softmax"], [1910, 5, 1, "", "spherical_bessel_j0"], [1910, 5, 1, "", "xlog1py"], [1910, 5, 1, "", "xlogy"], [1910, 5, 1, "", "zeta"]], "torch.testing": [[1916, 5, 1, "", "assert_allclose"], [1916, 5, 1, "", "assert_close"], [1916, 5, 1, "", "make_tensor"]], "torch.torch": [[1917, 2, 1, "", "default_generator"], [1921, 1, 1, "", "finfo"], [1921, 1, 1, "", "iinfo"]], "torch.utils": [[1917, 0, 0, "-", "backcompat"], [4, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "bottleneck"], [32, 0, 0, "-", "data"], [1917, 0, 0, "-", "hipify"], [1858, 0, 0, "-", "jit"], [1917, 0, 0, "-", "model_dump"], [1864, 0, 0, "-", "model_zoo"], [1914, 0, 0, "-", "tensorboard"]], "torch.utils.benchmark": [[4, 1, 1, "", "CallgrindStats"], [4, 1, 1, "", "FunctionCounts"], [4, 1, 1, "", "Measurement"], [4, 1, 1, "", "Timer"], [4, 0, 0, "-", "examples"], [4, 0, 0, "-", "op_fuzzers"], [4, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[4, 3, 1, "", "as_standardized"], [4, 3, 1, "", "counts"], [4, 3, 1, "", "delta"], [4, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[4, 3, 1, "", "denoise"], [4, 3, 1, "", "filter"], [4, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[4, 3, 1, "", "merge"], [4, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[4, 3, 1, "", "blocked_autorange"], [4, 3, 1, "", "collect_callgrind"], [4, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[4, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[6, 5, 1, "", "checkpoint"], [6, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[26, 5, 1, "", "BuildExtension"], [26, 5, 1, "", "CUDAExtension"], [26, 5, 1, "", "CppExtension"], [26, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [26, 5, 1, "", "include_paths"], [26, 5, 1, "", "is_ninja_available"], [26, 5, 1, "", "load"], [26, 5, 1, "", "load_inline"], [26, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[32, 1, 1, "", "BatchSampler"], [32, 1, 1, "", "ChainDataset"], [32, 1, 1, "", "ConcatDataset"], [32, 1, 1, "", "DataLoader"], [32, 1, 1, "", "Dataset"], [32, 1, 1, "", "IterableDataset"], [32, 1, 1, "", "RandomSampler"], [32, 1, 1, "", "Sampler"], [32, 1, 1, "", "SequentialSampler"], [32, 1, 1, "", "Subset"], [32, 1, 1, "", "SubsetRandomSampler"], [32, 1, 1, "", "TensorDataset"], [32, 1, 1, "", "WeightedRandomSampler"], [32, 0, 0, "-", "datapipes"], [32, 5, 1, "", "default_collate"], [32, 5, 1, "", "default_convert"], [32, 5, 1, "", "get_worker_info"], [32, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[32, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[32, 0, 0, "-", "dataframe"], [32, 0, 0, "-", "iter"], [32, 0, 0, "-", "map"], [32, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[32, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[42, 5, 1, "", "from_dlpack"], [42, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1863, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1864, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1914, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1914, 3, 1, "", "__init__"], [1914, 3, 1, "", "add_audio"], [1914, 3, 1, "", "add_custom_scalars"], [1914, 3, 1, "", "add_embedding"], [1914, 3, 1, "", "add_figure"], [1914, 3, 1, "", "add_graph"], [1914, 3, 1, "", "add_histogram"], [1914, 3, 1, "", "add_hparams"], [1914, 3, 1, "", "add_image"], [1914, 3, 1, "", "add_images"], [1914, 3, 1, "", "add_mesh"], [1914, 3, 1, "", "add_pr_curve"], [1914, 3, 1, "", "add_scalar"], [1914, 3, 1, "", "add_scalars"], [1914, 3, 1, "", "add_text"], [1914, 3, 1, "", "add_video"], [1914, 3, 1, "", "close"], [1914, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"torch": [0, 1, 2, 3, 4, 5, 6, 11, 15, 18, 25, 26, 28, 32, 34, 35, 37, 38, 40, 41, 42, 53, 56, 58, 59, 61, 62, 63, 64, 65, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1661, 1662, 1663, 1664, 1665, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1870, 1871, 1872, 1873, 1878, 1880, 1881, 1884, 1889, 1891, 1893, 1894, 1896, 1897, 1899, 1903, 1904, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "_dynamo": 0, "automat": [1, 2, 32, 1852, 1874, 1881], "mix": [1, 1852, 1874], "precis": [1, 1874, 1878, 1889], "packag": [1, 2, 27, 35, 1867, 1892, 1897], "amp": [1, 1878], "autocast": [1, 1874], "gradient": [1, 2, 63, 1135, 1874, 1875, 1881, 1917], "scale": [1, 1874, 1885], "op": [1, 1857, 1874, 1893, 1917], "refer": [1, 29, 59, 65, 1852, 1854, 1855, 1856, 1865, 1869, 1884, 1894, 1897, 1899, 1900, 1903, 1907, 1915], "elig": 1, "cuda": [1, 3, 11, 28, 29, 202, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1867, 1874, 1878, 1882, 1884, 1888, 1890, 1892], "specif": [1, 32, 1909], "behavior": [1, 32, 1875, 1883], "can": [1, 20, 1875, 1882], "float16": 1, "float32": 1, "promot": [1, 8], "widest": 1, "input": [1, 1868, 1874, 1883], "type": [1, 32, 592, 1854, 1855, 1880, 1893, 1897, 1915, 1921], "prefer": 1, "binary_cross_entropy_with_logit": [1, 1486], "over": [1, 9, 1854], "binary_cross_entropi": [1, 1485], "cpu": [1, 3, 11, 199, 1875, 1877, 1900], "bfloat16": [1, 148], "differenti": [2, 1875], "autograd": [2, 11, 24, 27, 62, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 1869, 1874, 1875, 1880, 1881, 1893, 1905, 1906], "forward": [2, 879, 1880, 1906], "mode": [2, 53, 60, 406, 1287, 1875, 1880, 1883, 1893, 1900, 1906], "function": [2, 35, 41, 56, 58, 59, 61, 63, 65, 72, 78, 79, 878, 879, 880, 881, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 1112, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1852, 1853, 1854, 1855, 1857, 1860, 1862, 1868, 1870, 1871, 1872, 1874, 1875, 1881, 1883, 1893, 1903, 1909, 1910, 1920], "higher": 2, "level": [2, 11, 1903], "api": [2, 11, 27, 29, 38, 46, 59, 62, 65, 1850, 1852, 1855, 1865, 1869, 1877, 1878, 1880, 1884, 1885, 1894, 1897, 1898, 1899, 1900, 1903], "local": [2, 20, 22, 1855, 1875, 1917], "disabl": [2, 32, 1852, 1875, 1917], "comput": [2, 63, 1875, 1889, 1906, 1917], "default": [2, 32, 33, 1854, 1875, 1878, 1883, 1902], "layout": [2, 1912], "manual": 2, "In": [2, 9, 1875, 1876, 1917], "place": [2, 62, 1868, 1875, 1876, 1893, 1917], "oper": [2, 11, 33, 35, 62, 80, 1854, 1855, 1860, 1862, 1868, 1869, 1870, 1875, 1880, 1885, 1892, 1893, 1895, 1900, 1909, 1915, 1917], "tensor": [2, 24, 27, 40, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 1814, 1853, 1857, 1860, 1867, 1868, 1869, 1870, 1875, 1880, 1891, 1893, 1900, 1903, 1909, 1912, 1913, 1915, 1917], "correct": [2, 65, 1875], "check": [2, 20, 65, 1852, 1875, 1884], "variabl": [2, 17, 35, 53, 1852, 1854, 1855, 1878], "deprec": 2, "context": [2, 36, 50, 1906], "method": [2, 45, 46, 49, 54, 1853, 1854, 1857, 1893, 1903, 1909], "mixin": 2, "numer": [2, 1883, 1889, 1901], "profil": [2, 23, 35, 904, 905, 906, 907, 908, 1295, 1296, 1297, 1866, 1885, 1886, 1899], "anomali": 2, "detect": 2, "graph": [2, 14, 22, 23, 28, 65, 899, 900, 901, 902, 903, 990, 1852, 1875, 1878, 1900], "backend": [3, 12, 16, 23, 35, 52, 53, 1852, 1884, 1887, 1900, 1902, 1905], "cudnn": 3, "mp": [3, 11, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1866, 1887], "mkl": 3, "mkldnn": [3, 11], "openmp": 3, "opt_einsum": 3, "xeon": 3, "benchmark": [4, 1890], "util": [4, 5, 6, 11, 22, 26, 32, 35, 42, 59, 61, 1033, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1858, 1863, 1864, 1871, 1903, 1914, 1917, 1919], "bottleneck": 5, "checkpoint": [6, 33, 37], "pytorch": [7, 8, 9, 10, 11, 16, 19, 20, 23, 27, 34, 35, 62, 1850, 1852, 1853, 1857, 1875, 1878, 1880, 1890, 1891, 1893, 1898], "govern": [7, 10, 11], "build": [7, 8, 11, 1877, 1885, 1886, 1892], "ci": [7, 11], "how": [7, 14, 20, 33, 60, 1849, 1875, 1880, 1896, 1897], "add": [7, 10, 71, 90, 674], "new": [7, 8, 10], "maintain": [7, 10, 11], "contribut": [8, 1893], "guid": 8, "process": [8, 10, 32, 50, 1874], "get": [8, 14, 16, 38, 1893], "start": [8, 16, 38, 50, 1296], "propos": 8, "featur": [8, 1885, 1886], "report": [8, 1882], "issu": [8, 23, 1852], "implement": [8, 43, 52, 54, 1849, 1879, 1883, 1893, 1901, 1907], "fix": [8, 53, 60, 253, 1093], "bug": 8, "ad": [8, 1880, 1893], "tutori": [8, 11, 1897, 1898, 1905], "improv": [8, 1886], "document": [8, 38, 1850], "particip": 8, "onlin": 8, "discuss": 8, "submit": 8, "pull": 8, "request": 8, "open": 8, "review": 8, "code": [8, 14, 16, 65, 1852, 1878, 1897], "readabl": 8, "test": [8, 20, 1855, 1880, 1897, 1916], "case": [8, 1852], "make": [8, 10, 17, 75], "codebas": 8, "more": [8, 18, 58, 1905], "robust": 8, "triag": 8, "about": [8, 1875, 1905], "sourc": [8, 1890, 1892, 1897], "develop": [8, 1850, 1893], "common": [8, 35, 65, 1885, 1900], "mistak": 8, "To": 8, "avoid": [8, 1888, 1890, 1893, 1897], "frequent": [8, 14, 1852, 1882, 1893, 1900], "ask": [8, 14, 1852, 1882, 1893, 1900], "question": [8, 14, 1852, 1882, 1893, 1900], "On": [8, 33, 1854], "python": [8, 9, 17, 62, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1890, 1893], "doc": [8, 11, 1884], "c": [8, 11, 27, 1875, 1880, 1884, 1891, 1893], "overview": [8, 12, 17, 21, 29, 65, 1894, 1897, 1899, 1909], "design": [9, 1855, 1879, 1905, 1906, 1907], "philosophi": 9, "principl": [9, 10], "1": [9, 53, 60, 1852, 1881], "usabl": 9, "perform": [9, 11, 20, 23, 1886, 1891], "2": [9, 19, 20, 23, 60, 1852, 1878, 1881, 1882], "simpl": [9, 1854, 1855, 1886, 1906], "easi": 9, "3": [9, 53, 60], "first": [9, 1897], "best": [9, 1878, 1888, 1900], "class": [9, 45, 65, 1852, 1854, 1855, 1857, 1893, 1896, 1897, 1915], "languag": [9, 1850, 1852, 1854, 1855, 1856], "interoper": 9, "mechan": [10, 1872, 1875, 1883], "summari": [10, 17, 1900], "modul": [10, 11, 19, 59, 61, 65, 1414, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1852, 1853, 1854, 1855, 1857, 1871, 1875, 1880, 1886, 1891, 1897, 1900], "core": [10, 11, 1851], "lead": [10, 11], "bdfl": [10, 11], "nomin": [10, 1855], "confirm": 10, "remov": [10, 1624, 1868], "The": [10, 65, 1855, 1875], "re": [10, 1897], "scope": 10, "project": 10, "decis": 10, "uncontroversi": 10, "chang": [10, 14, 53, 60], "controversi": 10, "gener": [10, 28, 36, 62, 65, 81, 1876, 1881, 1890, 1900, 1901, 1917], "polici": 10, "faq": [10, 1892], "respons": 11, "nn": [11, 19, 59, 61, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1854, 1855, 1871, 1872, 1873, 1875, 1878, 1880, 1891, 1903], "optim": [11, 16, 18, 39, 1661, 1662, 1663, 1664, 1665, 1874, 1875, 1896, 1905, 1906, 1917], "compil": [11, 14, 15, 18, 23, 61, 942, 1850, 1878], "jit": [11, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1852, 1855, 1858], "torchscript": [11, 27, 1852, 1853, 1854, 1855, 1857, 1877, 1885, 1895, 1897], "fx": [11, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 1886, 1900, 1903, 1919], "torchdynamo": [11, 13, 14, 23, 1879, 1893], "distribut": [11, 14, 35, 37, 38, 39, 40, 41, 53, 1871, 1872, 1879, 1884, 1886, 1905, 1906], "rng": 11, "multiprocess": [11, 50, 1867, 1878, 1888, 1892], "dataload": [11, 1890], "linear": [11, 24, 721, 722, 745, 753, 770, 1119, 1401, 1530, 1871, 1872, 1889, 1909], "algebra": [11, 24, 1889, 1909], "linalg": [11, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1860, 1889], "spars": [11, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1871, 1872, 1909], "nestedtensor": 11, "nest": [11, 1870], "maskedtensor": [11, 1862], "mask": [11, 1862], "fast": [11, 56, 1883, 1906], "fourier": [11, 56], "transform": [11, 22, 41, 56, 58, 59, 61, 63, 65, 1457, 1871, 1880, 1886], "fft": [11, 56, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092], "inductor": [11, 14], "gpu": [11, 35, 1871, 1872, 1874, 1882, 1898], "triton": 11, "nvfuser": 11, "amd": [11, 1889], "rocm": [11, 1884], "hip": [11, 1884], "tool": [11, 28, 1901, 1909], "c10": 11, "dispatch": 11, "onnx": [11, 73, 74, 77, 1893, 1894, 1895], "export": [11, 14, 1893, 1897], "mobil": 11, "edg": [11, 1852, 1897], "model": [11, 27, 1849, 1874, 1882, 1885, 1896, 1897, 1898, 1900, 1903], "compress": [11, 1909], "window": [11, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1892, 1908], "appl": 11, "m1": 11, "powerpc": 11, "librari": [11, 1850, 1859, 1890], "xla": 11, "torchserv": 11, "torchvis": [11, 60], "torchtext": 11, "torchaudio": 11, "torchrec": 11, "torchx": 11, "torchdata": 11, "torcharrow": 11, "custom": [12, 44, 54, 65, 78, 1855, 1874, 1878, 1880, 1881, 1886, 1893, 1896, 1897, 1900], "regist": [12, 1875], "after": 12, "aotautograd": [12, 69], "exampl": [12, 47, 65, 1874, 1879, 1880, 1881, 1893, 1906], "debug": [12, 23, 33, 35, 65, 1852, 1900, 1901], "speedi": 12, "compos": [12, 58, 63], "deeper": 13, "dive": 13, "what": [13, 20, 33, 58, 60, 63, 1862, 1875, 1897], "i": [13, 14, 20, 63, 1862, 1875, 1897], "guard": [13, 17], "dynamo": [13, 14, 75], "do": [13, 14, 16, 1897], "you": [14, 16], "support": [14, 19, 80, 1853, 1855, 1862, 1868, 1869, 1870, 1881, 1893, 1895, 1900, 1909], "still": 14, "need": [14, 16, 1874], "whole": [14, 1878], "why": [14, 16, 58, 63, 1878, 1883, 1897, 1909], "my": [14, 20, 1849, 1875, 1882, 1897], "crash": 14, "error": [14, 23, 45, 1882, 1892, 1900, 1901], "torchinductor": [14, 20, 23], "slow": 14, "excess": [14, 23], "recompil": [14, 23], "ar": [14, 58, 63, 1849, 1875, 1897], "product": [14, 63, 1860], "speed": [14, 1892], "up": [14, 53], "am": 14, "see": [14, 1897], "speedup": 14, "break": [14, 23, 1854, 1855], "identifi": [14, 23, 1855], "caus": [14, 23], "didn": 14, "t": [14, 559, 1809, 1855, 1882], "when": [14, 1855, 1875, 1880, 1893, 1900, 1909], "incorrect": 14, "result": 14, "oom": 14, "exist": 16, "anoth": [16, 1881], "wai": 16, "cach": [17, 1604, 1849, 1878, 1884], "frame": 17, "evalu": [17, 1875, 1883], "pep": 17, "523": 17, "instructiontransl": 17, "troubleshoot": [18, 23], "gotcha": [18, 1881], "learn": [18, 1896], "0": [19, 20, 23], "nnmodul": 19, "hook": [19, 33, 1875, 1886], "__call__": 19, "usag": [19, 29, 38, 53, 1878, 1881, 1885, 1886, 1892], "limit": [19, 62, 65, 1849, 1881, 1893], "state_dict": [19, 1663], "dashboard": 20, "read": [20, 58, 1893], "measur": 20, "pr": 20, "affect": 20, "": [20, 60, 1897], "befor": 20, "merg": 20, "run": [20, 1849], "ani": [20, 111, 688, 1855], "technic": 21, "write": [22, 54, 65, 1875, 1880, 1893], "aten": [22, 1851, 1893], "ir": [22, 71, 1851], "pass": [22, 70, 76, 1855, 1878, 1888, 1900, 1906], "One": [22, 1892], "x": 22, "none": 22, "inform": [22, 1883, 1905], "subgraph": [22, 65], "rewrit": [22, 65], "manag": [22, 28, 36, 1867, 1878, 1884, 1897], "partition": 22, "matcher": 22, "capabl": 22, "base": [22, 1896], "titl": 23, "diagnos": 23, "runtim": [23, 1877, 1882], "minifi": 23, "access": [23, 24, 1854, 1897], "us": [23, 33, 35, 65, 1854, 1875, 1878, 1880, 1883, 1893, 1896, 1897, 1898, 1900, 1909], "torch_compile_debug": 23, "accuraci": [23, 1889, 1900, 1901], "file": [23, 35, 1867, 1897], "an": [23, 1849, 1893, 1896, 1897], "complex": [24, 944, 1875, 1883], "number": [24, 28, 53, 1875, 1877, 1882, 1890, 1917], "creat": [24, 1852, 1869], "transit": [24, 53], "from": [24, 53, 61, 65, 1849, 1868, 1892, 1893, 1897], "old": 24, "represent": 24, "real": [24, 474, 1717, 1883], "imag": [24, 303, 1152], "angl": [24, 110, 687], "ab": [24, 82, 670], "serial": [24, 1891, 1917], "__config__": 25, "cpp_extens": 26, "extend": [27, 43, 1880, 1881], "extens": [27, 28, 1880, 1885, 1892], "author": [27, 65], "random": [28, 32, 62, 1882, 1890, 1904, 1917], "commun": [28, 33, 35, 1850], "collect": [28, 35], "stream": [28, 29, 961, 1030, 1878], "event": [28, 44, 46, 958], "beta": [28, 41], "memori": [28, 32, 1878, 1882, 1884, 1886], "nvidia": [28, 1889], "nvtx": [28, 1015, 1016, 1017], "jiter": [28, 998, 999], "sanit": [28, 29], "prototyp": [28, 1900, 1901], "data": [32, 62, 1855, 1879, 1882, 1893, 1901, 1915], "dataset": 32, "map": [32, 1884], "style": 32, "iter": [32, 1854], "load": [32, 1189, 1253, 1849, 1891, 1897, 1900], "order": [32, 1875], "sampler": 32, "batch": [32, 60, 1889, 1896], "non": [32, 65, 1871, 1872, 1875, 1878, 1889, 1897, 1900], "work": [32, 59, 1874, 1882, 1909], "collate_fn": 32, "singl": [32, 53, 1874], "multi": [32, 35, 53, 1871, 1872], "platform": 32, "pin": [32, 1878], "ddp": 33, "doe": [33, 1875], "powersgd": 33, "state": [33, 1886, 1897], "acknowledg": [33, 1898], "deploi": 34, "ha": 34, "been": 34, "move": 34, "multipi": 34, "come": [35, 1875], "which": [35, 1875], "environ": [35, 53, 1878, 1885, 1897], "choos": 35, "network": [35, 1878, 1882, 1886], "interfac": [35, 1884], "other": [35, 1871, 1890, 1897, 1909, 1917], "nccl": [35, 1878], "basic": [35, 1855, 1869, 1881, 1905, 1915], "initi": [35, 1871, 1886, 1915], "tcp": 35, "share": [35, 1867, 1878, 1897, 1907], "system": [35, 1855, 1867, 1881], "post": [35, 1900], "kei": [35, 1892], "valu": [35, 603, 1854, 1855, 1889, 1902, 1907], "store": [35, 52], "group": 35, "point": [35, 1885], "synchron": [35, 1031, 1301], "asynchron": [35, 1855, 1878, 1888], "third": 35, "parti": 35, "launch": [35, 53], "spawn": [35, 1867], "applic": 35, "monitor": [35, 1865], "barrier": 35, "torch_distributed_debug": 35, "log": [35, 361, 1255, 1885], "join": [36, 1917], "elast": [38, 43, 53], "advanc": [38, 1886], "plugin": 38, "parallel": [40, 1578, 1878, 1879, 1882, 1898, 1917], "probabl": 41, "score": 41, "pathwis": 41, "deriv": [41, 1875], "exponentialfamili": 41, "bernoulli": [41, 146, 912], "binomi": 41, "categor": 41, "cauchi": 41, "chi2": 41, "continuousbernoulli": 41, "dirichlet": 41, "exponenti": [41, 1757], "fishersnedecor": 41, "gamma": 41, "geometr": 41, "gumbel": 41, "halfcauchi": 41, "halfnorm": 41, "independ": 41, "kumaraswami": 41, "lkjcholeski": 41, "laplac": 41, "lognorm": 41, "lowrankmultivariatenorm": 41, "mixturesamefamili": 41, "multinomi": [41, 412, 1304], "multivariatenorm": 41, "negativebinomi": 41, "normal": [41, 1549, 1642, 1871, 1896], "onehotcategor": 41, "pareto": 41, "poisson": [41, 1692], "relaxedbernoulli": 41, "logitrelaxedbernoulli": 41, "relaxedonehotcategor": 41, "studentt": 41, "transformeddistribut": 41, "uniform": 41, "vonmis": 41, "weibul": 41, "wishart": 41, "kl": 41, "diverg": [41, 1857], "constraint": [41, 1878], "registri": [41, 52], "dlpack": 42, "agent": 43, "server": [43, 52, 54], "concept": 43, "watchdog": 43, "launcher": 44, "rendezv": [44, 52, 53], "handler": [44, 49, 52, 1882], "metric": [44, 49], "propag": [45, 1869], "object": [46, 1897], "torchelast": 48, "kubernet": 48, "multipl": [50, 1874, 1878, 1880, 1898], "worker": [50, 53, 1882], "quickstart": 51, "except": [52, 1882], "dynam": [52, 62, 65, 1900, 1903], "c10d": 52, "etcd": 52, "legaci": 52, "torchrun": 53, "node": [53, 71, 74, 77, 899, 900, 901, 902, 903, 1875], "stack": [53, 1793, 1900], "fault": 53, "toler": 53, "size": [53, 526, 1870], "failur": [53, 68], "min": [53, 403, 1284], "max": [53, 399, 1279], "4": [53, 60], "membership": [53, 1855], "note": [53, 1850, 1855, 1878, 1900, 1905], "definit": [53, 1855], "deploy": [53, 1885], "import": [53, 1849, 1892, 1897], "notic": [53, 1849], "expir": 54, "timer": 54, "client": 54, "train": [55, 1874, 1886, 1888, 1900], "script": [55, 1193, 1852, 1892, 1893], "helper": 56, "fullyshardeddataparallel": 57, "func": [58, 59, 61, 63, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1880, 1881], "patch": [60, 1897], "norm": [60, 444, 1238, 1641], "happen": 60, "option": [60, 1854, 1877, 1892, 1896], "batchnorm": 60, "paramet": [60, 1595, 1854, 1896], "functorch": [60, 61], "eval": [60, 1875], "migrat": [61, 1852], "make_funct": 61, "combine_state_for_ensembl": 61, "ux": 62, "vmap": [62, 63, 881, 1123, 1842, 1880, 1881], "mutat": [62, 1917], "arbitrari": [62, 1897], "structur": [62, 1855], "out": [62, 1868, 1882], "depend": [62, 1897, 1906], "control": [62, 65, 1890], "flow": [62, 65, 1900], "item": [62, 344], "shape": [62, 77, 1893], "nonzero": [62, 443, 1640], "friend": 62, "whirlwind": 63, "tour": 63, "grad": [63, 282, 896, 1113, 1875, 1878], "auto": 63, "vector": 63, "vjp": [63, 895, 1122], "jacobian": [63, 892], "jvp": [63, 880, 893, 1118, 1881], "jacrev": [63, 1117], "jacfwd": [63, 1116], "hessian": [63, 890, 1115], "futur": 64, "A": [65, 1886], "quick": 65, "primer": 65, "manipul": [65, 1869], "direct": 65, "With": [65, 1857], "replace_pattern": 65, "proxi": 65, "retrac": 65, "interpret": [65, 1852], "pattern": [65, 1854, 1893, 1897], "introduct": [65, 1862, 1870, 1900], "pitfal": [65, 1893], "pdb": 65, "print": [65, 1854, 1855], "to_fold": 65, "graphmodul": 65, "avail": 65, "debugg": 65, "symbol": [65, 72, 78, 79, 1893, 1900, 1917], "trace": [65, 580, 1197, 1819, 1852, 1893, 1899, 1900], "static": [65, 1893, 1900], "tracer": [65, 67, 68, 1852], "leaf": 65, "miscellanea": 65, "diagsys0001": 66, "arg": 66, "format": [66, 1897], "too": 66, "verbos": 66, "fxe0001": 67, "success": 67, "fxe0002": 68, "fxe0003": 69, "frontend": [69, 75], "fxe0004": 70, "convert": [70, 786], "neg": [70, 431, 433, 1316, 1317], "sigmoid": [70, 515, 748, 1444, 1565, 1752], "fxe0005": 71, "fxe0006": 72, "atenlib": [72, 73], "fxe0007": 73, "fxe0008": 74, "fxe0009": 75, "fxe0010": 76, "poe0001": 77, "miss": [77, 78, 79], "infer": [77, 1869, 1875, 1877, 1891], "poe0002": 78, "poe0003": 79, "standard": 79, "poe0004": 80, "newer": 80, "opset": 80, "version": [80, 1891], "abs_": 83, "absolut": [84, 671], "absolute_": 85, "aco": [86, 672], "acos_": 87, "acosh": [88, 673], "acosh_": 89, "add_": 91, "addbmm": [92, 675], "addbmm_": 93, "addcdiv": [94, 676], "addcdiv_": 95, "addcmul": [96, 677], "addcmul_": 97, "addmm": [98, 678, 1774], "addmm_": 99, "addmv": [100, 679], "addmv_": 101, "addr": [102, 680], "addr_": 103, "adjoint": [104, 681], "all": [105, 682, 1893, 1896], "allclos": [106, 683], "amax": [107, 684], "amin": [108, 685], "aminmax": [109, 686], "apply_": 112, "arcco": [113, 855], "arccos_": 114, "arccosh": [115, 856], "arccosh_": 116, "arcsin": [117, 857], "arcsin_": 118, "arcsinh": [119, 858], "arcsinh_": 120, "arctan": [121, 859], "arctan2": [122, 860], "arctan2_": 123, "arctan_": 124, "arctanh": [125, 861], "arctanh_": 126, "argmax": [127, 863], "argmin": [128, 864], "argsort": [129, 865], "argwher": [130, 866], "as_strid": [131, 867], "as_subclass": 132, "asin": [133, 870], "asin_": 134, "asinh": [135, 871], "asinh_": 136, "atan": [137, 872], "atan2": [138, 873], "atan2_": 139, "atan_": 140, "atanh": [141, 874], "atanh_": 142, "backward": [143, 878, 882, 1875, 1876, 1878, 1883, 1906], "baddbmm": [144, 910], "baddbmm_": 145, "bernoulli_": 147, "bincount": [149, 913], "bitwise_and": [150, 914], "bitwise_and_": 151, "bitwise_left_shift": [152, 915], "bitwise_left_shift_": 153, "bitwise_not": [154, 916], "bitwise_not_": 155, "bitwise_or": [156, 917], "bitwise_or_": 157, "bitwise_right_shift": [158, 918], "bitwise_right_shift_": 159, "bitwise_xor": [160, 919], "bitwise_xor_": 161, "bmm": [162, 922], "bool": 163, "broadcast_to": [164, 925], "byte": 165, "cauchy_": 166, "ccol_indic": 167, "cdoubl": 168, "ceil": [169, 931], "ceil_": 170, "cfloat": 171, "chalf": 172, "char": 173, "choleski": [174, 933, 1211], "cholesky_invers": [175, 934], "cholesky_solv": [176, 935], "chunk": [177, 936], "clamp": [178, 760, 937], "clamp_": 179, "clip": [180, 938, 1874], "clip_": 181, "clone": [182, 939], "coalesc": 183, "col_indic": 184, "conj": [185, 947], "conj_phys": [186, 948], "conj_physical_": 187, "contigu": 188, "copy_": 189, "copysign": [190, 949], "copysign_": 191, "corrcoef": [192, 950], "co": [193, 951], "cos_": 194, "cosh": [195, 952], "cosh_": 196, "count_nonzero": [197, 953], "cov": [198, 954], "cross": [200, 955, 1214, 1875], "crow_indic": 201, "cummax": [203, 1034], "cummin": [204, 1035], "cumprod": [205, 1036], "cumprod_": 206, "cumsum": [207, 1037], "cumsum_": 208, "data_ptr": 209, "deg2rad": [210, 1039], "dense_dim": 211, "dequant": [212, 1040, 1900], "det": [213, 1041, 1215], "detach": 214, "detach_": 215, "devic": [216, 977, 1878, 1889, 1912], "diag": [217, 1042], "diag_emb": [218, 1043], "diagflat": [219, 1044], "diagon": [220, 1045, 1216], "diagonal_scatt": [221, 1046], "diff": [222, 1047], "digamma": [223, 1048], "digamma_": 224, "dim": [225, 1868], "dist": [226, 1049], "div": [227, 1050, 1891], "div_": 228, "divid": [229, 1051], "divide_": 230, "dot": [231, 1052], "doubl": 232, "dsplit": [233, 1053], "element_s": 234, "eq": [235, 1060], "eq_": 236, "equal": [237, 1061], "erf": [238, 1062], "erf_": 239, "erfc": [240, 1063], "erfc_": 241, "erfinv": [242, 1064], "erfinv_": 243, "exp": [244, 1065], "exp_": 245, "expand": 246, "expand_a": 247, "expm1": [248, 1067], "expm1_": 249, "exponential_": 250, "fill_": 251, "fill_diagonal_": 252, "fix_": 254, "flatten": [255, 1094, 1360], "flip": [256, 1095], "fliplr": [257, 1096], "flipud": [258, 1097], "float": [259, 1891], "float_pow": [260, 1098], "float_power_": 261, "floor": [262, 1099], "floor_": 263, "floor_divid": [264, 1100], "floor_divide_": 265, "fmax": [266, 1101], "fmin": [267, 1102], "fmod": [268, 1103], "fmod_": 269, "frac": [270, 1104], "frac_": 271, "frexp": [272, 1105], "gather": [273, 970, 1124], "gcd": [274, 1125], "gcd_": 275, "ge": [276, 1126], "ge_": 277, "geometric_": 278, "geqrf": [279, 1127], "ger": [280, 1128], "get_devic": 281, "greater": [283, 1136], "greater_": 284, "greater_equ": [285, 1137], "greater_equal_": 286, "gt": [287, 1138], "gt_": 288, "half": 289, "hardshrink": [290, 1370, 1516], "heavisid": [291, 1141], "histc": [292, 1142], "histogram": [293, 1143], "hsplit": [294, 1145], "hypot": [295, 1148], "hypot_": 296, "i0": [297, 1149], "i0_": 298, "igamma": [299, 1150], "igamma_": 300, "igammac": [301, 1151], "igammac_": 302, "index_add": [304, 1153], "index_add_": 305, "index_copi": [306, 1154], "index_copy_": 307, "index_fil": 308, "index_fill_": 309, "index_put": 310, "index_put_": 311, "index_reduc": [312, 1155], "index_reduce_": 313, "index_select": [314, 1156], "indic": [315, 1850], "inner": [316, 1159], "int": 317, "int_repr": 318, "invers": [319, 1160, 1860], "is_coalesc": 320, "is_complex": [321, 1161], "is_conj": [322, 1162], "is_contigu": 323, "is_cuda": 324, "is_floating_point": [325, 1164], "is_infer": 326, "is_leaf": 327, "is_meta": 328, "is_pin": 329, "is_quant": 330, "is_set_to": 331, "is_shar": 332, "is_sign": 333, "is_spars": 334, "is_sparse_csr": 335, "isclos": [336, 1171], "isfinit": [337, 1172], "isinf": [338, 1174], "isnan": [339, 1175], "isneginf": [340, 1176], "isposinf": [341, 1177], "isreal": [342, 1178], "istft": [343, 1179], "items": 345, "kthvalu": [346, 1203], "lcm": [347, 1204], "lcm_": 348, "ldexp": [349, 1205], "ldexp_": 350, "le": [351, 1206], "le_": 352, "lerp": [353, 1207], "lerp_": 354, "less": [355, 1208], "less_": 356, "less_equ": [357, 1209], "less_equal_": 358, "lgamma": [359, 1210], "lgamma_": 360, "log10": [362, 1256], "log10_": 363, "log1p": [364, 1257], "log1p_": 365, "log2": [366, 1258], "log2_": 367, "log_": 368, "log_normal_": 369, "logaddexp": [370, 1259], "logaddexp2": [371, 1260], "logcumsumexp": [372, 1261], "logdet": [373, 1262], "logical_and": [374, 1263], "logical_and_": 375, "logical_not": [376, 1264], "logical_not_": 377, "logical_or": [378, 1265], "logical_or_": 379, "logical_xor": [380, 1266], "logical_xor_": 381, "logit": [382, 1267], "logit_": 383, "logsumexp": [384, 1269], "long": 385, "lt": [386, 1270], "lt_": 387, "lu": [388, 1228, 1271], "lu_solv": [389, 1231, 1272], "map_": 390, "masked_fil": 391, "masked_fill_": 392, "masked_scatt": 393, "masked_scatter_": 394, "masked_select": [395, 1275], "matmul": [396, 1232, 1276], "matrix_exp": [397, 1233, 1277], "matrix_pow": [398, 1235, 1278], "maximum": [400, 1280], "mean": [401, 1281], "median": [402, 1282], "minimum": [404, 1285], "mm": [405, 1286, 1777], "moveaxi": [407, 1288], "movedim": [408, 1289], "msort": [409, 1302], "mul": [410, 1303], "mul_": 411, "multipli": [413, 1305], "multiply_": 414, "mv": [415, 1306], "mvlgamma": [416, 1307], "mvlgamma_": 417, "nan_to_num": [418, 1308], "nan_to_num_": 419, "nanmean": [420, 1309], "nanmedian": [421, 1310], "nanquantil": [422, 1311], "nansum": [423, 1312], "narrow": [424, 1313], "narrow_copi": [425, 1314], "nbyte": 426, "ndim": 427, "ndimens": 428, "ne": [429, 1315], "ne_": 430, "neg_": 432, "negative_": 434, "nelement": 435, "new_empti": 436, "new_ful": 437, "new_on": 438, "new_tensor": 439, "new_zero": 440, "nextaft": [441, 1318], "nextafter_": 442, "normal_": 445, "not_equ": [446, 1643], "not_equal_": 447, "numel": [448, 1644], "numpi": [449, 1893], "orgqr": [450, 1686], "ormqr": [451, 1687], "outer": [452, 1688], "permut": [453, 1690, 1868], "pin_memori": 454, "pinvers": [455, 1691], "polygamma": [456, 1694], "polygamma_": 457, "posit": [458, 1695], "pow": [459, 1696], "pow_": 460, "prod": [461, 1697], "put_": 462, "q_per_channel_axi": 463, "q_per_channel_scal": 464, "q_per_channel_zero_point": 465, "q_scale": 466, "q_zero_point": 467, "qr": [468, 1240, 1699], "qscheme": 469, "quantil": [470, 1700], "rad2deg": [471, 1707], "random_": 472, "ravel": [473, 1716], "reciproc": [475, 1718], "reciprocal_": 476, "record_stream": 477, "register_hook": [478, 902], "remaind": [479, 1719], "remainder_": 480, "renorm": [481, 1720], "renorm_": 482, "repeat": 483, "repeat_interleav": [484, 1721], "requires_grad": [485, 1875], "requires_grad_": 486, "reshap": [487, 1722], "reshape_a": 488, "resize_": 489, "resize_as_": 490, "resolve_conj": [491, 1723], "resolve_neg": [492, 1724], "retain_grad": 493, "retains_grad": 494, "roll": [495, 1726], "rot90": [496, 1727], "round": [497, 1728], "round_": 498, "row_indic": 499, "rsqrt": [500, 1730], "rsqrt_": 501, "scatter": [502, 972, 1732], "scatter_": 503, "scatter_add": [504, 1733], "scatter_add_": 505, "scatter_reduc": [506, 1734], "scatter_reduce_": 507, "select": [508, 1737, 1862], "select_scatt": [509, 1738], "set_": 510, "sgn": [511, 1751], "sgn_": 512, "share_memory_": 513, "short": 514, "sigmoid_": 516, "sign": [517, 1753], "sign_": 518, "signbit": [519, 1765], "sin": [520, 1766], "sin_": 521, "sinc": [522, 1767], "sinc_": 523, "sinh": [524, 1768], "sinh_": 525, "slice_scatt": [527, 1769], "slogdet": [528, 1241, 1770], "smm": [529, 1771], "softmax": [530, 1447, 1569, 1772, 1779], "sort": [531, 1773], "sparse_dim": 532, "sparse_mask": 533, "sparse_resize_": 534, "sparse_resize_and_clear_": 535, "split": [536, 1788], "sqrt": [537, 1789], "sqrt_": 538, "squar": [539, 1790], "square_": 540, "squeez": [541, 1791], "squeeze_": 542, "sspaddmm": [543, 1792], "std": [544, 1794], "stft": [545, 1796], "storag": [546, 1911], "storage_offset": 547, "storage_typ": 548, "stride": 549, "sub": [550, 1797], "sub_": 551, "subtract": [552, 1798], "subtract_": 553, "sum": [554, 1781, 1799, 1871], "sum_to_s": 555, "svd": [556, 1245, 1800], "swapax": [557, 1802], "swapdim": [558, 1803], "t_": 560, "take": [561, 1810, 1896], "take_along_dim": [562, 1811], "tan": [563, 1812], "tan_": 564, "tanh": [565, 1454, 1574, 1813], "tanh_": 566, "tensor_split": [567, 1815], "tile": [568, 1817], "to_dens": 570, "to_mkldnn": 571, "to_spars": 572, "to_sparse_bsc": 573, "to_sparse_bsr": 574, "to_sparse_coo": 575, "to_sparse_csc": 576, "to_sparse_csr": 577, "tolist": 578, "topk": [579, 1818], "transpos": [581, 1820], "transpose_": 582, "triangular_solv": [583, 1823], "tril": [584, 1824], "tril_": 585, "triu": [586, 1826], "triu_": 587, "true_divid": [588, 1828], "true_divide_": 589, "trunc": [590, 1829], "trunc_": 591, "type_a": 593, "unbind": [594, 1830, 1870], "unflatten": [595, 1464, 1831], "unfold": [596, 1465, 1581], "uniform_": 597, "uniqu": [598, 1832], "unique_consecut": [599, 1833], "unsqueez": [600, 1834], "unsqueeze_": 601, "untyped_storag": 602, "var": [604, 1837], "vdot": [605, 1839], "view": [606, 1862, 1891, 1913], "view_a": 607, "vsplit": [608, 1843], "where": [609, 1845, 1849], "xlogi": [610, 1846], "xlogy_": 611, "zero_": 612, "_assert": 613, "_foreach_ab": 614, "_foreach_abs_": 615, "_foreach_aco": 616, "_foreach_acos_": 617, "_foreach_asin": 618, "_foreach_asin_": 619, "_foreach_atan": 620, "_foreach_atan_": 621, "_foreach_ceil": 622, "_foreach_ceil_": 623, "_foreach_co": 624, "_foreach_cos_": 625, "_foreach_cosh": 626, "_foreach_cosh_": 627, "_foreach_erf": 628, "_foreach_erf_": 629, "_foreach_erfc": 630, "_foreach_erfc_": 631, "_foreach_exp": 632, "_foreach_exp_": 633, "_foreach_expm1": 634, "_foreach_expm1_": 635, "_foreach_floor": 636, "_foreach_floor_": 637, "_foreach_frac": 638, "_foreach_frac_": 639, "_foreach_lgamma": 640, "_foreach_lgamma_": 641, "_foreach_log": 642, "_foreach_log10": 643, "_foreach_log10_": 644, "_foreach_log1p": 645, "_foreach_log1p_": 646, "_foreach_log2": 647, "_foreach_log2_": 648, "_foreach_log_": 649, "_foreach_neg": 650, "_foreach_neg_": 651, "_foreach_reciproc": 652, "_foreach_reciprocal_": 653, "_foreach_round": 654, "_foreach_round_": 655, "_foreach_sigmoid": 656, "_foreach_sigmoid_": 657, "_foreach_sin": 658, "_foreach_sin_": 659, "_foreach_sinh": 660, "_foreach_sinh_": 661, "_foreach_sqrt": 662, "_foreach_sqrt_": 663, "_foreach_tan": 664, "_foreach_tan_": 665, "_foreach_trunc": 666, "_foreach_trunc_": 667, "_foreach_zero_": 668, "_log": [669, 1861], "set_log": 669, "bnrelu2d": [689, 712], "bnrelu3d": [690, 713], "convbn1d": [691, 701], "convbn2d": [692, 702], "convbn3d": [693, 703], "convbnrelu1d": [694, 704], "convbnrelu2d": [695, 705], "convbnrelu3d": [696, 706], "convrelu1d": [697, 714], "convrelu2d": [698, 707, 715], "convrelu3d": [699, 708, 716], "linearrelu": [700, 709, 717, 718], "freeze_bn_stat": 710, "update_bn_stat": 711, "conv2d": [719, 728, 762, 1343, 1489], "conv3d": [720, 729, 763, 1344, 1490], "lstm": [723, 751, 1384, 1890], "multiheadattent": [724, 1420], "batchnorm2d": [725, 1333], "batchnorm3d": [726, 1334], "conv1d": [727, 761, 1342, 1488], "convtranspose1d": [730, 1345], "convtranspose2d": [731, 1346], "convtranspose3d": [732, 1347], "elu": [733, 764, 1356, 1502], "embed": [734, 1357, 1504], "embeddingbag": [735, 1358], "fxfloatfunct": 736, "floatfunct": 737, "groupnorm": [738, 1369], "hardswish": [739, 766, 1372, 1518], "instancenorm1d": [740, 1377], "instancenorm2d": [741, 1378], "instancenorm3d": [742, 1379], "layernorm": [743, 1386], "leakyrelu": [744, 1400], "qfunction": 746, "relu6": [747, 1434, 1559], "gru": [749, 1366], "grucel": [750, 1367], "lstmcell": [752, 1385], "rnncell": [754, 1431], "adaptive_avg_pool2d": [755, 1473], "adaptive_avg_pool3d": [756, 1474], "avg_pool2d": [757, 1481], "avg_pool3d": [758, 1482], "celu": [759, 1336, 1487], "hardsigmoid": [765, 1371, 1517], "hardtanh": [767, 1373, 1519], "interpol": [768, 1524], "leaky_relu": [769, 1528], "max_pool1d": [771, 1537], "max_pool2d": [772, 1538], "threshold": [773, 1456, 1576], "upsampl": [774, 1466, 1582], "upsample_bilinear": [775, 1583], "upsample_nearest": [776, 1584], "dequantstub": 777, "quantstub": 778, "quantwrapp": 779, "add_quant_dequ": 780, "backendconfig": 781, "backendpatternconfig": 782, "dtypeconfig": 783, "dtypewithconstraint": 784, "observationtyp": 785, "default_eval_fn": 787, "fakequant": [788, 1900], "fakequantizebas": 789, "fixedqparamsfakequant": 790, "fusedmovingavgobsfakequant": 791, "default_fake_qu": 792, "default_fused_act_fake_qu": 793, "default_fused_per_channel_wt_fake_qu": 794, "default_fused_wt_fake_qu": 795, "default_histogram_fake_qu": 796, "default_per_channel_weight_fake_qu": 797, "default_weight_fake_qu": 798, "disable_fake_qu": 799, "disable_observ": 800, "enable_fake_qu": 801, "enable_observ": 802, "fuse_modul": 803, "convertcustomconfig": 804, "fusecustomconfig": 805, "preparecustomconfig": 806, "standalonemoduleconfigentri": 807, "histogramobserv": 808, "minmaxobserv": 809, "movingaverageminmaxobserv": 810, "movingaverageperchannelminmaxobserv": 811, "noopobserv": 812, "observerbas": 813, "perchannelminmaxobserv": 814, "placeholderobserv": 815, "recordingobserv": 816, "default_debug_observ": 817, "default_dynamic_quant_observ": 818, "default_float_qparams_observ": 819, "default_histogram_observ": 820, "default_observ": 821, "default_per_channel_weight_observ": 822, "default_placeholder_observ": 823, "default_weight_observ": 824, "get_observer_state_dict": 825, "load_observer_state_dict": 826, "prepar": [827, 1900, 1903], "prepare_qat": 828, "propagate_qconfig": 829, "qconfig": [830, 1900, 1903], "default_activation_only_qconfig": 831, "default_debug_qconfig": 832, "default_dynamic_qconfig": 833, "default_per_channel_qconfig": 834, "default_qat_qconfig": 835, "default_qat_qconfig_v2": 836, "default_qconfig": 837, "default_weight_only_qconfig": 838, "float16_dynamic_qconfig": 839, "float16_static_qconfig": 840, "float_qparams_weight_only_qconfig": 841, "per_channel_dynamic_qconfig": 842, "qconfigmap": 843, "get_default_qat_qconfig_map": 844, "get_default_qconfig_map": 845, "quantiz": [846, 1871, 1886, 1893, 1900, 1901, 1902, 1903], "quantize_dynam": 847, "convert_fx": 848, "fuse_fx": 849, "prepare_fx": 850, "prepare_qat_fx": 851, "quantize_qat": 852, "swap_modul": 853, "arang": 854, "are_deterministic_algorithms_en": 862, "as_tensor": 868, "asarrai": 869, "atleast_1d": 875, "atleast_2d": 876, "atleast_3d": 877, "dual_level": 883, "forward_ad": [884, 885], "make_du": 884, "unpack_du": 885, "functionctx": [886, 887, 888, 889], "mark_dirti": 886, "mark_non_differenti": 887, "save_for_backward": 888, "set_materialize_grad": 889, "hvp": 891, "vhp": 894, "gradcheck": [897, 1883], "gradgradcheck": [898, 1883], "metadata": [899, 1885], "name": [900, 1854, 1868, 1869], "next_funct": 901, "register_prehook": 903, "load_nvprof": 904, "export_chrome_trac": 905, "key_averag": 906, "self_cpu_time_tot": 907, "total_averag": 908, "set_multithreading_en": 909, "bartlett_window": 911, "blackman_window": 920, "block_diag": 921, "broadcast_shap": 923, "broadcast_tensor": 924, "bucket": 926, "can_cast": 927, "cartesian_prod": 928, "cat": 929, "cdist": 930, "chain_matmul": 932, "column_stack": 940, "combin": [941, 1880], "compiled_with_cxx11_abi": 943, "concat": 945, "concaten": 946, "cudagraph": 956, "cudapluggablealloc": 957, "externalstream": 959, "outofmemoryerror": 960, "streamcontext": 962, "caching_allocator_alloc": 963, "caching_allocator_delet": 964, "can_device_access_p": 965, "change_current_alloc": 966, "clock_rat": 967, "comm": [968, 969, 970, 971, 972], "broadcast": [968, 1876], "broadcast_coalesc": 969, "reduce_add": 971, "current_blas_handl": 973, "current_devic": 974, "current_stream": 975, "default_stream": 976, "device_count": 978, "device_of": 979, "empty_cach": [980, 1292], "get_allocator_backend": 981, "get_arch_list": 982, "get_device_cap": 983, "get_device_nam": 984, "get_device_properti": 985, "get_gencode_flag": 986, "get_rng_stat": [987, 1134, 1293], "get_rng_state_al": 988, "get_sync_debug_mod": 989, "graph_pool_handl": 991, "init": [992, 1873], "initial_se": [993, 1158], "ipc_collect": 994, "is_avail": 995, "is_current_stream_captur": 996, "is_initi": 997, "_create_jit_fn": 998, "_create_multi_output_jit_fn": 999, "list_gpu_process": 1000, "make_graphed_cal": 1001, "manual_se": [1002, 1274, 1294], "manual_seed_al": 1003, "max_memory_alloc": 1004, "max_memory_cach": 1005, "max_memory_reserv": 1006, "mem_get_info": 1007, "memory_alloc": 1008, "memory_cach": 1009, "memory_reserv": 1010, "memory_snapshot": 1011, "memory_stat": 1012, "memory_summari": 1013, "memory_usag": 1014, "mark": 1015, "range_pop": 1016, "range_push": 1017, "power_draw": 1018, "reset_max_memory_alloc": 1019, "reset_max_memory_cach": 1020, "reset_peak_memory_stat": 1021, "seed": [1022, 1298, 1736], "seed_al": 1023, "set_devic": 1024, "set_per_process_memory_fract": [1025, 1299], "set_rng_stat": [1026, 1300, 1749], "set_rng_state_al": 1027, "set_stream": 1028, "set_sync_debug_mod": 1029, "temperatur": 1032, "cumulative_trapezoid": 1038, "dstack": 1054, "einsum": 1055, "empti": 1056, "empty_lik": 1057, "empty_strid": 1058, "enable_grad": 1059, "exp2": 1066, "ey": 1068, "fake_quantize_per_channel_affin": 1069, "fake_quantize_per_tensor_affin": 1070, "fft2": 1072, "fftfreq": 1073, "fftn": 1074, "fftshift": 1075, "hfft": 1076, "hfft2": 1077, "hfftn": 1078, "ifft": 1079, "ifft2": 1080, "ifftn": 1081, "ifftshift": 1082, "ihfft": 1083, "ihfft2": 1084, "ihfftn": 1085, "irfft": 1086, "irfft2": 1087, "irfftn": 1088, "rfft": 1089, "rfft2": 1090, "rfftfreq": 1091, "rfftn": 1092, "from_dlpack": 1106, "from_numpi": 1107, "frombuff": 1108, "full": [1109, 1891], "full_lik": 1110, "functional_cal": [1111, 1636], "grad_and_valu": 1114, "replace_all_batch_norm_modules_": 1120, "stack_module_st": 1121, "get_default_dtyp": 1129, "get_deterministic_debug_mod": 1130, "get_float32_matmul_precis": 1131, "get_num_interop_thread": 1132, "get_num_thread": 1133, "hamming_window": 1139, "hann_window": 1140, "histogramdd": 1144, "hspmm": 1146, "hstack": 1147, "inference_mod": 1157, "is_deterministic_algorithms_warn_only_en": 1163, "is_grad_en": 1165, "is_inference_mode_en": 1166, "is_nonzero": 1167, "is_storag": 1168, "is_tensor": 1169, "is_warn_always_en": 1170, "isin": 1173, "attribut": [1180, 1852, 1854, 1855, 1857, 1912], "scriptfunct": 1181, "scriptmodul": [1182, 1891], "annot": [1183, 1855], "enable_onednn_fus": 1184, "fork": 1185, "freez": 1186, "ignor": 1187, "isinst": 1188, "onednn_fusion_en": 1190, "optimize_for_infer": 1191, "save": [1192, 1731, 1849, 1875, 1885, 1891, 1900], "script_if_trac": 1194, "set_fusion_strategi": 1195, "strict_fus": 1196, "trace_modul": 1198, "unus": 1199, "wait": 1200, "kaiser_window": 1201, "kron": 1202, "cholesky_ex": 1212, "cond": 1213, "eig": 1217, "eigh": 1218, "eigval": 1219, "eigvalsh": 1220, "householder_product": 1221, "inv": 1222, "inv_ex": 1223, "ldl_factor": 1224, "ldl_factor_ex": 1225, "ldl_solv": 1226, "lstsq": 1227, "lu_factor": 1229, "lu_factor_ex": 1230, "matrix_norm": 1234, "matrix_rank": 1236, "multi_dot": 1237, "pinv": 1239, "solv": 1242, "solve_ex": 1243, "solve_triangular": 1244, "svdval": 1246, "tensorinv": 1247, "tensorsolv": 1248, "vander": [1249, 1836], "vecdot": 1250, "vector_norm": 1251, "linspac": 1252, "lobpcg": 1254, "logspac": 1268, "lu_unpack": 1273, "meshgrid": 1283, "current_allocated_memori": 1290, "driver_allocated_memori": 1291, "stop": 1297, "adaptiveavgpool1d": 1319, "adaptiveavgpool2d": 1320, "adaptiveavgpool3d": 1321, "adaptivelogsoftmaxwithloss": 1322, "adaptivemaxpool1d": 1323, "adaptivemaxpool2d": 1324, "adaptivemaxpool3d": 1325, "alphadropout": 1326, "avgpool1d": 1327, "avgpool2d": 1328, "avgpool3d": 1329, "bceloss": 1330, "bcewithlogitsloss": 1331, "batchnorm1d": 1332, "bilinear": [1335, 1484], "ctcloss": 1337, "channelshuffl": 1338, "constantpad1d": 1339, "constantpad2d": 1340, "constantpad3d": 1341, "cosineembeddingloss": 1348, "cosinesimilar": 1349, "crossentropyloss": 1350, "dataparallel": [1351, 1871, 1872, 1874, 1878], "dropout": [1352, 1498, 1871, 1872], "dropout1d": [1353, 1499], "dropout2d": [1354, 1500], "dropout3d": [1355, 1501], "featurealphadropout": 1359, "fold": [1361, 1507], "fractionalmaxpool2d": 1362, "fractionalmaxpool3d": 1363, "gelu": [1364, 1511], "glu": [1365, 1512], "gaussiannllloss": 1368, "hingeembeddingloss": 1374, "huberloss": 1375, "ident": [1376, 1610, 1618, 1855, 1882], "kldivloss": 1380, "l1loss": 1381, "lppool1d": 1382, "lppool2d": 1383, "lazybatchnorm1d": 1387, "lazybatchnorm2d": 1388, "lazybatchnorm3d": 1389, "lazyconv1d": 1390, "lazyconv2d": 1391, "lazyconv3d": 1392, "lazyconvtranspose1d": 1393, "lazyconvtranspose2d": 1394, "lazyconvtranspose3d": 1395, "lazyinstancenorm1d": 1396, "lazyinstancenorm2d": 1397, "lazyinstancenorm3d": 1398, "lazylinear": 1399, "localresponsenorm": 1402, "logsigmoid": [1403, 1533], "logsoftmax": 1404, "mseloss": 1405, "marginrankingloss": 1406, "maxpool1d": 1407, "maxpool2d": 1408, "maxpool3d": 1409, "maxunpool1d": 1410, "maxunpool2d": 1411, "maxunpool3d": 1412, "mish": [1413, 1543], "moduledict": [1415, 1855], "modulelist": [1416, 1854, 1855], "multilabelmarginloss": 1417, "multilabelsoftmarginloss": 1418, "multimarginloss": 1419, "nllloss": 1421, "prelu": [1422, 1557], "pairwisedist": 1423, "parameterdict": 1424, "parameterlist": 1425, "pixelshuffl": 1426, "pixelunshuffl": 1427, "poissonnllloss": 1428, "rnn": [1429, 1628, 1629, 1630, 1631, 1632, 1633, 1890], "rnnbase": 1430, "rrelu": [1432, 1561], "relu": [1433, 1558], "reflectionpad1d": 1435, "reflectionpad2d": 1436, "reflectionpad3d": 1437, "replicationpad1d": 1438, "replicationpad2d": 1439, "replicationpad3d": 1440, "selu": [1441, 1564], "sequenti": 1442, "silu": [1443, 1566], "smoothl1loss": 1445, "softmarginloss": 1446, "softmax2d": 1448, "softmin": [1449, 1570], "softplu": [1450, 1571], "softshrink": [1451, 1572], "softsign": [1452, 1573], "syncbatchnorm": 1453, "tanhshrink": [1455, 1575], "transformerdecod": 1458, "transformerdecoderlay": 1459, "transformerencod": 1460, "transformerencoderlay": 1461, "tripletmarginloss": 1462, "tripletmarginwithdistanceloss": 1463, "upsamplingbilinear2d": 1467, "upsamplingnearest2d": 1468, "zeropad1d": 1469, "zeropad2d": 1470, "zeropad3d": 1471, "adaptive_avg_pool1d": 1472, "adaptive_max_pool1d": 1475, "adaptive_max_pool2d": 1476, "adaptive_max_pool3d": 1477, "affine_grid": 1478, "alpha_dropout": 1479, "avg_pool1d": 1480, "batch_norm": 1483, "conv_transpose1d": 1491, "conv_transpose2d": 1492, "conv_transpose3d": 1493, "cosine_embedding_loss": 1494, "cosine_similar": 1495, "cross_entropi": 1496, "ctc_loss": 1497, "elu_": 1503, "embedding_bag": 1505, "feature_alpha_dropout": 1506, "fractional_max_pool2d": 1508, "fractional_max_pool3d": 1509, "gaussian_nll_loss": 1510, "grid_sampl": 1513, "group_norm": 1514, "gumbel_softmax": 1515, "hardtanh_": 1520, "hinge_embedding_loss": 1521, "huber_loss": 1522, "instance_norm": 1523, "kl_div": 1525, "l1_loss": 1526, "layer_norm": 1527, "leaky_relu_": 1529, "local_response_norm": 1531, "log_softmax": [1532, 1776], "lp_pool1d": 1534, "lp_pool2d": 1535, "margin_ranking_loss": 1536, "max_pool3d": 1539, "max_unpool1d": 1540, "max_unpool2d": 1541, "max_unpool3d": 1542, "mse_loss": 1544, "multi_margin_loss": 1545, "multilabel_margin_loss": 1546, "multilabel_soft_margin_loss": 1547, "nll_loss": 1548, "one_hot": 1550, "pad": [1551, 1871], "pairwise_dist": 1552, "pdist": 1553, "pixel_shuffl": 1554, "pixel_unshuffl": 1555, "poisson_nll_loss": 1556, "relu_": 1560, "rrelu_": 1562, "scaled_dot_product_attent": 1563, "smooth_l1_loss": 1567, "soft_margin_loss": 1568, "threshold_": 1577, "data_parallel": [1578, 1872], "triplet_margin_loss": 1579, "triplet_margin_with_distance_loss": 1580, "lazymodulemixin": 1585, "register_module_backward_hook": 1586, "register_module_buffer_registration_hook": 1587, "register_module_forward_hook": 1588, "register_module_forward_pre_hook": 1589, "register_module_full_backward_hook": 1590, "register_module_full_backward_pre_hook": 1591, "register_module_module_registration_hook": 1592, "register_module_parameter_registration_hook": 1593, "distributeddataparallel": [1594, 1874, 1878, 1879], "uninitializedbuff": 1596, "uninitializedparamet": 1597, "clip_grad_norm_": 1598, "clip_grad_value_": 1599, "parameters_to_vector": 1600, "parametr": [1601, 1602, 1604, 1605, 1606, 1607, 1886], "orthogon": 1601, "spectral_norm": [1602, 1635], "parametrizationlist": 1603, "is_parametr": 1605, "register_parametr": 1606, "remove_parametr": 1607, "basepruningmethod": 1608, "customfrommask": 1609, "l1unstructur": 1611, "lnstructur": 1612, "pruningcontain": 1613, "randomstructur": 1614, "randomunstructur": 1615, "prune": [1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1886], "custom_from_mask": 1616, "global_unstructur": 1617, "is_prun": 1619, "l1_unstructur": 1620, "ln_structur": 1621, "random_structur": 1622, "random_unstructur": 1623, "remove_spectral_norm": 1625, "remove_weight_norm": 1626, "packedsequ": 1627, "pack_padded_sequ": 1628, "pack_sequ": 1629, "pad_packed_sequ": 1630, "pad_sequ": 1631, "unpack_sequ": 1632, "unpad_sequ": 1633, "skip_init": 1634, "stateless": 1636, "vector_to_paramet": 1637, "weight_norm": 1638, "no_grad": 1639, "ones": 1645, "ones_lik": 1646, "exportopt": 1647, "exportoutput": 1648, "exportoutputseri": 1649, "jitscalartyp": 1650, "graphinfo": 1651, "verificationopt": 1652, "asgd": 1653, "adadelta": 1654, "adagrad": 1655, "adam": 1656, "adamw": 1657, "adamax": 1658, "lbfg": 1659, "nadam": 1660, "add_param_group": 1661, "load_state_dict": 1662, "step": [1664, 1896], "zero_grad": 1665, "radam": 1666, "rmsprop": 1667, "rprop": 1668, "sgd": 1669, "sparseadam": 1670, "chainedschedul": 1671, "constantlr": 1672, "cosineannealinglr": 1673, "cosineannealingwarmrestart": 1674, "cycliclr": 1675, "exponentiallr": 1676, "lambdalr": 1677, "linearlr": 1678, "multisteplr": 1679, "multiplicativelr": 1680, "onecyclelr": 1681, "polynomiallr": 1682, "reducelronplateau": 1683, "sequentiallr": 1684, "steplr": 1685, "pca_lowrank": 1689, "polar": 1693, "promote_typ": 1698, "quantize_per_channel": 1701, "quantize_per_tensor": 1702, "quantized_batch_norm": 1703, "quantized_max_pool1d": 1704, "quantized_max_pool2d": 1705, "sobolengin": 1706, "rand": 1708, "rand_lik": 1709, "randint": 1710, "randint_lik": 1711, "randn": 1712, "randn_lik": 1713, "randperm": 1714, "rang": [1715, 1854], "result_typ": 1725, "row_stack": 1729, "searchsort": 1735, "set_default_devic": 1739, "set_default_dtyp": 1740, "set_default_tensor_typ": 1741, "set_deterministic_debug_mod": 1742, "set_float32_matmul_precis": 1743, "set_flush_denorm": 1744, "set_grad_en": 1745, "set_num_interop_thread": 1746, "set_num_thread": 1747, "set_printopt": 1748, "set_warn_alwai": 1750, "signal": [1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1908], "bartlett": 1754, "blackman": 1755, "cosin": 1756, "gaussian": 1758, "general_cosin": 1759, "general_ham": 1760, "ham": 1761, "hann": 1762, "kaiser": 1763, "nuttal": 1764, "check_sparse_tensor_invari": 1775, "sampled_addmm": 1778, "spdiag": 1780, "sparse_bsc_tensor": 1782, "sparse_bsr_tensor": 1783, "sparse_compressed_tensor": 1784, "sparse_coo_tensor": 1785, "sparse_csc_tensor": 1786, "sparse_csr_tensor": 1787, "std_mean": 1795, "svd_lowrank": 1801, "sym_float": 1804, "sym_int": 1805, "sym_max": 1806, "sym_min": 1807, "sym_not": 1808, "tensordot": 1816, "trapezoid": 1821, "trapz": 1822, "tril_indic": 1825, "triu_indic": 1827, "use_deterministic_algorithm": 1835, "var_mean": 1838, "view_as_complex": 1840, "view_as_r": 1841, "vstack": 1844, "zero": 1847, "zeros_lik": 1848, "hub": 1849, "publish": 1849, "entrypoint": 1849, "download": 1849, "logic": [1849, 1854], "known": [1849, 1852], "bind": 1850, "tabl": [1850, 1891], "prim": 1851, "built": [1852, 1853, 1855, 1893], "comparison": [1852, 1854, 1855, 1917], "inspect": 1852, "warn": 1852, "appendix": [1852, 1855], "recurs": 1852, "constant": [1852, 1854], "fusion": 1852, "builtin": 1853, "math": [1853, 1917], "unsupport": [1854, 1855, 1857, 1893, 1895], "construct": [1854, 1855, 1857, 1870, 1896, 1909], "refin": [1854, 1855], "enum": [1854, 1855], "tupl": [1854, 1855], "express": [1854, 1855], "liter": [1854, 1855], "list": [1854, 1855, 1893], "dict": 1854, "arithmet": [1854, 1855], "subscript": [1854, 1855], "slice": [1854, 1855, 1889, 1917], "call": [1854, 1855, 1881], "ternari": [1854, 1855], "cast": 1854, "statement": [1854, 1855], "assign": [1854, 1855], "match": [1854, 1869], "If": 1854, "while": [1854, 1855], "loop": 1854, "For": 1854, "continu": [1854, 1855], "return": [1854, 1855, 1882, 1907], "resolut": [1854, 1855], "lookup": 1854, "defin": [1854, 1880, 1881], "terminologi": 1855, "meta": 1855, "primit": 1855, "special": [1855, 1875, 1910], "instanc": 1855, "signatur": 1855, "expr": 1855, "convers": [1855, 1870], "atom": 1855, "parenthes": 1855, "form": 1855, "dictionari": 1855, "displai": 1855, "primari": 1855, "power": 1855, "unari": [1855, 1862, 1909], "bitwis": 1855, "binari": [1855, 1862], "shift": 1855, "boolean": 1855, "condit": 1855, "augment": 1855, "rais": 1855, "assert": [1855, 1884], "del": 1855, "compound": 1855, "els": 1855, "getattr": 1855, "hasattr": 1855, "zip": [1855, 1897], "enumer": 1855, "rule": [1855, 1869, 1881, 1894], "remot": [1855, 1907], "procedur": 1855, "execut": [1855, 1875, 1878, 1897, 1898], "program": 1855, "coverag": [1856, 1868, 1880], "properti": [1857, 1860], "Not": 1857, "correctli": 1857, "bound": 1857, "schema": 1857, "between": [1857, 1897], "matrix": [1860, 1900], "decomposit": 1860, "solver": 1860, "misc": 1860, "experiment": 1860, "motiv": 1862, "reduct": [1862, 1878, 1889, 1917], "mobile_optim": 1863, "model_zoo": 1864, "strategi": [1867, 1896], "descriptor": 1867, "file_descriptor": 1867, "file_system": 1867, "subprocess": 1867, "keep": [1868, 1897], "dimens": [1868, 1869], "unifi": 1868, "contract": 1868, "awai": 1868, "factori": 1868, "variant": 1868, "semant": [1869, 1876, 1878, 1884, 1891], "explicit": 1869, "align": 1869, "current": 1869, "subsystem": 1869, "constructor": 1870, "contain": 1871, "convolut": [1871, 1872, 1889, 1890], "layer": 1871, "pool": [1871, 1872], "activ": [1871, 1872], "weight": [1871, 1896], "nonlinear": 1871, "recurr": [1871, 1882], "distanc": [1871, 1872], "loss": [1871, 1872, 1874], "vision": [1871, 1872], "shuffl": 1871, "lazi": 1871, "attent": 1872, "typic": 1874, "unscal": 1874, "accumul": 1874, "penalti": 1874, "one": 1874, "per": [1874, 1896], "particular": [1874, 1875], "dtype": [1874, 1891, 1903, 1912], "encod": 1875, "histori": 1875, "set": [1875, 1893], "No": 1875, "multithread": 1875, "concurr": 1875, "determin": [1875, 1890], "retain": 1875, "thread": [1875, 1877], "safeti": 1875, "wirting": 1875, "calculu": 1875, "pictur": 1875, "conjug": 1875, "own": 1875, "formula": 1875, "domain": 1875, "whether": [1875, 1897], "fire": 1875, "differ": [1875, 1893], "modifi": 1875, "compat": 1876, "tune": 1877, "tensorfloat": [1878, 1884, 1889], "32": [1878, 1884, 1889, 1892], "tf32": [1878, 1884, 1889], "amper": [1878, 1889], "reduc": [1878, 1889], "fp16": [1878, 1889], "gemm": [1878, 1889], "bf16": [1878, 1889], "bc": 1878, "alloc": [1878, 1882], "cubla": 1878, "workspac": 1878, "cufft": 1878, "plan": [1878, 1884], "just": 1878, "time": 1878, "practic": [1878, 1888, 1900], "agnost": 1878, "buffer": [1878, 1888], "instead": 1878, "captur": 1878, "partial": 1878, "9": 1878, "6": 1878, "across": [1878, 1891], "intern": [1879, 1893, 1897], "processgroup": 1879, "ddpoptim": 1879, "separ": 1880, "setup_context": 1880, "like": [1880, 1897], "subclass": 1880, "wrapper": 1880, "__torch_function__": 1880, "overrid": [1880, 1920], "specifi": 1881, "staticmethod": 1881, "isn": 1882, "freed": 1882, "properli": 1882, "loader": 1882, "doesn": 1882, "notat": 1883, "background": [1883, 1906, 1907], "analyt": 1883, "output": 1883, "u": 1883, "reus": [1884, 1888], "hipfft": 1884, "rocfft": 1884, "enabl": 1884, "kernel": [1884, 1900], "larg": 1885, "fleet": 1885, "wide": 1885, "attach": 1885, "consider": 1885, "block": 1886, "neural": 1886, "tip": [1888, 1901], "fight": 1888, "deadlock": 1888, "through": 1888, "queue": 1888, "e": 1888, "g": 1888, "hogwild": 1888, "extrem": 1889, "finit": 1889, "instinct": 1889, "mi200": 1889, "reproduc": 1890, "nondeterminist": 1890, "algorithm": [1890, 1896, 1906], "content": [1891, 1897], "preserv": 1891, "them": [1891, 1897], "integ": 1891, "divis": 1891, "alwai": 1891, "includ": [1892, 1897], "compon": 1892, "instal": 1892, "cffi": 1892, "cpp": 1892, "found": 1892, "win": 1892, "channel": 1892, "without": 1892, "claus": 1892, "protect": 1892, "broken": 1892, "pipe": [1892, 1898], "driver": 1892, "shut": 1892, "down": 1892, "ipc": 1892, "alexnet": 1893, "v": 1893, "index": [1893, 1917], "inlin": 1893, "discov": 1893, "unconvert": 1893, "onc": 1893, "preview": 1893, "diagnost": 1894, "closur": 1896, "adjust": 1896, "rate": 1896, "averag": 1896, "swa": 1896, "ema": 1896, "schedul": 1896, "care": 1896, "put": 1896, "togeth": 1896, "your": 1897, "insid": 1897, "treat": 1897, "archiv": 1897, "file_structur": 1897, "given": 1897, "wa": 1897, "resourc": 1897, "later": 1897, "distinguish": 1897, "explan": 1897, "framework": [1897, 1905], "user": [1897, 1907], "find": 1897, "analyz": 1897, "extern": 1897, "mock": 1897, "refactor": 1897, "sharp": 1897, "global": 1897, "isol": 1897, "each": 1897, "mangl": 1897, "pipelin": 1898, "skip": 1898, "connect": 1898, "intel": 1899, "instrument": 1899, "technologi": 1899, "eager": 1900, "awar": 1900, "engin": [1900, 1917], "observ": [1900, 1903], "hardwar": 1900, "nativ": [1900, 1902], "configur": [1900, 1902, 1917], "insensit": 1901, "int8": 1901, "sensit": 1901, "ao": [1903, 1918, 1919], "top": 1903, "quantize_fx": 1903, "qconfig_map": 1903, "backend_config": 1903, "custom_config": 1903, "relat": 1903, "fake_quant": 1903, "intrins": 1903, "qat": 1903, "scheme": 1903, "rpc": 1905, "tensorpip": 1905, "rref": [1905, 1907], "remotemodul": 1905, "record": 1906, "dure": 1906, "smart": 1906, "end": 1906, "protocol": 1907, "assumpt": 1907, "lifetim": 1907, "reason": 1907, "scenario": 1907, "owner": 1907, "argument": 1907, "sparsiti": 1909, "coo": 1909, "hybrid": 1909, "uncoalesc": 1909, "csr": 1909, "csc": 1909, "bsr": 1909, "bsc": 1909, "memory_format": 1912, "tensorboard": 1914, "creation": 1917, "sampl": 1917, "quasi": 1917, "pointwis": 1917, "spectral": 1917, "bla": 1917, "lapack": 1917, "foreach": 1917, "tag": 1917, "n": [1918, 1919], "_numeric_suit": 1918, "_numeric_suite_fx": 1919, "info": 1921, "finfo": 1921, "iinfo": 1921}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.cumprod_": [[206, "torch-tensor-cumprod"]], "torch.Tensor.diff": [[222, "torch-tensor-diff"]], "torch.Tensor.cumsum": [[207, "torch-tensor-cumsum"]], "torch.Tensor.div_": [[228, "torch-tensor-div"]], "torch.Tensor.erfinv": [[242, "torch-tensor-erfinv"]], "torch.Tensor.crow_indices": [[201, "torch-tensor-crow-indices"]], "torch.Tensor.diag": [[217, "torch-tensor-diag"]], "torch.Tensor.diagonal_scatter": [[221, "torch-tensor-diagonal-scatter"]], "torch.Tensor.dsplit": [[233, "torch-tensor-dsplit"]], "torch.Tensor.diagflat": [[219, "torch-tensor-diagflat"]], "torch.Tensor.dequantize": [[212, "torch-tensor-dequantize"]], "torch.Tensor.double": [[232, "torch-tensor-double"]], "torch.Tensor.cov": [[198, "torch-tensor-cov"]], "torch.Tensor.cross": [[200, "torch-tensor-cross"]], "torch.Tensor.dim": [[225, "torch-tensor-dim"]], "torch.Tensor.dense_dim": [[211, "torch-tensor-dense-dim"]], "torch.Tensor.cummax": [[203, "torch-tensor-cummax"]], "torch.Tensor.dot": [[231, "torch-tensor-dot"]], "torch.Tensor.cummin": [[204, "torch-tensor-cummin"]], "torch.Tensor.div": [[227, "torch-tensor-div"]], "torch.Tensor.cuda": [[202, "torch-tensor-cuda"]], "torch.Tensor.divide": [[229, "torch-tensor-divide"]], "torch.Tensor.eq_": [[236, "torch-tensor-eq"]], "torch.Tensor.erfinv_": [[243, "torch-tensor-erfinv"]], "torch.Tensor.dist": [[226, "torch-tensor-dist"]], "torch.Tensor.data_ptr": [[209, "torch-tensor-data-ptr"]], "torch.Tensor.digamma_": [[224, "torch-tensor-digamma"]], "torch.Tensor.det": [[213, "torch-tensor-det"]], "torch.Tensor.equal": [[237, "torch-tensor-equal"]], "torch.Tensor.cpu": [[199, "torch-tensor-cpu"]], "torch.Tensor.erf_": [[239, "torch-tensor-erf"]], "torch.Tensor.detach": [[214, "torch-tensor-detach"]], "torch.Tensor.digamma": [[223, "torch-tensor-digamma"]], "torch.Tensor.erf": [[238, "torch-tensor-erf"]], "torch.Tensor.erfc": [[240, "torch-tensor-erfc"]], "torch.Tensor.erfc_": [[241, "torch-tensor-erfc"]], "torch.Tensor.exp": [[244, "torch-tensor-exp"]], "torch.Tensor.cumsum_": [[208, "torch-tensor-cumsum"]], "torch.Tensor.element_size": [[234, "torch-tensor-element-size"]], "torch.Tensor.count_nonzero": [[197, "torch-tensor-count-nonzero"]], "torch.Tensor.diagonal": [[220, "torch-tensor-diagonal"]], "torch.Tensor.device": [[216, "torch-tensor-device"]], "torch.Tensor.cosh_": [[196, "torch-tensor-cosh"]], "torch.Tensor.detach_": [[215, "torch-tensor-detach"]], "torch.Tensor.diag_embed": [[218, "torch-tensor-diag-embed"]], "torch.Tensor.eq": [[235, "torch-tensor-eq"]], "torch.Tensor.divide_": [[230, "torch-tensor-divide"]], "torch.Tensor.cumprod": [[205, "torch-tensor-cumprod"]], "torch.Tensor.deg2rad": [[210, "torch-tensor-deg2rad"]], "torch.Tensor.conj_physical": [[186, "torch-tensor-conj-physical"]], "torch.Tensor.conj_physical_": [[187, "torch-tensor-conj-physical"]], "torch.Tensor.bmm": [[162, "torch-tensor-bmm"]], "torch.Tensor.bitwise_not_": [[155, "torch-tensor-bitwise-not"]], "torch.Tensor.bincount": [[149, "torch-tensor-bincount"]], "torch.Tensor.clip": [[180, "torch-tensor-clip"]], "torch.Tensor.char": [[173, "torch-tensor-char"]], "torch.Tensor.bool": [[163, "torch-tensor-bool"]], "torch.Tensor.bitwise_right_shift_": [[159, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bfloat16": [[148, "torch-tensor-bfloat16"]], "torch.Tensor.ccol_indices": [[167, "torch-tensor-ccol-indices"]], "torch.Tensor.ceil_": [[170, "torch-tensor-ceil"]], "torch.Tensor.chunk": [[177, "torch-tensor-chunk"]], "torch.Tensor.chalf": [[172, "torch-tensor-chalf"]], "torch.Tensor.bitwise_and": [[150, "torch-tensor-bitwise-and"]], "torch.Tensor.corrcoef": [[192, "torch-tensor-corrcoef"]], "torch.Tensor.cos_": [[194, "torch-tensor-cos"]], "torch.Tensor.bitwise_xor_": [[161, "torch-tensor-bitwise-xor"]], "torch.Tensor.bitwise_left_shift": [[152, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bitwise_right_shift": [[158, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bernoulli_": [[147, "torch-tensor-bernoulli"]], "torch.Tensor.copy_": [[189, "torch-tensor-copy"]], "torch.Tensor.cdouble": [[168, "torch-tensor-cdouble"]], "torch.Tensor.copysign": [[190, "torch-tensor-copysign"]], "torch.Tensor.bitwise_or_": [[157, "torch-tensor-bitwise-or"]], "torch.Tensor.cholesky": [[174, "torch-tensor-cholesky"]], "torch.Tensor.byte": [[165, "torch-tensor-byte"]], "torch.Tensor.clip_": [[181, "torch-tensor-clip"]], "torch.Tensor.bitwise_and_": [[151, "torch-tensor-bitwise-and"]], "torch.Tensor.bitwise_left_shift_": [[153, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.clone": [[182, "torch-tensor-clone"]], "torch.Tensor.cos": [[193, "torch-tensor-cos"]], "torch.Tensor.cosh": [[195, "torch-tensor-cosh"]], "torch.Tensor.cfloat": [[171, "torch-tensor-cfloat"]], "torch.Tensor.cholesky_solve": [[176, "torch-tensor-cholesky-solve"]], "torch.Tensor.cholesky_inverse": [[175, "torch-tensor-cholesky-inverse"]], "torch.Tensor.broadcast_to": [[164, "torch-tensor-broadcast-to"]], "torch.Tensor.col_indices": [[184, "torch-tensor-col-indices"]], "torch.Tensor.clamp_": [[179, "torch-tensor-clamp"]], "torch.Tensor.conj": [[185, "torch-tensor-conj"]], "torch.Tensor.coalesce": [[183, "torch-tensor-coalesce"]], "torch.Tensor.copysign_": [[191, "torch-tensor-copysign"]], "torch.Tensor.contiguous": [[188, "torch-tensor-contiguous"]], "torch.Tensor.cauchy_": [[166, "torch-tensor-cauchy"]], "torch.Tensor.bitwise_xor": [[160, "torch-tensor-bitwise-xor"]], "torch.Tensor.ceil": [[169, "torch-tensor-ceil"]], "torch.Tensor.bitwise_not": [[154, "torch-tensor-bitwise-not"]], "torch.Tensor.bitwise_or": [[156, "torch-tensor-bitwise-or"]], "torch.Tensor.clamp": [[178, "torch-tensor-clamp"]], "torch.Tensor.floor_divide": [[264, "torch-tensor-floor-divide"]], "torch.Tensor.floor_": [[263, "torch-tensor-floor"]], "torch.Tensor.floor": [[262, "torch-tensor-floor"]], "torch.Tensor.fix_": [[254, "torch-tensor-fix"]], "torch.Tensor.float_power_": [[261, "torch-tensor-float-power"]], "torch.Tensor.half": [[289, "torch-tensor-half"]], "torch.Tensor.exponential_": [[250, "torch-tensor-exponential"]], "torch.Tensor.greater_equal": [[285, "torch-tensor-greater-equal"]], "torch.Tensor.gt": [[287, "torch-tensor-gt"]], "torch.Tensor.fliplr": [[257, "torch-tensor-fliplr"]], "torch.Tensor.frexp": [[272, "torch-tensor-frexp"]], "torch.Tensor.gcd_": [[275, "torch-tensor-gcd"]], "torch.Tensor.greater_": [[284, "torch-tensor-greater"]], "torch.Tensor.expand_as": [[247, "torch-tensor-expand-as"]], "torch.Tensor.frac": [[270, "torch-tensor-frac"]], "torch.Tensor.fmin": [[267, "torch-tensor-fmin"]], "torch.Tensor.gather": [[273, "torch-tensor-gather"]], "torch.Tensor.histc": [[292, "torch-tensor-histc"]], "torch.Tensor.grad": [[282, "torch-tensor-grad"]], "torch.Tensor.ger": [[280, "torch-tensor-ger"]], "torch.Tensor.fmod_": [[269, "torch-tensor-fmod"]], "torch.Tensor.flipud": [[258, "torch-tensor-flipud"]], "torch.Tensor.gt_": [[288, "torch-tensor-gt"]], "torch.Tensor.expand": [[246, "torch-tensor-expand"]], "torch.Tensor.geqrf": [[279, "torch-tensor-geqrf"]], "torch.Tensor.exp_": [[245, "torch-tensor-exp"]], "torch.Tensor.ge_": [[277, "torch-tensor-ge"]], "torch.Tensor.expm1_": [[249, "torch-tensor-expm1"]], "torch.Tensor.float_power": [[260, "torch-tensor-float-power"]], "torch.Tensor.float": [[259, "torch-tensor-float"]], "torch.Tensor.frac_": [[271, "torch-tensor-frac"]], "torch.Tensor.fmod": [[268, "torch-tensor-fmod"]], "torch.Tensor.fill_diagonal_": [[252, "torch-tensor-fill-diagonal"]], "torch.Tensor.fix": [[253, "torch-tensor-fix"]], "torch.Tensor.gcd": [[274, "torch-tensor-gcd"]], "torch.Tensor.geometric_": [[278, "torch-tensor-geometric"]], "torch.Tensor.fill_": [[251, "torch-tensor-fill"]], "torch.Tensor.expm1": [[248, "torch-tensor-expm1"]], "torch.Tensor.greater": [[283, "torch-tensor-greater"]], "torch.Tensor.histogram": [[293, "torch-tensor-histogram"]], "torch.Tensor.fmax": [[266, "torch-tensor-fmax"]], "torch.Tensor.heaviside": [[291, "torch-tensor-heaviside"]], "torch.Tensor.get_device": [[281, "torch-tensor-get-device"]], "torch.Tensor.floor_divide_": [[265, "torch-tensor-floor-divide"]], "torch.Tensor.hardshrink": [[290, "torch-tensor-hardshrink"]], "torch.Tensor.flatten": [[255, "torch-tensor-flatten"]], "torch.Tensor.flip": [[256, "torch-tensor-flip"]], "torch.Tensor.ge": [[276, "torch-tensor-ge"]], "torch.Tensor.greater_equal_": [[286, "torch-tensor-greater-equal"]], "torch.Tensor.any": [[111, "torch-tensor-any"]], "torch.Tensor.arccosh_": [[116, "torch-tensor-arccosh"]], "torch.Tensor.argmax": [[127, "torch-tensor-argmax"]], "torch.Tensor.arccos_": [[114, "torch-tensor-arccos"]], "torch.Tensor.amin": [[108, "torch-tensor-amin"]], "torch.Tensor.arctanh": [[125, "torch-tensor-arctanh"]], "torch.Tensor.atan_": [[140, "torch-tensor-atan"]], "torch.Tensor.atanh": [[141, "torch-tensor-atanh"]], "torch.Tensor.addmm": [[98, "torch-tensor-addmm"]], "torch.Tensor.addmv_": [[101, "torch-tensor-addmv"]], "torch.Tensor.argsort": [[129, "torch-tensor-argsort"]], "torch.Tensor.all": [[105, "torch-tensor-all"]], "torch.Tensor.argwhere": [[130, "torch-tensor-argwhere"]], "torch.Tensor.atan2": [[138, "torch-tensor-atan2"]], "torch.Tensor.adjoint": [[104, "torch-tensor-adjoint"]], "torch.Tensor.addr_": [[103, "torch-tensor-addr"]], "torch.Tensor.arccosh": [[115, "torch-tensor-arccosh"]], "torch.Tensor.asin": [[133, "torch-tensor-asin"]], "torch.Tensor.allclose": [[106, "torch-tensor-allclose"]], "torch.Tensor.asin_": [[134, "torch-tensor-asin"]], "torch.Tensor.as_subclass": [[132, "torch-tensor-as-subclass"]], "torch.Tensor.arcsinh_": [[120, "torch-tensor-arcsinh"]], "torch.Tensor.arcsin_": [[118, "torch-tensor-arcsin"]], "torch.Tensor.backward": [[143, "torch-tensor-backward"]], "torch.Tensor.asinh_": [[136, "torch-tensor-asinh"]], "torch.Tensor.arctan2": [[122, "torch-tensor-arctan2"]], "torch.Tensor.atan": [[137, "torch-tensor-atan"]], "torch.Tensor.baddbmm": [[144, "torch-tensor-baddbmm"]], "torch.Tensor.apply_": [[112, "torch-tensor-apply"]], "torch.Tensor.aminmax": [[109, "torch-tensor-aminmax"]], "torch.Tensor.amax": [[107, "torch-tensor-amax"]], "torch.Tensor.addr": [[102, "torch-tensor-addr"]], "torch.Tensor.atanh_": [[142, "torch-tensor-atanh"]], "torch.Tensor.as_strided": [[131, "torch-tensor-as-strided"]], "torch.Tensor.arctanh_": [[126, "torch-tensor-arctanh"]], "torch.Tensor.arctan_": [[124, "torch-tensor-arctan"]], "torch.Tensor.angle": [[110, "torch-tensor-angle"]], "torch.Tensor.argmin": [[128, "torch-tensor-argmin"]], "torch.Tensor.arctan": [[121, "torch-tensor-arctan"]], "torch.Tensor.addmv": [[100, "torch-tensor-addmv"]], "torch.Tensor.baddbmm_": [[145, "torch-tensor-baddbmm"]], "torch.Tensor.addmm_": [[99, "torch-tensor-addmm"]], "torch.Tensor.arctan2_": [[123, "torch-tensor-arctan2"]], "torch.Tensor.arccos": [[113, "torch-tensor-arccos"]], "torch.Tensor.arcsin": [[117, "torch-tensor-arcsin"]], "torch.Tensor.atan2_": [[139, "torch-tensor-atan2"]], "torch.Tensor.arcsinh": [[119, "torch-tensor-arcsinh"]], "torch.Tensor.bernoulli": [[146, "torch-tensor-bernoulli"]], "torch.Tensor.asinh": [[135, "torch-tensor-asinh"]], "torch.Tensor.is_contiguous": [[323, "torch-tensor-is-contiguous"]], "torch.Tensor.is_inference": [[326, "torch-tensor-is-inference"]], "torch.Tensor.index_add": [[304, "torch-tensor-index-add"]], "torch.Tensor.is_conj": [[322, "torch-tensor-is-conj"]], "torch.Tensor.indices": [[315, "torch-tensor-indices"]], "torch.Tensor.igammac_": [[302, "torch-tensor-igammac"]], "torch.Tensor.inner": [[316, "torch-tensor-inner"]], "torch.Tensor.is_quantized": [[330, "torch-tensor-is-quantized"]], "torch.Tensor.index_select": [[314, "torch-tensor-index-select"]], "torch.Tensor.is_leaf": [[327, "torch-tensor-is-leaf"]], "torch.Tensor.is_floating_point": [[325, "torch-tensor-is-floating-point"]], "torch.Tensor.index_put": [[310, "torch-tensor-index-put"]], "torch.Tensor.is_sparse": [[334, "torch-tensor-is-sparse"]], "torch.Tensor.index_add_": [[305, "torch-tensor-index-add"]], "torch.Tensor.isreal": [[342, "torch-tensor-isreal"]], "torch.Tensor.isclose": [[336, "torch-tensor-isclose"]], "torch.Tensor.is_signed": [[333, "torch-tensor-is-signed"]], "torch.Tensor.imag": [[303, "torch-tensor-imag"]], "torch.Tensor.inverse": [[319, "torch-tensor-inverse"]], "torch.Tensor.is_coalesced": [[320, "torch-tensor-is-coalesced"]], "torch.Tensor.i0_": [[298, "torch-tensor-i0"]], "torch.Tensor.igammac": [[301, "torch-tensor-igammac"]], "torch.Tensor.index_fill": [[308, "torch-tensor-index-fill"]], "torch.Tensor.is_shared": [[332, "torch-tensor-is-shared"]], "torch.Tensor.is_sparse_csr": [[335, "torch-tensor-is-sparse-csr"]], "torch.Tensor.isnan": [[339, "torch-tensor-isnan"]], "torch.Tensor.is_pinned": [[329, "torch-tensor-is-pinned"]], "torch.Tensor.hypot_": [[296, "torch-tensor-hypot"]], "torch.Tensor.isposinf": [[341, "torch-tensor-isposinf"]], "torch.Tensor.index_fill_": [[309, "torch-tensor-index-fill"]], "torch.Tensor.igamma_": [[300, "torch-tensor-igamma"]], "torch.Tensor.is_set_to": [[331, "torch-tensor-is-set-to"]], "torch.Tensor.isneginf": [[340, "torch-tensor-isneginf"]], "torch.Tensor.index_copy_": [[307, "torch-tensor-index-copy"]], "torch.Tensor.is_meta": [[328, "torch-tensor-is-meta"]], "torch.Tensor.isfinite": [[337, "torch-tensor-isfinite"]], "torch.Tensor.hypot": [[295, "torch-tensor-hypot"]], "torch.Tensor.index_copy": [[306, "torch-tensor-index-copy"]], "torch.Tensor.is_cuda": [[324, "torch-tensor-is-cuda"]], "torch.Tensor.index_reduce": [[312, "torch-tensor-index-reduce"]], "torch.Tensor.int": [[317, "torch-tensor-int"]], "torch.Tensor.isinf": [[338, "torch-tensor-isinf"]], "torch.Tensor.i0": [[297, "torch-tensor-i0"]], "torch.Tensor.int_repr": [[318, "torch-tensor-int-repr"]], "torch.Tensor.index_reduce_": [[313, "torch-tensor-index-reduce"]], "torch.Tensor.is_complex": [[321, "torch-tensor-is-complex"]], "torch.Tensor.hsplit": [[294, "torch-tensor-hsplit"]], "torch.Tensor.igamma": [[299, "torch-tensor-igamma"]], "torch.Tensor.index_put_": [[311, "torch-tensor-index-put"]], "torch.Tensor.less": [[355, "torch-tensor-less"]], "torch.Tensor.logical_not_": [[377, "torch-tensor-logical-not"]], "torch.Tensor.ldexp_": [[350, "torch-tensor-ldexp"]], "torch.Tensor.logaddexp2": [[371, "torch-tensor-logaddexp2"]], "torch.Tensor.map_": [[390, "torch-tensor-map"]], "torch.Tensor.lerp": [[353, "torch-tensor-lerp"]], "torch.Tensor.log1p": [[364, "torch-tensor-log1p"]], "torch.Tensor.log10": [[362, "torch-tensor-log10"]], "torch.Tensor.log10_": [[363, "torch-tensor-log10"]], "torch.Tensor.logical_or_": [[379, "torch-tensor-logical-or"]], "torch.Tensor.lgamma": [[359, "torch-tensor-lgamma"]], "torch.Tensor.log_": [[368, "torch-tensor-log"]], "torch.Tensor.log1p_": [[365, "torch-tensor-log1p"]], "torch.Tensor.less_": [[356, "torch-tensor-less"]], "torch.Tensor.istft": [[343, "torch-tensor-istft"]], "torch.Tensor.logical_or": [[378, "torch-tensor-logical-or"]], "torch.Tensor.ldexp": [[349, "torch-tensor-ldexp"]], "torch.Tensor.le_": [[352, "torch-tensor-le"]], "torch.Tensor.log": [[361, "torch-tensor-log"]], "torch.Tensor.less_equal": [[357, "torch-tensor-less-equal"]], "torch.Tensor.logical_xor_": [[381, "torch-tensor-logical-xor"]], "torch.Tensor.log2_": [[367, "torch-tensor-log2"]], "torch.Tensor.long": [[385, "torch-tensor-long"]], "torch.Tensor.lu_solve": [[389, "torch-tensor-lu-solve"]], "torch.Tensor.le": [[351, "torch-tensor-le"]], "torch.Tensor.logical_not": [[376, "torch-tensor-logical-not"]], "torch.Tensor.logical_xor": [[380, "torch-tensor-logical-xor"]], "torch.Tensor.log2": [[366, "torch-tensor-log2"]], "torch.Tensor.less_equal_": [[358, "torch-tensor-less-equal"]], "torch.Tensor.item": [[344, "torch-tensor-item"]], "torch.Tensor.lt": [[386, "torch-tensor-lt"]], "torch.Tensor.lcm_": [[348, "torch-tensor-lcm"]], "torch.Tensor.logit": [[382, "torch-tensor-logit"]], "torch.Tensor.lcm": [[347, "torch-tensor-lcm"]], "torch.Tensor.logaddexp": [[370, "torch-tensor-logaddexp"]], "torch.Tensor.kthvalue": [[346, "torch-tensor-kthvalue"]], "torch.Tensor.lgamma_": [[360, "torch-tensor-lgamma"]], "torch.Tensor.itemsize": [[345, "torch-tensor-itemsize"]], "torch.Tensor.logical_and": [[374, "torch-tensor-logical-and"]], "torch.Tensor.logit_": [[383, "torch-tensor-logit"]], "torch.Tensor.lu": [[388, "torch-tensor-lu"]], "torch.Tensor.lerp_": [[354, "torch-tensor-lerp"]], "torch.Tensor.logsumexp": [[384, "torch-tensor-logsumexp"]], "torch.Tensor.logcumsumexp": [[372, "torch-tensor-logcumsumexp"]], "torch.Tensor.logdet": [[373, "torch-tensor-logdet"]], "torch.Tensor.logical_and_": [[375, "torch-tensor-logical-and"]], "torch.Tensor.log_normal_": [[369, "torch-tensor-log-normal"]], "torch.Tensor.masked_fill": [[391, "torch-tensor-masked-fill"]], "torch.Tensor.lt_": [[387, "torch-tensor-lt"]], "torch.sparse_csr_tensor": [[1787, "torch-sparse-csr-tensor"]], "torch.sparse.sampled_addmm": [[1778, "torch-sparse-sampled-addmm"]], "torch.sym_not": [[1808, "torch-sym-not"]], "torch.take_along_dim": [[1811, "torch-take-along-dim"]], "torch.sort": [[1773, "torch-sort"]], "torch.sinh": [[1768, "torch-sinh"]], "torch.slice_scatter": [[1769, "torch-slice-scatter"]], "torch.sspaddmm": [[1792, "torch-sspaddmm"]], "torch.signbit": [[1765, "torch-signbit"]], "torch.sparse.spdiags": [[1780, "torch-sparse-spdiags"]], "torch.sum": [[1799, "torch-sum"]], "torch.std": [[1794, "torch-std"]], "torch.split": [[1788, "torch-split"]], "torch.sinc": [[1767, "torch-sinc"]], "torch.sparse.log_softmax": [[1776, "torch-sparse-log-softmax"]], "torch.sym_int": [[1805, "torch-sym-int"]], "torch.std_mean": [[1795, "torch-std-mean"]], "torch.sparse_bsc_tensor": [[1782, "torch-sparse-bsc-tensor"]], "torch.sub": [[1797, "torch-sub"]], "torch.sqrt": [[1789, "torch-sqrt"]], "torch.svd": [[1800, "torch-svd"]], "check_sparse_tensor_invariants": [[1775, "check-sparse-tensor-invariants"]], "torch.sym_max": [[1806, "torch-sym-max"]], "torch.sparse.addmm": [[1774, "torch-sparse-addmm"]], "torch.t": [[1809, "torch-t"]], "torch.tan": [[1812, "torch-tan"]], "torch.sparse_coo_tensor": [[1785, "torch-sparse-coo-tensor"]], "torch.signal.windows.nuttall": [[1764, "torch-signal-windows-nuttall"]], "torch.sparse.sum": [[1781, "torch-sparse-sum"]], "torch.sparse_csc_tensor": [[1786, "torch-sparse-csc-tensor"]], "torch.squeeze": [[1791, "torch-squeeze"]], "torch.svd_lowrank": [[1801, "torch-svd-lowrank"]], "torch.sparse_bsr_tensor": [[1783, "torch-sparse-bsr-tensor"]], "torch.sparse.softmax": [[1779, "torch-sparse-softmax"]], "torch.sparse.mm": [[1777, "torch-sparse-mm"]], "torch.subtract": [[1798, "torch-subtract"]], "torch.stft": [[1796, "torch-stft"]], "torch.sym_float": [[1804, "torch-sym-float"]], "torch.sin": [[1766, "torch-sin"]], "torch.smm": [[1771, "torch-smm"]], "torch.take": [[1810, "torch-take"]], "torch.sparse_compressed_tensor": [[1784, "torch-sparse-compressed-tensor"]], "torch.square": [[1790, "torch-square"]], "torch.slogdet": [[1770, "torch-slogdet"]], "torch.swapaxes": [[1802, "torch-swapaxes"]], "torch.swapdims": [[1803, "torch-swapdims"]], "torch.stack": [[1793, "torch-stack"]], "torch.softmax": [[1772, "torch-softmax"]], "torch.sym_min": [[1807, "torch-sym-min"]], "torch.set_default_device": [[1739, "torch-set-default-device"]], "torch.save": [[1731, "torch-save"]], "torch.set_warn_always": [[1750, "torch-set-warn-always"]], "torch.repeat_interleave": [[1721, "torch-repeat-interleave"]], "torch.set_flush_denormal": [[1744, "torch-set-flush-denormal"]], "torch.set_default_dtype": [[1740, "torch-set-default-dtype"]], "torch.set_num_interop_threads": [[1746, "torch-set-num-interop-threads"]], "torch.sgn": [[1751, "torch-sgn"]], "torch.sigmoid": [[1752, "torch-sigmoid"]], "torch.signal.windows.blackman": [[1755, "torch-signal-windows-blackman"]], "torch.scatter_add": [[1733, "torch-scatter-add"]], "torch.set_float32_matmul_precision": [[1743, "torch-set-float32-matmul-precision"]], "torch.signal.windows.general_cosine": [[1759, "torch-signal-windows-general-cosine"]], "torch.resolve_neg": [[1724, "torch-resolve-neg"]], "torch.signal.windows.general_hamming": [[1760, "torch-signal-windows-general-hamming"]], "torch.set_deterministic_debug_mode": [[1742, "torch-set-deterministic-debug-mode"]], "torch.remainder": [[1719, "torch-remainder"]], "torch.reciprocal": [[1718, "torch-reciprocal"]], "torch.set_default_tensor_type": [[1741, "torch-set-default-tensor-type"]], "torch.scatter_reduce": [[1734, "torch-scatter-reduce"]], "torch.select": [[1737, "torch-select"]], "torch.signal.windows.gaussian": [[1758, "torch-signal-windows-gaussian"]], "torch.result_type": [[1725, "torch-result-type"]], "torch.signal.windows.cosine": [[1756, "torch-signal-windows-cosine"]], "torch.seed": [[1736, "torch-seed"]], "torch.resolve_conj": [[1723, "torch-resolve-conj"]], "torch.rot90": [[1727, "torch-rot90"]], "torch.row_stack": [[1729, "torch-row-stack"]], "torch.signal.windows.hamming": [[1761, "torch-signal-windows-hamming"]], "torch.ravel": [[1716, "torch-ravel"]], "torch.select_scatter": [[1738, "torch-select-scatter"]], "torch.real": [[1717, "torch-real"]], "torch.signal.windows.exponential": [[1757, "torch-signal-windows-exponential"]], "torch.signal.windows.hann": [[1762, "torch-signal-windows-hann"]], "torch.signal.windows.bartlett": [[1754, "torch-signal-windows-bartlett"]], "torch.set_rng_state": [[1749, "torch-set-rng-state"]], "torch.range": [[1715, "torch-range"]], "set_grad_enabled": [[1745, "set-grad-enabled"]], "torch.sign": [[1753, "torch-sign"]], "torch.round": [[1728, "torch-round"]], "torch.set_num_threads": [[1747, "torch-set-num-threads"]], "torch.renorm": [[1720, "torch-renorm"]], "torch.rsqrt": [[1730, "torch-rsqrt"]], "torch.roll": [[1726, "torch-roll"]], "torch.scatter": [[1732, "torch-scatter"]], "torch.reshape": [[1722, "torch-reshape"]], "torch.searchsorted": [[1735, "torch-searchsorted"]], "torch.set_printoptions": [[1748, "torch-set-printoptions"]], "torch.signal.windows.kaiser": [[1763, "torch-signal-windows-kaiser"]], "SequentialLR": [[1684, "sequentiallr"]], "ConstantLR": [[1672, "constantlr"]], "torch.pinverse": [[1691, "torch-pinverse"]], "torch.pca_lowrank": [[1689, "torch-pca-lowrank"]], "torch.randperm": [[1714, "torch-randperm"]], "torch.positive": [[1695, "torch-positive"]], "SGD": [[1669, "sgd"]], "PolynomialLR": [[1682, "polynomiallr"]], "ReduceLROnPlateau": [[1683, "reducelronplateau"]], "torch.polygamma": [[1694, "torch-polygamma"]], "torch.rand_like": [[1709, "torch-rand-like"]], "torch.polar": [[1693, "torch-polar"]], "CosineAnnealingLR": [[1673, "cosineannealinglr"]], "torch.prod": [[1697, "torch-prod"]], "torch.permute": [[1690, "torch-permute"]], "CosineAnnealingWarmRestarts": [[1674, "cosineannealingwarmrestarts"]], "Rprop": [[1668, "rprop"]], "torch.quantile": [[1700, "torch-quantile"]], "torch.randn": [[1712, "torch-randn"]], "torch.ormqr": [[1687, "torch-ormqr"]], "torch.orgqr": [[1686, "torch-orgqr"]], "torch.rand": [[1708, "torch-rand"]], "LinearLR": [[1678, "linearlr"]], "LambdaLR": [[1677, "lambdalr"]], "OneCycleLR": [[1681, "onecyclelr"]], "MultiplicativeLR": [[1680, "multiplicativelr"]], "torch.quantized_max_pool1d": [[1704, "torch-quantized-max-pool1d"]], "StepLR": [[1685, "steplr"]], "torch.randint": [[1710, "torch-randint"]], "ExponentialLR": [[1676, "exponentiallr"]], "SparseAdam": [[1670, "sparseadam"]], "RAdam": [[1666, "radam"]], "MultiStepLR": [[1679, "multisteplr"]], "torch.quantize_per_tensor": [[1702, "torch-quantize-per-tensor"]], "torch.rad2deg": [[1707, "torch-rad2deg"]], "torch.qr": [[1699, "torch-qr"]], "torch.quantized_batch_norm": [[1703, "torch-quantized-batch-norm"]], "CyclicLR": [[1675, "cycliclr"]], "torch.randint_like": [[1711, "torch-randint-like"]], "RMSprop": [[1667, "rmsprop"]], "torch.quantize_per_channel": [[1701, "torch-quantize-per-channel"]], "ChainedScheduler": [[1671, "chainedscheduler"]], "torch.quantized_max_pool2d": [[1705, "torch-quantized-max-pool2d"]], "torch.pow": [[1696, "torch-pow"]], "torch.outer": [[1688, "torch-outer"]], "torch.randn_like": [[1713, "torch-randn-like"]], "SobolEngine": [[1706, "sobolengine"]], "torch.poisson": [[1692, "torch-poisson"]], "torch.promote_types": [[1698, "torch-promote-types"]], "torch.vdot": [[1839, "torch-vdot"]], "torch.trapezoid": [[1821, "torch-trapezoid"]], "JIT Utils - torch.utils.jit": [[1858, "module-torch.utils.jit"]], "torch.unflatten": [[1831, "torch-unflatten"]], "torch.tensordot": [[1816, "torch-tensordot"]], "torch.triu_indices": [[1827, "torch-triu-indices"]], "TorchScript Unsupported PyTorch Constructs": [[1857, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1857, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1857, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1857, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1857, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1857, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1857, "pytorch-unsupported-modules-and-classes"]], "TorchScript Language Reference": [[1855, "torchscript-language-reference"], [1854, "torchscript-language-reference"]], "Terminology": [[1855, "terminology"]], "Type System": [[1855, "id1"]], "TorchScript Types": [[1855, "torchscript-types"]], "Meta Types": [[1855, "meta-types"]], "Any Type": [[1855, "any-type"]], "Operators Supported for Any Type": [[1855, "operators-supported-for-any-type"]], "Design Notes": [[1855, "design-notes"], [1905, "design-notes"]], "Primitive Types": [[1855, "primitive-types"]], "Structural Types": [[1855, "structural-types"]], "Nominal Types": [[1855, "nominal-types"]], "Built-in Class": [[1855, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1855, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1855, "custom-class"]], "Enum Type": [[1855, "enum-type"]], "TorchScript Module Class": [[1855, "torchscript-module-class"]], "Module Instance Class": [[1855, "module-instance-class"]], "Type Annotation": [[1855, "type-annotation"]], "When to Annotate Types": [[1855, "when-to-annotate-types"]], "Annotate Function Signature": [[1855, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1855, "annotate-variables-and-data-attributes"]], "Local Variables": [[1855, "local-variables"]], "Instance Data Attributes": [[1855, "instance-data-attributes"]], "Type Annotation APIs": [[1855, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1855, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1855, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1855, "torchscript-type-system-definition"]], "Unsupported Typing Constructs": [[1855, "unsupported-typing-constructs"], [1854, "unsupported-typing-constructs"]], "Expressions": [[1855, "expressions"], [1854, "expressions"]], "Arithmetic Conversions": [[1855, "arithmetic-conversions"]], "Atoms": [[1855, "atoms"]], "Identifiers": [[1855, "identifiers"]], "Literals": [[1855, "literals"], [1854, "literals"]], "Parenthesized Forms": [[1855, "parenthesized-forms"]], "List and Dictionary Displays": [[1855, "list-and-dictionary-displays"]], "Primaries": [[1855, "primaries"]], "Attribute References": [[1855, "attribute-references"]], "Subscriptions": [[1855, "subscriptions"]], "Slicings": [[1855, "slicings"]], "Calls": [[1855, "calls"]], "Power Operator": [[1855, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1855, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1855, "binary-arithmetic-operations"]], "Shifting Operations": [[1855, "shifting-operations"]], "Binary Bitwise Operations": [[1855, "binary-bitwise-operations"]], "Comparisons": [[1855, "comparisons"]], "Value Comparisons": [[1855, "value-comparisons"]], "Membership Test Operations": [[1855, "membership-test-operations"]], "Identity Comparisons": [[1855, "identity-comparisons"]], "Boolean Operations": [[1855, "boolean-operations"]], "Conditional Expressions": [[1855, "conditional-expressions"]], "Expression Lists": [[1855, "expression-lists"]], "Simple Statements": [[1855, "simple-statements"]], "Expression Statements": [[1855, "expression-statements"]], "Assignment Statements": [[1855, "assignment-statements"]], "Augmented Assignment Statements": [[1855, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1855, "annotated-assignment-statements"]], "The raise Statement": [[1855, "the-raise-statement"]], "The assert Statement": [[1855, "the-assert-statement"]], "The return Statement": [[1855, "the-return-statement"]], "The del Statement": [[1855, "the-del-statement"]], "The pass Statement": [[1855, "the-pass-statement"]], "The print Statement": [[1855, "the-print-statement"]], "The break Statement": [[1855, "the-break-statement"]], "The continue Statement:": [[1855, "the-continue-statement"]], "Compound Statements": [[1855, "compound-statements"]], "The if Statement": [[1855, "the-if-statement"]], "Basic if/else Statement": [[1855, "basic-if-else-statement"]], "Ternary if/else Statement": [[1855, "ternary-if-else-statement"]], "The while Statement": [[1855, "the-while-statement"]], "The for-in Statement": [[1855, "the-for-in-statement"]], "The with Statement": [[1855, "the-with-statement"]], "The tuple Statement": [[1855, "the-tuple-statement"]], "The getattr Statement": [[1855, "the-getattr-statement"]], "The hasattr Statement": [[1855, "the-hasattr-statement"]], "The zip Statement": [[1855, "the-zip-statement"]], "The enumerate Statement": [[1855, "the-enumerate-statement"]], "Python Values": [[1855, "python-values"]], "Resolution Rules": [[1855, "resolution-rules"]], "Python Built-in Functions Support": [[1855, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1855, "id5"]], "Python Built-in Values Support": [[1855, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1855, "id6"]], "torch.* APIs": [[1855, "torch-apis"]], "Remote Procedure Calls": [[1855, "remote-procedure-calls"]], "Asynchronous Execution": [[1855, "asynchronous-execution"]], "Type Annotations": [[1855, "type-annotations"]], "Meta Programming": [[1855, "meta-programming"]], "Type Refinement": [[1855, "type-refinement"]], "torch.vmap": [[1842, "torch-vmap"]], "torch.use_deterministic_algorithms": [[1835, "torch-use-deterministic-algorithms"]], "torch.trunc": [[1829, "torch-trunc"]], "torch.var_mean": [[1838, "torch-var-mean"]], "torch.zeros": [[1847, "torch-zeros"]], "torch.tensor": [[1814, "torch-tensor"]], "torch.unbind": [[1830, "torch-unbind"]], "torch.vander": [[1836, "torch-vander"]], "torch.triangular_solve": [[1823, "torch-triangular-solve"]], "torch.unsqueeze": [[1834, "torch-unsqueeze"]], "torch.view_as_complex": [[1840, "torch-view-as-complex"]], "torch.tile": [[1817, "torch-tile"]], "torch.tril_indices": [[1825, "torch-tril-indices"]], "torch.hub": [[1849, "torch-hub"]], "Publishing models": [[1849, "publishing-models"]], "How to implement an entrypoint?": [[1849, "how-to-implement-an-entrypoint"]], "Important Notice": [[1849, "important-notice"]], "Loading models from Hub": [[1849, "loading-models-from-hub"]], "Running a loaded model:": [[1849, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1849, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1849, "caching-logic"]], "Known limitations:": [[1849, "known-limitations"]], "torch.linalg": [[1860, "torch-linalg"]], "Matrix Properties": [[1860, "matrix-properties"]], "Decompositions": [[1860, "decompositions"]], "Solvers": [[1860, "solvers"]], "Inverses": [[1860, "inverses"]], "Matrix Functions": [[1860, "matrix-functions"]], "Matrix Products": [[1860, "matrix-products"]], "Tensor Operations": [[1860, "tensor-operations"]], "Misc": [[1860, "misc"]], "Experimental Functions": [[1860, "experimental-functions"]], "Types": [[1854, "supported-type"], [1893, "types"]], "Default Types": [[1854, "default-types"]], "Optional Type Refinement": [[1854, "optional-type-refinement"]], "TorchScript Classes": [[1854, "id2"], [1852, "torchscript-classes"]], "TorchScript Enums": [[1854, "id4"]], "Named Tuples": [[1854, "named-tuples"]], "Iterables": [[1854, "iterables"]], "List Construction": [[1854, "list-construction"]], "Tuple Construction": [[1854, "tuple-construction"]], "Dict Construction": [[1854, "dict-construction"]], "Variables": [[1854, "variables"], [1852, "variables"], [17, "variables"]], "Arithmetic Operators": [[1854, "arithmetic-operators"]], "Comparison Operators": [[1854, "comparison-operators"]], "Logical Operators": [[1854, "logical-operators"]], "Subscripts and Slicing": [[1854, "subscripts-and-slicing"]], "Function Calls": [[1854, "function-calls"]], "Method Calls": [[1854, "method-calls"]], "Ternary Expressions": [[1854, "ternary-expressions"]], "Casts": [[1854, "casts"]], "Accessing Module Parameters": [[1854, "accessing-module-parameters"]], "Statements": [[1854, "statements"]], "Simple Assignments": [[1854, "simple-assignments"]], "Pattern Matching Assignments": [[1854, "pattern-matching-assignments"]], "Print Statements": [[1854, "print-statements"]], "If Statements": [[1854, "if-statements"]], "While Loops": [[1854, "while-loops"]], "For loops with range": [[1854, "for-loops-with-range"]], "For loops over tuples": [[1854, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1854, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1854, "break-and-continue"]], "Return": [[1854, "return"]], "Variable Resolution": [[1854, "variable-resolution"]], "Use of Python Values": [[1854, "use-of-python-values"]], "Functions": [[1854, "functions"], [1852, "functions"], [1920, "functions"], [1893, "functions"], [1910, "functions"]], "Attribute Lookup On Python Modules": [[1854, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1854, "python-defined-constants"]], "Module Attributes": [[1854, "module-attributes"]], "TorchScript Builtins": [[1853, "torchscript-builtins"]], "Supported Tensor Methods": [[1853, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1853, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1853, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1853, "python-built-in-functions"]], "math Module": [[1853, "math-module"]], "torch.library": [[1859, "torch-library"]], "IRs": [[1851, "irs"]], "Core Aten IR": [[1851, "core-aten-ir"]], "Prims IR": [[1851, "prims-ir"]], "torch.tanh": [[1813, "torch-tanh"]], "torch.unique_consecutive": [[1833, "torch-unique-consecutive"]], "Python Language Reference Coverage": [[1856, "python-language-reference-coverage"]], "torch.topk": [[1818, "torch-topk"]], "torch.tril": [[1824, "torch-tril"]], "torch.var": [[1837, "torch-var"]], "torch.trapz": [[1822, "torch-trapz"]], "torch.xlogy": [[1846, "torch-xlogy"]], "torch.tensor_split": [[1815, "torch-tensor-split"]], "torch.vsplit": [[1843, "torch-vsplit"]], "PyTorch documentation": [[1850, "pytorch-documentation"]], "Community": [[1850, null]], "Developer Notes": [[1850, null]], "torch.compile": [[1850, null], [942, "torch-compile"], [18, "torch-compile"], [15, "torch-compile"]], "Language Bindings": [[1850, null]], "Python API": [[1850, null]], "Libraries": [[1850, null]], "Indices and tables": [[1850, "indices-and-tables"]], "torch._logging": [[1861, "torch-logging"]], "torch.transpose": [[1820, "torch-transpose"]], "torch.vstack": [[1844, "torch-vstack"]], "torch.trace": [[1819, "torch-trace"]], "torch.where": [[1845, "torch-where"]], "torch.triu": [[1826, "torch-triu"]], "torch.unique": [[1832, "torch-unique"]], "TorchScript": [[1852, "torchscript"]], "Creating TorchScript Code": [[1852, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1852, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1852, "torchscript-language"]], "Built-in Functions and Modules": [[1852, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1852, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1852, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1852, "python-language-reference-comparison"]], "Debugging": [[1852, "debugging"], [65, "debugging"]], "Disable JIT for Debugging": [[1852, "disable-jit-for-debugging"]], "Inspecting Code": [[1852, "inspecting-code"]], "Interpreting Graphs": [[1852, "interpreting-graphs"]], "Tracer": [[1852, "tracer"]], "Tracing Edge Cases": [[1852, "tracing-edge-cases"]], "Automatic Trace Checking": [[1852, "automatic-trace-checking"]], "Tracer Warnings": [[1852, "tracer-warnings"]], "Frequently Asked Questions": [[1852, "frequently-asked-questions"], [8, "frequently-asked-questions"], [14, "frequently-asked-questions"], [1882, "frequently-asked-questions"], [1893, "frequently-asked-questions"], [1900, "frequently-asked-questions"]], "Known Issues": [[1852, "known-issues"]], "Appendix": [[1852, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1852, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1852, "modules"], [1886, "modules"]], "Attributes": [[1852, "attributes"]], "Constants": [[1852, "constants"]], "Fusion Backends": [[1852, "fusion-backends"]], "References": [[1852, "references"]], "torch.view_as_real": [[1841, "torch-view-as-real"]], "torch.zeros_like": [[1848, "torch-zeros-like"]], "torch.true_divide": [[1828, "torch-true-divide"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1580, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.functional.tanh": [[1574, "torch-nn-functional-tanh"]], "torch.nn.functional.upsample_bilinear": [[1583, "torch-nn-functional-upsample-bilinear"]], "torch.nn.utils.parametrize.cached": [[1604, "torch-nn-utils-parametrize-cached"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1607, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1589, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.utils.parametrizations.orthogonal": [[1601, "torch-nn-utils-parametrizations-orthogonal"]], "LnStructured": [[1612, "lnstructured"]], "UninitializedBuffer": [[1596, "uninitializedbuffer"]], "BasePruningMethod": [[1608, "basepruningmethod"]], "LazyModuleMixin": [[1585, "lazymodulemixin"]], "torch.nn.functional.upsample": [[1582, "torch-nn-functional-upsample"]], "torch.nn.functional.softplus": [[1571, "torch-nn-functional-softplus"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1578, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.utils.parameters_to_vector": [[1600, "torch-nn-utils-parameters-to-vector"]], "torch.nn.modules.module.register_module_backward_hook": [[1586, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.functional.threshold_": [[1577, "torch-nn-functional-threshold"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1591, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1592, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.modules.module.register_module_forward_hook": [[1588, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.utils.parametrizations.spectral_norm": [[1602, "torch-nn-utils-parametrizations-spectral-norm"]], "L1Unstructured": [[1611, "l1unstructured"]], "Identity": [[1610, "identity"], [1376, "identity"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1593, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "UninitializedParameter": [[1597, "uninitializedparameter"]], "torch.nn.functional.tanhshrink": [[1575, "torch-nn-functional-tanhshrink"]], "PruningContainer": [[1613, "pruningcontainer"]], "torch.nn.utils.clip_grad_value_": [[1599, "torch-nn-utils-clip-grad-value"]], "torch.nn.utils.parametrize.register_parametrization": [[1606, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.functional.softshrink": [[1572, "torch-nn-functional-softshrink"]], "torch.nn.functional.softmin": [[1570, "torch-nn-functional-softmin"]], "torch.nn.functional.soft_margin_loss": [[1568, "torch-nn-functional-soft-margin-loss"]], "DistributedDataParallel": [[1594, "distributeddataparallel"], [1879, "distributeddataparallel"]], "RandomUnstructured": [[1615, "randomunstructured"]], "torch.nn.utils.clip_grad_norm_": [[1598, "torch-nn-utils-clip-grad-norm"]], "torch.nn.functional.triplet_margin_loss": [[1579, "torch-nn-functional-triplet-margin-loss"]], "CustomFromMask": [[1609, "customfrommask"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1590, "torch-nn-modules-module-register-module-full-backward-hook"]], "Parameter": [[1595, "parameter"]], "RandomStructured": [[1614, "randomstructured"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1587, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.functional.upsample_nearest": [[1584, "torch-nn-functional-upsample-nearest"]], "torch.nn.functional.softmax": [[1569, "torch-nn-functional-softmax"]], "ParametrizationList": [[1603, "parametrizationlist"]], "torch.nn.functional.softsign": [[1573, "torch-nn-functional-softsign"]], "torch.nn.functional.threshold": [[1576, "torch-nn-functional-threshold"]], "torch.nn.utils.parametrize.is_parametrized": [[1605, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.functional.unfold": [[1581, "torch-nn-functional-unfold"]], "torch.nn.utils.prune.custom_from_mask": [[1616, "torch-nn-utils-prune-custom-from-mask"]], "torch.optim.Optimizer.state_dict": [[1663, "torch-optim-optimizer-state-dict"]], "GraphInfo": [[1651, "graphinfo"]], "torch.nn.utils.prune.l1_unstructured": [[1620, "torch-nn-utils-prune-l1-unstructured"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1628, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.weight_norm": [[1638, "torch-nn-utils-weight-norm"]], "ExportOutput": [[1648, "exportoutput"]], "torch.optim.Optimizer.step": [[1664, "torch-optim-optimizer-step"]], "torch.nn.utils.remove_spectral_norm": [[1625, "torch-nn-utils-remove-spectral-norm"]], "torch.norm": [[1641, "torch-norm"]], "torch.nn.utils.stateless.functional_call": [[1636, "torch-nn-utils-stateless-functional-call"]], "torch.numel": [[1644, "torch-numel"]], "ExportOptions": [[1647, "exportoptions"]], "torch.nn.utils.prune.global_unstructured": [[1617, "torch-nn-utils-prune-global-unstructured"]], "PackedSequence": [[1627, "packedsequence"]], "torch.nn.utils.rnn.pack_sequence": [[1629, "torch-nn-utils-rnn-pack-sequence"]], "Adagrad": [[1655, "adagrad"]], "NAdam": [[1660, "nadam"]], "Adamax": [[1658, "adamax"]], "torch.nn.utils.prune.random_structured": [[1622, "torch-nn-utils-prune-random-structured"]], "torch.nn.utils.rnn.pad_sequence": [[1631, "torch-nn-utils-rnn-pad-sequence"]], "torch.nn.utils.spectral_norm": [[1635, "torch-nn-utils-spectral-norm"]], "LBFGS": [[1659, "lbfgs"]], "torch.nn.utils.remove_weight_norm": [[1626, "torch-nn-utils-remove-weight-norm"]], "ASGD": [[1653, "asgd"]], "torch.ones": [[1645, "torch-ones"]], "torch.optim.Optimizer.add_param_group": [[1661, "torch-optim-optimizer-add-param-group"]], "torch.nn.utils.prune.identity": [[1618, "torch-nn-utils-prune-identity"]], "torch.nn.utils.prune.ln_structured": [[1621, "torch-nn-utils-prune-ln-structured"]], "torch.nn.utils.skip_init": [[1634, "torch-nn-utils-skip-init"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1630, "torch-nn-utils-rnn-pad-packed-sequence"]], "torch.ones_like": [[1646, "torch-ones-like"]], "JitScalarType": [[1650, "jitscalartype"]], "Adadelta": [[1654, "adadelta"]], "torch.nn.utils.prune.is_pruned": [[1619, "torch-nn-utils-prune-is-pruned"]], "torch.nn.utils.rnn.unpad_sequence": [[1633, "torch-nn-utils-rnn-unpad-sequence"]], "no_grad": [[1639, "no-grad"]], "torch.nn.utils.prune.random_unstructured": [[1623, "torch-nn-utils-prune-random-unstructured"]], "torch.not_equal": [[1643, "torch-not-equal"]], "torch.nn.utils.rnn.unpack_sequence": [[1632, "torch-nn-utils-rnn-unpack-sequence"]], "torch.normal": [[1642, "torch-normal"]], "Adam": [[1656, "adam"]], "ExportOutputSerializer": [[1649, "exportoutputserializer"]], "torch.nonzero": [[1640, "torch-nonzero"]], "VerificationOptions": [[1652, "verificationoptions"]], "torch.optim.Optimizer.load_state_dict": [[1662, "torch-optim-optimizer-load-state-dict"]], "torch.optim.Optimizer.zero_grad": [[1665, "torch-optim-optimizer-zero-grad"]], "AdamW": [[1657, "adamw"]], "torch.nn.utils.vector_to_parameters": [[1637, "torch-nn-utils-vector-to-parameters"]], "torch.nn.utils.prune.remove": [[1624, "torch-nn-utils-prune-remove"]], "torchrun (Elastic Launch)": [[53, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[53, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Usage": [[53, "usage"], [29, "usage"], [38, null]], "Single-node multi-worker": [[53, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[53, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[53, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[53, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[53, "note-on-rendezvous-backend"]], "Definitions": [[53, "definitions"]], "Environment Variables": [[53, "environment-variables"]], "Deployment": [[53, "deployment"]], "Failure Modes": [[53, "failure-modes"]], "Membership Changes": [[53, "membership-changes"]], "Important Notices": [[53, "important-notices"]], "POE0001:node-missing-onnx-shape-inference": [[77, "poe0001-node-missing-onnx-shape-inference"]], "torch.Tensor.add": [[90, "torch-tensor-add"]], "DIAGSYS0001:arg-format-too-verbose": [[66, "diagsys0001-arg-format-too-verbose"]], "Quickstart": [[51, "quickstart"]], "torch.Tensor.abs": [[82, "torch-tensor-abs"]], "POE0004:operator-supported-in-newer-opset-version": [[80, "poe0004-operator-supported-in-newer-opset-version"]], "torch.fx": [[65, "torch-fx"]], "Overview": [[65, "module-torch.fx"], [29, "module-torch.cuda._sanitizer"], [12, "overview"], [1894, "overview"], [1899, "module-torch.profiler"]], "Writing Transformations": [[65, "writing-transformations"]], "A Quick Primer on Graphs": [[65, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[65, "graph-manipulation"]], "Direct Graph Manipulation": [[65, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[65, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[65, "graph-manipulation-examples"]], "Proxy/Retracing": [[65, "proxy-retracing"]], "The Interpreter Pattern": [[65, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[65, "examples-of-the-interpreter-pattern"]], "Introduction": [[65, "introduction"], [1862, "introduction"], [1870, "introduction"]], "Common Pitfalls in Transform Authoring": [[65, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[65, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[65, "debugging-the-generated-code"]], "Use pdb": [[65, "use-pdb"]], "Print the Generated Code": [[65, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[65, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[65, "debugging-the-transformation"]], "Available Debuggers": [[65, "available-debuggers"]], "Limitations of Symbolic Tracing": [[65, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[65, "dynamic-control-flow"]], "Static Control Flow": [[65, "static-control-flow"]], "Non-torch Functions": [[65, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[65, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[65, "leaf-modules"]], "Miscellanea": [[65, "miscellanea"]], "API Reference": [[65, "api-reference"], [29, "api-reference"], [1897, "api-reference"], [1894, "api-reference"], [1865, "module-torch.monitor"], [1899, "api-reference"]], "FXE0003:fx-frontend-aotautograd": [[69, "fxe0003-fx-frontend-aotautograd"]], "FXE0009:fx-frontend-dynamo-make-fx": [[75, "fxe0009-fx-frontend-dynamo-make-fx"]], "torch.Tensor.abs_": [[83, "torch-tensor-abs"]], "torch.func API Reference": [[59, "module-torch.func"]], "Function Transforms": [[59, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[59, "utilities-for-working-with-torch-nn-modules"]], "Expiration Timers": [[54, "module-torch.distributed.elastic.timer"]], "Client Methods": [[54, "client-methods"]], "Server/Client Implementations": [[54, "server-client-implementations"]], "Writing a custom timer server/client": [[54, "writing-a-custom-timer-server-client"]], "FXE0010:fx-pass": [[76, "fxe0010-fx-pass"]], "torch.Tensor.addcmul": [[96, "torch-tensor-addcmul"]], "torch.Tensor.addcdiv_": [[95, "torch-tensor-addcdiv"]], "torch.func": [[58, "torch-func"]], "What are composable function transforms?": [[58, "what-are-composable-function-transforms"]], "Why composable function transforms?": [[58, "why-composable-function-transforms"], [63, "why-composable-function-transforms"]], "Read More": [[58, "read-more"]], "torch.Tensor.acos_": [[87, "torch-tensor-acos"]], "POE0002:missing-custom-symbolic-function": [[78, "poe0002-missing-custom-symbolic-function"]], "torch.Tensor.addcmul_": [[97, "torch-tensor-addcmul"]], "torch.Tensor.acosh_": [[89, "torch-tensor-acosh"]], "FXE0005:fx-ir-add-node": [[71, "fxe0005-fx-ir-add-node"]], "FXE0004:fx-pass-convert-neg-to-sigmoid": [[70, "fxe0004-fx-pass-convert-neg-to-sigmoid"]], "Multiprocessing": [[50, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[50, "starting-multiple-workers"]], "Process Context": [[50, "process-context"]], "POE0003:missing-standard-symbolic-function": [[79, "poe0003-missing-standard-symbolic-function"]], "Metrics": [[49, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[49, "metric-handlers"]], "Methods": [[49, "methods"]], "torch.Tensor.addbmm": [[92, "torch-tensor-addbmm"]], "torch.Tensor.addcdiv": [[94, "torch-tensor-addcdiv"]], "torch.func Whirlwind Tour": [[63, "torch-func-whirlwind-tour"]], "What is torch.func?": [[63, "what-is-torch-func"]], "What are the transforms?": [[63, "what-are-the-transforms"]], "grad() (gradient computation)": [[63, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[63, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[63, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[63, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[63, "jacrev-jacfwd-and-hessian"]], "FXE0007:atenlib-fx-to-onnx": [[73, "fxe0007-atenlib-fx-to-onnx"]], "FXE0006:atenlib-symbolic-function": [[72, "fxe0006-atenlib-symbolic-function"]], "torch.Tensor.acos": [[86, "torch-tensor-acos"]], "Generator": [[81, "generator"]], "torch.fft": [[56, "torch-fft"]], "Fast Fourier Transforms": [[56, "fast-fourier-transforms"]], "Helper Functions": [[56, "helper-functions"]], "FullyShardedDataParallel": [[57, "module-torch.distributed.fsdp"]], "Patching Batch Norm": [[60, "patching-batch-norm"]], "What\u2019s happening?": [[60, "what-s-happening"]], "How to fix": [[60, "how-to-fix"]], "Option 1: Change the BatchNorm": [[60, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[60, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[60, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[60, "option-4-eval-mode"]], "torch.futures": [[64, "torch-futures"]], "FXE0008:fx-node-to-onnx": [[74, "fxe0008-fx-node-to-onnx"]], "FXE0002:fx-tracer-failure": [[68, "fxe0002-fx-tracer-failure"]], "UX Limitations": [[62, "ux-limitations"]], "General limitations": [[62, "general-limitations"]], "torch.autograd APIs": [[62, "torch-autograd-apis"]], "vmap limitations": [[62, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[62, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[62, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[62, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[62, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[62, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[62, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[62, "randomness"]], "torch.Tensor.absolute": [[84, "torch-tensor-absolute"]], "FXE0001:fx-tracer-success": [[67, "fxe0001-fx-tracer-success"]], "Rendezvous": [[52, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[52, "registry"]], "Handler": [[52, "handler"]], "Exceptions": [[52, "exceptions"]], "Implementations": [[52, "implementations"], [43, "implementations"]], "Dynamic Rendezvous": [[52, "dynamic-rendezvous"]], "C10d Backend": [[52, "c10d-backend"]], "Etcd Backend": [[52, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[52, "etcd-rendezvous-legacy"]], "Etcd Store": [[52, "etcd-store"]], "Etcd Server": [[52, "etcd-server"]], "torch.Tensor.absolute_": [[85, "torch-tensor-absolute"]], "Migrating from functorch to torch.func": [[61, "migrating-from-functorch-to-torch-func"]], "function transforms": [[61, "function-transforms"]], "NN module utilities": [[61, "nn-module-utilities"]], "functorch.make_functional": [[61, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[61, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[61, "functorch-compile"]], "torch.Tensor.addbmm_": [[93, "torch-tensor-addbmm"]], "Train script": [[55, "train-script"]], "torch.Tensor.add_": [[91, "torch-tensor-add"]], "torch.Tensor.acosh": [[88, "torch-tensor-acosh"]], "torch.nn.functional.rrelu_": [[1562, "torch-nn-functional-rrelu"]], "torch.nn.functional.sigmoid": [[1565, "torch-nn-functional-sigmoid"]], "torch.nn.functional.local_response_norm": [[1531, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.smooth_l1_loss": [[1567, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.relu_": [[1560, "torch-nn-functional-relu"]], "torch.nn.functional.kl_div": [[1525, "torch-nn-functional-kl-div"]], "torch.nn.functional.selu": [[1564, "torch-nn-functional-selu"]], "torch.nn.functional.mse_loss": [[1544, "torch-nn-functional-mse-loss"]], "torch.nn.functional.lp_pool2d": [[1535, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.one_hot": [[1550, "torch-nn-functional-one-hot"]], "torch.nn.functional.instance_norm": [[1523, "torch-nn-functional-instance-norm"]], "torch.nn.functional.silu": [[1566, "torch-nn-functional-silu"]], "torch.nn.functional.logsigmoid": [[1533, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.leaky_relu_": [[1529, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.lp_pool1d": [[1534, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.pairwise_distance": [[1552, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.nll_loss": [[1548, "torch-nn-functional-nll-loss"]], "torch.nn.functional.layer_norm": [[1527, "torch-nn-functional-layer-norm"]], "torch.nn.functional.prelu": [[1557, "torch-nn-functional-prelu"]], "torch.nn.functional.log_softmax": [[1532, "torch-nn-functional-log-softmax"]], "torch.nn.functional.hinge_embedding_loss": [[1521, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.relu6": [[1559, "torch-nn-functional-relu6"]], "torch.nn.functional.huber_loss": [[1522, "torch-nn-functional-huber-loss"]], "torch.nn.functional.l1_loss": [[1526, "torch-nn-functional-l1-loss"]], "torch.nn.functional.max_unpool2d": [[1541, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.hardtanh_": [[1520, "torch-nn-functional-hardtanh"]], "torch.nn.functional.relu": [[1558, "torch-nn-functional-relu"]], "torch.nn.functional.max_unpool1d": [[1540, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.max_pool1d": [[1537, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.max_pool3d": [[1539, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.mish": [[1543, "torch-nn-functional-mish"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1547, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.margin_ranking_loss": [[1536, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.leaky_relu": [[1528, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.interpolate": [[1524, "torch-nn-functional-interpolate"]], "torch.nn.functional.max_unpool3d": [[1542, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.max_pool2d": [[1538, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.multilabel_margin_loss": [[1546, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.multi_margin_loss": [[1545, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.poisson_nll_loss": [[1556, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.hardtanh": [[1519, "torch-nn-functional-hardtanh"]], "torch.nn.functional.pixel_unshuffle": [[1555, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.pad": [[1551, "torch-nn-functional-pad"]], "torch.nn.functional.rrelu": [[1561, "torch-nn-functional-rrelu"]], "torch.nn.functional.linear": [[1530, "torch-nn-functional-linear"]], "torch.nn.functional.normalize": [[1549, "torch-nn-functional-normalize"]], "torch.nn.functional.pixel_shuffle": [[1554, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.scaled_dot_product_attention": [[1563, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.pdist": [[1553, "torch-nn-functional-pdist"]], "torch.nn.functional.binary_cross_entropy": [[1485, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.gumbel_softmax": [[1515, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.cross_entropy": [[1496, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.dropout3d": [[1501, "torch-nn-functional-dropout3d"]], "torch.nn.functional.bilinear": [[1484, "torch-nn-functional-bilinear"]], "torch.nn.functional.gelu": [[1511, "torch-nn-functional-gelu"]], "torch.nn.functional.adaptive_avg_pool3d": [[1474, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.functional.adaptive_avg_pool1d": [[1472, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.group_norm": [[1514, "torch-nn-functional-group-norm"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1486, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.dropout2d": [[1500, "torch-nn-functional-dropout2d"]], "torch.nn.functional.fractional_max_pool2d": [[1508, "torch-nn-functional-fractional-max-pool2d"]], "ZeroPad2d": [[1470, "zeropad2d"]], "torch.nn.functional.elu_": [[1503, "torch-nn-functional-elu"]], "torch.nn.functional.adaptive_max_pool2d": [[1476, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.embedding_bag": [[1505, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.adaptive_max_pool3d": [[1477, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.batch_norm": [[1483, "torch-nn-functional-batch-norm"]], "ZeroPad3d": [[1471, "zeropad3d"]], "torch.nn.functional.conv3d": [[1490, "torch-nn-functional-conv3d"]], "torch.nn.functional.conv_transpose1d": [[1491, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.gaussian_nll_loss": [[1510, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.cosine_embedding_loss": [[1494, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.grid_sample": [[1513, "torch-nn-functional-grid-sample"]], "torch.nn.functional.hardswish": [[1518, "torch-nn-functional-hardswish"]], "torch.nn.functional.conv1d": [[1488, "torch-nn-functional-conv1d"]], "torch.nn.functional.feature_alpha_dropout": [[1506, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.hardsigmoid": [[1517, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.embedding": [[1504, "torch-nn-functional-embedding"]], "torch.nn.functional.adaptive_max_pool1d": [[1475, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.avg_pool1d": [[1480, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.dropout1d": [[1499, "torch-nn-functional-dropout1d"]], "torch.nn.functional.elu": [[1502, "torch-nn-functional-elu"]], "torch.nn.functional.ctc_loss": [[1497, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.alpha_dropout": [[1479, "torch-nn-functional-alpha-dropout"]], "torch.nn.functional.glu": [[1512, "torch-nn-functional-glu"]], "torch.nn.functional.affine_grid": [[1478, "torch-nn-functional-affine-grid"]], "torch.nn.functional.conv_transpose3d": [[1493, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.cosine_similarity": [[1495, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.conv_transpose2d": [[1492, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.avg_pool2d": [[1481, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.avg_pool3d": [[1482, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.celu": [[1487, "torch-nn-functional-celu"]], "torch.nn.functional.conv2d": [[1489, "torch-nn-functional-conv2d"]], "torch.nn.functional.fractional_max_pool3d": [[1509, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.hardshrink": [[1516, "torch-nn-functional-hardshrink"]], "torch.nn.functional.fold": [[1507, "torch-nn-functional-fold"]], "torch.nn.functional.adaptive_avg_pool2d": [[1473, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.dropout": [[1498, "torch-nn-functional-dropout"]], "TransformerEncoderLayer": [[1461, "transformerencoderlayer"]], "ReplicationPad2d": [[1439, "replicationpad2d"]], "Tanh": [[1454, "tanh"]], "Transformer": [[1457, "transformer"], [22, "transformer"]], "ParameterDict": [[1424, "parameterdict"]], "TripletMarginLoss": [[1462, "tripletmarginloss"]], "NLLLoss": [[1421, "nllloss"]], "UpsamplingNearest2d": [[1468, "upsamplingnearest2d"]], "ReplicationPad1d": [[1438, "replicationpad1d"]], "Unfold": [[1465, "unfold"]], "TransformerEncoder": [[1460, "transformerencoder"]], "Sigmoid": [[1444, "sigmoid"], [748, "sigmoid"]], "SoftMarginLoss": [[1446, "softmarginloss"]], "ParameterList": [[1425, "parameterlist"]], "ReLU6": [[1434, "relu6"], [747, "relu6"]], "Upsample": [[1466, "upsample"]], "Softmax2d": [[1448, "softmax2d"]], "TransformerDecoder": [[1458, "transformerdecoder"]], "RNNCell": [[1431, "rnncell"], [754, "rnncell"]], "ZeroPad1d": [[1469, "zeropad1d"]], "SmoothL1Loss": [[1445, "smoothl1loss"]], "Softmin": [[1449, "softmin"]], "Tanhshrink": [[1455, "tanhshrink"]], "Threshold": [[1456, "threshold"]], "Softsign": [[1452, "softsign"]], "UpsamplingBilinear2d": [[1467, "upsamplingbilinear2d"]], "Unflatten": [[1464, "unflatten"]], "ReflectionPad1d": [[1435, "reflectionpad1d"]], "PoissonNLLLoss": [[1428, "poissonnllloss"]], "RReLU": [[1432, "rrelu"]], "RNNBase": [[1430, "rnnbase"]], "ReflectionPad3d": [[1437, "reflectionpad3d"]], "TransformerDecoderLayer": [[1459, "transformerdecoderlayer"]], "ReLU": [[1433, "relu"]], "PReLU": [[1422, "prelu"]], "PixelUnshuffle": [[1427, "pixelunshuffle"]], "TripletMarginWithDistanceLoss": [[1463, "tripletmarginwithdistanceloss"]], "SiLU": [[1443, "silu"]], "Softshrink": [[1451, "softshrink"]], "Sequential": [[1442, "sequential"]], "PairwiseDistance": [[1423, "pairwisedistance"]], "SELU": [[1441, "selu"]], "Softmax": [[1447, "softmax"]], "ReplicationPad3d": [[1440, "replicationpad3d"]], "RNN": [[1429, "rnn"]], "PixelShuffle": [[1426, "pixelshuffle"]], "Softplus": [[1450, "softplus"]], "ReflectionPad2d": [[1436, "reflectionpad2d"]], "SyncBatchNorm": [[1453, "syncbatchnorm"]], "torch.median": [[1282, "torch-median"]], "torch.mps.set_rng_state": [[1300, "torch-mps-set-rng-state"]], "torch.nanquantile": [[1311, "torch-nanquantile"]], "torch.nansum": [[1312, "torch-nansum"]], "torch.mps.profiler.stop": [[1297, "torch-mps-profiler-stop"]], "torch.mps.get_rng_state": [[1293, "torch-mps-get-rng-state"]], "torch.mul": [[1303, "torch-mul"]], "torch.nanmedian": [[1310, "torch-nanmedian"]], "torch.mps.set_per_process_memory_fraction": [[1299, "torch-mps-set-per-process-memory-fraction"]], "torch.nextafter": [[1318, "torch-nextafter"]], "torch.mode": [[1287, "torch-mode"]], "AdaptiveAvgPool2d": [[1320, "adaptiveavgpool2d"]], "torch.mps.manual_seed": [[1294, "torch-mps-manual-seed"]], "torch.max": [[1279, "torch-max"]], "torch.mps.current_allocated_memory": [[1290, "torch-mps-current-allocated-memory"]], "torch.nanmean": [[1309, "torch-nanmean"]], "torch.mps.synchronize": [[1301, "torch-mps-synchronize"]], "torch.mps.profiler.start": [[1296, "torch-mps-profiler-start"]], "torch.mps.seed": [[1298, "torch-mps-seed"]], "torch.negative": [[1317, "torch-negative"]], "torch.multinomial": [[1304, "torch-multinomial"]], "torch.minimum": [[1285, "torch-minimum"]], "torch.mean": [[1281, "torch-mean"]], "torch.nan_to_num": [[1308, "torch-nan-to-num"]], "torch.ne": [[1315, "torch-ne"]], "torch.matrix_power": [[1278, "torch-matrix-power"]], "torch.matmul": [[1276, "torch-matmul"]], "torch.maximum": [[1280, "torch-maximum"]], "torch.mps.profiler.profile": [[1295, "torch-mps-profiler-profile"]], "torch.moveaxis": [[1288, "torch-moveaxis"]], "AdaptiveAvgPool1d": [[1319, "adaptiveavgpool1d"]], "torch.movedim": [[1289, "torch-movedim"]], "torch.matrix_exp": [[1277, "torch-matrix-exp"]], "torch.manual_seed": [[1274, "torch-manual-seed"]], "AdaptiveLogSoftmaxWithLoss": [[1322, "adaptivelogsoftmaxwithloss"]], "torch.mvlgamma": [[1307, "torch-mvlgamma"]], "torch.meshgrid": [[1283, "torch-meshgrid"]], "torch.masked_select": [[1275, "torch-masked-select"]], "torch.narrow_copy": [[1314, "torch-narrow-copy"]], "torch.mv": [[1306, "torch-mv"]], "torch.multiply": [[1305, "torch-multiply"]], "torch.mps.empty_cache": [[1292, "torch-mps-empty-cache"]], "torch.min": [[1284, "torch-min"]], "torch.narrow": [[1313, "torch-narrow"]], "AdaptiveAvgPool3d": [[1321, "adaptiveavgpool3d"]], "torch.mm": [[1286, "torch-mm"]], "torch.msort": [[1302, "torch-msort"]], "torch.mps.driver_allocated_memory": [[1291, "torch-mps-driver-allocated-memory"]], "torch.neg": [[1316, "torch-neg"]], "Dropout": [[1352, "dropout"]], "AdaptiveMaxPool2d": [[1324, "adaptivemaxpool2d"]], "Dropout2d": [[1354, "dropout2d"]], "CosineEmbeddingLoss": [[1348, "cosineembeddingloss"]], "CosineSimilarity": [[1349, "cosinesimilarity"]], "DataParallel": [[1351, "dataparallel"]], "Hardsigmoid": [[1371, "hardsigmoid"]], "FractionalMaxPool3d": [[1363, "fractionalmaxpool3d"]], "BCEWithLogitsLoss": [[1331, "bcewithlogitsloss"]], "Dropout3d": [[1355, "dropout3d"]], "Conv2d": [[1343, "conv2d"], [728, "conv2d"], [719, "conv2d"]], "CELU": [[1336, "celu"]], "CrossEntropyLoss": [[1350, "crossentropyloss"]], "AvgPool3d": [[1329, "avgpool3d"]], "BatchNorm3d": [[1334, "batchnorm3d"], [726, "batchnorm3d"]], "ConvTranspose1d": [[1345, "convtranspose1d"], [730, "convtranspose1d"]], "GLU": [[1365, "glu"]], "AdaptiveMaxPool1d": [[1323, "adaptivemaxpool1d"]], "Fold": [[1361, "fold"]], "FractionalMaxPool2d": [[1362, "fractionalmaxpool2d"]], "AdaptiveMaxPool3d": [[1325, "adaptivemaxpool3d"]], "Conv3d": [[1344, "conv3d"], [729, "conv3d"], [720, "conv3d"]], "ELU": [[1356, "elu"], [733, "elu"]], "Conv1d": [[1342, "conv1d"], [727, "conv1d"]], "GELU": [[1364, "gelu"]], "ConvTranspose3d": [[1347, "convtranspose3d"], [732, "convtranspose3d"]], "CTCLoss": [[1337, "ctcloss"]], "GroupNorm": [[1369, "groupnorm"], [738, "groupnorm"]], "BCELoss": [[1330, "bceloss"]], "ChannelShuffle": [[1338, "channelshuffle"]], "BatchNorm1d": [[1332, "batchnorm1d"]], "EmbeddingBag": [[1358, "embeddingbag"], [735, "embeddingbag"]], "FeatureAlphaDropout": [[1359, "featurealphadropout"]], "ConstantPad1d": [[1339, "constantpad1d"]], "Flatten": [[1360, "flatten"]], "BatchNorm2d": [[1333, "batchnorm2d"], [725, "batchnorm2d"]], "Hardshrink": [[1370, "hardshrink"]], "AvgPool1d": [[1327, "avgpool1d"]], "AlphaDropout": [[1326, "alphadropout"]], "GaussianNLLLoss": [[1368, "gaussiannllloss"]], "Bilinear": [[1335, "bilinear"]], "ConvTranspose2d": [[1346, "convtranspose2d"], [731, "convtranspose2d"]], "Embedding": [[1357, "embedding"], [734, "embedding"]], "ConstantPad2d": [[1340, "constantpad2d"]], "GRUCell": [[1367, "grucell"], [750, "grucell"]], "GRU": [[1366, "gru"], [749, "gru"]], "Dropout1d": [[1353, "dropout1d"]], "AvgPool2d": [[1328, "avgpool2d"]], "ConstantPad3d": [[1341, "constantpad3d"]], "LazyConv2d": [[1391, "lazyconv2d"]], "HingeEmbeddingLoss": [[1374, "hingeembeddingloss"]], "L1Loss": [[1381, "l1loss"]], "MaxUnpool3d": [[1412, "maxunpool3d"]], "MultiLabelSoftMarginLoss": [[1418, "multilabelsoftmarginloss"]], "LocalResponseNorm": [[1402, "localresponsenorm"]], "Hardswish": [[1372, "hardswish"], [739, "hardswish"]], "InstanceNorm2d": [[1378, "instancenorm2d"], [741, "instancenorm2d"]], "HuberLoss": [[1375, "huberloss"]], "LSTM": [[1384, "lstm"], [751, "lstm"], [723, "lstm"]], "InstanceNorm3d": [[1379, "instancenorm3d"], [742, "instancenorm3d"]], "LayerNorm": [[1386, "layernorm"], [743, "layernorm"]], "Module": [[1414, "module"]], "MultiMarginLoss": [[1419, "multimarginloss"]], "LazyLinear": [[1399, "lazylinear"]], "MarginRankingLoss": [[1406, "marginrankingloss"]], "MaxPool3d": [[1409, "maxpool3d"]], "MSELoss": [[1405, "mseloss"]], "LazyBatchNorm2d": [[1388, "lazybatchnorm2d"]], "MaxPool1d": [[1407, "maxpool1d"]], "LazyInstanceNorm3d": [[1398, "lazyinstancenorm3d"]], "LazyConvTranspose2d": [[1394, "lazyconvtranspose2d"]], "LogSoftmax": [[1404, "logsoftmax"]], "KLDivLoss": [[1380, "kldivloss"]], "InstanceNorm1d": [[1377, "instancenorm1d"], [740, "instancenorm1d"]], "LeakyReLU": [[1400, "leakyrelu"], [744, "leakyrelu"]], "MaxUnpool2d": [[1411, "maxunpool2d"]], "MaxPool2d": [[1408, "maxpool2d"]], "Mish": [[1413, "mish"]], "MaxUnpool1d": [[1410, "maxunpool1d"]], "Linear": [[1401, "linear"], [745, "linear"], [753, "linear"], [722, "linear"], [721, "linear"]], "MultiheadAttention": [[1420, "multiheadattention"], [724, "multiheadattention"]], "ModuleList": [[1416, "modulelist"]], "LazyConvTranspose3d": [[1395, "lazyconvtranspose3d"]], "LazyBatchNorm1d": [[1387, "lazybatchnorm1d"]], "LogSigmoid": [[1403, "logsigmoid"]], "LazyConv1d": [[1390, "lazyconv1d"]], "LPPool1d": [[1382, "lppool1d"]], "LazyInstanceNorm1d": [[1396, "lazyinstancenorm1d"]], "LazyConv3d": [[1392, "lazyconv3d"]], "LazyConvTranspose1d": [[1393, "lazyconvtranspose1d"]], "LazyInstanceNorm2d": [[1397, "lazyinstancenorm2d"]], "ModuleDict": [[1415, "moduledict"]], "MultiLabelMarginLoss": [[1417, "multilabelmarginloss"]], "LSTMCell": [[1385, "lstmcell"], [752, "lstmcell"]], "Hardtanh": [[1373, "hardtanh"]], "LPPool2d": [[1383, "lppool2d"]], "LazyBatchNorm3d": [[1389, "lazybatchnorm3d"]], "torch.linalg.lu": [[1228, "torch-linalg-lu"]], "torch.linalg.matrix_norm": [[1234, "torch-linalg-matrix-norm"]], "torch.linalg.vecdot": [[1250, "torch-linalg-vecdot"]], "torch.linalg.tensorinv": [[1247, "torch-linalg-tensorinv"]], "torch.linalg.vander": [[1249, "torch-linalg-vander"]], "torch.log1p": [[1257, "torch-log1p"]], "torch.linalg.lu_factor_ex": [[1230, "torch-linalg-lu-factor-ex"]], "torch.linalg.lstsq": [[1227, "torch-linalg-lstsq"]], "torch.logcumsumexp": [[1261, "torch-logcumsumexp"]], "torch.linalg.vector_norm": [[1251, "torch-linalg-vector-norm"]], "torch.linalg.ldl_solve": [[1226, "torch-linalg-ldl-solve"]], "torch.logical_and": [[1263, "torch-logical-and"]], "torch.linalg.ldl_factor_ex": [[1225, "torch-linalg-ldl-factor-ex"]], "torch.linalg.lu_factor": [[1229, "torch-linalg-lu-factor"]], "torch.linalg.solve_triangular": [[1244, "torch-linalg-solve-triangular"]], "torch.logical_not": [[1264, "torch-logical-not"]], "torch.logsumexp": [[1269, "torch-logsumexp"]], "torch.logdet": [[1262, "torch-logdet"]], "torch.lu_solve": [[1272, "torch-lu-solve"]], "torch.log10": [[1256, "torch-log10"]], "torch.linalg.svd": [[1245, "torch-linalg-svd"]], "torch.logspace": [[1268, "torch-logspace"]], "torch.linalg.matrix_exp": [[1233, "torch-linalg-matrix-exp"]], "torch.logical_xor": [[1266, "torch-logical-xor"]], "torch.linalg.solve_ex": [[1243, "torch-linalg-solve-ex"]], "torch.linalg.qr": [[1240, "torch-linalg-qr"]], "torch.linalg.svdvals": [[1246, "torch-linalg-svdvals"]], "torch.load": [[1253, "torch-load"]], "torch.linalg.tensorsolve": [[1248, "torch-linalg-tensorsolve"]], "torch.lu_unpack": [[1273, "torch-lu-unpack"]], "torch.linalg.matmul": [[1232, "torch-linalg-matmul"]], "torch.linalg.norm": [[1238, "torch-linalg-norm"]], "torch.linalg.matrix_rank": [[1236, "torch-linalg-matrix-rank"]], "torch.linalg.slogdet": [[1241, "torch-linalg-slogdet"]], "torch.log": [[1255, "torch-log"]], "torch.logit": [[1267, "torch-logit"]], "torch.linspace": [[1252, "torch-linspace"]], "torch.log2": [[1258, "torch-log2"]], "torch.linalg.matrix_power": [[1235, "torch-linalg-matrix-power"]], "torch.logaddexp2": [[1260, "torch-logaddexp2"]], "torch.lt": [[1270, "torch-lt"]], "torch.linalg.pinv": [[1239, "torch-linalg-pinv"]], "torch.logical_or": [[1265, "torch-logical-or"]], "torch.linalg.multi_dot": [[1237, "torch-linalg-multi-dot"]], "torch.lobpcg": [[1254, "torch-lobpcg"]], "torch.logaddexp": [[1259, "torch-logaddexp"]], "torch.lu": [[1271, "torch-lu"]], "torch.linalg.lu_solve": [[1231, "torch-linalg-lu-solve"]], "torch.linalg.solve": [[1242, "torch-linalg-solve"]], "torch.histogram": [[1143, "torch-histogram"]], "torch.get_num_threads": [[1133, "torch-get-num-threads"]], "torch.is_tensor": [[1169, "torch-is-tensor"]], "torch.isclose": [[1171, "torch-isclose"]], "torch.hann_window": [[1140, "torch-hann-window"]], "torch.heaviside": [[1141, "torch-heaviside"]], "torch.histc": [[1142, "torch-histc"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1163, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.isnan": [[1175, "torch-isnan"]], "torch.is_complex": [[1161, "torch-is-complex"]], "torch.imag": [[1152, "torch-imag"]], "torch.gt": [[1138, "torch-gt"]], "torch.index_copy": [[1154, "torch-index-copy"]], "torch.is_nonzero": [[1167, "torch-is-nonzero"]], "torch.inverse": [[1160, "torch-inverse"]], "torch.hypot": [[1148, "torch-hypot"]], "torch.get_num_interop_threads": [[1132, "torch-get-num-interop-threads"]], "torch.i0": [[1149, "torch-i0"]], "torch.get_default_dtype": [[1129, "torch-get-default-dtype"]], "torch.is_storage": [[1168, "torch-is-storage"]], "torch.hstack": [[1147, "torch-hstack"]], "torch.index_select": [[1156, "torch-index-select"]], "torch.initial_seed": [[1158, "torch-initial-seed"]], "torch.isfinite": [[1172, "torch-isfinite"]], "torch.ger": [[1128, "torch-ger"]], "torch.inner": [[1159, "torch-inner"]], "torch.index_add": [[1153, "torch-index-add"]], "torch.index_reduce": [[1155, "torch-index-reduce"]], "torch.hsplit": [[1145, "torch-hsplit"]], "torch.get_float32_matmul_precision": [[1131, "torch-get-float32-matmul-precision"]], "torch.histogramdd": [[1144, "torch-histogramdd"]], "torch.gradient": [[1135, "torch-gradient"]], "inference_mode": [[1157, "inference-mode"]], "torch.is_floating_point": [[1164, "torch-is-floating-point"]], "torch.hamming_window": [[1139, "torch-hamming-window"]], "torch.hspmm": [[1146, "torch-hspmm"]], "torch.igamma": [[1150, "torch-igamma"]], "torch.is_warn_always_enabled": [[1170, "torch-is-warn-always-enabled"]], "torch.geqrf": [[1127, "torch-geqrf"]], "torch.get_rng_state": [[1134, "torch-get-rng-state"]], "torch.is_conj": [[1162, "torch-is-conj"]], "torch.igammac": [[1151, "torch-igammac"]], "torch.get_deterministic_debug_mode": [[1130, "torch-get-deterministic-debug-mode"]], "torch.is_grad_enabled": [[1165, "torch-is-grad-enabled"]], "torch.is_inference_mode_enabled": [[1166, "torch-is-inference-mode-enabled"]], "torch.isin": [[1173, "torch-isin"]], "torch.greater": [[1136, "torch-greater"]], "torch.isinf": [[1174, "torch-isinf"]], "torch.greater_equal": [[1137, "torch-greater-equal"]], "Tensor Attributes": [[1912, "tensor-attributes"]], "torch.dtype": [[1912, "torch-dtype"]], "torch.device": [[1912, "torch-device"]], "torch.layout": [[1912, "torch-layout"]], "torch.memory_format": [[1912, "torch-memory-format"]], "torch.utils.tensorboard": [[1914, "module-torch.utils.tensorboard"]], "Tensor Views": [[1913, "tensor-views"]], "torch.Storage": [[1911, "torch-storage"]], "torch": [[1917, "module-torch"]], "Tensors": [[1917, "tensors"]], "Creation Ops": [[1917, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1917, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1917, "generators"]], "Random sampling": [[1917, "random-sampling"]], "In-place random sampling": [[1917, "in-place-random-sampling"]], "Quasi-random sampling": [[1917, "quasi-random-sampling"]], "Serialization": [[1917, "serialization"], [24, "serialization"]], "Parallelism": [[1917, "parallelism"]], "Locally disabling gradient computation": [[1917, "locally-disabling-gradient-computation"], [2, "locally-disabling-gradient-computation"], [1875, "locally-disabling-gradient-computation"]], "Math operations": [[1917, "math-operations"]], "Pointwise Ops": [[1917, "pointwise-ops"]], "Reduction Ops": [[1917, "reduction-ops"]], "Comparison Ops": [[1917, "comparison-ops"]], "Spectral Ops": [[1917, "spectral-ops"]], "Other Operations": [[1917, "other-operations"]], "BLAS and LAPACK Operations": [[1917, "blas-and-lapack-operations"]], "Foreach Operations": [[1917, "foreach-operations"]], "Utilities": [[1917, "utilities"], [1871, "module-torch.nn.utils"]], "Symbolic Numbers": [[1917, "symbolic-numbers"]], "Optimizations": [[1917, "optimizations"], [18, "optimizations"]], "Operator Tags": [[1917, "operator-tags"]], "Engine Configuration": [[1917, "engine-configuration"]], "torch.overrides": [[1920, "torch-overrides"]], "Type Info": [[1921, "type-info"]], "torch.finfo": [[1921, "torch-finfo"]], "torch.iinfo": [[1921, "torch-iinfo"]], "torch.ao.ns._numeric_suite": [[1918, "torch-ao-ns-numeric-suite"]], "torch.testing": [[1916, "module-torch.testing"]], "torch.Tensor": [[1915, "torch-tensor"]], "Data types": [[1915, "data-types"]], "Initializing and basic operations": [[1915, "initializing-and-basic-operations"]], "Tensor class reference": [[1915, "tensor-class-reference"]], "torch.ao.ns._numeric_suite_fx": [[1919, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1919, "torch-ao-ns-fx-utils"]], "torch.lgamma": [[1210, "torch-lgamma"]], "torch.jit.wait": [[1200, "torch-jit-wait"]], "torch.linalg.ldl_factor": [[1224, "torch-linalg-ldl-factor"]], "torch.jit.freeze": [[1186, "torch-jit-freeze"]], "torch.jit.optimize_for_inference": [[1191, "torch-jit-optimize-for-inference"]], "torch.jit.set_fusion_strategy": [[1195, "torch-jit-set-fusion-strategy"]], "strict_fusion": [[1196, "strict-fusion"]], "torch.linalg.cond": [[1213, "torch-linalg-cond"]], "torch.isposinf": [[1177, "torch-isposinf"]], "torch.kron": [[1202, "torch-kron"]], "Attribute": [[1180, "attribute"]], "torch.jit.annotate": [[1183, "torch-jit-annotate"]], "torch.jit.enable_onednn_fusion": [[1184, "torch-jit-enable-onednn-fusion"]], "torch.isneginf": [[1176, "torch-isneginf"]], "torch.linalg.eig": [[1217, "torch-linalg-eig"]], "torch.lcm": [[1204, "torch-lcm"]], "torch.jit.fork": [[1185, "torch-jit-fork"]], "torch.linalg.eigvalsh": [[1220, "torch-linalg-eigvalsh"]], "torch.jit.trace": [[1197, "torch-jit-trace"]], "torch.lerp": [[1207, "torch-lerp"]], "torch.less_equal": [[1209, "torch-less-equal"]], "torch.linalg.inv_ex": [[1223, "torch-linalg-inv-ex"]], "torch.linalg.householder_product": [[1221, "torch-linalg-householder-product"]], "torch.linalg.cholesky_ex": [[1212, "torch-linalg-cholesky-ex"]], "ScriptFunction": [[1181, "scriptfunction"]], "torch.isreal": [[1178, "torch-isreal"]], "ScriptModule": [[1182, "scriptmodule"]], "torch.linalg.det": [[1215, "torch-linalg-det"]], "torch.jit.script": [[1193, "torch-jit-script"]], "torch.istft": [[1179, "torch-istft"]], "torch.linalg.cross": [[1214, "torch-linalg-cross"]], "torch.jit.ignore": [[1187, "torch-jit-ignore"]], "torch.linalg.diagonal": [[1216, "torch-linalg-diagonal"]], "torch.kthvalue": [[1203, "torch-kthvalue"]], "torch.ldexp": [[1205, "torch-ldexp"]], "torch.jit.isinstance": [[1188, "torch-jit-isinstance"]], "torch.jit.script_if_tracing": [[1194, "torch-jit-script-if-tracing"]], "torch.jit.unused": [[1199, "torch-jit-unused"]], "torch.linalg.eigvals": [[1219, "torch-linalg-eigvals"]], "torch.linalg.inv": [[1222, "torch-linalg-inv"]], "torch.jit.onednn_fusion_enabled": [[1190, "torch-jit-onednn-fusion-enabled"]], "torch.jit.save": [[1192, "torch-jit-save"]], "torch.jit.trace_module": [[1198, "torch-jit-trace-module"]], "torch.linalg.eigh": [[1218, "torch-linalg-eigh"]], "torch.less": [[1208, "torch-less"]], "torch.linalg.cholesky": [[1211, "torch-linalg-cholesky"]], "torch.kaiser_window": [[1201, "torch-kaiser-window"]], "torch.le": [[1206, "torch-le"]], "torch.jit.load": [[1189, "torch-jit-load"]], "torch.fft.ifftn": [[1081, "torch-fft-ifftn"]], "torch.fft.ifftshift": [[1082, "torch-fft-ifftshift"]], "torch.flatten": [[1094, "torch-flatten"]], "torch.func.stack_module_state": [[1121, "torch-func-stack-module-state"]], "torch.flipud": [[1097, "torch-flipud"]], "torch.full": [[1109, "torch-full"]], "torch.func.replace_all_batch_norm_modules_": [[1120, "torch-func-replace-all-batch-norm-modules"]], "torch.func.linearize": [[1119, "torch-func-linearize"]], "torch.gcd": [[1125, "torch-gcd"]], "torch.fft.rfftfreq": [[1091, "torch-fft-rfftfreq"]], "torch.fft.rfft2": [[1090, "torch-fft-rfft2"]], "torch.func.functionalize": [[1112, "torch-func-functionalize"]], "torch.frexp": [[1105, "torch-frexp"]], "torch.fft.ihfft2": [[1084, "torch-fft-ihfft2"]], "torch.fft.rfftn": [[1092, "torch-fft-rfftn"]], "torch.fft.ifft": [[1079, "torch-fft-ifft"]], "torch.func.vmap": [[1123, "torch-func-vmap"]], "torch.ge": [[1126, "torch-ge"]], "torch.floor": [[1099, "torch-floor"]], "torch.fmax": [[1101, "torch-fmax"]], "torch.float_power": [[1098, "torch-float-power"]], "torch.func.functional_call": [[1111, "torch-func-functional-call"]], "torch.full_like": [[1110, "torch-full-like"]], "torch.from_numpy": [[1107, "torch-from-numpy"]], "torch.fft.rfft": [[1089, "torch-fft-rfft"]], "torch.fmod": [[1103, "torch-fmod"]], "torch.floor_divide": [[1100, "torch-floor-divide"]], "torch.fliplr": [[1096, "torch-fliplr"]], "torch.func.jacfwd": [[1116, "torch-func-jacfwd"]], "torch.func.jacrev": [[1117, "torch-func-jacrev"]], "torch.func.vjp": [[1122, "torch-func-vjp"]], "torch.fft.irfft2": [[1087, "torch-fft-irfft2"]], "torch.from_dlpack": [[1106, "torch-from-dlpack"]], "torch.fft.irfft": [[1086, "torch-fft-irfft"]], "torch.fmin": [[1102, "torch-fmin"]], "torch.fft.ihfft": [[1083, "torch-fft-ihfft"]], "torch.fft.irfftn": [[1088, "torch-fft-irfftn"]], "torch.flip": [[1095, "torch-flip"]], "torch.func.grad_and_value": [[1114, "torch-func-grad-and-value"]], "torch.gather": [[1124, "torch-gather"]], "torch.fft.ifft2": [[1080, "torch-fft-ifft2"]], "torch.fix": [[1093, "torch-fix"]], "torch.frac": [[1104, "torch-frac"]], "torch.fft.hfftn": [[1078, "torch-fft-hfftn"]], "torch.frombuffer": [[1108, "torch-frombuffer"]], "torch.func.grad": [[1113, "torch-func-grad"]], "torch.func.hessian": [[1115, "torch-func-hessian"]], "torch.func.jvp": [[1118, "torch-func-jvp"]], "torch.fft.ihfftn": [[1085, "torch-fft-ihfftn"]], "torch.fft.hfft2": [[1077, "torch-fft-hfft2"]], "torch.divide": [[1051, "torch-divide"]], "torch.cumsum": [[1037, "torch-cumsum"]], "torch.cumulative_trapezoid": [[1038, "torch-cumulative-trapezoid"]], "torch.cummin": [[1035, "torch-cummin"]], "torch.fft.fftshift": [[1075, "torch-fft-fftshift"]], "torch.fft.fft2": [[1072, "torch-fft-fft2"]], "torch.erfc": [[1063, "torch-erfc"]], "torch.dist": [[1049, "torch-dist"]], "torch.fake_quantize_per_channel_affine": [[1069, "torch-fake-quantize-per-channel-affine"]], "torch.fft.fftfreq": [[1073, "torch-fft-fftfreq"]], "torch.fft.fft": [[1071, "torch-fft-fft"]], "torch.cuda.utilization": [[1033, "torch-cuda-utilization"]], "torch.empty": [[1056, "torch-empty"]], "torch.empty_strided": [[1058, "torch-empty-strided"]], "torch.fft.hfft": [[1076, "torch-fft-hfft"]], "torch.equal": [[1061, "torch-equal"]], "torch.exp": [[1065, "torch-exp"]], "torch.diagflat": [[1044, "torch-diagflat"]], "torch.fft.fftn": [[1074, "torch-fft-fftn"]], "torch.div": [[1050, "torch-div"]], "torch.diff": [[1047, "torch-diff"]], "torch.exp2": [[1066, "torch-exp2"]], "torch.fake_quantize_per_tensor_affine": [[1070, "torch-fake-quantize-per-tensor-affine"]], "torch.cuda.stream": [[1030, "torch-cuda-stream"]], "torch.dot": [[1052, "torch-dot"]], "torch.erf": [[1062, "torch-erf"]], "torch.diag_embed": [[1043, "torch-diag-embed"]], "torch.diagonal_scatter": [[1046, "torch-diagonal-scatter"]], "torch.diag": [[1042, "torch-diag"]], "torch.diagonal": [[1045, "torch-diagonal"]], "torch.cuda.temperature": [[1032, "torch-cuda-temperature"]], "torch.dsplit": [[1053, "torch-dsplit"]], "torch.cuda.synchronize": [[1031, "torch-cuda-synchronize"]], "torch.cummax": [[1034, "torch-cummax"]], "torch.det": [[1041, "torch-det"]], "torch.dstack": [[1054, "torch-dstack"]], "enable_grad": [[1059, "enable-grad"]], "torch.empty_like": [[1057, "torch-empty-like"]], "torch.eq": [[1060, "torch-eq"]], "torch.erfinv": [[1064, "torch-erfinv"]], "torch.eye": [[1068, "torch-eye"]], "torch.dequantize": [[1040, "torch-dequantize"]], "torch.digamma": [[1048, "torch-digamma"]], "torch.expm1": [[1067, "torch-expm1"]], "torch.cuda.set_sync_debug_mode": [[1029, "torch-cuda-set-sync-debug-mode"]], "torch.einsum": [[1055, "torch-einsum"]], "torch.deg2rad": [[1039, "torch-deg2rad"]], "torch.cumprod": [[1036, "torch-cumprod"]], "torch.cuda.list_gpu_processes": [[1000, "torch-cuda-list-gpu-processes"]], "torch.cuda.init": [[992, "torch-cuda-init"]], "torch.cuda.max_memory_cached": [[1005, "torch-cuda-max-memory-cached"]], "torch.cuda.get_arch_list": [[982, "torch-cuda-get-arch-list"]], "torch.cuda.get_device_capability": [[983, "torch-cuda-get-device-capability"]], "torch.cuda.memory_summary": [[1013, "torch-cuda-memory-summary"]], "torch.cuda.set_per_process_memory_fraction": [[1025, "torch-cuda-set-per-process-memory-fraction"]], "torch.cuda.memory_stats": [[1012, "torch-cuda-memory-stats"]], "torch.cuda.ipc_collect": [[994, "torch-cuda-ipc-collect"]], "torch.cuda.reset_max_memory_cached": [[1020, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.is_initialized": [[997, "torch-cuda-is-initialized"]], "torch.cuda.make_graphed_callables": [[1001, "torch-cuda-make-graphed-callables"]], "torch.cuda.memory_allocated": [[1008, "torch-cuda-memory-allocated"]], "torch.cuda.get_gencode_flags": [[986, "torch-cuda-get-gencode-flags"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[999, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.set_stream": [[1028, "torch-cuda-set-stream"]], "torch.cuda.nvtx.mark": [[1015, "torch-cuda-nvtx-mark"]], "torch.cuda.get_rng_state_all": [[988, "torch-cuda-get-rng-state-all"]], "torch.cuda.memory_reserved": [[1010, "torch-cuda-memory-reserved"]], "torch.cuda.power_draw": [[1018, "torch-cuda-power-draw"]], "torch.cuda.get_sync_debug_mode": [[989, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.set_device": [[1024, "torch-cuda-set-device"]], "torch.cuda.jiterator._create_jit_fn": [[998, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.mem_get_info": [[1007, "torch-cuda-mem-get-info"]], "torch.cuda.nvtx.range_pop": [[1016, "torch-cuda-nvtx-range-pop"]], "torch.cuda.memory_cached": [[1009, "torch-cuda-memory-cached"]], "torch.cuda.memory_snapshot": [[1011, "torch-cuda-memory-snapshot"]], "torch.cuda.get_device_name": [[984, "torch-cuda-get-device-name"]], "graph": [[990, "graph"]], "torch.cuda.is_current_stream_capturing": [[996, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.manual_seed": [[1002, "torch-cuda-manual-seed"]], "torch.cuda.get_rng_state": [[987, "torch-cuda-get-rng-state"]], "torch.cuda.nvtx.range_push": [[1017, "torch-cuda-nvtx-range-push"]], "torch.cuda.get_allocator_backend": [[981, "torch-cuda-get-allocator-backend"]], "torch.cuda.seed_all": [[1023, "torch-cuda-seed-all"]], "torch.cuda.initial_seed": [[993, "torch-cuda-initial-seed"]], "torch.cuda.set_rng_state": [[1026, "torch-cuda-set-rng-state"]], "torch.cuda.graph_pool_handle": [[991, "torch-cuda-graph-pool-handle"]], "torch.cuda.reset_peak_memory_stats": [[1021, "torch-cuda-reset-peak-memory-stats"]], "torch.cuda.is_available": [[995, "torch-cuda-is-available"]], "torch.cuda.max_memory_reserved": [[1006, "torch-cuda-max-memory-reserved"]], "torch.cuda.get_device_properties": [[985, "torch-cuda-get-device-properties"]], "torch.cuda.memory_usage": [[1014, "torch-cuda-memory-usage"]], "torch.cuda.empty_cache": [[980, "torch-cuda-empty-cache"]], "torch.cuda.set_rng_state_all": [[1027, "torch-cuda-set-rng-state-all"]], "torch.cuda.max_memory_allocated": [[1004, "torch-cuda-max-memory-allocated"]], "torch.cuda.seed": [[1022, "torch-cuda-seed"]], "torch.cuda.manual_seed_all": [[1003, "torch-cuda-manual-seed-all"]], "torch.cuda.reset_max_memory_allocated": [[1019, "torch-cuda-reset-max-memory-allocated"]], "torch.conj": [[947, "torch-conj"]], "torch.cuda.comm.broadcast": [[968, "torch-cuda-comm-broadcast"]], "torch.cuda.comm.gather": [[970, "torch-cuda-comm-gather"]], "torch.cuda.comm.scatter": [[972, "torch-cuda-comm-scatter"]], "torch.clone": [[939, "torch-clone"]], "Event": [[958, "event"]], "torch.cuda.current_stream": [[975, "torch-cuda-current-stream"]], "device_of": [[979, "device-of"]], "Stream": [[961, "stream"]], "torch.ceil": [[931, "torch-ceil"]], "torch.cuda.caching_allocator_alloc": [[963, "torch-cuda-caching-allocator-alloc"]], "torch.combinations": [[941, "torch-combinations"]], "torch.cholesky_solve": [[935, "torch-cholesky-solve"]], "torch.cuda.change_current_allocator": [[966, "torch-cuda-change-current-allocator"]], "CUDAGraph": [[956, "cudagraph"]], "torch.count_nonzero": [[953, "torch-count-nonzero"]], "torch.cuda.comm.broadcast_coalesced": [[969, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.device_count": [[978, "torch-cuda-device-count"]], "torch.cuda.caching_allocator_delete": [[964, "torch-cuda-caching-allocator-delete"]], "StreamContext": [[962, "streamcontext"]], "torch.cuda.current_device": [[974, "torch-cuda-current-device"]], "torch.column_stack": [[940, "torch-column-stack"]], "torch.cross": [[955, "torch-cross"]], "torch.cuda.clock_rate": [[967, "torch-cuda-clock-rate"]], "torch.clamp": [[937, "torch-clamp"]], "torch.chunk": [[936, "torch-chunk"]], "torch.conj_physical": [[948, "torch-conj-physical"]], "torch.cosh": [[952, "torch-cosh"]], "torch.corrcoef": [[950, "torch-corrcoef"]], "torch.cuda.can_device_access_peer": [[965, "torch-cuda-can-device-access-peer"]], "torch.cholesky_inverse": [[934, "torch-cholesky-inverse"]], "torch.cuda.default_stream": [[976, "torch-cuda-default-stream"]], "device": [[977, "device"]], "torch.chain_matmul": [[932, "torch-chain-matmul"]], "torch.clip": [[938, "torch-clip"]], "torch.complex": [[944, "torch-complex"]], "CUDAPluggableAllocator": [[957, "cudapluggableallocator"]], "torch.copysign": [[949, "torch-copysign"]], "torch.cos": [[951, "torch-cos"]], "torch.cuda.OutOfMemoryError": [[960, "torch-cuda-outofmemoryerror"]], "torch.concatenate": [[946, "torch-concatenate"]], "torch.cuda.comm.reduce_add": [[971, "torch-cuda-comm-reduce-add"]], "torch.cuda.current_blas_handle": [[973, "torch-cuda-current-blas-handle"]], "torch.cholesky": [[933, "torch-cholesky"]], "torch.concat": [[945, "torch-concat"]], "torch.cov": [[954, "torch-cov"]], "ExternalStream": [[959, "externalstream"]], "torch.compiled_with_cxx11_abi": [[943, "torch-compiled-with-cxx11-abi"]], "Customization": [[44, "customization"]], "Launcher": [[44, "launcher"]], "Rendezvous Handler": [[44, "rendezvous-handler"]], "Metric Handler": [[44, "metric-handler"]], "Events Handler": [[44, "events-handler"]], "Examples": [[47, "examples"], [12, "examples"]], "CUDA Stream Sanitizer": [[29, "cuda-stream-sanitizer"]], "Troubleshooting and Gotchas": [[18, "troubleshooting-and-gotchas"]], "Learn more": [[18, "learn-more"]], "Distributed Optimizers": [[39, "distributed-optimizers"]], "Generic Join Context Manager": [[36, "generic-join-context-manager"]], "PyTorch Contribution Guide": [[8, "pytorch-contribution-guide"]], "Contribution Process": [[8, "contribution-process"]], "Getting Started": [[8, "getting-started"], [16, "getting-started"]], "Proposing New Features": [[8, "proposing-new-features"]], "Reporting Issues": [[8, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[8, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[8, "adding-tutorials"]], "Improving Documentation & Tutorials": [[8, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[8, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[8, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[8, "reviewing-open-pull-requests"]], "Improving Code Readability": [[8, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[8, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[8, "promoting-pytorch"]], "Triaging Issues": [[8, "triaging-issues"]], "About Open Source Development": [[8, "about-open-source-development"]], "Common Mistakes To Avoid": [[8, "common-mistakes-to-avoid"]], "On Documentation": [[8, "on-documentation"]], "Python Docs": [[8, "python-docs"]], "C++ Docs": [[8, "c-docs"]], "Tutorials": [[8, "tutorials"], [1905, "tutorials"], [1897, "tutorials"], [1898, "tutorials"]], "Tutorials Build Overview": [[8, "tutorials-build-overview"]], "Contributing a New Tutorial": [[8, "contributing-a-new-tutorial"]], "PyTorch Governance | Build + CI": [[7, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[7, "how-to-add-a-new-maintainer"]], "Custom Backends": [[12, "custom-backends"]], "Registering Custom Backends": [[12, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[12, "custom-backends-after-aotautograd"]], "Debugging Backend": [[12, "debugging-backend"]], "Speedy Backend": [[12, "speedy-backend"]], "Composable Backends": [[12, "composable-backends"]], "Automatic differentiation package - torch.autograd": [[2, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[2, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[2, "functional-higher-level-api"]], "Default gradient layouts": [[2, "default-gradient-layouts"]], "Manual gradient layouts": [[2, "manual-gradient-layouts"]], "In-place operations on Tensors": [[2, "in-place-operations-on-tensors"]], "In-place correctness checks": [[2, "in-place-correctness-checks"], [1875, "in-place-correctness-checks"]], "Variable (deprecated)": [[2, "variable-deprecated"]], "Tensor autograd functions": [[2, "tensor-autograd-functions"]], "Function": [[2, "function"]], "Context method mixins": [[2, "context-method-mixins"]], "Numerical gradient checking": [[2, "numerical-gradient-checking"]], "Profiler": [[2, "profiler"]], "Anomaly detection": [[2, "anomaly-detection"]], "Autograd graph": [[2, "autograd-graph"]], "Technical Overview": [[21, "technical-overview"]], "PyTorch 2.0 Performance Dashboard": [[20, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[20, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[20, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[20, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[20, "how-can-i-run-any-performance-test-locally"]], "torch::deploy has been moved to pytorch/multipy": [[34, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Elastic Agent": [[43, "module-torch.distributed.elastic.agent"]], "Server": [[43, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[43, "concepts"]], "Extending the Agent": [[43, "extending-the-agent"]], "Watchdog in the Agent": [[43, "watchdog-in-the-agent"]], "Events": [[46, "module-torch.distributed.elastic.events"]], "API Methods": [[46, "api-methods"]], "Event Objects": [[46, "event-objects"]], "torch._dynamo": [[0, "torch-dynamo"]], "Torch Distributed Elastic": [[38, "torch-distributed-elastic"]], "Get Started": [[38, "get-started"]], "Documentation": [[38, "documentation"]], "API": [[38, null]], "Advanced": [[38, null]], "Plugins": [[38, null]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[40, "tensor-parallelism-torch-distributed-tensor-parallel"]], "Error Propagation": [[45, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[45, "methods-and-classes"]], "TorchDynamo Deeper Dive": [[13, "torchdynamo-deeper-dive"]], "What is a guard?": [[13, "what-is-a-guard"]], "What is Dynamo doing?": [[13, "what-is-dynamo-doing"]], "torch.backends": [[3, "module-torch.backends"]], "torch.backends.cpu": [[3, "module-torch.backends.cpu"]], "torch.backends.cuda": [[3, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[3, "module-torch.backends.cudnn"]], "torch.backends.mps": [[3, "module-torch.backends.mps"]], "torch.backends.mkl": [[3, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[3, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[3, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[3, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[3, "module-torch.backends.xeon"]], "torch.utils.data": [[32, "module-torch.utils.data"]], "Dataset Types": [[32, "dataset-types"]], "Map-style datasets": [[32, "map-style-datasets"]], "Iterable-style datasets": [[32, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[32, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[32, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[32, "automatic-batching-default"]], "Disable automatic batching": [[32, "disable-automatic-batching"]], "Working with collate_fn": [[32, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[32, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[32, "single-process-data-loading-default"]], "Multi-process data loading": [[32, "multi-process-data-loading"]], "Platform-specific behaviors": [[32, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[32, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[32, "memory-pinning"]], "Complex Numbers": [[24, "complex-numbers"]], "Creating Complex Tensors": [[24, "creating-complex-tensors"]], "Transition from the old representation": [[24, "transition-from-the-old-representation"]], "Accessing real and imag": [[24, "accessing-real-and-imag"]], "Angle and abs": [[24, "angle-and-abs"]], "Linear Algebra": [[24, "linear-algebra"]], "Autograd": [[24, "autograd"]], "Automatic Mixed Precision package - torch.amp": [[1, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[1, "autocasting"]], "Gradient Scaling": [[1, "gradient-scaling"]], "Autocast Op Reference": [[1, "autocast-op-reference"]], "Op Eligibility": [[1, "op-eligibility"]], "CUDA Op-Specific Behavior": [[1, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[1, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[1, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[1, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[1, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[1, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[1, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[1, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[1, "cpu-ops-that-promote-to-the-widest-input-type"]], "TorchElastic Kubernetes": [[48, "torchelastic-kubernetes"]], "Do you support Distributed code?": [[14, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[14, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[14, "why-is-my-code-crashing"]], "TorchDynamo Errors": [[14, "torchdynamo-errors"]], "TorchInductor Errors": [[14, "torchinductor-errors"], [23, "torchinductor-errors"]], "Why is compilation slow?": [[14, "why-is-compilation-slow"]], "Dynamo Compilation": [[14, "dynamo-compilation"]], "Inductor Compilation": [[14, "inductor-compilation"]], "Excessive Recompilation": [[14, "excessive-recompilation"], [23, "excessive-recompilation"]], "Why are you recompiling in production?": [[14, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[14, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[14, "why-am-i-not-seeing-speedups"]], "Graph Breaks": [[14, "graph-breaks"], [23, "graph-breaks"]], "Identifying the cause of a graph break": [[14, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[14, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[14, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[14, "why-am-i-getting-ooms"]], "PyTorch 2.0 NNModule Support": [[19, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[19, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[19, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[19, "state-dict-hooks"]], "PyTorch Design Philosophy": [[9, "pytorch-design-philosophy"]], "Design Principles": [[9, "design-principles"]], "Principle 1: Usability over Performance": [[9, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[9, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[9, "principle-3-python-first-with-best-in-class-language-interoperability"]], "torch.utils.dlpack": [[42, "torch-utils-dlpack"]], "torch.utils.bottleneck": [[5, "module-torch.utils.bottleneck"]], "PyTorch Governance | Mechanics": [[10, "pytorch-governance-mechanics"]], "Summary": [[10, "summary"], [17, "summary"]], "Module Maintainers": [[10, "module-maintainers"]], "Core Maintainers": [[10, "core-maintainers"], [11, "core-maintainers"]], "Lead Core Maintainer (BDFL)": [[10, "lead-core-maintainer-bdfl"], [11, "lead-core-maintainer-bdfl"]], "Nominating, Confirming and Removing Maintainers": [[10, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[10, "the-principles"]], "The Process for Nomination": [[10, "the-process-for-nomination"]], "The Process for Removal": [[10, "the-process-for-removal"]], "Nominating Core Maintainers": [[10, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[10, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[10, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[10, "decision-making"]], "Uncontroversial Changes": [[10, "uncontroversial-changes"]], "Controversial Decision Process": [[10, "controversial-decision-process"]], "General Project Policies": [[10, "general-project-policies"]], "FAQ": [[10, "faq"]], "torch.utils.cpp_extension": [[26, "torch-utils-cpp-extension"]], "torch.__config__": [[25, "module-torch.__config__"]], "torch.utils.checkpoint": [[6, "torch-utils-checkpoint"]], "DDP Communication Hooks": [[33, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[33, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[33, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[33, "default-communication-hooks"]], "PowerSGD Communication Hook": [[33, "powersgd-communication-hook"]], "PowerSGD State": [[33, "powersgd-state"]], "PowerSGD Hooks": [[33, "powersgd-hooks"]], "Debugging Communication Hooks": [[33, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[33, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[33, "acknowledgements"], [1898, "acknowledgements"]], "Distributed communication package - torch.distributed": [[35, "distributed-communication-package-torch-distributed"]], "Backends": [[35, "backends"], [1905, "backends"]], "Backends that come with PyTorch": [[35, "backends-that-come-with-pytorch"]], "Which backend to use?": [[35, "which-backend-to-use"]], "Common environment variables": [[35, "common-environment-variables"]], "Choosing the network interface to use": [[35, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[35, "other-nccl-environment-variables"]], "Basics": [[35, "basics"], [1905, "basics"]], "Initialization": [[35, "initialization"]], "TCP initialization": [[35, "tcp-initialization"]], "Shared file-system initialization": [[35, "shared-file-system-initialization"]], "Environment variable initialization": [[35, "environment-variable-initialization"]], "Post-Initialization": [[35, "post-initialization"]], "Distributed Key-Value Store": [[35, "distributed-key-value-store"]], "Groups": [[35, "groups"]], "Point-to-point communication": [[35, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[35, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[35, "collective-functions"]], "Profiling Collective Communication": [[35, "profiling-collective-communication"]], "Multi-GPU collective functions": [[35, "multi-gpu-collective-functions"]], "Third-party backends": [[35, "third-party-backends"]], "Launch utility": [[35, "launch-utility"]], "Spawn utility": [[35, "spawn-utility"]], "Debugging torch.distributed applications": [[35, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[35, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[35, "torch-distributed-debug"]], "Logging": [[35, "logging"]], "Existing Backends": [[16, "existing-backends"]], "Why do you need another way of optimizing PyTorch code?": [[16, "why-do-you-need-another-way-of-optimizing-pytorch-code"]], "PyTorch Governance | Maintainers": [[11, "pytorch-governance-maintainers"]], "Responsibilities": [[11, "responsibilities"]], "Module-level maintainers": [[11, "module-level-maintainers"]], "NN APIs (torch.nn)": [[11, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[11, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[11, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[11, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[11, "distributions-rng"]], "Distributed": [[11, "distributed"]], "Multiprocessing and DataLoaders": [[11, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[11, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[11, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[11, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[11, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[11, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[11, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[11, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[11, "nvfuser"]], "AMD/ROCm/HIP": [[11, "amd-rocm-hip"]], "Build + CI": [[11, "build-ci"]], "Performance Tools": [[11, "performance-tools"]], "C++ API": [[11, "c-api"]], "C10 utils and operator dispatch": [[11, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[11, "onnx-exporter"]], "Mobile / Edge": [[11, "mobile-edge"]], "Model Compression & Optimization": [[11, "model-compression-optimization"]], "Windows": [[11, "windows"]], "Apple M1/MPS": [[11, "apple-m1-mps"]], "PowerPC": [[11, "powerpc"]], "Docs / Tutorials": [[11, "docs-tutorials"]], "Library-level maintainers": [[11, "library-level-maintainers"]], "XLA": [[11, "xla"]], "TorchServe": [[11, "torchserve"]], "TorchVision": [[11, "torchvision"]], "TorchText": [[11, "torchtext"]], "TorchAudio": [[11, "torchaudio"]], "TorchRec": [[11, "torchrec"]], "TorchX": [[11, "torchx"]], "TorchData / TorchArrow": [[11, "torchdata-torcharrow"]], "Writing Graph Transformations on ATen IR": [[22, "writing-graph-transformations-on-aten-ir"]], "Passes": [[22, "passes"]], "One-to-One Pass": [[22, "one-to-one-pass"]], "One-to-X Pass": [[22, "one-to-x-pass"]], "One-to-None Pass": [[22, "one-to-none-pass"]], "Utilizing Local Information": [[22, "utilizing-local-information"]], "Subgraph Rewriter": [[22, "subgraph-rewriter"]], "Pass Manager": [[22, "pass-manager"]], "Partitioner": [[22, "partitioner"]], "Subgraph Matcher": [[22, "subgraph-matcher"]], "Capability Based Partitioner": [[22, "capability-based-partitioner"]], "PyTorch 2.0 Troubleshooting": [[23, "pytorch-2-0-troubleshooting"]], "Title": [[23, "id1"]], "Diagnosing Runtime Errors": [[23, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[23, "torchdynamo-errors"]], "Minifying TorchInductor Errors": [[23, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[23, "minifying-backend-compiler-errors"]], "Performance Profiling": [[23, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[23, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[23, "torchinductor-debugging-using-torch-compile-debug"]], "Identifying the Cause of a Graph Break": [[23, "identifying-the-cause-of-a-graph-break"]], "Accuracy Debugging": [[23, "accuracy-debugging"]], "File an Issue": [[23, "file-an-issue"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[37, "distributed-checkpoint-torch-distributed-checkpoint"]], "Probability distributions - torch.distributions": [[41, "module-torch.distributions"]], "Score function": [[41, "score-function"]], "Pathwise derivative": [[41, "pathwise-derivative"]], "Distribution": [[41, "distribution"]], "ExponentialFamily": [[41, "exponentialfamily"]], "Bernoulli": [[41, "bernoulli"]], "Beta": [[41, "beta"]], "Binomial": [[41, "binomial"]], "Categorical": [[41, "categorical"]], "Cauchy": [[41, "cauchy"]], "Chi2": [[41, "chi2"]], "ContinuousBernoulli": [[41, "continuousbernoulli"]], "Dirichlet": [[41, "dirichlet"]], "Exponential": [[41, "exponential"]], "FisherSnedecor": [[41, "fishersnedecor"]], "Gamma": [[41, "gamma"]], "Geometric": [[41, "geometric"]], "Gumbel": [[41, "gumbel"]], "HalfCauchy": [[41, "halfcauchy"]], "HalfNormal": [[41, "halfnormal"]], "Independent": [[41, "independent"]], "Kumaraswamy": [[41, "kumaraswamy"]], "LKJCholesky": [[41, "lkjcholesky"]], "Laplace": [[41, "laplace"]], "LogNormal": [[41, "lognormal"]], "LowRankMultivariateNormal": [[41, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[41, "mixturesamefamily"]], "Multinomial": [[41, "multinomial"]], "MultivariateNormal": [[41, "multivariatenormal"]], "NegativeBinomial": [[41, "negativebinomial"]], "Normal": [[41, "normal"]], "OneHotCategorical": [[41, "onehotcategorical"]], "Pareto": [[41, "pareto"]], "Poisson": [[41, "poisson"]], "RelaxedBernoulli": [[41, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[41, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[41, "relaxedonehotcategorical"]], "StudentT": [[41, "studentt"]], "TransformedDistribution": [[41, "transformeddistribution"]], "Uniform": [[41, "uniform"]], "VonMises": [[41, "vonmises"]], "Weibull": [[41, "weibull"]], "Wishart": [[41, "wishart"]], "KL Divergence": [[41, "module-torch.distributions.kl"]], "Transforms": [[41, "module-torch.distributions.transforms"]], "Constraints": [[41, "module-torch.distributions.constraints"], [1878, "constraints"]], "Constraint Registry": [[41, "module-torch.distributions.constraint_registry"]], "C++": [[27, "c"]], "TorchScript C++ API": [[27, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[27, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[27, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[27, "authoring-models-in-c"]], "Packaging for C++": [[27, "packaging-for-c"]], "Benchmark Utils - torch.utils.benchmark": [[4, "module-torch.utils.benchmark"]], "torch.cuda": [[28, "module-torch.cuda"]], "Random Number Generator": [[28, "random-number-generator"]], "Communication collectives": [[28, "communication-collectives"]], "Streams and events": [[28, "streams-and-events"]], "Graphs (beta)": [[28, "graphs-beta"]], "Memory management": [[28, "memory-management"], [1878, "memory-management"], [1884, "memory-management"]], "NVIDIA Tools Extension (NVTX)": [[28, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[28, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[28, "stream-sanitizer-prototype"]], "Guards Overview": [[17, "guards-overview"]], "Caching and Guards Overview": [[17, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[17, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[17, "instructiontranslator"]], "Making Guards": [[17, "making-guards"]], "torch.autograd.gradgradcheck": [[898, "torch-autograd-gradgradcheck"]], "torch.bitwise_or": [[917, "torch-bitwise-or"]], "torch.autograd.functional.jvp": [[893, "torch-autograd-functional-jvp"]], "torch.autograd.profiler.profile.export_chrome_trace": [[905, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[889, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.bernoulli": [[912, "torch-bernoulli"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[888, "torch-autograd-function-functionctx-save-for-backward"]], "set_multithreading_enabled": [[909, "set-multithreading-enabled"]], "torch.broadcast_tensors": [[924, "torch-broadcast-tensors"]], "torch.cat": [[929, "torch-cat"]], "torch.autograd.functional.vjp": [[895, "torch-autograd-functional-vjp"]], "torch.autograd.gradcheck": [[897, "torch-autograd-gradcheck"]], "torch.autograd.graph.Node.next_functions": [[901, "torch-autograd-graph-node-next-functions"]], "torch.bitwise_not": [[916, "torch-bitwise-not"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[886, "torch-autograd-function-functionctx-mark-dirty"]], "torch.block_diag": [[921, "torch-block-diag"]], "torch.bincount": [[913, "torch-bincount"]], "torch.bitwise_xor": [[919, "torch-bitwise-xor"]], "dual_level": [[883, "dual-level"]], "torch.autograd.grad": [[896, "torch-autograd-grad"]], "torch.broadcast_to": [[925, "torch-broadcast-to"]], "torch.autograd.graph.Node.register_prehook": [[903, "torch-autograd-graph-node-register-prehook"]], "torch.blackman_window": [[920, "torch-blackman-window"]], "torch.autograd.functional.hessian": [[890, "torch-autograd-functional-hessian"]], "torch.can_cast": [[927, "torch-can-cast"]], "torch.autograd.profiler.profile.key_averages": [[906, "torch-autograd-profiler-profile-key-averages"]], "torch.cdist": [[930, "torch-cdist"]], "torch.broadcast_shapes": [[923, "torch-broadcast-shapes"]], "torch.bitwise_left_shift": [[915, "torch-bitwise-left-shift"]], "torch.autograd.backward": [[882, "torch-autograd-backward"]], "torch.autograd.functional.jacobian": [[892, "torch-autograd-functional-jacobian"]], "torch.autograd.functional.vhp": [[894, "torch-autograd-functional-vhp"]], "torch.autograd.graph.Node.name": [[900, "torch-autograd-graph-node-name"]], "torch.cartesian_prod": [[928, "torch-cartesian-prod"]], "torch.baddbmm": [[910, "torch-baddbmm"]], "torch.bartlett_window": [[911, "torch-bartlett-window"]], "torch.bitwise_right_shift": [[918, "torch-bitwise-right-shift"]], "torch.autograd.forward_ad.make_dual": [[884, "torch-autograd-forward-ad-make-dual"]], "torch.autograd.graph.Node.register_hook": [[902, "torch-autograd-graph-node-register-hook"]], "torch.autograd.profiler.profile.total_average": [[908, "torch-autograd-profiler-profile-total-average"]], "torch.autograd.graph.Node.metadata": [[899, "torch-autograd-graph-node-metadata"]], "torch.bucketize": [[926, "torch-bucketize"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[907, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.autograd.forward_ad.unpack_dual": [[885, "torch-autograd-forward-ad-unpack-dual"]], "torch.bmm": [[922, "torch-bmm"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[887, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.bitwise_and": [[914, "torch-bitwise-and"]], "torch.autograd.functional.hvp": [[891, "torch-autograd-functional-hvp"]], "torch.autograd.profiler.load_nvprof": [[904, "torch-autograd-profiler-load-nvprof"]], "default_qat_qconfig": [[835, "default-qat-qconfig"]], "default_per_channel_qconfig": [[834, "default-per-channel-qconfig"]], "float_qparams_weight_only_qconfig": [[841, "float-qparams-weight-only-qconfig"]], "torch.argsort": [[865, "torch-argsort"]], "get_default_qconfig_mapping": [[845, "get-default-qconfig-mapping"]], "torch.asin": [[870, "torch-asin"]], "get_default_qat_qconfig_mapping": [[844, "get-default-qat-qconfig-mapping"]], "convert_fx": [[848, "convert-fx"]], "torch.arccos": [[855, "torch-arccos"]], "torch.argmax": [[863, "torch-argmax"]], "torch.atleast_3d": [[877, "torch-atleast-3d"]], "quantize_qat": [[852, "quantize-qat"]], "prepare_qat_fx": [[851, "prepare-qat-fx"]], "torch.arcsinh": [[858, "torch-arcsinh"]], "default_dynamic_qconfig": [[833, "default-dynamic-qconfig"]], "default_qat_qconfig_v2": [[836, "default-qat-qconfig-v2"]], "prepare_fx": [[850, "prepare-fx"]], "torch.as_strided": [[867, "torch-as-strided"]], "torch.atleast_2d": [[876, "torch-atleast-2d"]], "torch.autograd.Function.jvp": [[880, "torch-autograd-function-jvp"]], "default_weight_only_qconfig": [[838, "default-weight-only-qconfig"]], "torch.asarray": [[869, "torch-asarray"]], "torch.arange": [[854, "torch-arange"]], "torch.arctanh": [[861, "torch-arctanh"]], "torch.arctan": [[859, "torch-arctan"]], "torch.are_deterministic_algorithms_enabled": [[862, "torch-are-deterministic-algorithms-enabled"]], "QConfigMapping": [[843, "qconfigmapping"]], "torch.arccosh": [[856, "torch-arccosh"]], "swap_module": [[853, "swap-module"]], "torch.asinh": [[871, "torch-asinh"]], "float16_dynamic_qconfig": [[839, "float16-dynamic-qconfig"]], "torch.atleast_1d": [[875, "torch-atleast-1d"]], "torch.autograd.Function.forward": [[879, "torch-autograd-function-forward"]], "float16_static_qconfig": [[840, "float16-static-qconfig"]], "torch.atan2": [[873, "torch-atan2"]], "torch.autograd.Function.backward": [[878, "torch-autograd-function-backward"]], "torch.arcsin": [[857, "torch-arcsin"]], "quantize": [[846, "quantize"]], "torch.atanh": [[874, "torch-atanh"]], "default_qconfig": [[837, "default-qconfig"]], "torch.argwhere": [[866, "torch-argwhere"]], "fuse_fx": [[849, "fuse-fx"]], "torch.atan": [[872, "torch-atan"]], "torch.as_tensor": [[868, "torch-as-tensor"]], "quantize_dynamic": [[847, "quantize-dynamic"]], "torch.arctan2": [[860, "torch-arctan2"]], "torch.argmin": [[864, "torch-argmin"]], "torch.autograd.Function.vmap": [[881, "torch-autograd-function-vmap"]], "per_channel_dynamic_qconfig": [[842, "per-channel-dynamic-qconfig"]], "torch.optim": [[1896, "module-torch.optim"]], "How to use an optimizer": [[1896, "how-to-use-an-optimizer"]], "Constructing it": [[1896, "constructing-it"]], "Per-parameter options": [[1896, "per-parameter-options"]], "Taking an optimization step": [[1896, "taking-an-optimization-step"]], "optimizer.step()": [[1896, "optimizer-step"]], "optimizer.step(closure)": [[1896, "optimizer-step-closure"]], "Base class": [[1896, "base-class"]], "Algorithms": [[1896, "algorithms"]], "How to adjust learning rate": [[1896, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1896, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1896, "constructing-averaged-models"]], "Custom averaging strategies": [[1896, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1896, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1896, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1896, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1896, "putting-it-all-together-ema"]], "Numerical accuracy": [[1889, "numerical-accuracy"]], "Batched computations or slice computations": [[1889, "batched-computations-or-slice-computations"]], "Extremal values": [[1889, "extremal-values"]], "Linear algebra (torch.linalg)": [[1889, "linear-algebra-torch-linalg"]], "Non-finite values": [[1889, "non-finite-values"]], "Extremal values in linalg": [[1889, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1889, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1889, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1889, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "Distributed Autograd Design": [[1906, "distributed-autograd-design"]], "Background": [[1906, "background"], [1907, "background"]], "Autograd recording during the forward pass": [[1906, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1906, "distributed-autograd-context"]], "Distributed Backward Pass": [[1906, "distributed-backward-pass"]], "Computing dependencies": [[1906, "computing-dependencies"]], "FAST mode algorithm": [[1906, "fast-mode-algorithm"]], "SMART mode algorithm": [[1906, "smart-mode-algorithm"]], "Distributed Optimizer": [[1906, "distributed-optimizer"], [1905, "distributed-optimizer"]], "Simple end to end example": [[1906, "simple-end-to-end-example"]], "Autograd mechanics": [[1875, "autograd-mechanics"]], "How autograd encodes the history": [[1875, "how-autograd-encodes-the-history"]], "Saved tensors": [[1875, "saved-tensors"]], "Gradients for non-differentiable functions": [[1875, "gradients-for-non-differentiable-functions"]], "Setting requires_grad": [[1875, "setting-requires-grad"]], "Grad Modes": [[1875, "grad-modes"]], "Default Mode (Grad Mode)": [[1875, "default-mode-grad-mode"]], "No-grad Mode": [[1875, "no-grad-mode"]], "Inference Mode": [[1875, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1875, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1875, "in-place-operations-with-autograd"]], "Multithreaded Autograd": [[1875, "multithreaded-autograd"]], "Concurrency on CPU": [[1875, "concurrency-on-cpu"]], "Non-determinism": [[1875, "non-determinism"]], "Graph retaining": [[1875, "graph-retaining"]], "Thread Safety on Autograd Node": [[1875, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1875, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1875, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1875, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1875, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1875, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1875, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1875, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1875, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1875, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1875, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1875, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1875, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1875, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1875, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1875, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1875, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "Distributed RPC Framework": [[1905, "distributed-rpc-framework"]], "RPC": [[1905, "rpc"]], "TensorPipe Backend": [[1905, "tensorpipe-backend"]], "RRef": [[1905, "rref"]], "More Information about RRef": [[1905, null]], "RemoteModule": [[1905, "remotemodule"]], "Distributed Autograd Framework": [[1905, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1905, null]], "Windows FAQ": [[1892, "windows-faq"]], "Building from source": [[1892, "building-from-source"]], "Include optional components": [[1892, "include-optional-components"]], "Speeding CUDA build for Windows": [[1892, "speeding-cuda-build-for-windows"]], "One key install script": [[1892, "one-key-install-script"]], "Extension": [[1892, "extension"]], "CFFI Extension": [[1892, "cffi-extension"]], "Cpp Extension": [[1892, "cpp-extension"]], "Installation": [[1892, "installation"]], "Package not found in win-32 channel.": [[1892, "package-not-found-in-win-32-channel"]], "Import error": [[1892, "import-error"]], "Usage (multiprocessing)": [[1892, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1892, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1892, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1892, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1892, "cuda-ipc-operations"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1882, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1882, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1882, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1882, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1882, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "CUDA semantics": [[1878, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1878, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1878, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1878, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1878, "asynchronous-execution"]], "CUDA streams": [[1878, "cuda-streams"]], "Stream semantics of backward passes": [[1878, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1878, "bc-note-using-grads-on-the-default-stream"]], "Environment variables": [[1878, "environment-variables"]], "Using custom memory allocators for CUDA": [[1878, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1878, "cublas-workspaces"]], "cuFFT plan cache": [[1878, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1878, "just-in-time-compilation"]], "Best practices": [[1878, "best-practices"]], "Device-agnostic code": [[1878, "device-agnostic-code"]], "Use pinned memory buffers": [[1878, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1878, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1878, "cuda-graphs"]], "Why CUDA Graphs?": [[1878, "why-cuda-graphs"]], "PyTorch API": [[1878, "pytorch-api"]], "Non-constraints": [[1878, "non-constraints"]], "Whole-network capture": [[1878, "whole-network-capture"]], "Partial-network capture": [[1878, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1878, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1878, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1878, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1878, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1878, "id5"]], "Graph memory management": [[1878, "graph-memory-management"]], "Sharing memory across captures": [[1878, "sharing-memory-across-captures"]], "torch.package": [[1897, "torch-package"]], "Packaging your first model": [[1897, "packaging-your-first-model"]], "How do I\u2026": [[1897, "how-do-i"]], "See what is inside a package?": [[1897, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1897, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1897, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1897, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1897, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1897, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1897, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1897, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1897, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1897, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1897, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1897, "package-a-torchscript-module"]], "Explanation": [[1897, "explanation"]], "torch.package Format Overview": [[1897, "torch-package-format-overview"]], "Framework files": [[1897, "framework-files"]], "User files": [[1897, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1897, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1897, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1897, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1897, "dependency-management"]], "intern": [[1897, "intern"]], "extern": [[1897, "extern"]], "mock": [[1897, "mock"]], "Refactoring": [[1897, "refactoring"]], "Patterns": [[1897, "patterns"]], "torch.package sharp edges": [[1897, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1897, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1897, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1897, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1897, "mangling"]], "Broadcasting semantics": [[1876, "broadcasting-semantics"]], "General semantics": [[1876, "general-semantics"]], "In-place semantics": [[1876, "in-place-semantics"]], "Backwards compatibility": [[1876, "backwards-compatibility"]], "torch.utils.model_zoo": [[1864, "torch-utils-model-zoo"]], "torch.onnx diagnostics": [[1894, "torch-onnx-diagnostics"]], "Diagnostic Rules": [[1894, "diagnostic-rules"]], "torch.nn.functional": [[1872, "torch-nn-functional"]], "Convolution functions": [[1872, "convolution-functions"]], "Pooling functions": [[1872, "pooling-functions"]], "Attention Mechanisms": [[1872, "attention-mechanisms"]], "Non-linear activation functions": [[1872, "non-linear-activation-functions"]], "Linear functions": [[1872, "linear-functions"]], "Dropout functions": [[1872, "dropout-functions"]], "Sparse functions": [[1872, "sparse-functions"]], "Distance functions": [[1872, "distance-functions"]], "Loss functions": [[1872, "loss-functions"]], "Vision functions": [[1872, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1872, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1872, "data-parallel"]], "torch.onnx": [[1893, "torch-onnx"]], "Example: AlexNet from PyTorch to ONNX": [[1893, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1893, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1893, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1893, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1893, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1893, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Limitations": [[1893, "limitations"]], "Differences in Operator Implementations": [[1893, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1893, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1893, "reads-gets"]], "Writes / Sets": [[1893, "writes-sets"]], "Adding support for operators": [[1893, "adding-support-for-operators"]], "ONNX exporter internals": [[1893, "onnx-exporter-internals"]], "ATen operators": [[1893, "aten-operators"]], "List of supported operators": [[1893, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1893, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1893, "torch-autograd-functions"]], "Static Symbolic Method": [[1893, "static-symbolic-method"]], "Inline Autograd Function": [[1893, "inline-autograd-function"]], "Custom operators": [[1893, "custom-operators"]], "ONNX-script functions": [[1893, "onnx-script-functions"]], "C++ Operators": [[1893, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1893, "discovering-all-unconvertible-aten-ops-at-once"]], "Contributing / developing": [[1893, "contributing-developing"]], "Classes": [[1893, "classes"]], "Preview: torch.onnx TorchDynamo Exporter": [[1893, "preview-torch-onnx-torchdynamo-exporter"]], "Remote Reference Protocol": [[1907, "remote-reference-protocol"]], "Assumptions": [[1907, "assumptions"]], "RRef Lifetime": [[1907, "rref-lifetime"]], "Design Reasoning": [[1907, "design-reasoning"]], "Implementation": [[1907, "implementation"], [1879, "implementation"]], "Protocol Scenarios": [[1907, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1907, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1907, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1907, "owner-share-rref-with-user"]], "User Share RRef with User": [[1907, "user-share-rref-with-user"]], "Named Tensors": [[1869, "named-tensors"]], "Creating named tensors": [[1869, "creating-named-tensors"]], "Named dimensions": [[1869, "named-dimensions"]], "Name propagation semantics": [[1869, "name-propagation-semantics"]], "match semantics": [[1869, "match-semantics"]], "Basic name inference rules": [[1869, "basic-name-inference-rules"]], "Explicit alignment by names": [[1869, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1869, "manipulating-dimensions"]], "Autograd support": [[1869, "autograd-support"]], "Currently supported operations and subsystems": [[1869, "currently-supported-operations-and-subsystems"]], "Operators": [[1869, "operators"]], "Subsystems": [[1869, "subsystems"]], "Named tensor API reference": [[1869, "named-tensor-api-reference"]], "Named Tensors operator coverage": [[1868, "named-tensors-operator-coverage"]], "Supported Operations": [[1868, "id1"]], "Keeps input names": [[1868, "keeps-input-names"]], "Removes dimensions": [[1868, "removes-dimensions"]], "Unifies names from inputs": [[1868, "unifies-names-from-inputs"]], "Permutes dimensions": [[1868, "permutes-dimensions"]], "Contracts away dims": [[1868, "contracts-away-dims"]], "Factory functions": [[1868, "factory-functions"]], "out function and in-place variants": [[1868, "out-function-and-in-place-variants"]], "torch.monitor": [[1865, "torch-monitor"]], "ONNX supported TorchScript operators": [[1895, "onnx-supported-torchscript-operators"]], "Supported operators": [[1895, "supported-operators"]], "ONNX support for TorchScript operators": [[1895, "id1"]], "Unsupported operators": [[1895, "unsupported-operators"], [1895, "id2"]], "Quantization": [[1900, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1900, "introduction-to-quantization"]], "Quantization API Summary": [[1900, "quantization-api-summary"]], "Eager Mode Quantization": [[1900, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1900, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1900, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1900, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1900, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype) FX Graph Mode Quantization": [[1900, "prototype-fx-graph-mode-quantization"]], "Quantization Stack": [[1900, "quantization-stack"]], "Quantized Model": [[1900, "quantized-model"]], "Quantized Tensor": [[1900, "quantized-tensor"]], "Quantize and Dequantize": [[1900, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1900, "quantized-operators-modules"]], "Quantized Engine": [[1900, "quantized-engine"]], "Quantization Flow": [[1900, "quantization-flow"]], "Observer and FakeQuantize": [[1900, "observer-and-fakequantize"]], "QConfig": [[1900, "qconfig"], [830, "qconfig"]], "General Quantization Flow": [[1900, "general-quantization-flow"]], "Quantization Support Matrix": [[1900, "quantization-support-matrix"]], "Quantization Mode Support": [[1900, "quantization-mode-support"]], "Quantization Flow Support": [[1900, "quantization-flow-support"]], "Backend/Hardware Support": [[1900, "backend-hardware-support"]], "Note for native CPU backends": [[1900, "note-for-native-cpu-backends"]], "Operator Support": [[1900, "operator-support"]], "Quantization API Reference": [[1900, "quantization-api-reference"], [1903, "quantization-api-reference"]], "Quantization Backend Configuration": [[1900, "quantization-backend-configuration"], [1902, "quantization-backend-configuration"]], "Quantization Accuracy Debugging": [[1900, "quantization-accuracy-debugging"], [1901, "quantization-accuracy-debugging"]], "Quantization Customizations": [[1900, "quantization-customizations"]], "Quantization Custom Module API": [[1900, "quantization-custom-module-api"]], "Best Practices": [[1900, "best-practices"]], "Common Errors": [[1900, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1900, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1900, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1900, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1900, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "CPU threading and TorchScript inference": [[1877, "cpu-threading-and-torchscript-inference"]], "Build options": [[1877, "build-options"]], "Runtime API": [[1877, "runtime-api"]], "Tuning the number of threads": [[1877, "tuning-the-number-of-threads"]], "Default values for native configurations": [[1902, "default-values-for-native-configurations"]], "torch.masked": [[1862, "torch-masked"]], "Motivation": [[1862, "motivation"]], "What is a MaskedTensor?": [[1862, "what-is-a-maskedtensor"]], "Supported Operators": [[1862, "supported-operators"]], "Unary Operators": [[1862, "unary-operators"]], "Binary Operators": [[1862, "binary-operators"]], "Reductions": [[1862, "reductions"]], "View and select functions": [[1862, "view-and-select-functions"]], "MPS backend": [[1887, "mps-backend"]], "Extending torch.func with autograd.Function": [[1881, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1881, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1881, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1881, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1881, "limitations-and-gotchas"]], "torch.vmap() Support": [[1881, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1881, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1881, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1881, "torch-func-jvp-support"]], "Reproducibility": [[1890, "reproducibility"]], "Controlling sources of randomness": [[1890, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1890, "pytorch-random-number-generator"]], "Python": [[1890, "python"]], "Random number generators in other libraries": [[1890, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1890, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1890, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1890, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1890, "cuda-rnn-and-lstm"]], "DataLoader": [[1890, "dataloader"]], "Data insensitive error": [[1901, "data-insensitive-error"]], "General tips": [[1901, "general-tips"]], "Int8 quantization tips": [[1901, "int8-quantization-tips"]], "Data sensitive error": [[1901, "data-sensitive-error"]], "Implementation error": [[1901, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1901, "numerical-debugging-tooling-prototype"]], "Features for large-scale deployments": [[1885, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1885, "fleet-wide-operator-profiling"]], "API usage logging": [[1885, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1885, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1885, "build-environment-considerations"]], "Common extension points": [[1885, "common-extension-points"]], "Multiprocessing best practices": [[1888, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1888, "cuda-in-multiprocessing"]], "Best practices and tips": [[1888, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1888, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1888, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1888, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1888, "hogwild"]], "Gradcheck mechanics": [[1883, "gradcheck-mechanics"]], "Notations and background information": [[1883, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1883, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1883, "real-to-real-functions"]], "Default real input numerical evaluation": [[1883, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1883, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1883, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1883, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1883, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1883, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1883, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1883, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1883, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1883, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1883, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1883, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1883, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1883, "gradgradcheck-implementation"]], "Extending PyTorch": [[1880, "extending-pytorch"]], "Extending torch.autograd": [[1880, "extending-torch-autograd"]], "When to use": [[1880, "when-to-use"]], "When not to use": [[1880, "when-not-to-use"]], "How to use": [[1880, "how-to-use"]], "Example": [[1880, "example"], [1879, "example"]], "Combined or separate forward() and setup_context()": [[1880, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1880, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1880, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1880, "extending-torch-nn"]], "Adding a Module": [[1880, "adding-a-module"]], "Extending torch": [[1880, "extending-torch"]], "Extending torch with a Tensor-like type": [[1880, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1880, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1880, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1880, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1880, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Writing custom C++ extensions": [[1880, "writing-custom-c-extensions"]], "Writing custom C extensions": [[1880, "id2"]], "torch.nn": [[1871, "module-torch.nn"], [1871, "id1"]], "Containers": [[1871, "containers"]], "Convolution Layers": [[1871, "convolution-layers"]], "Pooling layers": [[1871, "pooling-layers"]], "Padding Layers": [[1871, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1871, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1871, "non-linear-activations-other"]], "Normalization Layers": [[1871, "normalization-layers"]], "Recurrent Layers": [[1871, "recurrent-layers"]], "Transformer Layers": [[1871, "transformer-layers"]], "Linear Layers": [[1871, "linear-layers"]], "Dropout Layers": [[1871, "dropout-layers"]], "Sparse Layers": [[1871, "sparse-layers"]], "Distance Functions": [[1871, "distance-functions"]], "Loss Functions": [[1871, "loss-functions"]], "Vision Layers": [[1871, "vision-layers"]], "Shuffle Layers": [[1871, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1871, "module-torch.nn.parallel"]], "Quantized Functions": [[1871, "quantized-functions"]], "Lazy Modules Initialization": [[1871, "lazy-modules-initialization"]], "torch.signal": [[1908, "module-torch.signal"]], "torch.signal.windows": [[1908, "module-torch.signal.windows"]], "torch.mps": [[1866, "module-torch.mps"]], "MPS Profiler": [[1866, "mps-profiler"]], "HIP (ROCm) semantics": [[1884, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1884, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1884, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1884, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[1884, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1884, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1884, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1884, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1884, "enabling-kernel-asserts"]], "torch.special": [[1910, "torch-special"]], "Serialization semantics": [[1891, "serialization-semantics"]], "Table of Contents": [[1891, "table-of-contents"]], "Saving and loading tensors": [[1891, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1891, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1891, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1891, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1891, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1891, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1891, "torch-full-always-inferring-a-float-dtype"]], "torch.utils.mobile_optimizer": [[1863, "torch-utils-mobile-optimizer"]], "torch.sparse": [[1909, "torch-sparse"]], "Why and when to use sparsity": [[1909, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1909, "functionality-overview"]], "Operator overview": [[1909, "operator-overview"]], "Sparse COO tensors": [[1909, "sparse-coo-tensors"]], "Construction": [[1909, "construction"], [1870, "construction"]], "Sparse hybrid COO tensors": [[1909, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1909, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1909, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1909, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1909, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1909, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1909, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1909, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1909, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1909, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1909, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1909, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1909, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1909, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1909, "construction-of-sparse-compressed-tensors"]], "Supported operations": [[1909, "supported-operations"], [1870, "supported-operations"]], "Linear Algebra operations": [[1909, "linear-algebra-operations"]], "Tensor methods and sparse": [[1909, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1909, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1909, "other-functions"]], "Unary functions": [[1909, "unary-functions"]], "Distributed Data Parallel": [[1879, "distributed-data-parallel"]], "Internal Design": [[1879, "internal-design"]], "ProcessGroup": [[1879, "processgroup"]], "TorchDynamo DDPOptimizer": [[1879, "id1"]], "torch.nested": [[1870, "module-torch.nested"]], "size": [[1870, "size"]], "unbind": [[1870, "unbind"]], "Nested tensor constructor and conversion functions": [[1870, "nested-tensor-constructor-and-conversion-functions"]], "Pipeline Parallelism": [[1898, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1898, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1898, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1898, "pipe-apis-in-pytorch"]], "Skip connections": [[1898, "skip-connections"]], "CUDA Automatic Mixed Precision examples": [[1874, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1874, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1874, "working-with-unscaled-gradients"]], "Gradient clipping": [[1874, "gradient-clipping"]], "Working with Scaled Gradients": [[1874, "working-with-scaled-gradients"]], "Gradient accumulation": [[1874, "gradient-accumulation"]], "Gradient penalty": [[1874, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1874, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1874, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1874, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1874, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1874, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1874, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1874, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1874, "functions-that-need-a-particular-dtype"]], "torch.profiler": [[1899, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1899, "intel-instrumentation-and-tracing-technology-apis"]], "Multiprocessing package - torch.multiprocessing": [[1867, "module-torch.multiprocessing"]], "Strategy management": [[1867, "strategy-management"]], "Sharing CUDA tensors": [[1867, "sharing-cuda-tensors"]], "Sharing strategies": [[1867, "sharing-strategies"]], "File descriptor - file_descriptor": [[1867, "file-descriptor-file-descriptor"]], "File system - file_system": [[1867, "file-system-file-system"]], "Spawning subprocesses": [[1867, "spawning-subprocesses"]], "A Simple Custom Module": [[1886, "a-simple-custom-module"]], "Modules as Building Blocks": [[1886, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1886, "neural-network-training-with-modules"]], "Module State": [[1886, "module-state"]], "Module Initialization": [[1886, "module-initialization"]], "Module Hooks": [[1886, "module-hooks"]], "Advanced Features": [[1886, "advanced-features"]], "Distributed Training": [[1886, "distributed-training"]], "Profiling Performance": [[1886, "profiling-performance"]], "Improving Performance with Quantization": [[1886, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1886, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1886, "parametrizations"]], "Transforming Modules with FX": [[1886, "transforming-modules-with-fx"]], "torch.random": [[1904, "module-torch.random"]], "torch.nn.init": [[1873, "torch-nn-init"]], "torch.ao.quantization": [[1903, "torch-ao-quantization"]], "Top level APIs": [[1903, "top-level-apis"]], "Preparing model for quantization": [[1903, "preparing-model-for-quantization"]], "Utility functions": [[1903, "utility-functions"]], "torch.ao.quantization.quantize_fx": [[1903, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1903, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1903, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1903, "torch-ao-quantization-fx-custom-config"]], "torch (quantization related functions)": [[1903, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1903, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1903, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1903, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1903, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1903, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1903, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1903, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1903, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1903, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1903, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1903, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1903, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1903, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1903, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1903, "quantized-dtypes-and-quantization-schemes"]], "ObservationType": [[785, "observationtype"]], "FixedQParamsFakeQuantize": [[790, "fixedqparamsfakequantize"]], "disable_observer": [[800, "disable-observer"]], "StandaloneModuleConfigEntry": [[807, "standalonemoduleconfigentry"]], "MovingAverageMinMaxObserver": [[810, "movingaverageminmaxobserver"]], "load_observer_state_dict": [[826, "load-observer-state-dict"]], "default_fused_per_channel_wt_fake_quant": [[794, "default-fused-per-channel-wt-fake-quant"]], "default_fake_quant": [[792, "default-fake-quant"]], "default_weight_fake_quant": [[798, "default-weight-fake-quant"]], "fuse_modules": [[803, "fuse-modules"]], "NoopObserver": [[812, "noopobserver"]], "prepare_qat": [[828, "prepare-qat"]], "default_weight_observer": [[824, "default-weight-observer"]], "default_debug_observer": [[817, "default-debug-observer"]], "convert": [[786, "convert"]], "FusedMovingAvgObsFakeQuantize": [[791, "fusedmovingavgobsfakequantize"]], "default_per_channel_weight_fake_quant": [[797, "default-per-channel-weight-fake-quant"]], "ConvertCustomConfig": [[804, "convertcustomconfig"]], "PrepareCustomConfig": [[806, "preparecustomconfig"]], "default_float_qparams_observer": [[819, "default-float-qparams-observer"]], "FuseCustomConfig": [[805, "fusecustomconfig"]], "ObserverBase": [[813, "observerbase"]], "MinMaxObserver": [[809, "minmaxobserver"]], "default_eval_fn": [[787, "default-eval-fn"]], "default_per_channel_weight_observer": [[822, "default-per-channel-weight-observer"]], "DTypeWithConstraints": [[784, "dtypewithconstraints"]], "prepare": [[827, "prepare"]], "default_histogram_fake_quant": [[796, "default-histogram-fake-quant"]], "default_debug_qconfig": [[832, "default-debug-qconfig"]], "default_histogram_observer": [[820, "default-histogram-observer"]], "MovingAveragePerChannelMinMaxObserver": [[811, "movingaverageperchannelminmaxobserver"]], "RecordingObserver": [[816, "recordingobserver"]], "default_observer": [[821, "default-observer"]], "get_observer_state_dict": [[825, "get-observer-state-dict"]], "propagate_qconfig": [[829, "propagate-qconfig"]], "FakeQuantize": [[788, "fakequantize"]], "FakeQuantizeBase": [[789, "fakequantizebase"]], "default_placeholder_observer": [[823, "default-placeholder-observer"]], "default_fused_wt_fake_quant": [[795, "default-fused-wt-fake-quant"]], "HistogramObserver": [[808, "histogramobserver"]], "PlaceholderObserver": [[815, "placeholderobserver"]], "enable_fake_quant": [[801, "enable-fake-quant"]], "PerChannelMinMaxObserver": [[814, "perchannelminmaxobserver"]], "enable_observer": [[802, "enable-observer"]], "disable_fake_quant": [[799, "disable-fake-quant"]], "default_dynamic_quant_observer": [[818, "default-dynamic-quant-observer"]], "default_fused_act_fake_quant": [[793, "default-fused-act-fake-quant"]], "default_activation_only_qconfig": [[831, "default-activation-only-qconfig"]], "FXFloatFunctional": [[736, "fxfloatfunctional"]], "hardtanh": [[767, "hardtanh"]], "BackendConfig": [[781, "backendconfig"]], "FloatFunctional": [[737, "floatfunctional"]], "leaky_relu": [[769, "leaky-relu"]], "adaptive_avg_pool2d": [[755, "adaptive-avg-pool2d"]], "hardswish": [[766, "hardswish"]], "avg_pool2d": [[757, "avg-pool2d"]], "adaptive_avg_pool3d": [[756, "adaptive-avg-pool3d"]], "DTypeConfig": [[783, "dtypeconfig"]], "upsample_nearest": [[776, "upsample-nearest"]], "add_quant_dequant": [[780, "add-quant-dequant"]], "celu": [[759, "celu"]], "QuantStub": [[778, "quantstub"]], "QFunctional": [[746, "qfunctional"]], "avg_pool3d": [[758, "avg-pool3d"]], "max_pool1d": [[771, "max-pool1d"]], "elu": [[764, "elu"]], "max_pool2d": [[772, "max-pool2d"]], "upsample_bilinear": [[775, "upsample-bilinear"]], "upsample": [[774, "upsample"]], "BackendPatternConfig": [[782, "backendpatternconfig"]], "hardsigmoid": [[765, "hardsigmoid"]], "conv2d": [[762, "conv2d"]], "QuantWrapper": [[779, "quantwrapper"]], "conv1d": [[761, "conv1d"]], "linear": [[770, "linear"]], "conv3d": [[763, "conv3d"]], "interpolate": [[768, "interpolate"]], "clamp": [[760, "clamp"]], "DeQuantStub": [[777, "dequantstub"]], "threshold": [[773, "threshold"]], "update_bn_stats": [[711, "update-bn-stats"]], "BNReLU2d": [[689, "bnrelu2d"], [712, "bnrelu2d"]], "torch.aminmax": [[686, "torch-aminmax"]], "ConvBnReLU3d": [[696, "convbnrelu3d"], [706, "convbnrelu3d"]], "ConvReLU3d": [[699, "convrelu3d"], [708, "convrelu3d"], [716, "convrelu3d"]], "ConvBn3d": [[693, "convbn3d"], [703, "convbn3d"]], "LinearReLU": [[709, "linearrelu"], [717, "linearrelu"], [700, "linearrelu"], [718, "linearrelu"]], "BNReLU3d": [[690, "bnrelu3d"], [713, "bnrelu3d"]], "ConvReLU2d": [[698, "convrelu2d"], [715, "convrelu2d"], [707, "convrelu2d"]], "ConvBnReLU2d": [[695, "convbnrelu2d"], [705, "convbnrelu2d"]], "ConvBn1d": [[701, "convbn1d"], [691, "convbn1d"]], "ConvBn2d": [[702, "convbn2d"], [692, "convbn2d"]], "torch.any": [[688, "torch-any"]], "freeze_bn_stats": [[710, "freeze-bn-stats"]], "torch.angle": [[687, "torch-angle"]], "ConvReLU1d": [[697, "convrelu1d"], [714, "convrelu1d"]], "ConvBnReLU1d": [[704, "convbnrelu1d"], [694, "convbnrelu1d"]], "torch._foreach_frac": [[638, "torch-foreach-frac"]], "torch._foreach_log": [[642, "torch-foreach-log"]], "torch._foreach_tan_": [[665, "torch-foreach-tan"]], "torch.addcmul": [[677, "torch-addcmul"]], "torch.allclose": [[683, "torch-allclose"]], "torch._foreach_sin_": [[659, "torch-foreach-sin"]], "torch._foreach_reciprocal_": [[653, "torch-foreach-reciprocal"]], "torch._foreach_sinh_": [[661, "torch-foreach-sinh"]], "torch._foreach_round": [[654, "torch-foreach-round"]], "torch._foreach_log_": [[649, "torch-foreach-log"]], "torch.adjoint": [[681, "torch-adjoint"]], "torch.all": [[682, "torch-all"]], "torch._foreach_sigmoid_": [[657, "torch-foreach-sigmoid"]], "torch._foreach_tan": [[664, "torch-foreach-tan"]], "torch._foreach_trunc_": [[667, "torch-foreach-trunc"]], "torch.amin": [[685, "torch-amin"]], "torch._foreach_floor_": [[637, "torch-foreach-floor"]], "torch._foreach_lgamma_": [[641, "torch-foreach-lgamma"]], "torch.addr": [[680, "torch-addr"]], "torch.addcdiv": [[676, "torch-addcdiv"]], "torch._foreach_trunc": [[666, "torch-foreach-trunc"]], "torch.acos": [[672, "torch-acos"]], "torch.addbmm": [[675, "torch-addbmm"]], "torch._foreach_log10": [[643, "torch-foreach-log10"]], "torch._foreach_frac_": [[639, "torch-foreach-frac"]], "torch.amax": [[684, "torch-amax"]], "torch.abs": [[670, "torch-abs"]], "torch._foreach_lgamma": [[640, "torch-foreach-lgamma"]], "torch._foreach_round_": [[655, "torch-foreach-round"]], "torch.absolute": [[671, "torch-absolute"]], "torch.addmv": [[679, "torch-addmv"]], "torch._foreach_sinh": [[660, "torch-foreach-sinh"]], "torch._foreach_reciprocal": [[652, "torch-foreach-reciprocal"]], "torch._foreach_neg_": [[651, "torch-foreach-neg"]], "torch._foreach_neg": [[650, "torch-foreach-neg"]], "torch.acosh": [[673, "torch-acosh"]], "torch._foreach_log1p": [[645, "torch-foreach-log1p"]], "torch._foreach_sigmoid": [[656, "torch-foreach-sigmoid"]], "torch._foreach_sin": [[658, "torch-foreach-sin"]], "torch._foreach_sqrt_": [[663, "torch-foreach-sqrt"]], "torch._foreach_log2": [[647, "torch-foreach-log2"]], "torch._foreach_log2_": [[648, "torch-foreach-log2"]], "torch._foreach_sqrt": [[662, "torch-foreach-sqrt"]], "torch._foreach_zero_": [[668, "torch-foreach-zero"]], "torch.add": [[674, "torch-add"]], "torch._foreach_log10_": [[644, "torch-foreach-log10"]], "torch.addmm": [[678, "torch-addmm"]], "torch._foreach_log1p_": [[646, "torch-foreach-log1p"]], "torch._logging.set_logs": [[669, "torch-logging-set-logs"]], "torch._foreach_abs_": [[615, "torch-foreach-abs"]], "torch._foreach_floor": [[636, "torch-foreach-floor"]], "torch._foreach_erf_": [[629, "torch-foreach-erf"]], "torch._foreach_asin_": [[619, "torch-foreach-asin"]], "torch._foreach_expm1_": [[635, "torch-foreach-expm1"]], "torch._foreach_atan": [[620, "torch-foreach-atan"]], "torch.Tensor.uniform_": [[597, "torch-tensor-uniform"]], "torch.Tensor.true_divide_": [[589, "torch-tensor-true-divide"]], "torch._assert": [[613, "torch-assert"]], "torch._foreach_cos_": [[625, "torch-foreach-cos"]], "torch._foreach_expm1": [[634, "torch-foreach-expm1"]], "torch._foreach_erfc_": [[631, "torch-foreach-erfc"]], "torch.Tensor.unsqueeze": [[600, "torch-tensor-unsqueeze"]], "torch.Tensor.type_as": [[593, "torch-tensor-type-as"]], "torch._foreach_ceil_": [[623, "torch-foreach-ceil"]], "torch.Tensor.unique": [[598, "torch-tensor-unique"]], "torch.Tensor.view": [[606, "torch-tensor-view"]], "torch._foreach_erfc": [[630, "torch-foreach-erfc"]], "torch.Tensor.trunc": [[590, "torch-tensor-trunc"]], "torch._foreach_exp": [[632, "torch-foreach-exp"]], "torch._foreach_acos": [[616, "torch-foreach-acos"]], "torch._foreach_atan_": [[621, "torch-foreach-atan"]], "torch._foreach_ceil": [[622, "torch-foreach-ceil"]], "torch._foreach_exp_": [[633, "torch-foreach-exp"]], "torch._foreach_erf": [[628, "torch-foreach-erf"]], "torch.Tensor.type": [[592, "torch-tensor-type"]], "torch.Tensor.values": [[603, "torch-tensor-values"]], "torch.Tensor.vdot": [[605, "torch-tensor-vdot"]], "torch._foreach_cos": [[624, "torch-foreach-cos"]], "torch.Tensor.trunc_": [[591, "torch-tensor-trunc"]], "torch.Tensor.view_as": [[607, "torch-tensor-view-as"]], "torch.Tensor.unflatten": [[595, "torch-tensor-unflatten"]], "torch._foreach_cosh_": [[627, "torch-foreach-cosh"]], "torch.Tensor.where": [[609, "torch-tensor-where"]], "torch._foreach_cosh": [[626, "torch-foreach-cosh"]], "torch.Tensor.true_divide": [[588, "torch-tensor-true-divide"]], "torch.Tensor.xlogy": [[610, "torch-tensor-xlogy"]], "torch._foreach_abs": [[614, "torch-foreach-abs"]], "torch.Tensor.untyped_storage": [[602, "torch-tensor-untyped-storage"]], "torch.Tensor.zero_": [[612, "torch-tensor-zero"]], "torch.Tensor.unsqueeze_": [[601, "torch-tensor-unsqueeze"]], "torch.Tensor.xlogy_": [[611, "torch-tensor-xlogy"]], "torch._foreach_acos_": [[617, "torch-foreach-acos"]], "torch.Tensor.unique_consecutive": [[599, "torch-tensor-unique-consecutive"]], "torch.Tensor.vsplit": [[608, "torch-tensor-vsplit"]], "torch.Tensor.unbind": [[594, "torch-tensor-unbind"]], "torch._foreach_asin": [[618, "torch-foreach-asin"]], "torch.Tensor.unfold": [[596, "torch-tensor-unfold"]], "torch.Tensor.var": [[604, "torch-tensor-var"]], "torch.Tensor.to": [[569, "torch-tensor-to"]], "torch.Tensor.to_dense": [[570, "torch-tensor-to-dense"]], "torch.Tensor.to_sparse_bsc": [[573, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.storage_offset": [[547, "torch-tensor-storage-offset"]], "torch.Tensor.sub": [[550, "torch-tensor-sub"]], "torch.Tensor.topk": [[579, "torch-tensor-topk"]], "torch.Tensor.tensor_split": [[567, "torch-tensor-tensor-split"]], "torch.Tensor.sum": [[554, "torch-tensor-sum"]], "torch.Tensor.squeeze": [[541, "torch-tensor-squeeze"]], "torch.Tensor.t_": [[560, "torch-tensor-t"]], "torch.Tensor.t": [[559, "torch-tensor-t"]], "torch.Tensor.subtract": [[552, "torch-tensor-subtract"]], "torch.Tensor.square": [[539, "torch-tensor-square"]], "torch.Tensor.to_mkldnn": [[571, "torch-tensor-to-mkldnn"]], "torch.Tensor.to_sparse_csr": [[577, "torch-tensor-to-sparse-csr"]], "torch.Tensor.sub_": [[551, "torch-tensor-sub"]], "torch.Tensor.tan_": [[564, "torch-tensor-tan"]], "torch.Tensor.to_sparse_coo": [[575, "torch-tensor-to-sparse-coo"]], "torch.Tensor.tril": [[584, "torch-tensor-tril"]], "torch.Tensor.stft": [[545, "torch-tensor-stft"]], "torch.Tensor.swapdims": [[558, "torch-tensor-swapdims"]], "torch.Tensor.tril_": [[585, "torch-tensor-tril"]], "torch.Tensor.transpose": [[581, "torch-tensor-transpose"]], "torch.Tensor.sspaddmm": [[543, "torch-tensor-sspaddmm"]], "torch.Tensor.stride": [[549, "torch-tensor-stride"]], "torch.Tensor.tile": [[568, "torch-tensor-tile"]], "torch.Tensor.tanh": [[565, "torch-tensor-tanh"]], "torch.Tensor.swapaxes": [[557, "torch-tensor-swapaxes"]], "torch.Tensor.triu": [[586, "torch-tensor-triu"]], "torch.Tensor.sum_to_size": [[555, "torch-tensor-sum-to-size"]], "torch.Tensor.svd": [[556, "torch-tensor-svd"]], "torch.Tensor.tan": [[563, "torch-tensor-tan"]], "torch.Tensor.tanh_": [[566, "torch-tensor-tanh"]], "torch.Tensor.std": [[544, "torch-tensor-std"]], "torch.Tensor.squeeze_": [[542, "torch-tensor-squeeze"]], "torch.Tensor.to_sparse_csc": [[576, "torch-tensor-to-sparse-csc"]], "torch.Tensor.square_": [[540, "torch-tensor-square"]], "torch.Tensor.trace": [[580, "torch-tensor-trace"]], "torch.Tensor.to_sparse_bsr": [[574, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.tolist": [[578, "torch-tensor-tolist"]], "torch.Tensor.subtract_": [[553, "torch-tensor-subtract"]], "torch.Tensor.transpose_": [[582, "torch-tensor-transpose"]], "torch.Tensor.take_along_dim": [[562, "torch-tensor-take-along-dim"]], "torch.Tensor.triangular_solve": [[583, "torch-tensor-triangular-solve"]], "torch.Tensor.storage": [[546, "torch-tensor-storage"]], "torch.Tensor.triu_": [[587, "torch-tensor-triu"]], "torch.Tensor.to_sparse": [[572, "torch-tensor-to-sparse"]], "torch.Tensor.storage_type": [[548, "torch-tensor-storage-type"]], "torch.Tensor.take": [[561, "torch-tensor-take"]], "torch.Tensor.scatter_add_": [[505, "torch-tensor-scatter-add"]], "torch.Tensor.set_": [[510, "torch-tensor-set"]], "torch.Tensor.sin_": [[521, "torch-tensor-sin"]], "torch.Tensor.rot90": [[496, "torch-tensor-rot90"]], "torch.Tensor.sgn_": [[512, "torch-tensor-sgn"]], "torch.Tensor.sin": [[520, "torch-tensor-sin"]], "torch.Tensor.select_scatter": [[509, "torch-tensor-select-scatter"]], "torch.Tensor.sinc_": [[523, "torch-tensor-sinc"]], "torch.Tensor.softmax": [[530, "torch-tensor-softmax"]], "torch.Tensor.share_memory_": [[513, "torch-tensor-share-memory"]], "torch.Tensor.resolve_conj": [[491, "torch-tensor-resolve-conj"]], "torch.Tensor.short": [[514, "torch-tensor-short"]], "torch.Tensor.retain_grad": [[493, "torch-tensor-retain-grad"]], "torch.Tensor.sparse_mask": [[533, "torch-tensor-sparse-mask"]], "torch.Tensor.retains_grad": [[494, "torch-tensor-retains-grad"]], "torch.Tensor.round_": [[498, "torch-tensor-round"]], "torch.Tensor.roll": [[495, "torch-tensor-roll"]], "torch.Tensor.sigmoid": [[515, "torch-tensor-sigmoid"]], "torch.Tensor.slice_scatter": [[527, "torch-tensor-slice-scatter"]], "torch.Tensor.split": [[536, "torch-tensor-split"]], "torch.Tensor.rsqrt_": [[501, "torch-tensor-rsqrt"]], "torch.Tensor.sign_": [[518, "torch-tensor-sign"]], "torch.Tensor.scatter_reduce_": [[507, "torch-tensor-scatter-reduce"]], "torch.Tensor.scatter": [[502, "torch-tensor-scatter"]], "torch.Tensor.resolve_neg": [[492, "torch-tensor-resolve-neg"]], "torch.Tensor.sort": [[531, "torch-tensor-sort"]], "torch.Tensor.sqrt": [[537, "torch-tensor-sqrt"]], "torch.Tensor.sparse_resize_and_clear_": [[535, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.sigmoid_": [[516, "torch-tensor-sigmoid"]], "torch.Tensor.size": [[526, "torch-tensor-size"]], "torch.Tensor.slogdet": [[528, "torch-tensor-slogdet"]], "torch.Tensor.scatter_": [[503, "torch-tensor-scatter"]], "torch.Tensor.round": [[497, "torch-tensor-round"]], "torch.Tensor.sign": [[517, "torch-tensor-sign"]], "torch.Tensor.resize_as_": [[490, "torch-tensor-resize-as"]], "torch.Tensor.sparse_resize_": [[534, "torch-tensor-sparse-resize"]], "torch.Tensor.smm": [[529, "torch-tensor-smm"]], "torch.Tensor.sinc": [[522, "torch-tensor-sinc"]], "torch.Tensor.select": [[508, "torch-tensor-select"]], "torch.Tensor.sqrt_": [[538, "torch-tensor-sqrt"]], "torch.Tensor.sinh": [[524, "torch-tensor-sinh"]], "torch.Tensor.scatter_add": [[504, "torch-tensor-scatter-add"]], "torch.Tensor.scatter_reduce": [[506, "torch-tensor-scatter-reduce"]], "torch.Tensor.signbit": [[519, "torch-tensor-signbit"]], "torch.Tensor.sparse_dim": [[532, "torch-tensor-sparse-dim"]], "torch.Tensor.sinh_": [[525, "torch-tensor-sinh"]], "torch.Tensor.rsqrt": [[500, "torch-tensor-rsqrt"]], "torch.Tensor.row_indices": [[499, "torch-tensor-row-indices"]], "torch.Tensor.sgn": [[511, "torch-tensor-sgn"]], "torch.Tensor.normal_": [[445, "torch-tensor-normal"]], "torch.Tensor.permute": [[453, "torch-tensor-permute"]], "torch.Tensor.nonzero": [[443, "torch-tensor-nonzero"]], "torch.Tensor.pin_memory": [[454, "torch-tensor-pin-memory"]], "torch.Tensor.reciprocal": [[475, "torch-tensor-reciprocal"]], "torch.Tensor.norm": [[444, "torch-tensor-norm"]], "torch.Tensor.random_": [[472, "torch-tensor-random"]], "torch.Tensor.pow": [[459, "torch-tensor-pow"]], "torch.Tensor.numel": [[448, "torch-tensor-numel"]], "torch.Tensor.q_scale": [[466, "torch-tensor-q-scale"]], "torch.Tensor.polygamma": [[456, "torch-tensor-polygamma"]], "torch.Tensor.not_equal_": [[447, "torch-tensor-not-equal"]], "torch.Tensor.orgqr": [[450, "torch-tensor-orgqr"]], "torch.Tensor.positive": [[458, "torch-tensor-positive"]], "torch.Tensor.pow_": [[460, "torch-tensor-pow"]], "torch.Tensor.prod": [[461, "torch-tensor-prod"]], "torch.Tensor.q_per_channel_zero_points": [[465, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.q_zero_point": [[467, "torch-tensor-q-zero-point"]], "torch.Tensor.reciprocal_": [[476, "torch-tensor-reciprocal"]], "torch.Tensor.not_equal": [[446, "torch-tensor-not-equal"]], "torch.Tensor.record_stream": [[477, "torch-tensor-record-stream"]], "torch.Tensor.outer": [[452, "torch-tensor-outer"]], "torch.Tensor.repeat": [[483, "torch-tensor-repeat"]], "torch.Tensor.repeat_interleave": [[484, "torch-tensor-repeat-interleave"]], "torch.Tensor.real": [[474, "torch-tensor-real"]], "torch.Tensor.quantile": [[470, "torch-tensor-quantile"]], "torch.Tensor.polygamma_": [[457, "torch-tensor-polygamma"]], "torch.Tensor.q_per_channel_scales": [[464, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.ormqr": [[451, "torch-tensor-ormqr"]], "torch.Tensor.qr": [[468, "torch-tensor-qr"]], "torch.Tensor.nextafter": [[441, "torch-tensor-nextafter"]], "torch.Tensor.q_per_channel_axis": [[463, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.remainder": [[479, "torch-tensor-remainder"]], "torch.Tensor.requires_grad": [[485, "torch-tensor-requires-grad"]], "torch.Tensor.resize_": [[489, "torch-tensor-resize"]], "torch.Tensor.renorm_": [[482, "torch-tensor-renorm"]], "torch.Tensor.qscheme": [[469, "torch-tensor-qscheme"]], "torch.Tensor.requires_grad_": [[486, "torch-tensor-requires-grad"]], "torch.Tensor.nextafter_": [[442, "torch-tensor-nextafter"]], "torch.Tensor.renorm": [[481, "torch-tensor-renorm"]], "torch.Tensor.numpy": [[449, "torch-tensor-numpy"]], "torch.Tensor.ravel": [[473, "torch-tensor-ravel"]], "torch.Tensor.remainder_": [[480, "torch-tensor-remainder"]], "torch.Tensor.reshape_as": [[488, "torch-tensor-reshape-as"]], "torch.Tensor.rad2deg": [[471, "torch-tensor-rad2deg"]], "torch.Tensor.register_hook": [[478, "torch-tensor-register-hook"]], "torch.Tensor.put_": [[462, "torch-tensor-put"]], "torch.Tensor.pinverse": [[455, "torch-tensor-pinverse"]], "torch.Tensor.reshape": [[487, "torch-tensor-reshape"]], "torch.Tensor.new_tensor": [[439, "torch-tensor-new-tensor"]], "torch.Tensor.new_full": [[437, "torch-tensor-new-full"]], "torch.Tensor.nan_to_num": [[418, "torch-tensor-nan-to-num"]], "torch.Tensor.nanmedian": [[421, "torch-tensor-nanmedian"]], "torch.Tensor.nbytes": [[426, "torch-tensor-nbytes"]], "torch.Tensor.neg": [[431, "torch-tensor-neg"]], "torch.Tensor.min": [[403, "torch-tensor-min"]], "torch.Tensor.neg_": [[432, "torch-tensor-neg"]], "torch.Tensor.narrow_copy": [[425, "torch-tensor-narrow-copy"]], "torch.Tensor.median": [[402, "torch-tensor-median"]], "torch.Tensor.minimum": [[404, "torch-tensor-minimum"]], "torch.Tensor.mv": [[415, "torch-tensor-mv"]], "torch.Tensor.mean": [[401, "torch-tensor-mean"]], "torch.Tensor.mode": [[406, "torch-tensor-mode"]], "torch.Tensor.negative_": [[434, "torch-tensor-negative"]], "torch.Tensor.nelement": [[435, "torch-tensor-nelement"]], "torch.Tensor.new_empty": [[436, "torch-tensor-new-empty"]], "torch.Tensor.max": [[399, "torch-tensor-max"]], "torch.Tensor.moveaxis": [[407, "torch-tensor-moveaxis"]], "torch.Tensor.multiply": [[413, "torch-tensor-multiply"]], "torch.Tensor.matmul": [[396, "torch-tensor-matmul"]], "torch.Tensor.negative": [[433, "torch-tensor-negative"]], "torch.Tensor.matrix_exp": [[397, "torch-tensor-matrix-exp"]], "torch.Tensor.masked_select": [[395, "torch-tensor-masked-select"]], "torch.Tensor.masked_scatter": [[393, "torch-tensor-masked-scatter"]], "torch.Tensor.mul_": [[411, "torch-tensor-mul"]], "torch.Tensor.new_zeros": [[440, "torch-tensor-new-zeros"]], "torch.Tensor.nansum": [[423, "torch-tensor-nansum"]], "torch.Tensor.masked_fill_": [[392, "torch-tensor-masked-fill"]], "torch.Tensor.nan_to_num_": [[419, "torch-tensor-nan-to-num"]], "torch.Tensor.ne_": [[430, "torch-tensor-ne"]], "torch.Tensor.narrow": [[424, "torch-tensor-narrow"]], "torch.Tensor.mm": [[405, "torch-tensor-mm"]], "torch.Tensor.masked_scatter_": [[394, "torch-tensor-masked-scatter"]], "torch.Tensor.multiply_": [[414, "torch-tensor-multiply"]], "torch.Tensor.mvlgamma_": [[417, "torch-tensor-mvlgamma"]], "torch.Tensor.ndimension": [[428, "torch-tensor-ndimension"]], "torch.Tensor.matrix_power": [[398, "torch-tensor-matrix-power"]], "torch.Tensor.mul": [[410, "torch-tensor-mul"]], "torch.Tensor.nanmean": [[420, "torch-tensor-nanmean"]], "torch.Tensor.mvlgamma": [[416, "torch-tensor-mvlgamma"]], "torch.Tensor.movedim": [[408, "torch-tensor-movedim"]], "torch.Tensor.nanquantile": [[422, "torch-tensor-nanquantile"]], "torch.Tensor.ne": [[429, "torch-tensor-ne"]], "torch.Tensor.multinomial": [[412, "torch-tensor-multinomial"]], "torch.Tensor.ndim": [[427, "torch-tensor-ndim"]], "torch.Tensor.maximum": [[400, "torch-tensor-maximum"]], "torch.Tensor.new_ones": [[438, "torch-tensor-new-ones"]], "torch.Tensor.msort": [[409, "torch-tensor-msort"]]}, "indexentries": {"optimizedmodule (class in torch._dynamo)": [[0, "torch._dynamo.OptimizedModule"]], "allow_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.allow_in_graph"]], "disable() (in module torch._dynamo)": [[0, "torch._dynamo.disable"]], "disallow_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.disallow_in_graph"]], "export() (in module torch._dynamo)": [[0, "torch._dynamo.export"]], "forbid_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.forbid_in_graph"]], "graph_break() (in module torch._dynamo)": [[0, "torch._dynamo.graph_break"]], "list_backends() (in module torch._dynamo)": [[0, "torch._dynamo.list_backends"]], "mark_dynamic() (in module torch._dynamo)": [[0, "torch._dynamo.mark_dynamic"]], "mark_static() (in module torch._dynamo)": [[0, "torch._dynamo.mark_static"]], "module": [[0, "module-torch._dynamo"], [1, "module-torch.amp"], [1, "module-torch.cpu"], [1, "module-torch.cpu.amp"], [1, "module-torch.cuda.amp"], [2, "module-torch.autograd"], [3, "module-torch.backends"], [3, "module-torch.backends.cpu"], [3, "module-torch.backends.cuda"], [3, "module-torch.backends.cudnn"], [3, "module-torch.backends.mkl"], [3, "module-torch.backends.mkldnn"], [3, "module-torch.backends.mps"], [3, "module-torch.backends.openmp"], [3, "module-torch.backends.opt_einsum"], [3, "module-torch.backends.quantized"], [3, "module-torch.backends.xeon"], [3, "module-torch.backends.xnnpack"], [4, "module-torch.utils.benchmark"], [4, "module-torch.utils.benchmark.examples"], [4, "module-torch.utils.benchmark.op_fuzzers"], [4, "module-torch.utils.benchmark.utils"], [4, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [5, "module-torch.utils.bottleneck"], [25, "module-torch.__config__"], [28, "module-torch.cuda"], [29, "module-torch.cuda._sanitizer"], [32, "module-torch.utils.data"], [32, "module-torch.utils.data.datapipes"], [32, "module-torch.utils.data.datapipes.dataframe"], [32, "module-torch.utils.data.datapipes.iter"], [32, "module-torch.utils.data.datapipes.map"], [32, "module-torch.utils.data.datapipes.utils"], [35, "module-torch.distributed"], [35, "module-torch.distributed.algorithms"], [35, "module-torch.distributed.algorithms.ddp_comm_hooks"], [35, "module-torch.distributed.algorithms.model_averaging"], [35, "module-torch.distributed.elastic"], [35, "module-torch.distributed.elastic.utils"], [35, "module-torch.distributed.elastic.utils.data"], [35, "module-torch.distributed.launch"], [35, "module-torch.distributed.launcher"], [35, "module-torch.distributed.nn"], [35, "module-torch.distributed.nn.api"], [35, "module-torch.distributed.nn.jit"], [35, "module-torch.distributed.nn.jit.templates"], [35, "module-torch.distributed.pipeline"], [35, "module-torch.distributed.pipeline.sync"], [35, "module-torch.distributed.pipeline.sync.skip"], [35, "module-torch.distributed.tensor"], [37, "module-torch.distributed.checkpoint"], [39, "module-torch.distributed.optim"], [40, "module-torch.distributed.tensor.parallel"], [41, "module-torch.distributions"], [41, "module-torch.distributions.constraint_registry"], [41, "module-torch.distributions.constraints"], [41, "module-torch.distributions.kl"], [41, "module-torch.distributions.transforms"], [43, "module-torch.distributed.elastic.agent"], [43, "module-torch.distributed.elastic.agent.server"], [45, "module-torch.distributed.elastic.multiprocessing.errors"], [46, "module-torch.distributed.elastic.events"], [49, "module-torch.distributed.elastic.metrics"], [50, "module-torch.distributed.elastic.multiprocessing"], [52, "module-torch.distributed.elastic.rendezvous"], [52, "module-torch.distributed.elastic.rendezvous.registry"], [53, "module-torch.distributed.run"], [54, "module-torch.distributed.elastic.timer"], [56, "module-torch.fft"], [57, "module-torch.distributed.fsdp"], [59, "module-torch.func"], [64, "module-torch.futures"], [65, "module-torch.fx"], [65, "module-torch.fx.experimental"], [65, "module-torch.fx.experimental.migrate_gradual_types"], [65, "module-torch.fx.experimental.unification"], [65, "module-torch.fx.experimental.unification.multipledispatch"], [65, "module-torch.fx.passes"], [65, "module-torch.fx.passes.backends"], [65, "module-torch.fx.passes.dialect"], [65, "module-torch.fx.passes.dialect.common"], [65, "module-torch.fx.passes.infra"], [65, "module-torch.fx.passes.tests"], [65, "module-torch.fx.passes.utils"], [1849, "module-torch.hub"], [1852, "module-torch.jit"], [1852, "module-torch.jit.mobile"], [1853, "module-torch.jit.supported_ops"], [1857, "module-torch.jit.unsupported_tensor_ops"], [1858, "module-torch.utils.jit"], [1860, "module-torch.linalg"], [1861, "module-torch._logging"], [1862, "module-torch.masked"], [1862, "module-torch.masked.maskedtensor"], [1864, "module-torch.utils.model_zoo"], [1865, "module-torch.monitor"], [1866, "module-torch.mps"], [1867, "module-torch.multiprocessing"], [1870, "module-torch.nested"], [1871, "module-torch.nn"], [1871, "module-torch.nn.backends"], [1871, "module-torch.nn.modules"], [1871, "module-torch.nn.parallel"], [1871, "module-torch.nn.utils"], [1871, "module-torch.nn.utils.stateless"], [1893, "module-torch.onnx"], [1894, "module-torch.onnx._internal.diagnostics"], [1896, "module-torch.optim"], [1897, "module-torch.package"], [1897, "module-torch.package.analyze"], [1899, "module-torch.profiler"], [1900, "module-torch.ao"], [1900, "module-torch.ao.nn"], [1900, "module-torch.ao.nn.quantizable"], [1900, "module-torch.ao.nn.quantizable.modules"], [1900, "module-torch.ao.nn.quantized"], [1900, "module-torch.ao.nn.quantized.reference"], [1900, "module-torch.ao.nn.quantized.reference.modules"], [1900, "module-torch.ao.nn.sparse"], [1900, "module-torch.ao.nn.sparse.quantized"], [1900, "module-torch.ao.nn.sparse.quantized.dynamic"], [1900, "module-torch.ao.ns"], [1900, "module-torch.ao.ns.fx"], [1900, "module-torch.ao.pruning"], [1900, "module-torch.ao.pruning.scheduler"], [1900, "module-torch.ao.pruning.sparsifier"], [1900, "module-torch.ao.quantization"], [1900, "module-torch.ao.quantization.backend_config"], [1900, "module-torch.ao.quantization.fx"], [1903, "module-torch.ao.nn.intrinsic"], [1903, "module-torch.ao.nn.intrinsic.modules"], [1903, "module-torch.ao.nn.intrinsic.qat"], [1903, "module-torch.ao.nn.intrinsic.qat.modules"], [1903, "module-torch.ao.nn.intrinsic.quantized"], [1903, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1903, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1903, "module-torch.ao.nn.intrinsic.quantized.modules"], [1903, "module-torch.ao.nn.qat"], [1903, "module-torch.ao.nn.qat.dynamic"], [1903, "module-torch.ao.nn.qat.dynamic.modules"], [1903, "module-torch.ao.nn.qat.modules"], [1903, "module-torch.ao.nn.quantized.dynamic"], [1903, "module-torch.ao.nn.quantized.dynamic.modules"], [1903, "module-torch.ao.nn.quantized.functional"], [1903, "module-torch.ao.nn.quantized.modules"], [1903, "module-torch.nn.intrinsic"], [1903, "module-torch.nn.intrinsic.modules"], [1903, "module-torch.nn.intrinsic.qat"], [1903, "module-torch.nn.intrinsic.qat.modules"], [1903, "module-torch.nn.intrinsic.quantized"], [1903, "module-torch.nn.intrinsic.quantized.dynamic"], [1903, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1903, "module-torch.nn.intrinsic.quantized.modules"], [1903, "module-torch.nn.qat"], [1903, "module-torch.nn.qat.dynamic"], [1903, "module-torch.nn.qat.dynamic.modules"], [1903, "module-torch.nn.qat.modules"], [1903, "module-torch.nn.quantizable"], [1903, "module-torch.nn.quantizable.modules"], [1903, "module-torch.nn.quantized"], [1903, "module-torch.nn.quantized.dynamic"], [1903, "module-torch.nn.quantized.dynamic.modules"], [1903, "module-torch.nn.quantized.modules"], [1903, "module-torch.quantization"], [1903, "module-torch.quantization.fx"], [1904, "module-torch.random"], [1905, "module-torch.distributed.autograd"], [1905, "module-torch.distributed.rpc"], [1908, "module-torch.signal"], [1908, "module-torch.signal.windows"], [1909, "module-torch.sparse"], [1910, "module-torch.special"], [1914, "module-torch.utils.tensorboard"], [1916, "module-torch.testing"], [1917, "module-torch"], [1917, "module-torch.autograd"], [1917, "module-torch.contrib"], [1917, "module-torch.utils"], [1917, "module-torch.utils.backcompat"], [1917, "module-torch.utils.hipify"], [1917, "module-torch.utils.model_dump"], [1918, "module-torch.ao.ns._numeric_suite"], [1919, "module-torch.ao.ns._numeric_suite_fx"]], "optimize() (in module torch._dynamo)": [[0, "torch._dynamo.optimize"]], "optimize_assert() (in module torch._dynamo)": [[0, "torch._dynamo.optimize_assert"]], "register_backend() (in module torch._dynamo)": [[0, "torch._dynamo.register_backend"]], "reset() (in module torch._dynamo)": [[0, "torch._dynamo.reset"]], "run() (in module torch._dynamo)": [[0, "torch._dynamo.run"]], "torch._dynamo": [[0, "module-torch._dynamo"]], "gradscaler (class in torch.cuda.amp)": [[1, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[1, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[1, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[1, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[1, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[1, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.load_state_dict"]], "scale() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[1, "module-torch.amp"]], "torch.cpu": [[1, "module-torch.cpu"]], "torch.cpu.amp": [[1, "module-torch.cpu.amp"]], "torch.cuda.amp": [[1, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[2, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[2, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[2, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[2, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[2, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[2, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[2, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[2, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[2, "module-torch.autograd"], [1917, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[3, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (torch.backends.cuda.torch.backends.cuda.matmul attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (torch.backends.cuda.torch.backends.cuda.matmul attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (torch.backends.cuda.torch.backends.cuda.matmul attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.allow_tf32"]], "benchmark (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.benchmark"]], "benchmark_limit (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.clear"]], "cufft_plan_cache (torch.backends.cuda.torch.backends.cuda attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.cufft_plan_cache"]], "deterministic (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.enabled"]], "enabled (torch.backends.opt_einsum.torch.backends.opt_einsum attribute)": [[3, "torch.backends.opt_einsum.torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[3, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[3, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[3, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[3, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[3, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[3, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[3, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[3, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda)": [[3, "torch.backends.cuda.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.sdp_kernel"]], "size (torch.backends.cuda.torch.backends.cuda attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.size"]], "strategy (torch.backends.opt_einsum.torch.backends.opt_einsum attribute)": [[3, "torch.backends.opt_einsum.torch.backends.opt_einsum.strategy"]], "torch.backends": [[3, "module-torch.backends"]], "torch.backends.cpu": [[3, "module-torch.backends.cpu"]], "torch.backends.cuda": [[3, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[3, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[3, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[3, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[3, "module-torch.backends.mps"]], "torch.backends.openmp": [[3, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[3, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[3, "module-torch.backends.quantized"]], "torch.backends.xeon": [[3, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[3, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[3, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[3, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[4, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[4, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[4, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[4, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[4, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[4, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[4, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[5, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[6, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[6, "torch.utils.checkpoint.checkpoint_sequential"]], "compile() (in module torch)": [[15, "torch.compile"], [942, "torch.compile"]], "parallel_info() (in module torch.__config__)": [[25, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[25, "torch.__config__.show"]], "torch.__config__": [[25, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[26, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cuda": [[28, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[29, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[29, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[32, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[32, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[32, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[32, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[32, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[32, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[32, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[32, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[32, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[32, "torch.utils.data.SequentialSampler"]], "subset (class in torch.utils.data)": [[32, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[32, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[32, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[32, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[32, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[32, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[32, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[32, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[32, "torch.utils.data.random_split"]], "torch.utils.data": [[32, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[32, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[32, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[32, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[32, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[32, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[33, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[33, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[33, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[35, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[35, "torch.distributed.DistBackendError"]], "filestore (class in torch.distributed)": [[35, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[35, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[35, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[35, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[35, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[35, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[35, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[35, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[35, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[35, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[35, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[35, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[35, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[35, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[35, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[35, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[35, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[35, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[35, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[35, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[35, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[35, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[35, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[35, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[35, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[35, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[35, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[35, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[35, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[35, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[35, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[35, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[35, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[35, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[35, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[35, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[35, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[35, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[35, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[35, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[35, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[35, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[35, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[35, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[35, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[35, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[35, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[35, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[35, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[35, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[35, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[35, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[35, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[35, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[35, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[35, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[35, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[35, "module-torch.distributed"]], "torch.distributed.algorithms": [[35, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[35, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[35, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[35, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[35, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[35, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[35, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[35, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[35, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[35, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[35, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[35, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[35, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[35, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[35, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[35, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[35, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[36, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[36, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[36, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[36, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[36, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[36, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[36, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[36, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[36, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[37, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[37, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[37, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[37, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[37, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[37, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[37, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[37, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[37, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[37, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[37, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[37, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[37, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[37, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[37, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[37, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[37, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[37, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[37, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[37, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[37, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[37, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[39, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[39, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[39, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[39, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[39, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[39, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[39, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[39, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "tensorparallelmultiheadattention (class in torch.distributed.tensor.parallel.multihead_attention_tp)": [[40, "torch.distributed.tensor.parallel.multihead_attention_tp.TensorParallelMultiheadAttention"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[40, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[40, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[40, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[40, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[41, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[41, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[41, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[41, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[41, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[41, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[41, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[41, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[41, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[41, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[41, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[41, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[41, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[41, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[41, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[41, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[41, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[41, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[41, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[41, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[41, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[41, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[41, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[41, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[41, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[41, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[41, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[41, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[41, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[41, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[41, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[41, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[41, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[41, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[41, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[41, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[41, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[41, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[41, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[41, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[41, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[41, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[41, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[41, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[41, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[41, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[41, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[41, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[41, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[41, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[41, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[41, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[41, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[41, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[41, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[41, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[41, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[41, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[41, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[41, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[41, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[41, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[41, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[41, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[41, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[41, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[41, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[41, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[41, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[41, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[41, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[41, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[41, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[41, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[41, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[41, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[41, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[41, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[41, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[41, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[41, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[41, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[41, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[41, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[41, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[41, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[41, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[41, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[41, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[41, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[41, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[41, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[41, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[41, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[41, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[41, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[41, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[41, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[41, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[41, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[41, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[41, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[41, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[41, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[41, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[41, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[41, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[41, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[41, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[41, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[41, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[41, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[41, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[41, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[41, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[41, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[41, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[41, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[41, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[41, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[41, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[41, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[41, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[41, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[41, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[41, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[41, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[41, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[41, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[41, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[41, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[41, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[41, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[41, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[41, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[41, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[41, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[41, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[41, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[41, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[41, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[41, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[41, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[41, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[41, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[41, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[41, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[41, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[41, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[41, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[41, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[41, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[41, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[41, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[41, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[41, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[41, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[41, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[41, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[41, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[41, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[41, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[41, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[41, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[41, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[41, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[41, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[41, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[41, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[41, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[41, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[41, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[41, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[41, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[41, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[41, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[41, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[41, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[41, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[41, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[41, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[41, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[41, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[41, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[41, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[41, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[41, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[41, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[41, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[41, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[41, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[41, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[41, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[41, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[41, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[41, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[41, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[41, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[41, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[41, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[41, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[41, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[41, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[41, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[41, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[41, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[41, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[41, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[41, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[41, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[41, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[41, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[41, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[41, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[41, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[41, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[41, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[41, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[41, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[41, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[41, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[41, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[41, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[41, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[41, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[41, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[41, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[41, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[41, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[41, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[41, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[41, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[41, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[41, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[41, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[41, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[41, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[41, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[41, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[41, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[41, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[41, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[41, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[41, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[41, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[41, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[41, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[41, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[41, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[41, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[41, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[41, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[41, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[41, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[41, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[41, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[41, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[41, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[41, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[41, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[41, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[41, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[41, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[41, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[41, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[41, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[41, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[41, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[41, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[41, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[41, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[41, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[41, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[41, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[41, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[41, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[42, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[42, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[43, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[43, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[43, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[43, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[43, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[43, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[43, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[43, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[43, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[43, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[45, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[45, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[45, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[45, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[45, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[46, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[46, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[46, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[46, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[46, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[46, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[49, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[49, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[49, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[49, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[49, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[49, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[49, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[50, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[50, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[50, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[50, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[50, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[50, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[52, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[52, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[52, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[52, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[52, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[52, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[52, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[52, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[52, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[52, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[53, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[54, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[54, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[54, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[54, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[54, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[54, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[54, "module-torch.distributed.elastic.timer"]], "torch.fft": [[56, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[57, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[57, "torch.distributed.fsdp.CPUOffload"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel"]], "mixedprecision (class in torch.distributed.fsdp)": [[57, "torch.distributed.fsdp.MixedPrecision"]], "shardingstrategy (class in torch.distributed.fsdp)": [[57, "torch.distributed.fsdp.ShardingStrategy"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "load_optim_state_dict_pre_hook() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.load_optim_state_dict_pre_hook"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_post_hook() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_post_hook"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[57, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[57, "module-torch.distributed.fsdp"]], "torch.func": [[59, "module-torch.func"]], "future (class in torch.futures)": [[64, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[64, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[64, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[64, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[64, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[64, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[64, "torch.futures.Future.then"]], "torch.futures": [[64, "module-torch.futures"]], "value() (torch.futures.future method)": [[64, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[64, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[64, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[65, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[65, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[65, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[65, "torch.fx.Node"]], "proxy (class in torch.fx)": [[65, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[65, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[65, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[65, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[65, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[65, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[65, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[65, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[65, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[65, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[65, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[65, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[65, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[65, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[65, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[65, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[65, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[65, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[65, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[65, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[65, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[65, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[65, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[65, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[65, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[65, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[65, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[65, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[65, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[65, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[65, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[65, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[65, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[65, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[65, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[65, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[65, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[65, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[65, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[65, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[65, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[65, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[65, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[65, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[65, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[65, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[65, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[65, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[65, "module-torch.fx"]], "torch.fx.experimental": [[65, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[65, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[65, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[65, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[65, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[65, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[65, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[65, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[65, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[65, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[65, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[65, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[65, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[65, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[65, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[65, "torch.fx.wrap"]], "generator (class in torch)": [[81, "torch.Generator"]], "device (torch.generator attribute)": [[81, "torch.Generator.device"]], "get_state() (torch.generator method)": [[81, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[81, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[81, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[81, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[81, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[82, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[83, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[84, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[85, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[86, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[87, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[88, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[89, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[90, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[91, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[92, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[93, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[94, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[95, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[96, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[97, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[98, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[99, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[100, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[101, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[102, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[103, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[104, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[105, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[106, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[107, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[108, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[109, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[110, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[111, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[112, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[113, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[114, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[115, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[116, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[117, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[118, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[119, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[120, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[121, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[122, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[123, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[124, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[125, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[126, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[127, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[128, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[129, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[130, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[131, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[132, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[133, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[134, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[135, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[136, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[137, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[138, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[139, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[140, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[141, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[142, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[143, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[144, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[145, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[146, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[147, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[148, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[149, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[150, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[151, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[152, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[153, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[154, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[155, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[156, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[157, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[158, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[159, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[160, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[161, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[162, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[163, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[164, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[165, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[166, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[167, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[168, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[169, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[170, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[171, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[172, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[173, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[174, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[175, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[176, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[177, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[178, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[179, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[180, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[181, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[182, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[183, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[184, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[185, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[186, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[187, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[188, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[189, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[190, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[191, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[192, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[193, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[194, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[195, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[196, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[197, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[198, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[199, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[200, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[201, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[202, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[203, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[204, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[205, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[206, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[207, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[208, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[209, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[210, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[211, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[212, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[213, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[214, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[215, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[216, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[217, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[218, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[219, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[220, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[221, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[222, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[223, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[224, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[225, "torch.Tensor.dim"]], "dist() (torch.tensor method)": [[226, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[227, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[228, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[229, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[230, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[231, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[232, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[233, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[234, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[235, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[236, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[237, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[238, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[239, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[240, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[241, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[242, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[243, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[244, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[245, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[246, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[247, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[248, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[249, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[250, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[251, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[252, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[253, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[254, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[255, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[256, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[257, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[258, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[259, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[260, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[261, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[262, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[263, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[264, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[265, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[266, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[267, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[268, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[269, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[270, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[271, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[272, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[273, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[274, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[275, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[276, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[277, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[278, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[279, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[280, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[281, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[282, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[283, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[284, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[285, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[286, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[287, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[288, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[289, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[290, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[291, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[292, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[293, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[294, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[295, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[296, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[297, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[298, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[299, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[300, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[301, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[302, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[303, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[304, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[305, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[306, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[307, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[308, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[309, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[310, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[311, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[312, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[313, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[314, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[315, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[316, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[317, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[318, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[319, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[320, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[321, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[322, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[323, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[324, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[325, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[326, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[327, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[328, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[329, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[330, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[331, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[332, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[333, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[334, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[335, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[336, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[337, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[338, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[339, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[340, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[341, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[342, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[343, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[344, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[345, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[346, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[347, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[348, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[349, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[350, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[351, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[352, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[353, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[354, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[355, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[356, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[357, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[358, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[359, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[360, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[361, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[362, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[363, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[364, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[365, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[366, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[367, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[368, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[369, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[370, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[371, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[372, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[373, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[374, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[375, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[376, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[377, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[378, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[379, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[380, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[381, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[382, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[383, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[384, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[385, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[386, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[387, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[388, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[389, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[390, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[391, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[392, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[393, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[394, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[395, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[396, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[397, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[398, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[399, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[400, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[401, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[402, "torch.Tensor.median"]], "min() (torch.tensor method)": [[403, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[404, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[405, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[406, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[407, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[408, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[409, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[410, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[411, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[412, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[413, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[414, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[415, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[416, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[417, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[418, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[419, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[420, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[421, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[422, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[423, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[424, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[425, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[426, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[427, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[428, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[429, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[430, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[431, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[432, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[433, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[434, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[435, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[436, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[437, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[438, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[439, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[440, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[441, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[442, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[443, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[444, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[445, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[446, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[447, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[448, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[449, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[450, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[451, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[452, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[453, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[454, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[455, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[456, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[457, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[458, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[459, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[460, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[461, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[462, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[463, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[464, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[465, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[466, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[467, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[468, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[469, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[470, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[471, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[472, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[473, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[474, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[475, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[476, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[477, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[478, "torch.Tensor.register_hook"]], "remainder() (torch.tensor method)": [[479, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[480, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[481, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[482, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[483, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[484, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[485, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[486, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[487, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[488, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[489, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[490, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[491, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[492, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[493, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[494, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[495, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[496, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[497, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[498, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[499, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[500, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[501, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[502, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[503, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[504, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[505, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[506, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[507, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[508, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[509, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[510, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[511, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[512, "torch.Tensor.sgn_"]], "share_memory_() (torch.tensor method)": [[513, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[514, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[515, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[516, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[517, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[518, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[519, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[520, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[521, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[522, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[523, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[524, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[525, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[526, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[527, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[528, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[529, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[530, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[531, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[532, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[533, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[534, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[535, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[536, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[537, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[538, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[539, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[540, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[541, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[542, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[543, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[544, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[545, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[546, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[547, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[548, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[549, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[550, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[551, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[552, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[553, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[554, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[555, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[556, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[557, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[558, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[559, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[560, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[561, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[562, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[563, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[564, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[565, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[566, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[567, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[568, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[569, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[570, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[571, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[572, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[573, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[574, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[575, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[576, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[577, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[578, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[579, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[580, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[581, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[582, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[583, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[584, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[585, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[586, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[587, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[588, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[589, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[590, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[591, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[592, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[593, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[594, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[595, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[596, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[597, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[598, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[599, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[600, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[601, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[602, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[603, "torch.Tensor.values"]], "var() (torch.tensor method)": [[604, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[605, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[606, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[607, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[608, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[609, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[610, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[611, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[612, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[613, "torch._assert"]], "_foreach_abs() (in module torch)": [[614, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[615, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[616, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[617, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[618, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[619, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[620, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[621, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[622, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[623, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[624, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[625, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[626, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[627, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[628, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[629, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[630, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[631, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[632, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[633, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[634, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[635, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[636, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[637, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[638, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[639, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[640, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[641, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[642, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[643, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[644, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[645, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[646, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[647, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[648, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[649, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[650, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[651, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[652, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[653, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[654, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[655, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[656, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[657, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[658, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[659, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[660, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[661, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[662, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[663, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[664, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[665, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[666, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[667, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[668, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[669, "torch._logging.set_logs"]], "abs() (in module torch)": [[670, "torch.abs"]], "absolute() (in module torch)": [[671, "torch.absolute"]], "acos() (in module torch)": [[672, "torch.acos"]], "acosh() (in module torch)": [[673, "torch.acosh"]], "add() (in module torch)": [[674, "torch.add"]], "addbmm() (in module torch)": [[675, "torch.addbmm"]], "addcdiv() (in module torch)": [[676, "torch.addcdiv"]], "addcmul() (in module torch)": [[677, "torch.addcmul"]], "addmm() (in module torch)": [[678, "torch.addmm"]], "addmv() (in module torch)": [[679, "torch.addmv"]], "addr() (in module torch)": [[680, "torch.addr"]], "adjoint() (in module torch)": [[681, "torch.adjoint"]], "all() (in module torch)": [[682, "torch.all"]], "allclose() (in module torch)": [[683, "torch.allclose"]], "amax() (in module torch)": [[684, "torch.amax"]], "amin() (in module torch)": [[685, "torch.amin"]], "aminmax() (in module torch)": [[686, "torch.aminmax"]], "angle() (in module torch)": [[687, "torch.angle"]], "any() (in module torch)": [[688, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[689, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[690, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[691, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[692, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[693, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[694, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[695, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[701, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[702, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[703, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[704, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[705, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[706, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[707, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[712, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[713, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[714, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[715, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[716, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[717, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[718, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[719, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[720, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[721, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[721, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[722, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[723, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[724, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[724, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[724, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[725, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[726, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[727, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[727, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[728, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[728, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[729, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[729, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[730, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[731, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[734, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[735, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[745, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[745, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[749, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[750, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[751, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[752, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[753, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[753, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[753, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[754, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[755, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[756, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[757, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[758, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[759, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[760, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[761, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[777, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[778, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[779, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[780, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[781, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[781, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[783, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[783, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[783, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[784, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[785, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[785, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[785, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[785, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[786, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[787, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[788, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[789, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[790, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[791, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[792, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[793, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[794, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[803, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[807, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[808, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[809, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[809, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[809, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[809, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[810, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[811, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[812, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[813, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[813, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[813, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[814, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[814, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[827, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[828, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[829, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[830, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[831, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[832, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[833, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[834, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[835, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[836, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[844, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[845, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[846, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[847, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[848, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[849, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[850, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[851, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[852, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[853, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[854, "torch.arange"]], "arccos() (in module torch)": [[855, "torch.arccos"]], "arccosh() (in module torch)": [[856, "torch.arccosh"]], "arcsin() (in module torch)": [[857, "torch.arcsin"]], "arcsinh() (in module torch)": [[858, "torch.arcsinh"]], "arctan() (in module torch)": [[859, "torch.arctan"]], "arctan2() (in module torch)": [[860, "torch.arctan2"]], "arctanh() (in module torch)": [[861, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[862, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[863, "torch.argmax"]], "argmin() (in module torch)": [[864, "torch.argmin"]], "argsort() (in module torch)": [[865, "torch.argsort"]], "argwhere() (in module torch)": [[866, "torch.argwhere"]], "as_strided() (in module torch)": [[867, "torch.as_strided"]], "as_tensor() (in module torch)": [[868, "torch.as_tensor"]], "asarray() (in module torch)": [[869, "torch.asarray"]], "asin() (in module torch)": [[870, "torch.asin"]], "asinh() (in module torch)": [[871, "torch.asinh"]], "atan() (in module torch)": [[872, "torch.atan"]], "atan2() (in module torch)": [[873, "torch.atan2"]], "atanh() (in module torch)": [[874, "torch.atanh"]], "atleast_1d() (in module torch)": [[875, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[876, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[877, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[878, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[879, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[880, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[881, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[882, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[883, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[884, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[885, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[886, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[887, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[888, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[889, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[890, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[891, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[892, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[893, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[894, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[895, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[896, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[897, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[898, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[899, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[900, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[901, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[902, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[903, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[904, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[905, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[906, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[907, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[908, "torch.autograd.profiler.profile.total_average"]], "set_multithreading_enabled (class in torch.autograd)": [[909, "torch.autograd.set_multithreading_enabled"]], "baddbmm() (in module torch)": [[910, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[911, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[912, "torch.bernoulli"]], "bincount() (in module torch)": [[913, "torch.bincount"]], "bitwise_and() (in module torch)": [[914, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[915, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[916, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[917, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[918, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[919, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[920, "torch.blackman_window"]], "block_diag() (in module torch)": [[921, "torch.block_diag"]], "bmm() (in module torch)": [[922, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[923, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[924, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[925, "torch.broadcast_to"]], "bucketize() (in module torch)": [[926, "torch.bucketize"]], "can_cast() (in module torch)": [[927, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[928, "torch.cartesian_prod"]], "cat() (in module torch)": [[929, "torch.cat"]], "cdist() (in module torch)": [[930, "torch.cdist"]], "ceil() (in module torch)": [[931, "torch.ceil"]], "chain_matmul() (in module torch)": [[932, "torch.chain_matmul"]], "cholesky() (in module torch)": [[933, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[934, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[935, "torch.cholesky_solve"]], "chunk() (in module torch)": [[936, "torch.chunk"]], "clamp() (in module torch)": [[937, "torch.clamp"]], "clip() (in module torch)": [[938, "torch.clip"]], "clone() (in module torch)": [[939, "torch.clone"]], "column_stack() (in module torch)": [[940, "torch.column_stack"]], "combinations() (in module torch)": [[941, "torch.combinations"]], "compiled_with_cxx11_abi() (in module torch)": [[943, "torch.compiled_with_cxx11_abi"]], "complex() (in module torch)": [[944, "torch.complex"]], "concat() (in module torch)": [[945, "torch.concat"]], "concatenate() (in module torch)": [[946, "torch.concatenate"]], "conj() (in module torch)": [[947, "torch.conj"]], "conj_physical() (in module torch)": [[948, "torch.conj_physical"]], "copysign() (in module torch)": [[949, "torch.copysign"]], "corrcoef() (in module torch)": [[950, "torch.corrcoef"]], "cos() (in module torch)": [[951, "torch.cos"]], "cosh() (in module torch)": [[952, "torch.cosh"]], "count_nonzero() (in module torch)": [[953, "torch.count_nonzero"]], "cov() (in module torch)": [[954, "torch.cov"]], "cross() (in module torch)": [[955, "torch.cross"]], "cudagraph (class in torch.cuda)": [[956, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[956, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[956, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[956, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[956, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[956, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[956, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[956, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[957, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[958, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[958, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[958, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[958, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[958, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[958, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[958, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[958, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[959, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[959, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[959, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[959, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[959, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[959, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[960, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[961, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[961, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[961, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[961, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[961, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[961, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[962, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[963, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[964, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[965, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[966, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[967, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[968, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[969, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[970, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[971, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[972, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[973, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[974, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[975, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[976, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[977, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[978, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[979, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[980, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[981, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[982, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[983, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[984, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[985, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[986, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[987, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[988, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[989, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[990, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[991, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[992, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[993, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[994, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[995, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[996, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[997, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[998, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[999, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1000, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1001, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1002, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1003, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1004, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1005, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1006, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1007, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1008, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1009, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1010, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1011, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1012, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1013, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1014, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1015, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1016, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1017, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1018, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1019, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1020, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1021, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1022, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1023, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1024, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1025, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1026, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1027, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1028, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1029, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1030, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1031, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1032, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1033, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1034, "torch.cummax"]], "cummin() (in module torch)": [[1035, "torch.cummin"]], "cumprod() (in module torch)": [[1036, "torch.cumprod"]], "cumsum() (in module torch)": [[1037, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1038, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1039, "torch.deg2rad"]], "dequantize() (in module torch)": [[1040, "torch.dequantize"]], "det() (in module torch)": [[1041, "torch.det"]], "diag() (in module torch)": [[1042, "torch.diag"]], "diag_embed() (in module torch)": [[1043, "torch.diag_embed"]], "diagflat() (in module torch)": [[1044, "torch.diagflat"]], "diagonal() (in module torch)": [[1045, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1046, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1047, "torch.diff"]], "digamma() (in module torch)": [[1048, "torch.digamma"]], "dist() (in module torch)": [[1049, "torch.dist"]], "div() (in module torch)": [[1050, "torch.div"]], "divide() (in module torch)": [[1051, "torch.divide"]], "dot() (in module torch)": [[1052, "torch.dot"]], "dsplit() (in module torch)": [[1053, "torch.dsplit"]], "dstack() (in module torch)": [[1054, "torch.dstack"]], "einsum() (in module torch)": [[1055, "torch.einsum"]], "empty() (in module torch)": [[1056, "torch.empty"]], "empty_like() (in module torch)": [[1057, "torch.empty_like"]], "empty_strided() (in module torch)": [[1058, "torch.empty_strided"]], "enable_grad (class in torch)": [[1059, "torch.enable_grad"]], "eq() (in module torch)": [[1060, "torch.eq"]], "equal() (in module torch)": [[1061, "torch.equal"]], "erf() (in module torch)": [[1062, "torch.erf"]], "erfc() (in module torch)": [[1063, "torch.erfc"]], "erfinv() (in module torch)": [[1064, "torch.erfinv"]], "exp() (in module torch)": [[1065, "torch.exp"]], "exp2() (in module torch)": [[1066, "torch.exp2"]], "expm1() (in module torch)": [[1067, "torch.expm1"]], "eye() (in module torch)": [[1068, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1069, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1070, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1071, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1072, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1073, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1074, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1075, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1076, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1077, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1078, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1079, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1080, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1081, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1082, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1083, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1084, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1085, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1086, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1087, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1088, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1089, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1090, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1091, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1092, "torch.fft.rfftn"]], "fix() (in module torch)": [[1093, "torch.fix"]], "flatten() (in module torch)": [[1094, "torch.flatten"]], "flip() (in module torch)": [[1095, "torch.flip"]], "fliplr() (in module torch)": [[1096, "torch.fliplr"]], "flipud() (in module torch)": [[1097, "torch.flipud"]], "float_power() (in module torch)": [[1098, "torch.float_power"]], "floor() (in module torch)": [[1099, "torch.floor"]], "floor_divide() (in module torch)": [[1100, "torch.floor_divide"]], "fmax() (in module torch)": [[1101, "torch.fmax"]], "fmin() (in module torch)": [[1102, "torch.fmin"]], "fmod() (in module torch)": [[1103, "torch.fmod"]], "frac() (in module torch)": [[1104, "torch.frac"]], "frexp() (in module torch)": [[1105, "torch.frexp"]], "from_dlpack() (in module torch)": [[1106, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1107, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1108, "torch.frombuffer"]], "full() (in module torch)": [[1109, "torch.full"]], "full_like() (in module torch)": [[1110, "torch.full_like"]], "functional_call() (in module torch.func)": [[1111, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1112, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1113, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1114, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1115, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1116, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1117, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1118, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1119, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1120, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1121, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1122, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1123, "torch.func.vmap"]], "gather() (in module torch)": [[1124, "torch.gather"]], "gcd() (in module torch)": [[1125, "torch.gcd"]], "ge() (in module torch)": [[1126, "torch.ge"]], "geqrf() (in module torch)": [[1127, "torch.geqrf"]], "ger() (in module torch)": [[1128, "torch.ger"]], "get_default_dtype() (in module torch)": [[1129, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1130, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1131, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1132, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1133, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1134, "torch.get_rng_state"]], "gradient() (in module torch)": [[1135, "torch.gradient"]], "greater() (in module torch)": [[1136, "torch.greater"]], "greater_equal() (in module torch)": [[1137, "torch.greater_equal"]], "gt() (in module torch)": [[1138, "torch.gt"]], "hamming_window() (in module torch)": [[1139, "torch.hamming_window"]], "hann_window() (in module torch)": [[1140, "torch.hann_window"]], "heaviside() (in module torch)": [[1141, "torch.heaviside"]], "histc() (in module torch)": [[1142, "torch.histc"]], "histogram() (in module torch)": [[1143, "torch.histogram"]], "histogramdd() (in module torch)": [[1144, "torch.histogramdd"]], "hsplit() (in module torch)": [[1145, "torch.hsplit"]], "hspmm() (in module torch)": [[1146, "torch.hspmm"]], "hstack() (in module torch)": [[1147, "torch.hstack"]], "hypot() (in module torch)": [[1148, "torch.hypot"]], "i0() (in module torch)": [[1149, "torch.i0"]], "igamma() (in module torch)": [[1150, "torch.igamma"]], "igammac() (in module torch)": [[1151, "torch.igammac"]], "imag() (in module torch)": [[1152, "torch.imag"]], "index_add() (in module torch)": [[1153, "torch.index_add"]], "index_copy() (in module torch)": [[1154, "torch.index_copy"]], "index_reduce() (in module torch)": [[1155, "torch.index_reduce"]], "index_select() (in module torch)": [[1156, "torch.index_select"]], "inference_mode (class in torch)": [[1157, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1158, "torch.initial_seed"]], "inner() (in module torch)": [[1159, "torch.inner"]], "inverse() (in module torch)": [[1160, "torch.inverse"]], "is_complex() (in module torch)": [[1161, "torch.is_complex"]], "is_conj() (in module torch)": [[1162, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1163, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1164, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1165, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1166, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1167, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1168, "torch.is_storage"]], "is_tensor() (in module torch)": [[1169, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1170, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1171, "torch.isclose"]], "isfinite() (in module torch)": [[1172, "torch.isfinite"]], "isin() (in module torch)": [[1173, "torch.isin"]], "isinf() (in module torch)": [[1174, "torch.isinf"]], "isnan() (in module torch)": [[1175, "torch.isnan"]], "isneginf() (in module torch)": [[1176, "torch.isneginf"]], "isposinf() (in module torch)": [[1177, "torch.isposinf"]], "isreal() (in module torch)": [[1178, "torch.isreal"]], "istft() (in module torch)": [[1179, "torch.istft"]], "attribute (class in torch.jit)": [[1180, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1180, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1180, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1180, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1180, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1181, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1181, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1181, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1181, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1182, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1182, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1182, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1182, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1182, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1182, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1183, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1184, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1185, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1186, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1187, "torch.jit.ignore"]], "isinstance() (in module torch.jit)": [[1188, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1189, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1190, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1191, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1192, "torch.jit.save"]], "script() (in module torch.jit)": [[1193, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1194, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1195, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1196, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1197, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1198, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1199, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1200, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1201, "torch.kaiser_window"]], "kron() (in module torch)": [[1202, "torch.kron"]], "kthvalue() (in module torch)": [[1203, "torch.kthvalue"]], "lcm() (in module torch)": [[1204, "torch.lcm"]], "ldexp() (in module torch)": [[1205, "torch.ldexp"]], "le() (in module torch)": [[1206, "torch.le"]], "lerp() (in module torch)": [[1207, "torch.lerp"]], "less() (in module torch)": [[1208, "torch.less"]], "less_equal() (in module torch)": [[1209, "torch.less_equal"]], "lgamma() (in module torch)": [[1210, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1211, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1212, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1213, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1214, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1215, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1216, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1217, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1218, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1219, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1220, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1221, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1222, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1223, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1224, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1225, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1226, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1227, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1228, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1229, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1230, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1231, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1232, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1233, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1234, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1235, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1236, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1237, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1238, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1239, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1240, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1241, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1242, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1243, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1244, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1245, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1246, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1247, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1248, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1249, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1250, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1251, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1252, "torch.linspace"]], "load() (in module torch)": [[1253, "torch.load"]], "lobpcg() (in module torch)": [[1254, "torch.lobpcg"]], "log() (in module torch)": [[1255, "torch.log"]], "log10() (in module torch)": [[1256, "torch.log10"]], "log1p() (in module torch)": [[1257, "torch.log1p"]], "log2() (in module torch)": [[1258, "torch.log2"]], "logaddexp() (in module torch)": [[1259, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1260, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1261, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1262, "torch.logdet"]], "logical_and() (in module torch)": [[1263, "torch.logical_and"]], "logical_not() (in module torch)": [[1264, "torch.logical_not"]], "logical_or() (in module torch)": [[1265, "torch.logical_or"]], "logical_xor() (in module torch)": [[1266, "torch.logical_xor"]], "logit() (in module torch)": [[1267, "torch.logit"]], "logspace() (in module torch)": [[1268, "torch.logspace"]], "logsumexp() (in module torch)": [[1269, "torch.logsumexp"]], "lt() (in module torch)": [[1270, "torch.lt"]], "lu() (in module torch)": [[1271, "torch.lu"]], "lu_solve() (in module torch)": [[1272, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1273, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1274, "torch.manual_seed"]], "masked_select() (in module torch)": [[1275, "torch.masked_select"]], "matmul() (in module torch)": [[1276, "torch.matmul"]], "matrix_exp() (in module torch)": [[1277, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1278, "torch.matrix_power"]], "max() (in module torch)": [[1279, "torch.max"]], "maximum() (in module torch)": [[1280, "torch.maximum"]], "mean() (in module torch)": [[1281, "torch.mean"]], "median() (in module torch)": [[1282, "torch.median"]], "meshgrid() (in module torch)": [[1283, "torch.meshgrid"]], "min() (in module torch)": [[1284, "torch.min"]], "minimum() (in module torch)": [[1285, "torch.minimum"]], "mm() (in module torch)": [[1286, "torch.mm"]], "mode() (in module torch)": [[1287, "torch.mode"]], "moveaxis() (in module torch)": [[1288, "torch.moveaxis"]], "movedim() (in module torch)": [[1289, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1290, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1291, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1292, "torch.mps.empty_cache"]], "get_rng_state() (in module torch.mps)": [[1293, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1294, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1295, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1296, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1297, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1298, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1299, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1300, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1301, "torch.mps.synchronize"]], "msort() (in module torch)": [[1302, "torch.msort"]], "mul() (in module torch)": [[1303, "torch.mul"]], "multinomial() (in module torch)": [[1304, "torch.multinomial"]], "multiply() (in module torch)": [[1305, "torch.multiply"]], "mv() (in module torch)": [[1306, "torch.mv"]], "mvlgamma() (in module torch)": [[1307, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1308, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1309, "torch.nanmean"]], "nanmedian() (in module torch)": [[1310, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1311, "torch.nanquantile"]], "nansum() (in module torch)": [[1312, "torch.nansum"]], "narrow() (in module torch)": [[1313, "torch.narrow"]], "narrow_copy() (in module torch)": [[1314, "torch.narrow_copy"]], "ne() (in module torch)": [[1315, "torch.ne"]], "neg() (in module torch)": [[1316, "torch.neg"]], "negative() (in module torch)": [[1317, "torch.negative"]], "nextafter() (in module torch)": [[1318, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1319, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1320, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1321, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1322, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1322, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1322, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1323, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1324, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1325, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1326, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1327, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1328, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1329, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1330, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1331, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1332, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1333, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1334, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1335, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1336, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1337, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1338, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1339, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1340, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1341, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1342, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1343, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1344, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1345, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1346, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1347, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1348, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1349, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1350, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1351, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1352, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1353, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1354, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1355, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1356, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1357, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1357, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1358, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1358, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1358, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1359, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1360, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1361, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1362, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1363, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1364, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1365, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1366, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1367, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1368, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1369, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1370, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1371, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1372, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1373, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1374, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1375, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1376, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1377, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1378, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1379, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1380, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1381, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1382, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1383, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1384, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1385, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1386, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1387, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1387, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1388, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1388, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1389, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1389, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1390, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1390, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1391, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1391, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1392, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1392, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1393, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1393, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1394, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1394, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1395, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1395, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1396, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1396, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1397, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1397, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1398, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1398, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1399, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1399, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1400, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1401, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1402, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1403, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1404, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1405, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1406, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1407, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1408, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1409, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1410, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1411, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1412, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1413, "torch.nn.Mish"]], "module (class in torch.nn)": [[1414, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1414, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1414, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1414, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1414, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1414, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1414, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1414, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1414, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1414, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1414, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1414, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1414, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1414, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1414, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1414, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1414, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1414, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1414, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1414, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1414, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1414, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1414, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1414, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1414, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1414, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1414, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1414, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1414, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1414, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1414, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1414, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1414, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1414, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1414, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1414, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1414, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1414, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1414, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1414, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1414, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1414, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1414, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1414, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1414, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1414, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1414, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1415, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1415, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1415, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1415, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1415, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1415, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1415, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1416, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1416, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1416, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1416, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1417, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1418, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1419, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1420, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1420, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1420, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1421, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1422, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1423, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1424, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1424, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1424, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1424, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1424, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1424, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1424, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1424, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1424, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1424, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1424, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1424, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1425, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1425, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1425, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1426, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1427, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1428, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1429, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1430, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1430, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1431, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1432, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1433, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1434, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1435, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1436, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1437, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1438, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1439, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1440, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1441, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1442, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1442, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1443, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1444, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1445, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1446, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1447, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1448, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1449, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1450, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1451, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1452, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1453, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1453, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1454, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1455, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1456, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1457, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1457, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1457, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1458, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1458, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1459, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1459, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1460, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1460, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1461, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1461, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1462, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1463, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1464, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1465, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1466, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1467, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1468, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1469, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1470, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1471, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1472, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1473, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1474, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1475, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1476, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1477, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1478, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1479, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1480, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1481, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1482, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1483, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1484, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1485, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1486, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1487, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1488, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1489, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1490, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1491, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1492, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1493, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1494, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1495, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1496, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1497, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1498, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1499, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1500, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1501, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1502, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1503, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1504, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1505, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1506, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1507, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1508, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1509, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1510, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1511, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1512, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1513, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1514, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1515, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1516, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1517, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1518, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1519, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1520, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1521, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1522, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1523, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1524, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1525, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1526, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1527, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1528, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1529, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1530, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1531, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1532, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1533, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1534, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1535, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1536, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1537, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1538, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1539, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1540, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1541, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1542, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1543, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1544, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1545, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1546, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1547, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1548, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1549, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1550, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1551, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1552, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1553, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1554, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1555, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1556, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1557, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1558, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1559, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1560, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1561, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1562, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1563, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1564, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1565, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1566, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1567, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1568, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1569, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1570, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1571, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1572, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1573, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1574, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1575, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1576, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1577, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1578, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1579, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1580, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1581, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1582, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1583, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1584, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1585, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1585, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1585, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1586, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1587, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1588, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1589, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1590, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1591, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1592, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1593, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1594, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1594, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1594, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1594, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1594, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1595, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1596, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1597, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1597, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1598, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1599, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1600, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1601, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1602, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1603, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1603, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1604, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1605, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1606, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1607, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1608, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1608, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1608, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1608, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1608, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1608, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1609, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1609, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1609, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1609, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1609, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1610, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1610, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1610, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1610, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1610, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1611, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1611, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1611, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1611, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1611, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1612, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1612, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1612, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1612, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1612, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1612, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1613, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1613, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1613, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1613, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1613, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1613, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1613, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1614, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1614, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1614, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1614, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1614, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1614, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1615, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1615, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1615, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1615, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1615, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1616, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1617, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1618, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1619, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1620, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1621, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1622, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1623, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1624, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1625, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1626, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1627, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1627, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1627, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1627, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1627, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1627, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1627, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1627, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1627, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1627, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1628, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1629, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1630, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1631, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1632, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1633, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1634, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1635, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1636, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1637, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1638, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1639, "torch.no_grad"]], "nonzero() (in module torch)": [[1640, "torch.nonzero"]], "norm() (in module torch)": [[1641, "torch.norm"]], "normal() (in module torch)": [[1642, "torch.normal"]], "not_equal() (in module torch)": [[1643, "torch.not_equal"]], "numel() (in module torch)": [[1644, "torch.numel"]], "ones() (in module torch)": [[1645, "torch.ones"]], "ones_like() (in module torch)": [[1646, "torch.ones_like"]], "exportoptions (class in torch.onnx)": [[1647, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1648, "torch.onnx.ExportOutput"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1648, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1648, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1648, "torch.onnx.ExportOutput.diagnostic_context"]], "model_proto (torch.onnx.exportoutput property)": [[1648, "torch.onnx.ExportOutput.model_proto"]], "save() (torch.onnx.exportoutput method)": [[1648, "torch.onnx.ExportOutput.save"]], "exportoutputserializer (class in torch.onnx)": [[1649, "torch.onnx.ExportOutputSerializer"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1649, "torch.onnx.ExportOutputSerializer.serialize"]], "jitscalartype (class in torch.onnx)": [[1650, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1650, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1650, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1650, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1650, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1650, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1650, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1650, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1651, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1651, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1651, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1651, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1651, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1651, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1651, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1651, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1651, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1651, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1651, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1651, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1652, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1653, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1653, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1653, "torch.optim.ASGD.load_state_dict"]], "register_step_post_hook() (torch.optim.asgd method)": [[1653, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1653, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1653, "torch.optim.ASGD.state_dict"]], "zero_grad() (torch.optim.asgd method)": [[1653, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1654, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1654, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1654, "torch.optim.Adadelta.load_state_dict"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1654, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1654, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1654, "torch.optim.Adadelta.state_dict"]], "zero_grad() (torch.optim.adadelta method)": [[1654, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1655, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1655, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1655, "torch.optim.Adagrad.load_state_dict"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1655, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1655, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1655, "torch.optim.Adagrad.state_dict"]], "zero_grad() (torch.optim.adagrad method)": [[1655, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1656, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1656, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1656, "torch.optim.Adam.load_state_dict"]], "register_step_post_hook() (torch.optim.adam method)": [[1656, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1656, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1656, "torch.optim.Adam.state_dict"]], "zero_grad() (torch.optim.adam method)": [[1656, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1657, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1657, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1657, "torch.optim.AdamW.load_state_dict"]], "register_step_post_hook() (torch.optim.adamw method)": [[1657, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1657, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1657, "torch.optim.AdamW.state_dict"]], "zero_grad() (torch.optim.adamw method)": [[1657, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1658, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1658, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1658, "torch.optim.Adamax.load_state_dict"]], "register_step_post_hook() (torch.optim.adamax method)": [[1658, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1658, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1658, "torch.optim.Adamax.state_dict"]], "zero_grad() (torch.optim.adamax method)": [[1658, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1659, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1659, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1659, "torch.optim.LBFGS.load_state_dict"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1659, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1659, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1659, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1659, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1659, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1660, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1660, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1660, "torch.optim.NAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.nadam method)": [[1660, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1660, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1660, "torch.optim.NAdam.state_dict"]], "zero_grad() (torch.optim.nadam method)": [[1660, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1661, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1662, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1663, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1664, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1665, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1666, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1666, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1666, "torch.optim.RAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.radam method)": [[1666, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1666, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1666, "torch.optim.RAdam.state_dict"]], "zero_grad() (torch.optim.radam method)": [[1666, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1667, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1667, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1667, "torch.optim.RMSprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1667, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1667, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1667, "torch.optim.RMSprop.state_dict"]], "zero_grad() (torch.optim.rmsprop method)": [[1667, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1668, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1668, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1668, "torch.optim.Rprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rprop method)": [[1668, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1668, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1668, "torch.optim.Rprop.state_dict"]], "zero_grad() (torch.optim.rprop method)": [[1668, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1669, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1669, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1669, "torch.optim.SGD.load_state_dict"]], "register_step_post_hook() (torch.optim.sgd method)": [[1669, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1669, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1669, "torch.optim.SGD.state_dict"]], "zero_grad() (torch.optim.sgd method)": [[1669, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1670, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1670, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1670, "torch.optim.SparseAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1670, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1670, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1670, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1670, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1670, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1671, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1671, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1671, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1671, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1671, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1672, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1672, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1672, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1672, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1672, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1673, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1673, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1673, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1673, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1673, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1674, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1674, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1674, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1674, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1674, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1674, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1675, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1675, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1675, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1675, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1676, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1676, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1676, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1676, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1676, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1677, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1677, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1677, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1677, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1677, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1678, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1678, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1678, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1678, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1678, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1679, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1679, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1679, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1679, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1679, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1680, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1680, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1680, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1680, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1680, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1681, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1681, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1681, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1681, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1681, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1682, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1682, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1682, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1682, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1682, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1683, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1684, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1684, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1684, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1684, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1684, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1685, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1685, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1685, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1685, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1685, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1686, "torch.orgqr"]], "ormqr() (in module torch)": [[1687, "torch.ormqr"]], "outer() (in module torch)": [[1688, "torch.outer"]], "pca_lowrank() (in module torch)": [[1689, "torch.pca_lowrank"]], "permute() (in module torch)": [[1690, "torch.permute"]], "pinverse() (in module torch)": [[1691, "torch.pinverse"]], "poisson() (in module torch)": [[1692, "torch.poisson"]], "polar() (in module torch)": [[1693, "torch.polar"]], "polygamma() (in module torch)": [[1694, "torch.polygamma"]], "positive() (in module torch)": [[1695, "torch.positive"]], "pow() (in module torch)": [[1696, "torch.pow"]], "prod() (in module torch)": [[1697, "torch.prod"]], "promote_types() (in module torch)": [[1698, "torch.promote_types"]], "qr() (in module torch)": [[1699, "torch.qr"]], "quantile() (in module torch)": [[1700, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1701, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1702, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1703, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1704, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1705, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1706, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1706, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1706, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1706, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1706, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1707, "torch.rad2deg"]], "rand() (in module torch)": [[1708, "torch.rand"]], "rand_like() (in module torch)": [[1709, "torch.rand_like"]], "randint() (in module torch)": [[1710, "torch.randint"]], "randint_like() (in module torch)": [[1711, "torch.randint_like"]], "randn() (in module torch)": [[1712, "torch.randn"]], "randn_like() (in module torch)": [[1713, "torch.randn_like"]], "randperm() (in module torch)": [[1714, "torch.randperm"]], "range() (in module torch)": [[1715, "torch.range"]], "ravel() (in module torch)": [[1716, "torch.ravel"]], "real() (in module torch)": [[1717, "torch.real"]], "reciprocal() (in module torch)": [[1718, "torch.reciprocal"]], "remainder() (in module torch)": [[1719, "torch.remainder"]], "renorm() (in module torch)": [[1720, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1721, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1722, "torch.reshape"]], "resolve_conj() (in module torch)": [[1723, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1724, "torch.resolve_neg"]], "result_type() (in module torch)": [[1725, "torch.result_type"]], "roll() (in module torch)": [[1726, "torch.roll"]], "rot90() (in module torch)": [[1727, "torch.rot90"]], "round() (in module torch)": [[1728, "torch.round"]], "row_stack() (in module torch)": [[1729, "torch.row_stack"]], "rsqrt() (in module torch)": [[1730, "torch.rsqrt"]], "save() (in module torch)": [[1731, "torch.save"]], "scatter() (in module torch)": [[1732, "torch.scatter"]], "scatter_add() (in module torch)": [[1733, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1734, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1735, "torch.searchsorted"]], "seed() (in module torch)": [[1736, "torch.seed"]], "select() (in module torch)": [[1737, "torch.select"]], "select_scatter() (in module torch)": [[1738, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1739, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1740, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1741, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1742, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1743, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1744, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1745, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1746, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1747, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1748, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1749, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1750, "torch.set_warn_always"]], "sgn() (in module torch)": [[1751, "torch.sgn"]], "sigmoid() (in module torch)": [[1752, "torch.sigmoid"]], "sign() (in module torch)": [[1753, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1754, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1755, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1756, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1757, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1758, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1759, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1760, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1761, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1762, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1763, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1764, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1765, "torch.signbit"]], "sin() (in module torch)": [[1766, "torch.sin"]], "sinc() (in module torch)": [[1767, "torch.sinc"]], "sinh() (in module torch)": [[1768, "torch.sinh"]], "slice_scatter() (in module torch)": [[1769, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1770, "torch.slogdet"]], "smm() (in module torch)": [[1771, "torch.smm"]], "softmax() (in module torch)": [[1772, "torch.softmax"]], "sort() (in module torch)": [[1773, "torch.sort"]], "addmm() (in module torch.sparse)": [[1774, "torch.sparse.addmm"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1775, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1775, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1775, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1775, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1776, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1777, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1778, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1779, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1780, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1781, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1782, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1783, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1784, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1785, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1786, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1787, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1788, "torch.split"]], "sqrt() (in module torch)": [[1789, "torch.sqrt"]], "square() (in module torch)": [[1790, "torch.square"]], "squeeze() (in module torch)": [[1791, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1792, "torch.sspaddmm"]], "stack() (in module torch)": [[1793, "torch.stack"]], "std() (in module torch)": [[1794, "torch.std"]], "std_mean() (in module torch)": [[1795, "torch.std_mean"]], "stft() (in module torch)": [[1796, "torch.stft"]], "sub() (in module torch)": [[1797, "torch.sub"]], "subtract() (in module torch)": [[1798, "torch.subtract"]], "sum() (in module torch)": [[1799, "torch.sum"]], "svd() (in module torch)": [[1800, "torch.svd"]], "svd_lowrank() (in module torch)": [[1801, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1802, "torch.swapaxes"]], "swapdims() (in module torch)": [[1803, "torch.swapdims"]], "sym_float() (in module torch)": [[1804, "torch.sym_float"]], "sym_int() (in module torch)": [[1805, "torch.sym_int"]], "sym_max() (in module torch)": [[1806, "torch.sym_max"]], "sym_min() (in module torch)": [[1807, "torch.sym_min"]], "sym_not() (in module torch)": [[1808, "torch.sym_not"]], "t() (in module torch)": [[1809, "torch.t"]], "take() (in module torch)": [[1810, "torch.take"]], "take_along_dim() (in module torch)": [[1811, "torch.take_along_dim"]], "tan() (in module torch)": [[1812, "torch.tan"]], "tanh() (in module torch)": [[1813, "torch.tanh"]], "tensor() (in module torch)": [[1814, "torch.tensor"]], "tensor_split() (in module torch)": [[1815, "torch.tensor_split"]], "tensordot() (in module torch)": [[1816, "torch.tensordot"]], "tile() (in module torch)": [[1817, "torch.tile"]], "topk() (in module torch)": [[1818, "torch.topk"]], "trace() (in module torch)": [[1819, "torch.trace"]], "transpose() (in module torch)": [[1820, "torch.transpose"]], "trapezoid() (in module torch)": [[1821, "torch.trapezoid"]], "trapz() (in module torch)": [[1822, "torch.trapz"]], "triangular_solve() (in module torch)": [[1823, "torch.triangular_solve"]], "tril() (in module torch)": [[1824, "torch.tril"]], "tril_indices() (in module torch)": [[1825, "torch.tril_indices"]], "triu() (in module torch)": [[1826, "torch.triu"]], "triu_indices() (in module torch)": [[1827, "torch.triu_indices"]], "true_divide() (in module torch)": [[1828, "torch.true_divide"]], "trunc() (in module torch)": [[1829, "torch.trunc"]], "unbind() (in module torch)": [[1830, "torch.unbind"]], "unflatten() (in module torch)": [[1831, "torch.unflatten"]], "unique() (in module torch)": [[1832, "torch.unique"]], "unique_consecutive() (in module torch)": [[1833, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1834, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1835, "torch.use_deterministic_algorithms"]], "vander() (in module torch)": [[1836, "torch.vander"]], "var() (in module torch)": [[1837, "torch.var"]], "var_mean() (in module torch)": [[1838, "torch.var_mean"]], "vdot() (in module torch)": [[1839, "torch.vdot"]], "view_as_complex() (in module torch)": [[1840, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1841, "torch.view_as_real"]], "vmap() (in module torch)": [[1842, "torch.vmap"]], "vsplit() (in module torch)": [[1843, "torch.vsplit"]], "vstack() (in module torch)": [[1844, "torch.vstack"]], "where() (in module torch)": [[1845, "torch.where"]], "xlogy() (in module torch)": [[1846, "torch.xlogy"]], "zeros() (in module torch)": [[1847, "torch.zeros"]], "zeros_like() (in module torch)": [[1848, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1849, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1849, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1849, "torch.hub.help"]], "list() (in module torch.hub)": [[1849, "torch.hub.list"]], "load() (in module torch.hub)": [[1849, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1849, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1849, "torch.hub.set_dir"]], "torch.hub": [[1849, "module-torch.hub"]], "pytorch_jit": [[1852, "envvar-PYTORCH_JIT"]], "environment variable": [[1852, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1852, "torch.jit.export"]], "torch.jit": [[1852, "module-torch.jit"]], "torch.jit.mobile": [[1852, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1853, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1854, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1854, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1857, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1858, "module-torch.utils.jit"]], "library (class in torch.library)": [[1859, "torch.library.Library"]], "define() (torch.library.library method)": [[1859, "torch.library.Library.define"]], "impl() (torch.library.library method)": [[1859, "torch.library.Library.impl"]], "torch.linalg": [[1860, "module-torch.linalg"]], "torch._logging": [[1861, "module-torch._logging"]], "torch.masked": [[1862, "module-torch.masked"]], "torch.masked.maskedtensor": [[1862, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1863, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1864, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1864, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1865, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1865, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1865, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1865, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1865, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1865, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1865, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1865, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1865, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1865, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1865, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1865, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1865, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1865, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1865, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1865, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1865, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1865, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1865, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1865, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1865, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1866, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1867, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1867, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1867, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1867, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1867, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1867, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1867, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1869, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1869, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1869, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1869, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1869, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1869, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1870, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1870, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1870, "torch.nested.to_padded_tensor"]], "torch.nested": [[1870, "module-torch.nested"]], "torch.nn": [[1871, "module-torch.nn"]], "torch.nn.backends": [[1871, "module-torch.nn.backends"]], "torch.nn.modules": [[1871, "module-torch.nn.modules"]], "torch.nn.parallel": [[1871, "module-torch.nn.parallel"]], "torch.nn.utils": [[1871, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1871, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1873, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1873, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1873, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1873, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1873, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1873, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1873, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1873, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1873, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1873, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1873, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1873, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1873, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1873, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1873, "torch.nn.init.zeros_"]], "disable_log() (in module torch.onnx)": [[1893, "torch.onnx.disable_log"]], "dynamo_export() (in module torch.onnx)": [[1893, "torch.onnx.dynamo_export"]], "enable_log() (in module torch.onnx)": [[1893, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1893, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1893, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1893, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1893, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1893, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1893, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1893, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1893, "torch.onnx.unregister_custom_op_symbolic"]], "exportdiagnostic (class in torch.onnx._internal.diagnostics)": [[1894, "torch.onnx._internal.diagnostics.ExportDiagnostic"]], "record_cpp_call_stack() (torch.onnx._internal.diagnostics.exportdiagnostic method)": [[1894, "torch.onnx._internal.diagnostics.ExportDiagnostic.record_cpp_call_stack"]], "torch.onnx._internal.diagnostics": [[1894, "module-torch.onnx._internal.diagnostics"]], "optimizer (class in torch.optim)": [[1896, "torch.optim.Optimizer"]], "torch.optim": [[1896, "module-torch.optim"]], "directory (class in torch.package)": [[1897, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1897, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1897, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1897, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1897, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1897, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1897, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1897, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1897, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1897, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1897, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1897, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1897, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1897, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1897, "torch.package.PackageExporter.save_text"]], "torch.package": [[1897, "module-torch.package"]], "torch.package.analyze": [[1897, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1898, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1898, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1898, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1898, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1898, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1898, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1899, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1899, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1899, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1899, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1899, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1899, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1899, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1899, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1899, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1899, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1899, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1899, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1899, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1899, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1899, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1899, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1899, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1899, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1899, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1899, "module-torch.profiler"]], "torch.ao": [[1900, "module-torch.ao"]], "torch.ao.nn": [[1900, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1900, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1900, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1900, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1900, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1900, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1900, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1900, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1900, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1900, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1900, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1900, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1900, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1900, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1900, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1900, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1900, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1903, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1903, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1903, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1903, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1903, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1903, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1903, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1903, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1903, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1903, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1903, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1903, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1903, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1903, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1903, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1903, "module-torch.ao.nn.quantized.modules"]], "torch.nn.intrinsic": [[1903, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1903, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1903, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1903, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1903, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1903, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1903, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1903, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1903, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1903, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1903, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1903, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1903, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1903, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1903, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1903, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1903, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1903, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1903, "module-torch.quantization"]], "torch.quantization.fx": [[1903, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1904, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1904, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1904, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1904, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1904, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1904, "torch.random.set_rng_state"]], "torch.random": [[1904, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1905, "torch.distributed.rpc.BackendType"]], "rref (class in torch.distributed.rpc)": [[1905, "torch.distributed.rpc.RRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1905, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1905, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1905, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1905, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1905, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1905, "torch.distributed.autograd.backward"]], "context (class in torch.distributed.autograd)": [[1905, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1905, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1905, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1905, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1905, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1905, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1905, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1905, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1905, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1905, "torch.distributed.rpc.init_rpc"]], "name (torch.distributed.rpc.workerinfo property)": [[1905, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1905, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "remote() (in module torch.distributed.rpc)": [[1905, "torch.distributed.rpc.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1905, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1905, "torch.distributed.rpc.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1905, "torch.distributed.rpc.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1905, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1905, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1905, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1905, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1905, "torch.distributed.rpc.shutdown"]], "torch.distributed.autograd": [[1905, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1905, "module-torch.distributed.rpc"]], "torch.signal": [[1908, "module-torch.signal"]], "torch.signal.windows": [[1908, "module-torch.signal.windows"]], "torch.sparse": [[1909, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1910, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1910, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1910, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1910, "torch.special.digamma"]], "entr() (in module torch.special)": [[1910, "torch.special.entr"]], "erf() (in module torch.special)": [[1910, "torch.special.erf"]], "erfc() (in module torch.special)": [[1910, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1910, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1910, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1910, "torch.special.exp2"]], "expit() (in module torch.special)": [[1910, "torch.special.expit"]], "expm1() (in module torch.special)": [[1910, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1910, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1910, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1910, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1910, "torch.special.i0"]], "i0e() (in module torch.special)": [[1910, "torch.special.i0e"]], "i1() (in module torch.special)": [[1910, "torch.special.i1"]], "i1e() (in module torch.special)": [[1910, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1910, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1910, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1910, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1910, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1910, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1910, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1910, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1910, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1910, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1910, "torch.special.psi"]], "round() (in module torch.special)": [[1910, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1910, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1910, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1910, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1910, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1910, "torch.special.spherical_bessel_j0"]], "torch.special": [[1910, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1910, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1910, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1910, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1911, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1911, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1911, "torch.ByteStorage"]], "charstorage (class in torch)": [[1911, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1911, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1911, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1911, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1911, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1911, "torch.HalfStorage"]], "intstorage (class in torch)": [[1911, "torch.IntStorage"]], "longstorage (class in torch)": [[1911, "torch.LongStorage"]], "qint32storage (class in torch)": [[1911, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1911, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1911, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1911, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1911, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1911, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1911, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1911, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1911, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1911, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1911, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1911, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1911, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1911, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1911, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1911, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1911, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1911, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1911, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1911, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1911, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1911, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1911, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1911, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1911, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1911, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1911, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1911, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1911, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1911, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1911, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1911, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1911, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1911, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1911, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1911, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1911, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1911, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1911, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1911, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1911, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1911, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1911, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1911, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1911, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1911, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1911, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1911, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1911, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.half"]], "int() (torch.typedstorage method)": [[1911, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1911, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1911, "torch.UntypedStorage.is_cuda"]], "is_pinned() (torch.typedstorage method)": [[1911, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1911, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1911, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1911, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1911, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1911, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1911, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1911, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1911, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1911, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1911, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1911, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1911, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1911, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1911, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1911, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1911, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1912, "torch.device"]], "dtype (class in torch)": [[1912, "torch.dtype"]], "layout (class in torch)": [[1912, "torch.layout"]], "memory_format (class in torch)": [[1912, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1914, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1914, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1915, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1915, "torch.Tensor.T"]], "tensor (class in torch)": [[1915, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1915, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1915, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1916, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1916, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1916, "torch.testing.make_tensor"]], "torch.testing": [[1916, "module-torch.testing"]], "symbool (class in torch)": [[1917, "torch.SymBool"]], "symfloat (class in torch)": [[1917, "torch.SymFloat"]], "symint (class in torch)": [[1917, "torch.SymInt"]], "tag (class in torch)": [[1917, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1917, "torch.torch.default_generator"]], "name (torch.tag property)": [[1917, "torch.Tag.name"]], "torch": [[1917, "module-torch"]], "torch.contrib": [[1917, "module-torch.contrib"]], "torch.utils": [[1917, "module-torch.utils"]], "torch.utils.backcompat": [[1917, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1917, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1917, "module-torch.utils.model_dump"]], "logger (class in torch.ao.ns._numeric_suite)": [[1918, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1918, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1918, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1918, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1918, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1918, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1918, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1918, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1918, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1918, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1918, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1918, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1918, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1918, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1918, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1918, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1918, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1918, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1918, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1918, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1918, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1918, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1919, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1919, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1919, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1919, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1919, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1919, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1919, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1919, "module-torch.ao.ns._numeric_suite_fx"]], "get_ignored_functions() (in module torch.overrides)": [[1920, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1920, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1920, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1920, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1920, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1920, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1920, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1920, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1920, "torch.overrides.wrap_torch_function"]], "torch.finfo (class in torch)": [[1921, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1921, "torch.torch.iinfo"]]}})